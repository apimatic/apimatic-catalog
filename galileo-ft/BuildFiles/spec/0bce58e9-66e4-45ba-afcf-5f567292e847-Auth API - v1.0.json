{"openapi":"3.0.2","x-explorer-enabled":false,"x-samples-enabled":false,"info":{"title":"Auth API","description":"# Overview\n\nAuth API is a webhook that allows clients to participate in the authorization\ndecision making process.\n\nGalileo receives authorizaton requests for transactions,\nand uses various criteria for deciding whether to approve or deny the\nrequest (correct PIN, sufficient funds, etc.). Near the end of the authorization\nrequest processing, Galileo can call out to a client system, providing it with\ninformation about the authorization request (including how it plans to\nhandle the request); the client can respond with how it would like the\nauthorization request to be processed.\n\n# Versions\nThere are currently two supported versions of the Auth API - v2.0 and v3.0. The main\ndifference is that v3.0 provides additional details regarding response codes.\nNew integrations use v3.0.\n\n# Security\n\nClients should use HTTPS for their Auth API webhook to ensure fundamental\nsecurity is in place.\n\nGalileo will use a JSON Web Token (JWT) for authenticating with the client's web\nhook. A shared secret will be used for encoding and decoding the token.\nThe payload will have the following claims:\n* `iat` - Issued At\n* `exp` - Expiration Time\n* `iss` - \"galileo\"\n\nThe token will be created using the following Python code:\n```python\nimport jwt\nfrom datetime import datetime, timedelta\npayload = {\n    'exp': datetime.utcnow() + timedelta(seconds=5),\n    'iat': datetime.utcnow(),\n    'iss': 'galileo'\n}\ntoken = jwt.encode(payload, secret, algorithm='HS256')\n```\n\nwhere `secret` is the shared secret.\n\nThe token will be placed in the Authorization header field.\n\n## Security Example\n\nHere is the header value for `exp = 1534274886` and `iat = 1534274881`:\n```\nAuthorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnYWxpbGVvIiwiaWF0IjoxNTM0Mjc0ODgxLCJleHAiOjE1MzQyNzQ4ODZ9.1xUk4iNFGWLo01MyJUHXRlyrNlzwPvDMSXpN38TrblU\n```\n\n# Paths\n\nClients provide a base URL, hosted by a server in the client's system.\nGalileo will invoke the client's webhook at the `/Authorization` endpoint.\n\n# Examples\n\n* Override the response code\n  * Galileo receives an authorization request and plans to approve it\n    (the account has sufficient funds, and so forth).\n  * Galileo invokes the client's Auth API webhook to see if the client\n    wants to modify the processing.\n  * The client sees the transaction amount is above a limit, and indicates\n    the transaction should be declined with code `\"61\"` (`Exceeds Amount Limit`).\n* Client maintains balance\n  * For some products, the client may maintain the balance instead of\n    Galileo.\n  * When Galileo gets a balance inquiry, it will invoke the client's\n    Auth API webhook.\n  * The client can respond with the balance available, in the\n    `available_balance` field.\n* Client initiates transfer\n  * Suppose Galileo receives an authorization request, and the cardholder has\n    insufficient funds; Galileo is ready to decline the request.\n  * But before it does, Galileo invokes the client Auth API webhook.\n  * The client sees the account has insufficient funds, and initiates\n    a transfer, by sending back the `transfer_prn` and `transfer_amount`.\n  * After the transfer, the cardholder has sufficient funds, and Galileo\n    approves the authorization.\n","version":"2.0.0"},"servers":[{"url":"https://example.client.domain.com","description":"Clients will provide the base URL they would like to use for Auth API. The endpoint should use HTTPS."}],"security":[{"bearerAuth":[]}],"paths":{"/basepath/Authorization":{"post":{"summary":"Auth API Webhook 2.0","description":"The Auth API 2.0 webhook permits you to participate in authorization decisions.  For this webhook there is only one verb: `POST`. Galileo sends information about the  authorization request in the body of the HTTP request, in JSON. Your decision should be in the body  of the HTTP response.\n\nIn the authorization information that Galileo sends, the `response_code` is the current response code to be returned to the merchant, unless you override it. Use the `response_code` field in the HTTP response body  to override the authorization response code, as desired.\n\nSee the <a href=\"doc:authorization-controller-api\" target=\"_blank\">Authorization Controller API</a> guide for more information.\n\nOpen the Recipes below to see webhook examples that you can use for testing.\n","operationId":"webhook_authorization_post_2","tags":["Auth API Webhook"],"parameters":[{"name":"X-Request-ID","in":"header","description":"A unique identifier for the HTTP request.","schema":{"type":"string","format":"uuid"},"required":true}],"requestBody":{"description":"Information about the authorization request.","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"auth_type":{"type":"string","description":"All transactions are grouped into three basic message types:\n* `Auth` &mdash; Authorization request. MTI x1xx (authorization or preauthorization over credit rails or preauthorization over debit rails) or x2xx (authorization over debit rails).\n* `Advice` &mdash; Notification of a completed transaction. MTI xx2x. Only a `00` response code is permitted.\n* `Reversal` &mdash; A reversal of a previous authorization. MTI x4xx. May or may not reference the previous authorization.","enum":["Auth","Advice","Reversal"]},"transaction_type":{"type":"string","description":"The transaction type indicates at a lower level what kind of transaction this is.  This field is used to differentiate merchant credits, ATMs, balance inquiries, etc.\n* `Preauth` &mdash; A preauthorization for an estimated amount. Often followed by a completion advice.\n* `Auth` &mdash; Conventional authorization request. Also used with advices and reversals.\n* `ATM` &mdash; ATM withdrawal.\n* `Cash Advance` &mdash; Cash advance from a teller.\n* `Balance Inquiry` &mdash; Balance inquiry from an ATM.\n* `Merchant Credit` &mdash; A credited amount from a merchant. Usually does not reference a previous authorization.\n* `Adjustment` &mdash; Debit adjustment, unrelated to a previous authorization. The merchant is adjusting a cardholder balance.\n* `Payment` &mdash; Loading funds onto a card.\n* `Tokenization` &mdash; A request to tokenize a card for use in a mobile wallet or a request from a merchant to validate a tokenized card for payment.","enum":["Preauth","Auth","ATM","Cash Advance","Balance Inquiry","Merchant Credit","Adjustment","Payment","Tokenization"]},"id":{"type":"string","description":"Unique identifier for this authorization. Example: `\"DHWJtI8zRjuDcgF8hru3oQ\"`","example":"DHWJtI8zRjuDcgF8hru3oQ"},"timestamp":{"type":"string","description":"Date and time when the webhook was sent by Galileo.\n\nFormat is `<timestamp><timezone>`, where `timestamp` is `YYYYMMDD:HHMMSS` and `timezone` is always `MST`, which is Arizona time (GMT -0700). Example: `\"20210315:121504MST\"`","example":"20210315:121504MST"},"network":{"type":"string","description":"Card network name. Possible values:\n\n* `Visa`\n* `Allpoint`\n* `Discover`\n* `Mastercard`\n* `Star`\n* `Pulse`","enum":["Visa","Allpoint","Discover","Mastercard","Star","Pulse"]},"subnetwork":{"type":"string","description":"The subnetwork name. This is the same as `network` if there is no subnetwork. Possible values:\n\n* `Visa`\n* `Visa Interlink`\n* `Visa PLUS`\n* `Mastercard Banknet`\n* `Mastercard Debit Switch`\n* `Discover`\n* `Allpoint`\n* `Star`\n* `Star MoneyPass`\n* `Star Presto`\n* `Pulse`","enum":["Visa","Visa Interlink","Visa PLUS","Mastercard Banknet","Mastercard Debit Switch","Discover","Allpoint","Star","Star MoneyPass","Star Presto","Pulse"]},"account":{"type":"object","properties":{"xid":{"type":"integer","description":"Internal Galileo ID for the account. Example: `5398373`","example":5398373},"cad":{"type":"integer","description":"Galileo-generated ID for the card. Example: `72450868`","example":72450868},"prn":{"type":"string","minLength":12,"maxLength":12,"description":"Galileo payment reference number for the account. 12 digits. Example: `\"155200002022\"`","example":"155200002022"},"pan":{"type":"string","description":"Last four digits of the <<glossary:PAN>> of the card. Example: `\"5198\"`","example":"5198"},"account_status":{"type":"string","description":"Account status code. See the possible values in the <a href=\"ref:api-reference-account-statuses\" target=\"_blank\">Account Statuses</a> enumeration. Example: `\"N\"`"},"card_status":{"type":"string","example":"N","description":"Card status code. See the possible values in the <a href=\"ref:api-reference-card-statuses\" target=\"_blank\">Card Statuses</a> enumeration. Example: `\"N\"`"},"expiration_date":{"type":"string","minLength":4,"maxLength":4,"description":"Card expiration date (format `YYMM`). Example: `\"2103\"`.","example":"2103"},"track_expiration_date":{"type":"string","minLength":4,"maxLength":4,"nullable":true,"description":"Nullable. The expiration date (format: `YYMM`) that was read from the card's magnetic stripe and sent in the ISO message, if present and applicable. For example, this field will not be present for a card-not-present transaction. Example: `\"2103\"`","example":"2103"},"merchant_supplied_expiration_date":{"type":"string","minLength":4,"maxLength":4,"nullable":true,"description":"Nullable. The expiration date (format: `YYMM`) supplied by the merchant, if present and applicable. Example: `\"2103\"`","example":"2103"}},"required":["xid","cad","prn","pan","account_status","card_status","expiration_date","track_expiration_date","merchant_supplied_expiration_date"]},"amounts":{"type":"object","description":"The amounts are always unsigned. To calculate the sign for an amount, start with a factor of &ndash;1, and then apply another factor of &ndash;1 for each of the following criteria:\n* `\"auth_type\": \"Reversal\"`\n* `\"transaction_type\": \"Merchant Credit\"`\n* `\"transaction_type\": \"Payment\"`","properties":{"currency":{"type":"string","minLength":3,"maxLength":3,"description":"The currency code for the amounts, unless otherwise indicated. This is the currency of the cardholder account. ISO 4217 Numeric Currency Code. 3 digits. Example: `\"840\"`","example":"840"},"trans_amount":{"type":"number","format":"float","description":"Transaction amount. Full amount of the authorization request, including upcharges and fees and after any currency conversion is performed. Example: `12.40`","example":12.4},"partial_amount":{"type":"number","format":"float","description":"If `partial_supported: true` and `response_code` is `10` or `87`, this is the amount of the partial approval. Example: `10.00`","example":10},"cashback_amount":{"type":"number","format":"float","description":"Cashback amount requested. This amount is included in `trans_amount`. Example: `5.00`","example":5},"fee_amount":{"type":"number","format":"float","description":"Amount of any fees. This amount is included in `trans_amount`. Example: `1.50`","example":1.5},"available_funds":{"type":"number","format":"float","description":"Amount of funds available to the cardholder before this transaction is applied. For debit accounts, this is the total of all posted transactions with all pending transactions subtracted out plus overdraft, if available. For credit accounts, this is the available credit minus pending authorizations.\n\nIf this authorization request is approved, the cardholder's available funds are affected within a few milliseconds after the approval is sent. Keep in mind that this is the available balance known to Galileo&mdash;if you are the system of record for your program, refer to your records to determine whether the account has sufficient funds. Example: `100.00`","example":100},"amt_til_limit":{"type":"number","format":"float","description":"Amount remaining before a limit is reached. Example: `502.80`","example":502.8},"nearest_limit":{"type":"string","description":"The name of the first limit that would be reached if a partial authorization or denied authorization is overridden via the `override_limit` field. This field is present only when the limit would be reached in overriding the authorization. Example: `\"PCL Daily Limit\"`","example":"PCL Daily Limit"},"local_currency":{"type":"string","minLength":3,"maxLength":3,"description":"ISO 4217 numeric currency code for `local_currency_amount`, which is the currency at the point of sale. 3 digits. Example: `\"124\"`","example":"124"},"local_currency_amount":{"type":"number","format":"float","description":"Amount of the request in the currency at the point of sale. Upcharges and fees are not included. Example: `21.00`","example":21},"settle_currency":{"type":"string","minLength":3,"maxLength":3,"description":"ISO 4217 numeric currency code for `settlement_currency_amount`. To understand what a settlement currency is, see <a href=\"doc:multicurrency-bins\" target=\"_blank\">Multicurrency BINs</a>. 3 digits. Example: `\"400\"`","example":"400"},"settle_currency_amount":{"type":"number","format":"float","description":"Amount of the request in the settlement currency. Upcharges and fees are not included. Example: `17.00`","example":17},"billing_currency":{"type":"string","minLength":3,"maxLength":3,"description":"ISO 4217 numeric currency code for `billing_currency_amount`. Example: `840`","example":840},"billing_currency_amount":{"type":"number","format":"float","description":"The amount of the transaction in the billing currency, which is the currency of the card account. Example: `12.40`","example":12.4},"local_surcharge_amt":{"type":"number","format":"float","description":"The surcharge amount in the currency at the point of sale. Example: `0.50`","example":0.5},"settle_surcharge_amt":{"type":"number","format":"float","description":"The surcharge amount in the settlement currency. Example: `0.75`","example":0.75},"settle_exchange_rate":{"type":"string","description":"The factor used to convert from the local request amount to the settlement amount. The string has the pattern `<shift digit><exchange rate digits>`. The first digit specifies how many places from the right the decimal is moved. For example, `69985022` translates to an exchange rate of 9.985022%. Example: `\"69985022\"`","example":"69985022"},"exchange_rate":{"type":"string","description":"The factor used to convert from the local request amount to the billing amount. The string has the pattern `<shift digit><exchange rate digits>`. The first digit specifies how many places from the right the decimal is moved. For example, `69985022` translates to an exchange rate of 9.985022%. Example: `\"65991234\"`","example":"65991234"},"upcharge_amount":{"type":"number","format":"float","description":"The upcharge amount, which is included in `trans_amount`. Example: `75.00`","example":75}},"required":["currency","trans_amount","cashback_amount","fee_amount","available_funds","amt_til_limit"]},"mcc":{"type":"integer","description":"Merchant category code. This value does not include leading zeros. Example: `5992`","example":5992},"merchant":{"type":"object","properties":{"acquirer_id":{"type":"string","nullable":true,"description":"The acquiring institution ID. Nullable. Example: `\"406160\"`","example":"406160"},"terminal_id":{"type":"string","nullable":true,"description":"The ID for the device that acquired the card information. Nullable. Example: `\"A1Z23B99\"`","example":"A1Z23B99"},"merchant_id":{"type":"string","nullable":true,"description":"The merchant ID, as assigned by the network. Nullable. Example: `\"39AJKEO30634KVN3\"`","example":"39AJKEO30634KVN3"},"merchant_description":{"type":"string","nullable":true,"description":"The merchant description. Nullable. Example: `\"123 WIDGETS MERCHANT BEVERLY HILLS CA\"`","example":"123 WIDGETS MERCHANT     BEVERLY HILLSCA"},"merchant_country":{"type":"string","nullable":true,"description":"ISO 3166-1 country code for the country where the merchant is located. 3 digits. Nullable. Example: `\"840\"`","example":"840"},"merchant_postal_code":{"type":"string","nullable":true,"description":"Postal code, nine characters. Left-justified and padded with zeros. If there are nine zeros, then no postal code was provided. Nullable. Example: `\"902100000\"`","example":"90210"},"merchant_state":{"type":"string","nullable":true,"description":"Two-letter state or provincial designator for the merchant's location. Nullable. Example: `\"NV\"`","example":"NV"},"terminal_network":{"type":"string","nullable":true,"description":"Network to which the terminal belongs, Possible values are `VPA` (Visa PLUS Alliance), `Allpoint`, or `None` (another network). If you are not configured to receive this data, the value will always be `None`. Nullable. Example: `\"VPA\"`","example":"VPA","enum":["Allpoint","VPA","None"]}},"required":["acquirer_id","terminal_id","merchant_id","merchant_description","merchant_country","merchant_postal_code","merchant_state","terminal_network"]},"mti":{"type":"string","description":"Message-type indicator, as defined by ISO 8583. See <a href=\"doc:authorization-controller-api#message-types\" target=\"_blank\">Message types</a> in the _Authorization Controller API_ guide. Example: `\"0200\"`","example":"0200"},"transaction":{"type":"object","description":"Information about the transaction","properties":{"recurring":{"type":"string","description":"Whether a transaction is recurring: `Y` or `N`. Example: `\"N\"`","example":"N"},"cardholder_present":{"type":"string","description":"Whether the physical card was present at the point of sale: `Y` or `N`. Example: `\"Y\"`","example":"Y"},"transaction_initiator_code":{"type":"string","description":"*Mastercard only.* Whether the transaction was initiated by the cardholder or the merchant. Populated only when DE048 subfield 22 is present in the authorization request. See <a href=\"ref:api-reference-cit-and-mit-indicators\" target=\"_blank\">CIT and MIT Indicators</a> for more information. Example: `\"M101\"","example":"M101"}},"required":["recurring","cardholder_present"]},"validation_results":{"type":"object","properties":{"cvv1":{"type":"string","description":"Possible values:\n* `Y` &mdash; Validated\n* `F` &mdash; Failed\n* `N` &mdash; Not present","enum":["Y","F","N"]},"cvv2":{"type":"string","description":"Possible values:\n* `Y` &mdash; Validated\n* `F` &mdash; Failed\n* `N` &mdash; Not present","enum":["Y","F","N"]},"cvv3":{"type":"string","description":"Possible values:\n* `Y` &mdash; Validated\n* `F` &mdash; Failed\n* `N` &mdash; Not present","enum":["Y","F","N"]},"pin":{"type":"string","description":"Possible values:\n* `Y` &mdash; Verified\n* `F` &mdash; Failed\n* `L` &mdash; Locked\n* `M` &mdash; PIN not set\n* `B` &mdash; Blocked\n* `N` &mdash; No PIN passed","enum":["Y","F","L","M","B","N"]},"arqc":{"type":"string","description":"Possible values:\n* `Y` &mdash; Validated\n* `F` &mdash; Failed\n* `N` &mdash; Not present","enum":["Y","F","N"]},"offline_pin":{"type":"string","description":"Possible values:\n* `Y` &mdash; Validated\n* `F` &mdash; Failed\n* `N` &mdash; Not present\n* `E` &mdash; Offline PIN attempts exceeded\n* `P` &mdash; Ignored due to risk params","enum":["Y","F","N","E","P"]},"avs_result":{"type":"string","description":"Result of the <<glossary:AVS>> check. See <a href=\"ref:api-reference-avs-codes\" target=\"_blank\">AVS Codes</a> for valid values.","enum":["Y","A","Z","N","M","T","X","S","U","B","C","D","R"]},"aav":{"type":"string","description":"This is the result of checking 3-D Secure Accountholder Authentication Value. Possible values:\n* `Y` &mdash; Validated\n* `F` &mdash; Failed\n* `N` &mdash; Not present","enum":["Y","F","N"]}},"required":["cvv1","cvv2","cvv3","pin","arqc","offline_pin","avs_result","aav"]},"avs_data":{"type":"object","description":"When the authorization includes an <<glossary:AVS>> request, this object contains the data that Galileo used to calculate the AVS response.","properties":{"zip":{"type":"string","description":"Postal code provided by the cardholder. Example: `\"84121\"`","example":"84121"},"address":{"type":"string","description":"Numbers in the first address line, provided by the cardholder. Example: `\"1235\"","example":"1235"}},"required":["zip","address"]},"international":{"type":"boolean","description":"Whether this is an international transaction relative to the account's base currency. Example: `true`"},"response_code":{"type":"string","description":"Authorization response code, which specifies whether a transaction is approved or denied. See the <a href=\"ref:api-reference-events-authorization-response-codes\" target=\"_blank\">Authorization Response Codes</a> enumeration for possible values. Example: `\"05\"`","example":"05"},"auth_id":{"type":"integer","description":"Galileo-generated ID for the authorization. Use this ID to track the transaction throughout the Galileo system. For an explanation of how these IDs are generated, see <a href=\"doc:transaction-ids#authorization-identifiers\" target=\"_blank\">Authorization identifiers</a> in the _Transaction IDs_ guide. Example: `13371854`","example":13371854},"partial_supported":{"type":"boolean","description":"Whether the merchant supports partial authorizations."},"stip":{"type":"object","description":"This object is present when a <<glossary:STIP>> transaction is processed by the network. To receive some of the fields, you must have the STIPR parameter set. See <a href=\"doc:authorization-controller-api#stand-in-processing\" target=\"_blank\">Stand-in processing</a> in the _Authorization Controller API_ guide for more information.","properties":{"detail":{"type":"string","description":"Advice reason code relayed from the network, which provides information on the STIP transaction. See <a href=\"ref:api-reference-advice-reason-codes\" target=\"_blank\">Advice Reason Codes</a> for valid values. Example: `\"4000000\"` or `\"9020\"`","example":"9020"},"stip_decision":{"type":"string","description":"_STIPR only_. The <a href=\"ref:api-reference-events-authorization-response-codes\" target=\"_blank\">Authorization Response Code</a> that was returned to the merchant by the STIP process. Example: `\"51\"`"},"additional_detail":{"type":"string","description":"_STIPR only_. More information about the STIP transaction. See <a href=\"ref:api-reference-stip-additional-detail\" target=\"_blank\">STIP Additional Detail</a> for valid values. Example: `\"000003\"`"},"is_stip_denial":{"type":"string","description":"_STIPR only_. Whether the transaction was denied by the STIP process: `Y` (denied) or `N` (approved)."}}},"incremental_auth":{"type":"boolean","description":"If this is an incremental authorization, this field is `true` and `original_id` contains the `auth_id` of the previous authorization in the sequence."},"entry_type":{"type":"string","description":"Possible values:\n* `Card Not Present` &mdash; Online, mail order or telephone order\n* `Card on File` &mdash; _Mastercard only._ Card number is kept on file\n* `Contactless` &mdash; Paypass contactless transaction\n* `E-Commerce`  &mdash; _Mastercard only._ The card was used on an ecommerce site\n* `EMV Chip` &mdash; The card has an EMV chip that was inserted in an EMV slot\n* `EMV Contactless` &mdash; Contactless transaction with EMV chip card\n* `EMV Fallback` &mdash; Unable to use the EMV chip: fallback to magstripe\n* `Magnetic Stripe` &mdash; The magnetic stripe was read\n* `Contactless` &mdash; Contactless transaction with magstripe card\n* `Card Not Present` &mdash; Online, mail order or telephone order\n* `Manual` &mdash; Manually entered information\n* `Other` &mdash; None of the above","enum":["EMV Chip","EMV Contactless","EMV Fallback","Magnetic Stripe","Contactless","Card Not Present","Manual","Other"]},"pin_entry_capability":{"type":"string","description":"Possible values:\n* `Capable` &mdash; Terminal has PIN-entry capability\n* `Incapable` &mdash; Terminal has no PIN-entry capability\n* `Inoperative` &mdash; Terminal has PIN-entry capability but it is not working\n* `Other` &mdash; Unknown PIN-entry capability, or not applicable.","enum":["Capable","Incapable","Inoperative","Other"]},"payment_info":{"type":"object","properties":{"sender_name":{"type":"string","description":"Name of the sender of the payment. Example: `\"John Doe\"`.","example":"John Doe"},"fund_source":{"type":"string","description":"Source of the payment. Example: `\"Visa Prepaid\"`.","example":"Visa Prepaid"}}},"original_id":{"type":"integer","description":"The `auth_id` of a previous authorization that is linked to this authorization. For reversals or completions, this is the `auth_id` of the authorization that is being reversed or completed. For incremental authorizations, this is the `auth_id` of the previous authorization in the series.","example":13663253},"risk_score":{"type":"integer","description":"The risk score provided by the network. Mastercard range: 0-999, Visa range: 0-99. Higher values indicate higher risk. Product settings determine whether the threshold was exceeded. Example: `23`","example":23},"token_type":{"type":"string","description":"If this is a tokenized transaction, its type. Possible values:\n* `Apple Inc`\n* `Google Inc.`\n* `Masterpass`\n* `Merchant`\n* `Microsoft`\n* `Samsung Corporation`\n* `Visa Checkout`","enum":["Apple Inc.","Google Inc.","Masterpass","Merchant","Microsoft","Samsung Corporation","Visa Checkout"]},"rules_denied":{"type":"array","description":"Valid only when using Galileo's fraud-rules engine. List of fraud rules that caused a decline. Set the RULAP product parameter to receive these rules.","items":{"type":"string"}},"rules_warned":{"type":"array","description":"Valid only when using Galileo's fraud-rules engine. List of fraud rules that caused a warning. Set the RULAP product parameter to receive these rules.","items":{"type":"string"}},"response_code_list":{"type":"array","description":"List of response codes that Galileo has computed. This list does not contain `\"00\"`. May be empty. Example: `[\"05\", \"51\"]`.","items":{"type":"string","description":"Authorization response code, which specifies whether a transaction is approved or denied. See the <a href=\"ref:api-reference-events-authorization-response-codes\" target=\"_blank\">Authorization Response Codes</a> enumeration for possible values. Example: `\"05\"`","example":"05"}},"bai":{"type":"string","description":"Business application identifier. Visa only. See the <a href=\"ref:api-reference-business-application-identifier\" target=\"_blank\">Business Application Identifier</a> enumeration for possible values. Example: \"FD\"","example":"FD"},"ecommerce":{"type":"object","description":"This object contains information related to <<glossary:3DS>> authentication, if the website supports 3DS. Included in this information is the result of validating the AAV (account-holder authentication value) for Mastercard or the CAVV (cardholder authentication verification value) for Visa.\n\nE-commerce information is provided for Visa, Mastercard, and Discover only. None of the other networks provide 3DS information in their authorization requests, so for those network requests, `is_ecommerce: null` (unknown) and the `ecommerce` object will not be present. Keep in mind that some combinations of these values shift the liability from the merchant to the issuer. Refer to the documentation from each network to see which values result in a liability shift.","properties":{"is_ecommerce":{"type":"boolean","nullable":true,"description":"Nullable. Possible values:\n* `true` &mdash; This transaction took place on a website that supports 3DS. The remaining fields in the `ecommerce` object will be present and non-null if known.\n* `false` &mdash; This transaction did not take place on a website that supports 3DS. None of the remaining fields in the `ecommerce` object will be present.\n* `null` &mdash; Unknown whether this transaction took place on a website that supports 3DS, because there was inconsistent or missing information in the transaction. In some cases the `raw_eci` will still be provided."},"raw_eci":{"type":"string","description":"The electronic commerce indicator (ECI) that is sent in the authorization request. The meaning of this value varies by network. Some possible values include `05` (Visa), `212` (Mastercard), or `5` (Discover). In the case of Mastercard, the value in this field is the Security Level Indicator (SLI) rather than the ECI. Refer to the documentation from each network to understand how to interpret this value, or refer to the fields below to see how the value is broken out.","example":212},"aav_indicator":{"type":"string","description":"Universal Cardholder Authentication Field (UCAF). Example: `\"kE\"`","example":"kE"},"merchant_asserts_data_protection":{"type":"boolean","nullable":true,"description":"Nullable. Possible values:\n* `true` &mdash; The merchant or acquirer asserts that the communication channel between the cardholder and the merchant is encrypted, such as with TLS/HTTPS.\n* `false` &mdash;  The merchant or acquirer makes no guarantee about the security of the communication channel with the cardholder, meaning that HTTP may have been used instead of HTTPS. You should proceed with caution when this field is `false`. A malicious third party could have compromised the transaction.\n* `null` &mdash;  Unknown, because there is insufficient information in the transaction message, or the network doesn't provide this information."},"merchant_asserts_authentication_attempted":{"type":"boolean","nullable":true,"description":"Nullable. Possible values:\n* `true` &mdash; The merchant or acquirer asserts that it attempted to authenticate the cardholder using <<glossary:3DS>>, and that one of these conditions is true:\n   * Authentication was done, meaning that a full, 3DS authentication flow happened and the cardholder was authenticated. The cardholder was challenged and passed the challenges.\n   * Authentication was not done because Galileo or the network decided that full 3DS authentication was not necessary.\n   * The frictionless flow or 3DS authentication has not been set up for this product.\n* `false` &mdash; One of the following occurred:\n   * The merchant or acquirer did not try to authenticate the cardholder.\n   * The merchant did attempt to authenticate the cardholder but encountered an error and decided to proceed anyway.\n   * The cardholder authentication failed.\n   * The merchant asserted that it attempted to authenticate, but it sent invalid data in the transaction and the network downgraded the merchant's assertion. For Visa, if a merchant doesn't send a CAVV, Visa will automatically downgrade the ECI from `05` or `06` to `07`.\n* `null` &mdash; Unknown. There is insufficient information in the transaction message, or the network didn't provide this information.\n"},"merchant_asserts_authenticated":{"type":"boolean","nullable":true,"description":"Nullable. Possible values:\n* `true` &mdash; The merchant or acquirer asserts that it received a fully authenticated CAVV/AAV using 3DS, meaning that either the cardholder was fully authenticated with a challenge or the frictionless flow was used.\n* `false` &mdash; The merchant or acquirer makes no assertion whether the cardholder is fully authenticated using 3DS, meaning that the merchant or network was unable to carry out the entire 3DS flow, and the merchant was given an \"attempt\" CAVV/AAV.\n* `null` &mdash; Unknown. There is insufficient information in the transaction message, or the network didn't provide this information."},"merchant_authentication_assertions_validated":{"type":"boolean","nullable":true,"description":"Nullable. This field contains validation results of the merchant's assertions.  Possible values:\n* `true` &mdash; The merchant's assertions have been validated, meaning that there is a CAVV or AAV in the transaction message and it is valid.\n   * If `merchant_asserts_authentication_attempted: true` and this field is `true`, then the merchant did attempt to authenticate the cardholder.\n   * If `merchant_asserts_authenticated: true` and this field is `true`, then the merchant did send a fully authenticated CAVV/AAV.\n   * **Note:** Visa allows sending a CAVV even when there is no data protection (`merchant_asserts_data_protection: false`). You should proceed with caution with such transactions, even when the CAVV is valid.\n* `false` &mdash; The merchant's assertions could not be validated, meaning that there is a CAVV/AAV in the authorization request but it is not valid. In almost all cases you should decline the transaction.\n* `null` &mdash; No attempt was made to validate the merchant's assertions. One of the following is true:\n  * The CAVV/AAV was not present. For example, if `merchant_asserts_authentication_attempted: false`, the merchant probably didn't send a CAVV/AAV.\n  * The CAVV/AAV was not validated, because the product has not been configured to do CAVV/AAV validation. You should proceed with caution when CAVV/AAV validation is not configured, because now you are trusting the merchant's assertion.\n\n**Note:** This field does not validate the `merchant_asserts_data_protection` field, which is the merchant's assertion about HTTPS/TLS.\n"}},"required":["is_ecommerce"]},"eligible_for_balance_return":{"type":"boolean","description":"This field indicates whether the cardholder's balance can be returned. If you maintain the balance, this field indicates whether you should return the balance to Galileo.\n\nThis field is `true` if the transaction is eligible for getting the cardholder's balance in the response sent back to the merchant/acquirer. Eligibility is determined by the MCBLC, MCBLS, and MCBLU product parameters for Mastercard and VSBLA for Visa.\n\nPopulate `available_balance` in the response if you hold the balance. If you do not populate it, Galileo will return the balance that it has.\n\nThis field is always `true` when `transaction_type: Balance Inquiry`."},"emv":{"type":"object","description":"Additional EMV information. Also see EMV entry types under `entry_type` and EMV-related fields under `validation_results`.","properties":{"is_emv":{"type":"boolean","description":"This field is `true` if the `entry_type` is `EMV Chip` or `EMV Contactless`. When this value is `true`, the remaining fields below will be present, although they may be only partially populated, depending on the card network or EMV entry type."},"brand":{"type":"string","description":"Type of EMV. Possible values:\n* `visa`\n* `mastercard`\n* `discover`\n\nThe card network may not match the EMV brand. For example, Visa EMV technology can be used on a card whose BIN is serviced through Allpoint.","enum":["visa","mastercard","discover"]},"terminal_verification_results":{"type":"object","description":"This object interprets the status bits sent by the payment terminal, based on what happened during the transaction, such as whether the cardholder entered a valid PIN. Selected bits of the TVR have been separated out into the Boolean fields below.\n\nUse these fields with caution: There can be inconsistencies between different networks, and some bits are not applicable for certain entry types such as `EMV Contactless`. For example, Discover states that byte 3, bits 4 and 5 should be ignored for contactless transactions.","properties":{"raw":{"type":"string","nullable":true,"description":"_Nullable._ The raw TVR (as a hex string) that was received in the ISO message, if present. If not present this field is null and the remaining fields in the `terminal_verification_results` object will not be present. Example: `\"0000000000\"`"},"online_pin_entered":{"type":"boolean","description":"_Byte 3, bit 3._ A PIN is being sent in the ISO message for validation instead of using offline validation (where the EMV chip on the card validates the PIN). "},"pin_required_pad_pres_but_no_pin_entered":{"type":"boolean","description":"_Byte 3, bit 4._ The merchant or cardholder chose to bypass PIN entry, and the PIN pad was operational."},"pin_required_no_pad_or_bad_pad":{"type":"boolean","description":"_Byte 3, bit 5._ A PIN was required but there was no PIN pad, or the PIN pad wasn't working."},"pin_try_limit_exceeded":{"type":"boolean","description":"_Byte 3, bit 6._ The PIN-try limit was exceeded. For example, the terminal read the PIN-try counter on the chip and it was zero."},"cardholder_verification_not_successful":{"type":"boolean","description":"_Byte 3, bit 8._ The terminal indicates that cardholder verification was not successful."}},"required":["raw"]}},"required":["is_emv"]},"version":{"type":"string","description":"Auth API version of this webhook. Example: `\"2.0\"`","example":"2.0"},"iias_info":{"type":"object","description":"Indicates whether the item or service being purchased is an eligible medical expense. Data from DE054 and DE062. Visa only. This object is present only when <<glossary:IIAS>> information is included with the authorization request. For more information, see <a href=\"doc:auth-api-field-detail#iias-fields\" target=\"_blank\">IIAS fields</a> in the _API Field Detail_ guide.","properties":{"iias_indicator":{"type":"string","description":"`M` indicates that the card is an FSA, HRA, or HSA card. Example: `\"M\"`"},"clinic_total":{"type":"number","format":"float","description":"Total purchase amount at the point of sale. Example: `\"120.34\"`"},"qualified_healthcare_products_total":{"type":"number","format":"float","description":"Amount of `clinic_total` that qualifies as a healthcare product. Example: `\"64.87\"`"}}},"advanced_auth_api_fields":{"type":"object","description":"Selected subfields parsed from the ISO 8583 message. These fields are sent only when ADVAF is set and only by arrangement with Galileo. See <a href=\"doc:auth-api-field-detail#advanced-auth-api-fields\" target=\"_blank\">Advanced Auth API Fields</a> for more information.\nExample: `\"advanced_auth_api_fields\": {\"61\": {\"subfield 1\": <raw subfield contents>, \"subfield 2\": <raw subfield contents>}}`","properties":{"[data element number]":{"type":"object","description":"Number of the data element (DE).","properties":{"subfield 1":{"type":"string","description":"Raw contents of the subfield."},"subfield 2":{"type":"string","description":"Raw contents of the subfield."},"subfield N":{"type":"string","description":"Raw contents of the subfield."}}}}},"tar_info":{"type":"object","description":"Tokenization authorization request (TAR) data is provided by the network during mobile wallet provisioning. The following are the subfields in a tokenization authorization request. Note the distinctions between Mastercard and Visa networks.\n\nIf you do not receive this data for provisioning approved BINs, contact a Galileo representative for assistance.","properties":{"correlation_id":{"type":"string","description":"_Mastercard only._ Identifier assigned that can be used by the issuer to associate related tokenization requests and notification messages. 14 alphanumeric characters. Example: `\"D0002688797932\"`","example":"D0002688797932"},"pan_source":{"type":"string","description":"For Mastercard, this field identifies the method by which the cardholder is attempting to tokenize a PAN. Example: `\"2\"`\n- `1` &mdash; Card on file\n- `2` &mdash; Card added manually\n- `3` &mdash; Card added via application\n\n\nFor Visa, this tag, if present, identifies whether it’s push provisioning. Example: `\"03\"`\n- `01` &mdash; Key entered\n- `02` &mdash; On file\n- `03` &mdash; Mobile banking application\n- `04` &mdash; Token\n- `05` &mdash; Chip dip\n- `06` &mdash; Contactless\n\nIf the value is `03`, then it is push provisioning.","enum":["1","2","3","01","02","03","04","05","06"]},"payment_app_instance_id":{"type":"string","description":"_Mastercard only._ Identifier associated with the payment application instance installed onto the customer's device. 48 alphanumeric characters. Example: `\"tSnaYXYaTSkz7DoGPz_wvVLhieie4lyhMPuMrvXx4kdAwkgV\"`","example":"tSnaYXYaTSkz7DoGPz_wvVLhieie4lyhMPuMrvXx4kdAwkgV"},"device_ip":{"type":"string","description":"For Mastercard, this field is the variable-length IP address. Each octet of the IP address is converted to hex and joined into one string, with the order maintained. 8 alphanumeric characters. Example: `\"83BF5B74\"`\n\nFor Visa, this field contains the IP address of the device at the time of the provisioning request. 15 characters maximum. Example: `\"255.255.255.255\"`"},"acc_id_hash":{"type":"string","description":"_Mastercard only._ Contains the customer’s account ID associated with the wallet provider as a PBKDF2 hash. This account ID is typically the email address. The PBKDF2 function is performed using 10 iterations, a salt, and the lowercase account ID as the password. The salt is calculated by taking the lowercase UTF-8 bytes from the account ID and performing a SHA-256 hash operation.\n\n**Example**:\nInput (Password): `csharp@walletprovider.com`\nSalt: `\"41404d1bca85ddb59ab21466e277ac1ac5f61470be120c82a21b1e45b5248123\"`\nCount: 10\nOutput: `\"7098014b646d44c6f3b454c5d54f7a32b3b46e2b0c8e2367f3e5307e3036dfe6\"`","example":"7098014b646d44c6f3b454c5d54f7a32b3b46e2b0c8e2367f3e5307e3036dfe6"},"cardholder_name":{"type":"string","description":"_Mastercard only._ Contains the name of the cardholder. The format is represented in one of these two formats:\n- LASTNAME/FIRSTNAME with the names delimited by a slash `/`. Example: `\"SMITH/JOE\"`\n- FIRSTNAME LASTNAME. Example: `\"JOE SMITH\"`\n\n27 characters maximum. If the cardholder’s name is longer than 27 positions, the data is truncated.","example":"SMITH/JOE"},"tokenization_recommendation":{"type":"integer","description":"The tokenization decision suggested by the wallet provider.\n\nFor Mastercard, possible values are:\n- `0` &mdash; Decline\n- `1` &mdash; Approve\n- `2` &mdash; Requires additional authentication\n\nFor Visa, possible values are:\n- `0` &mdash; Unconditionally approved\n- `1` &mdash; Conditionally approved with further cardholder verification\n- `2` &mdash; Not approved\n\nExample: `1`","enum":[0,1,2]},"tokenization_recommendation_standard_ver":{"type":"string","description":"The version of the standards the wallet provider is using to determine the suggested tokenization recommendation.\n\n- For Mastercard, this value is 2 digits. Example: `\"01\"`\n- For Visa, this value is a decimal value. Example: `\"0002.00\"`"},"device_score":{"type":"integer","description":"The score assigned by the wallet provider for the device. The score is returned as a value between `1` and `5`, with `5` being most trusted. Example: `5`","enum":[1,2,3,4,5]},"account_score":{"type":"integer","description":"_Mastercard only._ Score assigned by the wallet provider for the <<glossary:PAN>>. Value between`1` and `5`, with `5` being most trusted. Example: `5`","enum":[1,2,3,4,5]},"active_tokens":{"type":"string","description":"_Mastercard only._ Number of existing, active tokens for the PAN, excluding card-on-file tokens. Space-filled when the requested token is digitized to a server. Example: `\"08\"`","example":"08"},"tokenization_recommendation_reason_code":{"type":"string","description":"Indicates the specific reason the wallet provider is suggesting the tokenization recommendation.\n\nFor Mastercard, the data of this field is a hex-encoded bitmap, whereby each bit corresponds to a specific reason code. If the wallet provider returns no reason, this field will contain spaces. Displayed in values of 1. Example: `\"008011\"`\n\nSee the possible values for Mastercard and Visa in the <a href=\"ref:api-reference-tokenization-recommendation-reason-codes\" target=\"_blank\">Tokenization Recommendation Reason Codes</a>."},"location":{"type":"string","description":"Latitude and longitude points where the cardholder's device was located at the time the tokenization was attempted.\n\n- For Mastercard. The decimal latitude and longitude values, converted to hexadecimal. Example: `\"2F197A2E1\"`\n- For Visa, when available, the latitude and longitude points are provided with up to 4 digits of precision or rounded to a less-granular level.  Example:`\"+39.13/-77.55\"`"},"last_four_digits":{"type":"string","description":"_Mastercard only._ Last four digits of the cardholder's mobile phone number associated with the active wallet. Example: `\"0885\"`","example":"0885"},"token_type":{"type":"string","description":"_Mastercard only._ The type of requested token. Example: `\"S\"`\n- `C` &mdash; Mastercard cloud-based payments\n- `F` &mdash; Card on file\n- `S` &mdash; Embedded secure element","enum":["C","F","S"]},"consumer_identifier":{"type":"string","description":"_Mastercard only._ Unique identifier for each cardholder, which must be verified by the financial institution before a cardholder can add their credentials to the payment-enabled device. Default: blank."},"device_type":{"type":"string","description":"_Visa only._ Device type value. Example: `\"01\"`\n- `00` &mdash; Unknown\n- `01` &mdash; Mobile phone\n- `02` &mdash; Tablet\n- `03` &mdash; Watch\n- `04` &mdash; Mobile phone or tablet\n- `05` &mdash; Personal computer","enum":[0,1,2,3,4,5]},"device_language":{"type":"string","description":"_Visa only._ Language used by the cardholder’s device. 3 characters maximum. Example: `\"eng\"` for English.","example":"eng"},"device_id":{"type":"string","description":"_Visa only._ The device ID. 48 characters maximum. Example: `\"MTgwOTIxMTQzMjAwMTA0LUh0\"`","example":"MTgwOTIxMTQzMjAwMTA0LUh0"},"device_number":{"type":"string","description":"_Visa only._ Contains the device number, or the full or partial telephone number, when available. Provided by the Visa network. Example: `\"15127717396\"`","example":"15127717396"},"device_name":{"type":"string","description":"_Visa only._ The name of the device given by the cardholder. 16 characters maximum. Value is truncated when longer than maximum length. Example: `\"Work Phone\"`","example":"Work Phone"},"account_id":{"type":"string","description":"_Visa only._ Contains the wallet account ID. Example: `\"eg2t6TyJQ2G8NIraaCypzg\"`","example":"eg2t6TyJQ2G8NIraaCypzg"},"account_email_addr":{"type":"string","description":"_Visa only._ Contains the hashed full email address for the cardholder account that was sent by the wallet provider. Example: `\"\\xc1_\\xf8\\xc8_/\\xd1%%\\x06\\xc4?_\"`","example":"Á_øÈ_/Ñ%%\u0006Ä?_"}},"required":["correlation_id","pan_source","payment_app_instance_id","device_ip","acc_id_hash","cardholder_name","tokenization_recommendation","tokenization_recommendation_standard_ver","device_score","account_score","active_tokens","location","last_four_digits","token_type","consumer_identifier","device_id"]},"fleet_info":{"type":"object","description":"Information that is provided for cards with fleet-card BINs, which are Mastercard only. See <a href=\"doc:fleet-cards\" target=\"_blank\">Fleet Cards</a> for more information.","properties":{"fleet_card_driver_number":{"type":"integer","description":"Driver ID. 17 digits maximum. Example: `06123456`"},"fleet_card_vehicle_number":{"type":"integer","description":"Vehicle ID. 17 digits maximum. Example: `03123`"}}},"aifi_fields":{"type":"object","description":"_Colombia only_. Information related to <a href=\"doc:colombia-atm-issuer-fee-inquiries\" target=\"_blank\">ATM issuer-fee inquiries</a>.","properties":{"issuer_fee_inquiry_indicator":{"type":"number","description":"Contains `\"01\"` to indicate issuer-fee inquiry request. DE112SE035."},"pos_transaction_status":{"type":"integer","description":"Contains `\"8\"` to indicate account-status inquiry (ASI) service. DE061SF7."},"issuer_fee_amt":{"type":"number","description":"Amount of the ATD (domestic ATM) fee. This amount is displayed to the cardholder as the issuer fee. DE112SE036. Example: `\"15000.00\"`"}}},"merchant_advice_code":{"type":"string","description":"_Mastercard only._ Contains the supported merchant advice code (MAC), if applicable: `03`, `40` or `41`. The GMACD parameter must be set to `Y` to enable MAC decisioning.","example":"40"}},"required":["auth_type","transaction_type","id","timestamp","network","subnetwork","account","amounts","mcc","merchant","mti","transaction","validation_results","international","response_code","auth_id","partial_supported","entry_type","response_code_list","ecommerce","eligible_for_balance_return","emv","version"]}}}},"responses":{"200":{"description":"Use the fields in this schema to respond with your decision plus any instructions for Galileo. ","content":{"application/json":{"schema":{"type":"object","properties":{"response_code":{"type":"string","description":"Authorization response code, which specifies whether a transaction is approved or denied. See the <a href=\"ref:api-reference-events-authorization-response-codes\" target=\"_blank\">Authorization Response Codes</a> enumeration for possible values. Example: `\"05\"`","example":"05"},"avs_response":{"type":"string","description":"Use this field to override `avs_result`, if you believe `avs_result` is wrong. See <a href=\"ref:api-reference-avs-codes\" target=\"_blank\">AVS Codes</a> for valid values."},"override_limit":{"type":"boolean","description":"Use this field to override authorization limits, if permitted. If this field is `true` then any limits that would be reached are overridden. Example: `true`","example":true},"partial_amount":{"type":"number","format":"float","minimum":0,"description":"If `response_code` indicates a partial approval (`10` or `87`), this is the partial amount to approve. Example: `5.00`","example":5},"transfer_prn":{"type":"string","minLength":12,"maxLength":12,"description":"If you want to perform a transfer to cover a lack of funds, this is the PRN of the account to supply the funds. Example: `\"155200002717\"`","example":"155200002717"},"transfer_amount":{"type":"number","format":"float","minimum":0,"description":"The amount to transfer from the `transfer_prn` to the cardholder account. Example: `20.00`","example":20},"source_transfer_type":{"type":"string","description":"The transaction type for the adjustment on the source account in `transfer_prn`. Use the value that Galileo supplied. Case sensitive. Default: `pc`. Example: `\"lm\"`","minLength":2,"maxLength":2,"example":"pc"},"dest_transfer_type":{"type":"string","description":"The transaction type for the adjustment to the cardholder account. Use the value that Galileo supplied. Case sensitive. Default: `PC` Example: `\"LM\"`","minLength":2,"maxLength":2,"example":"PC"},"available_balance":{"type":"number","format":"float","description":"If `eligible_for_balance_return: true` AND you hold the ledger for the card account, populate this field with the card account's available balance to spend. Otherwise, Galileo sends the balance it has in the response message. The amount should be in the account currency. (The card networks will perform currency conversion as needed.) Example: `250.00`","example":250},"savings_balance":{"type":"number","format":"float","description":"If `eligible_for_balance_return: true` AND you hold the ledger for the cardholder's savings account, populate this field with the savings account balance in the currency of the account. Otherwise, Galileo sends the balance it has in the response message. Example: `4000.00`","example":4000},"available_credit":{"type":"number","format":"float","description":"If `eligible_for_balance_return: true` AND you hold the ledger for the cardholder's credit account, populate this field with the credit limit remaining in the currency of the account. Otherwise, Galileo sends the remaining limit it has in the response message. Example: `1500.00`","example":1500},"merchant_advice_code":{"type":"string","description":"*Mastercard only.* Use this field to override MAC decisioning, if permitted. Leave blank if you do not wish to override Galileo’s MAC decision. Galileo reverts to the original decision if an invalid MAC is provided. The MACO product parameter must be set to `Y` to enable overrides.","example":"41"}},"required":["response_code"]},"examples":{"Approve Transaction":{"summary":"Approve transaction","value":{"response_code":"00"}},"Override avs_result":{"summary":"Override AVS result","value":{"response_code":"00","avs_response":"Y"}},"Transfer":{"summary":"Real-time transfer","value":{"response_code":"00","transfer_prn":"155200002717","transfer_amount":20,"source_transfer_type":"pc","dest_transfer_type":"PC","available_balance":250}},"Do Not Honor":{"summary":"Override approval","value":{"response_code":"05"}}}}}}}}},"/base_path/Authorization":{"post":{"summary":"Auth API Webhook 3.0","description":"The Auth API 3.0 webhook permits you to participate in authorization decisions.  For this webhook there is only one verb: `POST`. Galileo sends information about the  authorization request in the body of the HTTP request, in JSON. Your decision should be in the body  of the HTTP response.\n\nIn the authorization information that Galileo sends, the `response_code` is the current response code to be returned to the merchant, unless you override it. Use the `response_code` field in the HTTP response body  to override the authorization response code, as desired.\n\nSee the <a href=\"doc:authorization-controller-api\" target=\"_blank\">Authorization Controller API</a> guide for more information.\n\nOpen the Recipes below to see webhook examples that you can use for testing.\n","operationId":"webhook_authorization_post_3","tags":["Auth API Webhook"],"parameters":[{"name":"X-Request-ID","in":"header","description":"A unique identifier for the HTTP request.","schema":{"type":"string","format":"uuid"},"required":true}],"requestBody":{"description":"Information about the authorization request.","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"auth_type":{"type":"string","description":"All transactions are grouped into three basic message types:\n* `Auth` &mdash; Authorization request. MTI x1xx (authorization or preauthorization over credit rails or preauthorization over debit rails) or x2xx (authorization over debit rails).\n* `Advice` &mdash; Notification of a completed transaction. MTI xx2x. Only a `00` response code is permitted.\n* `Reversal` &mdash; A reversal of a previous authorization. MTI x4xx. May or may not reference the previous authorization.","enum":["Auth","Advice","Reversal"]},"transaction_type":{"type":"string","description":"The transaction type indicates at a lower level what kind of transaction this is.  This field is used to differentiate merchant credits, ATMs, balance inquiries, etc.\n* `Preauth` &mdash; A preauthorization for an estimated amount. Often followed by a completion advice.\n* `Auth` &mdash; Conventional authorization request. Also used with advices and reversals.\n* `ATM` &mdash; ATM withdrawal.\n* `Cash Advance` &mdash; Cash advance from a teller.\n* `Balance Inquiry` &mdash; Balance inquiry from an ATM.\n* `Merchant Credit` &mdash; A credited amount from a merchant. Usually does not reference a previous authorization.\n* `Adjustment` &mdash; Debit adjustment, unrelated to a previous authorization. The merchant is adjusting a cardholder balance.\n* `Payment` &mdash; Loading funds onto a card.\n* `Tokenization` &mdash; A request to tokenize a card for use in a mobile wallet or a request from a merchant to validate a tokenized card for payment.","enum":["Preauth","Auth","ATM","Cash Advance","Balance Inquiry","Merchant Credit","Adjustment","Payment","Tokenization"]},"id":{"type":"string","description":"Unique identifier for this authorization. Example: `\"DHWJtI8zRjuDcgF8hru3oQ\"`","example":"DHWJtI8zRjuDcgF8hru3oQ"},"timestamp":{"type":"string","description":"Date and time when the webhook was sent by Galileo.\n\nFormat is `<timestamp><timezone>`, where `timestamp` is `YYYYMMDD:HHMMSS` and `timezone` is always `MST`, which is Arizona time (GMT -0700). Example: `\"20210315:121504MST\"`","example":"20210315:121504MST"},"network":{"type":"string","description":"Card network name. Possible values:\n\n* `Visa`\n* `Allpoint`\n* `Discover`\n* `Mastercard`\n* `Star`\n* `Pulse`","enum":["Visa","Allpoint","Discover","Mastercard","Star","Pulse"]},"subnetwork":{"type":"string","description":"The subnetwork name. This is the same as `network` if there is no subnetwork. Possible values:\n\n* `Visa`\n* `Visa Interlink`\n* `Visa PLUS`\n* `Mastercard Banknet`\n* `Mastercard Debit Switch`\n* `Discover`\n* `Allpoint`\n* `Star`\n* `Star MoneyPass`\n* `Star Presto`\n* `Pulse`","enum":["Visa","Visa Interlink","Visa PLUS","Mastercard Banknet","Mastercard Debit Switch","Discover","Allpoint","Star","Star MoneyPass","Star Presto","Pulse"]},"account":{"type":"object","properties":{"xid":{"type":"integer","description":"Internal Galileo ID for the account. Example: `5398373`","example":5398373},"cad":{"type":"integer","description":"Galileo-generated ID for the card. Example: `72450868`","example":72450868},"prn":{"type":"string","minLength":12,"maxLength":12,"description":"Galileo payment reference number for the account. 12 digits. Example: `\"155200002022\"`","example":"155200002022"},"pan":{"type":"string","description":"Last four digits of the <<glossary:PAN>> of the card. Example: `\"5198\"`","example":"5198"},"account_status":{"type":"string","description":"Account status code. See the possible values in the <a href=\"ref:api-reference-account-statuses\" target=\"_blank\">Account Statuses</a> enumeration. Example: `\"N\"`"},"card_status":{"type":"string","example":"N","description":"Card status code. See the possible values in the <a href=\"ref:api-reference-card-statuses\" target=\"_blank\">Card Statuses</a> enumeration. Example: `\"N\"`"},"expiration_date":{"type":"string","minLength":4,"maxLength":4,"description":"Card expiration date (format `YYMM`). Example: `\"2103\"`.","example":"2103"},"track_expiration_date":{"type":"string","minLength":4,"maxLength":4,"nullable":true,"description":"Nullable. The expiration date (format: `YYMM`) that was read from the card's magnetic stripe and sent in the ISO message, if present and applicable. For example, this field will not be present for a card-not-present transaction. Example: `\"2103\"`","example":"2103"},"merchant_supplied_expiration_date":{"type":"string","minLength":4,"maxLength":4,"nullable":true,"description":"Nullable. The expiration date (format: `YYMM`) supplied by the merchant, if present and applicable. Example: `\"2103\"`","example":"2103"}},"required":["xid","cad","prn","pan","account_status","card_status","expiration_date","track_expiration_date","merchant_supplied_expiration_date"]},"amounts":{"type":"object","description":"The amounts are always unsigned. To calculate the sign for an amount, start with a factor of &ndash;1, and then apply another factor of &ndash;1 for each of the following criteria:\n* `\"auth_type\": \"Reversal\"`\n* `\"transaction_type\": \"Merchant Credit\"`\n* `\"transaction_type\": \"Payment\"`","properties":{"currency":{"type":"string","minLength":3,"maxLength":3,"description":"The currency code for the amounts, unless otherwise indicated. This is the currency of the cardholder account. ISO 4217 Numeric Currency Code. 3 digits. Example: `\"840\"`","example":"840"},"trans_amount":{"type":"number","format":"float","description":"Transaction amount. Full amount of the authorization request, including upcharges and fees and after any currency conversion is performed. Example: `12.40`","example":12.4},"partial_amount":{"type":"number","format":"float","description":"If `partial_supported: true` and `response_code` is `10` or `87`, this is the amount of the partial approval. Example: `10.00`","example":10},"cashback_amount":{"type":"number","format":"float","description":"Cashback amount requested. This amount is included in `trans_amount`. Example: `5.00`","example":5},"fee_amount":{"type":"number","format":"float","description":"Amount of any fees. This amount is included in `trans_amount`. Example: `1.50`","example":1.5},"available_funds":{"type":"number","format":"float","description":"Amount of funds available to the cardholder before this transaction is applied. For debit accounts, this is the total of all posted transactions with all pending transactions subtracted out plus overdraft, if available. For credit accounts, this is the available credit minus pending authorizations.\n\nIf this authorization request is approved, the cardholder's available funds are affected within a few milliseconds after the approval is sent. Keep in mind that this is the available balance known to Galileo&mdash;if you are the system of record for your program, refer to your records to determine whether the account has sufficient funds. Example: `100.00`","example":100},"amt_til_limit":{"type":"number","format":"float","description":"Amount remaining before a limit is reached. Example: `502.80`","example":502.8},"nearest_limit":{"type":"string","description":"The name of the first limit that would be reached if a partial authorization or denied authorization is overridden via the `override_limit` field. This field is present only when the limit would be reached in overriding the authorization. Example: `\"PCL Daily Limit\"`","example":"PCL Daily Limit"},"local_currency":{"type":"string","minLength":3,"maxLength":3,"description":"ISO 4217 numeric currency code for `local_currency_amount`, which is the currency at the point of sale. 3 digits. Example: `\"124\"`","example":"124"},"local_currency_amount":{"type":"number","format":"float","description":"Amount of the request in the currency at the point of sale. Upcharges and fees are not included. Example: `21.00`","example":21},"settle_currency":{"type":"string","minLength":3,"maxLength":3,"description":"ISO 4217 numeric currency code for `settlement_currency_amount`. To understand what a settlement currency is, see <a href=\"doc:multicurrency-bins\" target=\"_blank\">Multicurrency BINs</a>. 3 digits. Example: `\"400\"`","example":"400"},"settle_currency_amount":{"type":"number","format":"float","description":"Amount of the request in the currency of the cardholder account. Upcharges and fees are not included. Example: `17.00`","example":17},"billing_currency":{"type":"string","minLength":3,"maxLength":3,"description":"ISO 4217 numeric currency code for `billing_currency_amount`. Example: `840`","example":840},"billing_currency_amount":{"type":"number","format":"float","description":"The amount of the transaction in the billing currency, which is the currency of the card account. Example: `12.40`","example":12.4},"local_surcharge_amt":{"type":"number","format":"float","description":"The surcharge amount in the currency at the point of sale. Example: `0.50`","example":0.5},"settle_surcharge_amt":{"type":"number","format":"float","description":"The surcharge amount in the settlement currency. Example: `0.75`","example":0.75},"settle_exchange_rate":{"type":"string","description":"The factor used to convert from the local request amount to the settlement amount. The string has the pattern `<shift digit><exchange rate digits>`. The first digit specifies how many places from the right the decimal is moved. For example, `69985022` translates to an exchange rate of 9.985022%. Example: `\"69985022\"`","example":"69985022"},"exchange_rate":{"type":"string","description":"The factor used to convert from the local request amount to the billing amount. The string has the pattern `<shift digit><exchange rate digits>`. The first digit specifies how many places from the right the decimal is moved. For example, `69985022` translates to an exchange rate of 9.985022%. Example: `\"65991234\"`","example":"65991234"},"upcharge_amount":{"type":"number","format":"float","description":"The upcharge amount, which is included in `trans_amount`. Example: `75.00`","example":75}},"required":["currency","trans_amount","cashback_amount","fee_amount","available_funds","amt_til_limit"]},"mcc":{"type":"integer","description":"Merchant category code. This value does not include leading zeros. Example: `5992`","example":5992},"merchant":{"type":"object","properties":{"acquirer_id":{"type":"string","nullable":true,"description":"The acquiring institution ID. Nullable. Example: `\"406160\"`","example":"406160"},"terminal_id":{"type":"string","nullable":true,"description":"The ID for the device that acquired the card information. Nullable. Example: `\"A1Z23B99\"`","example":"A1Z23B99"},"merchant_id":{"type":"string","nullable":true,"description":"The merchant ID, as assigned by the network. Nullable. Example: `\"39AJKEO30634KVN3\"`","example":"39AJKEO30634KVN3"},"merchant_description":{"type":"string","nullable":true,"description":"The merchant description. Nullable. Example: `\"123 WIDGETS MERCHANT BEVERLY HILLS CA\"`","example":"123 WIDGETS MERCHANT     BEVERLY HILLSCA"},"merchant_country":{"type":"string","nullable":true,"description":"ISO 3166-1 country code for the country where the merchant is located. 3 digits. Nullable. Example: `\"840\"`","example":"840"},"merchant_postal_code":{"type":"string","nullable":true,"description":"Postal code, nine characters. Left-justified and padded with zeros. If there are nine zeros, then no postal code was provided. Nullable. Example: `\"902100000\"`","example":"90210"},"merchant_state":{"type":"string","nullable":true,"description":"Two-letter state or provincial designator for the merchant's location. Nullable. Example: `\"NV\"`","example":"NV"},"terminal_network":{"type":"string","nullable":true,"description":"Network to which the terminal belongs, Possible values are `VPA` (Visa PLUS Alliance), `Allpoint`, or `None` (another network). If you are not configured to receive this data, the value will always be `None`. Nullable. Example: `\"VPA\"`","example":"VPA","enum":["Allpoint","VPA","None"]}},"required":["acquirer_id","terminal_id","merchant_id","merchant_description","merchant_country","merchant_postal_code","merchant_state","terminal_network"]},"mti":{"type":"string","description":"Message-type indicator, as defined by ISO 8583. See <a href=\"doc:authorization-controller-api#message-types\" target=\"_blank\">Message types</a> in the _Authorization Controller API_ guide. Example: `\"0200\"`","example":"0200"},"transaction":{"type":"object","description":"Information about the transaction","properties":{"recurring":{"type":"string","description":"Whether a transaction is recurring: `Y` or `N`. Example: `\"N\"`","example":"N"},"cardholder_present":{"type":"string","description":"Whether the physical card was present at the point of sale: `Y` or `N`. Example: `\"Y\"`","example":"Y"},"transaction_initiator_code":{"type":"string","description":"*Mastercard only.* Whether the transaction was initiated by the cardholder or the merchant. Populated only when DE048 subfield 22 is present in the authorization request. See <a href=\"ref:api-reference-cit-and-mit-indicators\" target=\"_blank\">CIT and MIT Indicators</a> for more information. Example: `\"M101\"","example":"M101"}},"required":["recurring","cardholder_present"]},"validation_results":{"type":"object","properties":{"cvv1":{"type":"string","description":"Possible values:\n* `Y` &mdash; Validated\n* `F` &mdash; Failed\n* `N` &mdash; Not present","enum":["Y","F","N"]},"cvv2":{"type":"string","description":"Possible values:\n* `Y` &mdash; Validated\n* `F` &mdash; Failed\n* `N` &mdash; Not present","enum":["Y","F","N"]},"cvv3":{"type":"string","description":"Possible values:\n* `Y` &mdash; Validated\n* `F` &mdash; Failed\n* `N` &mdash; Not present","enum":["Y","F","N"]},"pin":{"type":"string","description":"Possible values:\n* `Y` &mdash; Verified\n* `F` &mdash; Failed\n* `L` &mdash; Locked\n* `M` &mdash; PIN not set\n* `B` &mdash; Blocked\n* `N` &mdash; No PIN passed","enum":["Y","F","L","M","B","N"]},"arqc":{"type":"string","description":"Possible values:\n* `Y` &mdash; Validated\n* `F` &mdash; Failed\n* `N` &mdash; Not present","enum":["Y","F","N"]},"offline_pin":{"type":"string","description":"Possible values:\n* `Y` &mdash; Validated\n* `F` &mdash; Failed\n* `N` &mdash; Not present\n* `E` &mdash; Offline PIN attempts exceeded\n* `P` &mdash; Ignored due to risk params","enum":["Y","F","N","E","P"]},"avs_result":{"type":"string","description":"Result of the <<glossary:AVS>> check. See <a href=\"ref:api-reference-avs-codes\" target=\"_blank\">AVS Codes</a> for valid values.","enum":["Y","A","Z","N","M","T","X","S","U","B","C","D","R"]},"aav":{"type":"string","description":"This is the result of checking 3-D Secure Accountholder Authentication Value. Possible values:\n* `Y` &mdash; Validated\n* `F` &mdash; Failed\n* `N` &mdash; Not present","enum":["Y","F","N"]}},"required":["cvv1","cvv2","cvv3","pin","arqc","offline_pin","avs_result","aav"]},"avs_data":{"type":"object","description":"When the authorization includes an <<glossary:AVS>> request, this object contains the data that Galileo used to calculate the AVS response.","properties":{"zip":{"type":"string","description":"Postal code provided by the cardholder. Example: `\"84121\"`","example":"84121"},"address":{"type":"string","description":"Numbers in the first address line, provided by the cardholder. Example: `\"1235\"","example":"1235"}},"required":["zip","address"]},"international":{"type":"boolean","description":"Whether this is an international transaction relative to the account's base currency. Example: `true`"},"response_code":{"type":"string","description":"Authorization response code, which specifies whether a transaction is approved or denied. See the <a href=\"ref:api-reference-events-authorization-response-codes\" target=\"_blank\">Authorization Response Codes</a> enumeration for possible values. Example: `\"05\"`","example":"05"},"auth_id":{"type":"integer","description":"Galileo-generated ID for the authorization. Use this ID to track the transaction throughout the Galileo system. For an explanation of how these IDs are generated, see <a href=\"doc:transaction-ids#authorization-identifiers\" target=\"_blank\">Authorization identifiers</a> in the _Transaction IDs_ guide. Example: `13371854`","example":13371854},"partial_supported":{"type":"boolean","description":"Whether the merchant supports partial authorizations."},"stip":{"type":"object","description":"This object is present when a <<glossary:STIP>> transaction is processed by the network. To receive some of the fields, you must have the STIPR parameter set. See <a href=\"doc:authorization-controller-api#stand-in-processing\" target=\"_blank\">Stand-in processing</a> in the _Authorization Controller API_ guide for more information.","properties":{"detail":{"type":"string","description":"Advice reason code relayed from the network, which provides information on the STIP transaction. See <a href=\"ref:api-reference-advice-reason-codes\" target=\"_blank\">Advice Reason Codes</a> for valid values. Example: `\"4000000\"` or `\"9020\"`","example":"9020"},"stip_decision":{"type":"string","description":"_STIPR only_. The <a href=\"ref:api-reference-events-authorization-response-codes\" target=\"_blank\">Authorization Response Code</a> that was returned to the merchant by the STIP process. Example: `\"51\"`"},"additional_detail":{"type":"string","description":"_STIPR only_. More information about the STIP transaction. See <a href=\"ref:api-reference-stip-additional-detail\" target=\"_blank\">STIP Additional Detail</a> for valid values. Example: `\"000003\"`"},"is_stip_denial":{"type":"string","description":"_STIPR only_. Whether the transaction was denied by the STIP process: `Y` (denied) or `N` (approved)."}}},"incremental_auth":{"type":"boolean","description":"If this is an incremental authorization, this field is `true` and `original_id` contains the `auth_id` of the previous authorization in the sequence."},"entry_type":{"type":"string","description":"Possible values:\n* `Card Not Present` &mdash; Online, mail order or telephone order\n* `Card on File` &mdash; _Mastercard only._ Card number is kept on file\n* `Contactless` &mdash; Paypass contactless transaction\n* `E-Commerce`  &mdash; _Mastercard only._ The card was used on an ecommerce site\n* `EMV Chip` &mdash; The card has an EMV chip that was inserted in an EMV slot\n* `EMV Contactless` &mdash; Contactless transaction with EMV chip card\n* `EMV Fallback` &mdash; Unable to use the EMV chip: fallback to magstripe\n* `Magnetic Stripe` &mdash; The magnetic stripe was read\n* `Contactless` &mdash; Contactless transaction with magstripe card\n* `Card Not Present` &mdash; Online, mail order or telephone order\n* `Manual` &mdash; Manually entered information\n* `Other` &mdash; None of the above","enum":["EMV Chip","EMV Contactless","EMV Fallback","Magnetic Stripe","Contactless","Card Not Present","Manual","Other"]},"pin_entry_capability":{"type":"string","description":"Possible values:\n* `Capable` &mdash; Terminal has PIN-entry capability\n* `Incapable` &mdash; Terminal has no PIN-entry capability\n* `Inoperative` &mdash; Terminal has PIN-entry capability but it is not working\n* `Other` &mdash; Unknown PIN-entry capability, or not applicable.","enum":["Capable","Incapable","Inoperative","Other"]},"payment_info":{"type":"object","properties":{"sender_name":{"type":"string","description":"Name of the sender of the payment. Example: `\"John Doe\"`.","example":"John Doe"},"fund_source":{"type":"string","description":"Source of the payment. Example: `\"Visa Prepaid\"`.","example":"Visa Prepaid"}}},"original_id":{"type":"integer","description":"The `auth_id` of a previous authorization that is linked to this authorization. For reversals or completions, this is the `auth_id` of the authorization that is being reversed or completed. For incremental authorizations, this is the `auth_id` of the previous authorization in the series.","example":13663253},"risk_score":{"type":"integer","description":"The risk score provided by the network. Mastercard range: 0-999, Visa range: 0-99. Higher values indicate higher risk. Product settings determine whether the threshold was exceeded. Example: `23`","example":23},"token_type":{"type":"string","description":"If this is a tokenized transaction, its type. Possible values:\n* `Apple Inc`\n* `Google Inc.`\n* `Masterpass`\n* `Merchant`\n* `Microsoft`\n* `Samsung Corporation`\n* `Visa Checkout`","enum":["Apple Inc.","Google Inc.","Masterpass","Merchant","Microsoft","Samsung Corporation","Visa Checkout"]},"rules_denied":{"type":"array","description":"Valid only when using Galileo's fraud-rules engine. List of fraud rules that caused a decline. Set the RULAP product parameter to receive these rules.","items":{"type":"string"}},"rules_warned":{"type":"array","description":"Valid only when using Galileo's fraud-rules engine. List of fraud rules that caused a warning. Set the RULAP product parameter to receive these rules.","items":{"type":"string"}},"response_code_objects":{"type":"object","description":"An object containing response codes that Galileo has calculated, with a textual explanation of the response code. The possible values for the response-code numbers are in the <a href=\"ref:api-reference-events-authorization-response-codes\" target=\"_blank\">Authorization Response Codes</a> enumeration.\nExample:\n```json\n{\n  \"75\": [\n    \"PIN retry count limit reached\"\n  ],\n  \"57\": [\n    \"Card is frozen\",\n    \"Load transactions not allowed\"\n  ]\n}\n```\n"},"bai":{"type":"string","description":"Business application identifier. Visa only. See the <a href=\"ref:api-reference-business-application-identifier\" target=\"_blank\">Business Application Identifier</a> enumeration for possible values. Example: \"FD\"","example":"FD"},"ecommerce":{"type":"object","description":"This object contains information related to <<glossary:3DS>> authentication, if the website supports 3DS. Included in this information is the result of validating the AAV (account-holder authentication value) for Mastercard or the CAVV (cardholder authentication verification value) for Visa.\n\nE-commerce information is provided for Visa, Mastercard, and Discover only. None of the other networks provide 3DS information in their authorization requests, so for those network requests, `is_ecommerce: null` (unknown) and the `ecommerce` object will not be present. Keep in mind that some combinations of these values shift the liability from the merchant to the issuer. Refer to the documentation from each network to see which values result in a liability shift.","properties":{"is_ecommerce":{"type":"boolean","nullable":true,"description":"Nullable. Possible values:\n* `true` &mdash; This transaction took place on a website that supports 3DS. The remaining fields in the `ecommerce` object will be present and non-null if known.\n* `false` &mdash; This transaction did not take place on a website that supports 3DS. None of the remaining fields in the `ecommerce` object will be present.\n* `null` &mdash; Unknown whether this transaction took place on a website that supports 3DS, because there was inconsistent or missing information in the transaction. In some cases the `raw_eci` will still be provided."},"raw_eci":{"type":"string","description":"The electronic commerce indicator (ECI) that is sent in the authorization request. The meaning of this value varies by network. Some possible values include `05` (Visa), `212` (Mastercard), or `5` (Discover). In the case of Mastercard, the value in this field is the Security Level Indicator (SLI) rather than the ECI. Refer to the documentation from each network to understand how to interpret this value, or refer to the fields below to see how the value is broken out.","example":212},"aav_indicator":{"type":"string","description":"Universal Cardholder Authentication Field (UCAF). Example: `\"kE\"`","example":"kE"},"merchant_asserts_data_protection":{"type":"boolean","nullable":true,"description":"Nullable. Possible values:\n* `true` &mdash; The merchant or acquirer asserts that the communication channel between the cardholder and the merchant is encrypted, such as with TLS/HTTPS.\n* `false` &mdash;  The merchant or acquirer makes no guarantee about the security of the communication channel with the cardholder, meaning that HTTP may have been used instead of HTTPS. You should proceed with caution when this field is `false`. A malicious third party could have compromised the transaction.\n* `null` &mdash;  Unknown, because there is insufficient information in the transaction message, or the network doesn't provide this information."},"merchant_asserts_authentication_attempted":{"type":"boolean","nullable":true,"description":"Nullable. Possible values:\n* `true` &mdash; The merchant or acquirer asserts that it attempted to authenticate the cardholder using <<glossary:3DS>>, and that one of these conditions is true:\n   * Authentication was done, meaning that a full, 3DS authentication flow happened and the cardholder was authenticated. The cardholder was challenged and passed the challenges.\n   * Authentication was not done because Galileo or the network decided that full 3DS authentication was not necessary.\n   * The frictionless flow or 3DS authentication has not been set up for this product.\n* `false` &mdash; One of the following occurred:\n   * The merchant or acquirer did not try to authenticate the cardholder.\n   * The merchant did attempt to authenticate the cardholder but encountered an error and decided to proceed anyway.\n   * The cardholder authentication failed.\n   * The merchant asserted that it attempted to authenticate, but it sent invalid data in the transaction and the network downgraded the merchant's assertion. For Visa, if a merchant doesn't send a CAVV, Visa will automatically downgrade the ECI from `05` or `06` to `07`.\n* `null` &mdash; Unknown. There is insufficient information in the transaction message, or the network didn't provide this information.\n"},"merchant_asserts_authenticated":{"type":"boolean","nullable":true,"description":"Nullable. Possible values:\n* `true` &mdash; The merchant or acquirer asserts that it received a fully authenticated CAVV/AAV using 3DS, meaning that either the cardholder was fully authenticated with a challenge or the frictionless flow was used.\n* `false` &mdash; The merchant or acquirer makes no assertion whether the cardholder is fully authenticated using 3DS, meaning that the merchant or network was unable to carry out the entire 3DS flow, and the merchant was given an \"attempt\" CAVV/AAV.\n* `null` &mdash; Unknown. There is insufficient information in the transaction message, or the network didn't provide this information."},"merchant_authentication_assertions_validated":{"type":"boolean","nullable":true,"description":"Nullable. This field contains validation results of the merchant's assertions.  Possible values:\n* `true` &mdash; The merchant's assertions have been validated, meaning that there is a CAVV or AAV in the transaction message and it is valid.\n   * If `merchant_asserts_authentication_attempted: true` and this field is `true`, then the merchant did attempt to authenticate the cardholder.\n   * If `merchant_asserts_authenticated: true` and this field is `true`, then the merchant did send a fully authenticated CAVV/AAV.\n   * **Note:** Visa allows sending a CAVV even when there is no data protection (`merchant_asserts_data_protection: false`). You should proceed with caution with such transactions, even when the CAVV is valid.\n* `false` &mdash; The merchant's assertions could not be validated, meaning that there is a CAVV/AAV in the authorization request but it is not valid. In almost all cases you should decline the transaction.\n* `null` &mdash; No attempt was made to validate the merchant's assertions. One of the following is true:\n  * The CAVV/AAV was not present. For example, if `merchant_asserts_authentication_attempted: false`, the merchant probably didn't send a CAVV/AAV.\n  * The CAVV/AAV was not validated, because the product has not been configured to do CAVV/AAV validation. You should proceed with caution when CAVV/AAV validation is not configured, because now you are trusting the merchant's assertion.\n\n**Note:** This field does not validate the `merchant_asserts_data_protection` field, which is the merchant's assertion about HTTPS/TLS.\n"}},"required":["is_ecommerce"]},"eligible_for_balance_return":{"type":"boolean","description":"This field indicates whether the cardholder's balance can be returned. If you maintain the balance, this field indicates whether you should return the balance to Galileo.\n\nThis field is `true` if the transaction is eligible for getting the cardholder's balance in the response sent back to the merchant/acquirer. Eligibility is determined by the MCBLC, MCBLS, and MCBLU product parameters for Mastercard and VSBLA for Visa.\n\nPopulate `available_balance` in the response if you hold the balance. If you do not populate it, Galileo will return the balance that it has.\n\nThis field is always `true` when `transaction_type: Balance Inquiry`."},"emv":{"type":"object","description":"Additional EMV information. Also see EMV entry types under `entry_type` and EMV-related fields under `validation_results`.","properties":{"is_emv":{"type":"boolean","description":"This field is `true` if the `entry_type` is `EMV Chip` or `EMV Contactless`. When this value is `true`, the remaining fields below will be present, although they may be only partially populated, depending on the card network or EMV entry type."},"brand":{"type":"string","description":"Type of EMV. Possible values:\n* `visa`\n* `mastercard`\n* `discover`\n\nThe card network may not match the EMV brand. For example, Visa EMV technology can be used on a card whose BIN is serviced through Allpoint.","enum":["visa","mastercard","discover"]},"terminal_verification_results":{"type":"object","description":"This object interprets the status bits sent by the payment terminal, based on what happened during the transaction, such as whether the cardholder entered a valid PIN. Selected bits of the TVR have been separated out into the Boolean fields below.\n\nUse these fields with caution: There can be inconsistencies between different networks, and some bits are not applicable for certain entry types such as `EMV Contactless`. For example, Discover states that byte 3, bits 4 and 5 should be ignored for contactless transactions.","properties":{"raw":{"type":"string","nullable":true,"description":"_Nullable._ The raw TVR (as a hex string) that was received in the ISO message, if present. If not present this field is null and the remaining fields in the `terminal_verification_results` object will not be present. Example: `\"0000000000\"`"},"online_pin_entered":{"type":"boolean","description":"_Byte 3, bit 3._ A PIN is being sent in the ISO message for validation instead of using offline validation (where the EMV chip on the card validates the PIN). "},"pin_required_pad_pres_but_no_pin_entered":{"type":"boolean","description":"_Byte 3, bit 4._ The merchant or cardholder chose to bypass PIN entry, and the PIN pad was operational."},"pin_required_no_pad_or_bad_pad":{"type":"boolean","description":"_Byte 3, bit 5._ A PIN was required but there was no PIN pad, or the PIN pad wasn't working."},"pin_try_limit_exceeded":{"type":"boolean","description":"_Byte 3, bit 6._ The PIN-try limit was exceeded. For example, the terminal read the PIN-try counter on the chip and it was zero."},"cardholder_verification_not_successful":{"type":"boolean","description":"_Byte 3, bit 8._ The terminal indicates that cardholder verification was not successful."}},"required":["raw"]}},"required":["is_emv"]},"version":{"type":"string","description":"Auth API version of this webhook. Example: `\"3.0\"`","example":"3.0"},"iias_info":{"type":"object","description":"Indicates whether the item or service being purchased is an eligible medical expense. Data from DE054 and DE062. Visa only. This object is present only when <<glossary:IIAS>> information is included with the authorization request. For more information, see <a href=\"doc:auth-api-field-detail#iias-fields\" target=\"_blank\">IIAS fields</a> in the _API Field Detail_ guide.","properties":{"iias_indicator":{"type":"string","description":"`M` indicates that the card is an FSA, HRA, or HSA card. Example: `\"M\"`"},"clinic_total":{"type":"number","format":"float","description":"Total purchase amount at the point of sale. Example: `\"120.34\"`"},"qualified_healthcare_products_total":{"type":"number","format":"float","description":"Amount of `clinic_total` that qualifies as a healthcare product. Example: `\"64.87\"`"}}},"advanced_auth_api_fields":{"type":"object","description":"Selected subfields parsed from the ISO 8583 message. These fields are sent only when ADVAF is set and only by arrangement with Galileo. See <a href=\"doc:auth-api-field-detail#advanced-auth-api-fields\" target=\"_blank\">Advanced Auth API Fields</a> for more information.\nExample: `\"advanced_auth_api_fields\": {\"61\": {\"subfield 1\": <raw subfield contents>, \"subfield 2\": <raw subfield contents>}}`","properties":{"[data element number]":{"type":"object","description":"Number of the data element (DE).","properties":{"subfield 1":{"type":"string","description":"Raw contents of the subfield."},"subfield 2":{"type":"string","description":"Raw contents of the subfield."},"subfield N":{"type":"string","description":"Raw contents of the subfield."}}}}},"tar_info":{"type":"object","description":"Tokenization authorization request (TAR) data is provided by the network during mobile wallet provisioning. The following are the subfields in a tokenization authorization request. Note the distinctions between Mastercard and Visa networks.\n\nIf you do not receive this data for provisioning approved BINs, contact a Galileo representative for assistance.","properties":{"correlation_id":{"type":"string","description":"_Mastercard only._ Identifier assigned that can be used by the issuer to associate related tokenization requests and notification messages. 14 alphanumeric characters. Example: `\"D0002688797932\"`","example":"D0002688797932"},"pan_source":{"type":"string","description":"For Mastercard, this field identifies the method by which the cardholder is attempting to tokenize a PAN. Example: `\"2\"`\n- `1` &mdash; Card on file\n- `2` &mdash; Card added manually\n- `3` &mdash; Card added via application\n\n\nFor Visa, this tag, if present, identifies whether it’s push provisioning. Example: `\"03\"`\n- `01` &mdash; Key entered\n- `02` &mdash; On file\n- `03` &mdash; Mobile banking application\n- `04` &mdash; Token\n- `05` &mdash; Chip dip\n- `06` &mdash; Contactless\n\nIf the value is `03`, then it is push provisioning.","enum":["1","2","3","01","02","03","04","05","06"]},"payment_app_instance_id":{"type":"string","description":"_Mastercard only._ Identifier associated with the payment application instance installed onto the customer's device. 48 alphanumeric characters. Example: `\"tSnaYXYaTSkz7DoGPz_wvVLhieie4lyhMPuMrvXx4kdAwkgV\"`","example":"tSnaYXYaTSkz7DoGPz_wvVLhieie4lyhMPuMrvXx4kdAwkgV"},"device_ip":{"type":"string","description":"For Mastercard, this field is the variable-length IP address. Each octet of the IP address is converted to hex and joined into one string, with the order maintained. 8 alphanumeric characters. Example: `\"83BF5B74\"`\n\nFor Visa, this field contains the IP address of the device at the time of the provisioning request. 15 characters maximum. Example: `\"255.255.255.255\"`"},"acc_id_hash":{"type":"string","description":"_Mastercard only._ Contains the customer’s account ID associated with the wallet provider as a PBKDF2 hash. This account ID is typically the email address. The PBKDF2 function is performed using 10 iterations, a salt, and the lowercase account ID as the password. The salt is calculated by taking the lowercase UTF-8 bytes from the account ID and performing a SHA-256 hash operation.\n\n**Example**:\nInput (Password): `csharp@walletprovider.com`\nSalt: `\"41404d1bca85ddb59ab21466e277ac1ac5f61470be120c82a21b1e45b5248123\"`\nCount: 10\nOutput: `\"7098014b646d44c6f3b454c5d54f7a32b3b46e2b0c8e2367f3e5307e3036dfe6\"`","example":"7098014b646d44c6f3b454c5d54f7a32b3b46e2b0c8e2367f3e5307e3036dfe6"},"cardholder_name":{"type":"string","description":"_Mastercard only._ Contains the name of the cardholder. The format is represented in one of these two formats:\n- LASTNAME/FIRSTNAME with the names delimited by a slash `/`. Example: `\"SMITH/JOE\"`\n- FIRSTNAME LASTNAME. Example: `\"JOE SMITH\"`\n\n27 characters maximum. If the cardholder’s name is longer than 27 positions, the data is truncated.","example":"SMITH/JOE"},"tokenization_recommendation":{"type":"integer","description":"The tokenization decision suggested by the wallet provider.\n\nFor Mastercard, possible values are:\n- `0` &mdash; Decline\n- `1` &mdash; Approve\n- `2` &mdash; Requires additional authentication\n\nFor Visa, possible values are:\n- `0` &mdash; Unconditionally approved\n- `1` &mdash; Conditionally approved with further cardholder verification\n- `2` &mdash; Not approved\n\nExample: `1`","enum":[0,1,2]},"tokenization_recommendation_standard_ver":{"type":"string","description":"The version of the standards the wallet provider is using to determine the suggested tokenization recommendation.\n\n- For Mastercard, this value is 2 digits. Example: `\"01\"`\n- For Visa, this value is a decimal value. Example: `\"0002.00\"`"},"device_score":{"type":"integer","description":"The score assigned by the wallet provider for the device. The score is returned as a value between `1` and `5`, with `5` being most trusted. Example: `5`","enum":[1,2,3,4,5]},"account_score":{"type":"integer","description":"_Mastercard only._ Score assigned by the wallet provider for the <<glossary:PAN>>. Value between`1` and `5`, with `5` being most trusted. Example: `5`","enum":[1,2,3,4,5]},"active_tokens":{"type":"string","description":"_Mastercard only._ Number of existing, active tokens for the PAN, excluding card-on-file tokens. Space-filled when the requested token is digitized to a server. Example: `\"08\"`","example":"08"},"tokenization_recommendation_reason_code":{"type":"string","description":"Indicates the specific reason the wallet provider is suggesting the tokenization recommendation.\n\nFor Mastercard, the data of this field is a hex-encoded bitmap, whereby each bit corresponds to a specific reason code. If the wallet provider returns no reason, this field will contain spaces. Displayed in values of 1. Example: `\"008011\"`\n\nSee the possible values for Mastercard and Visa in the <a href=\"ref:api-reference-tokenization-recommendation-reason-codes\" target=\"_blank\">Tokenization Recommendation Reason Codes</a>."},"location":{"type":"string","description":"Latitude and longitude points where the cardholder's device was located at the time the tokenization was attempted.\n\n- For Mastercard. The decimal latitude and longitude values, converted to hexadecimal. Example: `\"2F197A2E1\"`\n- For Visa, when available, the latitude and longitude points are provided with up to 4 digits of precision or rounded to a less-granular level.  Example:`\"+39.13/-77.55\"`"},"last_four_digits":{"type":"string","description":"_Mastercard only._ Last four digits of the cardholder's mobile phone number associated with the active wallet. Example: `\"0885\"`","example":"0885"},"token_type":{"type":"string","description":"_Mastercard only._ The type of requested token. Example: `\"S\"`\n- `C` &mdash; Mastercard cloud-based payments\n- `F` &mdash; Card on file\n- `S` &mdash; Embedded secure element","enum":["C","F","S"]},"consumer_identifier":{"type":"string","description":"_Mastercard only._ Unique identifier for each cardholder, which must be verified by the financial institution before a cardholder can add their credentials to the payment-enabled device. Default: blank."},"device_type":{"type":"string","description":"_Visa only._ Device type value. Example: `\"01\"`\n- `00` &mdash; Unknown\n- `01` &mdash; Mobile phone\n- `02` &mdash; Tablet\n- `03` &mdash; Watch\n- `04` &mdash; Mobile phone or tablet\n- `05` &mdash; Personal computer","enum":[0,1,2,3,4,5]},"device_language":{"type":"string","description":"_Visa only._ Language used by the cardholder’s device. 3 characters maximum. Example: `\"eng\"` for English.","example":"eng"},"device_id":{"type":"string","description":"_Visa only._ The device ID. 48 characters maximum. Example: `\"MTgwOTIxMTQzMjAwMTA0LUh0\"`","example":"MTgwOTIxMTQzMjAwMTA0LUh0"},"device_number":{"type":"string","description":"_Visa only._ Contains the device number, or the full or partial telephone number, when available. Provided by the Visa network. Example: `\"15127717396\"`","example":"15127717396"},"device_name":{"type":"string","description":"_Visa only._ The name of the device given by the cardholder. 16 characters maximum. Value is truncated when longer than maximum length. Example: `\"Work Phone\"`","example":"Work Phone"},"account_id":{"type":"string","description":"_Visa only._ Contains the wallet account ID. Example: `\"eg2t6TyJQ2G8NIraaCypzg\"`","example":"eg2t6TyJQ2G8NIraaCypzg"},"account_email_addr":{"type":"string","description":"_Visa only._ Contains the hashed full email address for the cardholder account that was sent by the wallet provider. Example: `\"\\xc1_\\xf8\\xc8_/\\xd1%%\\x06\\xc4?_\"`","example":"Á_øÈ_/Ñ%%\u0006Ä?_"}},"required":["correlation_id","pan_source","payment_app_instance_id","device_ip","acc_id_hash","cardholder_name","tokenization_recommendation","tokenization_recommendation_standard_ver","device_score","account_score","active_tokens","location","last_four_digits","token_type","consumer_identifier","device_id"]},"fleet_info":{"type":"object","description":"Information that is provided for cards with fleet-card BINs, which are Mastercard only. See <a href=\"doc:fleet-cards\" target=\"_blank\">Fleet Cards</a> for more information.","properties":{"fleet_card_driver_number":{"type":"integer","description":"Driver ID. 17 digits maximum. Example: `06123456`"},"fleet_card_vehicle_number":{"type":"integer","description":"Vehicle ID. 17 digits maximum. Example: `03123`"}}},"aifi_fields":{"type":"object","description":"_Colombia only_. Information related to <a href=\"doc:colombia-atm-issuer-fee-inquiries\" target=\"_blank\">ATM issuer-fee inquiries</a>.","properties":{"issuer_fee_inquiry_indicator":{"type":"number","description":"Contains `\"01\"` to indicate issuer-fee inquiry request. DE112SE035."},"pos_transaction_status":{"type":"integer","description":"Contains `\"8\"` to indicate account-status inquiry (ASI) service. DE061SF7."},"issuer_fee_amt":{"type":"number","description":"Amount of the ATD (domestic ATM) fee. This amount is displayed to the cardholder as the issuer fee. DE112SE036. Example: `\"15000.00\"`"}}},"merchant_advice_code":{"type":"string","description":"*Mastercard only.* Contains the supported merchant advice code (MAC): 03, 40, or 41, if applicable. The GMACD parameter must be set to `Y` to enable MAC decisioning.","example":"40"}},"required":["auth_type","transaction_type","id","timestamp","network","subnetwork","account","amounts","mcc","merchant","mti","transaction","validation_results","international","response_code","auth_id","partial_supported","entry_type","response_code_list","ecommerce","eligible_for_balance_return","emv","version"]}}}},"responses":{"200":{"description":"Use the fields in this schema to respond with your decision plus any instructions for Galileo. ","content":{"application/json":{"schema":{"type":"object","properties":{"response_code":{"type":"string","description":"Authorization response code, which specifies whether a transaction is approved or denied. See the <a href=\"ref:api-reference-events-authorization-response-codes\" target=\"_blank\">Authorization Response Codes</a> enumeration for possible values. Example: `\"05\"`","example":"05"},"avs_response":{"type":"string","description":"Use this field to override `avs_result`, if you believe `avs_result` is wrong. See <a href=\"ref:api-reference-avs-codes\" target=\"_blank\">AVS Codes</a> for valid values."},"override_limit":{"type":"boolean","description":"Use this field to override authorization limits, if permitted. If this field is `true` then any limits that would be reached are overridden. Example: `true`","example":true},"partial_amount":{"type":"number","format":"float","minimum":0,"description":"If `response_code` indicates a partial approval (`10` or `87`), this is the partial amount to approve. Example: `5.00`","example":5},"transfer_prn":{"type":"string","minLength":12,"maxLength":12,"description":"If you want to perform a transfer to cover a lack of funds, this is the PRN of the account to supply the funds. Example: `\"155200002717\"`","example":"155200002717"},"transfer_amount":{"type":"number","format":"float","minimum":0,"description":"The amount to transfer from the `transfer_prn` to the cardholder account. Example: `20.00`","example":20},"source_transfer_type":{"type":"string","description":"The transaction type for the adjustment on the source account in `transfer_prn`. Use the value that Galileo supplied. Case sensitive. Default: `pc`. Example: `\"lm\"`","minLength":2,"maxLength":2,"example":"pc"},"dest_transfer_type":{"type":"string","description":"The transaction type for the adjustment to the cardholder account. Use the value that Galileo supplied. Case sensitive. Default: `PC` Example: `\"LM\"`","minLength":2,"maxLength":2,"example":"PC"},"available_balance":{"type":"number","format":"float","description":"If `eligible_for_balance_return: true` AND you hold the ledger for the card account, populate this field with the card account's available balance to spend. Otherwise, Galileo sends the balance it has in the response message. The amount should be in the account currency. (The card networks will perform currency conversion as needed.) Example: `250.00`","example":250},"savings_balance":{"type":"number","format":"float","description":"If `eligible_for_balance_return: true` AND you hold the ledger for the cardholder's savings account, populate this field with the savings account balance in the currency of the account. Otherwise, Galileo sends the balance it has in the response message. Example: `4000.00`","example":4000},"available_credit":{"type":"number","format":"float","description":"If `eligible_for_balance_return: true` AND you hold the ledger for the cardholder's credit account, populate this field with the credit limit remaining in the currency of the account. Otherwise, Galileo sends the remaining limit it has in the response message. Example: `1500.00`","example":1500},"merchant_advice_code":{"type":"string","description":"*Mastercard only.* Use this field to override MAC decisioning, if permitted. Leave blank if you do not wish to override Galileo’s MAC decision. Galileo reverts to the original decision if an invalid MAC is provided. The MACO product parameter must be set to `Y` to enable overrides.","example":"41"}},"required":["response_code"]},"examples":{"Approve Transaction":{"summary":"Approve transaction","value":{"response_code":"00"}},"Override avs_result":{"summary":"Override AVS result","value":{"response_code":"00","avs_response":"Y"}},"Transfer":{"summary":"Real-time transfer","value":{"response_code":"00","transfer_prn":"155200002717","transfer_amount":20,"source_transfer_type":"pc","dest_transfer_type":"PC","available_balance":250}},"Do Not Honor":{"summary":"Override approval","value":{"response_code":"05"}}}}}}}}}},"components":{"securitySchemes":{"bearerAuth":{"type":"http","scheme":"bearer","bearerFormat":"JWT"}}},"x-readme":{"proxy-enabled":true}}