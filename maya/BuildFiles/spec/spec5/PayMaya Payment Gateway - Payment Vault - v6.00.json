{"openapi":"3.0.3","servers":[{"url":"https://pg-sandbox.paymaya.com","description":"Sandbox"},{"url":"https://pg.paymaya.com","description":"Production"}],"info":{"version":"1.0.0","title":"PayMaya Payment Gateway - Payment Vault","termsOfService":"https://developers.paymaya.com/terms","contact":{"name":"PayMaya Product Engineering - Payments Services Engineering","email":"PaymentsServicesEngineering@paymaya.com","url":"https://enterprise.paymaya.com"},"x-logo":{"url":"https://cdn.paymaya.com/production/devportal/www/images/Logo_Header_v2.png","altText":"PayMaya Developers"},"description":"# API Authentication\nAuthentication is done via [HTTP Basic Authentication](https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication#basic_authentication_scheme). Depending on the API, the public / secret key must be provided and the username and the password left as blank.\n\nSteps are as follows:\n1.  Combine Username and Password (left blank) separated by ‘:’ (colon). If your API key is “pk-Z0OSzLvIcOI2UIvDhdTGVVfRSSeiGStnceqwUE7n0Ah”, the resulting string is:\n\n```no-highlight\npk-Z0OSzLvIcOI2UIvDhdTGVVfRSSeiGStnceqwUE7n0Ah:\n```\n\n2.  Apply Base64 encoding to the resulting string from Step 1. Using the resulting string from Step 1, the Base64 encoded string will be:\n\n```no-highlight\ncGstWjBPU3pMdkljT0kyVUl2RGhkVEdWVmZSU1NlaUdTdG5jZXF3VUU3bjBBaDo=\n```\n\n3.  Indicate the authorization method i.e. “Basic” followed by a space then the Base64 encoded string in Step 2. An example is shown below.\n\n```no-highlight\nAuthorization: Basic cGstWjBPU3pMdkljT0kyVUl2RGhkVEdWVmZSU1NlaUdTdG5jZXF3VUU3bjBBaDo=\n```\n\n# Environment Setup\nPayMaya Payment Gateway has two environments:\n**Sandbox** and **Production**.\n\n**Sandbox** is used for development, testing and integration. Once integration is completed on this environment it will be verified by our Merchant Services team. Only then will production credentials be provided. \n\n- Sandbox Url: https://pg-sandbox.paymaya.com\n\n> Load testing is not allowed on both environments. If you have need for load testing please contact us.\n\n**Production** is for live payments. Testing in this environment will incur real charges\n- Production Url: https://pg.paymaya.com\n\n# Sandbox Credentials\n\n## Merchant Accounts\n\nThese sandbox credentials are for **public use**. As such, other merchants may use them simultaneously.\n\n> Once a merchant is on-boarded to PayMaya, they will be granted private access credentials in sandbox for their testing.\nProduction credentials are provided after sandbox testing.\n\n| Merchant Name | Secret API Keys | Public API Keys\n|-|-|-\n| Sandbox Party 1 | sk-X8qolYjy62kIzEbr0QRK1h4b4KDVHaNcwMYk39jInSl | pk-Z0OSzLvIcOI2UIvDhdTGVVfRSSeiGStnceqwUE7n0Ah |\n| Sandbox Party 2 | sk-KfmfLJXFdV5t1inYN8lIOwSrueC1G27SCAklBqYCdrU | pk-eo4sL393CWU5KmveJUaW8V730TTei2zY8zE4dHJDxkF | \n| Sandbox Party 3 | sk-fzukI3GXrzNIUyvXY3n16cji8VTJITfzylz5o5QzZMC | pk-lNAUk1jk7VPnf7koOT1uoGJoZJjmAxrbjpj6urB8EIA | \n| Sandbox Party 4 | sk-VGDKY3P90NYZZ0kSWqBFaD1NTIXQCxtdS7SbQXvcA4g | pk-yaj6GVzYkce52R193RIWpuRR5tTZKqzBWsUeCkP9EAf | \n| Sandbox Party 5 | sk-8MqXdZYWV9UJB92Mc0i149CtzTWT7BYBQeiarM27iAi | pk-NCLk7JeDbX1m22ZRMDYO9bEPowNWT5J4aNIKIbcTy2a | \n\n## Test Cards\n\nThe following are test cards are for **sandbox use only** (e.g. they will not work on production). Similarly, production cards will not work in sandbox environment.\n\n| Card Scheme | PAN | Expiry Month | Expiry year | CSC/CVV | 3-D Secure Password |\n|-|-|-|-|-|-|\n| MASTERCARD | 5123456789012346 | 12 | 2025 | 111 | Not enabled |\n| MASTERCARD | 5453010000064154 | 12 | 2025 | 111 | secbarry1 |\n| VISA | 4123450131001381 | 12 | 2025 | 123 | mctest1 |\n| VISA | 4123450131001522 | 12 | 2025 | 123 | mctest1 |\n| VISA | 4123450131004443 | 12 | 2025 | 123 | mctest1 |\n| VISA | 4123450131000508 | 12 | 2025 | 111 | Not enabled |\n\n> For a full list of sandbox cards and additional test cases, please refer [here](https://mock-processor-sandbox.paymaya.com/cards)\n\n# Features\n\n## Payment Facilitator\n\nFor a payment facilitator (PF) account, some information are required to identify payment transactions to the correct sub-merchant.\nThis set of information is passed through the **metadata** property of the JSON request body.\n\nThe following is the specification of all the PF information that are required and may be provided through the metadata object:\n\n<SchemaDefinition schemaRef=\"#/components/schemas/Metadata\" exampleRef=\"#/components/examples/Metadata\"/>\n\n"},"tags":[{"name":"One-time Payments","description":"One-time Payment is a single payment execution using a Payment Token.\n\n> Card tokenization or card information collection MUST be client-side. Card information MUST NOT pass thru the merchant server unless merchant is **PCI-DSS Certified**.\n\n## Payment Flow\n```mermaid\nsequenceDiagram\nCustomer ->> Merchant: Initiate Payment\n\nMerchant -->> Customer: Get Payment Token\nCustomer ->> Payment Gateway: Tokenize Card\nPayment Gateway --> Customer: Return Payment Token\nCustomer ->> Merchant: Send Payment Token\n\nMerchant ->> Payment Gateway: Create Payment\nPayment Gateway -->> Merchant: Return verificationUrl\n\nMerchant -->> Customer: Redirect to webpage\nCustomer ->> Payment Gateway: Customer completes authentication\nPayment Gateway -->> Customer: Show status page\n\nalt Payment Confirmation\n  Customer ->> Merchant: Redirect back to Merchant\n  Merchant ->> Payment Gateway: Get Payment\n  Payment Gateway -->> Merchant: Returns\nelse\n  Payment Gateway ->> Merchant: Sends Webhook\nend\n```"},{"name":"Customer Payments","description":"Customer Payments store card information to a customer record. This allows the merchant to use the stored information to charge additional (e.g. recurring) payments without re-collecting card information. \n\n> Card tokenization or card information collection **MUST** be client-side. Card information MUST NOT pass thru the merchant server unless merchant is **PCI-DSS Certified**.\n\n## Card Linking Flow\n\n```mermaid\nsequenceDiagram\nCustomer ->> Merchant: Sign up as user\nMerchant ->> Payment Gateway: Create Customer record\nPayment Gateway -->> Merchant: Return Customer Id\nMerchant -->> Customer: \n\nCustomer ->> Merchant: Initiate Payment\n\nMerchant -->> Customer: Get Payment Token\nCustomer ->> Payment Gateway: Tokenize Card\nPayment Gateway -->> Customer: Return Payment Token\nCustomer ->> Merchant: Send Payment Token\n\nMerchant ->> Payment Gateway: Link Payment Token to Customer\nPayment Gateway -->> Merchant: Return verificationUrl\n\nMerchant -->> Customer: Redirect to webpage\nCustomer ->> Payment Gateway: Customer completes authentication\nPayment Gateway -->> Customer: Show status page\n\nalt Payment Confirmation\n  Customer ->> Merchant: Redirect back to Merchant\n  Merchant ->> Payment Gateway: Get Payment\n  Payment Gateway -->> Merchant: Returns\nelse\n  Payment Gateway ->> Merchant: Sends Webhook\nend\n\nMerchant ->> Payment Gateway: Create Customer Payment\nPayment Gateway -->> Merchant: Return Payment\n```\n\n> Card linking will charge a PHP 10 test fee. This fee is auto-voided on successful linking.\n\n> Succeeding Customer Payments no longer passes thru the authentication flow.\n> For added security, 3ds authentication can be turned on for Customer Payments.\n\n## Card Link and Charge Flow\n\n```mermaid\nsequenceDiagram\nCustomer ->> Merchant: Sign up as user\nMerchant ->> Payment Gateway: Create Customer record\nPayment Gateway -->> Merchant: Return Customer Id\nMerchant -->> Customer: \n\nCustomer ->> Merchant: Initiate Payment\n\nMerchant -->> Customer: Get Payment Token\nCustomer ->> Payment Gateway: Tokenize Card\nPayment Gateway --> Customer: Return Payment Token\nCustomer ->> Merchant: Send Payment Token\n\nMerchant ->> Payment Gateway: Link Payment Token to Customer\nPayment Gateway -->> Merchant: Return verificationUrl\n\nMerchant ->> Payment Gateway: Create Customer Payment\nPayment Gateway -->> Merchant: Return verificationUrl\n\nMerchant -->> Customer: Redirect to webpage\nCustomer ->> Payment Gateway: Customer completes authentication\nPayment Gateway -->> Customer: Show status page\n\nalt Payment Confirmation\n  Customer ->> Merchant: Redirect back to Merchant\n  Merchant ->> Payment Gateway: Get Payment\n  Payment Gateway -->> Merchant: Returns\nelse\n  Payment Gateway ->> Merchant: Sends Webhook\nend\n\nMerchant ->> Payment Gateway: Create Customer Payment\nPayment Gateway -->> Merchant: Return Payment\n```\n\n> This flow will cancel the 10 pesos test fee Payment and will use the Merchant created Payment to validate the card linking.\n\n> Succeeding Customer Payments no longer passes thru the authentication flow.\n> For added security, 3ds authentication can be turned on for Customer Payments."},{"name":"Subscription Payments","description":"Subscription payments are scheduled recurring charges of a customer card.\nThe type of time **interval** supported are:\n\n* DAY\n* MONTH\n* YEAR\n\nA `DAY`, `MONTH` or `YEAR` interval means that a payment recurs with respect to days, months, or years, respectively.\nThe merchant needs to set an **interval count** to indicate how many of the chosen interval needs to pass for the subscription to incur another payment charge.\n\nFor example, a `MONTH` interval with an `interval count` of 3 means that the subscription charges every 3 months from its **start date**.\n\nSubscriptions are attempted to charge payment on the given schedule at `11:00 PM`.\nIf the payment fails, the subscription will be set to inactive. Inactive subscriptions will not charge.\n\n[//]: # (TODO: Timezone of subscription time.)\n[//]: # (TODO: More information as to how to remediate an inactive subscription. How to determine this?)\n\n\n"},{"name":"Capture Payments","description":"## Payment Flow\n\n```mermaid\nsequenceDiagram\nCustomer ->> Merchant: Initiate Payment\n\nMerchant -->> Customer: Get Payment Token\nCustomer ->> Payment Gateway: Tokenize Card\nPayment Gateway --> Customer: Return Payment Token\nCustomer ->> Merchant: Send Payment Token\n\nMerchant ->> Payment Gateway: Create Payment\nPayment Gateway -->> Merchant: Return verificationUrl\n\nMerchant -->> Customer: Redirect to webpage\nCustomer ->> Payment Gateway: Customer completes authentication\nPayment Gateway -->> Customer: Show status page\n\nalt Payment Confirmation\n  Customer ->> Merchant: Redirect back to Merchant\n  Merchant ->> Payment Gateway: Get Payment\n  Payment Gateway -->> Merchant: Returns\nelse\n  Payment Gateway ->> Merchant: Sends Webhook\nend\n\nMerchant ->> Payment Gateway: Capture Payment\n```\n\n## Authorization Payment Status\n\n```mermaid\ngraph TD\nsubgraph Create\n  PT(PENDING_TOKEN)\n  PP(PENDING_PAYMENT)\nend\nsubgraph Authentication\n  FA(FOR_AUTHENTICATION)\n  AA(AUTHENTICATING)\n  AS(AUTH_SUCCESS)\n  AF(AUTH_FAILED)\nend\nsubgraph Processing\n  P(PAYMENT_PROCESSING)\n  PS(AUTHORIZED)\n  PF(PAYMENT_FAILED)\n  C(CAPTURED)\n  D(DONE)\n  CHE(CAPTURE_HOLD_EXPIRED)\nend\nsubgraph After Sales\n  VD(VOIDED)\nend\nPE(PAYMENT_EXPIRED)\nPT --> PE\nPP --> PE\nFA --> PE\nAA --> PE\nPT --> PP\nPP --> FA\nFA --> AA\nAA --> AS\nAA --> AF\nAS --> P\nP --> PS\nP --> PF\nPS --> C\nC --> D\nPS --> VD\nPS --> CHE\n```\n\n## Capture Payment Status\n\n```mermaid\ngraph TD\nsubgraph\n  P(PENDING_PAYMENT)\n  PS(PAYMENT_SUCCESS)\n  PF(PAYMENT_FAILED)\nend\nsubgraph After Sales\n  VD(VOIDED)\n  RD(REFUNDED)\nend\nP --> PS\nP --> PF\nPS --> VD\nPS --> RD\n```\n\n## Authorization Types\n\n**NORMAL** Indicates a Normal Authorization transaction, this authorization request can be captured and cleared for amounts less than or equal to the authorization amount.\n\n**FINAL** Indicates a Final Authorization transaction, this authorization request can be only be captured and cleared for amounts equal to the authorization amount (i.e., partial captures are not supported).\n\n**PREAUTHORIZATION** Indicates a Preauthorization transaction, this authorization request can be captured and cleared for amounts greater than (not yet supported), less than, or equal to the authorization amount. On certain conditions, a preauthorization may have longer hold periods than normal authorizations. Please refer to Authorization Hold Periods for more details.\n\n> This is included in the Create Payment API as\n> `authorizationType`: `NORMAL` / `FINAL` / `PREAUTHORIZATION`\n\n## Authorization Hold Periods\nA successful Authorization is saved (held) until the transaction is not past its hold period. Authorizations past their corresponding hold period that do not have successful captures, or were not voided, will result to the authorization hold being dropped.\n\n> Payments will be left in AUTHORIZED state. Attempting to capture will transition to CAPTURE_HOLD_EXPIRED\n\nThe following table summarizes the authorization hold periods defined depending on certain conditions:\n\n| Scheme | Normal Authorization Hold Period | Final Authorization Hold Period | Pre-Authorization Hold Period\n|-|-|-|-\n| MasterCard | 6 days | 6 days | 29 days\n| Visa | 6 days | 6 days | 6 days / 29 days*\n| JCB | 6 days | 6 days | 6 days\n\n> For Visa, pre-authorized transactions can have longer hold periods (29 days) if the following conditions are met:\n> Merchant falls under one of the ff categories:\n> * Lodging (e.g. hotels, resorts, lodging reservation systems)\n> * Vehicle Rental\n> * Cruise Lines\n\n## Transition rules\n\n### Capture\nThe first capture of an `AUTHORIZED` payment will transition the state to `CAPTURED`. Additional captures can be done while on this state.\n\nAt `11:59 PM of the day the first Capture was made` the payment will transition to `DONE`. Captures can no longer be done at this state.\n\n### Voiding Authorization Payment\nVoiding an `AUTHORIZED` payment will release the capture hold and change the payment state to `VOIDED`\n\n### Void and Refund Captured Payment\n\nVoiding a `PAYMENT_SUCCESS` Capture payment will change the status to `VOIDED`.\n\nVoiding all Capture payments of a `CAPTURED` payment will revert the state to `AUTHORIZED`. The capture cut-off will no longer apply.\n\n`PAYMENT_SUCCESS` Capture payments can be refunded after the 12am cut-off time.\n\n### Webhooks\n\n`AUTHORIZED` Payments do not fire the `PAYMENT_SUCCESS` webhook.\n\n`PAYMENT_SUCCESS` Capture Payments fire the `PAYMENT_SUCCESS` webhook.\n"},{"name":"Payments Info","description":"Set of APIs used to retrieve payment information."},{"name":"Webhooks","description":"Usage of webhooks for payments."},{"name":"Voids","description":"Full reversal of payments (same-day)"},{"name":"Refunds","description":"Partial or full reversal of payment (next-day)"},{"name":"Cancel Payment","description":"Cancel a pending transaction.\n\n## Cancel Payment Status\n\n```mermaid\ngraph TD\nPENDING_TOKEN --> PAYMENT_CANCELLED\nPENDING_TOKEN --> PENDING_PAYMENT\nPENDING_PAYMENT --> PAYMENT_CANCELLED\n```\n\n## Cancel Payment Webhooks\n\n`PAYMENT_CANCELLED` All cancelled payments will fire the `PAYMENT_CANCELLED` webhook.\n\n`CHECKOUT_CANCELLED` If the transaction cancelled is a Checkout transaction, it will fire the `CHECKOUT_CANCELLED` webhook. If you have a `PAYMENT_CANCELLED` webhook registered, it will also be fired.\n"},{"name":"Customizations","description":"Merchant customizations on select UI components"},{"name":"Convenience Fees"},{"name":"Errors","description":"## API Authentication Errors\n\nThe following is a list of errors returned by PayMaya regarding the API keys used by the merchant.\n\n| Name | HTTP Status Code | Error Code | Error Message |\n| --- | --- | --- | --- |\n| MISSING_AUTHENTICATION_HEADER | 401 | K001 | “Kindly include a Base64 encoded key in the basic authentication header.” |\n| KEY_EXPIRED | 401 | K002 | “Please generate a new key.” |\n| INVALID_API_KEY | 401 | K003 | “Invalid authentication credentials. Kindly verify if the key you are using is correct.” |\n| INVALID_KEY_TYPE | 401 | K004<br>K005 | “Please use secret / public key instead.” |\n| INVALID_AUTHORIZATION_HEADER | 401 | K006 | “Key provided is not a valid Base64 encoded key.” |\n| INVALID_KEY_SCOPE | 401 | K007 | “Please check the provided key’s scopes.” |\n| INTERNAL_AUTHENTICATION_ERROR | 400 | K999 | “Please contact PayMaya support.” |\n\n## Operational Errors\n\nThe schema specification for the error list in this section follows the following:\n\n<SchemaDefinition schemaRef=\"#/components/schemas/ErrorGeneric\" exampleRef=\"#/components/examples/2553-ValidationError\"/>\n\n| Name | HTTP Status Code | Error Code | Error Message |\n| --- | --- | --- | --- |\n| MISSING_INVALID_PARAMS | 400 | 2553<br>PYBY0001 | Missing/invalid parameters. |\n| INTERNAL_SERVER_ERROR | 400 | PY0001<br>PY0066<br>PY0067<br>PYBY0012<br>PYBY9999 | A problem is encountered. Please contact your system administrator. |\n| CARD_EXPIRED_ERROR | 400 | PY0002 | Card is expired. |\n| CARD_INVALID_ERROR | 400 | PY0003 | Card is invalid. |\n| PAYMENT_TOKEN_EXPIRED_OR_USED | 400 | PY0007 | Invalid token status. |\n| PAYMENT_TOKEN_NOT_FOUND | 400 | PY0008 | Token is invalid. |\n| PAYMENT_DOES_NOT_EXIST | 404 | PY0009<br>PYBY0002 | Payment does not exist. |\n| FAILED_TO_PROCESS_PAYMENT | 400 | PY0010 | Failed to process payment. |\n| CARD_VAULT_UNREACHABLE | 400 | PY0013 | Card Vault server unreachable / timed out. |\n| CARD_VAULT_ERROR | 400 | PY0014 | Card Vault service error. |\n| PROCESSOR_SERVER_UNREACHABLE | 400 | PY0015 | Payment processor server unreachable / timed out. |\n| PROCESSOR_SERVER_ERROR | 400 | PY0016 | Payment processor service error. |\n| MERCHANT_NOT_FOUND | 404 | PY0017<br>PYBY0003 | Merchant not found. |\n| MERCHANT_FORBIDDEN | 401 | PY0019<br>PYBY0004 | Forbidden. |\n| MERCHANT_REQUIRED | 400 | PY0020 | Merchant is required. |\n| FAILED_TO_ADD_CUSTOMER | 400 | PY0021 | Failed to add customer. |\n| CUSTOMER_DOES_NOT_EXIST | 404 | PY0023 | Customer does not exist. |\n| FAILED_TO_DELETE_CUSTOMER | 400 | PY0024 | Failed to delete customer. |\n| FAILED_TO_UPDATE_CUSTOMER | 400 | PY0025 | Failed to update customer details. |\n| FAILED_TO_UPDATE_CARD | 400 | PY0026 | Failed to update card details. |\n| CARD_DOES_NOT_EXIST | 404 | PY0027 | Card does not exist. |\n| FAILED_TO_DELETE_CARD | 400 | PY0028 | Failed to delete card. |\n| NO_CARD_FOUND | 400 | PY0029 | No card found for customer. |\n| CARD_TOKEN_INVALID_STATUS | 400 | PY0030 | Invalid card token status. |\n| FAILED_TO_ADD_CARD | 400 | PY0035 | Failed to add card to customer. |\n| CARD_NOT_SUPPORTED_ERROR | 400 | PY0036 | Card is not supported. |\n| CURRENCY_NOT_SUPPORTED_ERROR | 400 | PY0037 | Currency is not supported. |\n| WEBHOOK_DOES_NOT_EXIST | 404 | PY0038 | Webhook does not exist. |\n| WEBHOOK_ALREADY_EXISTS | 400 | PY0039 | Webhook already exists. |\n| CHECKOUT_SERVER_ERROR | 400 | PY0041 | A problem is encountered. Please contact your system administrator. |\n| SUBSCRIPTION_CANNOT_CHARGE | 400 | PY0042 | Charging of subscription is not applicable. |\n| CARD_ALREADY_EXISTS | 400 | PY0043 | Card already exists. |\n| PAYMENT_INVALID | 400 | PY0044 | Payment is invalid. |\n| INVALID_VOID_REQUEST | 400 | PY0045 | Payment is not available for void. |\n| REFUND_DOES_NOT_EXIST | 404 | PY0046 | Refund does not exist. |\n| INELIGIBLE_FOR_REFUND | 401 | PY0047 | Payment is ineligible for refund. |\n| INVALID_REFUND_AMOUNT | 400 | PY0048 | Requested refund amount is greater than the original amount. |\n| SUBSCRIPTION_DOES_NOT_EXIST | 404 | PY0049 | Subscription does not exist. |\n| FAILED_TO_ADD_SUBSCRIPTION | 400 | PY0050 | Failed to add subscription to card. |\n| FAILED_TO_UPDATE_SUBSCRIPTION | 400 | PY0051 | Failed to update subscription details. |\n| FAILED_TO_CANCEL_SUBSCRIPTION | 400 | PY0052 | Failed to cancel subscription. |\n| MERCHANT_ALREADY_EXISTS | 400 | PY0053 | Merchant already exists. |\n| SUBSCRIPTION_ALREADY_CHARGED | 400 | PY0054 | Subscription already charged. |\n| FAILED_DELETE_MERCHANT | 400 | PY0056 | Failed to delete merchant. |\n| PAYMENT_EXPIRED | 422 | PY0057 | The Payment has expired and cannot be processed. |\n| MERCHANT_CANNOT_P2M | 403 | PY0058 | The merchant indicated does not have P2M services enabled. |\n| CUSTOMER_VAULT_UNREACHABLE | 400 | PY0059 | Customer Vault server unreachable / timed out. |\n| CUSTOMER_VAULT_ERROR | 400 | PY0060 | Customer Vault service error. |\n| VOID_NOT_FOUND | 404 | PY0063 | Void does not exist. |\n| MERCHANT_NOT_CUSTOMIZED | 404 | PY0065 | This merchant has no customizations present. |\n| AUTH_FAILURE | 400 | PY0068 | Payment not executed due to authorization failure. |\n| AUTH_SERVER_UNREACHABLE | 400 | PY0069 | Authentication server unreachable / timed out. |\n| SCHEME_UNSUPPORTED_BY_MERCHANT | 400 | PY0070 | Scheme is unsupported by merchant |\n| PROCESSOR_MISMATCH_ERROR | 400 | PY0071 | Payment mismatch with Merchant. |\n| REFUND_CUTOFF | 400 | PY0072 | Transaction cannot be processed. Cannot refund a transaction before cut off time. |\n| VOID_CUTOFF | 400 | PY0073 | Transaction cannot be processed. Cannot void a transaction after cut off time. |\n| TERMINAL_DOES_NOT_EXIST | 404 | PY0074 | Terminal does not exist. |\n| BATCH_NOT_FOUND | 404 | PY0075 | Batch not found |\n| PAYMENT_ALREADY_EXISTS | 400 | PY0076 | Payment already exists. |\n| PAYMENT_TOKEN_ALREADY_EXISTS | 400 | PY0077 | Payment Token already exists. |\n| BATCH_STARTED | 400 | PY0078 | Batch has already started. |\n| NO_AUTHORIZED_PAYMENTS_IN_BATCH | 400 | PY0079 | Batch does not contain any payments. |\n| PAYMENT_DETAILS_MISMATCH | 400 | PY0080 | Payment details do not match. |\n| BATCH_NOT_FOR_RECON | 400 | PY0081 | Batch is not available for reconciliation. |\n| TERMINAL_PARTY_EXISTS | 400 | PY0083 | Terminal party id already exists. |\n| TERMINAL_MERCHANT_PROCESSOR_EXISTS | 400 | PY0084 | Terminal processor id already exists. |\n| CANNOT_VOID_TERMINAL_AUTHORIZED_PAYMENT | 400 | PY0085 | Authorized payment must be voided from terminal. |\n| CANNOT_VOID_CAPTURED_PAYMENT_IN_TERMINAL | 400 | PY0086 | Void unavailable in terminal. Please contact your administrator. |\n| CARD_ALREADY_PROVIDED | 400 | PY0088 | Card data already provided. |\n| NO_CARD_PROVIDED | 400 | PY0089 | No card data provided. |\n| RRN_NOT_UNIQUE | 400 | PY0104 | Reference number is linked to multiple payments. |\n| INSUFFICIENT_BALANCE | 400 | PY0105 | Account has insufficient balance to perform this transaction. |\n| PARTIAL_REFUND_NOT_ALLOWED | 200 | PY0113 | Partial refund is not allowed for this transaction. |\n| BIN_ERROR | 400 | PY0117 | Card is invalid. |\n| ISSUER_DECLINE_CARD_ACCOUNT | 400 | PY0119 | Issuer declined card or account. |\n| ISSUER_DECLINE_GENERIC | 400 | PY0120 | Issuer decline. |\n| ISSUER_DECLINE_EXPIRED | 400 | PY0121 | Card is expired. |\n| ISSUER_SYSTEM_DOWN | 400 | PY0122 | Issuer system is unavailable. |\n| ACCOUNT_LIMIT | 400 | PY0123 | Account limit exceeded. |\n| VERIFICATION_FAILED | 400 | PY0124 | Transaction could not be verified. |\n| PIN_ERROR | 400 | PY0125 | PIN is invalid or incorrect. |\n| ACTIVE_TERMINAL_DOES_NOT_EXIST | 400 | PY0999 | No active terminal exists. |\n| FAILED_TO_DEACTIVATE_TERMINAL | 400 | PY0999 | Failed to deactivate terminal. |\n| MISSING_CP_PARAMS | 400 | PY9999 | Missing/invalid parameters. |\n| DIRECTPAYMENT_DOES_NOT_EXIST | 400 | PY9999 | Direct Payment does not exist. |\n| PAYBY_SERVER_ERROR | 400 | PYBY0001 | A problem is encountered. Please contact your system  |\n| PAYMAYA_CONNECT_ERROR | 400 | PYBY0005 | PayMaya Issuing or Connect service error. |\n| PAYMENT_VAULT_ERROR | 400 | PYBY0006 | Payment Vault service error. |\n| CURRENCY_MISMATCH | 400 | PYBY0007 | Payment currency does not match the user account currency. |\n| INSUFFICIENT_BALANCE | 400 | PYBY0008 | Account has insufficient balance to perform this transaction. |\n| WALLET_NOT_FOUND | 404 | PYBY0009 | Wallet does not exist. |\n| WALLET_IS_INACTIVE | 400 | PYBY0010 | Wallet is inactive or deleted from the system and cannot be used for this transaction. |\n| PAYMENT_EXPIRED | 400 | PYBY0011 | Payment has expired and cannot be processed. |\n| WALLET_EXISTS | 400 | PYBY0013 | Wallet has already been created. Please create a new one. |\n\n"}],"paths":{"/payments/v1/payment-tokens":{"post":{"tags":["One-time Payments"],"summary":"Create Payment Token","security":[{"publicKey":[]}],"operationId":"createV1PaymentToken","requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentTokenRequest"},"examples":{"PaymenTokenRequest":{"$ref":"#/components/examples/PaymentTokenRequest"}}}}},"responses":{"200":{"description":"Successfully created payment token.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentTokenResponse"},"examples":{"PaymenTokenResponse":{"$ref":"#/components/examples/PaymentTokenResponse"}}}}}}}},"/payments/v1/payments":{"post":{"tags":["One-time Payments"],"summary":"Create Payment","security":[{"secretKey":[]}],"operationId":"createV1Payment","requestBody":{"description":"Payment","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OneTimePaymentRequest"},"examples":{"OneTimePaymentRequest":{"$ref":"#/components/examples/OneTimePaymentRequest"}}}}},"responses":{"200":{"description":"Successfully created Payment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentResponse"},"examples":{"OneTimePaymentResponse":{"$ref":"#/components/examples/OneTimePaymentResponse"}}}}}}}},"/payments/v1/customers":{"post":{"tags":["Customer Payments"],"summary":"Create Customer","description":"Creates a customer record that will be used to attach a fund source (i.e card linked to a customer).","security":[{"secretKey":[]}],"operationId":"createV1Customer","requestBody":{"description":"Create Customer","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerRequest"},"examples":{"CustomerRequest":{"$ref":"#/components/examples/CustomerRequest"}}}}},"responses":{"200":{"description":"Successfully created customer record.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerResponse"},"examples":{"CustomerResponse":{"$ref":"#/components/examples/CustomerResponse"}}}}}}}},"/payments/v1/customers/{customerId}":{"parameters":[{"$ref":"#/components/parameters/customerId"}],"put":{"tags":["Customer Payments"],"summary":"Update Customer","description":"Modify information of an existing customer. Upon successful modification, the response is the whole customer information with the provided updates.","security":[{"secretKey":[]}],"operationId":"createV1CustomerById","requestBody":{"description":"Update Customer","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerRequest"},"examples":{"CustomerRequest":{"$ref":"#/components/examples/CustomerRequest"}}}}},"responses":{"200":{"description":"Successfully updated customer record.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerResponse"},"examples":{"CustomerResponse":{"$ref":"#/components/examples/CustomerResponse"}}}}}}},"get":{"tags":["Customer Payments"],"summary":"Retrieve Customer","description":"Retrieve customer information via a customer ID.","security":[{"secretKey":[]}],"operationId":"getV1CustomerById","responses":{"200":{"description":"Successfully retrieved customer record.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerResponse"},"examples":{"CustomerResponse":{"$ref":"#/components/examples/CustomerResponse"}}}}}}},"delete":{"tags":["Customer Payments"],"summary":"Delete Customer","description":"Removes the customer information identified by a customer ID. A successful deletion returns the customer information.\n\n> Succeeding calls to use the customer will result to failure.\n","security":[{"secretKey":[]}],"operationId":"deleteV1CustomerById","responses":{"200":{"description":"Successfully deleted customer record.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerResponse"},"examples":{"CustomerResponse":{"$ref":"#/components/examples/CustomerResponse"}}}}}}}},"/payments/v1/customers/{customerId}/cards":{"parameters":[{"$ref":"#/components/parameters/customerId"}],"post":{"tags":["Customer Payments"],"summary":"Create Card of Customer","description":"Adds a card to a customer record that can use used for payment transactions.","security":[{"secretKey":[]}],"operationId":"createV1CustomerCard","requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerCardRequest"},"examples":{"CustomerCardRequest":{"$ref":"#/components/examples/CustomerCardRequest"}}}}},"responses":{"200":{"description":"Successfully link card to customer","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerCardResponse"},"examples":{"CustomerCardResponse":{"$ref":"#/components/examples/CustomerCardResponse"}}}}}}},"get":{"tags":["Customer Payments"],"summary":"Retrieve Cards of Customer","description":"Retrieves cards (as card tokens) of a customer.","security":[{"secretKey":[]}],"operationId":"getV1CustomerCards","responses":{"200":{"description":"Successfully retrieved customer cards.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CustomerCardTokenResponse"}},"examples":{"CustomerCardsResponse":{"$ref":"#/components/examples/CustomerCardTokensResponse"}}}}}}}},"/payments/v1/customers/{customerId}/cards/{cardToken}":{"parameters":[{"$ref":"#/components/parameters/customerId"},{"$ref":"#/components/parameters/cardToken"}],"get":{"tags":["Customer Payments"],"summary":"Retrieve a Card of Customer","description":"Retrieves a specific customer's card identified by the customer ID and the card token.","security":[{"secretKey":[]}],"operationId":"getV1CustomerCardToken","responses":{"200":{"description":"Successfully retrieved card of customer.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerCardTokenResponse"},"examples":{"CustomerCardResponse":{"$ref":"#/components/examples/CustomerCardTokenResponse"}}}}},"500":{"description":"Server error."}}},"put":{"tags":["Customer Payments"],"summary":"Update a Card of Customer","description":"Sets the default card of a customer.","security":[{"secretKey":[]}],"operationId":"updateV1CustomerCardToken","requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateCustomerCardRequest"},"examples":{"UpdateCustomerCardRequest":{"$ref":"#/components/examples/UpdateCustomerCardRequest"}}}}},"responses":{"200":{"description":"Successfully updated a customer card.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerCardTokenResponse"},"examples":{"CustomerCardResponse":{"$ref":"#/components/examples/CustomerCardTokenResponse"}}}}}}},"delete":{"tags":["Customer Payments"],"summary":"Delete a Card of Customer","description":"Deletes specific card of customer identified by a customer ID and card token. A successful deletion returns the card token information.\n> Succeeding calls to use the card token will result to failure. Also, getting the list of cards of the customer should not include the deleted card.\n","security":[{"secretKey":[]}],"operationId":"deleteV1CustomerCardToken","responses":{"200":{"description":"Successfully deleted a customer card.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerCardTokenResponse"},"examples":{"CustomerCardResponse":{"$ref":"#/components/examples/CustomerCardTokenResponse"}}}}}}}},"/payments/v1/customers/{customerId}/cards/{cardToken}/payments":{"parameters":[{"$ref":"#/components/parameters/customerId"},{"$ref":"#/components/parameters/cardToken"}],"post":{"tags":["Customer Payments"],"summary":"Create Customer Payment","description":"Execute payment via a vaulted card of a customer. Depending on the setting of the merchant, the payment may or may not require the following:\n- 3DS verification\n- Card verification code (CVC) re-entry\n\n> If the merchant wishes to have the listed features enabled on all customer card payments, they should contact their relationship manager.\n","security":[{"secretKey":[]}],"operationId":"createV1CustomerPayments","requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/VaultedPaymentRequest"},"examples":{"VaultedPaymentRequest":{"$ref":"#/components/examples/VaultedPaymentRequest"}}}}},"responses":{"200":{"description":"Successfully created customer payment.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentResponse"},"examples":{"VaultedPaymentForVerificationResponse":{"$ref":"#/components/examples/VaultedPaymentForVerificationResponse"},"VaultedPaymentPaidResponse":{"$ref":"#/components/examples/VaultedPaymentPaidResponse"}}}}}}}},"/payments/v1/customers/{customerId}/cards/{cardToken}/subscriptions":{"parameters":[{"$ref":"#/components/parameters/customerId"},{"$ref":"#/components/parameters/cardToken"}],"post":{"tags":["Subscription Payments"],"summary":"Create Subscription","description":"Schedules a regularly recurring payment based on a customer's vaulted card.","security":[{"secretKey":[]}],"operationId":"createV1PaymentSubscription","requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubscriptionRequest"},"examples":{"SubscriptionRequest":{"$ref":"#/components/examples/SubscriptionRequest"}}}}},"responses":{"200":{"description":"Successfully created subscription.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubscriptionResponse"},"examples":{"SubscriptionResponse":{"$ref":"#/components/examples/SubscriptionResponse"}}}}}}},"get":{"tags":["Subscription Payments"],"summary":"Retrieve Customer Subscriptions","description":"Retrieves a list of customer's subscriptions.","security":[{"secretKey":[]}],"operationId":"getV1PaymentSubscription","responses":{"200":{"description":"Successfully retrieved subscriptions.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/SubscriptionResponse"}},"examples":{"SubscriptionsResponse":{"$ref":"#/components/examples/SubscriptionResponseMany"}}}}}}}},"/payments/v1/subscriptions/{subscriptionId}":{"parameters":[{"$ref":"#/components/parameters/subscriptionId"}],"get":{"tags":["Subscription Payments"],"summary":"Retrieve Subscription","description":"Retrieves a customer subscription via a subscription ID.","security":[{"secretKey":[]}],"operationId":"getV1Subscription","responses":{"200":{"description":"Successfully retrieved subscription.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubscriptionResponse"},"examples":{"SubscriptionResponse":{"$ref":"#/components/examples/SubscriptionResponse"}}}}}}},"delete":{"tags":["Subscription Payments"],"summary":"Cancel Subscription","description":"Cancels a customer subscription via a subscription ID.","security":[{"secretKey":[]}],"operationId":"cancelV1PaymentSubscription","responses":{"200":{"description":"Successfully cancelled subscription.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubscriptionResponse"},"examples":{"CacelledSubscriptionResponse":{"$ref":"#/components/examples/CancelledSubscriptionResponse"}}}}}}}},"/payments/v1/subscriptions/{subscriptionId}/payments":{"parameters":[{"$ref":"#/components/parameters/subscriptionId"}],"get":{"tags":["Subscription Payments"],"summary":"Retrieve Subscription Payments","description":"Retrieves a list of payments associated to a subscription identified by a subscription ID.","security":[{"secretKey":[]}],"operationId":"getV1SubscriptionPayments","responses":{"200":{"description":"Successfully retrieved subscription payments.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PaymentResponse"}},"examples":{"SubscriptionPaymentsResponse":{"$ref":"#/components/examples/SubscriptionPaymentResponseMany"}}}}}}}},"/payments/v1/payments/{paymentId}/capture":{"parameters":[{"$ref":"#/components/parameters/paymentId"}],"post":{"tags":["Capture Payments"],"summary":"Capture Payment","description":"Captures an `AUTHORIZED` or `CAPTURED` payment. This will create a new payment record. This payment record can be voided or refunded.\n","security":[{"secretKey":[]}],"operationId":"captureV1Payment","requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CaptureRequest"},"examples":{"CaptureRequest":{"$ref":"#/components/examples/CaptureRequest"}}}}},"responses":{"200":{"description":"Successfully capture payment.","content":{"application/json":{"schema":{"type":"object","required":["capturedPaymentId"],"allOf":[{"$ref":"#/components/schemas/PaymentResponse"}]},"examples":{"OneTimeCapturedPayment":{"$ref":"#/components/examples/OneTimeCapturedResponse"}}}}}}}},"/payments/v1/fees":{"post":{"tags":["Convenience Fees"],"summary":"Compute Convenience Fee","description":"Computes the **Merchant's Discount Rate (MDR)**, which is a rate charged against a merchant for processing payment services.\n\n> This API is only accessible for merchant's that have MDR set in their on-boarding to PayMaya.\n\nThe sample response shows a sample computed MDR with a rate of 10 percent.\n","security":[{"secretKey":[]}],"operationId":"computeV1ConvenienceFee","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"amount":{"$ref":"#/components/schemas/Amount"},"currency":{"$ref":"#/components/schemas/Currency"}}},"examples":{"ConvenienceFee":{"$ref":"#/components/examples/ConvenienceFeeRequest"}}}}},"responses":{"200":{"description":"Successfully computed convenience fee.","content":{"application/json":{"schema":{"type":"object","properties":{"amount":{"$ref":"#/components/schemas/Amount"},"currency":{"$ref":"#/components/schemas/Currency"}}},"examples":{"ConvenienceFee":{"$ref":"#/components/examples/ConvenienceFeeResponse"}}}}}}}},"/payments/v1/payments/{paymentId}":{"parameters":[{"$ref":"#/components/parameters/paymentId"}],"get":{"tags":["Payments Info"],"summary":"Retrieve Payment via ID","description":"Retrieve the transaction information by supplying its payment ID.","security":[{"secretKey":[]}],"operationId":"getPaymentViaPaymentId","responses":{"200":{"description":"Successfully retrieved payment information.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentResponse"},"examples":{"OneTimePaymentSuccess":{"$ref":"#/components/examples/OneTimePaymentSuccess"},"P2mPaymentSuccess":{"$ref":"#/components/examples/P2mPaymentSuccess"},"OneTimePaymentFailed":{"$ref":"#/components/examples/OneTimePaymentFailed"},"OneTimeAuthorizedPayment":{"$ref":"#/components/examples/OneTimeAuthorizedResponse"},"OneTimeCapturedPayment":{"$ref":"#/components/examples/OneTimeCapturedResponse"},"P2mPaymentFailed":{"$ref":"#/components/examples/P2mPaymentFailed"},"PwpLinkedWalletPaymentSuccess":{"$ref":"#/components/examples/PwpLinkedWalletPaymentSuccess"}}}}}}},"delete":{"tags":["Voids"],"summary":"Void Payment via ID","description":"Void the transaction identified by the payment ID.","security":[{"secretKey":[]}],"operationId":"voidV1PaymentViaIdViaDeleteMethod","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/VoidRequest"},"examples":{"VoidRequest":{"$ref":"#/components/examples/VoidRequest"}}}}},"responses":{"200":{"description":"Successfully voided payment.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VoidResponse"},"examples":{"VoidSuccess":{"$ref":"#/components/examples/VoidSuccess"}}}}}}}},"/payments/v1/payment-rrns/{rrn}":{"parameters":[{"$ref":"#/components/parameters/rrn"}],"get":{"tags":["Payments Info"],"summary":"Retrieve Payment via RRN","description":"Retrieve the transaction/s information by supplying a merchant's request reference number. The resulting response is an array of payment information.\n","security":[{"secretKey":[]}],"operationId":"getPaymentViaRequestReferenceNumber","responses":{"200":{"description":"Successfully retrieved payment information.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PaymentResponse"}},"examples":{"OneTimePaymentSuccess":{"$ref":"#/components/examples/OneTimePaymentSuccessViaRrn"}}}}}}}},"/payments/v1/payments/{paymentId}/status":{"parameters":[{"$ref":"#/components/parameters/paymentId"}],"get":{"tags":["Payments Info"],"summary":"Retrieve Payment Status","description":"A simplified version of the *Retrieve Payment via ID* API. This only returns the payment status.","security":[{"secretKey":[]}],"operationId":"getPaymentStatusViaPaymentId","responses":{"200":{"description":"Successfully retrieved payment status.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentStatusResponse"},"examples":{"PaymentStatusResponse":{"$ref":"#/components/examples/PaymentStatusResponse"}}}}}}}},"/payments/v1/webhooks":{"post":{"tags":["Webhooks"],"summary":"Create Webhook","description":"Registers a webhook URL for a specific transaction event on which the merchant wants to be notified of.","security":[{"secretKey":[]}],"operationId":"createV1Webhook","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebhookRequest"},"examples":{"WebhookRequest":{"$ref":"#/components/examples/WebhookRequest"}}}}},"responses":{"200":{"description":"Successfully created a webhook.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebhookResponse"},"examples":{"WebhookSuccess":{"$ref":"#/components/examples/WebhookSuccess"}}}}}}},"get":{"tags":["Webhooks"],"summary":"Get Webhooks","description":"Retrieves a list of webhooks that a merchant registered.","security":[{"secretKey":[]}],"operationId":"getV1Webhooks","responses":{"200":{"description":"Successfully retrieved webhooks.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/WebhookResponse"}},"examples":{"WebhookSuccess":{"$ref":"#/components/examples/WebhookSuccessMany"}}}}}}}},"/payments/v1/webhooks/{webhookId}":{"parameters":[{"$ref":"#/components/parameters/webhookId"}],"get":{"tags":["Webhooks"],"summary":"Get Webhook","description":"Retrieves a webhook via a webhook ID.","security":[{"secretKey":[]}],"operationId":"getV1Webhook","responses":{"200":{"description":"Successfully retrieved a webhook.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebhookResponse"},"examples":{"WebhookSuccess":{"$ref":"#/components/examples/WebhookSuccess"}}}}}}},"put":{"tags":["Webhooks"],"summary":"Update Webhook","description":"Change the URL of a registered webhook.","security":[{"secretKey":[]}],"operationId":"updateV1Webhook","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebhookUpdateRequest"},"examples":{"WebhookUpdateRequest":{"$ref":"#/components/examples/WebhookUpdateRequest"}}}}},"responses":{"200":{"description":"Successfully updated webhook.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebhookResponse"},"examples":{"WebhookSuccess":{"$ref":"#/components/examples/WebhookSuccess"}}}}}}},"delete":{"tags":["Webhooks"],"summary":"Delete Webhook","description":"Removes a registered webhook from a merchant.\n\n> The API returns the last state of the webhook upon successful deletion.\n","security":[{"secretKey":[]}],"operationId":"deleteV1Webhook","responses":{"200":{"description":"Successfully deleted webhook.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebhookResponse"},"examples":{"WebhookSuccess":{"$ref":"#/components/examples/WebhookSuccess"}}}}}}}},"/payments/v1/payments/{paymentId}/voids":{"parameters":[{"$ref":"#/components/parameters/paymentId"}],"post":{"tags":["Voids"],"summary":"Void Payment via ID","description":"Void the transaction identified by the payment ID.","security":[{"secretKey":[]}],"operationId":"voidV1PaymentViaIdViaPostMethod","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/VoidRequest"},"examples":{"VoidRequest":{"$ref":"#/components/examples/VoidRequest"}}}}},"responses":{"200":{"description":"Successfully voided payment.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VoidResponse"},"examples":{"VoidSuccess":{"$ref":"#/components/examples/VoidSuccess"}}}}}}},"get":{"tags":["Voids"],"summary":"Retrieve Void Transactions","description":"Retrieves a list of void transactions associated to a payment transaction.","security":[{"secretKey":[]}],"operationId":"getV1VoidsOfPayment","responses":{"200":{"description":"Successfully retrieved void transactions.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/VoidResponse"}},"examples":{"VoidSuccessMany":{"$ref":"#/components/examples/VoidSuccessMany"}}}}}}}},"/payments/v1/payment-rrns/{rrn}/voids":{"parameters":[{"$ref":"#/components/parameters/rrn"}],"post":{"tags":["Voids"],"summary":"Void Payment via RRN","description":"Voids the transaction identified by the merchant's request reference number.\n\n> If the RRN is not a unique identifier by the merchant, the [Void via Payment ID](#operation/voidV1PaymentViaIdViaPostMethod) should be used instead.\n","security":[{"secretKey":[]}],"operationId":"voidV1PaymentViaRrn","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/VoidRequest"},"examples":{"VoidRequest":{"$ref":"#/components/examples/VoidRequest"}}}}},"responses":{"200":{"description":"Successfully voided payment.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VoidResponse"},"examples":{"VoidSuccess":{"$ref":"#/components/examples/VoidSuccess"}}}}}}}},"/payments/v1/payments/{paymentId}/voids/{voidId}":{"parameters":[{"$ref":"#/components/parameters/paymentId"},{"$ref":"#/components/parameters/voidId"}],"get":{"tags":["Voids"],"summary":"Retrieve Void Transaction","description":"Retrieves a void transaction identified by the provided payment ID and void ID.","security":[{"secretKey":[]}],"operationId":"getV1VoidOfPayment","responses":{"200":{"description":"Successfully retrieved void transactions.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VoidResponse"},"examples":{"VoidSuccess":{"$ref":"#/components/examples/VoidSuccess"}}}}}}}},"/payments/v1/payments/{paymentId}/refunds":{"parameters":[{"$ref":"#/components/parameters/paymentId"}],"post":{"tags":["Refunds"],"summary":"Refund Payment via ID","description":"Refund the transaction identified by the payment ID.","security":[{"secretKey":[]}],"operationId":"refundV1PaymentViaId","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RefundRequest"},"examples":{"RefundRequest":{"$ref":"#/components/examples/RefundRequest"}}}}},"responses":{"200":{"description":"Successfully refunded payment.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RefundResponse"},"examples":{"RefundSuccess":{"$ref":"#/components/examples/RefundSuccess"}}}}}}},"get":{"tags":["Refunds"],"summary":"Retrieve Refund Transactions","description":"Retrieves a list of refund transactions associated to a payment transaction.","security":[{"secretKey":[]}],"operationId":"getV1RefundsOfPayment","responses":{"200":{"description":"Successfully retrieved refund transactions.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/RefundResponse"}},"examples":{"RefundSuccess":{"$ref":"#/components/examples/RefundSuccessMany"}}}}}}}},"/payments/v1/payment-rrns/{rrn}/refunds":{"parameters":[{"$ref":"#/components/parameters/rrn"}],"post":{"tags":["Refunds"],"summary":"Refund Payment via RRN","description":"Refunds the transaction identified by the merchant's request reference number.\n\n> If the RRN is not a unique identifier by the merchant, the [Refund via Payment ID](#operation/refundV1PaymentViaId) should be used instead.\n","security":[{"secretKey":[]}],"operationId":"refundV1PaymentViaRrn","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RefundRequest"},"examples":{"RefundRequest":{"$ref":"#/components/examples/RefundRequest"}}}}},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RefundResponse"},"examples":{"RefundSuccess":{"$ref":"#/components/examples/RefundSuccess"}}}}}}}},"/payments/v1/payments/{paymentId}/refunds/{refundId}":{"parameters":[{"$ref":"#/components/parameters/paymentId"},{"$ref":"#/components/parameters/refundId"}],"get":{"tags":["Refunds"],"summary":"Retrieve Refund Transaction","description":"Retrieves a refund transaction identified by the provided payment ID and refund ID.","security":[{"secretKey":[]}],"operationId":"getV1RefundOfPayment","responses":{"200":{"description":"Successful retrieval of refund information.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RefundResponse"},"examples":{"RefundSuccess":{"$ref":"#/components/examples/RefundSuccess"}}}}}}}},"/payments/v1/payments/{paymentId}/cancel":{"parameters":[{"$ref":"#/components/parameters/paymentId"}],"post":{"tags":["Cancel Payment"],"summary":"Cancel Payment via ID","operationId":"cancelV1PaymentViaIdViaPostMethod","description":"Cancel the transaction identified by the payment ID.","security":[{"secretKey":[]}],"responses":{"200":{"description":"Successfully cancelled payment.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentResponse"},"examples":{"PaymentCancelledResponse":{"$ref":"#/components/examples/PaymentCancelledResponse"}}}}}}}},"/payments/v1/customizations":{"post":{"tags":["Customizations"],"summary":"Set Customizations","description":"Provides customization settings for the mercahnt to change some elements on the user interface.","security":[{"secretKey":[]}],"operationId":"setV1Customizations","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customizations"},"examples":{"CustomizationsRequest":{"$ref":"#/components/examples/CustomizationsRequest"}}}}},"responses":{"200":{"description":"Successfully retrieved payment information.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customizations"},"examples":{"CustomizationsResponse":{"$ref":"#/components/examples/CustomizationsResponse"}}}}}}},"get":{"tags":["Customizations"],"summary":"Retrieve Customizations","description":"Retrieves the customizations that are set by the merchant.","security":[{"secretKey":[]}],"operationId":"getV1Customizations","responses":{"200":{"description":"Successfully retrieved payment information.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Customizations"}},"examples":{"Customizations":{"$ref":"#/components/examples/CustomizationsResponse"}}}}}}},"delete":{"tags":["Customizations"],"summary":"Remove Customizations","description":"Removes the customizations set and use the default look-and-feel of the payment user interface.","security":[{"secretKey":[]}],"operationId":"deleteV1Customizations","responses":{"204":{"description":"Successfully removed customizations."}}}}},"components":{"securitySchemes":{"publicKey":{"type":"http","scheme":"basic","description":"Merchant keys that are used to access public endpoints. These endpoints are normally triggered from the merchant's frontend system,\nand as such the keys are safe to be loaded on the frontend apps.\n"},"secretKey":{"type":"http","scheme":"basic","description":"Merchant keys that are used to access secret endpoints. These endpoints are normally triggered from the merchant's backend system,\nand should not be loaded on the frontend apps and/or distributed in public.\n"}},"schemas":{"ErrorGeneric":{"type":"object","required":["code","message"],"properties":{"code":{"type":"string","description":"Error code."},"message":{"type":"string","description":"Additional description on the error encountered."},"parameters":{"type":"array","description":"This property is only relevant for validation errors.","items":{"type":"object","properties":{"field":{"type":"string","description":"The parameter name that is missing or invalid."},"description":{"type":"string","description":"Additional information on why the error occurred."}}}}}},"Card":{"type":"object","description":"Card information.","required":["number","expMonth","expYear","cvc"],"properties":{"number":{"type":"string","minLength":12,"maxLength":19,"description":"Primary account number (PAN) of the card.","example":"5123456789012346"},"expMonth":{"type":"string","enum":["01","02","03","04","05","06","07",8,9,"10","11","12"],"description":"Card expiration month in numeric string format.","example":"12"},"expYear":{"type":"string","format":"numeric","minLength":4,"maxLength":4,"description":"Card expiration year.","example":"2025"},"cvc":{"type":"string","minLength":3,"maxLength":4,"description":"Card verification value/code (CVV/CVC) or card security code (CSC).","example":"111"}}},"PaymentTokenRequest":{"type":"object","required":["card"],"properties":{"card":{"$ref":"#/components/schemas/Card"}}},"PaymentTokenId":{"title":"Payment Token ID","type":"string","description":"The string token representing the card information (only relevant for card-based payments).","example":"0zjacza65HEobriYGN9g5XwaWZYVSeErdNnaNCLCo8QvUXuGg49KPJSy1XbhHPL8OisYOiYPJSQ2BxqR2AuC682Yu5G5LzrU0SK6ByWi0TyhkekWf1ssl6cMBWAVAOdArLcY1QXEyHdr8EsRAS2bHeMEpUU6OSmxmky5Fk"},"PaymentTokenState":{"type":"string","description":"Indicates the state of the card payment token used in the transaction.\n- `PREVERIFICATION`: 3DS verification is required to add the card to the customer.\n- `VERIFIED`: card is succesfully added to the customer.\n- `EXPIRED`: an attempt to add the card to the customer has expired.\n","enum":["AVAILABLE","CURRENTLY_IN_USE","PREVERIFICATION","VERIFYING","EXPIRED","USED","VAULTED"]},"CreatedAt":{"type":"string","format":"date-time","description":"The timestamp in UTC when the record is created."},"UpdatedAt":{"type":"string","format":"date-time","description":"The timestamp in UTC when the record is last updated."},"Issuer":{"type":"string","description":"Name of the issuing bank as provided by https://binlist.net."},"PaymentTokenResponse":{"type":"object","properties":{"paymentTokenId":{"$ref":"#/components/schemas/PaymentTokenId"},"state":{"$ref":"#/components/schemas/PaymentTokenState"},"createdAt":{"$ref":"#/components/schemas/CreatedAt"},"updatedAt":{"$ref":"#/components/schemas/UpdatedAt"},"issuer":{"$ref":"#/components/schemas/Issuer"}}},"Amount":{"type":"number","format":"float","minimum":0.01,"maximum":9999999,"description":"Amount of the transaction."},"Currency":{"type":"string","minLength":3,"maxLength":3,"description":"[ISO 4217 Alpha-3](https://www.iso.org/iso-4217-currency-codes.html) currency code\n","example":"PHP"},"TotalAmount-Amount":{"type":"object","title":"Total Amount","required":["amount","currency"],"description":"Contains the value and currency of the transaction.","properties":{"amount":{"$ref":"#/components/schemas/Amount"},"currency":{"$ref":"#/components/schemas/Currency"}}},"Sex":{"type":"string","enum":["M","F"],"description":"Biological sex."},"Phone":{"type":"string","format":"phone","minLength":1,"maxLength":1000,"description":"Contact phone number."},"Email":{"type":"string","format":"email","minLength":5,"maxLength":1000,"description":"Contact e-mail address."},"Contact":{"type":"object","title":"Contact Details","description":"Contact details like phone and/or email address.","properties":{"phone":{"$ref":"#/components/schemas/Phone"},"email":{"$ref":"#/components/schemas/Email"}}},"BaseAddress":{"type":"object","properties":{"line1":{"type":"string","description":"Address Line 1.","minLength":1,"maxLength":1000},"line2":{"type":"string","description":"Address Line 2.","minLength":1,"maxLength":1000},"city":{"type":"string","description":"City","minLength":1,"maxLength":1000},"state":{"type":"string","description":"State / Province.","minLength":1,"maxLength":1000},"zipCode":{"type":"string","description":"Zip / Postal code.","minLength":1,"maxLength":1000},"countryCode":{"type":"string","minLength":2,"maxLength":2,"description":"[ISO 3166 alpha-2](https://www.iso.org/iso-3166-country-codes.html) notation of the country.\n"}}},"BillingAddress-Basic":{"type":"object","title":"Basic Billing Address","allOf":[{"$ref":"#/components/schemas/BaseAddress"}]},"BillingAddress-Kount":{"type":"object","title":"Kount Billing Address","required":["countryCode"],"allOf":[{"$ref":"#/components/schemas/BaseAddress"}]},"BillingAddress-All":{"type":"object","title":"Billing Address","description":"Contains billing information of the payer/buyer. By default, all information are optional (i.e. use `Basic Billing Address` specification).\nHowever, If the merchant is enabled to use Kount fraud protection, they must use `Kount Billing Address` specification.\n","oneOf":[{"$ref":"#/components/schemas/BillingAddress-Basic"},{"$ref":"#/components/schemas/BillingAddress-Kount"}]},"ShippingTypes":{"type":"string","enum":["ST","SD"],"description":"* `ST` - Standard shipping\n* `SD` - Same-day shipping\n"},"ShippingAddress-Basic":{"type":"object","title":"Basic Shipping Address","description":"Contains shipment information including name of the person identified to receive the purchase order.","allOf":[{"$ref":"#/components/schemas/BaseAddress"},{"type":"object","properties":{"firstName":{"type":"string","description":"First name of the recipient.","minLength":1,"maxLength":1000,"example":"Maya"},"middleName":{"type":"string","description":"Middle name of the recipient.","minLength":1,"maxLength":1000,"example":"Jose"},"lastName":{"type":"string","description":"Last name of the recipient.","minLength":1,"maxLength":1000,"example":"Juan"},"phone":{"$ref":"#/components/schemas/Phone"},"email":{"$ref":"#/components/schemas/Email"},"shippingType":{"$ref":"#/components/schemas/ShippingTypes"}}}]},"ShippingAddress-Kount":{"type":"object","title":"Kount Shipping Address","description":"Contains shipment information including name of the person identified to receive the purchase order.","required":["countryCode"],"allOf":[{"$ref":"#/components/schemas/BaseAddress"},{"type":"object","properties":{"firstName":{"type":"string","description":"First name of the recipient.","minLength":1,"maxLength":1000,"example":"Maya"},"middleName":{"type":"string","description":"Middle name of the recipient.","minLength":1,"maxLength":1000,"example":"Jose"},"lastName":{"type":"string","description":"Last name of the recipient.","minLength":1,"maxLength":1000,"example":"Juan"},"phone":{"$ref":"#/components/schemas/Phone"},"email":{"$ref":"#/components/schemas/Email"},"shippingType":{"$ref":"#/components/schemas/ShippingTypes"}}}]},"ShippingAddress-All":{"type":"object","title":"Shipping Address","description":"Contains shipment information including name of the person identified to receive the purchase order. By default, all information are optional (i.e. use `Basic Shipping Address` specification).\nHowever, If the merchant is enabled to use Kount fraud protection, they must use `Kount Shipping Address` specification.\n","oneOf":[{"$ref":"#/components/schemas/ShippingAddress-Basic"},{"$ref":"#/components/schemas/ShippingAddress-Kount"}]},"BaseBuyer":{"type":"object","title":"Buyer","description":"Contains personal information regarding the buyer/payer of the transaction.","properties":{"firstName":{"type":"string","description":"First name of the payer/buyer.","minLength":1,"maxLength":1000},"middleName":{"type":"string","description":"Middle name of the payer/buyer.","minLength":1,"maxLength":1000},"lastName":{"type":"string","description":"Last name of the payer/buyer.","minLength":1,"maxLength":1000},"birthday":{"type":"string","format":"date","description":"Birthday in [ISO 8601 / RFC 3339 full-date format](https://tools.ietf.org/html/rfc3339#section-5.6)."},"customerSince":{"type":"string","format":"date","description":"Date in [ISO 8601 / RFC 3339 full-date format](https://tools.ietf.org/html/rfc3339#section-5.6) when payer/buyer registered as a customer as per merchant's records."},"sex":{"$ref":"#/components/schemas/Sex"},"contact":{"$ref":"#/components/schemas/Contact"},"billingAddress":{"$ref":"#/components/schemas/BillingAddress-All"},"shippingAddress":{"$ref":"#/components/schemas/ShippingAddress-All"}}},"Buyer-Basic":{"type":"object","title":"Basic Buyer","allOf":[{"$ref":"#/components/schemas/BaseBuyer"}]},"Buyer-Kount":{"type":"object","title":"Kount Buyer","required":["firstName","lastName","contact","billingAddress","shippingAddress"],"allOf":[{"$ref":"#/components/schemas/BaseBuyer"}]},"Buyer-All":{"type":"object","title":"Buyer","description":"Contains personal information regarding the buyer/payer of the transaction. By default, all information are optional (i.e. use `Basic Buyer` specification).\nHowever, If the merchant is enabled to use Kount fraud protection, they must use `Kount Buyer` specification.\n","oneOf":[{"$ref":"#/components/schemas/Buyer-Basic"},{"$ref":"#/components/schemas/Buyer-Kount"}]},"RedirectUrl":{"type":"object","title":"Redirect URLs","description":"Contains a list of redirect URLs of the merchant for specific events.","properties":{"success":{"type":"string","format":"url","description":"URL to redirect to when the payment is successfully completed."},"failure":{"type":"string","format":"url","description":"URL to redirect to when the payment fails."},"cancel":{"type":"string","format":"url","description":"URL to redirect to when the payment is cancelled by the payer/buyer."}}},"RequestReferenceNumber":{"title":"Merchant Request Reference Number","type":"string","minLength":1,"maxLength":36,"description":"The merchant's reference number for the transaction. It is strongly advised that the merchant provide unique value for this property for each transaction."},"AuthorizationType":{"title":"Authorization Type","type":"string","enum":["NORMAL","FINAL","PREAUTHORIZATION"],"description":"For card transactions, it indicates the type of authorization applied. For more information, click this [link](https://cdn.paymaya.com/sandbox/payments_api/paymayap3/paymayap3.html#header-authorization-types)."},"PaymentFacilitator":{"title":"Payment Facilitator","type":"object","description":"For a payment facilitator, this provides details regarding the sub-merchant.","required":["smi","smn","mci","mpc","mco"],"properties":{"smi":{"type":"string","minLength":1,"maxLength":30,"description":"Sub-merchant ID."},"smn":{"type":"string","format":"alphanumeric, hyphen, space, apostrophe, comma, period, hyphen","minLength":1,"maxLength":64,"description":"Sub-merchant name."},"mci":{"type":"string","minLength":1,"maxLength":13,"description":"Sub-merchant city location."},"mpc":{"type":"string","minLength":3,"maxLength":3,"description":"[ISO 4217 Numeric](https://www.iso.org/iso-4217-currency-codes.html) currency code.\n"},"mco":{"type":"string","minLength":3,"maxLength":3,"description":"[ISO 3166 Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country code.\n"},"mst":{"type":"string","minLength":2,"maxLength":3,"description":"Sub-merchant abbreviated state location (required if country is USA)."},"mcc":{"type":"string","format":"numeric","minLength":1,"maxLength":15,"description":"[ISO 18245](https://www.iso.org/standard/33365.html) merchant category code.\n"},"postalCode":{"type":"string","format":"alphanumeric, dash, space, hyphen, underscore","maxLength":20,"description":"Sub-merchant postal code"},"contactNo":{"type":"string","format":"phone","maxLength":20,"description":"Contact number without spaces, dashes, or parentheses."},"state":{"type":"string","minLength":1,"maxLength":100,"description":"Sub-merchant state location in full text."},"addressLine1":{"type":"string","minLength":1,"maxLength":100,"description":"Sub-merchant street address."}}},"Metadata":{"title":"Metadata","type":"object","description":"Used to provide additional data to the transaction such a payment faciliator information.","properties":{"subMerchantRequestReferenceNumber":{"title":"Sub-merchant Request Reference Number","type":"string","format":"alphanumeric, dash, space, hyphen, underscore","minLength":1,"maxLength":36,"description":"Reference number of the sub-merchant for the related transaction"},"pf":{"$ref":"#/components/schemas/PaymentFacilitator"}}},"AmountDetails":{"title":"Amount Details","type":"object","properties":{"subtotal":{"type":"string","format":"numeric","description":"Subtotal value before applying discounts or additional fees."},"discount":{"type":"string","format":"numeric","description":"Discount applied on the relevant amount value."},"serviceCharge":{"type":"string","format":"numeric","description":"Service charge applied on the relevant amount value."},"shippingFee":{"type":"string","format":"numeric","description":"Shipping fee on the relevant amount value."},"tax":{"type":"string","format":"numeric","description":"Tax on the relevant amount value."}}},"ItemAmountObject":{"type":"object","description":"Amount details per 1 item.","required":["value"],"properties":{"value":{"description":"Amount of 1 item quantity.","allOf":[{"$ref":"#/components/schemas/Amount"}]},"details":{"description":"Amount breakdown of 1 item quantity.","allOf":[{"$ref":"#/components/schemas/AmountDetails"}]}}},"ItemTotalAmountObject":{"type":"object","description":"Amount details all quantity.","required":["value"],"properties":{"value":{"description":"Amount of all quantity","allOf":[{"$ref":"#/components/schemas/Amount"}]},"details":{"description":"Amount breakdown of all quantity.","allOf":[{"$ref":"#/components/schemas/AmountDetails"}]}}},"Item":{"title":"Item","type":"object","required":["name","totalAmount"],"properties":{"name":{"type":"string","description":"Name of the item."},"quantity":{"type":"string","format":"numeric","description":"Quantity of the item."},"code":{"type":"string","description":"Item code (e.g. stock-keepin unit code or SKU) in the merchant's inventory."},"description":{"type":"string","description":"Additional description of the item (e.g. color, variant)"},"amount":{"$ref":"#/components/schemas/ItemAmountObject"},"totalAmount":{"$ref":"#/components/schemas/ItemTotalAmountObject"}}},"Items":{"type":"array","description":"Contains a list of item information.\n","items":{"$ref":"#/components/schemas/Item"}},"OneTimePaymentRequest":{"title":"Tokenized Payment Request","oneOf":[{"type":"object","title":"Basic Payment Request","required":["paymentTokenId","totalAmount"],"properties":{"paymentTokenId":{"$ref":"#/components/schemas/PaymentTokenId"},"totalAmount":{"$ref":"#/components/schemas/TotalAmount-Amount"},"buyer":{"$ref":"#/components/schemas/Buyer-All"},"redirectUrl":{"$ref":"#/components/schemas/RedirectUrl"},"requestReferenceNumber":{"$ref":"#/components/schemas/RequestReferenceNumber"},"authorizationType":{"$ref":"#/components/schemas/AuthorizationType"},"metadata":{"$ref":"#/components/schemas/Metadata"}}},{"type":"object","title":"Kount Payment Request","required":["paymentTokenId","totalAmount","buyer"],"properties":{"paymentTokenId":{"$ref":"#/components/schemas/PaymentTokenId"},"totalAmount":{"$ref":"#/components/schemas/TotalAmount-Amount"},"buyer":{"$ref":"#/components/schemas/Buyer-All"},"items":{"$ref":"#/components/schemas/Items"},"redirectUrl":{"$ref":"#/components/schemas/RedirectUrl"},"requestReferenceNumber":{"$ref":"#/components/schemas/RequestReferenceNumber"},"authorizationType":{"$ref":"#/components/schemas/AuthorizationType"},"metadata":{"$ref":"#/components/schemas/Metadata"}}}]},"PaymentId":{"title":"Payment ID","type":"string","format":"uuid","description":"The unique identification of the payment transaction."},"PaymentStates":{"title":"Payment States","type":"string","description":"Indicates the current state of the payment transaction.","enum":["PENDING_TOKEN","PENDING_PAYMENT","FOR_AUTHENTICATION","AUTHENTICATING","AUTH_NOT_ENROLLED","AUTH_SUCCESS","AUTH_FAILED","PAYMENT_SUCCESS","PAYMENT_FAILED","PAYMENT_PROCESSING","AUTHORIZED","PAYMENT_EXPIRED","PAYMENT_CANCELLED","PAYMENT_INVALID","VOIDED","REFUNDED","ACCOUNT_ABUSE","CAPTURED","DONE","CAPTURE_HOLD_EXPIRED"]},"CardScheme":{"type":"string","enum":["visa","jcb","master-card"],"description":"Card scheme."},"FundSourceCard":{"title":"Card","type":"object","required":["id","type","description"],"properties":{"id":{"$ref":"#/components/schemas/PaymentTokenId"},"type":{"type":"string","description":"Indicates the type of the fund source. For card transactions this is always set to `card`.","example":"card"},"description":{"type":"string","description":"Masked card PAN which *may* show the last 4 digits.","example":"**** **** **** 4154"},"details":{"description":"Contains the more information specific to the card used.","type":"object","properties":{"scheme":{"$ref":"#/components/schemas/CardScheme"},"last4":{"type":"string","format":"numeric","description":"Last 4 digits of the card PAN.","example":4154},"first6":{"type":"string","format":"numeric","description":"First 6 digits of the card PAN.","example":545301},"masked":{"type":"string","description":"Masked card PAN which *may* show the first 6 and last 4 digits.","example":"545301******4154"},"issuer":{"$ref":"#/components/schemas/Issuer"}}}}},"FundSourcePaymaya":{"title":"PayMaya Account (Single Payment)","type":"object","required":["id","type","description"],"properties":{"id":{"type":"string","format":"phone","description":"The mobile phone number (MSISDN) associated to the PayMaya account.","example":"+639086216587"},"type":{"type":"string","description":"Indicates the type of the fund source. For PayMaya transactions, this is always set to `paymaya`.","example":"paymaya"},"description":{"type":"string","description":"The formatted masked mobile phone number, which *may* show the last 4 digits.","example":"***** ***6587"},"details":{"description":"Contains the more information specific to the PayMaya account.","type":"object","properties":{"firstName":{"type":"string","description":"The first name of the PayMaya account holder.","example":"Maya"},"lastName":{"type":"string","description":"The last name of the PayMaya account holder.","example":"Cruz"},"msisdn":{"type":"string","format":"phone","description":"The mobile phone number (MSISDN) associated to the PayMaya account.","example":"+639086216587"},"email":{"type":"string","format":"email","description":"The mobile phone number (MSISDN) associated to the PayMaya account.","example":"maya.juan@mail.com"},"masked":{"type":"string","description":"The masked mobile phone number, which *may* show the last 4 digits.","example":"********6587"}}}}},"ProfileId":{"type":"string","description":"Identification string of the PayMaya consumer account."},"FundSourcePaymayaLinkedWallet":{"title":"PayMaya Account (Recurring Payment)","type":"object","required":["id","type","description"],"properties":{"id":{"$ref":"#/components/schemas/PaymentTokenId"},"type":{"type":"string","description":"Indicates the type of the fund source. For recurring PayMaya wallet transactions, this is set to `card`.","example":"card"},"description":{"type":"string","description":"Masked card PAN which *may* show the last 4 digits.","example":"**** **** **** 4154"},"details":{"description":"Contains the more information specific to the card used.","type":"object","properties":{"scheme":{"$ref":"#/components/schemas/CardScheme"},"last4":{"type":"string","format":"numeric","description":"Last 4 digits of the card PAN.","example":4154},"first6":{"type":"string","format":"numeric","description":"First 6 digits of the card PAN.","example":545301},"masked":{"type":"string","description":"Masked card PAN which *may* show the first 6 and last 4 digits.","example":"545301******4154"},"issuer":{"$ref":"#/components/schemas/Issuer"},"profileId":{"$ref":"#/components/schemas/ProfileId"}}}}},"FundSourceP2m":{"title":"P2M","type":"object","required":["type","description"],"properties":{"id":{"type":"string","description":"Always set to null."},"type":{"type":"string","description":"Indicates the type of the fund source. For PayMaya P2M transactions this is always set to `paymaya`.","example":"paymaya"},"description":{"type":"string","description":"Always set to `PayMaya Account`.","example":"PayMaya Account"},"details":{"description":"Contains the card token used associated to the PayMaya account.","type":"object","properties":{"scheme":{"type":"string","enum":["visa","jcb","master-card"],"description":"Card scheme.","example":"master-card"},"last4":{"type":"string","format":"numeric","description":"Last 4 digits of the card PAN.","example":4154},"first6":{"type":"string","format":"numeric","description":"First 6 digits of the card PAN.","example":545301},"masked":{"type":"string","description":"Masked card PAN which *may* show the first 6 and last 4 digits.","example":"545301******4154"},"issuer":{"$ref":"#/components/schemas/Issuer"}}}}},"FundSourcePaypal":{"title":"PayPal Account","type":"object","required":["id","type","description"],"properties":{"id":{"type":"string","format":"email","description":"The payer's PayPal account as represented by an email address.","example":"maya.juan@mail.com"},"type":{"type":"string","description":"Indicates the type of the fund source. For PayPal transactions, this is always set to `paypal`.","example":"paypal"},"description":{"type":"string","description":"The formatted masked PayPal account (i.e. email address).","example":"m*******n@mail.com"}}},"FundSource":{"type":"object","oneOf":[{"$ref":"#/components/schemas/FundSourceCard"},{"$ref":"#/components/schemas/FundSourcePaymaya"},{"$ref":"#/components/schemas/FundSourcePaymayaLinkedWallet"},{"$ref":"#/components/schemas/FundSourceP2m"},{"$ref":"#/components/schemas/FundSourcePaypal"}]},"EmvIccData":{"title":"EMV ICC Data","type":"string","minLength":1,"maxLength":340,"description":"EMV ICC binary data returned by the Issuer. To be used for post-processing (e.g., Issuer Authentication by EMV EXTERNAL AUTHENTICATE or 2nd GENERATE AC).","example":"ggIcAIQHoAAAAAMQEJUFgAAAAACaAxcEGZwBAF8qAgYInwIGAAAAAAEAnwMGAAAAAAAAnxASBgEKA6CAAAoCAAAAAABuefOZnxoCBgifHghQWU1ZUE9TMZ8mCA5/WLUnW3KxnycBgJ8zAyAgyJ80Ax4DAJ81ASGfNgIAyp83BKOXolWfQQQAAAAB"},"TransactionId":{"title":"Transaction ID","type":"string","description":"Unique identifier returned by the issuer for this transaction.","example":"OUWZP6"},"ApprovalCode":{"title":"Approval Code","type":"string","description":"Approval Code / Authorization Identification Code generated by the issuer to indicate the approval of a transaction","example":873200},"BatchNo":{"title":"Processor Batch Number","type":"string","format":"alphanumeric","minLength":1,"maxLength":8,"description":"Value supplied by P3 or the value of `transaction.trace.batchNo` during the request (if supplied) which indicates the batch of transactions that the specific transaction has been grouped with. Merchants may keep track of this value for reconnaissance.","example":20210506},"TraceNo":{"title":"Processor Trace Number","type":"string","format":"alphanumeric","minLength":1,"maxLength":8,"description":"Value of `transaction.trace.traceNo` during the request (if supplied)"},"ReceiptNo":{"title":"Receipt Number","type":"string","format":"alphanumeric","minLength":1,"maxLength":12,"description":"A receipt / reference number generated by the acquirer. Can be used by all parties (cardholder merchant payment gateway acquirer issuer) when looking up a specific transaction record for reconnaisance.","example":112612964976},"Receipt":{"title":"Processor Receipt","type":"object","description":"Additional transaction reference numbers generated by either the issuing bank or the acquiring host. This is only relevant for card and PayMaya Account payments.","properties":{"transactionId":{"$ref":"#/components/schemas/TransactionId"},"approvalCode":{"$ref":"#/components/schemas/ApprovalCode"},"batchNo":{"$ref":"#/components/schemas/BatchNo"},"traceNo":{"$ref":"#/components/schemas/TraceNo"},"receiptNo":{"$ref":"#/components/schemas/ReceiptNo"}}},"PaymentResponse":{"title":"Generic Payment Response","type":"object","required":["id","isPaid","status","amount","currency","canVoid","canRefund","canCapture","createdAt","updatedAt"],"properties":{"id":{"$ref":"#/components/schemas/PaymentId"},"isPaid":{"type":"boolean","description":"Indicates if the payment is processed successfully or not."},"status":{"$ref":"#/components/schemas/PaymentStates"},"amount":{"$ref":"#/components/schemas/Amount"},"currency":{"$ref":"#/components/schemas/Currency"},"canVoid":{"type":"boolean","description":"Indicates if the payment can be voided (e.g. same-day reversal for card transactions)."},"canRefund":{"type":"boolean","description":"Indicates if the payment can be refunded (e.g. next-day reversal for card transactions)."},"canCapture":{"type":"boolean","description":"Indicates if the payment can be captured for settlement to merchant. This is only relevant for authorization payments."},"createdAt":{"$ref":"#/components/schemas/CreatedAt"},"updatedAt":{"$ref":"#/components/schemas/UpdatedAt"},"requestReferenceNumber":{"$ref":"#/components/schemas/RequestReferenceNumber"},"description":{"title":"Customer/Payer Description","type":"string","description":"Contains identifying information regarding the payer of the transaction. It may contain the payer's email address, name, or address line.","example":"Charge for maya.juan@mail.com"},"paymentTokenId":{"$ref":"#/components/schemas/PaymentTokenId"},"verificationUrl":{"title":"3DS Verification URL","type":"string","format":"url","description":"The URL that the payer needs to open in the browser to complete payment via 3DS authentication."},"fundSource":{"$ref":"#/components/schemas/FundSource"},"batchNumber":{"title":"Terminal Batch Number","type":"string","format":"alphanumeric, dash, space, hyphen, underscore","minLength":1,"maxLength":36,"description":"The batch number of a terminal-based payment."},"traceNumber":{"title":"Terminal Trace Number","type":"string","format":"alphanumeric, dash, space, hyphen, underscore","minLength":1,"maxLength":36,"description":"The batch number of a terminal-based payment."},"emvIccData":{"$ref":"#/components/schemas/EmvIccData"},"receipt":{"$ref":"#/components/schemas/Receipt"},"approvalCode":{"$ref":"#/components/schemas/ApprovalCode"},"receiptNumber":{"$ref":"#/components/schemas/ReceiptNo"},"authorizationType":{"$ref":"#/components/schemas/AuthorizationType"},"capturedAmount":{"type":"number","format":"float","description":"Indicates the total amount already captured for this authorization payment. Only applicable if the transaction has an `authorizationType`."},"authorizationPayment":{"title":"Authorization Payment ID","type":"string","format":"uuid","description":"The unique identification of the authorization payment associated to this payment. Only applicable if this is a capture payment."},"capturedPaymentId":{"title":"Capture Payment ID","type":"string","format":"uuid","description":"The unique identification of the capture payment associated to this payment. Only applicable if this is an authorization payments."},"subscription":{"title":"Subscription ID","type":"string","format":"uuid","description":"The unique identification of the subscription associated to this payment."},"metadata":{"$ref":"#/components/schemas/Metadata"}}},"CustomerRequest":{"type":"object","title":"Buyer","description":"Contains personal information regarding the buyer/payer of the transaction. By default, all information are optional (i.e. use `Basic Buyer` specification).\nHowever, If the merchant is enabled to use Kount fraud protection, they must use `Kount Buyer` specification.\n","oneOf":[{"$ref":"#/components/schemas/Buyer-Basic"},{"$ref":"#/components/schemas/Buyer-Kount"}]},"CustomerId":{"title":"Customer ID","type":"string","format":"uuid","description":"The unique identification of a customer record.","example":"df494249-e67e-4b37-ab9d-49f8a8194bd6"},"CustomerResponse":{"type":"object","allOf":[{"type":"object","properties":{"id":{"$ref":"#/components/schemas/CustomerId"},"createdAt":{"$ref":"#/components/schemas/CreatedAt"},"updatedAt":{"$ref":"#/components/schemas/UpdatedAt"}}},{"$ref":"#/components/schemas/Buyer-All"}]},"CardTokenState":{"type":"string","description":"Indicates the state of the card being attached to the customer:\n- `PREVERIFICATION`: 3DS verification is required to add the card to the customer.\n- `VERIFIED`: card is succesfully added to the customer.\n- `EXPIRED`: an attempt to add the card to the customer has expired.\n","enum":["ADDED","PREVERIFICATION","VERIFYING","VERIFIED","VERIFICATION_FAILED","EXPIRED"]},"CustomerCardTokenResponse":{"type":"object","properties":{"first6":{"type":"string","description":"The first 6 digits of the card number."},"last4":{"type":"string","description":"The last 4 digits of the card number."},"cardTokenId":{"$ref":"#/components/schemas/PaymentId"},"cardType":{"$ref":"#/components/schemas/CardScheme"},"maskedPan":{"type":"string","description":"Masked card number."},"walletType":{"type":"string","description":"For card transactions, this is always set to `VAULTED`."},"state":{"$ref":"#/components/schemas/CardTokenState"},"default":{"type":"boolean","description":"Indicates if the card is the default card of the customer."},"createdAt":{"$ref":"#/components/schemas/CreatedAt"},"updatedAt":{"$ref":"#/components/schemas/UpdatedAt"}}},"IsDefault":{"type":"boolean","description":"Set to true to make the card the default card of the customer."},"CustomerCardRequest":{"type":"object","required":["paymentTokenId","isDefault"],"properties":{"paymentTokenId":{"$ref":"#/components/schemas/PaymentTokenId"},"isDefault":{"$ref":"#/components/schemas/IsDefault"},"redirectUrl":{"$ref":"#/components/schemas/RedirectUrl"},"requestReferenceNumber":{"$ref":"#/components/schemas/RequestReferenceNumber"},"metadata":{"$ref":"#/components/schemas/Metadata"}}},"CustomerCardResponse":{"type":"object","properties":{"cardTokenId":{"$ref":"#/components/schemas/PaymentTokenId"},"cardType":{"$ref":"#/components/schemas/CardScheme"},"maskedPan":{"type":"string","description":"Masked card number."},"createdAt":{"$ref":"#/components/schemas/CreatedAt"},"updatedAt":{"$ref":"#/components/schemas/UpdatedAt"},"id":{"$ref":"#/components/schemas/PaymentId"},"state":{"$ref":"#/components/schemas/CardTokenState"},"default":{"type":"boolean","description":"Indicates if the card is the default card of the customer."},"verificationUrl":{"type":"string","description":"The URL that the payer needs to follow to complete 3DS verification."}}},"UpdateCustomerCardRequest":{"type":"object","required":["isDefault"],"properties":{"isDefault":{"$ref":"#/components/schemas/IsDefault"}}},"VaultedPaymentRequest":{"title":"Vaulted Payment Request","oneOf":[{"type":"object","title":"Basic Vaulted Payment Request","required":["totalAmount"],"properties":{"totalAmount":{"$ref":"#/components/schemas/TotalAmount-Amount"},"redirectUrl":{"$ref":"#/components/schemas/RedirectUrl"},"requestReferenceNumber":{"$ref":"#/components/schemas/RequestReferenceNumber"},"authorizationType":{"$ref":"#/components/schemas/AuthorizationType"},"metadata":{"$ref":"#/components/schemas/Metadata"},"card":{"type":"object","description":"Card with CVC information. This is only required if the merchant is enabled to _always_ require CVC entry on every customer payment.","properties":{"cvc":{"type":"string","minLength":3,"maxLength":4,"description":"Card verification value/code (CVV/CVC) or card security code (CSC)."}}}}},{"type":"object","title":"Kount Vaulted Payment Request","required":["totalAmount","items"],"properties":{"totalAmount":{"$ref":"#/components/schemas/TotalAmount-Amount"},"items":{"type":"object","description":"List of items"},"redirectUrl":{"$ref":"#/components/schemas/RedirectUrl"},"requestReferenceNumber":{"$ref":"#/components/schemas/RequestReferenceNumber"},"authorizationType":{"$ref":"#/components/schemas/AuthorizationType"},"metadata":{"$ref":"#/components/schemas/Metadata"},"card":{"type":"object","description":"Card with CVC information. This is only required if the merchant is enabled to _always_ require CVC entry on every customer payment.","properties":{"cvc":{"type":"string","minLength":3,"maxLength":4,"description":"Card verification value/code (CVV/CVC) or card security code (CSC)."}}}}}]},"SubscriptionId":{"title":"Subscription ID","type":"string","format":"uuid","description":"The unique identification of customer subscription."},"SubscriptionResponse":{"type":"object","properties":{"id":{"$ref":"#/components/schemas/SubscriptionId"},"description":{"type":"string","minLength":1,"maxLength":255,"description":"A descriptive information regarding the subscription."},"status":{"type":"string","enum":["ACTIVE","CANCELLED","FAILED"],"description":"Subscription state."},"amount":{"$ref":"#/components/schemas/Amount"},"currency":{"$ref":"#/components/schemas/Amount"},"interval":{"type":"string","enum":["DAY","MONTH","YEAR"],"description":"The base unit of time of each scheduled payment of the subscription."},"intervalCount":{"type":"number","format":"integer","minimum":1,"maximum":1000,"description":"Subcription payment recurs every `intervalCount` of the chosen interval unit of time."},"startDate":{"type":"string","format":"date","description":"The subscription's first payment date in [ISO 8601 / RFC 3339 full-date format](https://tools.ietf.org/html/rfc3339#section-5.6)."},"endDate":{"type":"string","format":"date","description":"The subscription's ending date in [ISO 8601 / RFC 3339 full-date format](https://tools.ietf.org/html/rfc3339#section-5.6)."},"cancelledAt":{"type":"string","format":"date-time","description":"The timestamp in UTC when the subscription is cancelled."},"createdAt":{"$ref":"#/components/schemas/CreatedAt"},"updatedAt":{"$ref":"#/components/schemas/UpdatedAt"},"metadata":{"$ref":"#/components/schemas/Metadata"}}},"SubscriptionRequest":{"type":"object","required":["description","totalAmount","interval","intervalCount","startDate"],"properties":{"description":{"type":"string","minLength":1,"maxLength":255,"description":"A descriptive information regarding the subscription."},"totalAmount":{"$ref":"#/components/schemas/TotalAmount-Amount"},"interval":{"type":"string","enum":["DAY","MONTH","YEAR"],"description":"The base unit of time of each scheduled payment of the subscription."},"intervalCount":{"type":"number","format":"integer","minimum":1,"maximum":1000,"description":"Subcription payment recurs every `intervalCount` of the chosen interval unit of time."},"startDate":{"type":"string","format":"date","description":"The subscription's first payment date in [ISO 8601 / RFC 3339 full-date format](https://tools.ietf.org/html/rfc3339#section-5.6)."},"endDate":{"type":"string","format":"date","description":"The subscription's ending date in [ISO 8601 / RFC 3339 full-date format](https://tools.ietf.org/html/rfc3339#section-5.6)."},"metadata":{"$ref":"#/components/schemas/Metadata"}}},"CaptureRequest":{"type":"object","required":["captureAmount","requestReferenceNumber"],"properties":{"captureAmount":{"type":"object","title":"Total Amount for Capture","required":["amount","currency"],"properties":{"amount":{"$ref":"#/components/schemas/Amount"},"currency":{"$ref":"#/components/schemas/Currency"}}},"requestReferenceNumber":{"$ref":"#/components/schemas/RequestReferenceNumber"}}},"Reason":{"type":"string","minLength":1,"maxLength":512,"description":"A description of why the operation (e.g. void, refund) needs to be executed."},"VoidRequest":{"type":"object","required":["reason"],"properties":{"reason":{"$ref":"#/components/schemas/Reason"},"requestReferenceNumber":{"$ref":"#/components/schemas/RequestReferenceNumber"}}},"VoidId":{"title":"Void ID","type":"string","format":"uuid","description":"The unique identification of the void transaction.","example":"0a306b5c-4eff-4d5b-80d4-277d442d5258"},"VoidRefundStates":{"title":"Void/Refund States","type":"string","description":"Indicates the status of a void/refund transaction.","enum":["PENDING","SUCCESS","FAILED"]},"VoidResponse":{"type":"object","required":["id","payment","status","reason","createdAt","updatedAt"],"properties":{"id":{"$ref":"#/components/schemas/VoidId"},"payment":{"$ref":"#/components/schemas/PaymentId"},"status":{"$ref":"#/components/schemas/VoidRefundStates"},"reason":{"$ref":"#/components/schemas/Reason"},"requestReferenceNumber":{"$ref":"#/components/schemas/RequestReferenceNumber"},"createdAt":{"$ref":"#/components/schemas/CreatedAt"},"updatedAt":{"$ref":"#/components/schemas/UpdatedAt"}}},"PaymentStatusResponse":{"type":"object","required":["id","status"],"properties":{"id":{"$ref":"#/components/schemas/PaymentId"},"status":{"$ref":"#/components/schemas/PaymentStates"}}},"WebhookId":{"type":"string","format":"uuid","description":"The unique identification of the webhook URL."},"WebhookName":{"type":"string","minLength":1,"maxLength":256,"enum":["AUTHORIZED","PAYMENT_SUCCESS","PAYMENT_FAILED","PAYMENT_EXPIRED","PAYMENT_CANCELLED","3DS_PAYMENT_SUCCESS","3DS_PAYMENT_FAILURE","3DS_PAYMENT_DROPOUT","RECURRING_PAYMENT_SUCCESS","RECURRING_PAYMENT_FAILURE","CHECKOUT_SUCCESS","CHECKOUT_FAILURE","CHECKOUT_DROPOUT","CHECKOUT_CANCELLED"]},"WebhookCallbackUrl":{"type":"string","format":"url","minLength":1,"maxLength":2083,"description":"The merchant server's URL that is called for this this webhook."},"WebhookResponse":{"type":"object","required":["id","name","callbackUrl","createdAt","updatedAt"],"properties":{"id":{"$ref":"#/components/schemas/WebhookId"},"name":{"$ref":"#/components/schemas/WebhookName"},"callbackUrl":{"$ref":"#/components/schemas/WebhookCallbackUrl"},"createdAt":{"$ref":"#/components/schemas/CreatedAt"},"updatedAt":{"$ref":"#/components/schemas/UpdatedAt"}}},"WebhookRequest":{"title":"Webhook Request","type":"object","required":["name","callbackUrl"],"properties":{"name":{"$ref":"#/components/schemas/WebhookName"},"callbackUrl":{"$ref":"#/components/schemas/WebhookCallbackUrl"}}},"WebhookUpdateRequest":{"type":"object","required":["callbackUrl"],"properties":{"callbackUrl":{"$ref":"#/components/schemas/WebhookCallbackUrl"}}},"RefundId":{"type":"string","format":"uuid","description":"The unique identification of the refund transaction.","example":"fbc7d874-4f05-45e8-b205-14e2d07657f5"},"RefundAt":{"type":"string","format":"date-time","description":"The timestamp in UTC when the transaction is refunded."},"RefundResponse":{"type":"object","required":["id","payment","amount","currency","status","reason","createdAt","updatedAt"],"properties":{"id":{"$ref":"#/components/schemas/RefundId"},"reason":{"$ref":"#/components/schemas/Reason"},"amount":{"$ref":"#/components/schemas/Amount"},"currency":{"$ref":"#/components/schemas/Currency"},"status":{"$ref":"#/components/schemas/VoidRefundStates"},"payment":{"$ref":"#/components/schemas/PaymentId"},"requestReferenceNumber":{"$ref":"#/components/schemas/RequestReferenceNumber"},"refundAt":{"$ref":"#/components/schemas/RefundAt"},"createdAt":{"$ref":"#/components/schemas/CreatedAt"},"updatedAt":{"$ref":"#/components/schemas/UpdatedAt"}}},"RefundRequest":{"type":"object","required":["totalAmount","reason"],"properties":{"totalAmount":{"$ref":"#/components/schemas/TotalAmount-Amount"},"reason":{"$ref":"#/components/schemas/Reason"},"requestReferenceNumber":{"$ref":"#/components/schemas/RequestReferenceNumber"}}},"Customizations":{"title":"Customizations","type":"object","required":["logoUrl","iconUrl","appleTouchIconUrl","customTitle","colorScheme"],"properties":{"logoUrl":{"type":"string","format":"url,","minLength":5,"maxLength":2082,"description":"URL that points to the merchant's logo image."},"iconUrl":{"type":"string","format":"url,","minLength":5,"maxLength":2082,"description":"URL that points to the merchant's icon image."},"appleTouchIconUrl":{"type":"string","format":"url,","minLength":5,"maxLength":2082,"description":"URL that points to the merchant's Apple icon image."},"customTitle":{"type":"string","minLength":1,"maxLength":64,"description":"Customized title used in the web browser."},"colorScheme":{"type":"string","format":"hexcolor","description":"The HEX color code that is used for the payment button."},"hideReceiptInput":{"type":"boolean","description":"Indicates if the merchant does not allow its payers to freely send transaction receipts (i.e. set to `true`).\n","default":false},"skipResultPage":{"type":"boolean","description":"Indicates if the merchant does not want to show the payment result page.\nWhen skipped (i.e. set to `true`), the payment page redirects immediately to the merchant's redirect URL.\n","default":false},"showMerchantName":{"type":"boolean","description":"Indicates if the merchant name on the result page is displayed.\nFor merchants that have their name in their logo, they may opt to hide a textual display of their name to remove duplicity.\n","default":true},"redirectTimer":{"type":"number","format":"integer","minimum":3,"maximum":30,"description":"The number of seconds the payment result page is shown before it redirects to the merchant's redirect URL.\n\nThe following are the **default** time used depending on the resulting payment:\n- `15 seconds`: for successful payments\n- `5 seconds`: for failed payments\n"}}}},"examples":{"Metadata":{"summary":"Payment facilitator metadata.","value":{"subMerchantRequestReferenceNumber":"SUBMER-12345","pf":{"smi":"SUB034221","smn":"Maya Merchant","mci":"MANILA","mpc":"608","mco":"PHL","mcc":"3415","postalCode":"1001","contactNo":"+6329112345","state":"Metro Manila","addressLine1":"Quezon Boulevard, Quiapo"}}},"2553-ValidationError":{"summary":"Missing/invalid parameters.","value":{"code":"2553","message":"Missing/invalid parameters.","parameters":[{"field":"card.cvc","description":"A 3-4 digit cvc / cvv is required."}]}},"PaymentTokenRequest":{"summary":"Payment Token Request","value":{"card":{"number":"5453010000064154","expMonth":"12","expYear":"2025","cvc":"111"}}},"PaymentTokenResponse":{"summary":"Payment token response.","value":{"paymentTokenId":"0zjacza65HEobriYGN9g5XwaWZYVSeErdNnaNCLCo8QvUXuGg49KPJSy1XbhHPL8OisYOiYPJSQ2BxqR2AuC682Yu5G5LzrU0SK6ByWi0TyhkekWf1ssl6cMBWAVAOdArLcY1QXEyHdr8EsRAS2bHeMEpUU6OSmxmky5Fk","state":"AVAILABLE","createdAt":"2021-07-12T08:18:20.000Z","updatedAt":"2021-07-12T08:18:20.000Z","issuer":"Others"}},"OneTimePaymentRequest":{"summary":"One-time payment request.","value":{"paymentTokenId":"0zjacza65HEobriYGN9g5XwaWZYVSeErdNnaNCLCo8QvUXuGg49KPJSy1XbhHPL8OisYOiYPJSQ2BxqR2AuC682Yu5G5LzrU0SK6ByWi0TyhkekWf1ssl6cMBWAVAOdArLcY1QXEyHdr8EsRAS2bHeMEpUU6OSmxmky5Fk","totalAmount":{"amount":100,"currency":"PHP"},"buyer":{"firstName":"Maya","lastName":"Juan","contact":{"phone":"+63(2)1234567890","email":"maya.juan@mail.com"},"shippingAddress":{"line1":"6F Launchpad","line2":"Sheridan Street","city":"Mandaluyong City","state":"Metro Manila","zipCode":"1552","countryCode":"PH","firstName":"John","lastName":"Doe","phone":"+63(2)1234567890","email":"john.doe@mail.com","shippingType":"SD"},"billingAddress":{"line1":"6F Launchpad","line2":"Sheridan Street","city":"Mandaluyong City","state":"Metro Manila","zipCode":"1552","countryCode":"PH"}},"requestReferenceNumber":"1626084179","redirectUrl":{"success":"https://www.merchantsite.com/success","failure":"https://www.merchantsite.com/failure","cancel":"https://www.merchantsite.com/cancel"}}},"OneTimePaymentResponse":{"summary":"One-time payment response.","value":{"id":"7ea1f6ef-035c-4fcd-85e0-037c8d9d4a2c","isPaid":false,"status":"FOR_AUTHENTICATION","amount":"100","currency":"PHP","canVoid":false,"canRefund":false,"canCapture":false,"createdAt":"2021-07-12T10:02:55.000Z","updatedAt":"2021-07-12T10:02:55.000Z","description":"Charge for maya.juan@mail.com","paymentTokenId":"0zjacza65HEobriYGN9g5XwaWZYVSeErdNnaNCLCo8QvUXuGg49KPJSy1XbhHPL8OisYOiYPJSQ2BxqR2AuC682Yu5G5LzrU0SK6ByWi0TyhkekWf1ssl6cMBWAVAOdArLcY1QXEyHdr8EsRAS2bHeMEpUU6OSmxmky5Fk","requestReferenceNumber":"1626084179","verificationUrl":"https://payments-web-sandbox.paymaya.com/authenticate?id=7ea1f6ef-035c-4fcd-85e0-037c8d9d4a2c"}},"CustomerRequest":{"summary":"Customer Request","value":{"firstName":"Maya","middleName":"Jose","lastName":"Juan","birthday":"1987-07-28","sex":"F","contact":{"phone":"+63(2)1234567890","email":"maya.juan@mail.com"},"billingAddress":{"line1":"6F Launchpad","line2":"Sheridan Street","city":"Mandaluyong City","state":"Metro Manila","zipCode":"1552","countryCode":"PH"},"shippingAddress":{"firstName":"Maya","middleName":"Jose","lastName":"Juan","line1":"6F Launchpad","line2":"Sheridan Street","city":"Mandaluyong City","state":"Metro Manila","zipCode":"1552","countryCode":"PH","phone":"+63(2)1234567890","email":"maya.juan@mail.com","shippingType":"ST"},"customerSince":"2020-12-25"}},"CustomerResponse":{"summary":"Customer information.","value":{"id":"d29f1635-8313-4ed4-94e5-94b6a6018f52","firstName":"Maya","middleName":"Jose","lastName":"Juan","contact":{"phone":"+63(2)1234567890","email":"maya.juan@mail.com"},"billingAddress":{"line1":"6F Launchpad","line2":"Sheridan Street","city":"Mandaluyong City","state":"Metro Manila","zipCode":"1552","countryCode":"PH"},"shippingAddress":{"firstName":"Maya","middleName":"Jose","lastName":"Juan","line1":"6F Launchpad","line2":"Sheridan Street","city":"Mandaluyong City","state":"Metro Manila","zipCode":"1552","countryCode":"PH","phone":"+63(2)1234567890","email":"maya.juan@mail.com","shippingType":"ST"},"sex":"F","birthday":"1987-07-28","customerSince":"2020-12-25","createdAt":"2021-07-06T14:01:25.000Z","updatedAt":"2021-07-06T14:01:25.000Z"}},"CustomerCardTokensResponse":{"summary":"A list of cards of a customer.","value":[{"first6":"545301","last4":"4154","cardTokenId":"0zjacza65HEobriYGN9g5XwaWZYVSeErdNnaNCLCo8QvUXuGg49KPJSy1XbhHPL8OisYOiYPJSQ2BxqR2AuC682Yu5G5LzrU0SK6ByWi0TyhkekWf1ssl6cMBWAVAOdArLcY1QXEyHdr8EsRAS2bHeMEpUU6OSmxmky5Fk","cardType":"master-card","maskedPan":"4154","createdAt":"2021-07-06T15:46:22.000Z","updatedAt":"2021-07-06T15:46:22.000Z","walletType":"VAULTED","state":"VERIFIED","default":true}]},"CustomerCardRequest":{"summary":"Add card to customer.","value":{"paymentTokenId":"0zjacza65HEobriYGN9g5XwaWZYVSeErdNnaNCLCo8QvUXuGg49KPJSy1XbhHPL8OisYOiYPJSQ2BxqR2AuC682Yu5G5LzrU0SK6ByWi0TyhkekWf1ssl6cMBWAVAOdArLcY1QXEyHdr8EsRAS2bHeMEpUU6OSmxmky5Fk","isDefault":true,"requestReferenceNumber":"1626084179","redirectUrl":{"success":"https://www.merchantsite.com/success","failure":"https://www.merchantsite.com/failure","cancel":"https://www.merchantsite.com/cancel"}}},"CustomerCardResponse":{"summary":"Response when creating a customer card.","value":{"cardTokenId":"0zjacza65HEobriYGN9g5XwaWZYVSeErdNnaNCLCo8QvUXuGg49KPJSy1XbhHPL8OisYOiYPJSQ2BxqR2AuC682Yu5G5LzrU0SK6ByWi0TyhkekWf1ssl6cMBWAVAOdArLcY1QXEyHdr8EsRAS2bHeMEpUU6OSmxmky5Fk","cardType":"master-card","maskedPan":"4154","createdAt":"2021-07-06T15:32:02.000Z","updatedAt":"2021-07-06T15:32:02.000Z","id":"e732f996-cb87-4120-b712-166d8183c01d","state":"PREVERIFICATION","default":true,"verificationUrl":"https://payments-web-sandbox.paymaya.com/authenticate?id=e732f996-cb87-4120-b712-166d8183c01d"}},"CustomerCardTokenResponse":{"summary":"A verified card of a customer.","value":{"first6":"545301","last4":"4154","cardTokenId":"0zjacza65HEobriYGN9g5XwaWZYVSeErdNnaNCLCo8QvUXuGg49KPJSy1XbhHPL8OisYOiYPJSQ2BxqR2AuC682Yu5G5LzrU0SK6ByWi0TyhkekWf1ssl6cMBWAVAOdArLcY1QXEyHdr8EsRAS2bHeMEpUU6OSmxmky5Fk","cardType":"master-card","maskedPan":"4154","createdAt":"2021-07-06T15:46:22.000Z","updatedAt":"2021-07-06T15:46:22.000Z","walletType":"VAULTED","state":"VERIFIED","default":true}},"UpdateCustomerCardRequest":{"summary":"Set default customer card.","value":{"isDefault":true}},"VaultedPaymentRequest":{"summary":"Vaulted card payment request.","value":{"totalAmount":{"amount":100,"currency":"PHP"},"requestReferenceNumber":"af094e84-d362-4f42-88b0-af72bfd62787","redirectUrl":{"success":"https://www.merchantsite.com/success","failure":"https://www.merchantsite.com/failure"}}},"VaultedPaymentForVerificationResponse":{"summary":"3DS required on vaulted card payment.","value":{"id":"2a6ec8c2-1c48-4a7f-9d94-2d9e7c4c49eb","isPaid":false,"status":"FOR_AUTHENTICATION","amount":"100","currency":"PHP","canVoid":false,"canRefund":false,"canCapture":false,"createdAt":"2021-07-12T10:42:32.000Z","updatedAt":"2021-07-12T10:42:32.000Z","description":"Charge for maya.juan@mail.com","paymentTokenId":"0zjacza65HEobriYGN9g5XwaWZYVSeErdNnaNCLCo8QvUXuGg49KPJSy1XbhHPL8OisYOiYPJSQ2BxqR2AuC682Yu5G5LzrU0SK6ByWi0TyhkekWf1ssl6cMBWAVAOdArLcY1QXEyHdr8EsRAS2bHeMEpUU6OSmxmky5Fk","requestReferenceNumber":"af094e84-d362-4f42-88b0-af72bfd62787","verificationUrl":"https://payments-web-sandbox.paymaya.com/authenticate?id=2a6ec8c2-1c48-4a7f-9d94-2d9e7c4c49eb"}},"VaultedPaymentPaidResponse":{"summary":"Non-3DS payment execution of vaulted card.","value":{"id":"38bc4bea-c0ce-41c7-96cc-476440eb5c03","isPaid":true,"status":"PAYMENT_SUCCESS","amount":"100","currency":"PHP","canVoid":true,"canRefund":false,"canCapture":false,"createdAt":"2021-07-12T10:37:37.000Z","updatedAt":"2021-07-12T10:37:37.000Z","description":"Charge for maya.juan@mail.com","paymentTokenId":"0zjacza65HEobriYGN9g5XwaWZYVSeErdNnaNCLCo8QvUXuGg49KPJSy1XbhHPL8OisYOiYPJSQ2BxqR2AuC682Yu5G5LzrU0SK6ByWi0TyhkekWf1ssl6cMBWAVAOdArLcY1QXEyHdr8EsRAS2bHeMEpUU6OSmxmky5Fk","fundSource":{"type":"card","id":"0zjacza65HEobriYGN9g5XwaWZYVSeErdNnaNCLCo8QvUXuGg49KPJSy1XbhHPL8OisYOiYPJSQ2BxqR2AuC682Yu5G5LzrU0SK6ByWi0TyhkekWf1ssl6cMBWAVAOdArLcY1QXEyHdr8EsRAS2bHeMEpUU6OSmxmky5Fk","description":"**** **** **** 4154","details":{"scheme":"master-card","last4":"4154","first6":"545301","masked":"545301******4154","issuer":"Others"}},"receipt":{"transactionId":"35ea1192-575e-4472-91c8-19ce9dd3dc1e","receiptNo":"8751ab7e7189","approval_code":"00001234","approvalCode":"00001234"},"approvalCode":"00001234","receiptNumber":"8751ab7e7189","requestReferenceNumber":"af094e84-d362-4f42-88b0-af72bfd62787"}},"SubscriptionResponseMany":{"summary":"Subscriptions of a customer.","value":[{"id":"c64ac079-df92-4fca-bb27-8f26347b2e38","description":"Annual membership.","status":"ACTIVE","amount":"1500","currency":"PHP","interval":"YEAR","metadata":null,"intervalCount":1,"startDate":"2021-07-08T00:00:00.000Z","endDate":"2025-07-08T00:00:00.000Z","cancelledAt":null,"createdAt":"2021-07-07T16:53:02.000Z","updatedAt":"2021-07-07T16:53:02.000Z"}]},"SubscriptionRequest":{"summary":"Subscription request.","value":{"description":"Annual membership.","totalAmount":{"amount":"1500.00","currency":"PHP"},"interval":"YEAR","intervalCount":1,"startDate":"2021-07-08","endDate":"2025-07-08"}},"SubscriptionResponse":{"summary":"Subcription response.","value":{"id":"c64ac079-df92-4fca-bb27-8f26347b2e38","description":"Annual membership.","status":"ACTIVE","amount":"1500","currency":"PHP","interval":"YEAR","metadata":null,"intervalCount":1,"startDate":"2021-07-08T00:00:00.000Z","endDate":"2025-07-08T00:00:00.000Z","cancelledAt":null,"createdAt":"2021-07-07T16:53:02.000Z","updatedAt":"2021-07-07T16:53:02.000Z"}},"CancelledSubscriptionResponse":{"summary":"Cancelled subscription response.","value":{"id":"c64ac079-df92-4fca-bb27-8f26347b2e38","description":"Annual membership.","status":"CANCELLED","amount":"1500","currency":"PHP","interval":"YEAR","metadata":null,"intervalCount":1,"startDate":"2021-07-08T00:00:00.000Z","endDate":"2025-07-08T00:00:00.000Z","cancelledAt":null,"createdAt":"2021-07-07T16:53:02.000Z","updatedAt":"2021-07-07T16:53:02.000Z"}},"SubscriptionPaymentResponseMany":{"summary":"List of subscription payments.","value":[{"id":"38bc4bea-c0ce-41c7-96cc-476440eb5c03","isPaid":true,"status":"PAYMENT_SUCCESS","amount":"100","currency":"PHP","canVoid":true,"canRefund":false,"canCapture":false,"createdAt":"2021-07-12T10:37:37.000Z","updatedAt":"2021-07-12T10:37:37.000Z","description":"Charge for maya.juan@mail.com","paymentTokenId":"0zjacza65HEobriYGN9g5XwaWZYVSeErdNnaNCLCo8QvUXuGg49KPJSy1XbhHPL8OisYOiYPJSQ2BxqR2AuC682Yu5G5LzrU0SK6ByWi0TyhkekWf1ssl6cMBWAVAOdArLcY1QXEyHdr8EsRAS2bHeMEpUU6OSmxmky5Fk","fundSource":{"type":"card","id":"0zjacza65HEobriYGN9g5XwaWZYVSeErdNnaNCLCo8QvUXuGg49KPJSy1XbhHPL8OisYOiYPJSQ2BxqR2AuC682Yu5G5LzrU0SK6ByWi0TyhkekWf1ssl6cMBWAVAOdArLcY1QXEyHdr8EsRAS2bHeMEpUU6OSmxmky5Fk","description":"**** **** **** 4154","details":{"scheme":"master-card","last4":"4154","first6":"545301","masked":"545301******4154","issuer":"Others"}},"receipt":{"transactionId":"35ea1192-575e-4472-91c8-19ce9dd3dc1e","receiptNo":"8751ab7e7189","approval_code":"00001234","approvalCode":"00001234"},"approvalCode":"00001234","receiptNumber":"8751ab7e7189","requestReferenceNumber":"af094e84-d362-4f42-88b0-af72bfd62787","subscription":"c64ac079-df92-4fca-bb27-8f26347b2e38"}]},"CaptureRequest":{"summary":"Capture payment request.","value":{"captureAmount":{"amount":100,"currency":"PHP"},"requestReferenceNumber":"1626101125"}},"OneTimeCapturedResponse":{"summary":"Captured online one-time card payment.","value":{"id":"e732f996-cb87-4120-b712-166d8183c01d","isPaid":false,"status":"CAPTURED","amount":"100","currency":"PHP","canVoid":false,"canRefund":false,"canCapture":true,"createdAt":"2021-07-12T14:45:24.000Z","updatedAt":"2021-07-12T15:36:05.000Z","description":"Charge for maya.juan@mail.com","authorizationType":"NORMAL","capturedAmount":"1","fundSource":{"type":"card","id":"nQNpuQ22LisfIDTy03egyMbEKSUd2mkYQ6lz8NVkWLWkFQEkmyXuK7pg5vgxMWLZjMX3dlP2LqXUuS46OPlBKFT1aQovGt3QRLsc9wmgWDBSQSUuP469YybwWNSjDnDjox9OD2CN4NWWp2BXiPb8a362tABZcwhwbh6XB2Uc","description":"**** **** **** 4154","details":{"scheme":"master-card","last4":"4154","first6":"545301","masked":"545301******4154","issuer":"Others"}},"receipt":{"transactionId":"6e8ea92c-cd2e-42d5-a3d3-3ad7ab59ce95","receiptNo":"86aa75a4b57c","approval_code":"00001234","approvalCode":"00001234"},"approvalCode":"00001234","receiptNumber":"86aa75a4b57c","requestReferenceNumber":"1626101125","capturedPaymentId":"ec12e7df-5b3a-493e-93bb-26cfbda4a7ac"}},"ConvenienceFeeRequest":{"summary":"Compute convenience fee request.","value":{"amount":"800","currency":"PHP"}},"ConvenienceFeeResponse":{"summary":"Compute convenience fee response.","value":{"amount":"88.89","currency":"PHP"}},"OneTimePaymentSuccess":{"summary":"Successful online one-time card payment.","value":{"id":"e732f996-cb87-4120-b712-166d8183c01d","isPaid":true,"status":"PAYMENT_SUCCESS","amount":"100","currency":"PHP","canVoid":true,"canRefund":false,"canCapture":false,"createdAt":"2021-07-01T08:17:23.000Z","updatedAt":"2021-07-01T08:17:47.000Z","description":"Charge for maya.juan@mail.com","paymentTokenId":"GFwIun6Avo1kYe0nW7S1jVysqosocS9uMU7XNpMcUEksHx8FZXbE7TQZ3F1YQwZb5xHiAv2b2hpvrpVwYuNH1gPSPdaq8Zr90WXBRMfDVC8KkiHswlRjPz5ToTPEGy76S4S052RkAiwFcC6uAEGKnFyiGZzx7NMcYczrCK8","fundSource":{"type":"card","id":"GFwIun6Avo1kYe0nW7S1jVysqosocS9uMU7XNpMcUEksHx8FZXbE7TQZ3F1YQwZb5xHiAv2b2hpvrpVwYuNH1gPSPdaq8Zr90WXBRMfDVC8KkiHswlRjPz5ToTPEGy76S4S052RkAiwFcC6uAEGKnFyiGZzx7NMcYczrCK8","description":"**** **** **** 4154","details":{"scheme":"master-card","last4":"4154","first6":"545301","masked":"545301******4154","issuer":"Others"}},"receipt":{"transactionId":"1ec32b34-eb53-4d7b-bcd4-b846aff1d601","receiptNo":"eb1ae1105a61","approval_code":"00001234","approvalCode":"00001234"},"approvalCode":"00001234","receiptNumber":"eb1ae1105a61","requestReferenceNumber":"1625127550"}},"P2mPaymentSuccess":{"summary":"Successful P2M payment.","value":{"id":"e732f996-cb87-4120-b712-166d8183c01d","isPaid":true,"status":"PAYMENT_SUCCESS","amount":"10","currency":"PHP","canVoid":true,"canRefund":true,"canCapture":false,"createdAt":"2021-07-01T08:26:13.000Z","updatedAt":"2021-07-01T08:26:16.000Z","description":"Charge for maya.juan@mail.com","paymentTokenId":"f2Z54aBePxQ94bxbKTivBgtP79igw7EtVI2iQ5yC1qSbnpONVZiPBOszn6QWG8eamJ3aMwcshX0RDkCf7skvMCvZkmIwX88Bs4vBsmLpeXJLDpsMkxyhz1PKgTWB9s3ndGtr1SDLOFDrr8IG242xJFCkEWHpdlWkG7lts","fundSource":{"type":"paymaya","id":null,"description":"PayMaya Account","details":{"scheme":"master-card","last4":"4154","first6":"545301","masked":"545301******4154","issuer":"Others"}},"receipt":{"transactionId":"41f17efc-a48b-450d-a69d-6808fd35e8ec","receiptNo":"18976ad0a321","approval_code":"00001234","approvalCode":"00001234"},"metadata":{},"approvalCode":"00001234","receiptNumber":"18976ad0a321"}},"OneTimePaymentFailed":{"summary":"Failed online one-time card payment.","value":{"id":"e732f996-cb87-4120-b712-166d8183c01d","isPaid":false,"status":"PAYMENT_FAILED","amount":"100","currency":"PHP","canVoid":false,"canRefund":false,"canCapture":false,"createdAt":"2021-07-01T08:32:41.000Z","updatedAt":"2021-07-01T08:32:59.000Z","description":"Charge for maya.juan@mail.com","paymentTokenId":"UtWWeYMCYhJEQQbdS6TVJnLoorunPZst603Z6Vg3Ym0SP3Ftw6HIn0DP4ljhc1nVTvcLByDHtKTm4SWOqahd0uQCH3BBICJSsigudt1YdwKY1b7sL15GvPNmrUw6RCL0reykOihWYOn5xv71KT9JtGw4lbfxIjJ3NUSyaq4","fundSource":{"type":"card","id":"UtWWeYMCYhJEQQbdS6TVJnLoorunPZst603Z6Vg3Ym0SP3Ftw6HIn0DP4ljhc1nVTvcLByDHtKTm4SWOqahd0uQCH3BBICJSsigudt1YdwKY1b7sL15GvPNmrUw6RCL0reykOihWYOn5xv71KT9JtGw4lbfxIjJ3NUSyaq4","description":"**** **** **** 4154","details":{"scheme":"master-card","last4":"4154","first6":"545301","masked":"545301******4154","issuer":"Others"}},"requestReferenceNumber":"1625128441","errorCode":"PY0120","errorMessage":"[PY0120] Issuer decline."}},"OneTimeAuthorizedResponse":{"summary":"Authorized online one-time card payment.","value":{"id":"e732f996-cb87-4120-b712-166d8183c01d","isPaid":false,"status":"AUTHORIZED","amount":"100","currency":"PHP","canVoid":true,"canRefund":false,"canCapture":true,"createdAt":"2021-07-12T14:45:24.000Z","updatedAt":"2021-07-12T14:45:36.000Z","description":"Charge for maya.juan@mail.com","paymentTokenId":"nQNpuQ22LisfIDTy03egyMbEKSUd2mkYQ6lz8NVkWLWkFQEkmyXuK7pg5vgxMWLZjMX3dlP2LqXUuS46OPlBKFT1aQovGt3QRLsc9wmgWDBSQSUuP469YybwWNSjDnDjox9OD2CN4NWWp2BXiPb8a362tABZcwhwbh6XB2Uc","authorizationType":"NORMAL","capturedAmount":"0","fundSource":{"type":"card","id":"nQNpuQ22LisfIDTy03egyMbEKSUd2mkYQ6lz8NVkWLWkFQEkmyXuK7pg5vgxMWLZjMX3dlP2LqXUuS46OPlBKFT1aQovGt3QRLsc9wmgWDBSQSUuP469YybwWNSjDnDjox9OD2CN4NWWp2BXiPb8a362tABZcwhwbh6XB2Uc","description":"**** **** **** 4154","details":{"scheme":"master-card","last4":"4154","first6":"545301","masked":"545301******4154","issuer":"Others"}},"receipt":{"transactionId":"6e8ea92c-cd2e-42d5-a3d3-3ad7ab59ce95","receiptNo":"86aa75a4b57c","approval_code":"00001234","approvalCode":"00001234"},"approvalCode":"00001234","receiptNumber":"86aa75a4b57c","requestReferenceNumber":"1626101125"}},"P2mPaymentFailed":{"summary":"Failed P2M payment.","value":{"id":"e732f996-cb87-4120-b712-166d8183c01d","isPaid":false,"status":"PAYMENT_FAILED","amount":"10","currency":"PHP","canVoid":false,"canRefund":false,"canCapture":false,"createdAt":"2021-07-01T08:35:37.000Z","updatedAt":"2021-07-01T08:35:39.000Z","description":"Charge for joseph.bolanos@paymaya.com","paymentTokenId":"q7KE92GxFfWI8YYXtWFgdR6wGcCcD87QC1cbQN8NLHR7L7d98TvO7uRLx3tCKiV9jGwqmORxxJz0jK8UcvxCBIOMzAUbsrqks0sdw4MYPaAdyPYoaED3JLp9jXIKBLcyeQmzljj5BmBbjHovjbt5M46l4KQw1lgt7Dfkh3Q","fundSource":{"type":"paymaya","id":null,"description":"PayMaya Account","details":{"scheme":"master-card","last4":"4154","first6":"545301","masked":"545301******4154","issuer":"Others"}},"metadata":{},"errorCode":"PY0124","errorMessage":"[PY0124] Transaction could not be verified."}},"PwpLinkedWalletPaymentSuccess":{"summary":"Successful PWP direct linked wallet payment.","value":{"id":"e732f996-cb87-4120-b712-166d8183c01d","isPaid":true,"status":"PAYMENT_SUCCESS","amount":"100","currency":"PHP","canVoid":true,"canRefund":true,"canCapture":false,"createdAt":"2021-07-13T07:34:52.000Z","updatedAt":"2021-07-13T07:34:52.000Z","description":"Charge for maya.juan@mail.com","fundSource":{"type":"card","id":"A4GmO2g8kFUeZTmOncccNe5lHGTLjJ0Fph28DMU4dNjxnwPPYQyBQS11KQ5ItXqdz7Yzft7cDR9VjCTF82vTsyOW2a3uIYzjyA0GquW6kUWrqkW3rofjFj16TKIMh6ZBoJVAZZngi4gOtJ2pRlg0uXqX4DGE3f52n7e7cVrc","description":"**** **** **** 7140","details":{"scheme":"master-card","last4":"7140","first6":"542482","masked":"542482******7140","issuer":"SmartPay","profileId":"777457095040"}},"receipt":{"transactionId":"dd4b2796-aef7-4b03-bbba-c7342eb9fec2","receiptNo":"7d8990c5cb2e","approval_code":"00001234","approvalCode":"00001234"},"approvalCode":"00001234","receiptNumber":"7d8990c5cb2e","requestReferenceNumber":"1625127550"}},"VoidRequest":{"summary":"Void request.","value":{"reason":"Return item","requestReferenceNumber":"90d3336a-ead5-420b-b924-1df9628676ae"}},"VoidSuccess":{"summary":"Successful void response.","value":{"id":"0a306b5c-4eff-4d5b-80d4-277d442d5258","payment":"e732f996-cb87-4120-b712-166d8183c01d","status":"SUCCESS","reason":"Return item","requestReferenceNumber":"90d3336a-ead5-420b-b924-1df9628676ae","createdAt":"2021-07-02T08:24:29.000Z","updatedAt":"2021-07-02T08:24:29.000Z"}},"OneTimePaymentSuccessViaRrn":{"summary":"Successful online one-time card payment.","value":[{"id":"e732f996-cb87-4120-b712-166d8183c01d","isPaid":true,"status":"PAYMENT_SUCCESS","amount":"100","currency":"PHP","canVoid":true,"canRefund":false,"canCapture":false,"createdAt":"2021-07-01T08:17:23.000Z","updatedAt":"2021-07-01T08:17:47.000Z","description":"Charge for maya.juan@mail.com","paymentTokenId":"GFwIun6Avo1kYe0nW7S1jVysqosocS9uMU7XNpMcUEksHx8FZXbE7TQZ3F1YQwZb5xHiAv2b2hpvrpVwYuNH1gPSPdaq8Zr90WXBRMfDVC8KkiHswlRjPz5ToTPEGy76S4S052RkAiwFcC6uAEGKnFyiGZzx7NMcYczrCK8","fundSource":{"type":"card","id":"GFwIun6Avo1kYe0nW7S1jVysqosocS9uMU7XNpMcUEksHx8FZXbE7TQZ3F1YQwZb5xHiAv2b2hpvrpVwYuNH1gPSPdaq8Zr90WXBRMfDVC8KkiHswlRjPz5ToTPEGy76S4S052RkAiwFcC6uAEGKnFyiGZzx7NMcYczrCK8","description":"**** **** **** 4154","details":{"scheme":"master-card","last4":"4154","first6":"545301","masked":"545301******4154","issuer":"Others"}},"receipt":{"transactionId":"1ec32b34-eb53-4d7b-bcd4-b846aff1d601","receiptNo":"eb1ae1105a61","approval_code":"00001234","approvalCode":"00001234"},"approvalCode":"00001234","receiptNumber":"eb1ae1105a61","requestReferenceNumber":"1625127550"}]},"PaymentStatusResponse":{"summary":"Payment status.","value":{"id":"e732f996-cb87-4120-b712-166d8183c01d","status":"PAYMENT_SUCCESS"}},"WebhookSuccessMany":{"summary":"List of webhooks.","value":[{"id":"954cd5a7-1316-4ea1-a014-8f848bd87726","name":"PAYMENT_SUCCESS","callbackUrl":"http://www.merchantsite.com/success","createdAt":"2021-07-05T15:11:53.000Z","updatedAt":"2021-07-05T15:11:53.000Z"}]},"WebhookRequest":{"summary":"Webhook request.","value":{"name":"PAYMENT_SUCCESS","callbackUrl":"http://www.merchantsite.com/success"}},"WebhookSuccess":{"summary":"Successful webhook response.","value":{"id":"954cd5a7-1316-4ea1-a014-8f848bd87726","name":"PAYMENT_SUCCESS","callbackUrl":"http://www.merchantsite.com/success","createdAt":"2021-07-05T15:11:53.000Z","updatedAt":"2021-07-05T15:11:53.000Z"}},"WebhookUpdateRequest":{"summary":"Update webhook URL.","value":{"callbackUrl":"http://www.merchantsite.com/success"}},"VoidSuccessMany":{"summary":"List of void transactions.","value":[{"id":"0a306b5c-4eff-4d5b-80d4-277d442d5258","payment":"e732f996-cb87-4120-b712-166d8183c01d","status":"SUCCESS","reason":"Return item","requestReferenceNumber":"90d3336a-ead5-420b-b924-1df9628676ae","createdAt":"2021-07-02T08:24:29.000Z","updatedAt":"2021-07-02T08:24:29.000Z"}]},"RefundSuccessMany":{"summary":"List of refund transactions.","value":[{"id":"8969d8a7-7287-4aee-bf43-7516b9385290","reason":"Item out of stock","amount":"1","currency":"PHP","status":"SUCCESS","payment":"e29f24d9-ea15-47c4-bca0-46dfe84a773b","requestReferenceNumber":"466d97e5-ea38-4ee2-bbcb-d2301dfcac5f","refundAt":"2021-07-09T09:09:52.000Z","createdAt":"2021-07-09T09:09:52.000Z","updatedAt":"2021-07-09T09:09:52.000Z"}]},"RefundRequest":{"summary":"Refund request.","value":{"totalAmount":{"amount":1,"currency":"PHP"},"reason":"Item out of stock","requestReferenceNumber":"466d97e5-ea38-4ee2-bbcb-d2301dfcac5f"}},"RefundSuccess":{"summary":"Successful refund response.","value":{"id":"8969d8a7-7287-4aee-bf43-7516b9385290","reason":"Item out of stock","amount":"1","currency":"PHP","status":"SUCCESS","payment":"e29f24d9-ea15-47c4-bca0-46dfe84a773b","requestReferenceNumber":"466d97e5-ea38-4ee2-bbcb-d2301dfcac5f","refundAt":"2021-07-09T09:09:52.000Z","createdAt":"2021-07-09T09:09:52.000Z","updatedAt":"2021-07-09T09:09:52.000Z"}},"PaymentCancelledResponse":{"summary":"Payment cancelled response.","value":{"id":"abff8289-0f21-4521-8eee-b28304fc3eee","isPaid":false,"status":"PAYMENT_CANCELLED","amount":"1","currency":"PHP","canVoid":false,"canRefund":false,"canCapture":false,"createdAt":"2022-05-12T15:17:27.000Z","updatedAt":"2022-05-12T15:18:04.000Z","description":"Charge for maya.juan@mail.com","requestReferenceNumber":"6478615382"}},"CustomizationsResponse":{"summary":"Customizations response.","value":{"logoUrl":"https://www.merchantsite.com/icon-store.b575c975.svg","iconUrl":"https://www.merchantsite.com/favicon.ico","appleTouchIconUrl":"https://www.merchantsite.com/touch-icon-ipad-retina.png","customTitle":"Merchant Store","colorScheme":"#85c133","redirectTimer":5,"hideReceiptInput":true,"skipResultPage":false,"showMerchantName":false}},"CustomizationsRequest":{"summary":"Customizations request.","value":{"logoUrl":"https://www.merchantsite.com/icon-store.b575c975.svg","iconUrl":"https://www.merchantsite.com/favicon.ico","appleTouchIconUrl":"https://www.merchantsite.com/touch-icon-ipad-retina.png","customTitle":"Merchant Store","colorScheme":"#85c133","redirectTimer":5,"hideReceiptInput":true,"skipResultPage":false,"showMerchantName":false}}},"parameters":{"customerId":{"name":"customerId","in":"path","description":"The unique identification string of a customer record.","required":true,"allowEmptyValue":false,"style":"simple","schema":{"type":"string","format":"uuid"},"example":"d29f1635-8313-4ed4-94e5-94b6a6018f52"},"cardToken":{"name":"cardToken","in":"path","description":"The string token representing the card information (only relevant for card-based payments).","required":true,"allowEmptyValue":false,"style":"simple","schema":{"type":"string"},"example":"0zjacza65HEobriYGN9g5XwaWZYVSeErdNnaNCLCo8QvUXuGg49KPJSy1XbhHPL8OisYOiYPJSQ2BxqR2AuC682Yu5G5LzrU0SK6ByWi0TyhkekWf1ssl6cMBWAVAOdArLcY1QXEyHdr8EsRAS2bHeMEpUU6OSmxmky5Fk"},"subscriptionId":{"name":"subscriptionId","in":"path","description":"The unique identification string of a subscription.","required":true,"allowEmptyValue":false,"style":"simple","schema":{"type":"string","format":"uuid"},"example":"c64ac079-df92-4fca-bb27-8f26347b2e38"},"paymentId":{"name":"paymentId","in":"path","description":"The unique identification string of the payment transaction.","required":true,"allowEmptyValue":false,"style":"simple","schema":{"type":"string","format":"uuid"},"example":"e732f996-cb87-4120-b712-166d8183c01d"},"rrn":{"name":"rrn","in":"path","description":"A merchant's request reference number for a given transaction.","required":true,"allowEmptyValue":false,"style":"simple","schema":{"$ref":"#/components/schemas/RequestReferenceNumber"},"example":1625127550},"webhookId":{"name":"webhookId","in":"path","description":"The unique identification string of a webhook.","required":true,"allowEmptyValue":false,"style":"simple","schema":{"type":"string","format":"uuid"},"example":"954cd5a7-1316-4ea1-a014-8f848bd87726"},"voidId":{"name":"voidId","in":"path","description":"The unique identification string of the void transaction.","required":true,"allowEmptyValue":false,"style":"simple","schema":{"type":"string","format":"uuid"},"example":"0a306b5c-4eff-4d5b-80d4-277d442d5258"},"refundId":{"name":"refundId","in":"path","description":"The unique identification string of the refund transaction.","required":true,"allowEmptyValue":false,"style":"simple","schema":{"type":"string","format":"uuid"},"example":"8969d8a7-7287-4aee-bf43-7516b9385290"}}},"x-readme":{"explorer-enabled":true,"proxy-enabled":true}}