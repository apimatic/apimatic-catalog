{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Zettle Image Service API",
    "description" : "Image Service API allows uploading of product images to be stored and used within the Zettle applications.",
    "version" : "1.0.0"
  },
  "externalDocs" : {
    "url" : "https://github.com/iZettle/api-documentation"
  },
  "servers" : [ {
    "url" : "https://image.izettle.com",
    "description" : "Production"
  } ],
  "paths" : {
    "/product/{size}/{identifier}" : {
      "get" : {
        "description" : "Get product image of required pre-resized size",
        "operationId" : "fetchProductImage",
        "parameters" : [ {
          "name" : "size",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "forceResize",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "The requested image",
            "content" : {
              "image/gif" : { }
            }
          }
        }
      }
    },
    "/product/{identifier}" : {
      "get" : {
        "description" : "Get product image of required size",
        "operationId" : "fetchProductImage_1",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "w",
          "in" : "query",
          "schema" : {
            "maximum" : 4096,
            "minimum" : 20,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "h",
          "in" : "query",
          "schema" : {
            "maximum" : 4096,
            "minimum" : 20,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "c",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "t",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "The requested image",
            "content" : {
              "image/jpeg" : { },
              "image/png" : { },
              "image/gif" : { }
            }
          }
        }
      }
    },
    "/v2/images/organizations/{organizationUuid}/products/upload" : {
      "post" : {
        "summary" : "Uploads an product image using a file in form data, returns the lookup key for the image and a list of the direct links to the images.",
        "description" : "Creates a job for uploading the image, the lookup key is returned directly.The images are eventually available for lookup.Image formats supported are: [BMP,GIF,JPEG,PNG,TIFF].The images must be > 50*50px and < 5MB .",
        "operationId" : "uploadImageFile",
        "parameters" : [ {
          "name" : "organizationUuid",
          "in" : "path",
          "description" : "Organization Identifier as an UUID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "file" ],
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataBodyPart"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "The uploaded image details, including lookup key and URL",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImageUploadResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "ZettleAccessToken" : [ "WRITE:PRODUCT" ]
        } ]
      }
    },
    "/v2/images/organizations/{organizationUuid}/products" : {
      "post" : {
        "summary" : "Uploads an product image using image or image url, returns the lookup key for the image and a list of the direct links to the images.",
        "description" : "Creates a job for uploading the image, the lookup key is returned directly.The images are eventually available for lookup.Image formats supported are: [BMP,GIF,JPEG,PNG,TIFF].The images must be > 50*50px and < 5MB .",
        "operationId" : "uploadProductImage",
        "parameters" : [ {
          "name" : "organizationUuid",
          "in" : "path",
          "description" : "Organization Identifier as an UUID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImageUploadRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "The uploaded image details, including lookup key and URL",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImageUploadResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "ZettleAccessToken" : [ "WRITE:PRODUCT" ]
        } ]
      }
    },
    "/v2/images/organizations/{organizationUuid}/products/bulk" : {
      "post" : {
        "summary" : "Upload several images in asynchronous bulk mode.",
        "description" : "Creates a job for uploading the images, the lookup keys are returned directly.The images are eventually available for lookup.Image formats supported are: [BMP,GIF,JPEG,PNG,TIFF].The images must be > 50*50px and < 5MB .",
        "operationId" : "uploadProductImageBulk",
        "parameters" : [ {
          "name" : "organizationUuid",
          "in" : "path",
          "description" : "Organization Identifier as an UUID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkProductImageUploadRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "The uploaded image details, including lookup keys and URLs",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkImageUploadResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "ZettleAccessToken" : [ "WRITE:PRODUCT" ]
        } ]
      }
    },
    "/v3/images/{identifier}" : {
      "get" : {
        "description" : "Get an image of required size. If the height or weight is not informed, will return the original size.",
        "operationId" : "fetchImage",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "description" : "Image identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "w",
          "in" : "query",
          "description" : "Requested width in pixels",
          "schema" : {
            "maximum" : 4096,
            "minimum" : 20,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "h",
          "in" : "query",
          "description" : "Requested height in pixels",
          "schema" : {
            "maximum" : 4096,
            "minimum" : 20,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "c",
          "in" : "query",
          "description" : "Crop image (true) or fit in box (false). Fit in box is default",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "t",
          "in" : "query",
          "description" : "Image format, either jpeg, png or gif. Default is jpeg.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "The requested image",
            "content" : {
              "image/jpeg" : { },
              "image/png" : { },
              "image/gif" : { }
            }
          }
        }
      }
    },
    "/v2/images/product/{identifier}" : {
      "get" : {
        "description" : "Get product image of required size",
        "operationId" : "fetchProductImage_2",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "description" : "Image identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "w",
          "in" : "query",
          "description" : "Requested width in pixels",
          "schema" : {
            "maximum" : 4096,
            "minimum" : 20,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "h",
          "in" : "query",
          "description" : "Requested height in pixels",
          "schema" : {
            "maximum" : 4096,
            "minimum" : 20,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "c",
          "in" : "query",
          "description" : "Crop image (true) or fit in box (false). Fit in box is default",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "t",
          "in" : "query",
          "description" : "Image format, either jpeg, png or gif. Default is jpeg.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "The requested image",
            "content" : {
              "image/jpeg" : { },
              "image/png" : { },
              "image/gif" : { }
            }
          }
        }
      }
    },
    "/uuid/{uuid}" : {
      "get" : {
        "operationId" : "transformUuid",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ImageUploadResponse" : {
        "required" : [ "imageLookupKey" ],
        "type" : "object",
        "properties" : {
          "imageLookupKey" : {
            "type" : "string"
          },
          "imageUrls" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "BodyPart" : {
        "type" : "object",
        "properties" : {
          "contentDisposition" : {
            "$ref" : "#/components/schemas/ContentDisposition"
          },
          "entity" : {
            "type" : "object"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "mediaType" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "subtype" : {
                "type" : "string"
              },
              "parameters" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "wildcardType" : {
                "type" : "boolean"
              },
              "wildcardSubtype" : {
                "type" : "boolean"
              }
            }
          },
          "messageBodyWorkers" : {
            "$ref" : "#/components/schemas/MessageBodyWorkers"
          },
          "parent" : {
            "$ref" : "#/components/schemas/MultiPart"
          },
          "providers" : {
            "type" : "object"
          },
          "parameterizedHeaders" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ParameterizedHeader"
              }
            }
          }
        }
      },
      "ContentDisposition" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "fileName" : {
            "type" : "string"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "modificationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "readDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "FormDataBodyPart" : {
        "type" : "object",
        "properties" : {
          "contentDisposition" : {
            "$ref" : "#/components/schemas/ContentDisposition"
          },
          "entity" : {
            "type" : "object"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "mediaType" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "subtype" : {
                "type" : "string"
              },
              "parameters" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "wildcardType" : {
                "type" : "boolean"
              },
              "wildcardSubtype" : {
                "type" : "boolean"
              }
            }
          },
          "messageBodyWorkers" : {
            "$ref" : "#/components/schemas/MessageBodyWorkers"
          },
          "parent" : {
            "$ref" : "#/components/schemas/MultiPart"
          },
          "providers" : {
            "type" : "object"
          },
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "formDataContentDisposition" : {
            "$ref" : "#/components/schemas/FormDataContentDisposition"
          },
          "simple" : {
            "type" : "boolean"
          },
          "parameterizedHeaders" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ParameterizedHeader"
              }
            }
          }
        }
      },
      "FormDataContentDisposition" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "fileName" : {
            "type" : "string"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "modificationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "readDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "MessageBodyWorkers" : {
        "type" : "object"
      },
      "MultiPart" : {
        "type" : "object",
        "properties" : {
          "contentDisposition" : {
            "$ref" : "#/components/schemas/ContentDisposition"
          },
          "entity" : {
            "type" : "object"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "mediaType" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "subtype" : {
                "type" : "string"
              },
              "parameters" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "wildcardType" : {
                "type" : "boolean"
              },
              "wildcardSubtype" : {
                "type" : "boolean"
              }
            }
          },
          "messageBodyWorkers" : {
            "$ref" : "#/components/schemas/MessageBodyWorkers"
          },
          "parent" : {
            "$ref" : "#/components/schemas/MultiPart"
          },
          "providers" : {
            "type" : "object"
          },
          "bodyParts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BodyPart"
            }
          },
          "parameterizedHeaders" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ParameterizedHeader"
              }
            }
          }
        }
      },
      "ParameterizedHeader" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "ImageUploadRequest" : {
        "title" : "ImageUploadRequest",
        "required" : [ "imageFormat" ],
        "type" : "object",
        "properties" : {
          "imageFormat" : {
            "type" : "string",
            "description" : "Image format of the picture [BMP,GIF,JPEG,PNG,TIFF].",
            "enum" : [ "BMP", "GIF", "JPEG", "PNG", "TIFF" ]
          },
          "imageData" : {
            "maxLength" : 5120000,
            "minLength" : 0,
            "type" : "string",
            "description" : "The image as a byte array",
            "format" : "byte"
          },
          "imageUrl" : {
            "type" : "string",
            "description" : "URL to an existing image",
            "format" : "url"
          },
          "imageLookupKey" : {
            "maxLength" : 128,
            "minLength" : 32,
            "pattern" : "[a-zA-Z0-9_\\-+/]+",
            "type" : "string"
          }
        },
        "description" : "Uploads an image from either a byte array or an url."
      },
      "BulkImageUploadResponse" : {
        "required" : [ "uploaded" ],
        "type" : "object",
        "properties" : {
          "uploaded" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SingleBulkImageUploadResponse"
            }
          },
          "invalid" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "SingleBulkImageUploadResponse" : {
        "required" : [ "imageLookupKey" ],
        "type" : "object",
        "properties" : {
          "imageLookupKey" : {
            "type" : "string"
          },
          "imageUrls" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "source" : {
            "type" : "string"
          }
        }
      },
      "BulkProductImageUploadRequest" : {
        "title" : "BulkProductImageUpload",
        "type" : "object",
        "properties" : {
          "imageUploads" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ImageUploadRequest"
            }
          }
        },
        "description" : "Uploads one or more images from a list of urls."
      }
    },
    "securitySchemes" : {
      "ZettleAccessToken" : {
        "type" : "http",
        "description" : "For more information about authorization API visit: https://github.com/iZettle/api-documentation",
        "scheme" : "bearer",
        "bearerFormat" : "OAuth2 access token"
      }
    }
  }
}