openapi: 3.0.0
info:
  title: Verifone Global Service Connector (GSC) - Order Service API
  description: >-
    The Order Service API provides the ability to order hardware and services as well as provision and board devices.

  termsOfService: https://www.verifone.com/en/us/legal
  contact:
    url: https://developer.verifone.com
    email: developers@verifone.com
  version: 2.14.2
servers:
  - url: https://emea.gsc.verifone.cloud/oidc/order-service
    description: EMEA Production
  - url: https://us.gsc.verifone.cloud/oidc/order-service
    description: Americas Production
  - url: https://nz.gsc.verifone.cloud/oidc/order-service
    description: New Zealand and Australia Production
  - url: https://cst.test-gsc.vfims.com/oidc/order-service
    description: Global Sandbox
  - url: https://uscst-gb.gsc.vficloud.net/oidc/order-service
    description: Americas Sandbox
tags:
  - name: Common
    description: Operations common to all orders
  - name: Merchant Orders
    description: Operations to manage Merchant Orders
  - name: POI Orders
    description: >-
      Operations to manage POI (Point of interaction/terminal) Orders for
      existing merchants.
  - name: Merchant Maintenance
    description: Operations to manage exiting merchants
  - name: Internal
    description: Verifone internal operations
  - name: Batch
    description: "Verifone internal batch operations;used for Merchant & POI maintenance "
paths:
  /orders:
    get:
      tags:
        - Common
      summary: Get the list of all orders
      description: |
        By passing in the appropriate options, you can search for
        available orders in the system
      operationId: searchOrders
      parameters:
        - name: orderReference
          in: query
          description: Optional search string for looking up order by ID
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: status
          in: query
          description: pass an optional search string for looking up order by status
          required: false
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/orderStatusEnum"
        - name: detailedStatus
          in: query
          description: >-
            pass an optional search string for looking up order by detailed
            status
          required: false
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/detailedStatusEnum"
        - name: orderType
          in: query
          description: >-
            pass an optional search string for looking up order by type.
            Otherwise this will default to MerchantOrder
          required: false
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/orderType"
        - name: filterDateType
          in: query
          description: >-
            pass an optional search string for filtering based on date type.
            Otherwise this will default to createdDate
          required: false
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/filterDateType"
        - name: userUids
          in: query
          description: >-
            List of the User_ID corresponding to the User who created or
            modified the order.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              format: uuid
              example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
        - name: startTime
          in: query
          description: The record date/time to search from.
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
            example: "2020-01-06T18:16:14.243Z"
        - name: endTime
          in: query
          description: The record date/time to search to.
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
            example: "2020-01-06T18:16:14.243Z"
        - name: lastChangeTime
          in: query
          description: Orders last changed before this time (used to find order not moved)
          required: false
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/lastChangeTime"
        - name: merchantCompany
          in: query
          description: The merchant company.
          required: false
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/merchantNameType"
        - name: merchantCompanyEntityUid
          in: query
          description: The Verifone assigned ID corresponding to the Merchant Company.
          required: false
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/merchantCompanyEntityUid"
        - name: customerEntityUid
          in: query
          description: The estate customer entity UUID for the portfolio.
          required: false
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/entityUid"
        - name: pageNumber
          in: query
          description: Page number for records.
          required: false
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/pageNumber"
        - name: pageSize
          in: query
          description: Page size for returned records.
          required: false
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/pageSize"
        - name: order
          in: query
          description: The order direction.
          required: false
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/queryOrderEnum"
        - name: orderBy
          in: query
          description: >-
            The field to order by. Valid fields are: createdBy, createdDate,
            modifiedDate, merchantName, status
          required: false
          style: form
          explode: false
          schema:
            type: string
        - name: merchantType
          in: query
          description: Merchant type for the orders
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/merchantTypeEnum"
        - name: signingProvider
          in: query
          description: >-
            The signing provider for the order. Valid fields are: ADOBE,
            SIGNICAT, DOKOBIT
          required: false
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/signingProviderEnum"
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orderSearchResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /orders/creators:
    get:
      tags:
        - Common
      summary: Get the list of the creators for the orders
      description: |
        By passing in the appropriate options, you can search for
        creators based upon the search criteria
      operationId: searchCreators
      parameters:
        - name: orderReference
          in: query
          description: Optional search string for looking up order by ID
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: status
          in: query
          description: pass an optional search string for looking up order by status
          required: false
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/orderStatusEnum"
        - name: orderType
          in: query
          description: >-
            pass an optional search string for looking up order by type.
            Otherwise this will default to MerchantOrder
          required: false
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/orderType"
        - name: filterDateType
          in: query
          description: >-
            pass an optional search string for filtering based on date type.
            Otherwise this will default to createdDate
          required: false
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/filterDateType"
        - name: userUids
          in: query
          description: >-
            List of the User_ID corresponding to the User who created or
            modified the order.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              format: uuid
              example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
        - name: startTime
          in: query
          description: The record date/time to search from.
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
            example: "2020-01-06T18:16:14.243Z"
        - name: endTime
          in: query
          description: The record date/time to search to.
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
            example: "2020-01-06T18:16:14.243Z"
        - name: merchantCompany
          in: query
          description: The merchant company.
          required: false
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/merchantNameType"
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/creatorsResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /orders/{orderId}:
    get:
      tags:
        - Common
      summary: Get a single order
      description: Get a single order by Order Id
      operationId: getOrder
      parameters:
        - name: orderId
          in: path
          description: Verifone allocated ID for the Order
          required: true
          style: simple
          explode: false
          schema:
            $ref: "#/components/schemas/orderId"
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/oneOfOrderResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /orders/{orderId}/cancel:
    post:
      tags:
        - Common
      summary: Request Order to be cancelled
      description: >-
        Request an Order to be cancelled, note depending on status of the order
        this may not be allowed.
      operationId: cancelOrder
      parameters:
        - name: orderId
          in: path
          description: Verifone allocated ID for the Order
          required: true
          style: simple
          explode: false
          schema:
            $ref: "#/components/schemas/orderId"
      requestBody:
        description: Status update request.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/orderCancellation"
      responses:
        "204":
          description: Order Cancellation Requested
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "405":
          description: Operation Not Allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_405"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /orders/drafts/{orderId}:
    post:
      tags:
        - Common
      summary: Submit Draft Order for processing
      description: Submit Draft Order for processing
      operationId: submitOrder
      parameters:
        - name: orderId
          in: path
          description: Verifone allocated ID for the Order
          required: true
          style: simple
          explode: false
          schema:
            $ref: "#/components/schemas/orderId"
        - name: validateAcquirer
          in: header
          description: An optional header indicating whether to validate the acquirer.
          required: false
          style: simple
          explode: false
          schema:
            type: boolean
      responses:
        "204":
          description: Order submitted
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
    delete:
      tags:
        - Common
      summary: Delete a Draft Order
      description: Delete a Draft Order (only if in draft state)
      operationId: deleteOrder
      parameters:
        - name: orderId
          in: path
          description: Verifone allocated ID for the Order
          required: true
          style: simple
          explode: false
          schema:
            $ref: "#/components/schemas/orderId"
      responses:
        "204":
          description: Order Deleted
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /orders/{orderId}/status:
    get:
      tags:
        - Internal
      summary: Get extended status
      description: Get more details about the order status, worfklows, etc.
      operationId: getExtendedOrderStatus
      parameters:
        - name: orderId
          in: path
          description: Verifone allocated ID for the Order
          required: true
          style: simple
          explode: false
          schema:
            $ref: "#/components/schemas/orderId"
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/extendedStatusResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
    patch:
      tags:
        - Internal
      summary: Update order status
      description: Update order status. This can only be done by internal Verifone systems.
      operationId: updateOrderState
      parameters:
        - name: orderId
          in: path
          description: Verifone allocated ID for the Order
          required: true
          style: simple
          explode: false
          schema:
            $ref: "#/components/schemas/orderId"
      requestBody:
        description: Status update request.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/statusUpdate"
      responses:
        "200":
          description: Order status updated
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /orders/merchantMaintenance:
    post:
      tags:
        - Internal
      summary: Internal Merchant Maintenance Order Request
      description: >-
        Create an internal merchant maintenance order to track the workflow
        related to a merchant maintenance request such as updating a trading
        address. This should only be used by the order service consumer after a
        change has been done to entity service and additional workflow steps are
        required to orchestrate this data to other systems.
      operationId: internalMerchantMaintenanceOrderRequest
      requestBody:
        description: Maintenance Order details
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MerchantMaintenanceOrder"
      responses:
        "201":
          description: Create Merchant Maintenance Order Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantMaintenanceOrder"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /orders/merchant:
    post:
      tags:
        - Merchant Orders
      summary: Create Merchant Order
      description: >-
        Adds a new merchant to the system and optionally allows for ordering
        hardware and services.
      operationId: addMerchantDraft
      parameters:
        - name: saveDraft
          in: header
          description: >-
            An optional header indicating whether to save the order into a DRAFT
            status. If this value is not specified or set to false then the
            order will be SUBMITTED immediately.
          required: false
          style: simple
          explode: false
          schema:
            type: boolean
        - name: validateAcquirer
          in: header
          description: An optional header indicating whether to validate the acquirer.
          required: false
          style: simple
          explode: false
          schema:
            type: boolean
      requestBody:
        description: Merchant to add
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/merchantOrder"
      responses:
        "200":
          description: Create Merchant Order Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantOrderResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /orders/merchant/{orderId}:
    put:
      tags:
        - Merchant Orders
      summary: Update/Replace Merchant Order.
      description: >-
        Update merchant order. This can only be done if the order has not been
        submitted.
      operationId: updateMerchant
      parameters:
        - name: orderId
          in: path
          description: Verifone allocated ID for the Order
          required: true
          style: simple
          explode: false
          schema:
            $ref: "#/components/schemas/orderId"
        - name: validateAcquirer
          in: header
          description: An optional header indicating whether to validate the acquirer.
          required: false
          style: simple
          explode: false
          schema:
            type: boolean
      requestBody:
        description: Order details to update
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/merchantOrder"
      responses:
        "200":
          description: Replace Merchant Order Response
          content:
            application/json:
              schema:
                maxItems: 1
                type: array
                items:
                  $ref: "#/components/schemas/MerchantOrderResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /orders/merchant/additionalServices:
    post:
      tags:
        - Additional Services
      summary: Create Additional Services Order
      description: >-
        Creates an order for add-on services (e.g. APM integration).A new PPC is
        created if no contract id is specified.
      operationId: addOnServicesOrderRequest
      parameters:
        - name: saveDraft
          in: header
          description: >-
            An optional header indicating whether to save the order into a DRAFT
            status. If this value is not specified or set to false then the
            order will be SUBMITTED immediately.
          required: false
          style: simple
          explode: false
          schema:
            type: boolean
      requestBody:
        description: Additional Services Order Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdditionalServicesOrder"
      responses:
        "201":
          description: Create Additional Services Order Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdditionalServicesOrderResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /orders/merchant/additionalServices/{orderId}:
    put:
      tags:
        - Additional Services
      summary: Update Additional Services Order
      description: >-
        Updates an existing add-on services order, provided the order has not
        yet been submitted
      operationId: updateAddOnServicesOrderRequest
      parameters:
        - name: orderId
          in: path
          description: Verifone allocated ID for the Order
          required: true
          style: simple
          explode: false
          schema:
            $ref: "#/components/schemas/orderId"
      requestBody:
        description: Additional Services Order Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdditionalServicesOrder"
      responses:
        "201":
          description: Update Additional Services Order Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdditionalServicesOrderResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /orders/pois:
    post:
      tags:
        - POI Orders
      summary: Create POI Order
      description: >-
        Adds new Point Of Interactions (terminals) to an existing merchant/store
        and optionally order hardware and services
      operationId: addPoiOrder
      parameters:
        - name: saveDraft
          in: header
          description: >-
            An optional header indicating whether to save the order into a DRAFT
            status. If this value is not specified or set to false then the
            order will be SUBMITTED immediately.
          required: false
          style: simple
          explode: false
          schema:
            type: boolean
        - name: validateAcquirer
          in: header
          description: An optional header indicating whether to validate the acquirer.
          required: false
          style: simple
          explode: false
          schema:
            type: boolean
      requestBody:
        description: Terminals to add
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/poiOrder"
      responses:
        "200":
          description: Create POI Order Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PoiOrderResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /orders/pois/{orderId}:
    put:
      tags:
        - POI Orders
      summary: Update/Replace POI order.
      description: >-
        Update/Replace POI order. This can only be done if the order has not
        been submitted.
      operationId: updatePoiOrder
      parameters:
        - name: orderId
          in: path
          description: Verifone allocated ID for the Order
          required: true
          style: simple
          explode: false
          schema:
            $ref: "#/components/schemas/orderId"
        - name: validateAcquirer
          in: header
          description: An optional header indicating whether to validate the acquirer.
          required: false
          style: simple
          explode: false
          schema:
            type: boolean
      requestBody:
        description: Order details to update
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/poiOrder"
      responses:
        "200":
          description: Replace POI Order Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PoiOrderResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /pois/orders/maintenance/{poiUid}:
    post:
      tags:
        - Maintenance Orders
      summary: POI Maintenance Order Request
      description: Submits a POI Maintenance Order Request
      operationId: poiMaintenanceOrderRequest
      parameters:
        - name: poiUid
          in: path
          description: The assigned ID corresponding for the POI.
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
          example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
      requestBody:
        description: Maintenance Order details
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/poiMaintenanceOrder"
      responses:
        "201":
          description: Create POI Maintenance Order Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PoiMaintenanceOrderResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /pois/orders/accessories/{poiUid}:
    description: Accessory orders
    post:
      tags:
        - POI Orders
      summary: Create POI Accessory Order
      description: >-
        Creates an order for add-on accessories & consumables (e.g. stationery)
        which are typically used with a POI
      operationId: accessoryOrderRequest
      parameters:
        - name: poiUid
          in: path
          description: The assigned ID corresponding for the POI.
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
          example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
      requestBody:
        description: Accessory Order Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PoiAccessoryOrder"
      responses:
        "201":
          description: POI Accessory Order Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PoiAccessoryOrderResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /entities/{entityUid}/tradingAddress:
    patch:
      tags:
        - Merchant Maintenance
      summary: Partial Update of a Trading address
      description: >-
        A partial update of an existing Merchant Entity Address. Only replaces
        the provided parameters.
      operationId: updateEntityAddress
      parameters:
        - name: entityUid
          in: path
          description: The Verifone assigned ID corresponding to the entity.
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
          example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
      requestBody:
        description: Address details to update
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/baseAddress"
      responses:
        "200":
          description: Patch Trading Address Response
          headers:
            orderId:
              style: simple
              explode: false
              schema:
                $ref: "#/components/schemas/orderId"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/baseAddressWithoutType"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /entities/{entityUid}:
    delete:
      tags:
        - Merchant Maintenance
      summary: Delete a Single Merchant Entity
      description: Deletes an Entity.
      operationId: deleteEntity
      parameters:
        - name: entityUid
          in: path
          description: The Verifone assigned ID corresponding to the entity.
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
          example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
      responses:
        "204":
          description: The Entity was successfully deleted.
          headers:
            orderId:
              style: simple
              explode: false
              schema:
                $ref: "#/components/schemas/orderId"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
    patch:
      tags:
        - Merchant Maintenance
      summary: Partial Update of a Merchant Entity
      description: >-
        A partial update of an existing Merchant Entity. Only replaces the
        provided parameters. 


        This can be used to activate/deactivate a merchant entity and change the
        trading name.
      operationId: patchEntity
      parameters:
        - name: entityUid
          in: path
          description: The Verifone assigned ID corresponding to the entity.
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
          example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
      requestBody:
        description: Entity details to update
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/entityPatch"
      responses:
        "204":
          description: Patch Entity Success.
          headers:
            orderId:
              style: simple
              explode: false
              schema:
                $ref: "#/components/schemas/orderId"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /pois/{poiUid}/parentPoi:
    get:
      tags:
        - Multi Merchant
      summary: Get multi merchant parent record.
      description: Get the parent multi merchant POI record associated with this POI.
      operationId: getParentPoi
      parameters:
        - name: poiUid
          in: path
          description: The assigned ID corresponding for the POI.
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
          example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
      responses:
        "200":
          description: Multi Merchant Parent (owner) POI.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/poiTypeSimplifiedResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /pois/{poiUid}/childPois/move:
    post:
      tags:
        - Multi Merchant
      summary: Move child POIs to a new parent.
      description: Move existing child POI records to a new multi merchant parent POI.
      operationId: childPoisMove
      parameters:
        - name: poiUid
          in: path
          description: The assigned ID corresponding for the POI.
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
          example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
      requestBody:
        description: Destination POI details.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/childPoiMoveRequest"
      responses:
        "200":
          description: Multi Merchant Parent POI.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/poiTypeSimplifiedResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /pois/{poiUid}:
    delete:
      tags:
        - POI Maintenance
      summary: Delete a Single POI
      description: Deletes a POI.
      operationId: deletePoi
      parameters:
        - name: poiUid
          in: path
          description: The assigned ID corresponding for the POI.
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
          example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
      responses:
        "204":
          description: The Poi was successfully deleted.
          headers:
            orderId:
              style: simple
              explode: false
              schema:
                $ref: "#/components/schemas/orderId"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
    patch:
      tags:
        - POI Maintenance
      summary: Partial Update of a POI
      description: >-
        A partial update of an existing POI record. Only replaces the provided
        parameters. 


        This can be used to activate/deactivate a POI record. When deactivated
        the terminal will be blocked from transacting.
      operationId: patchPoi
      parameters:
        - name: poiUid
          in: path
          description: The assigned ID corresponding for the POI.
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
          example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
      requestBody:
        description: POI details to update
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/poiPatch"
      responses:
        "204":
          description: Patch POI Success.
          headers:
            orderId:
              style: simple
              explode: false
              schema:
                $ref: "#/components/schemas/orderId"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /entities/{entityUid}/users:
    post:
      tags:
        - User
      summary: Create a new unapproved user
      description: >-
        Create an unapproved merchant user associated to the target customer
        entity. The target entity needs to have a customer profile in the
        portfolio service and an entity configured to add unapproved users to in
        the customer profile.
      operationId: createUnapprovedUser
      parameters:
        - name: entityUid
          in: path
          description: The Verifone assigned ID corresponding to the entity.
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
          example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
      requestBody:
        description: Contact Details of the user to create
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContactType"
      responses:
        "201":
          description: User Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddUserResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /v2/entities/{entityUid}/users:
    post:
      tags:
        - User
      summary: Create a new unapproved user, version 2
      description: >-
        Create an unapproved merchant user associated to the target customer
        entity. The target entity needs to have a customer profile in the
        portfolio service and an entity configured to add unapproved users to in
        the customer profile.
      operationId: createUnapprovedUserV2
      parameters:
        - name: entityUid
          in: path
          description: The Verifone assigned ID corresponding to the entity.
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
          example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
      requestBody:
        description: Contact Details of the user to create
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserContactType"
      responses:
        "201":
          description: User Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddUserResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /entities/{entityUid}/purchasedTid:
    summary: >-
      Set of APIs used when the TID allocation scheme is PURCHASED.Assumed that
      purchased TIDs are checked for uniqueness
    description: APIs for purchased TIDs
    get:
      tags:
        - Purchased TIDs
      summary: List TIDs in the pool
      description: Get list of TIDs from the TID pool
      operationId: listPurchasedTIDs
      parameters:
        - name: entityUid
          in: path
          description: The Verifone assigned ID corresponding to the entity.
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
          example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
        - name: status
          in: query
          required: false
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/tidPoolStatusEnum"
        - name: pageNumber
          in: query
          description: Page number for records.
          required: false
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/pageNumber"
        - name: pageSize
          in: query
          description: Page size for returned records.
          required: false
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/pageSize"
        - name: orderBy
          in: query
          description: >-
            The field to order by. Valid fields are: createdDate, modifiedDate,
            status
          required: false
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Purchased TIDs results matching criteria
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tidPoolFetchResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
    put:
      tags:
        - Purchased TIDs
      summary: Insert TIDs into pool
      description: >-
        Insert an array of purchased TIDs into the TID pool.Its assumed that
        purchased TIDs are checked for uniqueness in the system.<br/> Used by
        sales/operations.
      operationId: insertPurchasedTIDs
      parameters:
        - name: entityUid
          in: path
          description: The Verifone assigned ID corresponding to the entity.
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
          example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
        - name: orderReference
          in: query
          description: Optional search string for looking up order by ID
          required: false
          style: form
          explode: true
          schema:
            type: string
      requestBody:
        description: "Array of TIDs to insert . By default allocated flag is set to false "
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/uniqueTIDs"
      responses:
        "200":
          description: TIDs inserted into pool
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
    patch:
      tags:
        - Purchased TIDs
      summary: Patch status of TIDs in the pool
      description: Change allocation status of purchased TID to required status
      operationId: changePurchasedTIDAllocation
      parameters:
        - name: entityUid
          in: path
          description: The Verifone assigned ID corresponding to the entity.
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
          example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
        - name: status
          in: query
          required: true
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/tidPoolStatusEnum"
        - name: orderReference
          in: query
          description: Optional search string for looking up order by ID
          required: false
          style: form
          explode: true
          schema:
            type: string
      requestBody:
        description: Array of TIDs whose allocation status needs to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/uniqueTIDs"
      responses:
        "204":
          description: TID status changed
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /entities/{entityUid}/purchasedTid/reserve:
    get:
      tags:
        - Purchased TIDs
      summary: Reserve TIDs from the pool
      description: >-
        Reserve 'çount' number of TIDs from the TID pool. If 'count' is not
        available 400 is returned
      operationId: reservePurchasedTIDs
      parameters:
        - name: entityUid
          in: path
          description: The Verifone assigned ID corresponding to the entity.
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
          example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
        - name: count
          in: query
          description: Count of TIDs required from pool
          required: true
          style: form
          explode: false
          schema:
            minimum: 1
            type: integer
        - name: duration
          in: query
          description: "Duration in hours to reserve the TID "
          required: false
          style: form
          explode: false
          schema:
            maximum: 12
            minimum: 1
            type: integer
            default: 1
        - name: orderReference
          in: query
          description: Optional search string for looking up order by ID
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: Purchased TIDs results matching criteria
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/uniqueTIDs"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /entities/mid/{rangeId}:
    post:
      tags:
        - MID/TID Generation
      summary: Generate a new Verifone Merchant ID based on Range
      description: >-
        Generate a new Verifone Merchant ID based on range, which is configured
        in the Order Service configuration database
      operationId: generateMerchantId
      parameters:
        - name: rangeId
          in: path
          description: Range allocation to be performed from
          required: true
          style: simple
          explode: true
          schema:
            type: string
            example: verifone
      responses:
        "201":
          description: MID Generated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/midAllocation"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /pois/tid/{rangeId}:
    post:
      tags:
        - MID/TID Generation
      summary: Generate a new Verifone Terminal ID based on Range
      description: >-
        Generate a new Verifone Terminal ID based on range which is configured
        in the Order Service configuration database.
      operationId: generationTerminalId
      parameters:
        - name: rangeId
          in: path
          description: Range allocation to be performed from
          required: true
          style: simple
          explode: true
          schema:
            type: string
            example: verifone
      responses:
        "201":
          description: TID Generated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tidAllocation"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /accounts/sites:
    get:
      tags:
        - Internal
      summary: Get the list of all Verifone Sites in Billing Engine
      description: >
        Using the UUID of the user or the merchantCompanyUid in the query (ROLE)
        Dependent.
      operationId: searchAccountSites
      parameters:
        - name: customerEntityUid
          in: query
          description: The estate customer entity UUID for the portfolio.
          required: true
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/entityUid"
        - name: merchantCompanyEntityUid
          in: query
          description: The Verifone assigned ID corresponding to the Merchant Company.
          required: false
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/merchantCompanyEntityUid"
        - name: billingSitesOnly
          in: query
          description: Only return the billing sites.
          required: false
          style: form
          explode: false
          schema:
            type: boolean
            default: true
        - name: billingSiteId
          in: query
          description: The billing site id to query.
          required: false
          style: form
          explode: false
          schema:
            type: string
          example: "13232331"
        - name: locateCustomer
          in: query
          description: >-
            A flag to indicate if when creating the user to verify them by
            locating the customer in the verifone billing systems.
          required: false
          style: form
          explode: false
          schema:
            type: boolean
        - name: merchantCompany
          in: query
          description: The merchant company.
          required: false
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/merchantNameType"
        - name: addressLine
          in: query
          description: The first line of the address
          required: false
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/addressLine"
        - name: postCode
          in: query
          description: The postal code of the address.
          required: false
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/postCode"
        - name: activeBank
          in: query
          description: Last 4 digits of active bank account
          required: false
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/activeBank"
        - name: customerId
          in: query
          description: Customer ID of existing unapproved user
          required: false
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/customerId"
        - name: siteId
          in: query
          description: Site ID of existing unapproved user
          required: false
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/siteId"
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountSitesResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /accounts/oracle:
    get:
      tags:
        - Accounts
      summary: Get the list of all oracle accounts
      description: |
        By passing in the appropriate options, you can search for
        available oracle accounts in the system
      operationId: searchAccounts
      parameters:
        - name: oracleAccountId
          in: query
          description: The oracle Account Id.
          required: false
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/oracleAccountId"
        - name: userUid
          in: query
          description: >-
            The User_ID corresponding to the User who created or modified the
            order.
          required: false
          style: form
          explode: false
          schema:
            type: string
            format: uuid
            example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
        - name: merchantCompanyEntityUid
          in: query
          description: The Verifone assigned ID corresponding to the Merchant Company.
          required: false
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/merchantCompanyEntityUid"
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/oracleAccountDetailsResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
    post:
      tags:
        - Accounts
      summary: Add Oracle account
      description: Add Oracle account with MOP users and/or merchant company
      operationId: addOracleAccount
      requestBody:
        description: Oracle Account details
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/oracleAccountDetails"
      responses:
        "201":
          description: Add Oracle Account Success.
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /accounts/oracle/{oracleAccountId}:
    delete:
      tags:
        - Accounts
      summary: Delete Oracle account
      description: Delete Oracle account with MOP users and/or merchant company.
      operationId: deleteOracleAccount
      parameters:
        - name: oracleAccountId
          in: path
          description: The oracle Account Id.
          required: true
          style: simple
          explode: false
          schema:
            $ref: "#/components/schemas/oracleAccountId"
      responses:
        "204":
          description: The Oracle accounts for user was successfully deleted.
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
    patch:
      tags:
        - Accounts
      summary: Update Oracle account
      description: Update Oracle account with MOP users and/or merchant company.
      operationId: updateOracleAccount
      parameters:
        - name: oracleAccountId
          in: path
          description: The oracle Account Id.
          required: true
          style: simple
          explode: false
          schema:
            $ref: "#/components/schemas/oracleAccountId"
      requestBody:
        description: Oracle Account details
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/oracleAccountDetails"
      responses:
        "204":
          description: Patch Oracle Account Success.
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /orders/batch/{batchId}:
    get:
      tags:
        - Batch
      summary: Get single batch details
      operationId: getBatchDetails
      parameters:
        - name: batchId
          in: query
          description: Batch id for this request
          required: true
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/batchId"
      responses:
        "201":
          description: Details of a batch
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/batchDetails"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
    post:
      tags:
        - Batch
      summary: Trigger batch operations
      operationId: postBatchDetails
      parameters:
        - name: batchId
          in: query
          description: Batch id for this request
          required: true
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/batchId"
        - name: notes
          in: query
          description: Additional information
          required: false
          style: form
          explode: false
          schema:
            maxLength: 100
            type: string
      responses:
        "201":
          description: Batch triggered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/batchDetails"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
    patch:
      tags:
        - Batch
      summary: Update batch details
      operationId: patchBatchDetails
      parameters:
        - name: batchId
          in: query
          description: Batch id for this request
          required: true
          style: form
          explode: false
          schema:
            $ref: "#/components/schemas/batchId"
        - name: notes
          in: query
          description: Additional information
          required: false
          style: form
          explode: false
          schema:
            maxLength: 100
            type: string
      requestBody:
        description: Batch updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/batchDetailsUpdatable"
      responses:
        "201":
          description: Batch details updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/batchDetails"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
  /orders/batch:
    get:
      tags:
        - Batch
      summary: List batches
      operationId: listBatches
      parameters:
        - name: customerEntityUid
          in: query
          description: The estate customer entity UUID for the portfolio.
          required: false
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/entityUid"
        - name: orderId
          in: query
          description: Verifone allocated ID for the Order
          required: false
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/orderId"
        - name: status
          in: query
          description: Batch status for this request
          required: false
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/batchStatus"
        - name: pageNumber
          in: query
          description: Page number for records.
          required: false
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/pageNumber"
        - name: pageSize
          in: query
          description: Page size for returned records.
          required: false
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/pageSize"
        - name: startTime
          in: query
          description: The record date/time to search from.
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
            example: "2020-01-06T18:16:14.243Z"
        - name: endTime
          in: query
          description: The record date/time to search to.
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
            example: "2020-01-06T18:16:14.243Z"
        - name: populateTransactions
          in: query
          description: Whether to include transactions
          required: false
          style: form
          explode: false
          schema:
            type: boolean
            default: false
        - name: orderBy
          in: query
          description: >-
            The field to order by.Supports
            startTime,endTime,status,customerEntityUid
          required: false
          style: form
          explode: false
          schema:
            type: string
      responses:
        "201":
          description: Batch search results
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchSearchResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Unauthorised Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "403":
          description: Forbidden Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/httpError403"
        "404":
          description: Not Found Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_404"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_429"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_500"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_503"
        "504":
          description: Service Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_504"
components:
  schemas:
    signersInformation:
      required:
        - contact
      type: object
      properties:
        providerRef:
          type: string
          description: Signing Provider reference to the signers signing request
        contact:
          $ref: "#/components/schemas/ContactType"
        signed:
          type: boolean
          description: Has the signer signed the contract
          default: false
        signedDateTime:
          type: string
          description: Date/Time signer signed the request
          format: date-time
      description: Information on the signers in the request
    signingInformation:
      required:
        - provider
        - providerRef
      type: object
      properties:
        provider:
          type: string
          description: Signing Provider used
          enum:
            - SIGNICAT
            - ADOBE
            - DOKOBIT
        providerRef:
          type: string
          description: Signing Provider reference to the signing request
        signedFileUrl:
          type: string
          description: URL to the signed file
        signingRequests:
          type: array
          items:
            $ref: "#/components/schemas/signersInformation"
      description: Information on the signing request
    svsMerchantId:
      maxLength: 30
      pattern: ^[0-9]+$
      type: string
      description: SVS assigned Merchant Identifier.
      example: "1111111"
    svsStoreNo:
      maxLength: 15
      pattern: ^[0-9]+$
      type: string
      description: SVS assigned Store Number.
      example: "0303"
    svsDivision:
      maxLength: 30
      pattern: ^[a-zA-Z0-9]+$
      type: string
      description: SVS assigned Division.
      example: "22"
    serialNumber:
      maxLength: 12
      type: string
      description: The serial number of the physical device
    altVfiEntityId:
      maxLength: 30
      pattern: ^[a-zA-Z0-9]+$
      type: string
      description: >-
        A Verifone assigned merchantId used to identify the Merchant Entity
        within Verifone systems for transaction processing. This is
        traditionally passed in ISO8583 DE42. This will also be used for Payment
        Processing Contracts unless a different merchant id is specified as part
        of the contract.


        Do not specify this property unless the Entity is considered to be a
        Merchant Entity i.e. an Entity that holds a contract to process
        payments.


        <strong>This value is not guaranteed as globally unique within Verifone.
        That value is the entityUid (uuid) property that will be assigned on
        creation of the Entity and returned on the response.</strong>.
      example: "1003933752"
    altVfiPoiId:
      maxLength: 12
      type: string
      description: >-
        An alternative Verifone assigned identifier used for the POI within
        Verifone systems for transaction processing. This is also referred to as
        the Terminal ID (TID). This value maps to DE41 in ISO8583 specification.
        This identifier may also be used per contract if required.


        <strong>This value is not guaranteed to be globally unique.

        The unique value is the internally assigned uuid - poiUid which is
        returned on the response.</strong>
      example: "1004631982"
    uniqueTIDs:
      minItems: 1
      uniqueItems: true
      type: array
      description: An array of unique TIDs
      items:
        $ref: "#/components/schemas/altVfiPoiId"
    tidPoolItem:
      type: object
      properties:
        altVfiPoiId:
          $ref: "#/components/schemas/altVfiPoiId"
        createdDate:
          type: string
          format: date-time
        modifiedDate:
          type: string
          format: date-time
        reference:
          type: string
          description: Order reference used while adding TID to pool
        status:
          $ref: "#/components/schemas/tidPoolStatusEnum"
      description: A TID from the pool
    tidPoolStatusEnum:
      type: string
      description: "Allocation status of the purchased TID . "
      enum:
        - ALLOCATED
        - UNALLOCATED
        - RESERVED
        - INACTIVE
    tidPoolFetchResponse:
      required:
        - metadata
        - tids
      type: object
      properties:
        tids:
          type: array
          items:
            $ref: "#/components/schemas/tidPoolItem"
        metadata:
          $ref: "#/components/schemas/metadata"
    midAllocation:
      required:
        - altVfiEntityId
      type: object
      properties:
        altVfiEntityId:
          $ref: "#/components/schemas/altVfiEntityId"
      description: VFI Merchant ID allocated
    tidAllocation:
      required:
        - altVfiPoiId
      type: object
      properties:
        altVfiPoiId:
          $ref: "#/components/schemas/altVfiPoiId"
      description: VFI Terminal ID allocated
    poiMaintenanceOrder:
      required:
        - maintenanceType
      type: object
      allOf:
        - $ref: "#/components/schemas/baseOrderData"
        - properties:
            maintenanceType:
              type: string
              enum:
                - Swapout
                - Recovery
            deliveryPackage:
              $ref: "#/components/schemas/BundleAndData"
    PoiAccessoryOrder:
      required:
        - accessory
      type: object
      description: Accessory & corresponding package details
      allOf:
        - $ref: "#/components/schemas/baseOrderData"
        - properties:
            accessory:
              $ref: "#/components/schemas/PoiAccessory"
    PoiAccessory:
      required:
        - accessoryType
      type: object
      properties:
        accessoryType:
          type: string
          description: Type of accessory
          enum:
            - CONSUMABLES
            - OTHER
          default: CONSUMABLES
      description: Accessory type and bundle
      discriminator:
        propertyName: accessoryType
        mapping:
          CONSUMABLES: "#/components/schemas/PoiConsumablesOrder"
    PoiConsumablesOrder:
      required:
        - additionalDevicePackages
      type: object
      allOf:
        - $ref: "#/components/schemas/PoiAccessory"
        - properties:
            additionalDevicePackages:
              maxItems: 100
              minItems: 1
              type: array
              items:
                $ref: "#/components/schemas/BundleAndPriceAndDataQuantity"
    MerchantMaintenanceOrder:
      required:
        - entityUid
        - eventType
        - itemId
        - orderId
        - status
      type: object
      allOf:
        - $ref: "#/components/schemas/baseOrderData"
        - properties:
            eventType:
              type: string
              enum:
                - TradingAddressUpdated
                - EntityDeleted
                - EntityUpdated
                - PoiUpdated
                - PoiDeleted
            itemId:
              type: string
              description: The ID of the record associated to the event.
            orderId:
              $ref: "#/components/schemas/orderId"
            status:
              $ref: "#/components/schemas/orderStatusEnum"
            createdUserUid:
              $ref: "#/components/schemas/createdUserUid"
            createdBy:
              $ref: "#/components/schemas/userNameType"
            createdDate:
              type: string
              description: The created date for this order.
              format: date-time
            modifiedUserUid:
              type: string
              description: The assigned User_ID corresponding to the Order Modified By.
              format: uuid
              example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
            modifiedBy:
              $ref: "#/components/schemas/userNameType"
            modifiedDate:
              type: string
              description: The last modified date for this order.
              format: date-time
            orderType:
              type: string
              default: MerchantMaintenanceOrder
            entityUid:
              $ref: "#/components/schemas/entityUid"
            merchant:
              $ref: "#/components/schemas/merchantNameWrapper"
            content:
              type: object
    ReferenceContactType:
      required:
        - companyName
        - contact
        - referenceType
      type: object
      properties:
        contact:
          $ref: "#/components/schemas/ContactType"
        companyName:
          type: string
          description: Name of the company.
          example: Joe's bikes
        accountNumber:
          type: string
          description: The account Number of the reference
          example: "23008275"
        referenceType:
          type: string
          description: Type of reference.
          enum:
            - BANK
            - TRADE
      description: Company and contact details for reference
    PaymentAccountType:
      type: string
      description: Type of account.
      enum:
        - CHEQUE
        - SAVINGS
    PaymentDetails:
      required:
        - paymentType
      type: object
      properties:
        paymentType:
          type: string
          description: Type of payment that can be made.
          default: CREDIT
      description: >-
        Details of how the order will be paid, and the further re-occuring
        billing for services.
      discriminator:
        propertyName: paymentType
        mapping:
          ACCOUNT: "#/components/schemas/PaymentDetailsAccount"
          CREDIT: "#/components/schemas/PaymentDetailsCredit"
          NET: "#/components/schemas/PaymentDetailsNET"
    PaymentDetailsAccount:
      required:
        - accountCurrency
        - accountName
        - accountNumber
        - accountType
        - institutionName
      allOf:
        - $ref: "#/components/schemas/PaymentDetails"
        - properties:
            accountType:
              $ref: "#/components/schemas/PaymentAccountType"
            accountCurrency:
              $ref: "#/components/schemas/CurrencyCodeEnum"
            institutionName:
              type: string
              description: Name of the institution where the account is held.
              example: HSBC Bank
            accountName:
              type: string
              description: >-
                Name of the account as known by the financial institution
                operating the account.
              example: Coffee Supreme LTD
            sortCode:
              pattern: ^[0-9]{6,6}$
              type: string
              description: The UK Sorting Code identifier the sort code is xx xx xx.
              example: "301105"
            bsb:
              pattern: ^[0-9]{6,6}$
              type: string
              description: >-
                An Australian/New Zealand term for the Bank State Branch
                indicator. It is a 6 digit value constructed with the first 2
                digits identifying the bank.
              example: "022039"
            routingTransitNumber:
              pattern: ^[0-9]{9,9}$
              type: string
              description: >-
                routing transit number for the bank account. A routing transit
                number is a nine-digit number used to identify a bank or
                financial institution when clearing funds or processing checks.
                Established by the American Bankers Association (ABA)
              example: "247484410"
            accountNumber:
              type: string
              description: The Number of the account
              example: "23008275"
            accountAddress:
              $ref: "#/components/schemas/baseAddress"
            ean:
              pattern: ^[0-9]{13,13}$
              type: string
              description: EAN Reference, thirteen digit reference
              example: "23008275"
    PaymentDetailsNET:
      allOf:
        - $ref: "#/components/schemas/PaymentDetails"
    PaymentDetailsCredit:
      required:
        - accountCurrency
        - accountType
      allOf:
        - $ref: "#/components/schemas/PaymentDetails"
        - properties:
            accountType:
              $ref: "#/components/schemas/PaymentAccountType"
            accountCurrency:
              $ref: "#/components/schemas/CurrencyCodeEnum"
            creditAmountRequested:
              type: number
              description: Amount of credit to be requested.
              format: float
              example: 1500
            purchaseOrderReference:
              type: string
              description: Purchase Order Reference.
              example: PO12345678
            existingCustomerLegalName:
              type: string
              description: Existing Customer Legal Name.
              example: Coffee Co. Ltd
            references:
              maxItems: 50
              type: array
              description: List of references.
              items:
                $ref: "#/components/schemas/ReferenceContactType"
    baseOrderData:
      required:
        - customerEntityUid
        - orderReference
      type: object
      properties:
        orderReference:
          $ref: "#/components/schemas/orderReference"
        customerEntityUid:
          type: string
          description: >-
            Verifone allocated ID for the customer this order is for (packages
            and bundles are associated with this entity).
          format: uuid
        requestedDate:
          type: string
          description: The requested date for this order.
          format: date-time
        poRef:
          type: string
          description: Purchase Order Reference
          example: "85219587"
          deprecated: true
        paymentDetails:
          $ref: "#/components/schemas/PaymentDetails"
        notes:
          type: string
          description: Notes for the Order
          example: Current in draft, caller got busy, callback anothertime.
        additionalOrderData:
          maxItems: 100
          type: array
          description: >-
            Input data which maybe required for the country/business unit to to
            complete the order. For example some countries require a VAT ID, or
            different legal forms of business, this will be defined by Verifone
            if needed for your integration
          items:
            $ref: "#/components/schemas/VariableResponseType"
    order:
      required:
        - lineItems
        - orderReference
      type: object
      allOf:
        - $ref: "#/components/schemas/baseOrderData"
        - properties:
            shipTo:
              type: string
              example: "85219587"
            lineItems:
              maxItems: 1000
              type: array
              items:
                $ref: "#/components/schemas/orderLine"
    createdUserUid:
      type: string
      description: The assigned User_ID corresponding to the Order Created By.
      format: uuid
      example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
    OrderResponse:
      required:
        - createdDate
        - orderId
        - orderType
        - status
      allOf:
        - $ref: "#/components/schemas/order"
        - properties:
            orderId:
              $ref: "#/components/schemas/orderId"
            status:
              $ref: "#/components/schemas/orderStatusEnum"
            createdUserUid:
              $ref: "#/components/schemas/createdUserUid"
            createdBy:
              $ref: "#/components/schemas/userNameType"
            createdDate:
              type: string
              description: The created date for this order.
              format: date-time
            modifiedUserUid:
              type: string
              description: The assigned User_ID corresponding to the Order Modified By.
              format: uuid
              example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
            modifiedBy:
              $ref: "#/components/schemas/userNameType"
            modifiedDate:
              type: string
              description: The last modified date for this order.
              format: date-time
            orderType:
              type: string
              default: ManualOrder
            entityUid:
              $ref: "#/components/schemas/entityUid"
            merchantCompanyEntityUid:
              $ref: "#/components/schemas/merchantCompanyEntityUid"
    PoiMaintenanceOrderResponse:
      required:
        - orderId
        - orderType
        - status
      allOf:
        - $ref: "#/components/schemas/poiMaintenanceOrder"
        - properties:
            orderId:
              $ref: "#/components/schemas/orderId"
            status:
              $ref: "#/components/schemas/orderStatusEnum"
            createdUserUid:
              $ref: "#/components/schemas/createdUserUid"
            createdBy:
              $ref: "#/components/schemas/userNameType"
            createdDate:
              type: string
              description: The created date for this order.
              format: date-time
            modifiedUserUid:
              type: string
              description: The assigned User_ID corresponding to the Order Modified By.
              format: uuid
              example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
            modifiedBy:
              $ref: "#/components/schemas/userNameType"
            modifiedDate:
              type: string
              description: The last modified date for this order.
              format: date-time
            orderType:
              type: string
              default: POIMaintenanceOrder
            entityUid:
              $ref: "#/components/schemas/entityUid"
            merchantCompanyEntityUid:
              $ref: "#/components/schemas/merchantCompanyEntityUid"
            merchant:
              $ref: "#/components/schemas/merchantNameWrapper"
            internal:
              $ref: "#/components/schemas/internalAllocatedInformation"
    PoiAccessoryOrderResponse:
      required:
        - orderId
        - orderType
        - status
      allOf:
        - $ref: "#/components/schemas/PoiAccessoryOrder"
        - properties:
            orderType:
              type: string
              default: POIAccessoryOrder
        - $ref: "#/components/schemas/commonOrderResponse"
    AdditionalServicesOrderResponse:
      allOf:
        - $ref: "#/components/schemas/AdditionalServicesOrder"
        - properties:
            orderType:
              type: string
              default: AdditionalServicesOrder
        - $ref: "#/components/schemas/commonOrderResponse"
    commonOrderResponse:
      properties:
        orderId:
          $ref: "#/components/schemas/orderId"
        status:
          $ref: "#/components/schemas/orderStatusEnum"
        createdUserUid:
          $ref: "#/components/schemas/createdUserUid"
        createdBy:
          $ref: "#/components/schemas/userNameType"
        createdDate:
          type: string
          description: The created date for this order.
          format: date-time
        modifiedUserUid:
          type: string
          description: The assigned User_ID corresponding to the Order Modified By.
          format: uuid
          example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
        modifiedBy:
          $ref: "#/components/schemas/userNameType"
        modifiedDate:
          type: string
          description: The last modified date for this order.
          format: date-time
        entityUid:
          $ref: "#/components/schemas/entityUid"
        merchantCompanyEntityUid:
          $ref: "#/components/schemas/merchantCompanyEntityUid"
        merchant:
          $ref: "#/components/schemas/merchantNameWrapper"
      description: Standard fields returned in Order responses
    creatorsResponse:
      required:
        - creators
      type: object
      properties:
        creators:
          maxItems: 1000
          type: array
          description: All the creators of orders within this search criteria
          items:
            $ref: "#/components/schemas/creator"
      example:
        creators:
          - userUid: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
            name: John Smith
    vmssSchemeStatus:
      type: string
      description: Scheme Status
      enum:
        - "NA "
        - PENDING
        - ERROR
        - COMPLETE
    vmssSchemeMatches:
      type: number
      description: Number of matches found against the VMSS service.
    vmssApplication:
      type: object
      properties:
        visaStatus:
          $ref: "#/components/schemas/vmssSchemeStatus"
        visaMatches:
          $ref: "#/components/schemas/vmssSchemeMatches"
        mcdStatus:
          $ref: "#/components/schemas/vmssSchemeStatus"
        mcdMatches:
          $ref: "#/components/schemas/vmssSchemeMatches"
        mcdTransactionReference:
          type: string
          description: Reference to the status check to mastercard
      description: VMSS Status.
    internalAllocatedInformation:
      type: object
      properties:
        oracleOrderNumber:
          type: number
          description: The order number which Oracle allocated as part of the order.
        oracleShippingTrackingReference:
          type: string
          description: >-
            The order shipping reference which Oracle allocated as part of the
            order.
        kycReportUid:
          type: string
          description: Kyc report generated for this order
          format: uuid
        tokenScopeUid:
          type: string
          description: Token scope generated for this order
          format: uuid
        extendedDetails:
          $ref: "#/components/schemas/extendedDetails"
        orderStats:
          $ref: "#/components/schemas/orderStats"
        vmssApplication:
          $ref: "#/components/schemas/vmssApplication"
        salesforceApplicationId:
          type: string
          description: The Application ID allocated by Salesforce.
        signingInformation:
          $ref: "#/components/schemas/signingInformation"
      description: >-
        Internally allocated identifiers. This is for verifone use only and is
        subject to change.
    internalAllocatedInformationNewCompanyAndSite:
      type: object
      description: >-
        Internally allocated identifiers. This is for verifone use only and is
        subject to change.
      allOf:
        - $ref: "#/components/schemas/internalAllocatedInformation"
        - properties:
            ecomSiteEntityUid:
              type: string
              description: Entity uid of the ecom site.
              format: uuid
    MerchantOrderResponse:
      required:
        - entityUid
        - merchantCompanyEntityUid
        - orderId
        - orderType
        - status
      allOf:
        - $ref: "#/components/schemas/merchantOrder"
        - properties:
            orderId:
              $ref: "#/components/schemas/orderId"
            status:
              $ref: "#/components/schemas/orderStatusEnum"
            createdUserUid:
              $ref: "#/components/schemas/createdUserUid"
            createdBy:
              $ref: "#/components/schemas/userNameType"
            createdDate:
              type: string
              description: The created date for this order.
              format: date-time
            modifiedUserUid:
              type: string
              description: The assigned User_ID corresponding to the Order Modified By.
              format: uuid
              example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
            modifiedBy:
              $ref: "#/components/schemas/userNameType"
            modifiedDate:
              type: string
              description: The last modified date for this order.
              format: date-time
            orderType:
              type: string
              default: MerchantOrder
            entityUid:
              $ref: "#/components/schemas/entityUid"
            merchantCompanyEntityUid:
              $ref: "#/components/schemas/merchantCompanyEntityUid"
            internal:
              $ref: >-
                #/components/schemas/internalAllocatedInformationNewCompanyAndSite
    PoiOrderResponse:
      required:
        - orderId
        - orderType
        - status
      allOf:
        - $ref: "#/components/schemas/poiOrder"
        - properties:
            orderId:
              $ref: "#/components/schemas/orderId"
            status:
              $ref: "#/components/schemas/orderStatusEnum"
            createdUserUid:
              $ref: "#/components/schemas/createdUserUid"
            createdBy:
              $ref: "#/components/schemas/userNameType"
            createdDate:
              type: string
              description: The created date for this order.
              format: date-time
            modifiedUserUid:
              type: string
              description: The assigned User_ID corresponding to the Order Modified By.
              format: uuid
              example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
            modifiedBy:
              $ref: "#/components/schemas/userNameType"
            modifiedDate:
              type: string
              description: The last modified date for this order.
              format: date-time
            orderType:
              type: string
              default: POIOrder
            entityUid:
              $ref: "#/components/schemas/entityUid"
            merchantCompanyEntityUid:
              $ref: "#/components/schemas/merchantCompanyEntityUid"
            merchant:
              $ref: "#/components/schemas/merchantNameWrapper"
            internal:
              $ref: "#/components/schemas/internalAllocatedInformation"
    creator:
      required:
        - name
        - userUid
      properties:
        userUid:
          $ref: "#/components/schemas/createdUserUid"
        name:
          $ref: "#/components/schemas/userNameType"
    orderSearchResponse:
      title: Order Search Response
      required:
        - metadata
        - orders
      properties:
        orders:
          maxItems: 100
          type: array
          items:
            $ref: "#/components/schemas/oneOfOrderResponse"
        metadata:
          $ref: "#/components/schemas/metadata"
      description: Order Search Response
    metadata:
      required:
        - pageNumber
        - pageSize
        - totalItems
        - totalPages
      properties:
        totalPages:
          $ref: "#/components/schemas/totalPages"
        pageNumber:
          $ref: "#/components/schemas/pageNumber"
        pageSize:
          $ref: "#/components/schemas/pageSize"
        totalItems:
          $ref: "#/components/schemas/totalItems"
    oneOfOrderResponse:
      title: Order Response
      description: |-
        Supports returning oneOf the possible order types.
        The returned value will contain the objectType.
      discriminator:
        propertyName: orderType
        mapping:
          POIOrder: PoiOrderResponse
          MerchantOrder: MerchantOrderResponse
          POIMaintenanceOrder: PoiMaintenanceOrderResponse
          MerchantMaintenanceOrder: MerchantMaintenanceOrder
          POIAccessoryOrder: PoiAccessoryOrderResponse
          AdditionalServicesOrder: AdditionalServicesOrderResponse
      oneOf:
        - $ref: "#/components/schemas/PoiOrderResponse"
        - $ref: "#/components/schemas/MerchantOrderResponse"
        - $ref: "#/components/schemas/PoiMaintenanceOrderResponse"
        - $ref: "#/components/schemas/MerchantMaintenanceOrder"
        - $ref: "#/components/schemas/PoiAccessoryOrderResponse"
        - $ref: "#/components/schemas/AdditionalServicesOrderResponse"
    signingProviderEnum:
      type: string
      description: Signing Provider Enum
      enum:
        - ADOBE
        - SIGNICAT
        - DOKOBIT
    orderStatusEnum:
      type: string
      description: An order will be in one of the following states
      enum:
        - DRAFT
        - SUBMITTED
        - INPROGRESS
        - COMPLETED
        - CANCELLED
        - ONHOLD
    orderType:
      type: string
      description: The type of order
      enum:
        - POIOrder
        - MerchantOrder
        - POIMaintenanceOrder
        - MerchantMaintenanceOrder
        - POIAccessoryOrder
        - AdditionalServicesOrder
      default: MerchantOrder
    filterDateType:
      type: string
      description: The filter by date type
      enum:
        - createdDate
        - modifiedDate
      default: createdDate
    partLine:
      type: object
      properties:
        partNo:
          type: string
          example: M420-053-01-EUC-5
        qty:
          type: integer
          example: 200
        requestedDate:
          type: string
          description: The requested date for this part.
          format: date-time
        price:
          type: number
          format: float
          example: 1
        tax:
          type: number
          format: float
          example: 1
        currency:
          type: string
          example: GBP
    bundleLine:
      type: object
      properties:
        id:
          type: string
          example: BLD-36MTH-XYZ
    orderLine:
      required:
        - partNo
        - qty
        - requestedDate
      type: object
      properties:
        idx:
          type: integer
          description: Line item number index (used for reference purposes)
          example: 1
        part:
          $ref: "#/components/schemas/partLine"
        bundle:
          $ref: "#/components/schemas/bundleLine"
    addressType:
      type: object
      description: >-
        An Address following the convention of
        http://microformats.org/wiki/hcard
      allOf:
        - $ref: "#/components/schemas/addressWithoutType"
        - properties:
            addressType:
              type: string
              description: Address Type of the address
              enum:
                - BILLING
                - TRADING
                - DELIVERY
    addressLine:
      maxLength: 40
      minLength: 1
      type: string
      description: Address Line. Should include street and apartment number if required.
      example: 213 Miller Street
    postCode:
      maxLength: 16
      minLength: 1
      type: string
      description: >-
        Identifier consisting of a group of letters and/or numbers that is added
        to a postal address to assist the sorting of mail.
      example: "2061"
    baseAddress:
      type: object
      properties:
        receiverName:
          $ref: "#/components/schemas/receiverName"
        addressLine1:
          maxLength: 40
          minLength: 1
          type: string
          description: >-
            Address Line 1. Should include street and apartment number if
            required.
          example: 213 Miller Street
        addressLine2:
          maxLength: 40
          type: string
          description: Address Line 2
          example: North Sydney
        addressLine3:
          maxLength: 40
          type: string
          description: Address Line 3
        poBox:
          type: string
          description: The PO BOX number.
          example: K1234
        city:
          maxLength: 28
          minLength: 1
          type: string
          description: >-
            Name of a built-up area, with defined boundaries, and a local
            government. This could be city or town.
          example: York
        countrySubdivision:
          maxLength: 35
          minLength: 1
          type: string
          description: >-
            Identifies a sub-division of a country which may be state, region or
            county. This follows a similar format to the openbank api.
          example: Georgia
        postCode:
          $ref: "#/components/schemas/postCode"
        country:
          $ref: "#/components/schemas/CountryCode3Enum"
        timeZone:
          $ref: "#/components/schemas/TimeZone"
      description: >-
        An Address following the convention of
        http://microformats.org/wiki/hcard
    baseAddressWithoutType:
      type: object
      properties:
        contact:
          $ref: "#/components/schemas/ContactType"
        vfiSiteId:
          maxLength: 50
          minLength: 1
          type: string
          description: Address/Site identifier known as within Verifone internal systems.
        storeNumber:
          type: string
          description: Store Number or Client/Customer ID in Oracle
      description: >-
        An Address following the convention of
        http://microformats.org/wiki/hcard
      allOf:
        - $ref: "#/components/schemas/baseAddress"
    addressWithoutType:
      required:
        - addressLine1
        - city
        - country
        - postCode
      type: object
      description: >-
        An Address following the convention of
        http://microformats.org/wiki/hcard
      allOf:
        - $ref: "#/components/schemas/baseAddressWithoutType"
    contactName:
      allOf:
        - $ref: "#/components/schemas/Name"
    businessTitle:
      maxLength: 100
      type: string
      description: Business Title.
    ContractContactType:
      required:
        - contactType
        - name
      type: object
      properties:
        contactType:
          $ref: "#/components/schemas/ContactTypeEnum"
        name:
          $ref: "#/components/schemas/contactName"
        phoneNumbers:
          minItems: 1
          uniqueItems: true
          type: array
          description: >-
            The phone numbers to be used for the Contact. If you include this
            property there should be at least one phone number.
          items:
            $ref: "#/components/schemas/Phone"
        email:
          $ref: "#/components/schemas/EmailAddress"
        businessTitle:
          $ref: "#/components/schemas/businessTitle"
        passportId:
          maxLength: 100
          minLength: 1
          type: string
          description: Passport Identity Identifier.
        nationality:
          maxLength: 100
          minLength: 1
          type: string
          description: Nationality
        nationalIdentifer:
          maxLength: 20
          minLength: 1
          type: string
          description: Contact's national identity identifier.
      description: The details of a Contact.
    UserLoginType:
      required:
        - email
        - name
      type: object
      properties:
        name:
          $ref: "#/components/schemas/contactName"
        email:
          $ref: "#/components/schemas/EmailAddress"
        phoneNumber:
          $ref: "#/components/schemas/Phone"
      description: User login details.
    ContactType:
      required:
        - contactType
        - name
      type: object
      properties:
        contactType:
          $ref: "#/components/schemas/ContactTypeEnum"
        name:
          $ref: "#/components/schemas/contactName"
        phoneNumbers:
          minItems: 1
          uniqueItems: true
          type: array
          description: >-
            The phone numbers to be used for the Contact. If you include this
            property there should be at least one phone number.
          items:
            $ref: "#/components/schemas/Phone"
        email:
          $ref: "#/components/schemas/EmailAddress"
        businessTitle:
          $ref: "#/components/schemas/businessTitle"
      description: The details of a Contact.
    NewCustomerContactType:
      required:
        - contactType
        - email
        - name
      type: object
      description: The details of a Contact.
      allOf:
        - $ref: "#/components/schemas/UserContactType"
        - $ref: "#/components/schemas/ContactType"
    ExistingCustomerContactType:
      required:
        - contactType
        - email
        - merchantName
        - name
      type: object
      properties:
        merchantName:
          $ref: "#/components/schemas/merchantNameType"
        addressLine1:
          maxLength: 40
          minLength: 1
          type: string
          description: >-
            Address Line 1. Should include street and apartment number if
            required.
          example: 213 Miller Street
        postCode:
          maxLength: 16
          minLength: 1
          type: string
          description: >-
            Identifier consisting of a group of letters and/or numbers that is
            added to a postal address to assist the sorting of mail.
          example: "2061"
        activeBank:
          $ref: "#/components/schemas/activeBank"
        customerId:
          $ref: "#/components/schemas/customerId"
        siteId:
          $ref: "#/components/schemas/siteId"
        oracleAccountId:
          $ref: "#/components/schemas/oracleAccountId"
      description: The details of a Contact.
      allOf:
        - $ref: "#/components/schemas/UserContactType"
        - $ref: "#/components/schemas/ContactType"
    UserContactType:
      required:
        - customerType
      type: object
      properties:
        customerType:
          type: string
          default: NewCustomer
      description: The details of a Contact.
      discriminator:
        propertyName: customerType
        mapping:
          NewCustomer: "#/components/schemas/NewCustomerContactType"
          ExistingCustomer: "#/components/schemas/ExistingCustomerContactType"
    industry:
      title: Industry Type
      type: string
      description: The Industry type applicable to a Merchant.
      enum:
        - AIRLINE
        - DIRECT
        - VEHICLE_RENTAL
        - LODGING
        - MOTO
        - PETROLEUM
        - QUICK_SERVICE_RESTAURANT
        - RESTAURANT
        - RETAIL
        - TRANSPORT
        - RECREATION
        - MEDICAL
        - EDUCATIONAL
        - GOVERNMENT
    AddUserResponse:
      required:
        - userUid
      type: object
      properties:
        userUid:
          type: string
          description: Unique identifier for the user
          format: uuid
          example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
    VariableResponseType:
      type: object
      properties:
        variableName:
          pattern: ^[A-Za-z0-9_-]*$
          type: string
          description: Variable name (this would be provided by Verifone)
          example: VAT_ID or BAX_ID
        variableValue:
          type: string
          description: Value of the variable
          example: "1234566"
      description: Variable/Value Pairs
    settlementAccount:
      allOf:
        - $ref: "#/components/schemas/SepaAccount"
    DomesticSettlementAccount:
      allOf:
        - $ref: "#/components/schemas/DomesticAccount"
    contactAddressType:
      required:
        - addressDetails
        - contact
      type: object
      properties:
        contact:
          $ref: "#/components/schemas/ContractContactType"
        addressDetails:
          $ref: "#/components/schemas/baseAddress"
        dateOfBirth:
          type: string
          description: Date of Birth
          format: date
        placeOfBirth:
          type: string
          description: Place of Birth
        isIDCheckRequired:
          type: boolean
          description: Is this contact's ID required to be checked
          default: false
        isContractSignatureRequired:
          type: boolean
          description: Is this contact's signature required
          default: false
        isLegalRepresentative:
          type: boolean
          description: Is this contact a legal representative
          default: false
        isAuthorizedRepresentative:
          type: boolean
          description: Is this contact an authorized representative
          default: false
        isBeneficiaryOwner:
          type: boolean
          description: Is a beneficiary owner
          default: false
        isPoliticallyExposed:
          type: boolean
          description: Is this contact a politically exposed person
          default: false
        representativeType:
          type: string
          description: Type of representative when this contact is legal or authorized rep
          enum:
            - GENERAL_COMMERCIAL_POWER
            - LIMITED_COMMERCIAL_POWER
            - NOT_APPLICABLE
      description: A Contact and their address details
    merchantContract:
      type: object
      properties:
        brokerId:
          type: string
          description: ID of the broker, if one is being used
        legalStructure:
          type: string
          description: Legal Structure
          enum:
            - PROPRIETOR_OWN_BEHALF
            - PROPRIETOR_NOT_OWN_BEHALF
            - SHARED_LESS_25_PERC_EACH
        contacts:
          maxItems: 50
          type: array
          items:
            $ref: "#/components/schemas/contactAddressType"
        settlementAccount:
          $ref: "#/components/schemas/settlementAccount"
        domesticSettlementAccount:
          $ref: "#/components/schemas/DomesticSettlementAccount"
        serviceStartDate:
          type: string
          description: The requested date for this service to start.
          format: date-time
        proprietorAct:
          type: boolean
          description: >-
            Is proprietor is acting on its own behalf (true) or is not acting on
            own behalf (false)
      description: Used if merchant contract is to be processed
    merchantOrder:
      required:
        - merchant
      type: object
      allOf:
        - $ref: "#/components/schemas/baseOrderData"
        - properties:
            packageDetails:
              $ref: "#/components/schemas/packageDetails"
            contract:
              $ref: "#/components/schemas/merchantContract"
            merchant:
              $ref: "#/components/schemas/baseMerchant"
    poiOrder:
      required:
        - entityUid
        - pois
      type: object
      allOf:
        - $ref: "#/components/schemas/baseOrderData"
        - properties:
            packageDetails:
              $ref: "#/components/schemas/packageDetails"
            contract:
              $ref: "#/components/schemas/merchantContract"
            entityUid:
              $ref: "#/components/schemas/entityUid"
            shippingAddress:
              $ref: "#/components/schemas/addressWithoutType"
            billingAddress:
              $ref: "#/components/schemas/addressWithoutType"
            requestedDateOfShipment:
              $ref: "#/components/schemas/requestedDateOfShipment"
            pois:
              type: array
              items:
                $ref: "#/components/schemas/basePoiType"
    userNameType:
      minLength: 1
      type: string
      description: >-
        The username of the person who's UID is represented, e.g. "John/Jane
        Smith".
    merchantNameType:
      maxLength: 100
      minLength: 1
      pattern: ^(?!\\s*$).+
      type: string
      description: The primary merchant name, e.g. "McDonalds".
    merchantNameWrapper:
      type: object
      properties:
        merchantName:
          $ref: "#/components/schemas/merchantNameType"
      description: "Simple Wrapper object for Merchant Name.Used by UI "
    baseMerchant:
      required:
        - contacts
        - mcc
        - merchantType
        - primaryContact
        - tradingAddress
      type: object
      properties:
        merchantType:
          type: string
        merchantName:
          $ref: "#/components/schemas/merchantNameType"
        merchantId:
          maxLength: 30
          pattern: ^[a-zA-Z0-9]+$
          type: string
          description: The identifier assigned to this Merchant Entity.
        merchantLogoUrl:
          pattern: ^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]
          type: string
          description: Valid merchant logo url
        altVfiEntityId:
          $ref: "#/components/schemas/altVfiEntityId"
        parentEntityUid:
          type: string
          description: >-
            If specified this will add the merchant company or site under a
            specific entity within Verifone systems.
          format: uuid
        industry:
          $ref: "#/components/schemas/industry"
        primaryContact:
          $ref: "#/components/schemas/ContactType"
        requestedDateOfShipment:
          $ref: "#/components/schemas/requestedDateOfShipment"
        mcc:
          $ref: "#/components/schemas/MCC"
        parameters:
          $ref: "#/components/schemas/TerminalParameters"
        paymentAppParameters:
          $ref: "#/components/schemas/paymentAppParameters"
        settlement:
          $ref: "#/components/schemas/settlementDetails"
        entityUid:
          $ref: "#/components/schemas/entityUidDeprecated"
        tradingAddress:
          $ref: "#/components/schemas/addressWithoutType"
        shippingAddress:
          $ref: "#/components/schemas/addressWithoutType"
        billingAddress:
          $ref: "#/components/schemas/addressWithoutType"
      description: details of the merchant
      discriminator:
        propertyName: merchantType
        mapping:
          NewCompanyAndSite: "#/components/schemas/SmallMerchant"
          ExistingCompanyNewSite: "#/components/schemas/ExistingCompanyNewSite"
          SmallMerchant: "#/components/schemas/SmallMerchant"
    settlementDetails:
      type: object
      properties:
        settlementTime:
          pattern: ^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$
          type: string
          description: Settlement time in HH:MM format
      description: >-
        Settlement details needed for onboarding in certain situations . e.g.
        For Payware solutions
    siteName:
      minLength: 1
      type: string
      description: The site name, if different to the merchant name.
    receiverName:
      minLength: 1
      type: string
      description: The receiver name for the address if different to the company/site name.
    AdditionalServicesOrder:
      required:
        - servicePackages
        - serviceTarget
      type: object
      description: Additional services order & package details
      allOf:
        - $ref: "#/components/schemas/baseOrderData"
        - properties:
            contract:
              $ref: "#/components/schemas/merchantContract"
            servicePackages:
              maxItems: 100
              minItems: 1
              type: array
              items:
                $ref: "#/components/schemas/ServicePackageWithPPC"
            shippingAddress:
              $ref: "#/components/schemas/addressWithoutType"
            billingAddress:
              $ref: "#/components/schemas/addressWithoutType"
            serviceTarget:
              $ref: "#/components/schemas/baseServiceTarget"
    baseServiceTarget:
      properties:
        targetType:
          type: string
          default: SiteAndPois
      description: >-
        Target for  the service package(s).For e.g. this can be Site & selected
        POIs or all POIs in the site
      discriminator:
        propertyName: targetType
        mapping:
          SiteAndPois: "#/components/schemas/SiteAndPoisForService"
    SiteAndPoisForService:
      title: SiteAndPois
      required:
        - siteEntityUid
      type: object
      description: >-
        Site & its POIs for  the service.All POIs within site are selected if no
        POI is mentioned
      allOf:
        - $ref: "#/components/schemas/baseServiceTarget"
        - properties:
            siteEntityUid:
              type: string
              description: Internal id used for the site
              format: uuid
            pois:
              type: array
              description: If not specified implies all POIs belonging to the site
              items:
                $ref: "#/components/schemas/poiUid"
    PoiUidsForService:
      title: POIs
      required:
        - pois
      type: object
      description: POIs applicable for this service
      allOf:
        - properties:
            pois:
              maxItems: 100
              minItems: 1
              type: array
              items:
                $ref: "#/components/schemas/poiUid"
    ExistingCompanyNewSite:
      required:
        - parentEntityUid
      type: object
      allOf:
        - $ref: "#/components/schemas/baseMerchant"
        - properties:
            siteReferenceId:
              $ref: "#/components/schemas/siteReferenceId"
            relatedOrderId:
              $ref: "#/components/schemas/orderId"
            siteName:
              $ref: "#/components/schemas/siteName"
            openingHours:
              minItems: 1
              type: array
              description: The list of opening periods per week day.
              items:
                $ref: "#/components/schemas/EntityOpeningHours"
            pois:
              maxItems: 1000
              type: array
              items:
                $ref: "#/components/schemas/basePoiType"
    SmallMerchant:
      type: object
      allOf:
        - $ref: "#/components/schemas/baseMerchant"
        - properties:
            companyAddress:
              $ref: "#/components/schemas/addressWithoutType"
            siteReferenceId:
              $ref: "#/components/schemas/siteReferenceId"
            siteName:
              minLength: 1
              type: string
              description: The site name, if different to the merchant name.
            openingHours:
              minItems: 1
              type: array
              description: The list of opening periods per week day.
              items:
                $ref: "#/components/schemas/EntityOpeningHours"
            userLogins:
              maxItems: 10
              type: array
              description: >-
                Additional user login accounts can be specified here if Verifone
                portal service are being offered as part of the service
                packages. Generally Verifone will create a merchant user for the
                primary contact but if user logins are specified here they will
                be used instead.
              items:
                $ref: "#/components/schemas/UserLoginType"
            pois:
              maxItems: 1000
              type: array
              items:
                $ref: "#/components/schemas/basePoiType"
    baseMerchantOldForLargeMerchant:
      required:
        - contacts
        - mcc
        - merchantName
        - merchantType
        - primaryContact
        - tradingAddress
      type: object
      properties:
        merchantId:
          maxLength: 30
          pattern: ^[a-zA-Z0-9]+$
          type: string
          description: The identifier assigned to this Merchant Entity.
        altVfiEntityId:
          $ref: "#/components/schemas/altVfiEntityId"
        parentEntityUid:
          type: string
          description: >-
            If specified this will add the merchant under a specific entity
            within Verifone systems.
          format: uuid
        merchantName:
          $ref: "#/components/schemas/merchantNameType"
        industry:
          $ref: "#/components/schemas/industry"
        primaryContact:
          $ref: "#/components/schemas/ContactType"
        tradingAddress:
          $ref: "#/components/schemas/addressWithoutType"
        billingAddress:
          $ref: "#/components/schemas/addressWithoutType"
        shippingAddress:
          $ref: "#/components/schemas/addressWithoutType"
        companyAddress:
          $ref: "#/components/schemas/addressWithoutType"
        requestedDateOfShipment:
          $ref: "#/components/schemas/requestedDateOfShipment"
        mcc:
          $ref: "#/components/schemas/MCC"
        parameters:
          $ref: "#/components/schemas/TerminalParameters"
        paymentAppParameters:
          $ref: "#/components/schemas/paymentAppParameters"
        entityUid:
          $ref: "#/components/schemas/entityUidDeprecated"
        merchantType:
          type: string
          default: SmallMerchant
      description: details of the merchant
      discriminator:
        propertyName: merchantType
        mapping:
          SmallMerchant: "#/components/schemas/SmallMerchant"
    LargeMerchant:
      type: object
      allOf:
        - $ref: "#/components/schemas/baseMerchantOldForLargeMerchant"
        - properties:
            subMerchants:
              maxItems: 1000
              type: array
              items:
                $ref: "#/components/schemas/subMerchantWithPois"
    subMerchantWithPois:
      type: object
      description: Store or Site where the merchant trades
      allOf:
        - $ref: "#/components/schemas/subMerchant"
        - properties:
            pois:
              maxItems: 1000
              type: array
              items:
                $ref: "#/components/schemas/basePoiType"
    subMerchant:
      required:
        - contacts
        - tradingAddress
      type: object
      properties:
        merchantId:
          maxLength: 30
          pattern: ^[a-zA-Z0-9]+$
          type: string
          description: >-
            The identifier assigned to this Merchant Entity. This is usually the
            identifier assigned to the the Payment Provider Contract.
        altVfiEntityId:
          $ref: "#/components/schemas/altVfiEntityId"
        siteReferenceId:
          $ref: "#/components/schemas/siteReferenceId"
        name:
          type: string
          description: >-
            Name of the submerchant. A submerchant can refer to a site, store or
            other logical merchant entities.
          example: company store downtown
        industry:
          $ref: "#/components/schemas/industry"
        contacts:
          maxItems: 10
          type: array
          items:
            $ref: "#/components/schemas/ContactType"
        tradingAddress:
          $ref: "#/components/schemas/addressWithoutType"
        shippingAddress:
          $ref: "#/components/schemas/addressWithoutType"
        requestedDateOfShipment:
          $ref: "#/components/schemas/requestedDateOfShipment"
        mcc:
          $ref: "#/components/schemas/MCC"
        parameters:
          $ref: "#/components/schemas/TerminalParameters"
        paymentAppParameters:
          $ref: "#/components/schemas/paymentAppParameters"
        entityUid:
          $ref: "#/components/schemas/entityUid"
      description: Store or Site where the merchant trades
    packageDetails:
      required:
        - basePackageBundle
      type: object
      properties:
        portfolioUid:
          type: string
          description: >-
            Verifone ID for the Portfolio Selected. If this is not provided then
            a default portfolio will be used.
          format: uuid
          example: 32c480b5-4dfb-4c53-959f-49edf45a0931
        basePackageBundle:
          $ref: "#/components/schemas/BundleAndPrice_1"
        servicePackages:
          maxItems: 100
          type: array
          items:
            $ref: "#/components/schemas/ServicePackages"
        deliveryPackage:
          $ref: "#/components/schemas/BundleAndPriceAndData"
      description: >-
        Select the base package, hardware and additional services for this
        order.
    BundleAndData:
      required:
        - packageBundleId
      type: object
      properties:
        packageBundleId:
          $ref: "#/components/schemas/packageBundleId"
        additionalPackageData:
          maxItems: 50
          type: array
          description: >-
            Input data required to configure the package. For example some
            packages require a merchant ID
          items:
            $ref: "#/components/schemas/VariableResponseType"
    BundleAndQuantityAndData:
      required:
        - packageBundleId
      type: object
      properties:
        packageBundleId:
          $ref: "#/components/schemas/packageBundleId"
        quantity:
          type: integer
          description: Quantity of the items being ordered
        additionalPackageData:
          maxItems: 50
          type: array
          description: >-
            Input data required to configure the package. For example some
            packages require a merchant ID
          items:
            $ref: "#/components/schemas/VariableResponseType"
    ServicePackages:
      required:
        - packageBundleId
      type: object
      properties:
        packageBundleId:
          $ref: "#/components/schemas/packageBundleId"
        adjustedPrices:
          maxItems: 50
          type: array
          items:
            $ref: "#/components/schemas/adjustedPriceType"
        processorParameters:
          $ref: "#/components/schemas/baseProcessorParameters"
        additionalPackageData:
          maxItems: 50
          type: array
          description: >-
            Input data required to configure the package. For example some
            packages require a merchant ID
          items:
            $ref: "#/components/schemas/VariableResponseType"
    ServicePackageWithPPC:
      required:
        - packageBundleId
      type: object
      allOf:
        - $ref: "#/components/schemas/ServicePackages"
        - properties:
            contractUid:
              $ref: "#/components/schemas/contractUid"
    contractUid:
      type: string
      description: The Verifone assigned ID corresponding to the contract.
      format: uuid
      example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
    BundleAndPriceAndData:
      required:
        - packageBundleId
      type: object
      properties:
        packageBundleId:
          $ref: "#/components/schemas/packageBundleId"
        adjustedPrices:
          maxItems: 50
          type: array
          items:
            $ref: "#/components/schemas/adjustedPriceType"
        additionalPackageData:
          maxItems: 50
          type: array
          description: >-
            Input data required to configure the package. For example some
            packages require a merchant ID
          items:
            $ref: "#/components/schemas/VariableResponseType"
    BundleAndPriceAndDataQuantity:
      required:
        - packageBundleId
      type: object
      properties:
        packageBundleId:
          $ref: "#/components/schemas/packageBundleId"
        adjustedPrices:
          maxItems: 50
          type: array
          items:
            $ref: "#/components/schemas/adjustedPriceType"
        additionalPackageData:
          maxItems: 50
          type: array
          description: >-
            Input data required to configure the package. For example some
            packages require a merchant ID
          items:
            $ref: "#/components/schemas/VariableResponseType"
        quantity:
          type: integer
          description: Quantity of the packages being ordered
          example: 4
    BundleAndPrice:
      required:
        - packageBundleId
      type: object
      properties:
        packageBundleId:
          $ref: "#/components/schemas/packageBundleId"
        adjustedPrices:
          maxItems: 50
          type: array
          items:
            $ref: "#/components/schemas/adjustedPriceType"
    adjustedPriceType:
      type: object
      properties:
        priceModel:
          type: string
          description: Pricing Model
          enum:
            - MONTHLY_FEE
            - MONTHLY_FEE_PER_DEVICE
            - MINIMUM_AMT_PER_TRX
            - AMT_PER_TRX
            - PERC_PER_TRX
            - ONE_TIME
        price:
          $ref: "#/components/schemas/AmountSimple"
    poiTypeSimplifiedResponse:
      title: Point of Interaction
      required:
        - poiUid
        - status
      type: object
      properties:
        altVfiPoiId:
          $ref: "#/components/schemas/altVfiPoiId"
        estateManagementId:
          type: string
          description: >+
            This has very specific meaning as an identifier used for Estate
            Management. This should generally be left blank as Verifone will
            allocate this ID.


            In VHQ this is related to the deviceId.

        serialNumber:
          $ref: "#/components/schemas/serialNumber"
        name:
          maxLength: 35
          type: string
          description: >-
            The name used to represent this POI. This is a label not an
            identifier.
        description:
          maxLength: 30
          type: string
          description: >-
            An optional value where some Merchant specific entry is associated
            with a POI.
        status:
          $ref: "#/components/schemas/poiStatusEnum"
        poiUid:
          $ref: "#/components/schemas/poiUid"
      example:
        estateManagementId: "100112345678"
        status: ACTIVE
        poiUid: d80fcd67-01ad-47e3-93be-fb073d276c52
    basePoiType:
      title: Point of Interaction
      required:
        - status
        - type
      type: object
      properties:
        type:
          $ref: "#/components/schemas/poiTypeEnum"
        poiId:
          maxLength: 36
          minLength: 1
          type: string
          description: Point of interaction identifier (Often referred to as Terminal ID)
        subPoiId:
          maxLength: 12
          minLength: 1
          type: string
          description: >-
            An optional secondary identifier for a point of interaction
            (Terminal). This is relevant for some markets where an additional
            terminal number is required.
        altVfiPoiId:
          $ref: "#/components/schemas/altVfiPoiId"
        estateManagementId:
          type: string
          description: >+
            This has very specific meaning as an identifier used for Estate
            Management. This should generally be left blank as Verifone will
            allocate this ID.


            In VHQ this is related to the deviceId.

        serialNumber:
          $ref: "#/components/schemas/serialNumber"
        name:
          maxLength: 35
          type: string
          description: >-
            The name used to represent this POI. This is a label not an
            identifier.
        description:
          maxLength: 30
          type: string
          description: >-
            An optional value where some Merchant specific entry is associated
            with a POI.
        status:
          $ref: "#/components/schemas/poiStatusEnum"
        cutoverTime:
          pattern: ^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$
          type: string
          description: >-
            The cutover time HH:MM. Usually this will be a local time where a
            timezone has to be used to be used to derive the UTC time. EG:
            processor.cutoverTimeZone
          example: "17:00"
        poiUid:
          $ref: "#/components/schemas/poiUid"
        acquirerPoiIds:
          maxItems: 50
          type: array
          description: Key value Pairs linking acquirer POI with their TID
          items:
            $ref: "#/components/schemas/VariableResponseType"
      additionalProperties: false
      description: >-
        The Point of Interaction. This may refer to a number of different
        entities, but is primarily considered to be the Terminal. This object
        contains the POI details as they pertain to an individual payment, an
        instance of POI. This does not attempt to define all the settings or
        attributes that may be associated to a POI. Also, for a specific
        Acquirer/Contract combination there may be a different instance of the
        POI(TID). These different relationships are not part of this object.
      discriminator:
        propertyName: type
        mapping:
          POINT_OF_SALE: "#/components/schemas/PoiType"
          MULTI_MERCHANT_CHILD: "#/components/schemas/MultiMerchantChildPoiType"
          STANDALONE: "#/components/schemas/PoiType"
          ELECTRONIC_CASH_REGISTER: "#/components/schemas/PoiType"
          UNATTENDED: "#/components/schemas/PoiType"
          MOBILE: "#/components/schemas/PoiType"
          VIRTUAL: "#/components/schemas/VirtualPoiType"
    VirtualPoiType:
      title: Virtual Point of Interaction
      type: object
      allOf:
        - $ref: "#/components/schemas/basePoiType"
    MultiMerchantChildPoiType:
      title: Multi Merchant Child Point of Interaction
      required:
        - parentPoiUid
      type: object
      allOf:
        - $ref: "#/components/schemas/basePoiType"
        - properties:
            parentPoiUid:
              type: string
              description: >-
                The Verifone allocated unique id for the parent POI. This can
                either be the multi merchant parent POI or the current primary
                merchant POI.
              format: uuid
              example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
            paymentAppParameters:
              $ref: "#/components/schemas/paymentAppParameters"
    PoiType:
      title: Point of Interaction
      type: object
      additionalProperties: false
      description: >-
        The Point of Interaction. This may refer to a number of different
        entities, but is primarily considered to be the Terminal. This object
        contains the POI details as they pertain to an individual payment, an
        instance of POI. This does not attempt to define all the settings or
        attributes that may be associated to a POI. Also, for a specific
        Acquirer/Contract combination there may be a different instance of the
        POI(TID). These different relationships are not part of this object.
      allOf:
        - $ref: "#/components/schemas/basePoiType"
        - properties:
            parameters:
              $ref: "#/components/schemas/TerminalParameters"
            paymentAppParameters:
              $ref: "#/components/schemas/paymentAppParameters"
            devicePackage:
              $ref: "#/components/schemas/BundleAndPrice"
            additionalDevicePackages:
              maxItems: 100
              type: array
              items:
                $ref: "#/components/schemas/BundleAndPriceAndDataQuantity"
            deliveryPackage:
              $ref: "#/components/schemas/BundleAndPriceAndData"
    poiTypeEnum:
      title: Point of Interaction Type
      type: string
      description: >-
        The Point of Interaction Type. An indicator to indicate the type of
        Point of Interaction.
      enum:
        - UNSPECIFIED
        - ELECTRONIC_CASH_REGISTER
        - POINT_OF_SALE
        - UNATTENDED
        - STANDALONE
        - MOBILE
        - VIRTUAL
        - MULTI_MERCHANT_CHILD
    poiStatusEnum:
      title: Point of Interaction Status
      type: string
      description: The Point of Interaction Status.
      enum:
        - ACTIVE
        - DEACTIVE
    entityPatch:
      title: Entity Update
      type: object
      properties:
        name:
          maxLength: 40
          pattern: ^(?!\s*$).+
          type: string
          description: >-
            A name to be assigned to this entity. This can be the trading name
            or business name.
          example: Merchant Name
        status:
          $ref: "#/components/schemas/UpdateStatusEnum"
      description: Entity Update.
    childPoiMoveRequest:
      title: Child POI Move Request.
      required:
        - newParentPoiUid
      type: object
      properties:
        newParentPoiUid:
          type: string
          description: >-
            The Verifone allocated unique id for the target parent POI. This can
            be an existing MULTI_MERCHANT POI or an existing
            POINT_OF_SALE/STANDALONE POI.


            If this is a POINT_OF_SALE/STANDALONE POI a new MULTI_MERCHANT POI
            will be created transparently based on the details from this POI.
            This MULTI_MERCHANT POI will be linked to the same entity as the
            selected POI.
          format: uuid
          example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
      description: Child POI Move Request.
    poiPatch:
      title: Point of Interaction Update
      type: object
      properties:
        status:
          $ref: "#/components/schemas/UpdateStatusEnum"
      description: Point of Interaction Update.
    orderReference:
      minLength: 1
      type: string
      description: Client reference for the Order
      example: ORD-1234
    orderId:
      type: string
      description: Verifone allocated ID for the Order
      format: uuid
      example: 32c480b5-4dfb-4c53-959f-49edf45a0931
    oracleTemplateType:
      type: string
      description: The Verifone allocated Oracle ID for the package bundle in Oracle.
      example: "4342423424"
    packageBundleId:
      maxLength: 100
      pattern: ^[A-Za-z0-9_-]*$
      type: string
      description: The Verifone allocated ID for the package bundle.
      example: PREMIUM-36MONTH
    packageId:
      maxLength: 100
      pattern: ^[A-Za-z0-9_-]*$
      type: string
      description: >-
        The Verifone allocated ID for the product package. This could be
        hardware or services.
      example: CM5
    requestedDateOfShipment:
      type: string
      description: Requested date of shipment.
      format: date-time
    basePackageBundle:
      type: object
      properties:
        packageType:
          type: string
          default: BASE
        oracleTemplateId:
          $ref: "#/components/schemas/oracleTemplateType"
        servicePackages:
          maxItems: 1000
          type: array
          items:
            $ref: "#/components/schemas/packageId"
    merchantCompanyEntityUid:
      type: string
      description: The Verifone allocated unique id for this merchant company.
      format: uuid
      example: 14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9
    entityUid:
      type: string
      description: The Verifone allocated unique id for this site.
      format: uuid
      example: 14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9
    entityUidDeprecated:
      type: string
      description: >-
        The Verifone allocated unique id for this site. This is allocated by
        Verifone when an order is initially received. Please use value returned
        in OrderResponse.
      format: uuid
      example: 14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9
      deprecated: true
    poiUid:
      type: string
      description: >-
        The Verifone allocated unique id for this terminal/POI. This is
        allocated by Verifone when an order is initially received.
      format: uuid
      example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
    statusUpdate:
      required:
        - newStatus
      type: object
      properties:
        newStatus:
          $ref: "#/components/schemas/orderStatusEnum"
      description: Update status request.
    siteReferenceId:
      maxLength: 100
      minLength: 1
      type: string
      description: >-
        An optional identifier for the Site which can be provided if different
        to the merchantId.
    pageSize:
      maximum: 100
      minimum: 1
      type: integer
      description: Page size for returned records.
      example: 50
      default: 50
    queryOrderEnum:
      title: Query Order
      type: string
      description: The ordering of the returned results.
      enum:
        - ASC
        - DESC
    pageNumber:
      minimum: 1
      type: integer
      description: Page number for records.
      example: 1
      default: 1
    totalPages:
      type: integer
      description: Total pages of records.
      example: 1
    totalItems:
      type: integer
      description: Total number of records.
      example: 25
    taskState:
      type: object
      properties:
        name:
          type: string
          description: name of the task coming from the workflow
        state:
          type: string
          description: state value
      description: A workflow task state
    workflowStateType:
      type: object
      properties:
        workflowState:
          type: string
          description: workflow state value
        lastChangeDateTime:
          type: string
          description: The last time this workflow or tasks were updated.
          format: date-time
        tasks:
          maxItems: 100
          type: array
          items:
            $ref: "#/components/schemas/taskState"
      description: Workflow state
    extendedStatusResponse:
      required:
        - status
      type: object
      properties:
        status:
          $ref: "#/components/schemas/orderStatusEnum"
        workflow:
          $ref: "#/components/schemas/workflowStateType"
    paymentAppParameters:
      title: Base Parameters
      type: object
      properties:
        AllowDisableMerchantPreferredAppSelection:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: >-
            Display the option to disable merchant preferred app selection in
            the 'Prompt For Card' screen
          example: "0"
        PurchaseEnabled:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: Enable Purchase transactions for this merchant.
          example: "1"
        PurchaseAndCashoutEnabled:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: >-
            Enable prompting for a cashout amount as part of a purchase
            transaction.
          example: "1"
        PurchaseSurchargeEnabled:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: |-
            Enables surcharging for Purchase (+ Cash + Tip)
            transactions. Surchargeable amount - this is the amount in
            the transaction where a surcharge can be applied to.
            Purchase only - surchargeable amount is the purchase
            amount. Purchase + Cash - surchargeable amount is the
            purchase amount only. Purchase + Cash + Tip -
            surchargeable amount is the purchase amount only. Purchase
            + Tip - surchargeable amount is the purchase amount only.
          example: "0"
        ContactlessSurchargeEnabled:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: Enable contactless surcharging.
          example: "0"
        CashOutOnlySurchargeEnabled:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: Enables surcharging for Cashout only transactions.
          example: "0"
        PreauthCompletionSurchargeType:
          maxLength: 1
          minLength: 1
          pattern: "[0-2]"
          type: string
          description: >-
            0 - Disabled: Pre-Auth/Completion transactions are not subject to
            surcharge


            1 - Pre-Auth: Surcharge is applied to Pre-Auth (initial) transaction


            2 - Completion: Surcharge is applied to Completion transaction
          example: "0"
        MotoSurchargeEnabled:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: |-
            Enables surcharging for mail and telephone order (MOTO)
            transactions.
          example: "0"
        ManualPurchaseEnabled:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: Enable Manual Card Entry for Purchase.
          example: "1"
        ManualRefundEnabled:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: Manual Refund Enabled.
          example: "1"
        ManualPreAuthEnabled:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: Enable Manual Card Entry for PreAuth.
          example: "0"
        CashoutOnlyEnabled:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: Enable Cashout only transactions for this merchant.
          example: "1"
        RefundEnabled:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: Enable Refund transactions as such for this merchant.
          example: "1"
        EbtEnabled:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: Allow EBT (Electronic benefit transfer) payment type.
          example: "1"
        VoidEnabled:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: >-
            Enable void transaction for magnetic stripe and chip cards for this
            product
          example: "1"
        SplitPaymentsEnabled:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: Allow the total to be paid with multiple payments.
          example: "1"
        PreAuthEnabled:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: Enable Pre-Auth transactions for this merchant.
          example: "0"
        BalanceEnquiryEnabled:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: Enable Balance Enquiry transactions for this merchant.
          example: "1"
        MotoPaymentEnabled:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: Enable mail and telephone order (MOTO) payments.
          example: "0"
        MotoTipEnabled:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: Enable tip for moto payments for this merchant.
          example: "0"
        MotoRefundEnabled:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: Enable moto refunds for this merchant.
          example: "0"
        MotoPreAuthEnabled:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: Enable moto PreAuth for this merchant.
          example: "0"
        MotoSeparationEnabled:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: >-
            Determines whether to present separate options for mail and
            telephone orders (MOTO).
          example: "0"
        CashbackAmounts:
          maxLength: 150
          minLength: 0
          pattern: ^(\d+\.?\d*,){0,3}(\d+\.?\d*)$
          type: string
          description: >-
            Predefined cashout amounts presented at the cashout selection in the
            local currency. Maximum of 4 comma separated amounts e.g.
            10.00,20.00,40.00.
          example: 10,20,40,60
        MaxPurchaseAmount:
          maxLength: 13
          minLength: 0
          pattern: ^[0-9]{1,10}(\.[0-9]{2})?$
          type: string
          description: >-
            Represents the maximum purchase amount allowed in the currency
            supported by the terminal. The value should be in a decimal format,
            e.g. $40 = 40.00. Maximal amount supported by the payment
            application is 9,999,999,999.99.
          example: "1000000"
        MaxCashierRefundAmount:
          maxLength: 15
          minLength: 0
          pattern: ^[0-9]+(\.[0-9]{2})?$
          type: string
          description: >-
            Maximum refund amount allowed by the cashier, in the currency
            supported by the terminal. The value should be in a decimal format,
            e.g. $40 = 40.00
          example: "0"
        MaxManagerRefundAmount:
          maxLength: 15
          minLength: 0
          pattern: ^[0-9]+(\.[0-9]{2})?$
          type: string
          description: >-
            Maximum refund amount allowed by the manager, in the currency
            supported by the terminal. The value should be in a decimal format,
            e.g. $40 = 40.00
          example: "0"
        MaxRefundTotalAmountPerSettlement:
          maxLength: 15
          minLength: 0
          pattern: ^[0-9]+(\.[0-9]{2})?$
          type: string
          description: >-
            Maximum refund amount allowed per settlement period, in the currency
            supported by the terminal. This value should be in a decimal format,
            e.g. $40 = 40.00
          example: "0"
        ForceOfflineEnabled:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: Indicates if the force offline operation is enabled for the merchant
          example: "0"
        CashbackCeiling:
          maxLength: 150
          minLength: 0
          pattern: ^[0-9]+(\.[0-9]{2})?$
          type: string
          description: >-
            Maximum cashout amount allowed, in the currency supported by the
            terminal. The value should be in a decimal format,                 
            e.g. $40 = 40.00 - where the currency symbol depends on the region.
          example: "200"
        PrintMerchantReceipt:
          type: string
          description: |-
            Defines the merchant receipt print options.

            0-Never Print

            1-Prompt for print

            2-Always Print

            3-Always Print when Signature is Captured
          example: "1"
        PrintCustomerReceipt:
          type: string
          description: |-
            Defines the customer receipt print options.

            0-Never Print

            1-Prompt for print

            2-Always Print
          example: "1"
        ShowEmailReceiptOption:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: Show e-mail option for customer receipts.
          example: "0"
        ShowEmailTermsAndConditions:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: >-
            Determines if the device displays the Terms and Conditions text when
            a customer elects to receive an email receipt.
          example: "0"
        ReceiptGreeting:
          maxLength: 10000
          minLength: 0
          pattern: ^(.|\n)*$
          type: string
          description: Placeholder for greeting text on the receipt.
          example: ""
        ReceiptFooter:
          maxLength: 10000
          minLength: 0
          pattern: ^(.|\n)*$
          type: string
          description: Receipt placeholder for footer text.
          example: ""
        TipEnabled:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: Enable purchase with tip transaction for this product
          example: "1"
        TipLimit:
          maxLength: 150
          minLength: 0
          pattern: ^[0-9]+(\.[0-9]{2})?$
          type: string
          description: >-
            Defines the maximum percentage of the transaction amount that can be
            added as a tip. If this is exceeded, a warning is prompted.
          example: "50"
        TipPercentages:
          maxLength: 150
          minLength: 0
          pattern: ^(\d{1,2},){0,3}(\d{1,2})$
          type: string
          description: >-
            Pre-Defines up to 4 tip percentage options for customers to choose
            from, after entering the purchase amount for a transaction, e.g. 10,
            15, 20, 25% = 10%, 15%, 20%, 25% respectively.                 Note
            that the TipEnabled parameter must be enabled, and that only whole
            numbers are accepted as percentage values, e.g. 10% (not 10.5%).   
            Note also some terminal solutions only support 3 pre-defined
            limits.
          example: 5,10,15
        AutoSettlementEnabled:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: Settlement runs on a schedule.
          example: "0"
        AutoSettlementTime:
          maxLength: 5
          minLength: 4
          pattern: ^(0[0-9]|1[0-9]|2[0-3]|[0-9]):[0-5][0-9]$
          type: string
          description: Settlement runs at this time everyday.
          example: "1:30"
        SAFEnabled:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: >-
            Whether SAF (offline approval when device cannot go online or reach
            host/gateway), 1-Enabled, 0-Not enabled
          example: "1"
        MaxSAFAccumulativeAmount:
          maxLength: 15
          minLength: 1
          pattern: ^[0-9]+(\.[0-9]{2})?$
          type: string
          description: >-
            Maximum amount of all pending SAF transactions that are allowed.
            Once this limit is reached, the terminal cannot approve anymore
            transaction as SAF
          example: "1000"
        MaxSAFTransactionAmount:
          maxLength: 15
          minLength: 1
          pattern: ^[0-9]+(\.[0-9]{2})?$
          type: string
          description: >-
            Maximum amount for a single transaction to be put into SAF. This
            overrides card scheme settings.
          example: "1000"
        MerchantSurcharge:
          type: array
          description: Surcharging options for different card products
          items:
            $ref: "#/components/schemas/cardProductSurcharge"
        RegionalParameters:
          $ref: "#/components/schemas/baseRegionalParameters"
        CardHolderPresent:
          type: string
          description: Select if card holder is present (Always/Prompt/Never)
          enum:
            - Always
            - Prompt
            - Never
        MaxContactlessTransactionAmount:
          pattern: ^[0-9]+(\.[0-9]{2})?$
          type: number
          description: Maximum limit for contact less payments
          format: decimal
          example: 45
        CommsFailFloorLimit:
          pattern: ^[0-9]+(\.[0-9]{2})?$
          type: number
          description: Maximum limit allowed by terminal when communications fail
          format: decimal
          example: 85
        VoiceAuthRefferalLimit:
          pattern: ^[0-9]+(\.[0-9]{2})?$
          type: number
          description: Maximum limit allowed for voice referral
          format: decimal
          example: 48
        VoiceAuthRefferalCode:
          type: string
          description: Voice Referral floor limit authorisation code
          example: Th!s!sTh3C0d3
      description: >-
        Payment Parameters - these can be specified per merchant and/or
        overridden at the poi level. If no values are specified then default
        template values will be applied.
    cardProductSurcharge:
      required:
        - ProductId
        - SurchargeType
        - SurchargeValue
      type: object
      properties:
        ProductId:
          maxLength: 150
          minLength: 0
          pattern: ^.*$
          type: string
          description: >-
            Link to the card product which this surcharge applies to. Contact
            Verifone for card products applicable to your estate.
        SurchargeType:
          maxLength: 1
          minLength: 1
          pattern: "[0-2]"
          type: string
          description: |-
            Surcharge Type (Domestic)

            0 - Not configured

            1 - Fixed Amount

            2 - Percentage
          example: "0"
        SurchargeValue:
          maxLength: 150
          minLength: 1
          pattern: ^[0-9]+(\.[0-9]{1,2})?$
          type: string
          description: >-
            Specifies the value of the surcharge depending on the surcharge
            type. Can be a fixed value (eg 2.5 = $2.50) or a percentage (eg 1.2
            = 1.2%).
          example: "0"
        MaxSurchargeAdjAmount:
          maxLength: 15
          minLength: 1
          pattern: ^[0-9]+(\.[0-9]{1,2})?$
          type: string
          description: >-
            Applicable only when Surcharge Type is Percentage. Amount is in
            default Terminal currency, represented as a decimal number.
            Specifies the maximum surcharge amount; if the calculated surcharge
            is above this value, the Surcharge Max Adjustment amount will be
            applied instead.
          example: "50.00"
          default: "0"
        MinSurchargeAdjAmount:
          maxLength: 15
          minLength: 1
          pattern: ^[0-9]+(\.[0-9]{1,2})?$
          type: string
          description: >-
            Applicable only when Surcharge Type is Percentage. Amount is in
            default Terminal currency, represented as a decimal number.
            Specifies the minimum surcharge amount; if the calculated surcharge
            is below this value, the Surcharge Min Adjustment amount will be
            applied instead.
          example: "0"
          default: "0"
        MaxSurchargeableAmount:
          maxLength: 15
          minLength: 1
          pattern: ^[0-9]+(\.[0-9]{1,2})?$
          type: string
          description: >-
            Amount is in default Terminal currency, represented as a decimal
            number. When the transaction amount is above this maximum, no
            surcharge will be applied.
          example: "0"
          default: "0"
        MinSurchargeableAmount:
          maxLength: 15
          minLength: 1
          pattern: ^[0-9]+(\.[0-9]{1,2})?$
          type: string
          description: >-
            Amount is in default Terminal currency, represented as a decimal
            number. When the transaction amount is below this minimum, no
            surcharge will be applied.
          example: "0"
          default: "0"
        UseDomesticConfigForInternational:
          maxLength: 1
          minLength: 1
          pattern: "[0-1]"
          type: string
          description: >-
            When enabled (true), surcharging of transactions that utilize
            international payment methods follows the surcharge parameter
            settings and rules as defined for domestic payment methods; and the
            international configuration variants are ignored. When disabled
            (false), unique International configuration parameters will control
            surcharging of transactions that utilize international payment
            methods.
          example: "1"
          default: "1"
      description: Surcharging settings
    BankID:
      maxLength: 30
      minLength: 1
      type: string
      example: "5"
    BankBIN:
      maxLength: 30
      minLength: 1
      type: string
      example: "5"
    StoreNum:
      maxLength: 4
      minLength: 1
      pattern: ^[0-9]+$
      type: string
      example: "1234"
    ClientNum:
      maxLength: 4
      minLength: 1
      pattern: ^[0-9]+$
      type: string
      example: "1234"
    AgentBank:
      maxLength: 6
      minLength: 1
      pattern: ^[0-9]+$
      type: string
      example: "123456"
    AgentChain:
      maxLength: 6
      minLength: 1
      pattern: ^[0-9]+$
      type: string
      example: "123456"
    GroupId:
      maxLength: 13
      minLength: 5
      type: string
      example: "123456"
    GroupNumber:
      maxLength: 50
      minLength: 1
      type: string
      example: "123456"
    baseProcessorParameters:
      title: Payment Processor Parameters
      required:
        - processor
      type: object
      properties:
        processor:
          title: Payment Provider ContractType Processor Acquirer Type
          type: string
          description: A type indicator for the contract that is being processed.
          enum:
            - ABS_ISO
            - ABS_PDM
            - ABS_WEB
            - AMEX
            - BANKAXEPT
            - BANQUE_CHABRIERES
            - BARCLAYS
            - BFCOI
            - BNPP_ATC
            - BNP_PARIBAS
            - BNPP_VERS_ATOS
            - BRED
            - CAISSE_D_EPARGNE
            - CBA
            - CEDICAM
            - CIC
            - CM_ARKEA
            - CREDIT_AGRICOLE
            - CREDIT_DU_NORD_VERS_ATOS
            - CREDIT_DU_NORD_VERS_NATIXIS
            - CREDIT_MUTUEL
            - CREDITGUARD
            - DANKORT
            - EFTPOS_NZ
            - ELAVON
            - FDRC
            - FIRSTDATA
            - GICC
            - GLOBALPAY
            - GPP2
            - HSBC
            - IKANO
            - INTERCARD
            - ISRACARD
            - LA_BANQUE_POSTAL
            - LCL
            - LES_BANQUES_POPULAIRES
            - LLOYDS_CARDNET
            - MAESTRO
            - MOBILEPAY
            - NETS
            - OTHER
            - PAYPAL
            - PAYPAL_ECOM
            - PELECARD
            - RESURS_BANK
            - RTS
            - SG
            - SIMULATOR
            - SWEDBANK_PAY
            - SWISH
            - TIETO_EVRY
            - VERIFONE_AU
            - VIPPS
            - WESTPAC
            - WORLDPAY
            - FISERV_AU
            - CUSCAL_AU
            - CHASE_US
            - ELAVON_US
            - FISERV_US
            - TSYS_US
            - GLOBALPAYMENTS_US
            - VANTIV_US
            - HEARTLAND_US
            - SVS_US
            - SVS_UK
          default: TSYS_US
        tidList:
          uniqueItems: true
          type: array
          description: >-
            A pool of terminal IDs issued by the Acquiring Institution. This
            pool is intended to be used for the POIs that's capable of
            initiating multiple payment requests in parallel (e.g. Checkout Page
            and Virtual Terminal)
          example:
            - "1004631982"
            - "1004631983"
            - "1004631984"
          items:
            type: string
      description: Payment Processor Parameters related to Merchant onboarding
      discriminator:
        propertyName: processor
        mapping:
          GLOBALPAYMENTS_US: "#/components/schemas/ProcessorParametersUSGPEAST"
          TSYS_US: "#/components/schemas/ProcessorParametersUSTSYS"
          CHASE_US: "#/components/schemas/ProcessorParametersUSCHASE"
          ELAVON_US: "#/components/schemas/ProcessorParametersUSELAVON"
          FISERV_US: "#/components/schemas/ProcessorParametersUSFIRSTDATA"
          VANTIV_US: "#/components/schemas/ProcessorParametersUSVANTIV"
          HEARTLAND_US: "#/components/schemas/ProcessorParametersUSHeartland"
          FISERV_AU: "#/components/schemas/ProcessorParametersFiservAU"
          CUSCAL_AU: "#/components/schemas/ProcessorParametersCuscalAU"
          SVS_UK: "#/components/schemas/ProcessorParametersSVS"
          SVS_US: "#/components/schemas/ProcessorParametersSVS"
          OTHER: "#/components/schemas/ProcessorParametersOTHER"
    ProcessorParametersSVS:
      title: Payment Processor Parameters - SVS
      type: object
      description: Payment Processor Parameters - SVS
      allOf:
        - $ref: "#/components/schemas/baseProcessorParameters"
        - properties:
            merchantId:
              $ref: "#/components/schemas/svsMerchantId"
            storeNo:
              $ref: "#/components/schemas/svsStoreNo"
            division:
              $ref: "#/components/schemas/svsDivision"
    ProcessorParametersOTHER:
      title: Payment Processor Parameters - OTHER
      type: object
      description: Payment Processor Parameters - OTHER
      allOf:
        - $ref: "#/components/schemas/baseProcessorParameters"
    ProcessorParametersFiservAU:
      title: Payment Processor Parameters - FISERV_AU
      type: object
      description: Payment Processor Parameters - FISERV_AU
      allOf:
        - $ref: "#/components/schemas/baseProcessorParameters"
        - properties:
            visaMVV:
              $ref: "#/components/schemas/visaMVV"
            mastercardMAID:
              $ref: "#/components/schemas/mastercardMAID"
            eftposMTC:
              $ref: "#/components/schemas/eftposMTC"
    ProcessorParametersCuscalAU:
      title: Payment Processor Parameters - CUSCAL_AU
      type: object
      description: Payment Processor Parameters - CUSCAL_AU
      allOf:
        - $ref: "#/components/schemas/baseProcessorParameters"
        - properties:
            visaMVV:
              $ref: "#/components/schemas/visaMVV"
            mastercardMAID:
              $ref: "#/components/schemas/mastercardMAID"
            eftposMTC:
              $ref: "#/components/schemas/eftposMTC"
    ProcessorParametersUSFIRSTDATA:
      title: Payment Processor Parameters - FISERV_US
      type: object
      description: Payment Processor Parameters - FISERV_US
      allOf:
        - $ref: "#/components/schemas/baseProcessorParameters"
        - properties:
            debitEncryptionKey:
              $ref: "#/components/schemas/debitEncryptionKey"
            GroupId:
              $ref: "#/components/schemas/GroupId"
            GroupNumber:
              $ref: "#/components/schemas/GroupNumber"
            FNSNumber:
              $ref: "#/components/schemas/FNSNumber"
    ProcessorParametersUSELAVON:
      title: Payment Processor Parameters - ELAVON_US
      type: object
      description: Payment Processor Parameters - ELAVON_US
      allOf:
        - $ref: "#/components/schemas/baseProcessorParameters"
        - properties:
            debitEncryptionKey:
              $ref: "#/components/schemas/debitEncryptionKey"
    ProcessorParametersUSCHASE:
      title: Payment Processor Parameters - CHASE_US
      required:
        - ClientNum
      type: object
      description: Payment Processor Parameters - CHASE_US
      allOf:
        - $ref: "#/components/schemas/baseProcessorParameters"
        - properties:
            debitEncryptionKey:
              $ref: "#/components/schemas/debitEncryptionKey"
            ClientNum:
              $ref: "#/components/schemas/ClientNum"
            FNSNumber:
              $ref: "#/components/schemas/FNSNumber"
    ProcessorParametersUSVANTIV:
      title: Payment Processor Parameters - VANTIV_US
      required:
        - BankID
      type: object
      description: Payment Processor Parameters - VANTIV_US
      allOf:
        - $ref: "#/components/schemas/baseProcessorParameters"
        - properties:
            debitEncryptionKey:
              $ref: "#/components/schemas/debitEncryptionKey"
            BankID:
              $ref: "#/components/schemas/BankID"
            FNSNumber:
              $ref: "#/components/schemas/FNSNumber"
    ProcessorParametersUSGPEAST:
      title: Payment Processor Parameters - GLOBALPAYMENTS_US
      required:
        - BankID
      type: object
      description: Payment Processor Parameters - GLOBALPAYMENTS_US
      allOf:
        - $ref: "#/components/schemas/baseProcessorParameters"
        - properties:
            debitEncryptionKey:
              $ref: "#/components/schemas/debitEncryptionKey"
            BankID:
              $ref: "#/components/schemas/BankID"
    ProcessorParametersUSTSYS:
      title: Payment Processor Parameters - TSYS_US
      required:
        - AgentBank
        - AgentChain
        - BankBIN
        - StoreNum
      type: object
      description: Payment Processor Parameters - TSYS_US
      allOf:
        - $ref: "#/components/schemas/baseProcessorParameters"
        - properties:
            debitEncryptionKey:
              $ref: "#/components/schemas/debitEncryptionKey"
            StoreNum:
              $ref: "#/components/schemas/StoreNum"
            AgentBank:
              $ref: "#/components/schemas/AgentBank"
            AgentChain:
              $ref: "#/components/schemas/AgentChain"
            BankBIN:
              $ref: "#/components/schemas/BankBIN"
    ProcessorParametersUSHeartland:
      title: Payment Processor Parameters - HEARTLAND_US
      required:
        - AgentBank
        - AgentChain
        - BankBIN
        - StoreNum
      type: object
      description: Payment Processor Parameters - HEARTLAND_US
      allOf:
        - $ref: "#/components/schemas/baseProcessorParameters"
        - properties:
            debitEncryptionKey:
              $ref: "#/components/schemas/debitEncryptionKey"
            StoreNum:
              $ref: "#/components/schemas/StoreNum"
            AgentBank:
              $ref: "#/components/schemas/AgentBank"
            AgentChain:
              $ref: "#/components/schemas/AgentChain"
            BankBIN:
              $ref: "#/components/schemas/BankBIN"
    baseRegionalParameters:
      title: Payment Parameters - Regional specific options
      type: object
      properties:
        parameterSchema:
          type: string
      description: Payment Parameters - Regional specific options
      discriminator:
        propertyName: parameterSchema
        mapping:
          ParametersMaverick: "#/components/schemas/ParametersMaverick"
          ParametersAu: "#/components/schemas/ParametersAu"
    ParametersAu:
      title: Payment Parameters - AU
      type: object
      description: Payment Parameters - AU
      allOf:
        - $ref: "#/components/schemas/baseRegionalParameters"
        - properties:
            EfbEnabled:
              maxLength: 1
              minLength: 1
              pattern: "[0-1]"
              type: string
              description: Efb Enabled
              example: "1"
            EfbCtlsEnabled:
              maxLength: 1
              minLength: 1
              pattern: "[0-1]"
              type: string
              description: Efb Ctls Enabled
              example: "1"
            MerchantChoiceRoutingEnabled:
              maxLength: 1
              minLength: 1
              pattern: "[0-1]"
              type: string
              description: Merchant Choice Routing Enabled
              example: "1"
            CdoMaxTransactionCount:
              maxLength: 8
              minLength: 1
              pattern: ^(\+|-)?\d+$
              type: string
              example: "5"
            CdoMaxAccumulativeAmount:
              maxLength: 99999999
              minLength: 0
              pattern: ^\d*\.?\d*$
              type: string
              example: "1000"
            CdoMaxPurchaseCreditAmount:
              maxLength: 9
              minLength: 0
              pattern: ^[0-9]{1,6}(\.[0-9]{2})?$
              type: string
              example: "100"
            CdoMaxPurchaseDebitAmount:
              maxLength: 9
              minLength: 0
              pattern: ^[0-9]{1,6}(\.[0-9]{2})?$
              type: string
              example: "100"
            EfbMaxTransactionCount:
              maxLength: 8
              minLength: 1
              pattern: ^(\+|-)?\d+$
              type: string
              example: "5"
            EfbMaxAccumulativeAmount:
              maxLength: 15
              minLength: 0
              pattern: ^\d*\.?\d*$
              type: string
              example: "500"
            EfbMaxPurchaseCreditAmount:
              maxLength: 9
              minLength: 0
              pattern: ^[0-9]{1,6}(\.[0-9]{2})?$
              type: string
              example: "200"
            EfbMaxPurchaseDebitAmount:
              maxLength: 9
              minLength: 0
              pattern: ^[0-9]{1,6}(\.[0-9]{2})?$
              type: string
              example: "100"
            EfbMaxRefundCreditAmount:
              maxLength: 9
              minLength: 0
              pattern: ^[0-9]{1,6}(\.[0-9]{2})?$
              type: string
              example: "100"
            EfbMaxRefundDebitAmount:
              maxLength: 9
              minLength: 0
              pattern: ^[0-9]{1,6}(\.[0-9]{2})?$
              type: string
              example: "100"
    ParametersMaverick:
      title: Payment Parameters - Maverick
      type: object
      description: Payment Parameters - Maverick
      allOf:
        - $ref: "#/components/schemas/baseRegionalParameters"
        - properties:
            PrintBusinessRegistrationNumberOnReceipt:
              maxLength: 1
              minLength: 1
              pattern: "[0-1]"
              type: string
              description: >-
                Flag for controlling presence of Business Registration number on
                receipt.
              example: "1"
            BusinessRegistrationNumber:
              maxLength: 15
              minLength: 0
              pattern: ^[0-9\\-]{0,15}$
              type: string
              description: Business registration number
              example: ""
    debitEncryptionKey:
      maxLength: 100
      minLength: 1
      type: string
      description: >-
        Debit Key Name used to determine which keys are loaded as part of a
        terminal deployment/setup.
      example: WoodforestDebit
    FNSNumber:
      maxLength: 7
      type: string
      description: >-
        A number issued by the US Department of Agriculture Food and Nutrition
        Service that is used in SNAP transactions. For eWIC processing, this
        field contains the state assigned retailer ID of the merchant.
      example: "7201234"
    visaMVV:
      maxLength: 10
      minLength: 10
      pattern: ^[a-zA-Z0-9]*$
      type: string
      description: >-
        Visa Merchant Verification Value. This is an optional ID assigned to a
        merchant commonly used for discounts/special interchange fees.
    mastercardMAID:
      maxLength: 6
      minLength: 6
      pattern: ^[a-zA-Z0-9]*$
      type: string
      description: >-
        Mastercard Assigned ID. This is an optional ID assigned to a merchant
        commonly used for discounts/special interchange fees.
    eftposMTC:
      maxLength: 3
      minLength: 3
      pattern: ^[a-zA-Z0-9]*$
      type: string
      description: >-
        EFTPOS Australia Merchant Tier Code. Defines the type of Merchant and,
        therefore, whether standard, charity or Differential Interchange Fee
        Rates (DIFR) are payable

        The value shall be set by Hub to be ‘901’ where Field 018 (Merchant
        Category Code) is the value ‘8398’, in all other cases the value set by
        Hub shall be the last 3 digits of the EFC tag sent by Acquirer to Hub.

        An invalid Merchant Tier value from Acquirer will be replaced by Hub
        with the Standard tier code ‘000’.
    detailedStatusEnum:
      type: string
      description: An order will be in one of the following states
      enum:
        - DRAFT
        - SUBMITTED
        - INPROGRESS
        - PENDING_SIGNATURE
        - UNDER_REVIEW
        - REQUIRES_ATTENTION
        - INTERNAL_BOARDING
        - FULFILMENT_BOOKED
        - FULFILMENT_PICKED
        - FULFILMENT_SHIPPED
        - CANCEL_REQUESTED
        - CANCEL_INPROGRESS
        - CANCEL_ERROR
        - CANCELED_BYUSER
        - COMPLETED
        - CANCELLED
        - DECLINED
        - ONHOLD
    lastChangeTime:
      type: string
      description: Time status detailed status last changed
      format: date-time
      example: "2020-01-06T18:16:14.243Z"
    extendedDetails:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/detailedStatusEnum"
        code:
          type: string
          description: Code associated with the status (if applicable)
        information:
          type: string
          description: Extra Information associated with the status (if applicable)
        lastChangeTime:
          $ref: "#/components/schemas/lastChangeTime"
        canCancel:
          type: boolean
          description: Can this order be cancelled.
      description: Detailed Status of the Order
    orderStats:
      type: object
      properties:
        minsSinceCreatedToLastUpdate:
          type: integer
          description: Number of minutes since last status update and created order time
          default: 0
        minsSinceLastStatusUpdate:
          type: integer
          description: Number of minutes (if > 0) since last status update
          default: 0
      description: Order Statistics
    merchantTypeEnum:
      type: string
      description: An order will be in one of the following merchant type
      enum:
        - NewCompanyAndSite
        - ExistingCompanyNewSite
        - SmallMerchant
    baseAccountSite:
      title: Base Account Sites
      type: object
      description: Base Account Sites
      allOf:
        - $ref: "#/components/schemas/baseAddressWithoutType"
        - properties:
            sitePurpose:
              type: string
              description: Site Purpose
              enum:
                - BILL
                - SHIP
            groupNumber:
              type: string
              description: Group Number which this site is linked to
            activeBank:
              $ref: "#/components/schemas/activeBank"
            customerId:
              $ref: "#/components/schemas/customerId"
    accountSite:
      title: Account Sites
      type: object
      description: Account Sites
      allOf:
        - $ref: "#/components/schemas/baseAccountSite"
        - properties:
            linkedSites:
              maxItems: 50
              type: array
              items:
                $ref: "#/components/schemas/baseAccountSite"
    accountSitesResponse:
      type: object
      properties:
        sites:
          maxItems: 100
          type: array
          items:
            $ref: "#/components/schemas/accountSite"
      description: Account Sites Response
    oracleAccountId:
      type: integer
      description: Oracle Account Id
      example: 12031585
    oracleAccountDetailsResponse:
      title: Oracle Account Details Response
      properties:
        accounts:
          type: array
          items:
            $ref: "#/components/schemas/oracleAccountDetails"
      description: Oracle Account Details Response
    oracleAccountDetails:
      title: Oracle Account Details
      required:
        - oracleAccountId
      properties:
        oracleAccountId:
          $ref: "#/components/schemas/oracleAccountId"
        userUid:
          $ref: "#/components/schemas/createdUserUid"
        merchantCompanyEntityUid:
          $ref: "#/components/schemas/merchantCompanyEntityUid"
      description: Oracle Account Details
    cancelReasonEnum:
      title: Cancellation Reason
      type: string
      description: Reason for order cancellation.
      enum:
        - ADMIN_REASON
        - RELATED_PO_CHANGES
        - WRONG_PRODUCT
        - ORDER_LATE
        - OTHER
    cancelAdditionalReason:
      title: Cancellation Reason Additional Information
      type: string
      description: Free-Form reason for order cancellation.
    orderCancellation:
      required:
        - cancelReasonEnum
      type: object
      properties:
        cancelReasonEnum:
          $ref: "#/components/schemas/cancelReasonEnum"
        cancelAdditionalReason:
          $ref: "#/components/schemas/cancelAdditionalReason"
      description: Order cancel reason
    activeBank:
      maxLength: 4
      minLength: 1
      pattern: ^[0-9]*
      type: string
      description: Last 4 digits of active bank account
      example: "2061"
    customerId:
      type: string
      description: Customer ID in Oracle
      example: 28792600010001, BK00045
    siteId:
      pattern: ^[0-9]*
      type: string
      description: Site ID of existing unapproved user
      example: "42679"
    batchId:
      type: string
      description: Identifer assigned to the order batch
      format: uuid
      example: 14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9
    BatchSearchResponse:
      required:
        - batches
        - metadata
      type: object
      properties:
        batches:
          maxItems: 100
          type: array
          items:
            $ref: "#/components/schemas/batchDetails"
        metadata:
          $ref: "#/components/schemas/metadata"
      description: Batch Search results
    batchDetails:
      required:
        - batchId
        - processingStatus
      type: object
      description: Details of a batch
      allOf:
        - $ref: "#/components/schemas/batchDetailsUpdatable"
        - properties:
            batchId:
              $ref: "#/components/schemas/batchId"
            fileCreatedDate:
              type: string
              description: The date time when the file was created on SFTP
              format: date-time
            filePickupDate:
              type: string
              description: The date time when the file was picked up by the batch process
              format: date-time
            fileName:
              maxLength: 200
              type: string
            orderType:
              $ref: "#/components/schemas/orderType"
            retryCount:
              maximum: 100
              minimum: 0
              type: integer
              default: 0
            transactions:
              type: array
              description: Individual transactions of the batch
              items:
                $ref: "#/components/schemas/batchLineItem"
            completionDate:
              type: string
              format: date-time
    batchDetailsUpdatable:
      type: object
      properties:
        processingStatus:
          $ref: "#/components/schemas/batchStatus"
        responseFileSent:
          type: boolean
          default: false
        responseFileName:
          maxLength: 200
          type: string
      description: Modifiable details  of a batch
    batchLineItem:
      type: object
      properties:
        orderId:
          $ref: "#/components/schemas/orderId"
        requestId:
          maxLength: 36
          type: string
          description: Unique value per line per file
        entityType:
          type: string
          description: The type of entity that the operation is performed on
          enum:
            - MERCHANT_COMPANY
            - MERCHANT_SITE
            - POI
        operation:
          type: string
          description: The operation performed on the entity
          enum:
            - PARTIAL_UPDATE
            - TRADING_ADDRESS_UPDATE
            - DELETE
        entityLogicalId:
          maxLength: 30
          type: string
          description: The logical identifier of the entity.This could be a MID or a TID
        keyValues:
          type: string
          description: Operational parameters defined as key-value pairs
        createdDate:
          type: string
          format: date-time
        status:
          type: string
          description: HTTP Status returned by order API
          example: "200"
        response:
          type: string
          description: Response from order API
          example: Merchant Entity Updated Successfully
        orderStatus:
          $ref: "#/components/schemas/orderStatusEnum"
    batchStatus:
      type: string
      description: Status of the batch indicating its stage
      enum:
        - SUCCESS
        - CORRUPT_FILE
        - DUPLICATE_FILE_NAME
        - NO_FILES_RECEIVED
        - INPROGRESS
        - PENDING
        - TX_COMPLETED
        - PARTIAL_SUCCESS
        - FORCE_STOPPED
    httpError400:
      title: HTTP 400 Error
      required:
        - code
        - message
        - title
        - type
      type: object
      additionalProperties: false
      description: >-
        The request could not be understood by the server due to malformed
        syntax.
      allOf:
        - $ref: "#/components/schemas/ErrorResp"
        - type: object
          properties:
            code:
              type: string
              example: "400"
              enum:
                - "400"
              default: "400"
            title:
              type: string
              example: Bad Request
              enum:
                - Bad Request
              default: Bad Request
            message:
              type: string
              example: >-
                The request could not be understood by the server due to
                malformed syntax. The client SHOULD NOT repeat the request
                without modifications.
              default: >-
                The request could not be understood by the server due to
                malformed syntax. The client SHOULD NOT repeat the request
                without modifications.
            timestamp:
              type: string
              description: >-
                The time that the error occurred. All dates in the JSON payloads
                are represented in ISO 8601 date-time format. 

                All date-time fields in responses must include the timezone.
              format: date-time
              example: "2017-04-05T10:43:07Z"
            type:
              type: string
              example: INVALID_REQUEST_ERROR
              enum:
                - INVALID_REQUEST_ERROR
              default: INVALID_REQUEST_ERROR
            param:
              type: string
              description: >-
                The parameter the error relates to if the error is
                parameter-specific. You can use this to display a message near
                the correct form field, for example.
    httpError401:
      title: HTTP 401 Error
      required:
        - code
        - message
        - title
        - type
      type: object
      additionalProperties: false
      description: The request must be authenticated to access the resource.
      allOf:
        - $ref: "#/components/schemas/ErrorResp"
        - type: object
          properties:
            code:
              type: string
              example: "401"
              enum:
                - "401"
              default: "401"
            title:
              type: string
              example: Unauthorised
              enum:
                - Unauthorised
              default: Unauthorised
            message:
              type: string
              example: The request requires client authentication.
              default: The request requires client authentication.
            timestamp:
              type: string
              description: >-
                The time that the error occurred. All dates in the JSON payloads
                are represented in ISO 8601 date-time format. 

                All date-time fields in responses must include the timezone.
              format: date-time
              example: "2017-04-05T10:43:07Z"
            type:
              type: string
              example: AUTHENTICATION_ERROR
              enum:
                - AUTHENTICATION_ERROR
              default: AUTHENTICATION_ERROR
            param:
              type: string
              description: >-
                The parameter the error relates to if the error is
                parameter-specific. You can use this to display a message near
                the correct form field, for example.
    httpError403:
      title: HTTP 403 Error
      required:
        - code
        - message
        - title
        - type
      type: object
      additionalProperties: false
      description: The request must be authorised to access the resource.
      allOf:
        - $ref: "#/components/schemas/ErrorResp"
        - type: object
          properties:
            code:
              type: string
              example: "403"
              enum:
                - "403"
              default: "403"
            title:
              type: string
              example: Forbidden
              enum:
                - Forbidden
              default: Forbidden
            message:
              type: string
              example: The request requires client authorisation to access resource.
              default: The request requires client authorisation to access resource.
            timestamp:
              type: string
              description: >-
                The time that the error occurred. All dates in the JSON payloads
                are represented in ISO 8601 date-time format. 

                All date-time fields in responses must include the timezone.
              format: date-time
              example: "2017-04-05T10:43:07Z"
            type:
              type: string
              example: AUTHENTICATION_ERROR
              enum:
                - AUTHENTICATION_ERROR
              default: AUTHENTICATION_ERROR
            param:
              type: string
              description: >-
                The parameter the error relates to if the error is
                parameter-specific. You can use this to display a message near
                the correct form field, for example.
    httpError404:
      title: HTTP 404 Error
      required:
        - code
        - message
        - title
        - type
      type: object
      additionalProperties: false
      description: The server cannot find the requested resource.
      allOf:
        - $ref: "#/components/schemas/ErrorResp"
        - type: object
          properties:
            code:
              type: string
              example: "404"
              enum:
                - "404"
              default: "404"
            title:
              type: string
              example: Not Found
              enum:
                - Not Found
              default: Not Found
            message:
              type: string
              example: The server cannot find the requested resource.
              default: The server cannot find the requested resource.
            timestamp:
              type: string
              description: >-
                The time that the error occurred. All dates in the JSON payloads
                are represented in ISO 8601 date-time format. 

                All date-time fields in responses must include the timezone.
              format: date-time
              example: "2017-04-05T10:43:07Z"
            type:
              type: string
              example: INVALID_REQUEST_ERROR
              enum:
                - INVALID_REQUEST_ERROR
              default: INVALID_REQUEST_ERROR
            param:
              type: string
              description: >-
                The parameter the error relates to if the error is
                parameter-specific. You can use this to display a message near
                the correct form field, for example.
    httpError429:
      title: HTTP 429 Error
      required:
        - code
        - message
        - title
        - type
      type: object
      additionalProperties: false
      description: >-
        The resource exists the number of requests has exceeded the specified
        quota.
      allOf:
        - $ref: "#/components/schemas/ErrorResp"
        - type: object
          properties:
            code:
              type: string
              example: "429"
              enum:
                - "429"
              default: "429"
            title:
              type: string
              example: Too Many Requests
              enum:
                - Too Many Requests
              default: Too Many Requests
            message:
              type: string
              example: >-
                The number of requests from this client is restricted to a
                specified quota.
              default: >-
                The number of requests from this client is restricted to a
                specified quota.
            timestamp:
              type: string
              description: >-
                The time that the error occurred. All dates in the JSON payloads
                are represented in ISO 8601 date-time format. 

                All date-time fields in responses must include the timezone.
              format: date-time
              example: "2017-04-05T10:43:07Z"
            type:
              type: string
              example: RATE_LIMIT_ERROR
              enum:
                - RATE_LIMIT_ERROR
              default: RATE_LIMIT_ERROR
            param:
              type: string
              description: >-
                The parameter the error relates to if the error is
                parameter-specific. You can use this to display a message near
                the correct form field, for example.
    httpError500:
      title: HTTP 500 Error
      required:
        - code
        - message
        - title
        - type
      type: object
      additionalProperties: false
      description: Unexpected Server Error
      allOf:
        - $ref: "#/components/schemas/ErrorResp"
        - type: object
          properties:
            code:
              type: string
              example: "500"
              enum:
                - "500"
              default: "500"
            title:
              type: string
              example: Internal Server Error
              enum:
                - Internal Server Error
              default: Internal Server Error
            message:
              type: string
              example: >-
                The server encountered an unexpected condition which prevented
                it from fulfilling the request.
              default: >-
                The server encountered an unexpected condition which prevented
                it from fulfilling the request.
            timestamp:
              type: string
              description: >-
                The time that the error occurred. All dates in the JSON payloads
                are represented in ISO 8601 date-time format. 

                All date-time fields in responses must include the timezone.
              format: date-time
              example: "2017-04-05T10:43:07Z"
            type:
              type: string
              example: API_ERROR
              enum:
                - API_ERROR
              default: API_ERROR
            param:
              type: string
              description: >-
                The parameter the error relates to if the error is
                parameter-specific. You can use this to display a message near
                the correct form field, for example.
    httpError503:
      title: HTTP 503 Error
      required:
        - code
        - message
        - title
        - type
      type: object
      additionalProperties: false
      description: Service Unavailable Error
      allOf:
        - $ref: "#/components/schemas/ErrorResp"
        - type: object
          properties:
            code:
              type: string
              example: "503"
              enum:
                - "503"
              default: "503"
            title:
              type: string
              example: Service Unavailable
              enum:
                - Service Unavailable
              default: Service Unavailable
            message:
              type: string
              example: >-
                The server is not ready to handle the request. If specified
                please check the <strong>Retry-After</strong> for the time
                period specified for recovery/re-attempt of request.
              default: >-
                The server is not ready to handle the request. If specified
                please check the <strong>Retry-After</strong> for the time
                period specified for recovery/re-attempt of request.
            timestamp:
              type: string
              description: >-
                The time that the error occurred. All dates in the JSON payloads
                are represented in ISO 8601 date-time format. 

                All date-time fields in responses must include the timezone.
              format: date-time
              example: "2017-04-05T10:43:07Z"
            type:
              type: string
              example: API_ERROR
              enum:
                - API_ERROR
              default: API_ERROR
            param:
              type: string
              description: >-
                The parameter the error relates to if the error is
                parameter-specific. You can use this to display a message near
                the correct form field, for example.
    httpError504:
      title: HTTP 504 Error
      required:
        - code
        - message
        - title
        - type
      type: object
      additionalProperties: false
      description: Gateway Timeout Error
      allOf:
        - $ref: "#/components/schemas/ErrorResp"
        - type: object
          properties:
            code:
              type: string
              example: "504"
              enum:
                - "504"
              default: "504"
            title:
              type: string
              example: Gateway Timeout
              enum:
                - Gateway Timeout
              default: Gateway Timeout
            message:
              type: string
              example: >-
                The server, while acting as a gateway or proxy, did not get a
                response in time from the upstream server that it needed in
                order to complete the request.
              default: >-
                The server, while acting as a gateway or proxy, did not get a
                response in time from the upstream server that it needed in
                order to complete the request.
            timestamp:
              type: string
              description: >-
                The time that the error occurred. All dates in the JSON payloads
                are represented in ISO 8601 date-time format. 

                All date-time fields in responses must include the timezone.
              format: date-time
              example: "2017-04-05T10:43:07Z"
            type:
              type: string
              example: API_ERROR
              enum:
                - API_ERROR
              default: API_ERROR
            param:
              type: string
              description: >-
                The parameter the error relates to if the error is
                parameter-specific. You can use this to display a message near
                the correct form field, for example.
    httpError405:
      title: HTTP 405 Error
      required:
        - code
        - message
        - title
        - type
      type: object
      additionalProperties: false
      description: The resource exists but the operation does not.
      allOf:
        - $ref: "#/components/schemas/ErrorResp"
        - type: object
          properties:
            code:
              type: string
              example: "405"
              enum:
                - "405"
              default: "405"
            title:
              type: string
              example: Method Not Allowed
              enum:
                - Method Not Allowed
              default: Method Not Allowed
            message:
              type: string
              example: >-
                The method specified in the Request-Line is not allowed for the
                resource identified by the Request-URI.
              default: >-
                The method specified in the Request-Line is not allowed for the
                resource identified by the Request-URI.
            timestamp:
              type: string
              description: >-
                The time that the error occurred. All dates in the JSON payloads
                are represented in ISO 8601 date-time format. 

                All date-time fields in responses must include the timezone.
              format: date-time
              example: "2017-04-05T10:43:07Z"
            type:
              type: string
              example: INVALID_REQUEST_ERROR
              enum:
                - INVALID_REQUEST_ERROR
              default: INVALID_REQUEST_ERROR
            param:
              type: string
              description: >-
                The parameter the error relates to if the error is
                parameter-specific. You can use this to display a message near
                the correct form field, for example.
    httpError406:
      title: HTTP 406 Error
      required:
        - code
        - message
        - title
        - type
      type: object
      additionalProperties: false
      description: >-
        The resource exists but response does not match the content specified in
        the request header.
      allOf:
        - $ref: "#/components/schemas/ErrorResp"
        - type: object
          properties:
            code:
              type: string
              example: "406"
              enum:
                - "406"
              default: "406"
            title:
              type: string
              example: Not Acceptable
              enum:
                - Not Acceptable
              default: Not Acceptable
            message:
              type: string
              example: >-
                The resource identified by the request is only capable of
                generating response entities which have content characteristics
                not acceptable according to the accept headers sent in the
                request.
              default: >-
                The resource identified by the request is only capable of
                generating response entities which have content characteristics
                not acceptable according to the accept headers sent in the
                request.
            timestamp:
              type: string
              description: >-
                The time that the error occurred. All dates in the JSON payloads
                are represented in ISO 8601 date-time format. 

                All date-time fields in responses must include the timezone.
              format: date-time
              example: "2017-04-05T10:43:07Z"
            type:
              type: string
              example: INVALID_REQUEST_ERROR
              enum:
                - INVALID_REQUEST_ERROR
              default: INVALID_REQUEST_ERROR
            param:
              type: string
              description: >-
                The parameter the error relates to if the error is
                parameter-specific. You can use this to display a message near
                the correct form field, for example.
    CurrencyCodeEnum:
      title: Currency Code
      type: string
      description: >-
        Three-letter ISO 4217 alphabetical currency code. e.g. USD. Values
        correspond

        to [ISO 4217](https://wikipedia.org/wiki/ISO_4217).
      enum:
        - AED
        - AFN
        - ALL
        - AMD
        - ANG
        - AOA
        - ARS
        - AUD
        - AWG
        - AZN
        - BAM
        - BBD
        - BDT
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BOV
        - BRL
        - BSD
        - BTN
        - BWP
        - BYR
        - BZD
        - CAD
        - CDF
        - CHE
        - CHF
        - CHW
        - CLF
        - CLP
        - CNY
        - COP
        - COU
        - CRC
        - CUC
        - CUP
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EGP
        - ERN
        - ETB
        - EUR
        - FJD
        - FKP
        - FRF
        - GBP
        - GEL
        - GHS
        - GIP
        - GMD
        - GNF
        - GTQ
        - GYD
        - HKD
        - HNL
        - HRK
        - HTG
        - HUF
        - IDR
        - ILS
        - INR
        - IQD
        - IRR
        - ISK
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LTL
        - LVL
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRO
        - MUR
        - MVR
        - MWK
        - MXN
        - MXV
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SBD
        - SCR
        - SDG
        - SEK
        - SGD
        - SHP
        - SLL
        - SOS
        - SRD
        - SSP
        - STD
        - SVC
        - SYP
        - SZL
        - THB
        - TJS
        - TMT
        - TND
        - TOP
        - TRY
        - TTD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - USN
        - USS
        - UYI
        - UYU
        - UZS
        - VEF
        - VND
        - VUV
        - WST
        - XAF
        - XAG
        - XAU
        - XBA
        - XBB
        - XBC
        - XBD
        - XCD
        - XDR
        - XOF
        - XPD
        - XPF
        - XPT
        - XTS
        - XXX
        - YER
        - ZAR
        - ZMK
        - ZMW
        - BTC
    CountryCode3Enum:
      title: Country Code
      type: string
      description: >-
        The [ISO 3166-1
        alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) country
        code.<blockquote><strong>Note:</strong> The country code for Great
        Britain is <code>GB</code> and not <code>UK</code> as is used in that
        country's top-level domain names.</blockquote>.
      example: AUS
      enum:
        - ZZZ
        - ABW
        - AFG
        - AGO
        - AIA
        - ALA
        - ALB
        - AND
        - ARE
        - ARG
        - ARM
        - ASM
        - ATA
        - ATF
        - ATG
        - AUS
        - AUT
        - AZE
        - BDI
        - BEL
        - BEN
        - BES
        - BFA
        - BGD
        - BGR
        - BHR
        - BHS
        - BIH
        - BLM
        - BLR
        - BLZ
        - BMU
        - BOL
        - BRA
        - BRB
        - BSB
        - BRN
        - BTN
        - BVT
        - BWA
        - CAF
        - CAN
        - CCK
        - CHE
        - CHL
        - CHN
        - CIV
        - CMR
        - COD
        - COG
        - COK
        - COL
        - COM
        - CPV
        - CRI
        - CUB
        - CUW
        - CXR
        - CYM
        - CYP
        - CZE
        - DEU
        - DJI
        - DMA
        - DNK
        - DOM
        - DZA
        - ECU
        - EGY
        - ERI
        - ESH
        - ESP
        - EST
        - ETH
        - FIN
        - FJI
        - FLK
        - FRA
        - FRO
        - FSM
        - GAB
        - GBR
        - GEO
        - GGY
        - GHA
        - GIB
        - GIN
        - GLP
        - GMB
        - GNB
        - GNQ
        - GRC
        - GRD
        - GRL
        - GTM
        - GUF
        - GUM
        - GUY
        - HKG
        - HMD
        - HND
        - HRV
        - HTI
        - HUN
        - IDN
        - IMN
        - IND
        - IOT
        - IRL
        - IRN
        - IRQ
        - ISL
        - ISR
        - ITA
        - JAM
        - JEY
        - JOR
        - JPN
        - KAZ
        - KEN
        - KGZ
        - KHM
        - KIR
        - KNA
        - KOR
        - KWT
        - LAO
        - LBN
        - LBR
        - LBY
        - LCA
        - LIE
        - LKA
        - LSO
        - LTU
        - LUX
        - LVA
        - MAC
        - MAF
        - MAR
        - MCO
        - MDA
        - MDG
        - MDV
        - MEX
        - MHL
        - MKD
        - MLI
        - MLT
        - MMR
        - MNE
        - MNG
        - MNP
        - MOZ
        - MRT
        - MSR
        - MTQ
        - MUS
        - MWI
        - MYS
        - MYT
        - NAM
        - NCL
        - NER
        - NFK
        - NGA
        - NIC
        - NIU
        - NLD
        - NOR
        - NPL
        - NRU
        - NZL
        - OMN
        - PAK
        - PAN
        - PCN
        - PER
        - PHL
        - PLW
        - PNG
        - POL
        - PRI
        - PRK
        - PRT
        - PRY
        - PSE
        - PYF
        - QAT
        - REU
        - ROU
        - RUS
        - RWA
        - SAU
        - SDN
        - SEN
        - SGC
        - SGP
        - SHN
        - SJM
        - SLB
        - SLE
        - SLV
        - SMR
        - SOM
        - SPM
        - SRB
        - SSD
        - STP
        - SUR
        - SVK
        - SVN
        - SWE
        - SWZ
        - SXM
        - SYC
        - SYR
        - TCA
        - TCD
        - TGO
        - THA
        - TJK
        - TKL
        - TKM
        - TLS
        - TON
        - TTO
        - TUN
        - TUR
        - TUV
        - TWN
        - TZA
        - UGA
        - UKR
        - UMI
        - URY
        - USA
        - UZB
        - VAT
        - VCT
        - VEN
        - VGB
        - VIR
        - VNM
        - VUT
        - WLF
        - WSM
        - YEM
        - ZAF
        - ZMB
        - ZWE
    TimeZone:
      maxLength: 127
      minLength: 1
      type: string
      description: >-
        A time zone, following the format defined in the IANA tz database
        (https://www.iana.org/time-zones). Valid examples are America/New_York
        and Etc/UTC. Do not use ambiguous, non-qualified values such as EST or
        GB. Before including this type in your interface, please consider
        whether it is actually appropriate to convey time zone information with
        your type. It is almost always the case that this should be transformed
        from UTC at the time of display to the user; this type might therefore
        be most associated with user-preference APIs.
    Name:
      title: Name Details
      uniqueItems: false
      required:
        - firstName
        - lastName
      type: object
      properties:
        firstName:
          maxLength: 120
          minLength: 1
          uniqueItems: false
          type: string
          description: The given name of contact.
        lastName:
          maxLength: 120
          minLength: 1
          uniqueItems: false
          type: string
          description: >-
            The surname name or family name of the contact. This is required
            when the name is for a party or person. Can also include the
            matronymic or mother's family name where this is customarily used.
        prefix:
          maxLength: 120
          uniqueItems: false
          type: string
          description: >-
            The prefix to the party name. This is sometimes referred to as a
            title, salutation or appellation.
        alternateFullName:
          maxLength: 200
          uniqueItems: false
          type: string
          description: >-
            The alternate name for the party. This can be a business name or
            nickname. This should be used where the name of the party cannot be
            parsed into its constituent parts such as first name or last name.
            If the party is a business then this should always be present.
        middleName:
          maxLength: 120
          uniqueItems: false
          type: string
          description: The middle name or names for a party or person.
        suffix:
          maxLength: 120
          uniqueItems: false
          type: string
          description: The name suffix for the party.
      description: >-
        An object representing the name or component names of a party, person or
        business. No elements are mandatory due to the different usages, but the
        business rules need to be applied in the context where name is used.
    ContactTypeEnum:
      title: Contact Type
      type: string
      description: An indicator for the type of contact
      enum:
        - OWNER
        - BUSINESS
        - PERSONAL
      default: BUSINESS
    Phone:
      title: Phone number
      required:
        - phoneType
        - value
      type: object
      properties:
        callingCode:
          type: string
          description: >-
            Country Calling Code. Mapped to PARTY_PHONE.CALLING_CODE or
            VENUE_PHONE.CALLING_CODE
        value:
          minLength: 5
          type: string
          description: The actual phone number less country code and/or extension.
        extension:
          type: string
          description: The internal extension number where applicable or known.
        isPrimary:
          type: boolean
          description: >-
            Indicates that the phone is a the primary phone. Mapped to
            PARTY_PHONE_PRIMARY
          default: false
        phoneType:
          $ref: "#/components/schemas/PhoneTypeEnum"
      additionalProperties: false
      description: A simple Phone Number
    EmailAddress:
      title: Email Address
      maxLength: 254
      minLength: 3
      pattern: ^[a-zA-Z0-9!#$%&'*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+[.].+$
      type: string
      description: >-
        A valid internationalized email address, as defined by RFC 5322, RFC
        6530, and other RFCs. Due to RFC 5321, an email address can be up to 254
        characters long even though up to 64 characters are allowed before and
        255 characters are allowed after the @ sign. This pattern verifies only
        that the string contains an unquoted @ sign. See
        https://tools.ietf.org/html/rfc5322#section-3.4.1.
      format: email
    SepaAccount:
      title: SEPA Bank Account
      description: A SEPA Account structure extending the base account
      allOf:
        - $ref: "#/components/schemas/Account"
        - type: object
          properties:
            country:
              $ref: "#/components/schemas/CountryCode3Enum"
            accountName:
              type: string
              description: >-
                Name of the account as known by the financial institution
                operating the account.
            iban:
              $ref: "#/components/schemas/IBANIdentifier"
            bic:
              $ref: "#/components/schemas/BICIdentifier"
    DomesticAccount:
      title: Domestic Bank Account
      description: A Domestic Bank Account structure extending the base account
      allOf:
        - $ref: "#/components/schemas/Account"
        - type: object
          properties:
            accountName:
              type: string
              description: >-
                Name of the account as known by the financial institution
                operating the account.
              example: Coffee Supreme LTD
            sortCode:
              pattern: ^[0-9]{6,6}$
              type: string
              description: The UK Sorting Code identifier the sort code is xx xx xx.
              example: "301105"
            bsb:
              pattern: ^[0-9]{6,6}$
              type: string
              description: >-
                An Australian/New Zealand term for the Bank State Branch
                indicator. It is a 6 digit value constructed with the first 2
                digits identifying the bank.
              example: "022039"
            routingTransitNumber:
              pattern: ^[0-9]{9,9}$
              type: string
              description: >-
                routing transit number for the bank account. A routing transit
                number is a nine-digit number used to identify a bank or
                financial institution when clearing funds or processing checks.
                Established by the American Bankers Association (ABA)
              example: "247484410"
            accountNumber:
              type: string
              description: The Number of the account
              example: "23008275"
    MCC:
      maxLength: 4
      minLength: 3
      pattern: ^[0-9]{3,4}$
      type: string
      description: >-
        The Merchant Category Code (MCC). A 4 digit Code classifying the type of
        business being done by the card acceptor or Merchant (in accordance with
        ISO 18245).
      example: "5411"
    TerminalParameters:
      title: Parameters
      type: object
      properties:
        transactionOptions:
          $ref: "#/components/schemas/TransactionOptions"
        limits:
          $ref: "#/components/schemas/TransactionLimits"
        receiptOptions:
          $ref: "#/components/schemas/ReceiptOptions"
        tipOptions:
          $ref: "#/components/schemas/TipOptions"
      description: Deprecated - Please use paymentAppParameters
      deprecated: true
    EntityOpeningHours:
      title: Opening Hours
      required:
        - day
        - times
      type: object
      properties:
        day:
          $ref: "#/components/schemas/DayOfWeekEnum"
        times:
          $ref: "#/components/schemas/EntityOpeningPeriod"
      description: An dictionary map of the different opening hours for an Entity
    BundleAndPrice_1:
      required:
        - packageBundleId
      type: object
      properties:
        packageBundleId:
          $ref: "#/components/schemas/packageBundleId"
        price:
          $ref: "#/components/schemas/AmountSimple"
    AmountSimple:
      title: Amount Simple Type
      maxLength: 32
      pattern: ^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$
      type: string
      description: >-
        The value, which can be anything from:<ul><li>An integer. For currencies
        that are not typically fractional, such as `JPY`.</li><li>A three-place
        decimal fraction. For currencies that are subdivided into thousandths,
        such as `TND`.</li><li> An eight-place decimal fraction. For currencies
        such as Bitcoin.</li></li>For the required number of decimal places for
        a currency code, see ISO 4217.
      example: "20.50"
    UpdateStatusEnum:
      type: string
      description: >-
        An entity may have different states but will still exist in the Verifone
        Service without being active as a record is required for the status.


        This only allows update to active status, delete must be explicity
        executed as an operation.
      enum:
        - ACTIVE
        - INACTIVE
    ErrorResp:
      title: Error
      type: object
      properties:
        reversalStatus:
          type: string
          description: >-
            Indicates to the API client if a technical reversal has been
            completed by Verifone.
          enum:
            - NONE
            - REQUIRED
            - COMPLETED
          default: NONE
      description: >-
        A common Error object returned as part of the API layer.


        . This is modified to become the base class for all of the derived HTTP
        Error Responses.
    PhoneTypeEnum:
      title: Phone Type
      type: string
      description: >-
        Phone type in PHONE_TYPE_CON. Mapped to PARTY_PHONE.PHONE_TYPE_CON_ID or
        VENUE_PHONE.PHONE_TYPE_CON_ID
      enum:
        - HOME
        - MOBILE
        - WORK
        - FAX
        - OTHER
      default: HOME
    Account:
      title: Account
      type: object
      properties:
        currency:
          $ref: "#/components/schemas/CurrencyCodeEnum"
        accountHolderType:
          type: string
          enum:
            - BUSINESS
            - PERSONAL
          default: BUSINESS
        description:
          maxLength: 35
          minLength: 1
          type: string
          description: Specifies the description of the account type.
          example: Coffee Supreme Trading
        nickname:
          maxLength: 70
          minLength: 1
          type: string
          description: >-
            The nickname of the account, assigned by the account owner in order
            to provide an additional means of identification of the account.
          example: Store 1 Account
      additionalProperties: false
      description: >-
        Unambiguous identification of an account to which credit and debit
        entries are made.


        These entries are based on the Open Banking standards used in various
        countries - UK, Australia, New Zealand as well as a combination of
        details from the ISO20022 account properties.
    IBANIdentifier:
      title: IBAN
      pattern: ^[a-zA-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}$
      type: string
      description: >
        International Bank Account Number (ISO 13616-1:2007).
         The use of an IBAN is mandated for all SEPA transactions.
        There are 66 countries that support this format. The length will vary by
        country. Norway has the shortest format, 15 characters, currently Malta
        is the longest with 31 characters.
    BICIdentifier:
      title: Bank Identifier Code
      maxLength: 8
      pattern: ^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$
      type: string
      description: >-
        International Bank Identifier Code Format.

        The Bank Identifier Code or SWIFT Code this can also be referred to as
        the CHIPS, NCC, VSC or IFSC depending on your location. Made up of 8
        character in 3 parts: BankCode(4), Country Code(2) and Location (2).

        [ISO 9362](https://www.iso.org/standard/60390.html)
      example: CTBAAU2S
    TransactionOptions:
      title: Transaction Options
      type: object
      properties:
        purchaseEnabled:
          type: boolean
          description: Enable Purchase for this merchant.
        purchaseWithCashoutEnabled:
          type: boolean
          description: Enable Purchase with Cashout for this merchant.
        cashoutEnabled:
          type: boolean
          description: Enable standalone Cashout for this merchant.
        refundEnabled:
          type: boolean
          description: Enable Refund for this merchant.
        preauthEnabled:
          type: boolean
          description: Enable PreAuth for this merchant.
        balanceEnquiryEnabled:
          type: boolean
          description: Enable Balance Enquiry for this merchant.
        motoPaymentEnabled:
          type: boolean
          description: Enable mail and telephone order (MOTO) payments.
        motoTipEnabled:
          type: boolean
          description: Enable tip for moto payments for this merchant.
        motoRefundEnabled:
          type: boolean
          description: Enable mail and telephone order (MOTO) payments.
        motoPreauthEnabled:
          type: boolean
          description: Enable mail and telephone order (MOTO) payments.
        motoSeparationEnabled:
          type: boolean
          description: >-
            If enabled, separate options for telephone and mail order will be
            presented to the user.
        cashoutAmounts:
          maxLength: 150
          pattern: "[0-9]+(,[0-9]+)+"
          type: string
          description: >-
            Predefined Cashout amounts that user can select from. Comma
            separated amount e.g. 10.00,20.00,40.00. This is in the currency
            supported by the terminal. All currency format represents a decimal
            number. Maximum 3 values will be allowed.
      description: Transaction Options
    TransactionLimits:
      title: Limits
      type: object
      properties:
        maxAmountPurchase:
          $ref: "#/components/schemas/AmountSimple"
        maxAmountRefundCashier:
          $ref: "#/components/schemas/AmountSimple"
        maxAmountRefundManager:
          $ref: "#/components/schemas/AmountSimple"
        maxAmountRefundPerSettlement:
          $ref: "#/components/schemas/AmountSimple"
        maxAmountCashout:
          $ref: "#/components/schemas/AmountSimple"
      description: Limits
    ReceiptOptions:
      title: Receipt Options
      type: object
      properties:
        printMerchantReceipt:
          $ref: "#/components/schemas/PrintOptionsEnum"
        printCustomerReceipt:
          $ref: "#/components/schemas/PrintOptionsEnum"
        showEmailReceipts:
          type: boolean
          description: Show e-mail option for customer receipts.
        showEmailTermsAndConditions:
          type: boolean
          description: >-
            Determines if the device displays the Terms and Conditions text when
            a customer elects to receive an email receipt.
        greeting:
          maxLength: 10000
          pattern: ^(.|n)*$
          type: string
          description: Placeholder for greeting text on the receipt.
        footer:
          maxLength: 10000
          pattern: ^(.|n)*$
          type: string
          description: Receipt placeholder for footer text.
      additionalProperties: false
      description: Receipt Options
    TipOptions:
      title: Tip Options
      type: object
      properties:
        tipEnabled:
          type: boolean
          description: >-
            Enable tipping. When enabled the device presents a tip selection
            screen during a transaction, showing pre-configured tip amounts and
            an option for a custom amount.
        tipLimit:
          type: integer
          description: >-
            Defines the maximum percentage of the transaction amount that can be
            added as a tip. If this is exceeded, a warning is prompted.
          format: int64
          example: 50
        tipPercentages:
          maxLength: 150
          pattern: ([0-9]+,){0,2}([0-9]+)
          type: string
          description: >-
            Pre-Defines up to 3 tip percentage options for customers to choose
            from, after entering the purchase amount for a transaction, e.g. 10,
            15, 20 = 10%, 15%, 20%, respectively. Note that the TipEnabled
            parameter must be enabled, and that only whole numbers are accepted
            as percentage values, e.g. 10% (not 10.5%).
      additionalProperties: false
      description: Tip Options
    DayOfWeekEnum:
      title: Day of the Week
      type: string
      description: An enumeration specifying the days of the week.
      example: MONDAY
      enum:
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
        - SUNDAY
    EntityOpeningPeriod:
      title: Opening Period
      required:
        - end
        - start
      type: object
      properties:
        start:
          pattern: ^\d{2}:\d{2}$
          type: string
          example: "07:00"
        end:
          pattern: ^\d{2}:\d{2}$
          type: string
          example: "17:00"
      description: The opening and closing hours.
    PrintOptionsEnum:
      title: Receipt Printing Option
      type: string
      description: >-
        Defines the receipt print options. - Possible values are: <br />Never
        Print - NEVER<br />Prompt for print - PROMPT<br />Always Print -
        ALWAYS<br />Always Print when Signature is Captured -
        ALWAYS_WITH_SIGNATURE
      enum:
        - NEVER
        - PROMPT
        - ALWAYS
        - ALWAYS_WITH_SIGNATURE
    inline_response_400:
      required:
        - code
        - message
        - title
        - type
      allOf:
        - $ref: "#/components/schemas/httpError400"
        - properties:
            param:
              type: string
              description: >-
                The parameter the error relates to if the error is
                parameter-specific. You can use this to display a message near
                the correct form field, for example.
            additionalProperties:
              type: object
              additionalProperties:
                type: object
    inline_response_401:
      required:
        - code
        - message
        - title
        - type
      allOf:
        - $ref: "#/components/schemas/httpError401"
        - properties:
            param:
              type: string
              description: >-
                The parameter the error relates to if the error is
                parameter-specific. You can use this to display a message near
                the correct form field, for example.
            additionalProperties:
              type: object
              additionalProperties:
                type: object
    inline_response_404:
      required:
        - code
        - message
        - title
        - type
      allOf:
        - $ref: "#/components/schemas/httpError404"
        - properties:
            param:
              type: string
              description: >-
                The parameter the error relates to if the error is
                parameter-specific. You can use this to display a message near
                the correct form field, for example.
            additionalProperties:
              type: object
              additionalProperties:
                type: object
    inline_response_429:
      required:
        - code
        - message
        - title
        - type
      allOf:
        - $ref: "#/components/schemas/httpError429"
        - properties:
            param:
              type: string
              description: >-
                The parameter the error relates to if the error is
                parameter-specific. You can use this to display a message near
                the correct form field, for example.
            additionalProperties:
              type: object
              additionalProperties:
                type: object
    inline_response_500:
      required:
        - code
        - message
        - title
        - type
      allOf:
        - $ref: "#/components/schemas/httpError500"
        - properties:
            param:
              type: string
              description: >-
                The parameter the error relates to if the error is
                parameter-specific. You can use this to display a message near
                the correct form field, for example.
            additionalProperties:
              type: object
              additionalProperties:
                type: object
    inline_response_503:
      required:
        - code
        - message
        - title
        - type
      allOf:
        - $ref: "#/components/schemas/httpError503"
        - properties:
            param:
              type: string
              description: >-
                The parameter the error relates to if the error is
                parameter-specific. You can use this to display a message near
                the correct form field, for example.
            additionalProperties:
              type: object
              additionalProperties:
                type: object
    inline_response_504:
      required:
        - code
        - message
        - title
        - type
      allOf:
        - $ref: "#/components/schemas/httpError504"
        - properties:
            param:
              type: string
              description: >-
                The parameter the error relates to if the error is
                parameter-specific. You can use this to display a message near
                the correct form field, for example.
            additionalProperties:
              type: object
              additionalProperties:
                type: object
    inline_response_405:
      required:
        - code
        - message
        - title
        - type
      allOf:
        - $ref: "#/components/schemas/httpError405"
        - properties:
            param:
              type: string
              description: >-
                The parameter the error relates to if the error is
                parameter-specific. You can use this to display a message near
                the correct form field, for example.
            additionalProperties:
              type: object
              additionalProperties:
                type: object
  responses:
    400Response:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_400"
    401Response:
      description: Unauthorised Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_401"
    403Response:
      description: Forbidden Request.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/httpError403"
    404Response:
      description: Not Found Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_404"
    405Response:
      description: Operation Not Allowed
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_405"
    406Response:
      description: Request Not Acceptable
      content:
        application/json:
          schema:
            required:
              - code
              - message
              - title
              - type
            allOf:
              - $ref: "#/components/schemas/httpError406"
              - properties:
                  param:
                    type: string
                    description: >-
                      The parameter the error relates to if the error is
                      parameter-specific. You can use this to display a message
                      near the correct form field, for example.
                  additionalProperties:
                    type: object
                    additionalProperties:
                      type: object
    429Response:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_429"
    500Response:
      description: Internal Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_500"
    503Response:
      description: Service Not Available
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_503"
    504Response:
      description: Service Timeout
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_504"
  parameters:
    batchId:
      name: batchId
      in: query
      description: Batch id for this request
      required: true
      style: form
      explode: false
      schema:
        $ref: "#/components/schemas/batchId"
    batchStatusParam:
      name: status
      in: query
      description: Batch status for this request
      required: false
      style: form
      explode: true
      schema:
        $ref: "#/components/schemas/batchStatus"
    locateCustomer:
      name: locateCustomer
      in: query
      description: >-
        A flag to indicate if when creating the user to verify them by locating
        the customer in the verifone billing systems.
      required: false
      style: form
      explode: false
      schema:
        type: boolean
    customerEntityUid:
      name: customerEntityUid
      in: query
      description: The estate customer entity UUID for the portfolio.
      required: true
      style: form
      explode: false
      schema:
        $ref: "#/components/schemas/entityUid"
    customerEntityUidOptional:
      name: customerEntityUid
      in: query
      description: The estate customer entity UUID for the portfolio.
      required: false
      style: form
      explode: true
      schema:
        $ref: "#/components/schemas/entityUid"
    addressLine:
      name: addressLine
      in: query
      description: The first line of the address
      required: false
      style: form
      explode: false
      schema:
        $ref: "#/components/schemas/addressLine"
    postCode:
      name: postCode
      in: query
      description: The postal code of the address.
      required: false
      style: form
      explode: false
      schema:
        $ref: "#/components/schemas/postCode"
    merchantCompanyEntityUid:
      name: merchantCompanyEntityUid
      in: query
      description: The Verifone assigned ID corresponding to the Merchant Company.
      required: false
      style: form
      explode: false
      schema:
        $ref: "#/components/schemas/merchantCompanyEntityUid"
    poiUid:
      name: poiUid
      in: path
      description: The assigned ID corresponding for the POI.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
      example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
    entityUid:
      name: entityUid
      in: path
      description: The Verifone assigned ID corresponding to the entity.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
      example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
    entityUidQuery:
      name: entityUid
      in: query
      description: The Verifone assigned ID corresponding to the entity.
      required: false
      style: form
      explode: false
      schema:
        type: string
        format: uuid
      example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
    billingSiteId:
      name: billingSiteId
      in: query
      description: The billing site id to query.
      required: false
      style: form
      explode: false
      schema:
        type: string
      example: "13232331"
    billingSitesOnly:
      name: billingSitesOnly
      in: query
      description: Only return the billing sites.
      required: false
      style: form
      explode: false
      schema:
        type: boolean
        default: true
    saveDraft:
      name: saveDraft
      in: header
      description: >-
        An optional header indicating whether to save the order into a DRAFT
        status. If this value is not specified or set to false then the order
        will be SUBMITTED immediately.
      required: false
      style: simple
      explode: false
      schema:
        type: boolean
    orderId:
      name: orderId
      in: path
      description: Verifone allocated ID for the Order
      required: true
      style: simple
      explode: false
      schema:
        $ref: "#/components/schemas/orderId"
    pageNumber:
      name: pageNumber
      in: query
      description: Page number for records.
      required: false
      style: form
      explode: true
      schema:
        $ref: "#/components/schemas/pageNumber"
    pageSize:
      name: pageSize
      in: query
      description: Page size for returned records.
      required: false
      style: form
      explode: true
      schema:
        $ref: "#/components/schemas/pageSize"
    orderReference:
      name: orderReference
      in: query
      description: Optional search string for looking up order by ID
      required: false
      style: form
      explode: true
      schema:
        type: string
    rangeId:
      name: rangeId
      in: path
      description: Range allocation to be performed from
      required: true
      style: simple
      explode: true
      schema:
        type: string
        example: verifone
    status:
      name: status
      in: query
      description: pass an optional search string for looking up order by status
      required: false
      style: form
      explode: true
      schema:
        $ref: "#/components/schemas/orderStatusEnum"
    detailedStatus:
      name: detailedStatus
      in: query
      description: pass an optional search string for looking up order by detailed status
      required: false
      style: form
      explode: true
      schema:
        $ref: "#/components/schemas/detailedStatusEnum"
    orderType:
      name: orderType
      in: query
      description: >-
        pass an optional search string for looking up order by type. Otherwise
        this will default to MerchantOrder
      required: false
      style: form
      explode: true
      schema:
        $ref: "#/components/schemas/orderType"
    filterDateType:
      name: filterDateType
      in: query
      description: >-
        pass an optional search string for filtering based on date type.
        Otherwise this will default to createdDate
      required: false
      style: form
      explode: true
      schema:
        $ref: "#/components/schemas/filterDateType"
    userUids:
      name: userUids
      in: query
      description: >-
        List of the User_ID corresponding to the User who created or modified
        the order.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          format: uuid
          example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
    userUid:
      name: userUid
      in: query
      description: The User_ID corresponding to the User who created or modified the order.
      required: false
      style: form
      explode: false
      schema:
        type: string
        format: uuid
        example: 04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1
    merchantNameQuery:
      name: merchantCompany
      in: query
      description: The merchant company.
      required: false
      style: form
      explode: true
      schema:
        $ref: "#/components/schemas/merchantNameType"
    startTimeQuery:
      name: startTime
      in: query
      description: The record date/time to search from.
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
        example: "2020-01-06T18:16:14.243Z"
    endTimeQuery:
      name: endTime
      in: query
      description: The record date/time to search to.
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
        example: "2020-01-06T18:16:14.243Z"
    lastChangeTime:
      name: lastChangeTime
      in: query
      description: Orders last changed before this time (used to find order not moved)
      required: false
      style: form
      explode: false
      schema:
        $ref: "#/components/schemas/lastChangeTime"
    queryOrder:
      name: order
      in: query
      description: The order direction.
      required: false
      style: form
      explode: false
      schema:
        $ref: "#/components/schemas/queryOrderEnum"
    tidPoolAllocStatus:
      name: status
      in: query
      description: The status of the TID allocation.
      required: true
      style: form
      explode: false
      schema:
        $ref: "#/components/schemas/tidPoolStatusEnum"
    tidPoolCountRequired:
      name: count
      in: query
      description: Count of TIDs required from pool
      required: true
      style: form
      explode: false
      schema:
        minimum: 1
        type: integer
    signingProvider:
      name: signingProvider
      in: query
      description: >-
        The signing provider for the order. Valid fields are: ADOBE, SIGNICAT,
        DOKOBIT
      required: false
      style: form
      explode: false
      schema:
        $ref: "#/components/schemas/signingProviderEnum"
    orderBy:
      name: orderBy
      in: query
      description: >-
        The field to order by. Valid fields are: createdBy, createdDate,
        modifiedDate, merchantName, status
      required: false
      style: form
      explode: false
      schema:
        type: string
    merchantType:
      name: merchantType
      in: query
      description: Merchant type for the orders
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          $ref: "#/components/schemas/merchantTypeEnum"
    oracleAccountId:
      name: oracleAccountId
      in: path
      description: The oracle Account Id.
      required: true
      style: simple
      explode: false
      schema:
        $ref: "#/components/schemas/oracleAccountId"
    oracleAccountIdQuery:
      name: oracleAccountId
      in: query
      description: The oracle Account Id.
      required: false
      style: form
      explode: false
      schema:
        $ref: "#/components/schemas/oracleAccountId"
    validateAcquirer:
      name: validateAcquirer
      in: header
      description: An optional header indicating whether to validate the acquirer.
      required: false
      style: simple
      explode: false
      schema:
        type: boolean
    activeBank:
      name: activeBank
      in: query
      description: Last 4 digits of active bank account
      required: false
      style: form
      explode: true
      schema:
        $ref: "#/components/schemas/activeBank"
    customerId:
      name: customerId
      in: query
      description: Customer ID of existing unapproved user
      required: false
      style: form
      explode: true
      schema:
        $ref: "#/components/schemas/customerId"
    siteId:
      name: siteId
      in: query
      description: Site ID of existing unapproved user
      required: false
      style: form
      explode: true
      schema:
        $ref: "#/components/schemas/siteId"
  securitySchemes:
    bearerAuth:
      type: http
      description: >-
        The standard mechanism for authentication to Verifone APIs is OAuth2. A
        JWT access token is returned as part of this process. This token needs
        to be provided as a bearer token. Please discuss the appropriate OAuth2
        flow with Verifone.
      scheme: bearer
      bearerFormat: JWT
x-tagGroups:
  - name: Order Management
    tags:
      - Merchant Orders
      - Additional Services
      - POI Orders
      - Common
  - name: Maintenance
    tags:
      - Merchant Maintenance
      - POI Maintenance
      - Maintenance Orders
      - Multi Merchant
  - name: Internal
    tags:
      - Internal
      - User
      - MID/TID Generation
      - Purchased TIDs
      - Accounts
      - Batch
