openapi: 3.0.3
info:
  contact:
    email: support@marqeta.com
    name: Marqeta
  description: Marqeta's Core API endpoints, conveniently annotated to enable code
    generation (including SDKs), test cases, and documentation. Currently in
    beta.
  termsOfService: https://www.marqeta.com/api-terms
  title: Core API
  version: 3.0.3
servers:
  - url: /v3
tags:
  - name: accepted countries
  - name: account holder groups
  - name: accounting
  - name: auth controls
  - name: authentications
  - name: auto reloads
  - name: balance APIs
  - name: balance caches
  - name: bank transfers
  - name: bulk issuances
  - name: business transitions
  - name: businesses
  - name: businessidentitycheck
  - name: caches
  - name: calculation schedules
  - name: card products
  - name: card transitions
  - name: cardholder balances
  - name: cards
  - name: chargebacks
  - name: commando modes
  - name: cron jobs
  - name: digital wallet provision requests
  - name: digital wallet token transitions
  - name: digital wallet tokens
  - name: direct deposit accounts
  - name: direct deposits
  - name: fee transfers
  - name: fees
  - name: file processing
  - name: "Find Original: Operations resolve Original Transactions for Auth service"
  - name: funding sources
  - name: gateways
  - name: GPA fund transfers
  - name: gpa orders
  - name: health checks
  - name: internal auth control check
  - name: internal cards
  - name: Internal Commando Mode APIs
  - name: internal config operations
  - name: internal cryptokeys
  - name: internal data rehydration
  - name: internal dwt
  - name: internal health
  - name: internal mcc groups
  - name: internal post jcard transactions
  - name: internal program configs
  - name: internal result codes
  - name: internal spend controls
  - name: internal system information
  - name: internal transactions
  - name: internal user validation
  - name: kyblog
  - name: kyc
  - name: mcc groups
  - name: merchantgroups
  - name: Operations for digital wallet token requestor maps
  - name: peer transfers
  - name: ping
  - name: pins
  - name: program
  - name: program configs
  - name: program reserve
  - name: program transfers
  - name: push to card
  - name: real time fee groups
  - name: simulate
  - name: token service gateway
  - name: transaction caches
  - name: transactions
  - name: "transactions : Dispute transactions"
  - name: user transitions
  - name: users
  - name: velocity controls
  - name: web push provisioning
  - name: webhooks
  - name: Authorization Controls
  - name: Auto Reload
  - name: Balances
  - name: Bulk Card Orders
  - name: Commando Mode
  - name: Digital Wallets Management
  - name: Account Holder Funding Sources
  - name: Addresses
  - name: Program Funding Sources
  - name: Program Gateway Funding Sources
  - name: KYC Verification
  - name: Merchant Groups
  - name: Real-Time Fee Groups
  - name: Webhooks Management
paths:
  /acceptedcountries:
    get:
      description: Retrieve a list of `acceptedcountries` objects.
      operationId: getAcceptedcountries
      parameters:
        - description: The number of `acceptedcountries` objects to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: The name of the `acceptedcountries` object.
          explode: true
          in: query
          name: name
          required: false
          schema:
            type: string
          style: form
        - description: Specifies if the `acceptedcountries` object is an allow list.
          explode: true
          in: query
          name: whitelist
          required: false
          schema:
            type: boolean
          style: form
        - description: Search type
          explode: true
          in: query
          name: search_type
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).


            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Field on which to sort.


            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.


            Prefix the field name with a hyphen (`-`) to sort in descending
            order.


            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcceptedCountriesListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server failure
      summary: List accepted countries objects
      tags:
        - accepted countries
  /acceptedcountries/{token}:
    get:
      description: >-
        Retrieve a specific `acceptedcountries` object.

        Send a `GET` request to the `/acceptedcountries` endpoint to retrieve
        existing `acceptedcountries` object tokens.
      operationId: getAcceptedcountriesToken
      parameters:
        - description: The unique identifier of the `acceptedcountries` object.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: >-
            Comma-delimited list of fields to return (field_1,field_2, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accepted_countries_model"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Accepted countries object not found
        "500":
          content: {}
          description: Server failure
      summary: Retrieve an accepted countries object
      tags:
        - accepted countries
  /accountholdergroups:
    get:
      description: Use this endpoint to return an array of all account holder groups.
      operationId: getAccountholdergroups
      parameters:
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 10
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data:
                  - config:
                      is_reloadable: true
                      kyc_required: ALWAYS
                      pre_kyc_controls:
                        balance_max: 500
                        cash_access_enabled: false
                        enable_non_program_loads: false
                        international_enabled: false
                        is_reloadable_pre_kyc: false
                    name: Account Holder Group 01
                    token: account_holder_group_01
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/AccountHolderGroupListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List account holder groups
      tags:
        - account holder groups
    post:
      description: Use this endpoint to create an account holder group.
      operationId: postAccountholdergroups
      requestBody:
        content:
          application/json:
            example:
              name: Account Holder Group 01
              token: account_holder_group_01
            schema:
              $ref: "#/components/schemas/account_holder_group_request"
        description: Account holder group object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                config:
                  is_reloadable: true
                  kyc_required: ALWAYS
                  pre_kyc_controls:
                    balance_max: 1000
                    cash_access_enabled: false
                    enable_non_program_loads: false
                    international_enabled: false
                    is_reloadable_pre_kyc: false
                name: Account Holder Group 01
                token: account_holder_group_01
              schema:
                $ref: "#/components/schemas/account_holder_group_response"
          description: Created
        "400":
          content: {}
          description: Bad request
        "409":
          content: {}
          description: Token already associated with a different payload
        "500":
          content: {}
          description: Server error
      summary: Create account holder group
      tags:
        - account holder groups
  /accountholdergroups/{token}:
    get:
      description: Use this endpoint to retrieve a specific account holder group.
      operationId: getAccountholdergroupsToken
      parameters:
        - description: The unique identifier of the account holder group.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                config:
                  is_reloadable: true
                  kyc_required: ALWAYS
                  pre_kyc_controls:
                    balance_max: 1000
                    cash_access_enabled: false
                    enable_non_program_loads: false
                    international_enabled: false
                    is_reloadable_pre_kyc: false
                name: Account Holder Group 01
                token: account_holder_group_01
              schema:
                $ref: "#/components/schemas/account_holder_group_response"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Auto reload not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve account holder group
      tags:
        - account holder groups
    put:
      description: >-
        Use this endpoint to update a specific account holder group.

        Only values of parameters in the request are modified; all others are
        left unchanged.


        To update a specific account holder group, send a `PUT` request to the
        `/accountholdergroups/{token}` endpoint.

        Use the `token` path parameter to specify the account holder group to
        update.

        Include the account holder group details to update in
        link:http://json.org[JSON, window="_blank"] format in the body of the
        request.

        [NOTE]

        While you can update account holder groups that you create, the default
        group is restricted and requires special permissions to update.
      operationId: putAccountholdergroupsToken
      parameters:
        - description: The unique identifier of the account holder group.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              config:
                pre_kyc_controls:
                  balance_max: 500
            schema:
              $ref: "#/components/schemas/account_holder_group_update_request"
        description: Account holder group update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/account_holder_group_response"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: Update account holder group
      tags:
        - account holder groups
  /authcontrols:
    get:
      description: >-
        List all authorization controls associated with a specific user or card
        product, or list all authorization controls defined in your program.


        Include either a `user` or a `card_product` query parameter to indicate
        the user or card product whose associated authorization controls you
        want to retrieve (do not include both).


        To list all authorization controls for your program, omit the `user` and
        `card_product` query parameters from your request.
      operationId: getAuthcontrols
      parameters:
        - description: >-
            The token identifying the card product whose associated
            authorization controls you want to retrieve.


            Enter the string "null" to list authorization controls that are not
            associated with a card product.
          explode: true
          in: query
          name: card_product
          required: false
          schema:
            type: string
          style: form
        - description: >-
            The token identifying the user whose associated authorization
            controls you want to retrieve.


            Enter the string "null" to list authorization controls that are not
            associated with a user.
          explode: true
          in: query
          name: user
          required: false
          schema:
            type: string
          style: form
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthControlListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List authorization controls
      tags:
        - Authorization Controls
    post:
      description: >-
        Limit where a user can make transactions to a single merchant or group
        of merchants.

        If multiple authorization controls apply to the same user, the limits of
        all controls are combined.
      operationId: postAuthcontrols
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/auth_control_request"
        description: Auth control object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/auth_control_response"
          description: Created
        "400":
          content: {}
          description: Bad request
        "409":
          content: {}
          description: Token already associated with a different payload
        "500":
          content: {}
          description: Server error
      summary: Create authorization control
      tags:
        - Authorization Controls
  /authcontrols/exemptmids:
    get:
      description: Retrieve a list of all merchant (MID) exemptions.
      operationId: getAuthcontrolsExemptmids
      parameters:
        - description: >-
            The token identifying the card product whose associated MID
            exemptions you want to retrieve.


            Enter the string "null" to list MID exemptions that are not
            associated with a card product.
          explode: true
          in: query
          name: card_product
          required: false
          schema:
            type: string
          style: form
        - description: >-
            The token identifying the user whose associated MID exemptions you
            want to retrieve.


            Enter the string "null" to list MID exemptions that are not
            associated with a user.
          explode: true
          in: query
          name: user
          required: false
          schema:
            type: string
          style: form
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthControlExemptMidsListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List merchant identifier (MID) exemptions
      tags:
        - Authorization Controls
    post:
      description: >-
        Exempt an individual merchant from authorization controls by merchant
        identifier (MID).

        Transactions originating from this MID ignore any otherwise applicable
        authorization controls.


        [NOTE]

        You can create MID exemptions in your user sandbox.

        However, you must work with your Marqeta representative to create MID
        exemptions in a production environment.
      operationId: postAuthcontrolsExemptmids
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/auth_control_exempt_mids_request"
        description: Auth control exempt MID object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/auth_control_exempt_mids_response"
          description: Created
        "400":
          content: {}
          description: Bad request
        "409":
          content: {}
          description: Token already associated with a different payload
        "500":
          content: {}
          description: Server error
      summary: Create a merchant identifier (MID) exemption
      tags:
        - Authorization Controls
  /authcontrols/exemptmids/{token}:
    get:
      description: Retrieve a merchant (MID) exemption.
      operationId: getAuthcontrolsExemptmidsToken
      parameters:
        - description: The unique identifier of the authorization control.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/auth_control_exempt_mids_response"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Auth control exception MIDs not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve a merchant identifier (MID) exemption
      tags:
        - Authorization Controls
    put:
      description: Update a merchant identifier exemption.
      operationId: putAuthcontrolsExemptmidsToken
      parameters:
        - description: The unique identifier of the authorization control.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/auth_control_exempt_mids_update_request"
        required: false
      responses:
        "204":
          content: {}
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: Update a merchant identifier (MID) exemption
      tags:
        - Authorization Controls
  /authcontrols/{token}:
    get:
      description: Retrieve a specific authorization control.
      operationId: getAuthcontrolsToken
      parameters:
        - description: >-
            Existing authorization control token.


            Send a `GET` request to `/authcontrols` to retrieve authorization
            control tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/auth_control_response"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Authorization control not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve authorization control
      tags:
        - Authorization Controls
    put:
      description: Update a specific authorization control.
      operationId: putAuthcontrolsToken
      parameters:
        - description: >-
            Existing authorization control token.


            Send a `GET` request to `/authcontrols` to retrieve authorization
            control tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/auth_control_update_request"
        description: Auth control object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/auth_control_response"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: Update authorization control
      tags:
        - Authorization Controls
  /autoreloads:
    get:
      description: >-
        Use this endpoint to list auto reloads configured for the program or for
        a specific card product, user, or business.


        This endpoint supports <</core-api/field-filtering, field filtering>>
        and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getAutoreloads
      parameters:
        - description: The token identifying the card product whose auto reloads you want
            to retrieve.
          explode: true
          in: query
          name: card_product
          required: false
          schema:
            type: string
          style: form
        - description: The token identifying the user whose auto reloads you want to
            retrieve.
          explode: true
          in: query
          name: user_token
          required: false
          schema:
            type: string
          style: form
        - description: The token identifying the business whose auto reloads you want to
            retrieve.
          explode: true
          in: query
          name: business_token
          required: false
          schema:
            type: string
          style: form
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 10
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutoReloadListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List auto reloads
      tags:
        - Auto Reload
    post:
      description: Use this endpoint to create an auto reload.
      operationId: postAutoreloads
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/auto_reload_model"
        description: Auto reload object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/auto_reload_response_model"
          description: Created
        "400":
          content: {}
          description: Bad request
        "409":
          content: {}
          description: Token already associated with a different payload
        "500":
          content: {}
          description: Server error
      summary: Create auto reload
      tags:
        - Auto Reload
  /autoreloads/{token}:
    get:
      description: Use this endpoint to retrieve a specific auto reload object.
      operationId: getAutoreloadsToken
      parameters:
        - description: The unique identifier of the auto reload.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/auto_reload_response_model"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Auto reload not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve auto reload
      tags:
        - Auto Reload
    put:
      description: >-
        Use this endpoint to update an auto reload.

        Only values of parameters in the request are modified; all others are
        left unchanged.
      operationId: putAutoreloadsToken
      parameters:
        - description: The unique identifier of the auto reload.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/auto_reload_update_model"
        description: Auto reload object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/auto_reload_response_model"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: Update auto reload
      tags:
        - Auto Reload
  /balances/{token}:
    get:
      description: >-
        Use this endpoint to return general purpose account (GPA) balances for a
        user or a business.

        The response object includes a link to balances of related user GPAs.
      operationId: getBalancesToken
      parameters:
        - description: The unique identifier of the `user` or `business` for which you
            want to return GPA balances.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                gpa:
                  available_balance: 990
                  balances:
                    USD:
                      available_balance: 990
                      currency_code: USD
                      ledger_balance: 1000
                      pending_credits: 0
                  currency_code: USD
                  ledger_balance: 1000
                  pending_credits: 0
                links:
                  href: /v3/balances/my_user_01/gpa
                  method: GET
                  rel: gpa
              schema:
                $ref: "#/components/schemas/cardholder_balances"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: Retrieve GPA balances
      tags:
        - Balances
  /balances/{token}/msas:
    get:
      description: This endpoint is deprecated, do not use.
      operationId: getBalancesTokenMsas
      parameters:
        - description: User or Business token
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: Number of restrictions to retrieve
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Start index
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Sort order
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            $ref: "#/components/schemas/getBalancesTokenMsasSortBy"
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/cardholder_msa_balance"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: Returns a merchant-specific account balance
      tags:
        - Balances
  /banktransfers/ach:
    get:
      description: Retrieve a list of all ACH transfers.
      operationId: getBanktransfersAch
      parameters:
        - description: Number of users to retrieve
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: The unique identifier of the `user` resource.
          explode: true
          in: query
          name: user_token
          required: false
          schema:
            type: string
          style: form
        - description: The unique identifier of the `business` resource.
          explode: true
          in: query
          name: business_token
          required: false
          schema:
            type: string
          style: form
        - description: The unique identifier of the funding source.
          explode: true
          in: query
          name: funding_source_token
          required: false
          schema:
            type: string
          style: form
        - description: A comma-delimited list of bank transfer statuses.
          explode: true
          in: query
          name: statuses
          required: false
          schema:
            type: string
          style: form
        - description: Field on which to sort Use any field in the resource model, or one
            of the system fields `lastModifiedTime` or `createdTime`. Prefix the
            field name with a hyphen (`-`) to sort in descending order. Omit the
            hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
        - description: Object to expand
          explode: true
          in: query
          name: expand
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 2
                created_time: 2021-03-22T18:01:00Z
                data:
                  - amount: 10
                    created_time: 2021-03-20T18:32:32Z
                    currency_code: USD
                    funding_source_token: d331b4b2-cef5-49a3-9c41-75d8f4e15cfz
                    last_modified_time: 2021-03-20T18:32:32Z
                    memo: Bank transfer
                    standard_entry_class_code: WEB
                    statement_descriptor: ACHTRNSFR
                    status: PENDING
                    token: cf3b49d8-bd68-4fb1-8da5-c170cff3d788
                    transfer_speed: STANDARD
                    transitions:
                      - bank_transfer_token: cf3b49d8-bd68-4fb1-8da5-c170cff3d788
                        channel: API
                        created_time: 2021-03-20T18:32:32Z
                        last_modified_time: 2021-03-20T18:32:32Z
                        reason: Created by `POST` call on API
                        status: PENDING
                        token: 0565329e-405d-45ca-9ab4-ca0cd07eca4c
                    type: PUSH
                  - amount: 100
                    currency_code: USD
                    funding_source_token: bbaefe8f-f5d0-43f6-8576-16f562d23f3f
                    standard_entry_class_code: WEB
                    statement_descriptor: ACHTRNSFR
                    status: PROCESSING
                    token: f8b8245f-fc36-49f3-9f9f-f63b159501b7
                    transfer_speed: STANDARD
                    transitions:
                      - bank_transfer_token: f8b8245f-fc36-49f3-9f9f-f63b159501b7
                        channel: API
                        created_time: 2021-03-22T18:01:00Z
                        last_modified_time: 2021-03-22T18:01:00Z
                        reason: Created by `POST` call on API
                        status: PENDING
                        token: 1d208bf9-8439-4b35-9c43-6d5bc74995c7
                      - bank_transfer_token: f8b8245f-fc36-49f3-9f9f-f63b159501b7
                        channel: API
                        created_time: 2021-03-22T18:01:17Z
                        last_modified_time: 2021-03-22T18:01:17Z
                        reason: Created by `POST` call on API
                        status: PROCESSING
                        token: 55f5b1ac-39f6-484d-8284-116046a2efaa
                    type: PUSH
                end_index: 1
                is_more: false
                last_modified_time: 2021-03-22T18:01:17Z
                start_index: 0
              schema:
                $ref: "#/components/schemas/BankTransferListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List ACH transfers
      tags:
        - bank transfers
    post:
      description: Create an ACH transfer that pushes funds to an external account or
        pulls funds into your program funding account.
      operationId: postBanktransfersAch
      requestBody:
        content:
          application/json:
            example:
              amount: 10
              currency_code: USD
              funding_source_token: d331b4b2-cef5-49a3-9c41-75d8f4e15cfz
              memo: Bank transfer
              standard_entry_class_code: WEB
              statement_descriptor: ACHTRNSFR
              transfer_speed: STANDARD
              type: PUSH
            schema:
              $ref: "#/components/schemas/bank_transfer_request_model"
        description: Create bank transfer request model
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                amount: 10
                created_time: 2021-03-20T18:32:32Z
                currency_code: USD
                funding_source_token: d331b4b2-cef5-49a3-9c41-75d8f4e15cfz
                last_modified_time: 2021-03-20T18:32:32Z
                memo: Bank transfer
                standard_entry_class_code: WEB
                statement_descriptor: ACHTRNSFR
                status: PENDING
                token: cf3b49d8-bd68-4fb1-8da5-c170cff3d788
                transfer_speed: STANDARD
                transitions:
                  - bank_transfer_token: cf3b49d8-bd68-4fb1-8da5-c170cff3d788
                    channel: API
                    created_time: 2021-03-20T18:32:32Z
                    last_modified_time: 2021-03-20T18:32:32Z
                    reason: Created by `POST` call on API
                    status: PENDING
                    token: 0565329e-405d-45ca-9ab4-ca0cd07eca4c
                type: PUSH
              schema:
                $ref: "#/components/schemas/bank_transfer_response_model"
          description: Success
        default:
          content: {}
          description: successful operation
      summary: Create ACH transfer
      tags:
        - bank transfers
  /banktransfers/ach/transitions:
    get:
      description: Retrieve a list of all ACH transfer transitions for a given ACH transfer.
      operationId: getBanktransfersAchTransitions
      parameters:
        - description: Number of bank transfer transitions to retrieve
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            maximum: 50
            type: integer
          style: form
        - description: Bank transfer transition token
          explode: true
          in: query
          name: token
          required: false
          schema:
            type: string
          style: form
        - description: Bank transfer token
          explode: true
          in: query
          name: bank_transfer_token
          required: false
          schema:
            type: string
          style: form
        - description: Start index
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Sort order
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
        - description: Comma-delimited list of bank transfer states to display e.g.,
            PENDING, PROCESSING, SUBMITTED, RETURNED, COMPLETED, CANCELLED
          explode: true
          in: query
          name: statuses
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 2
                data:
                  - bank_transfer_token: f8b8245f-fc36-49f3-9f9f-f63b159501b7
                    channel: API
                    created_time: 2021-03-22T18:01:00Z
                    last_modified_time: 2021-03-22T18:01:00Z
                    reason: Created by `POST` call on API
                    status: PENDING
                    token: 1d208bf9-8439-4b35-9c43-6d5bc74995c7
                  - bank_transfer_token: f8b8245f-fc36-49f3-9f9f-f63b159501b7
                    channel: API
                    created_time: 2021-03-22T18:01:17Z
                    last_modified_time: 2021-03-22T18:01:17Z
                    reason: Created by `POST` call on API
                    status: PROCESSING
                    token: 55f5b1ac-39f6-484d-8284-116046a2efaa
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/BankTransferTransitionListResponse"
          description: Success
        default:
          content: {}
          description: successful operation
      summary: List ACH transfer transitions
      tags:
        - bank transfers
    post:
      description: >-
        Create an ACH transfer transition that updates the `status` of an ACH
        transfer.


        Each ACH transfer has a lifecycle of statuses, as shown in the following
        diagram:


        [#banktransfers-1-image]

        image::achtransfers1[alt='ACH transfer lifecycle', width=575]


        [NOTE]

        You can create ACH transfer transitions in the sandbox environment.

        However, Marqeta transitions ACH transfers through their lifecycle in
        the production environment.
      operationId: postBanktransfersAchTransitions
      requestBody:
        content:
          application/json:
            example:
              bank_transfer_token: f8b8245f-fc36-49f3-9f9f-f63b159501b7
              channel: API
              status: CANCELLED
            schema:
              $ref: "#/components/schemas/bank_transfer_transition_request_model"
        description: Create bank transfer transition request model
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                bank_transfer_token: f8b8245f-fc36-49f3-9f9f-f63b159501b7
                channel: API
                created_time: 2021-10-22T18:01:17Z
                last_modified_time: 2021-10-22T18:01:17Z
                status: CANCELLED
                token: 55f5b1ac-39f6-484d-8284-116046a2efaa
              schema:
                $ref: "#/components/schemas/bank_transfer_transition_response_model"
          description: Success
        default:
          content: {}
          description: successful operation
      summary: Create ACH transfer transition
      tags:
        - bank transfers
  /banktransfers/ach/{token}:
    get:
      description: Retrieve a specific ACH transfer.
      operationId: getBanktransfersAchToken
      parameters:
        - description: Bank transfer token
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                amount: 100
                created_time: 2021-03-22T18:01:00Z
                currency_code: USD
                funding_source_token: bbaefe8f-f5d0-43f6-8576-16f562d23f3f
                last_modified_time: 2021-03-22T18:01:17Z
                standard_entry_class_code: WEB
                statement_descriptor: ACHTRNSFR
                status: PROCESSING
                token: f8b8245f-fc36-49f3-9f9f-f63b159501b7
                transfer_speed: STANDARD
                transitions:
                  - bank_transfer_token: f8b8245f-fc36-49f3-9f9f-f63b159501b7
                    channel: API
                    created_time: 2021-03-22T18:01:00Z
                    last_modified_time: 2021-03-22T18:01:00Z
                    reason: Created by `POST` call on API
                    status: PENDING
                    token: 1d208bf9-8439-4b35-9c43-6d5bc74995c7
                  - bank_transfer_token: f8b8245f-fc36-49f3-9f9f-f63b159501b7
                    channel: API
                    created_time: 2021-03-22T18:01:17Z
                    last_modified_time: 2021-03-22T18:01:17Z
                    reason: Created by `POST` call on API
                    status: PROCESSING
                    token: 55f5b1ac-39f6-484d-8284-116046a2efaa
                type: PUSH
              schema:
                $ref: "#/components/schemas/bank_transfer_response_model"
          description: Success
        "404":
          content: {}
          description: Bank transfer entry not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve ACH transfer
      tags:
        - bank transfers
  /bulkissuances:
    get:
      description: >-
        Use this endpoint to list existing bulk card orders.


        This endpoint supports <</core-api/sorting-and-pagination, pagination
        and sorting>>.
      operationId: getBulkissuances
      parameters:
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data[]:
                  api: bulkissuances
                  bc_id: 1
                  cp_id: 1
                  endpoint: /bulkissuances
                  expedite: false
                  fulfillment:
                    shipping:
                      card_allocation: 3
                      card_fulfillment_time: 2021-03-07T23:59:44Z
                      card_personalization:
                        carrier:
                          message_line: my message
                          name: my_carrier_logo.png
                        images:
                          card:
                            name: my_card_logo.png
                            thermal_color: Black
                          carrier_return_window:
                            name: my_return_address_image.png
                          signature:
                            name: my_signature.png
                        text:
                          name_line_1:
                            value: Saki Dogger
                          name_line_2:
                            value: Chicken Tooth Music
                      card_product_token: my_card_product_02
                      created_time: 2020-03-06T00:06:34Z
                      expiration_offset:
                        unit: YEARS
                        value: 10
                      method: UPS_REGULAR
                      name_line1_end_index: 3
                      name_line1_start_index: 1
                      name_line_1_numeric_postfix: true
                      provider_ship_date: 2021-03-08T00:00:00Z
                      provider_shipping_method: United_Parcel_Service
                      provider_tracking_number: "982247"
                      recipient_address:
                        address1: 1255 Lake Street
                        city: Oakland
                        country: USA
                        first_name: Saki
                        last_name: Dogger
                        phone: "5103333333"
                        postal_code: "94611"
                        state: CA
                      return_address:
                        address1: 1222 Blake Street
                        city: Berkeley
                        country: USA
                        first_name: Shipping
                        last_name: R_US
                        phone: "5102222222"
                        postal_code: "94702"
                        state: CA
                      user_association:
                        single_inventory_user: false
                  method: get
                  token: bulk_06_token
                end_index: 0
                is_more: true
                start_index: 0
              schema:
                $ref: "#/components/schemas/BulkCardOrderListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List bulk card orders
      tags:
        - Bulk Card Orders
    post:
      description: >-
        Use this endpoint to order physical cards in bulk.

        A new bulk card order creates new cards or users, generally within about
        a day.


        Before creating a bulk card order, set the
        `config.fulfillment.bulk_ship` field of the associated card product to
        `true`.


        *To associate all cards with the same user:*


        * Set `user_association.single_inventory_user=true`

        * Set `user_association.single_inventory_user_token` equal to the token
        of an existing user.


        The bulk card order automatically populates the database with the
        specified card objects.

        Values for the card `token` fields are generated in the format
        `card-numericPostfix`, where `numericPostfix` is a randomly generated
        number that is added for each new card that is generated.


        *To associate each card with a unique user:*


        Set `user_association.single_inventory_user=false`.

        Both the cards and their associated users are automatically generated.

        Values for the user `token` fields are generated in the format
        `user-numericPostfix`.

        The `numericPostfix` values for cards and their associated users match.

        This value is also printed on the physical cards if the
        `name_line_1_numeric_postfix` field is set to `true`.
      operationId: postBulkissuances
      requestBody:
        content:
          application/json:
            example:
              card_allocation: 3
              card_product_token: my_card_product_02
              fulfillment:
                card_personalization:
                  carrier:
                    message_line: my message
                    name: my_carrier_logo.png
                  images:
                    card:
                      name: my_card_logo.png
                      thermal_color: Black
                    carrier_return_window:
                      name: my_return_address_image.png
                    signature:
                      name: my_signature.png
                  text:
                    name_line_1:
                      value: Saki Dogger
                    name_line_2:
                      value: Chicken Tooth Music
                shipping:
                  method: UPS_REGULAR
                  recipient_address:
                    address1: 1255 Lake Street
                    city: Oakland
                    country: USA
                    first_name: Saki
                    last_name: Dogger
                    phone: "5103333333"
                    postal_code: "94611"
                    state: CA
                  return_address:
                    address1: 1222 Blake Street
                    city: Berkeley
                    country: USA
                    first_name: Shipping
                    last_name: R_US
                    phone: "5102222222"
                    postal_code: "94702"
                    state: CA
              name_line_1_numeric_postfix: true
              token: bulk_06_token
              user_association:
                single_inventory_user: false
            schema:
              $ref: "#/components/schemas/bulk_issuance_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                api: bulkissuances
                bc_id: 1
                card_allocation: 3
                card_product_token: my_card_product_02
                cp_id: 1
                created_time: 2021-03-06T00:06:34Z
                endpoint: /bulkissuances
                expedite: false
                fulfillment:
                  card_personalization:
                    carrier:
                      message_line: my message
                      name: my_carrier_logo.png
                    carrier_return_window:
                      name: my_return_address_image.png
                    images:
                      card:
                        name: my_card_logo.png
                        thermal_color: Black
                    signature:
                      name: my_signature.png
                    text:
                      name_line_1:
                        value: Saki Dogger
                      name_line_2:
                        value: Chicken Tooth Music
                  shipping:
                    method: UPS_REGULAR
                    recipient_address:
                      address1: 1255 Lake Street
                      city: Oakland
                      country: USA
                      first_name: Saki
                      last_name": Dogger
                      phone: "5103333333"
                      postal_code: "94611"
                      state: CA
                    return_address:
                      address1: 1222 Blake Street
                      city: Berkeley
                      country: USA
                      first_name: Shipping
                      last_name: R_US
                      phone: "5102222222"
                      postal_code: "94702"
                      state: CA
                method: post
                token: bulk_06_token
                user_association:
                  expiration_offset:
                    unit: YEARS
                    value: 10
                  name_line_1_numeric_postfix: true
                  single_inventory_user: false
              schema:
                $ref: "#/components/schemas/bulk_issuance_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "409":
          content: {}
          description: Token already associated with a different payload
        "500":
          content: {}
          description: Server error
      summary: Create bulk card order
      tags:
        - Bulk Card Orders
  /bulkissuances/{token}:
    get:
      description: Use this endpoint to retrieve a specific bulk card order.
      operationId: getBulkissuancesToken
      parameters:
        - description: Identifies the bulk card order to retrieve.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                api: bulkissuances
                bc_id: 1
                card_allocation: 3
                card_fulfillment_time: 2020-03-07T23:59:44Z
                card_product_token: my_card_product_02
                cp_id: 1
                created_time: 2021-03-06T00:06:34Z
                endpoint: /bulkissuances/{token}
                expedite: false
                expiration_offset:
                  unit: YEARS
                  value: 10
                fulfillment:
                  card_personalization:
                    carrier:
                      message_line: my message
                      name: my_carrier_logo.png
                    images:
                      card:
                        name: my_card_logo.png
                        thermal_color: Black
                      carrier_return_window:
                        name: my_return_address_image.png
                      signature:
                        name: my_signature.png
                    text:
                      name_line_1:
                        value: Saki Dogger
                      name_line_2:
                        value: Chicken Tooth Music
                  shipping:
                    method: UPS_REGULAR
                    recipient_address:
                      address1: 1255 Lake Street
                      city: Oakland
                      country: USA
                      first_name: Saki
                      last_name: Dogger
                      phone: 510-333-3333
                      postal_code: "94611"
                      state: CA
                    return_address:
                      address1: 1222 Blake Street
                      city: Berkeley
                      country: USA
                      first_name: Shipping
                      last_name: R_US
                      phone: "5102222222"
                      postal_code: "94702"
                      state: CA
                method: get
                name_line1_end_index: 3
                name_line1_start_index: 1
                name_line_1_numeric_postfix: true
                provider_ship_date: 2020-03-08T00:00:00Z
                provider_shipping_method: United_Parcel_Service
                provider_tracking_number: "982247"
                token: bulk_06_token
                user_association:
                  single_inventory_user: false
              schema:
                $ref: "#/components/schemas/bulk_issuance_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Bulk issuance request not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve bulk card order
      tags:
        - Bulk Card Orders
  /businesses:
    get:
      description: >-
        To return an array of all businesses, send a `GET` request to the
        `/businesses` endpoint.


        To narrow your result set to businesses that match a particular legal or
        fictitious name, include the appropriate parameters from the following
        query parameters table.

        This endpoint also supports <</core-api/field-filtering, field
        filtering>> and <</core-api/sorting-and-pagination, sorting and
        pagination>>.
      operationId: getBusinesses
      parameters:
        - description: The number of business resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: The fictitious or "doing business as (DBA)" name of the business.
          explode: true
          in: query
          name: business_name_dba
          required: false
          schema:
            type: string
          style: form
        - description: The legal name of the business.
          explode: true
          in: query
          name: business_name_legal
          required: false
          schema:
            type: string
          style: form
        - description: Specifies the search type for the query.
          explode: true
          in: query
          name: search_type
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data:
                  - active: true
                    business_name_dba: My_fictitious_business_name
                    business_name_legal: My_legal_business_name
                    business_type: My_business_type
                    created_time: 2021-10-18T21:17:03Z
                    date_established: 2010-04-15T00:01:00Z
                    duns_number: "123456789"
                    general_business_description: My_business_description
                    history: My_business_history
                    identifications:
                      - type: BUSINESS_TAX_ID
                        value: "123456789"
                    in_current_location_since: 2010-04-15T00:01:00Z
                    incorporation:
                      address_registered_under:
                        address1: 123 B Street
                        city: Oakland
                        country: US
                        postal_code: "94610"
                        state: CA
                      incorporation_type: LLC
                      is_public: true
                      name_registered_under: First Middle Last
                      state_of_incorporation: CA
                      stock_symbol: MB
                    international_office_locations: Athens, Greece; Buenos Aires, Argentina
                    ip_address: 67.120.28.118
                    last_modified_time: 2021-10-19T22:48:02Z
                    notes: My notes
                    office_location:
                      address1: 123 A Street
                      address2: Suite 123
                      city: Oakland
                      country: US
                      postal_code: "94610"
                      state: CA
                    password: My_passw0rd
                    phone: "5105551215"
                    primary_contact:
                      department: My_department
                      email: dr_me@my_business.com
                      extension: "11"
                      fax: "5105551216"
                      full_name: First Middle Last
                      mobile: "5105551217"
                      phone: "5105551215"
                      title: Dr
                    proprietor_or_officer:
                      alternative_names: My Alternative Name
                      dob: 1985-01-08T00:00:00Z
                      email: mr.myself@my.business.com
                      first_name: First
                      home:
                        address1: 123 B Street
                        address2: Apt A
                        city: Oakland
                        country: US
                        postal_code: "94610"
                        state: CA
                      last_name: Last
                      middle_name: Middle
                      phone: "5105551211"
                      ssn: "5555"
                      title: Mr
                    status: ACTIVE
                    token: my_business_01
                    website: https://my_business.com
                end_index: 0
                is_more: true
                start_index: 0
              schema:
                $ref: "#/components/schemas/BusinessCardHolderListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List businesses
      tags:
        - businesses
    post:
      description: >-
        Create a business.

        The initial status of a newly created business depends on the
        <</core-api/kyc-verification, Know Your Customer (KYC) requirements>> of
        the program or associated <</core-api/account-holder-groups, account
        holder group>>.


        [cols="1,1,1,1"]

        |===

        | KYC Required | Initial Business State | Business Active on Creation |
        Business Limitations


        | Always

        | `UNVERIFIED`

        | No

        | Cannot load funds.


        | Conditionally

        | `LIMITED`

        | No

        | Restricted by rules in `accountholdergroups.pre_kyc_controls`.


        | Never

        | `ACTIVE`

        | Required

        | None.

        |===


        To change or track the history of a business' status, use the
        `/businesstransitions` endpoint.

        For more information on status changes, see
        <<create_business_transition, Create Business Transition>>.


        For information about configuring the required fields for KYC
        verification, see <</core-api/kyc-verification#_perform_kyc, Perform
        KYC>>.
      operationId: postBusinesses
      requestBody:
        content:
          application/json:
            example:
              attestation_date: 2022-03-03T00:01:00Z
              attester_name: Jane Smith
              attester_title: Chief Executive Officer
              beneficial_owner1:
                dob: 1982-07-23T05:36:00Z
                first_name: First
                home:
                  address1: 123 B Street
                  address2: Apt A
                  city: Oakland
                  country: US
                  postal_code: "94610"
                  state: CA
                last_name: Last
                middle_name: Middle
                phone: "5105551212"
                ssn: "123456789"
                title: Ms
              beneficial_owner2:
                dob: 1973-11-11T11:11:11Z
                first_name: First
                home:
                  address1: 4321 Grove Street
                  address2: Suite 123
                  city: Oakland
                  country: US
                  postal_code: "94610"
                  state: CA
                last_name: Last
                middle_name: Middle
                phone: "5105551213"
                ssn: "234567891"
                title: Ms
              beneficial_owner3:
                dob: 1981-02-14T15:16:17Z
                first_name: First
                home:
                  address1: 789 Pulgas Ave
                  city: Oakland
                  country: US
                  postal_code: "94610"
                  state: CA
                last_name: Last
                middle_name: Middle
                phone: "5105551214"
                ssn: "345678912"
                title: Ms
              beneficial_owner4:
                dob: 1954-03-07T15:16:17Z
                first_name: First
                home:
                  address1: 16 Poplar Street
                  city: Oakland
                  country: US
                  postal_code: "94610"
                  state: CA
                last_name: Last
                middle_name: Middle
                phone: "5105551215"
                ssn: "456789123"
                title: Dr
              business_name_dba: My_fictitious_business_name
              business_name_legal: My_legal_business_name
              business_type: My_business_type
              date_established: 2010-04-15T00:01:00Z
              duns_number: "987654321"
              general_business_description: My_business_description
              history: My_business_history
              identifications:
                - type: BUSINESS_TAX_ID
                  value: "123456789"
              in_current_location_since: 2010-04-15T00:01:00Z
              incorporation:
                address_registered_under:
                  address1: 123 B Street
                  city: Oakland
                  country: US
                  postal_code: "94610"
                  state: CA
                incorporation_type: LLC
                is_public: true
                name_registered_under: First Middle Last
                state_of_incorporation: CA
                stock_symbol: MB
              international_office_locations: Athens, Greece; Buenos Aires, Argentina,
              ip_address: 67.120.28.118,
              metadata:
                my_name_1: my_value_1
                my_name_2: my_value_2
              notes: My notes
              office_location:
                address1: 123 A street
                address2: Suite 123
                city: Oakland
                country: US
                postal_code: "94610"
                state: CA
              password: My_passw0rd
              phone: "5105551212"
              primary_contact:
                department: My_department
                email: dr.me@my.business.com
                extension: "11"
                fax: "5105551222"
                full_name: First Middle Last
                mobile: "5105551213"
                phone: "5105551212"
                title: Dr
              proprietor_or_officer:
                alternative_names: My Alternative Name
                dob: 1985-01-08T00:00:00Z
                email: mr.myself@my.business.com
                first_name: First
                home:
                  address1: 123 B Street
                  address2: Apt A
                  city: Oakland
                  country: US
                  postal_code: "94610"
                  state: CA
                last_name: Last
                middle_name: Middle
                phone: "5105551211"
                ssn: "5555"
                title: Mr
              token: my_business_02
              website: https://my_business_02.com
            schema:
              $ref: "#/components/schemas/business_cardholder"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                active: true
                business_name_dba: My_fictitious_business_name
                business_name_legal: My_legal_business_name
                business_type: My_business_type
                created_time: 2020-01-13T23:29:10Z
                date_established: 2010-04-15T00:01:00Z
                deposit_account:
                  account_number: "12342126720827265"
                  routing_number: "293748000"
                  token: 420df02a-6aef-42bf-be7b-0d080ebf7573
                  x-mq-internal: true
                duns_number: "987654321"
                general_business_description: My_business_description
                history: My_business_history
                identifications:
                  - type: BUSINESS_TAX_ID
                    value: "123456789"
                in_current_location_since: 2010-04-15T00:01:00Z
                incorporation:
                  address_registered_under:
                    address1: 123 B Street
                    city: Oakland
                    country: US
                    postal_code: "94610"
                    state: CA
                  incorporation_type: LLC
                  is_public: true
                  name_registered_under: First Middle Last
                  state_of_incorporation: CA
                  stock_symbol: MB
                international_office_locations: Athens, Greece; Buenos Aires, Argentina
                ip_address: 67.120.28.118
                last_modified_time: 2020-01-13T23:29:10Z
                metadata:
                  my_name_1: my_value_1
                  my_name_2: my_value_2
                notes: My notes
                office_location:
                  address1: 123 A Street
                  address2: Suite 123
                  city: Oakland
                  country: US
                  postal_code: "94610"
                  state: CA
                password: My_passw0rd
                phone: "5105551212"
                primary_contact:
                  department: My_department
                  email: dr.me@my.business.com
                  extension: "11"
                  fax: "5105551222"
                  full_name: First Middle Last
                  mobile: "5105551213"
                  phone: "5105551212"
                  title: Dr
                proprietor_or_officer:
                  alternative_names: My Alternative Name
                  dob: 1985-01-08T00:00:00Z
                  email: mr.myself@my.business.com
                  first_name: First
                  home:
                    address1: 123 B Street
                    address2: Apt A
                    city: Oakland
                    country: US
                    postal_code: "94610"
                    state: CA
                  last_name: Last
                  middle_name: Middle
                  phone: "5105551211"
                  ssn: "5555"
                  title: Mr
                status: ACTIVE
                token: my_business_02
                website: https://my_business_02.com
              schema:
                $ref: "#/components/schemas/business_card_holder_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "409":
          content: {}
          description: Request already processed with a different payload
        "500":
          content: {}
          description: Server error
      summary: Create business
      tags:
        - businesses
  /businesses/lookup:
    post:
      description: >-
        To search for one or more businesses, send a `POST` request to the
        `/businesses/lookup` endpoint.

        Include in the message body any parameters by which you want to query.

        This endpoint supports <</core-api/field-filtering, field filtering>>
        and <</core-api/sorting-and-pagination, pagination>>.
      operationId: postBusinessesLookup
      requestBody:
        content:
          application/json:
            example:
              dda: "00002129923205648"
            schema:
              $ref: "#/components/schemas/DDARequest"
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                account_holder_group_token: DEFAULT_AHG
                active: true
                business_name_dba: My_fictitious_business_name
                business_name_legal: My_legal_business_name
                business_type: other
                created_time: 2020-06-20T00:17:48Z
                date_established: 2010-01-01T00:01:00Z
                duns_number: "22344566"
                identifications:
                  - type: BUSINESS_TAX_ID
                    value: 11-1111111
                incorporation:
                  incorporation_type: CORPORATION
                  state_of_incorporation: CA,
                last_modified_time: 2020-06-20T00:17:48Z
                metadata:
                  my_name_1: my_value_1
                  my_name_2: my_value_2
                office_location:
                  address1: 111 Main St
                  address2: Suite B
                  city: Berkeley
                  country: USA
                  postal_code: "94702"
                  state: CA
                phone: "5105551218"
                primary_contact:
                  department: Accounts Payable
                  email: me@my.company.com
                  extension: "234"
                  fax: "5105551219"
                  full_name: First Middle Last
                  mobile: "5105551220"
                  phone: "5105551218"
                  title: Mr.
                token: 297aa1a7-f3c9-46eb-9e0a-54f8bce0c189
              schema:
                $ref: "#/components/schemas/business_cardholder"
          description: Success
        "404":
          content: {}
          description: Business not found
        "500":
          content: {}
          description: Server error
      summary: Search businesses
      tags:
        - businesses
  /businesses/{parent_token}/children:
    get:
      description: >-
        To return an array of all child cardholders of a particular business,
        send a `GET` request to the `/businesses/{parent_token}/children`
        endpoint.

        Include the `parent_token` as a URL path parameter.


        This endpoint supports <</core-api/field-filtering, field filtering>>.
      operationId: getBusinessesParenttokenChildren
      parameters:
        - description: The number of child cardholders to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: The unique identifier of the parent business.
          explode: false
          in: path
          name: parent_token
          required: true
          schema:
            type: string
          style: simple
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data:
                  - active: true
                    address1: 1234 Lake Street
                    birth_date: 1990-01-01
                    business_token: my_business_01
                    city: Berkeley
                    country: US
                    created_time: 2020-10-20T17:50:36Z
                    email: my_child_user_01@gmail.com
                    first_name: First
                    gender: F
                    identifications:
                      - type: SSN
                        value: "123456789"
                    last_modified_time: 2020-10-20T17:50:36Z
                    last_name: Last
                    metadata:
                      my_name_1: my_value_1
                      my_name_2: my_value_2
                    parent_token: my_business_01
                    password: My_passw0rd
                    phone: 510-555-1111
                    postal_code: "94702"
                    state: CA
                    status: ACTIVE
                    token: my_child_user_01
                    uses_parent_account: true
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/UserCardHolderListResponse"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: List business children
      tags:
        - businesses
  /businesses/{token}:
    get:
      description: >-
        To retrieve a specific business, send a `GET` request to the
        `/businesses/{token}` endpoint.

        Include the business `token` path parameter to specify the business to
        return.


        This endpoint supports <</core-api/field-filtering, field filtering>>
        and <</core-api/sorting-and-pagination, sorting and pagination>>.
      operationId: getBusinessesToken
      parameters:
        - description: Business token
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                active: true
                business_name_dba: My_fictitious_business_name
                business_name_legal: My_legal_business_name
                business_type: My_business_type
                created_time: 2020-01-13T23:29:10Z
                date_established: 2010-04-15T00:01:00Z
                deposit_account:
                  account_number: "12342126720827265"
                  routing_number: "293748000"
                  token: 420df02a-6aef-42bf-be7b-0d080ebf7573
                  x-mq-internal: true
                duns_number: "123456789"
                general_business_description: My_business_description
                history: My_business_history
                identifications:
                  - type: BUSINESS_TAX_ID
                    value: "123456789"
                in_current_location_since: 2010-04-15T00:01:00Z
                incorporation:
                  address_registered_under:
                    address1: 123 B Street
                    city: Oakland
                    country: US
                    postal_code: "94610"
                    state: CA
                  incorporation_type: LLC
                  is_public: true
                  name_registered_under: First Middle Last
                  state_of_incorporation: CA
                  stock_symbol: MB
                international_office_locations: Athens, Greece; Buenos Aires, Argentina
                ip_address: 67.120.28.118
                last_modified_time: 2020-01-13T23:29:10Z
                metadata:
                  my_name_1: my_value_1
                  my_name_2: my_value_2
                notes: My notes
                office_location:
                  address1: 123 A street
                  address2: Suite 123
                  city: Oakland
                  country: US
                  postal_code: "94610"
                  state: CA
                password: My_passw0rd
                phone: "5105551212"
                primary_contact:
                  department: My_department
                  email: dr.me@my.business.com
                  extension: "11"
                  fax: "5105551222"
                  full_name: First Middle Last
                  mobile: "5105551213"
                  phone: "5105551212"
                  title: Dr
                proprietor_or_officer:
                  alternative_names: My Alternative Name
                  dob: 1985-01-08T00:00:00Z
                  email: mr.myself@my.business.com
                  first_name: First
                  home:
                    address1: 123 B Street
                    address2: Apt A
                    city: Oakland
                    country: US
                    postal_code: "94610"
                    state: CA
                  last_name: Last
                  middle_name: Middle
                  phone: "5105551211"
                  ssn: "5555"
                  title: Mr
                status: ACTIVE
                token: my_business_02
                website: https://my_business_02.com
              schema:
                $ref: "#/components/schemas/business_card_holder_response"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Business not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve business
      tags:
        - businesses
    put:
      description: >-
        To update a business, send a `PUT` request to `/businesses/{token}`.

        Use the `token` path parameter to specify the business to update.

        Include the business details to update in
        link:http://www.json.org/[JSON, window="_blank"] format in the body of
        the request.

        Only values of parameters in the request are modified; all others are
        left unchanged.
      operationId: putBusinessesToken
      parameters:
        - description: Business token
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/business_card_holder_update"
        description: Business object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/business_cardholder"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: Update business
      tags:
        - businesses
  /businesses/{token}/ssn:
    get:
      description: >-
        To retrieve the government-issued identification number of a business'
        proprietor, send a `GET` request to the `/businesses/{token}/ssn`
        endpoint.

        Include the `token` path parameter to specify the business whose
        identification number (SSN, TIN, NIN, SIN) you want to return.

        You can indicate whether to return the full number or the last four
        digits only.
      operationId: getBusinessesTokenSsn
      parameters:
        - description: The unique identifier of the business resource.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: >-
            To return the full identification number, set to `true`.

            To return only the last four digits, set to `false`.

            If the `proprietor_or_officer.identifications` array contains only
            the last four digits of the identification number, the
            `/businesses/{token}/ssn` endpoint will return only the last four
            digits regardless of the `full_ssn` parameter.
          explode: true
          in: query
          name: full_ssn
          required: false
          schema:
            type: boolean
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                ssn: "5555"
              schema:
                $ref: "#/components/schemas/ssn_response_model"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: Retrieve business identification number
      tags:
        - businesses
  /businesstransitions:
    post:
      description: >-
        This endpoint enables you to change a business' status, depending on
        your role and the previous status change.

        By changing a business' status, you can control the business'
        capabilities and the setting of the `business.active` field. 

        The `business.active` field is `true` if your business is in the
        `LIMITED` or `ACTIVE` state, and `false` if your business is in the
        `UNVERIFIED` state. 

        You cannot control the value of the `business.active` field directly.


        [cols=",2a,2a"]

        |===

        | The business.status field | Description | Business limitations 


        | Unverified 

        | Initial status of a newly created business belonging to an
        `accountholdergroup` where KYC is always required. 

        | Cannot load funds.


        *The business.active field:*   +

        `false`


        *Allowable transitions:*   +

        `ACTIVE`, `SUSPENDED`, `CLOSED`


        | Limited 

        | Initial status of a newly created business belonging to an
        `accountholdergroup` where KYC is conditionally required. 

        | Restricted by rules in `accountholdergroups.pre_kyc_controls`. 


        *The business.active field:*   +

        `true`


        *Allowable transitions:*   +

        `ACTIVE`, `SUSPENDED`, `CLOSED`


        | Active 

        | Status of a business that has passed KYC; initial status of a newly
        created business belonging to an `accountholdergroup` where KYC is never
        required. 

        | None. 


        *The business.active field:*   +

        `true`


        *Allowable transitions:*   +

        `SUSPENDED`, `CLOSED`


        | Suspended 

        | The business is temporarily inactive.


        *NOTE:* Transitioning a suspended business to the `ACTIVE` status is
        restricted, based on your role and the details of the previous status
        change. 

        | Cannot load funds or activate cards. 


        *The business.active field:*   +

        `false`


        *Allowable transitions:*   +

        `ACTIVE`, `LIMITED`, `UNVERIFIED`, `CLOSED`


        | Closed 

        | The business is permanently inactive.


        *NOTE:* `CLOSED` is a terminal status. 

        In exceptional cases, you can transition a business from `CLOSED` to
        another status, depending on your role and the details of the previous
        status change. 

        Contact your Marqeta representative for more information. 

        | Cannot load funds. 


        *The business.active field:*   +

        `false`


        *Allowable transitions:*   +

        `ACTIVE`, `LIMITED`, `UNVERIFIED`, `SUSPENDED`

        |===


        [NOTE] 

        The Marqeta platform transitions a business' status in response to
        certain events.

        For example, a business with an `UNVERIFIED` status transitions to
        `ACTIVE` when the business passes KYC.
      operationId: postBusinesstransitions
      requestBody:
        content:
          application/json:
            example:
              business_token: my_business_01
              channel: API
              reason: Activating business
              reason_code: "00"
              status: ACTIVE
              token: activate_05
            schema:
              $ref: "#/components/schemas/BusinessTransitionRequest"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                business_token: my_business_01
                channel: API
                created_time: 2020-11-23T23:28:39Z
                reason: Activating business
                reason_code: "00"
                status: ACTIVE
                token: activate_05
              schema:
                $ref: "#/components/schemas/BusinessTransitionResponse"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "409":
          content: {}
          description: Request already processed with a different payload
        "412":
          content: {}
          description: Pre-condition setup issue
        "500":
          content: {}
          description: Server error
      summary: Create business transition
      tags:
        - business transitions
  /businesstransitions/business/{business_token}:
    get:
      description: List all transitions for a given business.
      operationId: getBusinesstransitionsBusinessBusinesstoken
      parameters:
        - description: The unique identifier of the business associated with the
            transitions to retrieve.
          explode: false
          in: path
          name: business_token
          required: true
          schema:
            type: string
          style: simple
        - description: The number of business transitions to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -id
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data:
                  - business_token: my_business_01
                    channel: API
                    created_time: 2020-11-23T23:28:39Z
                    reason: Activating business
                    reason_code: "00"
                    status: ACTIVE
                    token: activate_05
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/BusinessTransitionListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List business transitions
      tags:
        - business transitions
  /businesstransitions/{token}:
    get:
      description: Use this endpoint to retrieve a business transition.
      operationId: getBusinesstransitionsToken
      parameters:
        - description: The unique identifier of the business transition you want to
            retrieve.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                business_token: my_business_01
                channel: API
                created_time: 2020-11-23T23:28:39Z
                reason: Activating business
                reason_code: "00"
                status: ACTIVE
                token: activate_05
              schema:
                $ref: "#/components/schemas/BusinessTransitionResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Cardholder not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve business transition
      tags:
        - business transitions
  /cardproducts:
    get:
      description: |-
        Use this endpoint to list existing card products.

        This endpoint supports <</core-api/sorting-and-pagination, pagination>>.
      operationId: getCardproducts
      parameters:
        - description: |-
            The number of resources to retrieve.
            Count can be between 1 - 10 items.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data[]:
                  active: true
                  card_life_cycle:
                    activate_upon_issue: true
                    card_service_code: 101
                    expiration_offset:
                      min_offset:
                        unit: YEARS
                        value: 4
                      unit: YEARS
                      value: 10
                    update_expiration_upon_activation: false
                  clearing_and_settlement:
                    overdraft_destination: GPA
                  config:
                    all_zero_card_security_code: false
                    allow_card_creation: true
                    bin_prefix: "111111"
                    bulk_ship: false
                    fulfillment:
                      card_personalization:
                        carrier:
                          message_line: my message
                          name: my_carrier_logo.png
                        carrier_return_window:
                          name: my_return_address_image.png
                        images:
                          card:
                            name: my_card_logo.png
                            thermal_color: Black
                        signature:
                          name: my_signature.png
                        text:
                          name_line_1: null
                          name_line_2:
                            value: Chicken Tooth Music
                          value: Saki Dogger
                      shipping:
                        method: OVERNIGHT
                        recipient_address:
                          address1: 1234 Grove Street
                          city: Berkeley
                          country: USA
                          first_name: Jane
                          last_name: Doe
                          phone: "5105551212"
                          postal_code: 94702
                          state: CA
                        return_address:
                          address1: 123 Henry St
                          address2: Suite 101
                          city: Porterville
                          country: USA
                          first_name: Saki
                          last_name: Dogger
                          middle_name: R
                          phone: "8315555555"
                          postal_code: "93257"
                          state: CA
                    fulfillment_provider: PERFECTPLASTIC
                    package_id: "0"
                    pan_length: "16"
                    payment_instrument: PHYSICAL_MSR
                    poi:
                      atm: false
                      ecommerce: false
                      other:
                        allow: true,
                        card_presence_required: false,
                        cardholder_presence_required: false
                    transaction_controls:
                      accepted_countries_token: accept_us_only
                      address_verification:
                        auth_messages:
                          decline_on_address_number_mismatch: false
                          decline_on_postal_code_mismatch: false
                          validate: true
                        av_messages:
                          decline_on_address_number_mismatch: false
                          decline_on_postal_code_mismatch: true
                          validate: true
                      allow_gpa_auth: true
                      allow_mcc_group_authorization_controls: true
                      allow_network_load: false
                      allow_network_load_card_activation: false
                      allow_quasi_cash: false
                      always_require_icc: false
                      always_require_pin: false
                      enable_partial_auth_approval: true
                      ignore_card_suspended_state: false
                      notification_language: fra
                      require_card_not_present_card_security_code: false
                    uppercase_name_lines: true
                  created_time: 2021-04-27T19:25:55Z
                  digital_wallet_tokenization:
                    provisioning_controls:
                      in_app_provisioning:
                        address_verification:
                          validate: true
                        enabled: false
                      manual_entry:
                        address_verification:
                          validate: true
                        enabled: false
                      wallet_provider_card_on_file:
                        address_verification:
                          validate: true
                        enabled: false
                  jit_funding:
                    paymentcard_funding_source:
                      enabled: true
                      refunds_destination: ""
                    program_funding_source:
                      enabled: false
                      funding_source_token: ""
                      refunds_destination: PROGRAM_FUNDING_SOURCE
                    programgateway_funding_source:
                      enabled: false
                      funding_source_token: ""
                      refunds_destination: GATEWAY
                  last_modified_time: 2021-04-27T21:29:12Z
                  name: My Card Product 01
                  selective_auth:
                    dmd_location_sensitivity: 0
                    enable_regex_search_chain: false
                    sa_mode: 1
                  start_date: 2021-04-27
                  token: my_cardproduct_01
                end_index: 0
                is_more: true
                start_index: 0
              schema:
                $ref: "#/components/schemas/CardProductListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List card products
      tags:
        - card products
    post:
      description: >-
        Use this endpoint to create a card product.


        The card product request contains a set of fields that provide basic
        information about the card product, such as name, active status, and
        start and end dates.

        Configuration information is contained in the `config` object, which
        contains sub-elements whose fields control the features and behavior of
        the card product.

        The elements are referred to collectively as the card product
        "configuration," and as such are contained in a `config` object.
      operationId: postCardproducts
      requestBody:
        content:
          application/json:
            example:
              config:
                card_life_cycle:
                  activate_upon_issue: true
                  card_service_code: 101
                  expiration_offset:
                    unit: YEARS
                    value: 10
                  update_expiration_upon_activation: false
                fulfillment:
                  all_zero_card_security_code: false
                  bin_prefix: "111111"
                  bulk_ship: false
                  card_personalization:
                    carrier:
                      message_line: my message
                      name: my_carrier_logo.png
                    carrier_return_window:
                      name: my_return_address_image.png
                    images:
                      card:
                        name: my_card_logo.png
                        thermal_color: Black
                    signature:
                      name: my_signature.png
                    text:
                      name_line_1:
                        value: Saki Dogger
                      name_line_2:
                        value: Chicken Tooth Music
                  fulfillment_provider: PERFECTPLASTIC
                  package_id: "0"
                  pan_length: "16"
                  payment_instrument: PHYSICAL_MSR
                  shipping:
                    method: OVERNIGHT
                    recipient_address:
                      address1: 1234 Grove Street
                      city: Berkeley
                      country: USA
                      first_name: Jane
                      last_name: Doe
                      phone: "5105551212"
                      postal_code: "94702"
                      state: CA
                    return_address:
                      address1: 123 Henry St
                      address2: Suite 101
                      city: Porterville
                      country: USA
                      first_name: Saki
                      last_name: Dogger
                      middle_name: R
                      phone: "8315551212"
                      postal_code: "93257"
                      state: CA
                jit_funding:
                  paymentcard_funding_source:
                    enabled: true
                poi:
                  atm: false
                  ecommerce: false
                  other:
                    allow: true
                    card_presence_required: false
                    cardholder_presence_required: false
                selective_auth:
                  dmd_location_sensitivity: 0
                  enable_regex_search_chain: false
                  sa_mode: 1
                transaction_controls:
                  accepted_countries_token: accept_us_only
                  allow_gpa_auth: true
                  allow_mcc_group_authorization_controls: true
                  allow_network_load: false
                  allow_network_load_card_activation: false
                  allow_quasi_cash: false
                  always_require_icc: false
                  always_require_pin: false
                  enable_partial_auth_approval: true
                  ignore_card_suspended_state: false
                  notification_language: fra
                  require_card_not_present_card_security_code: false
              name: My Card Product 01
              start_date: 2021-04-27
              token: my_cardproduct_01
            schema:
              $ref: "#/components/schemas/card_product_request"
        description: Card product object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                active: true
                config:
                  all_zero_card_security_code: false
                  allow_card_creation: true
                  bin_prefix: "111111"
                  bulk_ship: false
                  card_life_cycle:
                    activate_upon_issue: true
                    card_service_code: 101
                    expiration_offset:
                      unit: YEARS
                      value: 10
                    update_expiration_upon_activation: false
                  clearing_and_settlement:
                    overdraft_destination: GPA
                  digital_wallet_tokenization:
                    card_art_id: myCardArt01
                    provisioning_controls:
                      in_app_provisioning:
                        address_verification:
                          validate: true
                        enabled: false
                      manual_entry:
                        address_verification:
                          validate: true
                        enabled: false
                      wallet_provider_card_on_file:
                        address_verification:
                          validate: true
                        enabled: false
                  enable_offline_pin: false
                  fulfillment:
                    card_personalization:
                      carrier:
                        message_line: my message
                        name: my_carrier_logo.png
                      carrier_return_window:
                        name: my_return_address_image.png
                      images:
                        card:
                          name: my_card_logo.png
                          thermal_color: Black
                      signature:
                        name: my_signature.png
                      text:
                        name_line_1:
                          value: Saki Dogger
                        name_line_2:
                          value: Chicken Tooth Music
                    shipping:
                      method: OVERNIGHT
                      recipient_address:
                        address1: 1234 Grove Street
                        city: Berkeley
                        country: USA
                        first_name: Jane
                        last_name: Doe
                        phone: "5105551212"
                        postal_code: "94702"
                        state: CA
                      return_address:
                        address1: 123 Henry St
                        address2: Suite 101
                        city: Porterville
                        country: USA
                        first_name: Saki
                        last_name: Dogger
                        middle_name: R
                        phone: "8315551212"
                        postal_code: "93257"
                        state: CA
                  fulfillment_provider: PERFECTPLASTIC
                  jit_funding:
                    paymentcard_funding_source:
                      enabled: true
                      refunds_destination: GPA
                    program_funding_source:
                      enabled: false
                      funding_source_token: ""
                      refunds_destination: PROGRAM_FUNDING_SOURCE
                    programgateway_funding_source:
                      always_fund: true
                      enabled: false
                      funding_source_token: ""
                      refunds_destination: GATEWAY
                  package_id: "0"
                  pan_length: "16"
                  payment_instrument: PHYSICAL_MSR
                  poi:
                    atm: false
                    ecommerce: false
                    other:
                      allow: true
                      card_presence_required: false
                      cardholder_presence_required: false
                  selective_auth:
                    dmd_location_sensitivity: 0
                    enable_regex_search_chain: false
                    sa_mode: 1
                  transaction_controls:
                    accepted_countries_token: accept_us_only
                    address_verification:
                      auth_messages:
                        decline_on_address_number_mismatch: false
                        decline_on_postal_code_mismatch: false
                        validate: true
                      av_messages:
                        decline_on_address_number_mismatch: false
                        decline_on_postal_code_mismatch: true
                        validate: true
                    allow_chip_fallback: true
                    allow_gpa_auth: true
                    allow_mcc_group_authorization_controls: true
                    allow_network_load: false
                    allow_network_load_card_activation: false
                    allow_quasi_cash: false
                    always_require_icc: false
                    always_require_pin: false
                    enable_partial_auth_approval: true
                    ignore_card_suspended_state: false
                    notification_language: fra
                    quasi_cash_exempt_mids: 984226812886,000984226812886
                    require_card_not_present_card_security_code: false
                    strong_customer_authentication_limits:
                      sca_contactless_cumulative_amount_limit: 150
                      sca_contactless_transaction_limit: 30
                      sca_contactless_transactions_count_limit: 5
                      sca_contactless_transactions_currency: EUR
                  uppercase_name_lines: true
                created_time: 2021-03-26T20:25:52Z
                last_modified_time: 2021-03-26T20:25:52Z
                name: My Card Product 01
                start_date: 2021-04-27
                token: my_cardproduct_01
              schema:
                $ref: "#/components/schemas/card_product_response"
          description: Created
        "400":
          content: {}
          description: Bad request
        "409":
          content: {}
          description: Token already associated with a different payload
        "500":
          content: {}
          description: Server error
      summary: Create card product
      tags:
        - card products
  /cardproducts/{token}:
    get:
      description: Use this endpoint to retrieve a specific card product.
      operationId: getCardproductsToken
      parameters:
        - description: Identifies the card product to retrieve.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                active: true
                config:
                  all_zero_card_security_code: false
                  allow_card_creation: true
                  bin_prefix: "111111"
                  bulk_ship: false
                  card_life_cycle:
                    activate_upon_issue: true
                    card_service_code: 101
                    expiration_offset:
                      unit: YEARS
                      value: 10
                    update_expiration_upon_activation: false
                  clearing_and_settlement:
                    overdraft_destination: GPA
                  digital_wallet_tokenization:
                    card_art_id: myCardArt01
                    provisioning_controls:
                      in_app_provisioning:
                        address_verification:
                          validate: true
                        enabled: false
                      manual_entry:
                        address_verification:
                          validate: true
                        enabled: false
                      wallet_provider_card_on_file:
                        address_verification:
                          validate: true
                        enabled: false
                  enable_offline_pin: false
                  fulfillment:
                    card_personalization:
                      carrier:
                        message_line: my message
                        name: my_carrier_logo.png
                      carrier_return_window:
                        name: my_return_address_image.png
                      images:
                        card:
                          name: my_card_logo.png
                          thermal_color: Black
                      signature:
                        name: my_signature.png
                      text:
                        name_line_1:
                          value: Saki Dogger
                        name_line_2:
                          value: Chicken Tooth Music
                    shipping:
                      method: OVERNIGHT
                      recipient_address:
                        address1: 1234 Grove Street
                        city: Berkeley
                        country: USA
                        first_name: Jane
                        last_name: Doe
                        phone: "5105551212"
                        postal_code: "94702"
                        state: CA
                      return_address:
                        address1: 123 Henry St
                        address2: Suite 101
                        city: Porterville
                        country: USA
                        first_name: Saki
                        last_name: Dogger
                        middle_name: R
                        phone: "8315551212"
                        postal_code: "93257"
                        state: CA
                  fulfillment_provider: PERFECTPLASTIC
                  jit_funding:
                    paymentcard_funding_source:
                      enabled: true
                      refunds_destination: GPA
                    program_funding_source:
                      enabled: false
                      funding_source_token: ""
                      refunds_destination: PROGRAM_FUNDING_SOURCE
                    programgateway_funding_source:
                      always_fund: true
                      enabled: false
                      funding_source_token: ""
                      refunds_destination: GATEWAY
                  package_id: "0"
                  pan_length: "16"
                  payment_instrument: PHYSICAL_MSR
                  poi:
                    atm: false
                    ecommerce: false
                    other:
                      allow: true
                      card_presence_required: false
                      cardholder_presence_required: false
                  selective_auth:
                    dmd_location_sensitivity: 0
                    enable_regex_search_chain: false
                    sa_mode: 1
                  transaction_controls:
                    accepted_countries_token: accept_us_only
                    address_verification:
                      auth_messages:
                        decline_on_address_number_mismatch: false
                        decline_on_postal_code_mismatch: false
                        validate: true
                      av_messages:
                        decline_on_address_number_mismatch: false
                        decline_on_postal_code_mismatch: true
                        validate: true
                    allow_chip_fallback: true
                    allow_gpa_auth: true
                    allow_mcc_group_authorization_controls: true
                    allow_network_load: false
                    allow_network_load_card_activation: false
                    allow_quasi_cash: false
                    always_require_icc: false
                    always_require_pin: false
                    enable_partial_auth_approval: true
                    ignore_card_suspended_state: false
                    notification_language: fra
                    quasi_cash_exempt_mids: 984226812886,000984226812886
                    require_card_not_present_card_security_code: false
                    strong_customer_authentication_limits:
                      sca_contactless_cumulative_amount_limit: 150
                      sca_contactless_transaction_limit: 30
                      sca_contactless_transactions_count_limit: 5
                      sca_contactless_transactions_currency: EUR
                  uppercase_name_lines: true
                created_time: 2021-03-26T20:25:52Z
                last_modified_time: 2021-03-26T20:25:52Z
                name: My Card Product 01
                start_date: 2021-03-26
                token: my_cardproduct_01
              schema:
                $ref: "#/components/schemas/card_product_response"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Card product not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve card product
      tags:
        - card products
    put:
      description: >-
        Use this endpoint to update a card product.

        Only values of fields in the request are modified; all others are left
        unchanged.
      operationId: putCardproductsToken
      parameters:
        - description: Identifies the card product to update.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              active: false
            schema:
              $ref: "#/components/schemas/card_product_update_model"
        description: Card product object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                active: false
                card_life_cycle:
                  activate_upon_issue: true
                  card_service_code: 101
                  expiration_offset:
                    unit: YEARS
                    value: 10
                  update_expiration_upon_activation: false
                config:
                  all_zero_card_security_code: false
                  bin_prefix: "111111"
                  bulk_ship: false
                  fulfillment:
                    card_personalization:
                      carrier:
                        message_line: my message
                        name: my_carrier_logo.png
                      carrier_return_window:
                        name: my_return_address_image.png
                      images:
                        card:
                          name: my_card_logo.png
                          thermal_color: Black
                      signature:
                        name: my_signature.png
                      text:
                        name_line_1:
                          value: Saki Dogger
                        name_line_2:
                          value: Chicken Tooth Music
                    shipping:
                      method: OVERNIGHT
                      recipient_address:
                        address1: 1234 Grove Street
                        city: Berkeley
                        country: USA
                        first_name: Jane
                        last_name: Doe
                        phone: "5105551212"
                        postal_code: "94702"
                        state: CA
                      return_address:
                        address1: 123 Henry St
                        address2: Suite 101
                        city: Porterville
                        country: USA
                        first_name: Saki
                        last_name: Dogger
                        middle_name: R
                        phone: "8315551212"
                        postal_code: "93257"
                        state: CA
                  fulfillment_provider: PERFECTPLASTIC
                  package_id: "0"
                  pan_length: "16"
                  payment_instrument: PHYSICAL_MSR
                  poi:
                    atm: false
                    ecommerce: false
                    other:
                      allow: true
                      card_presence_required: false
                      cardholder_presence_required: false
                  transaction_controls:
                    accepted_countries_token: accept_us_only
                    allow_gpa_auth: true
                    allow_mcc_group_authorization_controls: true
                    allow_network_load: false
                    allow_network_load_card_activation: false
                    allow_quasi_cash: false
                    always_require_icc: false
                    always_require_pin: false
                    enable_partial_auth_approval: true
                    ignore_card_suspended_state: false
                    notification_language: fra
                    require_card_not_present_card_security_code: false
                created_time: 2021-04-27T19:25:55Z
                jit_funding:
                  paymentcard_funding_source:
                    enabled: true
                last_modified_time: 2021-04-27T21:29:12Z
                name: My Card Product 01
                selective_auth:
                  dmd_location_sensitivity: 0
                  enable_regex_search_chain: false
                  sa_mode: 1
                start_date: 2021-04-27
                token: my_cardproduct_01
              schema:
                $ref: "#/components/schemas/card_product_response"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: Update card product
      tags:
        - card products
  /cards:
    get:
      description: >-
        Retrieves an array of cards whose PANs end in the four digits specified
        by the `last_four` query parameter.


        This endpoint supports <</core-api/field-filtering, field filtering>>,
        <</core-api/object-expansion, object expansion>>,
        <</core-api/sorting-and-pagination, sorting, and pagination>>.
      operationId: getCards
      parameters:
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: The last four digits of the PAN of the card you want to locate.
          explode: true
          in: query
          name: last_four
          required: true
          schema:
            type: string
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data:
                  - barcode: "25815105237561780909"
                    card_product_token: my_cardproduct_01
                    created_time: 2022-02-08T18:31:23Z
                    expedite: false
                    expiration: "1225"
                    expiration_time: 2027-12-31T23:59:59Z
                    fulfillment:
                      card_personalization:
                        images:
                          card:
                            name: my_card_logo.png
                            thermal_color: Black
                          carrier_return_window:
                            name: my_return_address_image.png
                          signature:
                            name: my_signature.png
                        text:
                          name_line_1:
                            value: My card personalization line 1
                          name_line_2:
                            value: My card personalization line 2
                      shipping:
                        care_of_line: my_care_of_value
                        method: FEDEX_REGULAR
                    fulfillment_status: DIGITALLY_PRESENTED
                    instrument_type: PHYSICAL_MSR
                    last_four: "0865"
                    last_modified_time: 2022-02-14T19:32:38Z
                    pan: "1111111824980865"
                    pin_is_set: false
                    state: UNACTIVATED
                    state_reason: New card
                    token: my_user_01_card_02
                    user_token: my_user_01
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/CardListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List cards by last 4 digits of PAN
      tags:
        - cards
    post:
      description: >-
        Creates a card.


        Create the user and card product before you create the card.

        You create a card using the `user_token` of the user who will own the
        card and the `card_product_token` of the card product that will control
        the card.


        [TIP]

        By default, newly created cards are inactive and must be explicitly
        activated (see <</core-api/cards#_create_card_transition, Create Card
        Transition>> for information on activating cards).

        To create cards that are activated upon issue, configure your card
        product's `config.card_life_cycle.activate_upon_issue` field (see
        <</core-api/card-products, Card Products>>).


        Send a `POST` request to `/pins/controltoken` to set the card's PIN if
        your program requires PIN numbers (for example, for EMV cards); this
        action updates the `pin_is_set` field to `true`.

        See <</core-api/pins#_create_or_update_pin, Create or Update PIN>> for
        details.


        You can use optional query parameters to show the PAN and CVV2 number in
        the response.

        If `show_pan` and `show_cvv_number` are set to `true`, the fulfillment
        state of the card is `DIGITALLY_PRESENTED` instead of the typical
        initial state of `ISSUED`.

        This fulfillment state does not affect the delivery of physical cards.


        This endpoint requires PCI DSS compliance if `show_pan` and
        `show_cvv_number` are set to `true`.

        You must comply with PCI DSS data security requirements if you store,
        transmit, or process sensitive card data.
      operationId: postCards
      parameters:
        - description: Set to `true` to show the CVV2 number in the response.
          explode: true
          in: query
          name: show_cvv_number
          required: false
          schema:
            default: false
            type: boolean
          style: form
        - description: Set to `true` to show the full PAN in the response.
          explode: true
          in: query
          name: show_pan
          required: false
          schema:
            default: false
            type: boolean
          style: form
      requestBody:
        content:
          application/json:
            example:
              card_product_token: my_cardproduct_01
              fulfillment:
                card_personalization:
                  images:
                    card:
                      name: my_card_logo.png
                      thermal_color: Black
                    carrier_return_window:
                      name: my_return_address_image.png
                    signature:
                      name: my_signature.png
                  text:
                    name_line_1:
                      value: Jane Doe
                    name_line_2:
                      value: My card personalization line 2
              metadata:
                my_name_1: my_value_1
                my_name_2: my_value_2
              token: my_test_card_01
              user_token: my_user_01
            schema:
              $ref: "#/components/schemas/card_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                barcode: "51554698491331520446"
                card_product_token: my_cardproduct_01
                created_time: 2022-02-26T20:40:04Z
                expedite: false
                expiration: "0331"
                expiration_time: 2027-03-31T23:59:59Z
                fulfillment:
                  card_personalization:
                    images:
                      card:
                        name: my_card_logo.png
                        thermal_color: Black
                      carrier_return_window:
                        name: my_return_address_image.png
                      signature:
                        name: my_signature.png
                    text:
                      name_line_1:
                        value: Jane Doe
                      name_line_2:
                        value: My card personalization line 2
                fulfillment_status: ISSUED
                instrument_type: PHYSICAL_MSR
                last_four: "6270"
                last_modified_time: 2022-02-26T20:40:04Z
                metadata:
                  my_name_1: my_value_1
                  my_name_2: my_value_2
                pan: "1111111824986720"
                pin_is_set: false
                state: ACTIVE
                state_reason: New card activated
                token: my_test_card_01
                user_token: my_user_01
              schema:
                $ref: "#/components/schemas/card_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "409":
          content: {}
          description: Token already associated with a different payload
        "500":
          content: {}
          description: Server error
      summary: Create card
      tags:
        - cards
  /cards/barcode/{barcode}:
    get:
      description: >-
        Retrieves a card by its barcode.


        This endpoint supports <</core-api/field-filtering, field filtering>>
        and <</core-api/object-expansion, object expansion>>.
      operationId: getCardsBarcodeBarcode
      parameters:
        - description: The barcode of the card to retrieve.
          explode: false
          in: path
          name: barcode
          required: true
          schema:
            type: string
          style: simple
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                barcode: "780672318863"
                card_product_token: my_cardproduct_01
                created_time: 2022-02-28T18:31:23Z
                expedite: false
                expiration: "0216"
                expiration_time: 2027-02-28T23:59:59Z
                fulfillment_status: SHIPPED
                instrument_type: PHYSICAL_MSR
                last_four: "5454"
                last_modified_time: 2022-02-28T18:41:00Z
                pan: "5454545454545454"
                pin_is_set: false
                state: ACTIVE
                state_reason: New card activated
                token: my_card
                user_token: my_user_01
              schema:
                $ref: "#/components/schemas/card_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Card does not exist
        "500":
          content: {}
          description: Server error
      summary: Retrieve card by barcode
      tags:
        - cards
  /cards/getbypan:
    post:
      description: >-
        Retrieves the `user_token` and `card_token` for a PAN (card number).

        In the case of a reissued card, where multiple cards share the same PAN,
        the information for the most recently issued card is returned.


        This request is useful in IVR scenarios where a user has telephoned and
        identifies the card by the PAN.

        The retrieval of these tokens is implemented as a `POST` request because
        supplying the PAN in the request body is more secure than supplying it
        in the URL (as would be required with a `GET`).


        [WARNING]

        Sending a request to this endpoint requires PCI DSS compliance.

        You must comply with PCI DSS data security requirements if you want to
        store, transmit, or process sensitive card data such as the cardholder's
        primary account number (PAN), personal identification number (PIN), and
        card expiration date.
      operationId: postCardsGetbypan
      requestBody:
        content:
          application/json:
            example:
              pan: "5454545454545454"
            schema:
              $ref: "#/components/schemas/pan_request"
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                card_token: my_card1
                created_time: 2022-02-26T20:03:15Z
                last_modified_time: 2022-02-26T20:05:20Z
                user_token: my_user
              schema:
                $ref: "#/components/schemas/pan_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: Retrieve card by PAN
      tags:
        - cards
  /cards/user/{token}:
    get:
      description: >-
        Retrieves a list of the cards associated with a specific user.


        This endpoint supports <</core-api/field-filtering, field filtering,>>
        <</core-api/sorting-and-pagination, pagination>>, and
        <</core-api/object-expansion, object expansion>>.
      operationId: getCardsUserToken
      parameters:
        - description: |-
            The unique identifier of the user whose cards you want to list.
            Send a `GET` request to `/users` to retrieve user tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 3
                data:
                  - barcode: "11379418395311581864"
                    card_product_token: my_cardproduct_01
                    created_time: 2022-02-24T21:23:31Z
                    expedite: false
                    expiration: "1026"
                    expiration_time: 2027-10-31T23:59:59Z
                    fulfillment_status: ISSUED
                    instrument_type: PHYSICAL_MSR
                    last_four: "2160"
                    last_modified_time: 2022-02-26T19:55:09Z
                    pan: "1111115454542160"
                    pin_is_set: false
                    state: SUSPENDED
                    state_reason: I do not want to use this card, so suspend it.
                    token: my_user_01_card_01
                    user_token: my_user_01
                  - barcode: "25815105237561780909"
                    card_product_token: my_cardproduct_01
                    created_time: 2021-12-28T18:31:23Z
                    expedite: false
                    expiration: "1220"
                    expiration_time: 2026-12-31T23:59:59Z
                    fulfillment:
                      card_personalization:
                        images:
                          card:
                            name: my_card_logo.png
                            thermal_color: Black
                          carrier_return_window:
                            name: my_return_address_image.png
                          signature:
                            name: my_signature.png
                        text:
                          name_line_1:
                            value: My card personalization line 1
                          name_line_2:
                            value: My card personalization line 2
                      shipping:
                        care_of_line: my_care_of_value
                        method: FEDEX_REGULAR
                    fulfillment_status: ISSUED
                    instrument_type: PHYSICAL_MSR
                    last_four: "0865"
                    last_modified_time: 2021-12-28T18:36:23Z
                    pan: "1111111824980865"
                    pin_is_set: false
                    state: UNACTIVATED
                    state_reason: New card
                    token: my_user_01_card_02
                    user_token: my_user_01
                  - barcode: "63143403984499099324"
                    card_product_token: my_cardproduct_01
                    created_time: 2021-11-03T21:55:08Z
                    expedite: false
                    expiration: "1126"
                    expiration_time: 2026-11-30T23:59:59Z
                    fulfillment_status: ISSUED
                    instrument_type: PHYSICAL_MSR
                    last_four: "2810"
                    last_modified_time: 2021-11-03T21:55:08Z
                    pan: "1111115454542810"
                    pin_is_set: false
                    state: UNACTIVATED
                    state_reason: New card
                    token: my_user-01-child_01_card_01
                    user_token: my_user-01-child_01
                end_index: 2
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/CardListResponse"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: List cards for user
      tags:
        - cards
  /cards/{token}:
    get:
      description: >-
        Retrieves a specific card.


        This endpoint supports <</core-api/field-filtering, field filtering>>
        and <</core-api/object-expansion, object expansion>>.
      operationId: getCardsToken
      parameters:
        - description: The unique identifier of the card you want to retrieve.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: Embeds the associated object of the specified type into the
            response, for all `GET /cards` endpoints.
          explode: true
          in: query
          name: expand
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                barcode: "17469201908992951865"
                card_product_token: my_cardproduct_01
                created_time: 2022-02-14T18:48:10Z
                expedite: false
                expiration: "0221"
                expiration_time: 2027-02-28T23:59:59Z
                fulfillment:
                  card_personalization:
                    images:
                      card:
                        name: my_card_logo.png
                        thermal_color: Black
                      carrier_return_window:
                        name: my_return_address_image.png
                      signature:
                        name: my_signature.png
                    text:
                      name_line_1:
                        value: My card personalization line 1
                      name_line_2:
                        value: My card personalization line 2
                fulfillment_status: ISSUED
                instrument_type: PHYSICAL_MSR
                last_four: "8949"
                last_modified_time: 2022-02-14T18:58:10Z
                metadata:
                  my_name_1: my_value_1
                  my_name_2: my_value_2
                pan: "1111115454548949"
                pin_is_set: false
                state: UNACTIVATED
                state_reason: New card
                token: mytestcard01
                user_token: my_user_01
              schema:
                $ref: "#/components/schemas/card_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Card not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve card
      tags:
        - cards
    put:
      description: Updates the details of Existing card.
      operationId: putCardsToken
      parameters:
        - description: The unique identifier of the card you want to update.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              token: my_card_token_03
              user_token: my_user_03
            schema:
              $ref: "#/components/schemas/card_update_request"
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                barcode: "17469201908992951865"
                card_product_token: my_cardproduct_01
                created_time: 2022-02-14T18:48:10Z
                expedite: false
                expiration: "0221"
                expiration_time: 2027-02-28T23:59:59Z
                fulfillment:
                  card_personalization:
                    images:
                      card:
                        name: my_card_logo.png
                        thermal_color: Black
                      carrier_return_window:
                        name: my_return_address_image.png
                      signature:
                        name: my_signature.png
                    text:
                      name_line_1:
                        value: My card personalization line 1
                      name_line_2:
                        value: My card personalization line 2
                  shipping:
                    method: UPS_REGULAR
                    recipient_address:
                      address1: 1234 Grove St
                      city: Berkeley
                      country: US
                      first_name: Jane
                      last_name: Doe
                      phone: "5105551212"
                      postal_code: "94702"
                      state: CA
                    return_address:
                      address1: 123 Henry St
                      address2: Suite 101
                      city: Porterville
                      country: US
                      first_name: Saki
                      last_name: Dogger
                      middle_name: R
                      phone: "8315555555"
                      postal_code: "93257"
                      state: CA
                fulfillment_status: ISSUED
                instrument_type: PHYSICAL_MSR
                last_four: "8949"
                last_modified_time: 2022-02-14T18:58:10Z
                metadata:
                  my_name_1: my_value_1
                pan: "1111115454548949"
                pin_is_set: false
                state: UNACTIVATED
                state_reason: New card
                token: mytestcard01
                user_token: my_user_01
              schema:
                $ref: "#/components/schemas/card_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: Update card
      tags:
        - cards
  /cards/{token}/showpan:
    get:
      description: >-
        Retrieves a PAN (card number).

        For security reasons, the PAN is not fully visible on the card resource
        returned by `GET` `/cards/{token}`.


        This endpoint supports <</core-api/field-filtering, field filtering>>
        and <</core-api/object-expansion, object expansion>>.
      operationId: getCardsTokenShowpan
      parameters:
        - description: |-
            The unique identifier of the card whose PAN you want to retrieve.
            Send a `GET` request to `/cards` to retrieve card tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: Set to `true` to show the CVV2 number in the response.
          explode: true
          in: query
          name: show_cvv_number
          required: false
          schema:
            type: boolean
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                barcode: "25815105237561780909"
                card_product_token: my_cardproduct_01
                created_time: 2021-12-28T18:31:23Z
                cvv_number: "137"
                expedite: false
                expiration: "1220"
                expiration_time: 2026-12-31T23:59:59Z
                fulfillment:
                  card_personalization:
                    images:
                      card:
                        name: my_card_logo.png
                        thermal_color: Black
                      carrier_return_window:
                        name: my_return_address_image.png
                      signature:
                        name: my_signature.png
                    text:
                      name_line_1:
                        value: My card personalization line 1
                      name_line_2:
                        value: My card personalization line 2
                  shipping:
                    care_of_line: my_care_of_value
                    method: FEDEX_REGULAR
                fulfillment_status: DIGITALLY_PRESENTED
                instrument_type: PHYSICAL_MSR
                last_four: "0865"
                last_modified_time: 2022-02-14T19:32:38Z
                pan: "1111111824980865"
                pin_is_set: false
                state: UNACTIVATED
                state_reason: New card
                token: my_user_01_card_02
                user_token: my_user_01
              schema:
                $ref: "#/components/schemas/card_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Card not found
        "500":
          content: {}
          description: Server error
      summary: Show card PAN
      tags:
        - cards
  /cardtransitions:
    post:
      description: >-
        Creates a card state transition to set the state of an existing card.


        If your system uses IVR, you can send a `POST` request to
        `/cards/getbypan` to retrieve a card token, which you can then use in
        your `POST` request to `/cardtransitions`.


        It may not be possible to move a card from one user to another once the
        card has been activated.
      operationId: postCardtransitions
      requestBody:
        content:
          application/json:
            example:
              card_token: my_user_01_card_01
              channel: API
              reason: I want to use this card, so activate it.
              reason_code: "00"
              state: ACTIVE
              token: activate_05
              validations:
                user:
                  birth_date: 1990-01-31T00:00:00Z
            schema:
              $ref: "#/components/schemas/card_transition_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                barcode: "11379418395311581864"
                card_product_token: my_cardproduct_01
                card_token: my_user_01_card_01
                channel: API
                created_time: 2021-11-23T23:28:39Z
                expedite: false
                expiration: "1026"
                expiration_time: 2026-10-31T23:59:59Z
                fulfillment_status: ISSUED
                last_four: "2160"
                pan: "1111115454542160"
                pin_is_set: false
                reason: I want to use this card, so activate it.
                reason_code: "00"
                state: ACTIVE
                token: activate_05
                type: state.activated
                user:
                  metadata:
                    my_name_1: my_value_1
                    my_name_2: my_value_2
                user_token: my_user_01
                validations:
                  user:
                    birth_date: true
                    phone: false
                    random_name_line1_postfix: false
                    ssn: false
              schema:
                $ref: "#/components/schemas/card_transition_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "409":
          content: {}
          description: Token already associated with a different payload
        "422":
          content: {}
          description: Cardholder not active
        "500":
          content: {}
          description: Server error
      summary: Create card transition
      tags:
        - card transitions
  /cardtransitions/card/{token}:
    get:
      description: >-
        Retrieves a list of the transitions for a specific card.


        This endpoint supports <</core-api/field-filtering, field filtering>>
        and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getCardtransitionsCardToken
      parameters:
        - description: The unique identifier of the card.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: The number of card transitions to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 2
                data:
                  - barcode: "11379418395311581864"
                    card_product_token: my_cardproduct_01
                    card_token: my_user_01_card_01
                    channel: API
                    created_time: 2021-01-12T19:54:12Z
                    expedite: false
                    expiration: "1026"
                    expiration_time: 2026-10-31T23:59:59Z
                    fulfillment_status: ISSUED
                    last_four: "2160"
                    pan: "1111115454542160"
                    pin_is_set: false
                    reason: I do not want to use this card, so suspend it.
                    reason_code: "01"
                    state: SUSPENDED
                    token: suspend_01
                    type: state.suspended
                    user:
                      metadata:
                        my_name_1: my_value_1
                        my_name_2: my_value_2
                    user_token: my_user_01
                    validations:
                      user:
                        birth_date: true
                        phone: false
                        random_name_line1_postfix: false
                        ssn: false
                  - barcode: "11379418395311581864"
                    card_product_token: my_cardproduct_01
                    card_token: my_user_01_card_01
                    channel: API
                    created_time: 2022-02-23T23:28:39Z
                    expedite: false
                    expiration: "1026"
                    expiration_time: 2027-10-31T23:59:59Z
                    fulfillment_status: ISSUED
                    last_four: "2160"
                    pan: "1111115454542160"
                    pin_is_set: false
                    reason: I want to use this card, so activate it.
                    reason_code: "00"
                    state: ACTIVE
                    token: activate_05
                    type: state.activated
                    user:
                      metadata:
                        my_name_1: my_value_1
                        my_name_2: my_value_2
                    user_token: my_user_01
                    validations:
                      user:
                        birth_date: true
                        phone: false
                        random_name_line1_postfix: false
                        ssn: false
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/CardTransitionListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List transitions for card
      tags:
        - card transitions
  /cardtransitions/{token}:
    get:
      description: |-
        Retrieves a specific card transition.
        This endpoint supports <</core-api/field-filtering, field filtering>>.
      operationId: getCardtransitionsToken
      parameters:
        - description: >-
            The unique identifier of the card transition.

            Send a `GET` request to `/cardtransitions/card/{token}` to retrieve
            card transition tokens for a specific card.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                barcode: "11379418395311581864"
                card_product_token: my_cardproduct_01
                card_token: my_user_01_card_01
                channel: API
                created_time: 2022-02-23T23:28:39Z
                expedite: false
                expiration: "1026"
                expiration_time: 2027-10-31T23:59:59Z
                fulfillment_status: ISSUED
                last_four: "2160"
                pan: "1111115454542160"
                pin_is_set: false
                reason: I want to use this card, so activate it.
                reason_code: "00"
                state: ACTIVE
                token: activate_05
                type: state.activated
                user:
                  metadata:
                    my_name_1: my_value_1
                    my_name_2: my_value_2
                user_token: my_user_01
                validations:
                  user:
                    birth_date: true
                    phone: false
                    random_name_line1_postfix: false
                    ssn: false
              schema:
                $ref: "#/components/schemas/card_transition_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Transition not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve card transition
      tags:
        - card transitions
  /commandomodes:
    get:
      description: >-
        Retrieve a list of Commando Mode control sets.


        This endpoint supports <</core-api/field-filtering, field filtering>>
        and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getCommandomodes
      parameters:
        - description: The number of Commando Mode control sets to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data:
                  - commando_mode_enables:
                      program_funding_source: pgm_funding_src_1
                      velocity_controls:
                        - vel_control_1
                    created_time: 2022-02-14T18:48:10Z
                    current_state:
                      channel: SYSTEM
                      commando_enabled: false
                      reason: New Commando Mode created
                    last_modified_time: 2022-02-14T18:48:10Z
                    program_gateway_funding_source_token: pgm_gateway_src_1
                    token: commando_mode_1
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/CommandoModeListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List Commando Mode control sets
      tags:
        - Commando Mode
  /commandomodes/transitions/{token}:
    get:
      description: Retrieve a specific Commando Mode control set transition.
      operationId: getCommandomodesTransitionsToken
      parameters:
        - description: The unique identifier of the Commando Mode control set transition.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                commando_mode_token: commando_mode_1
                created_time: 2022-02-14T18:48:10Z
                token: commando_mode_1_transition
                transition:
                  channel: API
                  commando_enabled: true
                  reason: Lost connection
                  user_name: rhowse
              schema:
                $ref: "#/components/schemas/commando_mode_transition_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Transition not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve Commando Mode transition
      tags:
        - Commando Mode
  /commandomodes/{commandomode_token}/transitions:
    get:
      description: >-
        Retrieve a list of Commando Mode transitions for a specific control set.


        This endpoint supports <</core-api/field-filtering, field filtering>>
        and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getCommandomodesCommandomodetokenTransitions
      parameters:
        - description: The number of Commando Mode control set transitions to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
        - description: The unique identifier of the Commando Mode control set.
          explode: false
          in: path
          name: commandomode_token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data:
                  - commando_mode_token: commando_mode_1
                    created_time: 2022-02-14T18:48:10Z
                    token: commando_mode_1_transition
                    transition:
                      channel: API
                      commando_enabled: true
                      reason: Lost connection
                    user_name: rhowse
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/CommandoModeTransitionListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List Commando Mode transitions set
      tags:
        - Commando Mode
  /commandomodes/{token}:
    get:
      description: Retrieve a specific Commando Mode control set.
      operationId: getCommandomodesToken
      parameters:
        - description: The unique identifier of the Commando Mode control set you want to
            retrieve.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                commando_mode_enables:
                  program_funding_source: pgm_funding_src_1
                  velocity_controls:
                    - vel_control_1
                created_time: 2022-02-14T18:48:10Z
                current_state:
                  channel: SYSTEM
                  commando_enabled: false
                  reason: New Commando Mode created
                last_modified_time: 2022-02-14T18:48:10Z
                program_gateway_funding_source_token: pgm_gateway_src_1
                token: commando_mode_1
              schema:
                $ref: "#/components/schemas/commando_mode_response"
          description: Success
        "404":
          content: {}
          description: Commando Mode not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve Commando Mode control set
      tags:
        - Commando Mode
  /depositaccounts:
    post:
      operationId: createAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/direct_deposit_account_request"
        description: Create direct deposit account for cardholder
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/direct_deposit_account_response"
          description: Created
        "404":
          content: {}
          description: Not found
        "500":
          content: {}
          description: Server error
      summary: Creates new direct deposit account for cardholder.
      tags:
        - direct deposit accounts
  /depositaccounts/account/{account_number}/user:
    get:
      operationId: getUserForDirectDepositAccount
      parameters:
        - description: Get user associated with direct deposit account number
          explode: false
          in: path
          name: account_number
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/direct_deposit_account_response"
          description: Success
        "404":
          content: {}
          description: Not found
        "500":
          content: {}
          description: Server error
      summary: Get User for Plain Text Account Number
      tags:
        - direct deposit accounts
  /depositaccounts/transitions:
    post:
      operationId: createTransition
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/direct_deposit_account_transition_request"
        description: Create transition for direct deposit account
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/direct_deposit_account_transition_response"
          description: Created
        "404":
          content: {}
          description: Not found
        "500":
          content: {}
          description: Server error
      summary: Creates new transition for a direct deposit account.
      tags:
        - direct deposit accounts
  /depositaccounts/transitions/{token}:
    get:
      operationId: getDirectDepositAccountTransition
      parameters:
        - description: Get specific direct deposit account transition
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/direct_deposit_account_transition_response"
          description: Success
        "404":
          content: {}
          description: Not found
        "500":
          content: {}
          description: Server error
      summary: Get direct deposit account transition.
      tags:
        - direct deposit accounts
  /depositaccounts/user/{token}:
    get:
      operationId: getUserDirectDepositAccounts
      parameters:
        - description: Number of users to retrieve
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Start index
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Sort order
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
        - description: Direct deposit account status
          explode: true
          in: query
          name: state
          required: false
          schema:
            $ref: "#/components/schemas/getUserDirectDepositAccountsState"
          style: form
        - description: Get specific direct deposit account
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectDepositAccountListResponse"
          description: Success
        "404":
          content: {}
          description: Not found
        "500":
          content: {}
          description: Server error
      summary: List all specific direct deposit accounts.
      tags:
        - direct deposit accounts
  /depositaccounts/{token}:
    get:
      operationId: getDirectDepositAccount
      parameters:
        - description: Get specific direct deposit account
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/direct_deposit_account_response"
          description: Success
        "404":
          content: {}
          description: Not found
        "500":
          content: {}
          description: Server error
      summary: Get direct deposit account.
      tags:
        - direct deposit accounts
    put:
      deprecated: true
      operationId: update
      parameters:
        - explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DepositAccountUpdateRequest"
        description: Update direct deposit account
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/direct_deposit_account_response"
          description: Success
        "404":
          content: {}
          description: Not found
        "500":
          content: {}
          description: Server error
      summary: Update direct deposit account.
      tags:
        - direct deposit accounts
  /depositaccounts/{token}/cdd:
    get:
      operationId: getCDDInfo
      parameters:
        - description: Get CDD info for a specific DDA token
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/customer_due_diligence_response"
          description: Success
        "404":
          content: {}
          description: Not found
        "500":
          content: {}
          description: Server error
      summary: Get direct deposit account transition list for card holder.
      tags:
        - direct deposit accounts
  /depositaccounts/{token}/cdd/{cddtoken}:
    put:
      operationId: updateCDDInfo
      parameters:
        - explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - explode: false
          in: path
          name: cddtoken
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/customer_due_diligence_update_response"
        description: Update CDD answers
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/customer_due_diligence_response"
          description: Success
        "404":
          content: {}
          description: Not found
        "500":
          content: {}
          description: Server error
      summary: Update CDD answers for Direct Deposit Account
      tags:
        - direct deposit accounts
  /depositaccounts/{user_token}/transitions:
    get:
      operationId: getTransitionList
      parameters:
        - description: Number of users to retrieve
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Start index
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Sort order
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
        - description: Get direct deposit account transition list for user
          explode: false
          in: path
          name: user_token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/direct_deposit_account_transition_response"
          description: Success
        "404":
          content: {}
          description: Not found
        "500":
          content: {}
          description: Server error
      summary: Get direct deposit account transition list for card holder.
      tags:
        - direct deposit accounts
  /digitalwalletprovisionrequests/androidpay:
    post:
      description: >-
        Use this endpoint to return card data for use in provisioning a digital
        wallet token into a Google Pay digital wallet.


        The returned card data is encrypted using the digital wallet provider’s
        encryption key, thereby reducing your PCI compliance overhead.
      operationId: postDigitalwalletprovisionrequestsAndroidpay
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/digital_wallet_android_pay_provision_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/digital_wallet_android_pay_provision_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Card not found
        "500":
          content: {}
          description: Server error
      summary: Create digital wallet token provision request for Google Pay
      tags:
        - Digital Wallets Management
  /digitalwalletprovisionrequests/applepay:
    post:
      description: >-
        Use this endpoint to return card data for use in provisioning a digital
        wallet token into an Apple Wallet.


        The returned card data is encrypted using the digital wallet provider’s
        encryption key, thereby reducing your PCI compliance overhead.
      operationId: postDigitalwalletprovisionrequestsApplepay
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/digital_wallet_apple_pay_provision_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/digital_wallet_apple_pay_provision_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Card not found
        "500":
          content: {}
          description: Server error
      summary: Create digital wallet token provision request for Apple Pay
      tags:
        - Digital Wallets Management
  /digitalwalletprovisionrequests/samsungpay:
    post:
      description: >-
        [NOTE]

        This endpoint is limited in availability.

        For more information, contact your Marqeta representative.


        Use this endpoint to return card data for use in provisioning a digital
        wallet token into an Samsung Pay digital wallet.


        The returned card data is encrypted using the digital wallet provider’s
        encryption key, thereby reducing your PCI compliance overhead.
      operationId: postDigitalwalletprovisionrequestsSamsungpay
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/digital_wallet_samsung_pay_provision_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/digital_wallet_samsung_pay_provision_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Card not found
        "500":
          content: {}
          description: Server error
      summary: Create digital wallet token provision request for Samsung Pay
      tags:
        - Digital Wallets Management
  /digitalwalletprovisionrequests/xpay:
    post:
      description: >-
        [NOTE]

        This endpoint is limited in availability.

        For more information, contact your Marqeta representative.


        Use this endpoint to return card data for use in provisioning a digital
        wallet token into an XPay digital wallet.


        The returned card data is encrypted using the digital wallet provider’s
        encryption key, thereby reducing your PCI compliance overhead.
      operationId: postDigitalwalletprovisionrequestsXPay
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/digital_wallet_x_pay_provision_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/digital_wallet_x_pay_provision_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Card not found
        "500":
          content: {}
          description: Server error
      summary: Create digital wallet token provision request for XPay
      tags:
        - Digital Wallets Management
  /digitalwallets/wpp/applePayJWT:
    post:
      description: |-
        [NOTE]
        This endpoint is currently in beta and subject to change.
        For more information, contact your Marqeta representative.

        Use this endpoint to add a card to Apple Pay via a web application.
      operationId: generateApplePayWPPJWT
      parameters:
        - description: Random pseudo unique value used for troubleshooting between
            multiple parties. 36 char max
          example: 123d837e-958a-4e9f-bc97-4843ec948123
          explode: false
          in: header
          name: req-sys-id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/request_for_apple_pay_wpp_JWT"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/web_push_provisioning_apple_pay_JWT_response"
          description: Ok
          headers:
            req-sys-id:
              description: Random pseudo unique value used for troubleshooting between
                multiple parties. 36 char max
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_message_from_web_push_provisioning_request"
          description: Bad request
          headers:
            req-sys-id:
              description: Random pseudo unique value used for troubleshooting between
                multiple parties. 36 char max
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_message_from_web_push_provisioning_request"
          description: Unauthorized
          headers:
            req-sys-id:
              description: Random pseudo unique value used for troubleshooting between
                multiple parties. 36 char max
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_message_from_web_push_provisioning_request"
          description: Internal Server Error
          headers:
            req-sys-id:
              description: Random pseudo unique value used for troubleshooting between
                multiple parties. 36 char max
              explode: false
              schema:
                type: string
              style: simple
      summary: Create request for Apple Pay web push provisioning
      tags:
        - Digital Wallets Management
  /digitalwallets/wpp/googlePayPushProvisioningNotification:
    post:
      description: |-
        [NOTE]
        This endpoint is currently in beta and subject to change.
        For more information, contact your Marqeta representative.

        Use this endpoint to add a card to Google Pay via a web application.
      operationId: sendOPCDataToGooglePay
      parameters:
        - description: Random pseudo unique value used for troubleshooting between
            multiple parties. 36 char max
          example: 123d837e-958a-4e9f-bc97-4843ec948123
          explode: false
          in: header
          name: req-sys-id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sending_provisioning_data_to_google_pay_backend_req\
                uest"
        required: true
      responses:
        "202":
          content: {}
          description: Accepted
          headers:
            req-sys-id:
              description: Random pseudo unique value used for troubleshooting between
                multiple parties. 36 char max
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_message_from_web_push_provisioning_request"
          description: Bad request
          headers:
            req-sys-id:
              description: Random pseudo unique value used for troubleshooting between
                multiple parties. 36 char max
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_message_from_web_push_provisioning_request"
          description: Unauthorized
          headers:
            req-sys-id:
              description: Random pseudo unique value used for troubleshooting between
                multiple parties. 36 char max
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_message_from_web_push_provisioning_request"
          description: Internal Server Error
          headers:
            req-sys-id:
              description: Random pseudo unique value used for troubleshooting between
                multiple parties. 36 char max
              explode: false
              schema:
                type: string
              style: simple
      summary: Create request for Google Pay web push provisioning
      tags:
        - Digital Wallets Management
  /digitalwallettokens:
    get:
      description: Use this endpoint to retrieve a list of digital wallet tokens.
      operationId: getDigitalwallettokens
      parameters:
        - description: Number of digital wallet tokens to retrieve
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 10
            format: int32
            type: integer
          style: form
        - description: Start index
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Comma-delimited list of fields to return (e.g. field_1,field_2,..).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: Sort order
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
        - description: Start date (yyyy-MM-dd)
          explode: true
          in: query
          name: start_date
          required: false
          schema:
            type: string
          style: form
        - description: End date (yyyy-MM-dd)
          explode: true
          in: query
          name: end_date
          required: false
          schema:
            type: string
          style: form
        - description: PAN reference ID
          explode: true
          in: query
          name: pan_reference_id
          required: false
          schema:
            type: string
          style: form
        - description: Token reference ID
          explode: true
          in: query
          name: token_reference_id
          required: false
          schema:
            type: string
          style: form
        - description: Correlation ID
          explode: true
          in: query
          name: correlation_id
          required: false
          schema:
            type: string
          style: form
        - description: Comma-delimited list of digital wallet token types to display e.g.
            DEVICE_SECURE_ELEMENT | MERCHANT_CARD_ON_FILE | DEVICE_CLOUD_BASED |
            ECOMMERCE_DIGITAL_WALLET | PSEUDO_ACCOUNT
          explode: true
          in: query
          name: token_type
          required: false
          schema:
            type: string
          style: form
        - description: Comma-delimited list of digital wallet token wallet providers to
            display e.g. APPLE_PAY | ANDROID_PAY| SAMSUNG_PAY | MICROSOFT_PAY |
            VISA_CHECKOUT | FACEBOOK | NETFLIX | UNKNOWN
          explode: true
          in: query
          name: token_requestor_name
          required: false
          schema:
            type: string
          style: form
        - description: Comma-delimited list of digital wallet token states to display e.g.
            REQUESTED | REQUEST_DECLINED | TERMINATED | SUSPENDED | ACTIVE
          explode: true
          in: query
          name: state
          required: false
          schema:
            type: string
          style: form
        - description: Embed
          explode: true
          in: query
          name: embed
          required: false
          schema:
            $ref: "#/components/schemas/getDigitalwallettokensEmbed"
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DigitalWalletTokenListResponse"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: List digital wallet tokens
      tags:
        - Digital Wallets Management
  /digitalwallettokens/card/{card_token}:
    get:
      description: >-
        Use this endpoint to return an array of all digital wallet tokens for a
        particular card.


        This endpoint supports <</core-api/sorting-and-pagination, pagination>>.
      operationId: getDigitalwallettokensCardCardtoken
      parameters:
        - description: Card token
          explode: false
          in: path
          name: card_token
          required: true
          schema:
            type: string
          style: simple
        - description: Number of items to retrieve
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Start index
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Sort order
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DigitalWalletTokenListResponse"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Card not found
        "500":
          content: {}
          description: Server error
      summary: List digital wallet tokens for card
      tags:
        - Digital Wallets Management
  /digitalwallettokens/{token}:
    get:
      description: Use this endpoint to retrieve a specific digital wallet token.
      operationId: getDigitalwallettokensToken
      parameters:
        - description: Digital wallet token
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/digital_wallet_token"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Card not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve digital wallet token
      tags:
        - Digital Wallets Management
  /digitalwallettokens/{token}/showtokenpan:
    get:
      description: >-
        Use this endpoint to retrieve a digital wallet token with the entire PAN
        displayed.

        The PAN returned is of the digital wallet token and not of the card.

        (For security reasons, the PAN is not fully visible on the digital
        wallet token returned by `GET` `/digitalwallettokens/{token}`.)


        [WARNING]

        Sending a request to this endpoint requires PCI DSS compliance.

        You must comply with PCI DSS data security requirements if you want to
        store, transmit, or process sensitive card data such as the cardholder’s
        primary account number (PAN), personal identification number (PIN), and
        card expiration date.
      operationId: getDigitalwallettokensTokenShowtokenpan
      parameters:
        - description: Digital wallet token
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/digital_wallet_token"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Card not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve digital wallet token PAN
      tags:
        - Digital Wallets Management
  /digitalwallettokentransitions:
    post:
      description: Use this endpoint to transition a digital wallet token from one
        state to another.
      operationId: postDigitalwallettokentransitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/digital_wallet_token_transition_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/digital_wallet_token_transition_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "409":
          content: {}
          description: Token already associated with a different payload
        "500":
          content: {}
          description: Server error
      summary: Create digital wallet token transition
      tags:
        - Digital Wallets Management
  /digitalwallettokentransitions/digitalwallettoken/{token}:
    get:
      description: >-
        Use this endpoint to return an array of all transitions for a particular
        digital wallet token.


        This endpoint supports <</core-api/field-filtering, field filtering>>,
        <</core-api/sorting-and-pagination, pagination>>, and
        <</core-api/sorting-and-pagination, sorting>>.
      operationId: getDigitalwallettokentransitionsDigitalwallettokenToken
      parameters:
        - description: Digital wallet token
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: Number of digital wallet transitions to retrieve
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Start index
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Comma-delimited list of fields to return (e.g. field_1,field_2,..).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: Sort order
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -id
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DigitalWalletTokenTransitionListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List transitions for digital wallet token
      tags:
        - Digital Wallets Management
  /digitalwallettokentransitions/{token}:
    get:
      description: >-
        Use this endpoint to retrieve a specific digital wallet token
        transition.


        This endpoint supports <</core-api/field-filtering, field filtering>>.
      operationId: getDigitalwallettokentransitionsToken
      parameters:
        - description: Digital wallet transition token
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: Comma-delimited list of fields to return (e.g. field_1,field_2,..).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/digital_wallet_token_transition_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Transition not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve digital wallet token transition
      tags:
        - Digital Wallets Management
  /directdeposits:
    get:
      operationId: getDirectdeposits
      parameters:
        - description: The number of direct deposit records to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            maximum: 100
            type: integer
          style: form
        - description: Start index
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Reversed after grace period
          explode: true
          in: query
          name: reversed_after_grace_period
          required: false
          schema:
            type: boolean
          style: form
        - description: User token
          explode: true
          in: query
          name: user_token
          required: false
          schema:
            type: string
          style: form
        - description: Business token
          explode: true
          in: query
          name: business_token
          required: false
          schema:
            type: string
          style: form
        - description: "Comma-delimited list of direct deposit states to display e.g.
            PENDING | REVERSED | APPLIED | REJECTED "
          explode: true
          in: query
          name: direct_deposit_state
          required: false
          schema:
            $ref: "#/components/schemas/getDirectdepositsDirectDepositState"
          style: form
        - description: Start Settlement Date
          explode: true
          in: query
          name: start_settlement_date
          required: false
          schema:
            type: string
          style: form
        - description: End Settlement Date
          explode: true
          in: query
          name: end_settlement_date
          required: false
          schema:
            type: string
          style: form
        - description: Sort order
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectDepositListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Not found
        "500":
          content: {}
          description: Server error
      summary: Retrieves a list of all direct deposit records for your program.
      tags:
        - direct deposits
  /directdeposits/accounts/{user_or_business_token}:
    get:
      deprecated: true
      operationId: getDirectdepositsAccountsUserorbusinesstoken
      parameters:
        - explode: false
          in: path
          name: user_or_business_token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deposit_account"
          description: Success
        "400":
          content: {}
          description: Cardholder not found
        "404":
          content: {}
          description: Account not found
        "500":
          content: {}
          description: Server error
      summary: Returns an account and routing number which can be used for direct
        deposit
      tags:
        - direct deposits
    put:
      deprecated: true
      operationId: putDirectdepositsAccountsUserorbusinesstoken
      parameters:
        - description: User or business token
          explode: false
          in: path
          name: user_or_business_token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deposit_account_update_request"
        description: Deposit account update request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deposit_account"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: Updates a specific direct deposit account
      tags:
        - direct deposits
  /directdeposits/transitions:
    get:
      operationId: getDirectdepositsTransitions
      parameters:
        - description: Number of direct deposit transitions to retrieve
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            maximum: 100
            type: integer
          style: form
        - description: User token
          explode: true
          in: query
          name: user_token
          required: false
          schema:
            type: string
          style: form
        - description: Business token
          explode: true
          in: query
          name: business_token
          required: false
          schema:
            type: string
          style: form
        - description: Direct deposit token
          explode: true
          in: query
          name: direct_deposit_token
          required: false
          schema:
            type: string
          style: form
        - description: Start index
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Sort order
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
        - description: "Comma-delimited list of direct deposit states to display e.g.
            PENDING | REVERSED | APPLIED | REJECTED "
          explode: true
          in: query
          name: states
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectDepositTransitionListResponse"
          description: Success
        "404":
          content: {}
          description: Not found
        "500":
          content: {}
          description: Server error
      summary: Returns a list of direct deposit transitions
      tags:
        - direct deposits
    post:
      operationId: postDirectdepositsTransitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DirectDepositTransitionRequest"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectDepositTransitionResponse"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: Creates a direct deposit transition
      tags:
        - direct deposits
  /directdeposits/transitions/{token}:
    get:
      operationId: getDirectdepositsTransitionsToken
      parameters:
        - explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectDepositTransitionResponse"
          description: Success
        "404":
          content: {}
          description: Direct deposit transition not found
        "500":
          content: {}
          description: Server error
      summary: Returns a direct deposit transition
      tags:
        - direct deposits
  /directdeposits/{token}:
    get:
      operationId: getDirectdepositsToken
      parameters:
        - explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DepositDepositResponse"
          description: Success
        "404":
          content: {}
          description: Direct deposit entry not found
        "500":
          content: {}
          description: Server error
      summary: Returns a direct deposit entry
      tags:
        - direct deposits
  /fees:
    get:
      description: >-
        Use this endpoint to list existing fees.


        This endpoint supports <</core-api/field-filtering, field filtering>>
        and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getFees
      parameters:
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data[]:
                  active: true
                  amount: 3
                  created_time: 2021-05-11T18:03:39Z
                  currency_code: USD
                  last_modified_time: 2021-05-11T18:03:39Z
                  name: My Fee 02
                  real_time_assessment:
                    domestic_enabled: true
                    international_enabled: true
                    transaction_type: authorization
                  tags: My Tags
                  token: my_fee_02
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/FeeListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List fees
      tags:
        - fees
    post:
      description: >-
        Use this endpoint to create a fee.

        Add the source details to the body of the request in
        link:http://www.json.org/[JSON, window="_blank"] format.
      operationId: postFees
      requestBody:
        content:
          application/json:
            example:
              amount: 1
              currency_code: USD
              name: My Fee 01
              real_time_assessment:
                domestic_enabled: true
                international_enabled: true
                transaction_type: authorization
              tags: My Tags
              token: my_fee_01
            schema:
              $ref: "#/components/schemas/fee_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                active: true
                amount: 1
                created_time: 2021-05-11T17:57:21Z
                currency_code: USD
                last_modified_time: 2021-05-11T17:57:21Z
                name: My Fee 01
                real_time_assessment:
                  domestic_enabled: true
                  international_enabled: true
                  transaction_type: authorization
                tags: My Tags
                token: my_fee_01
              schema:
                $ref: "#/components/schemas/fee"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "409":
          content: {}
          description: Request already processed with a different payload
        "500":
          content: {}
          description: Server error
      summary: Create fee
      tags:
        - fees
  /fees/{token}:
    get:
      description: |-
        Use this endpoint to retrieve a fee.
        Include the `token` path parameter to specify the fee to return.
      operationId: getFeesToken
      parameters:
        - description: The unique identifier of the `fees` object.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                active: true
                amount: 1
                created_time: 2021-05-11T17:57:21Z
                currency_code: USD
                last_modified_time: 2021-05-11T17:57:21Z
                name: My Fee 01
                real_time_assessment:
                  domestic_enabled: true
                  international_enabled: true
                  transaction_type: authorization
                tags: My Tags
                token: my_fee_01
              schema:
                $ref: "#/components/schemas/fee"
          description: Success
        "404":
          content: {}
          description: Fee not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve fee
      tags:
        - fees
    put:
      description: |-
        Use this endpoint to update a fee.
        Include the `token` as a path parameter to indicate the fee to update.
      operationId: putFeesToken
      parameters:
        - description: The unique identifier of the `fees` object.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              active: false
            schema:
              $ref: "#/components/schemas/fee_update_request"
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                active: false
                amount: 1
                created_time: 2021-05-11T17:57:21Z
                currency_code: USD
                last_modified_time: 2021-05-11T17:57:21Z
                name: My Fee 01
                real_time_assessment:
                  domestic_enabled: true
                  international_enabled: true
                  transaction_type: authorization
                tags: My Tags
                token: my_fee_01
              schema:
                $ref: "#/components/schemas/fee"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: Update fee
      tags:
        - fees
  /feetransfers:
    post:
      description: >-
        Use this endpoint to create a fee transfer.

        You must pass in either `user_token` or `business_token` to associate a
        user or business with the fee transfer.


        This is an all-or-nothing operation.

        When more than one fee is present, you must assess either all fees, or
        no fees.


        [NOTE]

        This feature is currently in beta and subject to change. 

        It also requires additional activation steps. 

        To learn more about the Beta program for this feature and about
        activating it for your program, contact your Marqeta representative.
      operationId: postFeetransfers
      requestBody:
        content:
          application/json:
            example:
              business_token: my_business_01
              fees:
                - memo: Initiation fee
                  token: my_fee_01
              token: my_feetransfer_01
              user_token: my_user_01
            schema:
              $ref: "#/components/schemas/fee_transfer_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                business_token: my_business_01
                created_time: 2021-05-11T19:05:55Z
                fees:
                  - fee:
                      active: true
                      amount: 1
                      created_time: 2021-05-11T17:57:21Z
                      currency_code: USD
                      last_modified_time: 2021-05-11T17:57:21Z
                      name: My Fee 01
                      real_time_assessment:
                        domestic_enabled: true
                        international_enabled: true
                        transaction_type: authorization
                      tags: My Tags
                      token: my_fee_01
                    memo: Initiation fee
                    token: my_fee_01
                    transaction_token: "162"
                token: my_feetransfer_01
                user_token: my_user_01
              schema:
                $ref: "#/components/schemas/fee_transfer_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "409":
          content: {}
          description: Request already processed with a different payload
        "422":
          content: {}
          description: Rule violations
        "500":
          content: {}
          description: Server error
      summary: Create fee transfer
      tags:
        - fee transfers
  /feetransfers/{token}:
    get:
      description: >-
        Use this endpoint to retrieve a specific fee transfer.

        Include the fee transfer `token` path parameter to specify the fee
        transfer to return.
      operationId: getFeetransfersToken
      parameters:
        - description: Identifies the peer transfer to retrieve.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                business_token: my_business_01
                created_time: 2021-05-11T19:05:55Z
                fees:
                  - fee:
                      active: true
                      amount: 1
                      created_time: 2021-05-11T17:57:21Z
                      currency_code: USD
                      last_modified_time: 2021-05-11T17:57:21Z
                      name: My Fee 01
                      real_time_assessment:
                        domestic_enabled: true
                        international_enabled: true
                        transaction_type: authorization
                      tags: My Tags
                      token: my_fee_01
                    memo: Initiation fee
                    token: my_fee_01
                    transaction_token: "162"
                token: my_feetransfer_01
                user_token: my_user_01
              schema:
                $ref: "#/components/schemas/fee_transfer_response"
          description: Success
        "404":
          content: {}
          description: Fee transfer not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve fee transfer
      tags:
        - fee transfers
  /fundingsources/ach:
    post:
      description: >-
        Create an ACH funding source for an existing account holder.

        Specify the account holder of the funding source by passing a user or
        business token.


        When adding an ACH funding source, a small amount is deposited in the
        bank account as a test.

        The test deposit should be reflected in the account after two to three
        business days.

        You must then make an API call to verify the deposit amount in order to
        activate the ACH account.

        See
        <</core-api/account-holder-funding-sources#putFundingsourcesAchFundingsourcetoken,
        Verify or Update ACH Funding Source>> on this page for more information.


        The response body returns details about the account, including the
        verification status.

        Possible ACH verification status values include `VERIFICATION_PENDING`,
        `ACH_VERIFIED`, and `ACH_FAILED`.
      operationId: postFundingsourcesAch
      requestBody:
        content:
          application/json:
            example:
              account_number: "987654321"
              account_type: savings
              is_default_account: false
              name_on_account: Jane Doe
              routing_number: "121000358"
              token: my_user_01_fundingsource_token_01
              user_token: my_user_01
              verification_notes: These are my verification notes.
              verification_override: true
            schema:
              $ref: "#/components/schemas/ach_model"
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                account_suffix: "4321"
                account_type: savings
                active: true
                created_time: 2021-02-26T18:46:06Z
                date_sent_for_verification: 2021-02-27T07:36:05Z
                date_verified: 2021-02-27T11:03:45Z
                is_default_account: false
                last_modified_time: 2021-03-26T12:44:02Z
                name_on_account: Jane Doe
                token: my_user_01_fundingsource_token_01
                user_token: my_user_01
                verification_notes: These are my verification notes.
                verification_override: true
                verification_status: ACH_VERIFIED
              schema:
                $ref: "#/components/schemas/ach_response_model"
          description: Success
        "400":
          content: {}
          description: Bad request
        "409":
          content: {}
          description: Token already associated with a different payload
        "500":
          content: {}
          description: Server error
      summary: Create ACH source
      tags:
        - Account Holder Funding Sources
  /fundingsources/ach/partner:
    post:
      description: TBD
      operationId: postFundingsourcesAchPartner
      requestBody:
        content:
          application/json:
            example:
              is_default_account: false
              partner: PLAID
              partner_account_link_reference_token: processor-sandbox-reference-token
              token: my_user_01_fundingsource_token_01
              user_token: my_user_01
            schema:
              $ref: "#/components/schemas/ach_partner_request_model"
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                account_suffix: "4321"
                account_type: savings
                active: true
                created_time: 2021-02-26T18:46:06Z
                date_sent_for_verification: 2021-02-27T07:36:05Z
                date_verified: 2021-02-27T11:03:45Z
                is_default_account: false
                last_modified_time: 2021-03-26T12:44:02Z
                name_on_account: Jane Doe
                partner: PLAID
                partner_account_link_reference_token: processor-sandbox-reference-token
                token: my_user_01_fundingsource_token_01
                user_token: my_user_01
                verification_notes: These are my verification notes.
                verification_override: true
                verification_status: ACH_VERIFIED
              schema:
                $ref: "#/components/schemas/ach_response_model"
          description: Success
        "400":
          content: {}
          description: Bad request
        "409":
          content: {}
          description: Token already associated with a different payload
        "500":
          content: {}
          description: Server error
      summary: Create ACH source
      tags:
        - Account Holder Funding Sources
  /fundingsources/ach/{funding_source_token}:
    get:
      description: >-
        Retrieve a specific ACH funding source.


        The response body returns details about the account, including the
        verification status.

        Possible ACH verification status values are: `VERIFICATION_PENDING`,
        `ACH_VERIFIED`, and `ACH_FAILED`.
      operationId: getFundingsourcesAchFundingsourcetoken
      parameters:
        - description: The unique identifier of the funding source.
          explode: false
          in: path
          name: funding_source_token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                account_suffix: "4321"
                account_type: savings
                active: true
                created_time: 2021-02-26T18:46:06Z
                date_sent_for_verification: 2021-02-27T18:00:00Z
                date_verified: 2021-02-27T18:15:00Z
                is_default_account: false
                last_modified_time: 2021-03-12T04:58:46Z
                name_on_account: Jane Doe
                token: my_user_01_fundingsource_token_01
                user_token: my_user_01
                verification_notes: These are my verification notes.
                verification_override: true
                verification_status: ACH_VERIFIED
              schema:
                $ref: "#/components/schemas/ach_response_model"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve ACH source
      tags:
        - Account Holder Funding Sources
    put:
      description: >-
        Verify or update an ACH funding source.


        If you are verifying the ACH source, include the verification amounts in
        the body of the request.

        ACH verification will fail if the verification amounts are not entered
        in the correct order.

        `verify_amount1` must match the first deposit amount, and
        `verify_amount2` must match the second.


        If you are updating the ACH source, include the `active` field instead.

        The `active` field is the only field you can update.
      operationId: putFundingsourcesAchFundingsourcetoken
      parameters:
        - description: The unique identifier of the funding source.
          explode: false
          in: path
          name: funding_source_token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              active: false
              verify_amount1: 0.43
              verify_amount2: 0.11
            schema:
              $ref: "#/components/schemas/ach_verification_model"
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                account_suffix: "4321"
                account_type: savings
                active: false
                created_time: 2022-01-26T20:03:05Z
                date_sent_for_verification: 2022-01-27T18:00:00Z
                date_verified: 2022-01-27T18:15:00Z
                is_default_account: false
                last_modified_time: 2022-02-26T20:03:05Z
                name_on_account: Jane Doe
                token: my_user_01_fundingsource_token_01
                user_token: my_user_01
                verification_status: ACH_VERIFIED
              schema:
                $ref: "#/components/schemas/ach_response_model"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: Verify or update ACH source
      tags:
        - Account Holder Funding Sources
  /fundingsources/ach/{funding_source_token}/verificationamounts:
    get:
      description: >-
        In your sandbox environment, retrieve the amounts used to verify the
        association with your ACH account.


        Use this endpoint for testing purposes only.

        In production, verification amounts are retrieved from the bank
        statement of the account holder.
      operationId: getFundingsourcesAchFundingsourcetokenVerificationamounts
      parameters:
        - description: The unique identifier of the funding source.
          explode: false
          in: path
          name: funding_source_token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                token: jane_doe_ach_token
                verify_amount1: 0.43
                verify_amount2: 0.11
              schema:
                $ref: "#/components/schemas/ach_verification_model"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: Retrieve ACH verification amounts
      tags:
        - Account Holder Funding Sources
  /fundingsources/addresses:
    post:
      description: >-
        Use this endpoint to create an address resource.


        When creating the address, you must pass the token of either an existing
        user in the `user_token` field or an existing business in the
        `business_token` field.

        Do not pass both.
      operationId: postFundingsourcesAddresses
      requestBody:
        content:
          application/json:
            example:
              address_1: 1234 Grove Street
              business_token: my_business_01
              city: Berkeley
              country: USA
              first_name: Jane
              last_name: Doe
              phone: "5104444444"
              postal_code: "94705"
              state: CA
              token: my_funding_source_address_biz_01
              zip: "94705"
            schema:
              $ref: "#/components/schemas/card_holder_address_model"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                active: true
                address_1: 1234 Grove Street
                business_token: my_business_01
                city: Berkeley
                country: USA
                created_time: 2022-02-20T20:04:13Z
                first_name: Jane
                is_default_address: true
                last_modified_time: 2022-02-20T20:04:13Z
                last_name: Doe
                phone: "5104444444"
                postal_code: "94705"
                state: CA
                token: my_funding_source_address_biz_01
                zip: "94705"
              schema:
                $ref: "#/components/schemas/CardholderAddressResponse"
          description: Created
        "400":
          content: {}
          description: Bad request
        "409":
          content: {}
          description: Token already associated with a different payload
        "500":
          content: {}
          description: Server error
      summary: Create address
      tags:
        - Addresses
  /fundingsources/addresses/business/{business_token}:
    get:
      description: |-
        Use this endpoint to list existing addresses for a business.
        This endpoint supports <</core-api/field-filtering, field filtering>>.
      operationId: getFundingsourcesAddressesBusinessBusinesstoken
      parameters:
        - description: The unique identifier of the `business` account holder.
          explode: false
          in: path
          name: business_token
          required: true
          schema:
            type: string
          style: simple
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 2
                data:
                  - active: true
                    address_1: 1234 Grove Street
                    business_token: my_business_01
                    city: Berkeley
                    country: USA
                    created_time: 2022-02-26T21:34:42Z
                    first_name: Jane
                    is_default_address: true
                    last_modified_time: 2022-02-27T18:55:59Z
                    last_name: Doe
                    phone: "5104444444"
                    postal_code: "94705"
                    state: CA
                    token: my_funding_source_address_bus_01
                    zip: "94705"
                  - active: true
                    address_1: 5678 Grove Street
                    business_token: my_business_01
                    city: Berkeley
                    country: USA
                    created_time: 2022-02-25T19:48:30Z
                    first_name: Jane
                    is_default_address: false
                    last_modified_time: 2022-03-25T10:17:38Z
                    last_name: Doe
                    phone: "5104444444"
                    postal_code: "94705"
                    state: CA
                    token: my_funding_source_address_bus_02
                    zip: "94705"
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/CardholderAddressListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Not found
        "500":
          content: {}
          description: Server error
      summary: Lists all addresses for a business
      tags:
        - Addresses
  /fundingsources/addresses/user/{user_token}:
    get:
      description: |-
        Use this endpoint to list existing addresses for a user.
        This endpoint supports <</core-api/field-filtering, field filtering>>.
      operationId: getFundingsourcesAddressesUserUsertoken
      parameters:
        - description: The unique identifier of the `user` account holder.
          explode: false
          in: path
          name: user_token
          required: true
          schema:
            type: string
          style: simple
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 2
                data:
                  - active: true
                    address_1: 1234 Grove Street
                    business_token: my_user_01
                    city: Berkeley
                    country: USA
                    created_time: 2022-02-27T21:34:42Z
                    first_name: Jane
                    is_default_address: true
                    last_modified_time: 2022-02-28T18:55:59Z
                    last_name: Doe
                    phone: "5104444444"
                    postal_code: "94705"
                    state: CA
                    token: my_funding_source_address_user_01
                    zip: "94705"
                  - active: true
                    address_1: 5678 Grove Street
                    business_token: my_user_01
                    city: Berkeley
                    country: USA
                    created_time: 2022-02-25T19:48:30Z
                    first_name: Jane
                    is_default_address: false
                    last_modified_time: 2022-03-25T19:48:30Z
                    last_name: Doe
                    phone: "5104444444"
                    postal_code: "94705"
                    state: CA
                    token: my_funding_source_address_user_02
                    zip: "94705"
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/CardholderAddressListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Not found
        "500":
          content: {}
          description: Server error
      summary: Lists all addresses for a user
      tags:
        - Addresses
  /fundingsources/addresses/{funding_source_address_token}:
    get:
      description: Use this endpoint to retrieve a funding source address.
      operationId: getFundingsourcesAddressesFundingsourceaddresstoken
      parameters:
        - description: The unique identifier of the funding source address.
          explode: false
          in: path
          name: funding_source_address_token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                active: true
                address_1: 1234 Grove Street
                business_token: my_business_01
                city: Berkeley
                country: USA
                created_time: 2022-02-20T20:04:13Z
                first_name: Jane
                is_default_address: true
                last_modified_time: 2022-02-20T20:04:13Z
                last_name: Doe
                phone: "5104444444"
                postal_code: "94705"
                state: CA
                token: my_funding_source_address_biz_01
                zip: "94705"
              schema:
                $ref: "#/components/schemas/CardholderAddressResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve address
      tags:
        - Addresses
    put:
      description: >-
        Use this endpoint to update an address.

        Only values of parameters in the request are modified; all others are
        left unchanged.
      operationId: putFundingsourcesAddressesFundingsourceaddresstoken
      parameters:
        - description: The unique identifier of the funding source address.
          explode: false
          in: path
          name: funding_source_address_token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              address_1: 333 Elm Street
            schema:
              $ref: "#/components/schemas/card_holder_address_update_model"
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                active: true
                address_1: 333 Elm Street
                business_token: my_business_01
                city: Berkeley
                country: USA
                created_time: 2022-02-20T20:04:13Z
                first_name: Jane
                is_default_address: true
                last_modified_time: 2022-02-28T16:00:00Z
                last_name: Doe
                phone: "5104444444"
                postal_code: "94705"
                state: CA
                token: my_funding_source_address_biz_01
                zip: "94705"
              schema:
                $ref: "#/components/schemas/CardholderAddressResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: Updates the account holder address for a funding source
      tags:
        - Addresses
  /fundingsources/business/{business_token}:
    get:
      description: |-
        List funding sources associated with a specific business.

        This endpoint supports <</core-api/field-filtering, field filtering>>.
      operationId: getFundingsourcesBusinessBusinesstoken
      parameters:
        - description: The unique identifier of the `business` account holder.
          explode: false
          in: path
          name: business_token
          required: true
          schema:
            type: string
          style: simple
        - description: The type of funding source to retrieve.
          explode: true
          in: query
          name: type
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data:
                  - account_suffix: "4113"
                    account_type: corporate
                    active: true
                    created_time: 2022-02-26T21:26:13Z
                    exp_date: "1227"
                    is_default_account: true
                    last_modified_time: 2022-02-26T21:26:13Z
                    token: my_paymentcard_funding_source_01
                    type: paymentcard
                    user_token: my_business_01
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/FundingAccountListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: No funding accounts found
        "500":
          content: {}
          description: Server error
      summary: List sources for business
      tags:
        - Account Holder Funding Sources
  /fundingsources/paymentcard:
    post:
      description: >-
        Create a payment card funding source for an existing account holder.

        This endpoint returns the card type and the last four digits of the
        card, and then sets the `active_ field` to `true`.


        Marqeta retains only a tokenized representation of the card number.


        [NOTE]

        This endpoint is only available to its current users.
      operationId: postFundingsourcesPaymentcard
      requestBody:
        content:
          application/json:
            example:
              account_number: "6559906559906557"
              cvv_number: "123"
              exp_date: "1227"
              is_default_account: true
              postal_code: "94608"
              token: my_paymentcard_01
              user_token: my_user_01
            schema:
              $ref: "#/components/schemas/token_request"
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                account_suffix: "6557"
                account_type: corporate
                active: true
                created_time: 2022-02-26T20:00:00Z
                exp_date: "1227"
                is_default_account: true
                last_modified_time: 2022-02-26T21:00:00Z
                token: my_paymentcard_01
                type: paymentcard
                user_token: my_user_01
              schema:
                $ref: "#/components/schemas/payment_card_response_model"
          description: Success
        "400":
          content: {}
          description: Bad request
        "409":
          content: {}
          description: Token already associated with a different payload
        "500":
          content: {}
          description: Server error
      summary: Create payment card source
      tags:
        - Account Holder Funding Sources
  /fundingsources/paymentcard/{funding_source_token}:
    get:
      description: |-
        Retrieve a specific payment card funding source.

        [NOTE]
        This endpoint is only available to its current users.
      operationId: getFundingsourcesPaymentcardFundingsourcetoken
      parameters:
        - description: The unique identifier of the funding source.
          explode: false
          in: path
          name: funding_source_token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                account_suffix: "6557"
                account_type: corporate
                active: true
                created_time: 2022-02-26T20:00:00Z
                exp_date: "1227"
                is_default_account: true
                last_modified_time: 2022-02-26T21:00:00Z
                token: my_paymentcard_01
                type: paymentcard
                user_token: my_user_01
              schema:
                $ref: "#/components/schemas/payment_card_response_model"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve payment card source
      tags:
        - Account Holder Funding Sources
    put:
      description: >-
        Update a payment card funding source.

        Only the values of parameters in the request are modified; all others
        are left unchanged.


        [NOTE]

        This endpoint is only available to its current users.
      operationId: putFundingsourcesFundingsourcetoken
      parameters:
        - description: The unique identifier of the funding source.
          explode: false
          in: path
          name: funding_source_token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              exp_date: "1227"
              is_default_account: false
            schema:
              $ref: "#/components/schemas/token_update_request"
        description: Payment card
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                account_suffix: "6557"
                account_type: DISCOVER
                active: true
                created_time: 2022-02-26T20:00:00Z
                exp_date: "1227"
                is_default_account: false
                last_modified_time: 2022-02-26T21:00:00Z
                token: my_paymentcard_01
                type: paymentcard
                user_token: my_user_01
              schema:
                $ref: "#/components/schemas/payment_card_response_model"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: Update payment card source
      tags:
        - Account Holder Funding Sources
  /fundingsources/program:
    post:
      description: Create a program funding source.
      operationId: postFundingsourcesProgram
      requestBody:
        content:
          application/json:
            example:
              active: true
              name: my_programfundingsource_name
              token: my_programfundingsource_token
            schema:
              $ref: "#/components/schemas/program_funding_source_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                account: 12.003.001.000147
                active: true
                created_time: 2022-02-25T20:46:04Z
                last_modified_time: 2022-02-25T20:46:04Z
                name: my_programfundingsource_name
                token: my_programfundingsource_token
              schema:
                $ref: "#/components/schemas/program_funding_source_response"
          description: Success
        "400":
          content: {}
          description: Invalid fields detected
        "409":
          content: {}
          description: Request already processed with a different payload
        "500":
          content: {}
          description: Server error
      summary: Create program source
      tags:
        - Program Funding Sources
  /fundingsources/program/ach:
    get:
      description: List ACH program funding sources.
      operationId: getAllACHFundingSources
      parameters:
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ACHListResponse"
          description: Success
        "400":
          content: {}
          description: Bad Request
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server error
      summary: List ACH program sources
      tags:
        - Program Funding Sources
    post:
      description: Create an ACH program funding source.
      operationId: postFundingsourcesProgramAch
      requestBody:
        content:
          application/json:
            example:
              account_number: "0888271159"
              account_type: checking
              is_default_account: true
              name_on_account: John Doe
              routing_number: "121000357"
              verification_notes: testing
              verification_override: true
            schema:
              $ref: "#/components/schemas/base_ach_request_model"
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                account_suffix: "1156"
                account_type: checking
                active: true
                created_time: 2022-02-27T18:40:27Z
                is_default_account: true
                last_modified_time: 2022-02-27T18:40:27Z
                name_on_account: John Doe
                token: my_program_ach_source_token
                verification_status: ACH_VERIFIED
              schema:
                $ref: "#/components/schemas/base_ach_response_model"
          description: Success
        "400":
          content: {}
          description: Bad request
        "409":
          content: {}
          description: Token already associated with a different payload
        "500":
          content: {}
          description: Server error
      summary: Create ACH program source
      tags:
        - Program Funding Sources
  /fundingsources/program/{token}:
    get:
      description: Retrieve a specific program funding source, whether active or inactive.
      operationId: getFundingsourcesProgramToken
      parameters:
        - description: The unique identifier of the program funding source.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "201":
          content:
            application/json:
              example:
                account: 12.003.001.000147
                active: true
                created_time: 2022-02-25T20:46:04Z
                last_modified_time: 2022-02-25T20:46:04Z
                name: my_programfundingsource_name
                token: my_programfundingsource_token
              schema:
                $ref: "#/components/schemas/program_funding_source_response"
          description: Success
        "404":
          content: {}
          description: Program funding source not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve program source
      tags:
        - Program Funding Sources
    put:
      description: >-
        Update a program funding source.

        Only the values of parameters specified in the request are modified; all
        others are left unchanged.
      operationId: putFundingsourcesProgramToken
      parameters:
        - description: The unique identifier of the program funding source.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              active: false
              name: your_programfundingsource_name
            schema:
              $ref: "#/components/schemas/program_funding_source_update_request"
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                account: 12.003.001.000147
                active: true
                created_time: 2022-02-25T20:46:04Z
                last_modified_time: 2022-02-25T20:50:00Z
                name: your_programfundingsource_name
                token: my_programfundingsource_token
              schema:
                $ref: "#/components/schemas/program_funding_source_response"
          description: Success
        "400":
          content: {}
          description: Invalid fields detected
        "500":
          content: {}
          description: Server error
      summary: Update program source
      tags:
        - Program Funding Sources
  /fundingsources/programgateway:
    post:
      description: >-
        Creates a program gateway funding source.

        A program gateway funding source is a transaction relay that, when
        configured, allows you to approve or decline transactions in real time.
      operationId: postFundingsourcesProgramgateway
      requestBody:
        content:
          application/json:
            example:
              basic_auth_password: my_20-to-100-character_password
              basic_auth_username: my_username
              name: my_pgfs_name
              token: my_pgfs_token
              url: https://my_secure_domain.com/my_gateway
            schema:
              $ref: "#/components/schemas/gateway_program_funding_source_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                account: 12.003.001.000155
                active: true
                basic_auth_password: my_20-to-100-character_password
                basic_auth_username: my_username
                created_time: 2022-02-28T20:00:00Z
                custom_header:
                  my_header_name_1: my_value_1
                  my_header_name_2: my_value_2
                  my_header_name_3: my_value_3
                last_modified_time: 2022-02-28T20:00:00Z
                name: my_pgfs_name
                timeout_millis: 3000
                token: my_pgfs_token
                url: https://my_secure_domain.com/my_gateway
                use_mtls: false
                version: "2"
              schema:
                $ref: "#/components/schemas/gateway_program_funding_source_response"
          description: Success
        "400":
          content: {}
          description: Invalid fields detected
        "409":
          content: {}
          description: Request already processed with a different payload
        "500":
          content: {}
          description: Server error
      summary: Create program gateway source
      tags:
        - Program Gateway Funding Sources
  /fundingsources/programgateway/customheaders/{token}:
    put:
      description: Adds or updates custom HTTP headers for a specific program gateway
        funding source.
      operationId: putFundingsourcesProgramgatewayCustomHeaderToken
      parameters:
        - description: The unique identifier of the program gateway funding source.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              custom_header:
                my_header_name_1: my_value_1
                my_header_name_2: my_value_2
                my_header_name_3: my_value_3
            schema:
              $ref: "#/components/schemas/gateway_program_custom_header_update_request"
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                account: 12.003.001.000155
                active: true
                basic_auth_password: my_20-to-100-character_password
                basic_auth_username: my_username
                created_time: 2022-02-28T20:00:00Z
                custom_header:
                  my_header_name_1: my_value_1
                  my_header_name_2: my_value_2
                  my_header_name_3: my_value_3
                last_modified_time: 2022-02-28T20:00:00Z
                name: my_pgfs_name
                timeout_millis: 3000
                token: my_pgfs_token
                url: https://my_secure_domain.com/my_gateway
                use_mtls: false
                version: "2"
              schema:
                $ref: "#/components/schemas/gateway_program_funding_source_response"
          description: Success
        "400":
          content: {}
          description: Invalid fields detected
        "500":
          content: {}
          description: Server error
      summary: Update program gateway source custom headers
      tags:
        - Program Gateway Funding Sources
  /fundingsources/programgateway/{token}:
    get:
      description: Retrieves a specific program gateway funding source.
      operationId: getFundingsourcesProgramgatewayToken
      parameters:
        - description: The unique identifier of the program gateway funding source.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "201":
          content:
            application/json:
              example:
                account: 12.003.001.000155
                active: true
                basic_auth_password: my_20-to-100-character_password
                basic_auth_username: my_username
                created_time: 2022-02-28T20:00:00Z
                custom_header:
                  my_header_name_1: my_value_1
                  my_header_name_2: my_value_2
                  my_header_name_3: my_value_3
                last_modified_time: 2022-02-28T20:00:00Z
                name: my_pgfs_name
                timeout_millis: 3000
                token: my_pgfs_token
                url: https://my_secure_domain.com/my_gateway
                use_mtls: false
                version: "2"
              schema:
                $ref: "#/components/schemas/gateway_program_funding_source_response"
          description: Success
        "404":
          content: {}
          description: Program gateway funding source not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve program gateway source
      tags:
        - Program Gateway Funding Sources
    put:
      description: >-
        Updates a program gateway funding source.

        Only the values of parameters specified in the request are modified; all
        others are left unchanged.
      operationId: putFundingsourcesProgramgatewayToken
      parameters:
        - description: The unique identifier of the program gateway funding source.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              active: false
              basic_auth_password: my_20-to-100-character_password
              basic_auth_username: my_username
              url: https://my_secure_domain.com/my_gateway
            schema:
              $ref: "#/components/schemas/gateway_program_funding_source_update_request"
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                account: 12.003.001.000155
                active: false
                basic_auth_password: my_20-to-100-character_password
                basic_auth_username: my_username
                created_time: 2022-02-28T20:00:00Z
                custom_header:
                  my_header_name_1: my_value_1
                  my_header_name_2: my_value_2
                  my_header_name_3: my_value_3
                last_modified_time: 2022-02-28T20:00:00Z
                name: my_pgfs_name
                timeout_millis: 3000
                token: my_pgfs_token
                url: https://my_secure_domain.com/my_gateway
                use_mtls: false
                version: "2"
              schema:
                $ref: "#/components/schemas/gateway_program_funding_source_response"
          description: Success
        "400":
          content: {}
          description: Invalid fields detected
        "500":
          content: {}
          description: Server error
      summary: Update program gateway source
      tags:
        - Program Gateway Funding Sources
  /fundingsources/user/{user_token}:
    get:
      description: |-
        List funding sources associated with a specific user.

        This endpoint supports <</core-api/field-filtering, field filtering>>.
      operationId: getFundingsourcesUserUsertoken
      parameters:
        - description: The unique identifier of the `user` account holder.
          explode: false
          in: path
          name: user_token
          required: true
          schema:
            type: string
          style: simple
        - description: The type of funding source to retrieve.
          explode: true
          in: query
          name: type
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 2
                data:
                  - account_suffix: "4113"
                    account_type: corporate
                    active: true
                    created_time: 2022-02-26T20:03:05Z
                    exp_date: "1227"
                    is_default_account: true
                    last_modified_time: 2022-02-26T20:03:05Z
                    token: jane_doe_paymentcard_01
                    type: paymentcard
                    user_token: my_user_01
                  - account_suffix: "4321"
                    account_type: savings
                    active: false
                    created_time: 2022-02-26T20:03:05Z
                    date_sent_for_verification: 2022-02-27T23:27:58Z
                    is_default_account: false
                    last_modified_time: 2022-02-26T20:03:05Z
                    name_on_account: Jane Doe
                    token: jane_doe_ach_token
                    type: ach
                    user_token: my_user_01
                    verification_status: ACH_VERIFIED
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/FundingAccountListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: No funding accounts found
        "500":
          content: {}
          description: Server error
      summary: List sources for user
      tags:
        - Account Holder Funding Sources
  /fundingsources/{funding_source_token}/default:
    put:
      description: >-
        Configure either an ACH funding source or a payment card funding source
        as the default funding source.


        A default funding source is used when you omit the
        `funding_source_token` field from funding requests, such as a `POST`
        request to `/gpaorders`.

        Note that the first funding source you create is automatically set as
        the default (`is_default_source=true`).
      operationId: putFundingsourcesFundingsourcetokenDefault
      parameters:
        - description: The unique identifier of the funding source.
          explode: false
          in: path
          name: funding_source_token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                account_suffix: "4321"
                account_type: corporate
                active: true
                created_time: 2022-02-28T20:00:00Z
                exp_date: "1227"
                is_default_account: true
                last_modified_time: 2022-02-28T20:00:00Z
                token: jane_doe_paymentcard_token
                type: paymentcard
                user_token: my_user_01
              schema:
                $ref: "#/components/schemas/payment_card_response_model"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: Configures a default funding source
      tags:
        - Account Holder Funding Sources
  /gpaorders:
    post:
      description: >-
        Use this endpoint to create an order to fund an account holder's GPA.


        You can assess a <</core-api/fees, fee>> while funding a GPA by using
        the optional `fees` array to attach one or more fee resources to the GPA
        order.

        When you create a GPA order, the GPA is first credited for the fees,
        then debited at funding time.
      operationId: postGpaorders
      requestBody:
        content:
          application/json:
            example:
              amount: 1000
              currency_code: USD
              funding_source_token: my_program_funding_source_01
              token: my_gpaorder_01
              user_token: my_user_01
            schema:
              $ref: "#/components/schemas/gpa_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                amount: 1000
                created_time: 2017-05-10T23:00:15Z
                currency_code: USD
                funding:
                  amount: 1000
                  source:
                    active: true
                    created_time: 2021-11-30T19:13:23Z
                    is_default_account: false
                    last_modified_time: 2021-11-30T19:13:23Z
                    name: my_program_funding_source_01
                    token: "**********e_01"
                    type: program
                funding_source_token: "**********e_01"
                last_modified_time: 2017-05-10T23:00:15Z
                response:
                  code: "0000"
                  memo: Approved or completed successfully
                state: COMPLETION
                token: my_gpaorder_01
                transaction_token: "156"
                user_token: my_user_01
              schema:
                $ref: "#/components/schemas/gpa_response"
          description: Success
        "400":
          content: {}
          description: Bad request
        "409":
          content: {}
          description: Request already processed with a different payload
        "422":
          content: {}
          description: Rule violations or declined transactions from funding source
        "500":
          content: {}
          description: Server error
      summary: Create GPA order
      tags:
        - gpa orders
  /gpaorders/unloads:
    get:
      description: >-
        Use this endpoint to list all GPA unloads or GPA unloads associated with
        a specific user or business.


        This endpoint supports <</core-api/field-filtering, field filtering>>
        and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getGpaordersUnloads
      parameters:
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
        - description: |-
            The unique identifier of the user.

            Send a `GET` request to `/users` to retrieve user tokens.
          explode: true
          in: query
          name: user_token
          required: false
          schema:
            type: string
          style: form
        - description: |-
            The unique identifier of the business.

            Send a `GET` request to `/businesses` to retrieve business tokens.
          explode: true
          in: query
          name: business_token
          required: false
          schema:
            type: string
          style: form
        - description: >-
            The unique identifier of the original GPA order.


            Send a `GET` request to `/transactions?type=gpa.credit` to retrieve
            GPA order tokens.
          explode: true
          in: query
          name: original_order_token
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 2
                data[]:
                  amount: 500
                  created_time: 2021-11-30T23:14:50Z
                  funding:
                    amount: 500
                    source:
                      active: true
                      created_time: 2017-03-31T19:13:23Z
                      is_default_account: false
                      last_modified_time: 2017-03-31T19:13:23Z
                      name: my_program_funding_source_01
                      token: "**********e_01"
                      type: program
                  funding_source_token: "**********e_01"
                  last_modified_time: 2021-11-30T23:15:50Z
                  original_order_token: my_gpaorder_01
                  response:
                    code: "0000"
                    memo: Approved or completed successfully
                  state: COMPLETION
                  token: my_unload_01
                  transaction_token: "158"
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/GPAUnloadListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List GPA unloads
      tags:
        - gpa orders
    post:
      description: >-
        Use this endpoint to unload a GPA order.


        Unloading a GPA order returns funds to the funding source.

        A GPA unload must be tied to an original GPA order and can be used to
        return the amount of the original order or a lesser amount.
      operationId: postGpaordersUnloads
      requestBody:
        content:
          application/json:
            example:
              amount: 500
              original_order_token: my_gpaorder_01
              token: my_unload_01
            schema:
              $ref: "#/components/schemas/unload_request_model"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                amount: 500
                created_time: 2021-11-30T23:14:50Z
                funding:
                  amount: 500
                  source:
                    active: true
                    created_time: 2017-03-31T19:13:23Z
                    is_default_account: false
                    last_modified_time: 2017-03-31T19:13:23Z
                    name: my_program_funding_source_01
                    token: "**********e_01"
                    type: program
                funding_source_token: "**********e_01"
                last_modified_time: 2021-11-30T23:30:50Z
                original_order_token: my_gpaorder_01
                response:
                  code: "0000"
                  memo: Approved or completed successfully
                state: COMPLETION
                token: my_unload_01
                transaction_token: "158"
              schema:
                $ref: "#/components/schemas/gpa_returns"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: GPA order token not found
        "412":
          content: {}
          description: Pre-condition failed. Unload amount is greater than load amount
        "500":
          content: {}
          description: Server error
      summary: Create GPA unload
      tags:
        - gpa orders
  /gpaorders/unloads/{unload_token}:
    get:
      description: Use this endpoint to retrieve a specific GPA unload.
      operationId: getGpaordersUnloadsUnloadtoken
      parameters:
        - description: The unique identifier of the GPA unload.
          explode: false
          in: path
          name: unload_token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                amount: 500
                created_time: 2021-11-30T23:14:50Z
                funding:
                  amount: 500
                  source:
                    active: true
                    created_time: 2021-03-31T19:13:23Z
                    is_default_account: false
                    last_modified_time: 2021-03-31T19:13:23Z
                    name: my_program_funding_source_01
                    token: "**********e_01"
                    type: program
                funding_source_token: "**********e_01"
                last_modified_time: 2021-11-30T23:15:50Z
                original_order_token: my_gpaorder_01
                response:
                  code: "0000"
                  memo: Approved or completed successfully
                state: COMPLETION
                token: my_unload_01
                transaction_token: "158"
              schema:
                $ref: "#/components/schemas/gpa_returns"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Return not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve GPA unload
      tags:
        - gpa orders
  /gpaorders/{token}:
    get:
      description: Use this endpoint to retrieve a GPA order.
      operationId: getGpaordersToken
      parameters:
        - description: >-
            Existing GPA order token.


            Send a `GET` request to `/transactions?type=gpa.credit` to retrieve
            GPA order tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                amount: 1000
                created_time: 2021-11-30T23:00:15Z
                currency_code: USD
                funding:
                  amount: 1000
                  source:
                    active: true
                    created_time: 2017-03-31T19:13:23Z
                    is_default_account: false
                    last_modified_time: 2017-03-31T19:13:23Z
                    name: my_program_funding_source_01
                    token: "**********e_01"
                    type: program
                funding_source_token: "**********e_01"
                last_modified_time: 2021-11-30T23:10:15Z
                response:
                  code: "0000"
                  memo: Approved or completed successfully
                state: COMPLETION
                token: my_gpaorder_01
                transaction_token: "156"
                user_token: my_user_01
              schema:
                $ref: "#/components/schemas/gpa_response"
          description: Success
        "404":
          content: {}
          description: GPA order token not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve GPA order
      tags:
        - gpa orders
  /kyc:
    post:
      description: >-
        Use this endpoint to verify the identity of an account holder in the
        United States, either a user or a business.

        You can perform KYC verification on an account holder, provided the
        following are true:


        * The KYC status of the account holder is `UNVERIFIED` or `LIMITED`

        * The account holder has not been submitted for KYC verification twice


        === Required fields


        In order to perform KYC verification, the `user` or `business` resource
        on which you perform the check must have the following fields configured
        with valid values:


        [cols="1a,1a"]

        |===

        | User Fields Required for KYC | Business Fields Required for KYC


        |

        * `first_name`

        * `last_name`

        * `address1` (cannot be a PO Box)

        * `city`

        * `state`

        * `postal_code`

        * `country`

        * `birth_date`

        * `ssn` (nine digits, no delimiters)


        |

        * `business_name_legal` (128 char max)

        * `business_name_dba` ("Doing Business As" or fictitious business name;
        enter the legal business name in this field if your business does not
        use a fictitious business name)

        * `office_location` (cannot be a PO Box; `state` field must use a
        <<valid_state_provincial_and_territorial_abbreviations, valid two-letter
        state, provincial, or territorial abbreviation>>)

        * `identifications` (nine digits, no delimiters)

        * `incorporation.incorporation_type`

        * `incorporation.state_of_incorporation`

        * `date_established`

        * `proprietor_or_officer`

        * `beneficial_owner` (maximum of four beneficial owners)

        * `proprietor_is_beneficial_owner` (required if the business proprietor
        or officer is also a beneficial owner)

        * `attestation_consent`

        * `attester_name`

        * `attestation_date`

        |===


        ==== Valid state, provincial, and territorial abbreviations

        The following list includes all valid two-letter abbreviation for US
        states, territories, and military (APO/FPO/DPO) addresses.

        It also includes abbreviations for Canadian provinces and territories.

        State, provincial, and territorial abbreviations are case sensitive, and
        must be in uppercase as they appear in this list:


        * `AL`: Alabama

        * `AK`: Alaska

        * `AB`: Alberta

        * `AS`: American Samoa

        * `AZ`: Arizona

        * `AR`: Arkansas

        * `AE`: Armed Forces

        * `AA`: Armed Forces Americas

        * `AP`: Armed Forces Pacific

        * `BC`: British Columbia

        * `CA`: California

        * `CO`: Colorado

        * `CT`: Connecticut

        * `DE`: Delaware

        * `DC`: District of Columbia

        * `FL`: Florida

        * `GA`: Georgia

        * `GU`: Guam

        * `HI`: Hawaii

        * `ID`: Idaho

        * `IL`: Illinois

        * `IN`: Indiana

        * `IA`: Iowa

        * `KS`: Kansas

        * `KY`: Kentucky

        * `LA`: Louisiana

        * `ME`: Maine

        * `MB`: Manitoba

        * `MD`: Maryland

        * `MA`: Massachusetts

        * `MI`: Michigan

        * `MN`: Minnesota

        * `MS`: Mississippi

        * `MO`: Missouri

        * `MT`: Montana

        * `NE`: Nebraska

        * `NV`: Nevada

        * `NB`: New Brunswick

        * `NH`: New Hampshire

        * `NJ`: New Jersey

        * `NM`: New Mexico

        * `NY`: New York

        * `NF`: Newfoundland

        * `NC`: North Carolina

        * `ND`: North Dakota

        * `NT`: Northwest Territories

        * `NS`: Nova Scotia

        * `NU`: Nunavut

        * `OH`: Ohio

        * `OK`: Oklahoma

        * `ON`: Ontario

        * `OR`: Oregon

        * `PA`: Pennsylvania

        * `PE`: Prince Edward Island

        * `PR`: Puerto Rico

        * `QC`: Quebec

        * `RI`: Rhode Island

        * `SK`: Saskatchewan

        * `SC`: South Carolina

        * `SD`: South Dakota

        * `TN`: Tennessee

        * `TX`: Texas

        * `UT`: Utah

        * `VT`: Vermont

        * `VI`: Virgin Islands

        * `VA`: Virginia

        * `WA`: Washington

        * `WV`: West Virginia

        * `WI`: Wisconsin

        * `WY`: Wyoming

        * `YT`: Yukon Territory
      operationId: postKyc
      requestBody:
        content:
          application/json:
            examples:
              business_request_example:
                summary: "*Sample request body for a business*"
                value:
                  business_token: my_biz01
                  token: my_bizkyc01
              user_request_example:
                summary: "*Sample request body for a user*"
                value:
                  manual_override: false
                  token: my_userkyc01
                  user_token: my_user01
            schema:
              $ref: "#/components/schemas/kyc_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              examples:
                business_response_example:
                  summary: "*Sample response body for a business*"
                  value:
                    business_token: my_biz01
                    created_time: 2022-02-08T19:52:58Z
                    last_modified_time: 2022-02-08T19:52:58Z
                    results:
                      - component: BUSINESS
                        outcome: SUCCESS
                        outcome_reasons: []
                        reference_id: xxxxx
                      - component: PROPRIETOR
                        outcome: PENDING
                        outcome_reasons:
                          - SSNIssue
                          - DOBIssue
                        reference_id: yyyyy
                      - component: BENEFICIAL_OWNER1
                        outcome: PENDING
                        outcome_reasons:
                          - AddressIssue
                        reference_id: aaaaa
                      - component: BENEFICIAL_OWNER2
                        outcome: SUCCESS
                        outcome_reasons: []
                        reference_id: bbbbb
                      - component: BENEFICIAL_OWNER3
                        outcome: SUCCESS
                        outcome_reasons: []
                        reference_id: ccccc
                      - component: BENEFICIAL_OWNER4
                        outcome: SUCCESS
                        outcome_reasons: []
                        reference_id: ddddd
                    status: PENDING
                    token: my_bizkyc01
                user_response_example:
                  summary: "*Sample response body for a user*"
                  value:
                    created_time: 2022-02-08T19:52:58Z
                    last_modified_time: 2022-02-08T19:52:58Z
                    manual_override: false
                    result:
                      codes:
                        - code: AddressIssue
                          message: "failed check: AddressIssue"
                      status: failure
                    token: my_userkyc01
                    user_token: my_user01
              schema:
                $ref: "#/components/schemas/kyc_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "409":
          content: {}
          description: Request already processed with a different payload
        "500":
          content: {}
          description: Server error
      summary: Perform KYC verification
      tags:
        - KYC Verification
  /kyc/business/{business_token}:
    get:
      description: >-
        Use this endpoint to retrieve all KYC verification results for a
        business.


        This endpoint supports <</core-api/field-filtering, field filtering>>
        and <</core-api/sorting-and-pagination, pagination>>.


        ==== Business KYC outcome reasons (business response)


        The following tables describe KYC outcome reasons potentially returned
        in the `outcome_reasons` field of the business `result` response object
        when a business is in a `PENDING` or `FAILURE` state.

        Where possible, they also describe acceptable documents that your
        customers can submit to resolve `PENDING` outcomes.


        ===== Outcome reasons for the business


        These outcome reasons pertain to the business organization itself.


        [cols=",,2a"]

        |===

        | Outcome Reason and State | Description | Accepted Documents


        | AddressIssue   +

        `PENDING`

        | Missing, invalid, mismatched, or PO Box address.

        | One of the following documents.

        Document must show the full business name and address:


        * Bank statement (last 60 days)

        * Utility bill (last 60 days)

        * Current lease or rental agreement, including the signature page

        * Insurance policy

        * State property tax bill or statement

        * Credit card statement (last 60 days)


        | BusinessNameIssue   +

        `PENDING`

        | Invalid or mismatched name.

        | Articles or certificate of incorporation.


        | OFACIssue   +

        `FAILURE`

        | Business appears on an OFAC list.

        | This outcome requires a manual review by Marqeta to determine the next
        appropriate step.

        Contact your Marqeta representative.


        | RegistrationIssue   +

        `PENDING`

        | Business is inactive, not registered, or not in good standing with the
        Secretary of State; recently reported or not recently updated.

        | This outcome requires a manual review by Marqeta to determine the next
        appropriate step.

        Contact your Marqeta representative.


        | Sanctions List Non-OFAC   +

        `PENDING`

        | Business appears on a non-OFAC screening list, bankruptcy, or alert
        list.

        | This outcome requires a manual review by Marqeta to determine the next
        appropriate step.

        Contact your Marqeta representative.


        | TINIssue   +

        `PENDING`

        | Missing, invalid, or mismatched Tax Identification Number (TIN).

        | IRS notice letter or most recent tax return.


        |===


        ===== Outcome reasons for individuals associated with a business


        These outcome reasons pertain to individuals associated with a business:
        proprietors, business officers, and beneficial owners.


        [cols=",,2a"]

        |===

        | Outcome Reason and State | Description | Accepted Documents


        | AddressIssue   +

        `FAILURE`

        | Missing, invalid, mismatched, or PO Box address for the individual.

        | One of the following documents.

        Document must show the full name and address:


        * Current state-issued driver's license or ID card

        * US Military Identification Card

        * Utility bill

        * Bank statement

        * Current rental or lease agreement

        * Mortgage statement

        * Insurance policy

        * State property tax bill or statement

        * Most recent three months' bank or credit card statement showing the
        user's full name and address


        | DateofBirthIssue   +

        `FAILURE`

        | Invalid or mismatched date of birth.

        | Current government-issued photo ID that has name and date of birth:


        * Driver's license or state-issued ID card

        * Passport or US passport card

        * Military Identification Card, Common Access Card (Active Military,
        Active Reserve, or Active Selected Reserve), or DD-214

        * American Indian Card (I-872)


        | NameIssue   +

        `FAILURE`

        | Invalid or mismatched name.

        | Current government-issued photo ID that has name and date of birth:


        * Driver's license or state-issued ID card

        * Passport or US passport card

        * Military Identification Card, Common Access Card (Active Military,
        Active Reserve, or Active Selected Reserve), or DD-214

        * American Indian Card (I-872)


        | OFAC   +

        `FAILURE`

        | Proprietor, officer, or beneficial owner appears on an Office of
        Foreign Assets Control (OFAC) list.

        | This outcome requires a manual review by Marqeta to determine the next
        appropriate step.

        Contact your Marqeta representative.


        | SSNFail   +

        `FAILURE`

        | Social Security Number (SSN) appears on Network Alert List, is of a
        deceased person, or was issued before the individual's date of birth.

        | This outcome requires a manual review by Marqeta to determine the next
        appropriate step.

        Contact your Marqeta representative.


        | SSNIssue   +

        `FAILURE`

        | Missing, invalid, or mismatched SSN.

        | * Social Security card

        * Recent W-2 or 1099 showing nine-digit SSN, full name, and address.

        |===
      operationId: getKycBusinessBusinesstoken
      parameters:
        - description: The unique identifier of the `business` resource for which you want
            to retrieve KYC verification results.
          explode: false
          in: path
          name: business_token
          required: true
          schema:
            type: string
          style: simple
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data:
                  - business_token: my-business-token
                    created_time: 2021-09-25T05:35:02Z
                    last_modified_time: 2021-09-25T05:35:02Z
                    manual_override: false
                    result:
                      status: pending
                    token: 164dc008-1503-4932-a42d-27739346710f
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/KYCListResponse"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: List KYC results for a business
      tags:
        - KYC Verification
  /kyc/user/{user_token}:
    get:
      description: >-
        Use this endpoint to retrieve all KYC results for a user.


        This endpoint supports <</core-api/field-filtering, field filtering>>
        and <</core-api/sorting-and-pagination, pagination>>.


        === User KYC failure codes


        The following table lists KYC failure codes potentially returned in the
        response when a user does not pass verification.

        It also includes a list of acceptable documents that your customers can
        submit to resolve failures.


        [cols=",,2a"]

        |===

        | Failure Code and State | Description | Accepted Documents


        | AddressIssue   +

        `FAILURE`

        | Missing, invalid, mismatched, or PO Box address.

        | One of the following documents.

        Document must show the full name and address:


        * Current state-issued driver's license or ID card

        * US Military Identification Card

        * Utility bill

        * Bank statement

        * Current rental or lease agreement

        * Mortgage statement

        * Insurance policy

        * State property tax bill or statement

        * Most recent three months' bank or credit card statement showing the
        user's full name and address


        | DateofBirthIssue   +

        `FAILURE`

        | Invalid or mismatched date of birth.

        | Current government-issued photo ID that has name and date of birth:


        * Driver's license or state-issued ID card

        * Passport or US passport card

        * Military Identification Card, Common Access Card (Active Military,
        Active Reserve, or Active Selected Reserve), or DD-214

        * American Indian Card (I-872)


        | NameIssue   +

        `FAILURE`

        | Invalid or mismatched name.

        | Current government-issued photo ID that has name and date of birth:


        * Driver's license or state-issued ID card

        * Passport or US passport card

        * Military Identification Card, Common Access Card (Active Military,
        Active Reserve, or Active Selected Reserve), or DD-214

        * American Indian Card (I-872)


        | NoRecordFound   +

        `FAILURE`

        | No records were found for this individual.

        | As no record was found for this individual, supporting documentation
        must be provided for each attribute (name, date of birth, address, and
        SSN):


        * To verify an individual's address, provide one of these documents:

        ** Current state-issued driver's license or ID card

        ** US Military Identification Card

        ** Utility bill

        ** Bank statement

        ** Current rental or lease agreement

        ** Mortgage statement

        ** Insurance policy

        ** State property tax bill or statement

        ** Most recent three months' bank or credit card statement showing the
        user's full name and address

        * To verify an individual's name and date of birth, provide one of these
        documents:

        ** Driver's license or state-issued ID card

        ** Passport or US passport card

        ** Military Identification Card, Common Access Card (Active Military,
        Active Reserve, or Active Selected Reserve), or DD-214

        ** American Indian Card (I-872)

        * To verify an individual's Social Security Number, provide one of these
        documents:

        ** Social Security card

        ** Recent W-2 or 1099 showing nine-digit SSN, full name, and address.


        | OFAC   +

        `FAILURE`

        | Appears on an Office of Foreign Assets Control (OFAC) list.

        | This outcome requires a manual review by Marqeta to determine the next
        appropriate step.

        Contact your Marqeta representative.


        | RiskIssue   +

        `FAILURE`

        | Appears on a non-OFAC screening list, bankruptcy, or alert list, or
        has an insufficient record.

        | This outcome requires a manual review by Marqeta to determine the next
        appropriate step.

        Contact your Marqeta representative.


        | SSNFail   +

        `FAILURE`

        | Social Security Number (SSN) appears on Network Alert List, is of a
        deceased person, or was issued before the individual's date of birth.

        | This outcome requires a manual review by Marqeta to determine the next
        appropriate step.

        Contact your Marqeta representative.


        | SSNIssue   +

        `FAILURE`

        | Missing, invalid, or mismatched SSN.

        | * Social Security card

        * Recent W-2 or 1099 showing nine-digit SSN, full name, and address.

        |===
      operationId: getKycUserUsertoken
      parameters:
        - description: The unique identifier of the `user` resource for which you want to
            retrieve KYC verification results.
          explode: false
          in: path
          name: user_token
          required: true
          schema:
            type: string
          style: simple
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 2
                data:
                  - created_time: 2022-03-07T23:17:36Z
                    last_modified_time: 2022-03-07T23:17:36Z
                    manual_override: false
                    result:
                      status: success
                    token: my_user_01_kyc_02
                    user_token: my_user_01
                  - created_time: 2022-03-08T18:00:00Z
                    last_modified_time: 2022-03-08T18:00:00Z
                    manual_override: false
                    result:
                      status: failure
                    token: my_user_01_kyc_01
                    user_token: my_user_01
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/KYCListResponse"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: List KYC results for a user
      tags:
        - KYC Verification
  /kyc/{token}:
    get:
      description: Use this endpoint to retrieve a specific KYC result.
      operationId: getKycToken
      parameters:
        - description: The unique identifier of the KYC verification for which you want to
            retrieve the result.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                created_time: 2022-03-07T22:52:39Z
                last_modified_time: 2022-03-07T22:52:39Z
                manual_override: false
                result:
                  status: success
                token: my_user_01_kyc_01
                user_token: my_user_01
              schema:
                $ref: "#/components/schemas/kyc_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: KYC not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve KYC result
      tags:
        - KYC Verification
  /mccgroups:
    get:
      description: >-
        Use this endpoint to list all MCC groups defined in your program or list
        MCC groups that contain a specified code.


        This endpoint supports <</core-api/field-filtering, field filtering>>
        and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getMccgroups
      parameters:
        - description: Returns all MCC groups that contain the specified merchant category
            code.
          explode: true
          in: query
          name: mcc
          required: false
          schema:
            type: string
          style: form
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 10
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MCCGroupListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List MCC groups
      tags:
        - mcc groups
    post:
      description: Use this endpoint to create an MCC group.
      operationId: postMccgroups
      requestBody:
        content:
          "*/*":
            schema:
              $ref: "#/components/schemas/mcc_group_model"
          application/json:
            schema:
              $ref: "#/components/schemas/mcc_group_model"
        description: MCC group
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mcc_group_model"
          description: Created
        "400":
          content: {}
          description: Bad request
        "409":
          content: {}
          description: Token already associated with a different payload
        "500":
          content: {}
          description: Server error
      summary: Create MCC group
      tags:
        - mcc groups
  /mccgroups/{token}:
    get:
      description: Use this endpoint to retrieve a specific MCC group.
      operationId: getMccgroupsToken
      parameters:
        - description: Unique identifier of the MCC group.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mcc_group_model"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: MCC group not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve MCC group
      tags:
        - mcc groups
    put:
      description: >-
        Use this endpoint to update an MCC group.

        Include the `token` path parameter to identify the MCC group to update.

        You must pass all the merchant category codes you want included in the
        group, including existing ones you want to retain.
      operationId: putMccgroupsToken
      parameters:
        - explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          "*/*":
            schema:
              $ref: "#/components/schemas/mcc_group_update_model"
          application/json:
            schema:
              $ref: "#/components/schemas/mcc_group_update_model"
        description: MCC group
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mcc_group_update_model"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: Update MCC group
      tags:
        - mcc groups
  /merchantgroups:
    get:
      description: >-
        To return an array of all merchant groups, send a `GET` request to the
        `/merchantgroups` endpoint.


        To return an array of all merchant groups that include a specific
        merchant identifier, send a `GET` request to the `/merchantgroups`
        endpoint that includes the merchant identifier in the query parameters.
      operationId: getMerchantGroups
      parameters:
        - description: Returns all merchant groups that contain the specified merchant
            identifier.
          explode: true
          in: query
          name: mid
          required: false
          schema:
            type: string
          style: form
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 10
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantGroupListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List merchant groups
      tags:
        - Merchant Groups
    post:
      description: To create a merchant group, send a `POST` request to the
        `/merchantgroups` endpoint.
      operationId: postMerchantGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/merchant_group_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/merchant_group_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "409":
          content: {}
          description: Token already associated with a different payload
        "500":
          content: {}
          description: Server error
      summary: Create merchant group
      tags:
        - Merchant Groups
  /merchantgroups/{token}:
    get:
      description: >-
        To retrieve a specific merchant group, send a `GET` request to the
        `/merchantgroups/{token}` endpoint.

        Include the merchant group `token` path parameter to specify the
        merchant group to return.
      operationId: getMerchantGroup
      parameters:
        - description: The unique identifier of the merchant group.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/merchant_group_response"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Merchant Group not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve merchant group
      tags:
        - Merchant Groups
    put:
      description: >-
        To update a merchant group, send a `PUT` request to the
        `/merchantgroups/{token}` endpoint.

        Include the merchant group `token` path parameter to specify the
        merchant group to update.
      operationId: putMerchantGroupsToken
      parameters:
        - description: The unique identifier of the merchant group.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/merchant_group_update_request"
        description: Merchant Group
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/merchant_group_response"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: Update merchant group
      tags:
        - Merchant Groups
  /peertransfers:
    post:
      description: >-
        Use this endpoint to request a peer transfer (i.e., a movement of funds
        from the GPA of an account holder to another account belonging to the
        same account holder).

        Add the source details to the body of the request in
        link:http://www.json.org/[JSON, window="_blank"] format.


        When creating a peer transfer request, you must pass in both a token to
        identify the fee sender (either `sender_user_token` or
        `sender_business_token`) and a token to identify the fee recipient
        (either `recipient_user_token` or `recipient_business_token`).

        The sender and recipient objects must already exist.


        [NOTE]

        This feature is disabled by default and requires activation by
        Marqeta.   +
          +
        This feature enables you to transfer or reallocate funds where the
        `sender_*\_token` and the `recipient_*\_token` belong to the same
        account holder.

        It does not allow you to transfer or reallocate funds between different
        account holders.

        Contact your Marqeta representative for more information.
      operationId: postPeertransfers
      requestBody:
        content:
          application/json:
            example:
              amount: 50
              currency_code: USD
              recipient_user_token: my_user_01_account_2
              sender_user_token: my_user_01
              token: my_peertransfer_01
            schema:
              $ref: "#/components/schemas/peer_transfer_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                amount: 50
                created_time: 2021-05-11T19:15:01Z
                currency_code: USD
                recipient_user_token: my_user_01_account_2
                sender_user_token: my_user_01
                token: my_peertransfer_01
              schema:
                $ref: "#/components/schemas/peer_transfer_response"
          description: Success
        "400":
          content: {}
          description: "Invalid fields detected: either sender or recipient is not found"
        "409":
          content: {}
          description: Request already processed with a different payload
        "422":
          content: {}
          description: Rule violations
        "500":
          content: {}
          description: Server error
      summary: Performs a peer transfer between two accounts held by the same account
        holder
      tags:
        - peer transfers
  /peertransfers/user/{user_or_business_token}:
    get:
      description: >-
        Use this endpoint to list peer transfers sent or received by a
        particular account holder.

        Include a user or business token as a path parameter to identify the
        account holder whose transfers you want to list.


        This endpoint supports <</core-api/field-filtering, field filtering>>
        and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getPeertransfersUserUserorbusinesstoken
      parameters:
        - description: >-
            Existing user or business token.


            Send a `GET` request to `/users` to retrieve user tokens or to
            `/businesses` to retrieve business tokens.
          explode: false
          in: path
          name: user_or_business_token
          required: true
          schema:
            type: string
          style: simple
        - description: The number of peer transfer resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 25
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                amount: 40
                count: 1
                created_time: 2021-05-11T20:41:27Z
                currency_code: USD
                data[]: null
                end_index: 2
                is_more: false
                recipient_user_token: my_user_01_account_2
                sender_user_token: my_user_01
                start_index: 0
                token: my_peertransfer_01
              schema:
                $ref: "#/components/schemas/peer_transfer_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: Returns all peer transfers for a user
      tags:
        - peer transfers
  /peertransfers/user/{user_or_business_token}/recipient:
    get:
      description: >-
        Use this endpoint to list peer transfers sent by an account holder.

        Include a user or business token as a path parameter to identify the
        recipient.


        This endpoint supports <</core-api/field-filtering, field filtering>>
        and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getPeertransfersUserUserorbusinesstokenRecipient
      parameters:
        - description: >-
            Existing user or business token.


            Send a `GET` request to `/users` to retrieve user tokens or to
            `/businesses` to retrieve business tokens.
          explode: false
          in: path
          name: user_or_business_token
          required: true
          schema:
            type: string
          style: simple
        - description: The number of peer transfer resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 25
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                amount: 40
                count: 3,
                created_time: 2021-05-11T20:41:27Z
                currency_code: USD
                data[]: null
                end_index: 2
                is_more: false
                recipient_user_token: my_user_01_account_2
                sender_user_token: my_user_01
                start_index: 0
                token: my_peertransfer_01
              schema:
                $ref: "#/components/schemas/peer_transfer_response"
          description: Success
        "404":
          content: {}
          description: User token not found
        "500":
          content: {}
          description: Server error
      summary: Returns received peer transfers for a user
      tags:
        - peer transfers
  /peertransfers/user/{user_or_business_token}/sender:
    get:
      description: >-
        Use this endpoint to list peer transfers sent by an account holder.

        Include a user or business token as a path parameter to identify the
        sender.


        This endpoint supports <</core-api/field-filtering, field filtering>>
        and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getPeertransfersUserUserorbusinesstokenSender
      parameters:
        - description: >-
            Existing user or business token.


            Send a `GET` request to `/users` to retrieve user tokens or to
            `/businesses` to retrieve business tokens.
          explode: false
          in: path
          name: user_or_business_token
          required: true
          schema:
            type: string
          style: simple
        - description: The number of peer transfer resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 25
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                amount: 40
                count: 3,
                created_time: 2021-05-11T20:41:27Z
                currency_code: USD
                data[]: null
                end_index: 2
                is_more: false
                recipient_user_token: my_user_01_account_2
                sender_user_token: my_user_01
                start_index: 0
                token: my_peertransfer_01
              schema:
                $ref: "#/components/schemas/peer_transfer_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: Returns sent peer transfers for a user
      tags:
        - peer transfers
  /peertransfers/{token}:
    get:
      description: >-
        Use this endpoint to retrieve a peer transfer request.

        Include the peer transfer `token` as a path parameter in the URL to
        identify the peer transfer to return.
      operationId: getPeertransfersToken
      parameters:
        - explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                amount: 50
                created_time: 2021-05-11T19:15:01Z
                currency_code: USD
                recipient_user_token: my_user_01_account_2
                sender_user_token: my_user_01
                token: my_peertransfer_01
              schema:
                $ref: "#/components/schemas/peer_transfer_response"
          description: Success
        "404":
          content: {}
          description: Transfer token not found
        "500":
          content: {}
          description: Server error
      summary: Returns details of a previous transfer
      tags:
        - peer transfers
  /ping:
    get:
      description: Tests if the Marqeta server is available and responsive.
      operationId: getPing
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ping_response"
          description: Success
        "500":
          content: {}
          description: Server error
      summary: Returns a heartbeat to the consumer
      tags:
        - ping
    post:
      operationId: postPing
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/echo_ping_request"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/echo_ping_response"
          description: Success
        "500":
          content: {}
          description: Server error
      summary: Echo test for sending payload to server
      tags:
        - ping
  /pins:
    put:
      description: >-
        Creates or updates a PIN for an existing card.


        If you want to manage a card's PIN, first create a new control token for
        the card by sending a `POST` request to `/pins/controltoken`, and then
        use that token to update the PIN.

        You must create a card before you can manage a PIN.


        Unless PIN reveal functionality has been enabled for your program, you
        cannot retrieve a PIN that has previously been created.

        If the PIN has been forgotten, you must either update the card's PIN or
        create a new card and PIN.


        If you have enabled PIN reveal functionality for your program, you can
        send a `POST` request to the `/pins/reveal` endpoint to retrieve an
        existing PIN.

        See <</core-api/pins#revealPins, Reveal PIN>> on this page for details.


        [WARNING]

        Sending a request to this endpoint requires PCI DSS compliance.

        You must comply with PCI DSS data security requirements if you want to
        store, transmit, or process sensitive card data such as the cardholder's
        primary account number (PAN), personal identification number (PIN), and
        card expiration date.
      operationId: putPins
      requestBody:
        content:
          application/json:
            example:
              control_token: b4647c9a-d4b8-4091-a5ff-dd67a7bb9ffc
              pin: "5678"
            schema:
              $ref: "#/components/schemas/pin_request"
        required: false
      responses:
        "204":
          content: {}
          description: PIN was successfully set
        "400":
          content: {}
          description: Bad request
        "412":
          content: {}
          description: Weak PIN
        "500":
          content: {}
          description: Server error
      summary: Create or update PIN
      tags:
        - pins
  /pins/controltoken:
    post:
      description: >-
        Creates a control token necessary when creating or updating a card's
        PIN.


        Creating, updating, or revealing a card's PIN is a two-step process.

        You must first create the control token that is required to create the
        PIN, and then you create, update, or reveal the PIN itself.


        The lifespan of the control token in a production environment is either
        five minutes or one hour from creation, depending on the token type.

        If multiple tokens are requested for a single card, only the most recent
        one is valid.

        Once redeemed, a token cannot be reused.
      operationId: postPinsControltoken
      requestBody:
        content:
          application/json:
            example:
              card_token: my_card_01
              controltoken_type: SHOW_PIN
            schema:
              $ref: "#/components/schemas/control_token_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                control_token: b4647c9a-d4b8-4091-a5ff-dd67a7bb9ffc
              schema:
                $ref: "#/components/schemas/control_token_response"
          description: Control token created
        "400":
          content: {}
          description: Bad request
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Server error
      summary: Create PIN control token
      tags:
        - pins
  /pins/reveal:
    post:
      description: >-
        Reveals the PIN of an existing, active card.


        *WARNING:* Only use this endpoint to access a PIN in order to reveal it
        to its cardholder.

        Do not use this endpoint for the purpose of storing a PIN at any
        location.


        Sending a request to this endpoint requires PCI DSS compliance.

        You must comply with PCI DSS data security requirements if you want to
        store, transmit, or process sensitive card data such as the cardholder's
        primary account number (PAN), personal identification number (PIN), and
        card expiration date.


        If you want instead to update a card's PIN, send a `PUT` request to the
        `/pins` endpoint.

        See <</core-api/pins#putPins, Create or Update PIN>> on this page for
        details.


        Revealing a card's PIN is a two-step process.

        You must first create a new control token for the card by sending a
        `POST` request to `/pins/controltoken`, and then use that token to
        reveal the PIN.
      operationId: revealPins
      requestBody:
        content:
          application/json:
            example:
              cardholder_verification_method: BIOMETRIC_FINGERPRINT
              control_token: b4647c9a-d4b8-4091-a5ff-dd67a7bb9ffc
            schema:
              $ref: "#/components/schemas/pin_reveal_request"
        required: false
      responses:
        "204":
          content: {}
          description: PIN was successfully revealed
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: Reveal PIN
      tags:
        - pins
  /programreserve/balances:
    get:
      description: Use this endpoint to return balances for your program reserve account.
      operationId: getProgramreserveBalances
      responses:
        "200":
          content:
            application/json:
              example:
                available_balance: 10100
                balances:
                  USD:
                    available_balance: 10100
                    currency_code: USD
                    ledger_balance: 10100
                    pending_credits: 0
                currency_code: USD
                ledger_balance: 10100
                pending_credits: 0
              schema:
                $ref: "#/components/schemas/program_reserve_account_balance"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: Retrieve reserve account balances
      tags:
        - program reserve
  /programreserve/transactions:
    get:
      description: >-
        Use this endpoint to return a list of credits and debits made to your
        program reserve account.


        This endpoint supports <</core-api/sorting-and-pagination, sorting and
        pagination>>.
      operationId: getProgramreserveTransactions
      parameters:
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 2
                data:
                  - amount: 120
                    created_time: 2022-02-10T21:52:18Z
                    currency_code: USD
                    last_modified_time: 2022-02-10T21:52:18Z
                    memo: my_memo
                    tags: my, tags
                    token: my_deposit_02
                    transaction_token: "154"
                    type: CREDIT
                  - amount: 100
                    created_time: 2022-02-10T21:51:28Z
                    currency_code: USD
                    last_modified_time: 2022-02-10T21:51:28Z
                    memo: my_memo
                    tags: my, tags
                    token: my_deposit_01
                    transaction_token: "153"
                    type: CREDIT
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/ProgramReserveTransactionListResponse"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: List program reserve transactions
      tags:
        - program reserve
  /programtransfers:
    get:
      description: >-
        Use this endpoint to list all program transfers.


        To narrow your result set to program transfers of a particular type or
        that are associated with a particular account holder, include the
        appropriate parameters from the following Query Parameters table.

        This endpoint also supports <</core-api/field-filtering, field
        filtering>>, <</core-api/sorting-and-pagination, pagination>>, and
        <</core-api/sorting-and-pagination, sorting>>.
      operationId: getProgramtransfers
      parameters:
        - description: The number of program transfers to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
        - description: >-
            Identifies the `user` account holder whose program transfers you
            want to retrieve.


            Send a `GET` request to `/users` to retrieve user tokens.
          explode: true
          in: query
          name: user_token
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Identifies the `business` account holder whose program transfers you
            want to retrieve.


            Send a `GET` request to `/businesses` to retrieve business tokens.
          explode: true
          in: query
          name: business_token
          required: false
          schema:
            type: string
          style: form
        - description: Identifies the type of program transfers to retrieve.
          explode: true
          in: query
          name: type_token
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 2
                data[]:
                  amount: 1
                  created_time: 2021-05-11T21:02:45Z
                  currency_code: USD
                  memo: This is my program transfer
                  tags: my, tags
                  token: my_program_transfer_02
                  transaction_token: "170"
                  type_token: my_program_transfer_type_01
                  user_token: my_user_01
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/ProgramTransferListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List program transfers
      tags:
        - program transfers
    post:
      description: >-
        Use this endpoint to create a program transfer.

        Add the program transfer details to the body of the request in
        link:http://www.json.org/[JSON, window="_blank"] format.


        Include either `user_token` or `business_token` in the message body to
        specify the account holder whose GPA will be debited by the program
        transfer.

        The user or business must already exist.


        A program transfer is an all-or-nothing operation.

        If the GPA has insufficient funds to cover both the amount of the
        program transfer and all attached fees, then no funds are transferred.
      operationId: postProgramtransfers
      requestBody:
        content:
          application/json:
            example:
              amount: 1
              currency_code: USD
              memo: This is my program transfer
              tags: my, tags
              token: my_program_transfer_01
              type_token: my_program_transfer_type_01
              user_token: my_user_01
            schema:
              $ref: "#/components/schemas/program_transfer"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                amount: 1
                created_time: 2021-05-11T20:58:30Z
                currency_code: USD
                memo: This is my program transfer
                tags: my, tags
                token: my_program_transfer_01
                transaction_token: "169"
                type_token: my_program_transfer_type_01
                user_token: my_user_01
              schema:
                $ref: "#/components/schemas/program_transfer_response"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Not found
        "409":
          content: {}
          description: Request already processed with a different payload
        "412":
          content: {}
          description: Pre-condition failed. Unload amount is greater than load amount
        "500":
          content: {}
          description: Server error
      summary: Transfers to a program funding source
      tags:
        - program transfers
  /programtransfers/types:
    get:
      description: >-
        Use this endpoint to list all program transfer types.


        This endpoint supports <</core-api/field-filtering, field filtering>>,
        <</core-api/sorting-and-pagination, pagination>>, and
        <</core-api/sorting-and-pagination, sorting>>.
      operationId: getProgramtransfersTypes
      parameters:
        - description: The number of program transfer types to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 2
                data[]:
                  created_time: 2021-03-15T19:53:23Z
                  last_modified_time: 2021-03-15T19:53:23Z
                  memo: This is my other program transfer type.
                  program_funding_source_token: pfs_test_01
                  tags: my, tags
                  token: my_program_transfer_type_02
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/ProgramTransferTypeListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List program transfer types
      tags:
        - program transfers
    post:
      description: >-
        Use this endpoint to create a program transfer type.

        Add the program transfer details to the body of the request in
        link:http://www.json.org/[JSON, window="_blank"] format.


        You are required to pass in a `program_funding_source_token` to
        associate a program funding source with the program transfer type.

        You must therefore create a program funding source before creating a
        program transfer type.
      operationId: postProgramtransfersTypes
      requestBody:
        content:
          application/json:
            example:
              memo: This is my program transfer type.
              program_funding_source_token: my_pfs_01
              tags: my, tags
              token: my_program_transfer_type_01
            schema:
              $ref: "#/components/schemas/program_transfer_type_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                created_time: 2021-03-15T19:18:50Z
                last_modified_time: 2021-03-15T19:18:50Z
                memo: This is my program transfer type.
                program_funding_source_token: my_pfs_01
                tags: my, tags
                token: my_program_transfer_type_01
              schema:
                $ref: "#/components/schemas/program_transfer_type_response"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Program funding source not found
        "409":
          content: {}
          description: Token already used
        "500":
          content: {}
          description: Server error
      summary: Create program transfer type
      tags:
        - program transfers
  /programtransfers/types/{type_token}:
    get:
      description: >-
        Use this endpoint to retrieve a specific program transfer.

        Include the `type_token` path parameter to indicate the program transfer
        type to return.
      operationId: getProgramtransfersTypesTypetoken
      parameters:
        - description: Type token
          explode: false
          in: path
          name: type_token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                created_time: 2021-03-15T19:18:50Z
                last_modified_time: 2021-03-15T19:18:50Z
                memo: This is my program transfer type.
                program_funding_source_token: pfs_test_01
                tags: my, tags
                token: my_program_transfer_type_01
              schema:
                $ref: "#/components/schemas/program_transfer_type_response"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Program transfer type not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve program transfer type
      tags:
        - program transfers
    put:
      description: >-
        Use this endpoint to update a program transfer type.

        Include the `type_token` path parameter to indicate the program transfer
        type to update.

        Add the modified detail parameters to the body of the request in
        link:http://www.json.org/[JSON, window="_blank"] format.

        Only values of parameters in the request are modified; all others are
        left unchanged.
      operationId: putProgramtransfersTypesTypetoken
      parameters:
        - description: Type token
          explode: false
          in: path
          name: type_token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          "*/*":
            schema:
              $ref: "#/components/schemas/program_transfer_type_request"
          application/json:
            example:
              memo: Update program funding source.
              program_funding_source_token: pfs_test_02
            schema:
              $ref: "#/components/schemas/program_transfer_type_request"
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                created_time: 2021-03-15T19:53:23Z
                last_modified_time: 2021-03-15T19:58:33Z
                memo: Update program funding source.
                program_funding_source_token: pfs_test_02
                tags: my, tags
                token: my_program_transfer_type_02
              schema:
                $ref: "#/components/schemas/program_transfer_type_response"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Program transfer type not found
        "500":
          content: {}
          description: Server error
      summary: Update program transfer type
      tags:
        - program transfers
  /programtransfers/{token}:
    get:
      description: >-
        Use this endpoint to retrieve a specific program transfer.

        Include the program transfer `token` path parameter to specify the
        program transfer to retrieve.
      operationId: getProgramtransfersToken
      parameters:
        - description: Program transfer token
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                amount: 1
                created_time: 2021-05-11T21:02:45Z
                currency_code: USD
                memo: This is my program transfer
                tags: my, tags
                token: my_program_transfer_02
                transaction_token: "170"
                type_token: my_program_transfer_type_01
                user_token: my_user_01
              schema:
                $ref: "#/components/schemas/program_transfer_response"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Return not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve program transfer
      tags:
        - program transfers
  /pushtocards/disburse:
    get:
      operationId: getPushtocardsDisburse
      parameters:
        - description: Number of push-to-card disbursements to retrieve
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 10
            format: int32
            type: integer
          style: form
        - description: Comma-delimited list of fields to return (e.g. field_1,field_2,..).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: Start index
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Sort order
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PushToCardDisburseListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: Lists all push-to-card disbursements
      tags:
        - push to card
    post:
      operationId: postPushtocardsDisburse
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/push_to_card_disburse_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/push_to_card_disbursement_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "422":
          content: {}
          description: Payment instrument is not active
        "500":
          content: {}
          description: Server error
      summary: Initiates a push-to-card money disbursement
      tags:
        - push to card
  /pushtocards/disburse/{token}:
    get:
      operationId: getPushtocardsDisburseToken
      parameters:
        - description: Push-to-card disbursement token
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: Comma-delimited list of fields to return (e.g. field_1,field_2,..).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/push_to_card_disbursement_response"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Push-to-card disbursement not found
        "500":
          content: {}
          description: Server error
      summary: Returns a specific push-to-card disbursement
      tags:
        - push to card
  /pushtocards/paymentcard:
    get:
      operationId: getPushtocardsPaymentcard
      parameters:
        - description: Number of push-to-card payment cards to retrieve
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 10
            format: int32
            type: integer
          style: form
        - description: User token
          explode: true
          in: query
          name: user_token
          required: true
          schema:
            type: string
          style: form
        - description: Comma-delimited list of fields to return (e.g. field_1,field_2,..).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: Start index
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Sort order
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PushToCardListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: Returns all push-to-card payment card details
      tags:
        - push to card
    post:
      operationId: postPushtocardsPaymentcard
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/push_to_card_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/push_to_card_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "409":
          content: {}
          description: Token already associated with a different payload
        "422":
          content: {}
          description: Push-to-card information is invalid
        "500":
          content: {}
          description: Server error
      summary: Adds an external card to which funds will be pushed
      tags:
        - push to card
  /pushtocards/paymentcard/{token}:
    get:
      operationId: getPushtocardsPaymentcardToken
      parameters:
        - description: Push-to-card token
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: Comma-delimited list of fields to return (e.g. field_1,field_2,..).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/push_to_card_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Push-to-card details not found
        "500":
          content: {}
          description: Server error
      summary: Returns a specific paymentcard object
      tags:
        - push to card
  /realtimefeegroups:
    get:
      description: >-
        Use this endpoint to list existing real-time fee groups.


        This endpoint supports <</core-api/field-filtering, field filtering>>
        and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getRealtimefeegroups
      parameters:
        - description: The number of real-time fee groups to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).


            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 2
                data[]:
                  active: true
                  created_time: 2021-11-28T00:36:11Z
                  fee_tokens[]: my_fee_01 my_fee_05
                  last_modified_time: 2021-11-28T00:36:11Z
                  name: My Real-Time Fee Group 01
                  token: my_rtfg_01
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/RealTimeFeeGroupListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List real-time fee groups
      tags:
        - Real-Time Fee Groups
    post:
      description: Use this endpoint to create a real-time fee group.
      operationId: postRealtimefeegroups
      requestBody:
        content:
          application/json:
            example:
              fee_tokens[]: my_fee_01 my_fee_05
              name: My Real-Time Fee Group 01
              token: my_rtfg_01
            schema:
              $ref: "#/components/schemas/real_time_fee_group_create_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                active: true
                created_time: 2021-11-28T00:36:11Z
                fee_tokens[]: my_fee_01 my_fee_05
                last_modified_time: 2021-11-28T00:36:11Z
                name: My Real-Time Fee Group 01
                token: my_rtfg_01
              schema:
                $ref: "#/components/schemas/real_time_fee_group"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "409":
          content: {}
          description: Request already processed with a different payload
        "500":
          content: {}
          description: Server error
      summary: Create real-time fee group
      tags:
        - Real-Time Fee Groups
  /realtimefeegroups/{token}:
    get:
      description: >-
        Use this endpoint to retrieve a specific real-time fee group.

        Include the real-time fee group `token` path parameter to specify the
        real-time fee group to return.
      operationId: getRealtimefeegroupsToken
      parameters:
        - description: Real-time fee group token.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                active: true
                created_time: 2021-11-28T00:36:11Z
                fee_tokens[]: my_fee_01 my_fee_05
                last_modified_time: 2021-11-28T00:36:11Z
                name: My Real-Time Fee Group 01
                token: my_rtfg_01
              schema:
                $ref: "#/components/schemas/real_time_fee_group"
          description: Success
        "404":
          content: {}
          description: Real-time fee group not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve real-time fee group
      tags:
        - Real-Time Fee Groups
    put:
      description: >-
        Use this endpoint to update a real-time fee group.

        Include the real-time fee group `token` path parameter to specify the
        real-time fee group to update.
      operationId: putRealtimefeegroupsToken
      parameters:
        - description: Real-time fee group token.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              active: false
            schema:
              $ref: "#/components/schemas/real_time_fee_group_request"
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                active: false
                created_time: 2021-11-28T00:36:11Z
                fee_tokens[]: my_fee_01 my_fee_05
                last_modified_time: 2021-11-28T00:45:11Z
                name: My Real-Time Fee Group 01
                token: my_rtfg_01
              schema:
                $ref: "#/components/schemas/real_time_fee_group"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: Update real-time fee group
      tags:
        - Real-Time Fee Groups
  /simulate/authorization:
    post:
      operationId: postSimulateAuthorization
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/auth_request_model"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/simulation_response_model"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: Simulates an authorization
      tags:
        - simulate
  /simulate/authorization/advice:
    post:
      operationId: postSimulateAuthorizationAdvice
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/authorization_advice_model"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/simulation_response_model"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Original transaction not found
        "500":
          content: {}
          description: Server error
      summary: Simulates an authorization advice transaction
      tags:
        - simulate
  /simulate/clearing:
    post:
      operationId: postSimulateClearing
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClearingModel"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/simulation_response_model"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Original transaction not found
        "500":
          content: {}
          description: Server error
      summary: Simulates a clearing/settlement transaction
      tags:
        - simulate
  /simulate/directdeposits:
    post:
      operationId: postSimulateDirectdeposits
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DirectDepositRequest"
        description: Direct deposit simulate request model
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DepositDepositResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: Simulates the creation of direct deposit
      tags:
        - simulate
  /simulate/financial:
    post:
      operationId: postSimulateFinancial
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/financial_request_model"
        description: Financial request model
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/simulation_response_model"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: Simulates a financial request (PIN debit) transaction with optional
        cash back
      tags:
        - simulate
  /simulate/financial/advice:
    post:
      operationId: postSimulateFinancialAdvice
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/authorization_advice_model"
        description: Financial advice request model
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/simulation_response_model"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Original transaction not found
        "500":
          content: {}
          description: Server error
      summary: Simulates a financial advice transaction
      tags:
        - simulate
  /simulate/financial/balanceinquiry:
    post:
      operationId: postSimulateFinancialBalanceinquiry
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/balance_inquiry_request_model"
        description: Balance inquiry request model
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/simulation_response_model"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: Simulates a balance inquiry
      tags:
        - simulate
  /simulate/financial/originalcredit:
    post:
      operationId: postSimulateFinancialOriginalcredit
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/orignalcredit_request_model"
        description: Orignal Credit request model
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/simulation_response_model"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: Simulates an orignal credit transaction
      tags:
        - simulate
  /simulate/financial/withdrawal:
    post:
      operationId: postSimulateFinancialWithdrawal
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/withdrawal_request_model"
        description: ATM withdrawal request model
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/simulation_response_model"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: Simulates an ATM withdrawal transaction
      tags:
        - simulate
  /simulate/reversal:
    post:
      operationId: postSimulateReversal
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReversalModel"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/simulation_response_model"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Original transaction not found
        "500":
          content: {}
          description: Server error
      summary: Simulates a reversal transaction
      tags:
        - simulate
  /transactions:
    get:
      description: >-
        List all transactions.


        By default, this endpoint returns transactions conducted within the last
        30 days.

        To return transactions older than 30 days, you must include the
        `start_date` and `end_date` query parameters in your request.


        By default, `GET /transactions` returns transactions having either
        `PENDING` or `COMPLETION` states.


        This endpoint supports <</core-api/field-filtering, field filtering>>
        and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getTransactions
      parameters:
        - description: The number of transactions to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 10
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            $ref: "#/components/schemas/getTransactionsSortBy"
          style: form
        - description: >-
            The starting date (or date-time) of a date range from which to
            return transactions.

            To return transactions for a single day, enter the same date in both
            the `start_date` and `end_date` fields.
          explode: true
          in: query
          name: start_date
          required: false
          schema:
            type: string
          style: form
        - description: >-
            The ending date (or date-time) of a date range from which to return
            transactions.

            To return transactions for a single day, enter the same date in both
            the `end_date` and `start_date` fields.
          explode: true
          in: query
          name: end_date
          required: false
          schema:
            type: string
          style: form
        - description: Comma-delimited list of transaction types to include.
          explode: true
          in: query
          name: type
          required: false
          schema:
            type: string
          style: form
        - description: The unique identifier of the `user` account holder.
          explode: true
          in: query
          name: user_token
          required: false
          schema:
            type: string
          style: form
        - description: The unique identifier of the `business` account holder.
          explode: true
          in: query
          name: business_token
          required: false
          schema:
            type: string
          style: form
        - description: The unique identifier of the acting user.
          explode: true
          in: query
          name: acting_user_token
          required: false
          schema:
            type: string
          style: form
        - description: The unique identifier of the card.
          explode: true
          in: query
          name: card_token
          required: false
          schema:
            type: string
          style: form
        - description: The unique identifier of the merchant.
          explode: true
          in: query
          name: merchant_token
          required: false
          schema:
            type: string
          style: form
        - description: Campaign token
          explode: true
          in: query
          name: campaign_token
          required: false
          schema:
            type: string
          style: form
        - description: Comma-delimited list of transaction states to display.
          explode: true
          in: query
          name: state
          required: false
          schema:
            default: PENDING,COMPLETION
            type: string
          style: form
        - description: Specifies the API version for the request.
          explode: true
          in: query
          name: version
          required: false
          schema:
            type: string
          style: form
        - description: If `true`, the query returns additional information for diagnostic
            purposes.
          explode: true
          in: query
          name: verbose
          required: false
          schema:
            type: boolean
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 2
                data:
                  - acquirer:
                      institution_country: "840"
                      institution_id_code: "428399181"
                      retrieval_reference_number: "528294182583"
                      system_trace_audit_number: "656761"
                    acting_user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                    amount: 10
                    card:
                      metadata: null
                    card_security_code_verification:
                      response:
                        code: "0000"
                        memo: Card security code match
                      type: CVV1
                    card_token: 02cc766c-24a5-4c3b-adcf-0e5e27b09329
                    created_time: 2021-08-21T17:26:29Z
                    currency_code: USD
                    duration: 537
                    fraud:
                      network:
                        account_risk_score: "7"
                        transaction_risk_score: 97
                    gpa:
                      available_balance: 0
                      balances:
                        USD:
                          available_balance: 0
                          credit_balance: 0
                          currency_code: USD
                          impacted_amount: 10
                          ledger_balance: 20
                          pending_credits: 0
                      credit_balance: 0
                      currency_code: USD
                      impacted_amount: 10
                      ledger_balance: 20
                      pending_credits: 0
                    gpa_order:
                      amount: 10
                      created_time: 2021-08-21T17:26:30Z
                      currency_code: USD
                      funding:
                        amount: 10
                        gateway_log:
                          duration: 481
                          message: Approved or completed successfully
                          order_number: "1200"
                          response:
                            code: "200"
                            data:
                              jit_funding:
                                address_verification:
                                  gateway:
                                    on_file:
                                      postal_code: "94601"
                                      street_address: 2000 High St
                                    response:
                                      code: "0000"
                                      memo: Address and postal code match
                                amount: 10
                                method: pgfs.authorization
                                original_jit_funding_token: your-jit-funding-token
                                token: your-jit-funding-token
                                user_token: your-jit-funding-user
                          timed_out: false
                          transaction_id: your-jit-funding-token
                        source:
                          active: true
                          created_time: 2021-08-21T17:25:43Z
                          is_default_account: false
                          last_modified_time: 2021-08-21T17:25:43Z
                          name: PGFS for simulating transactions
                          token: "**********dd5f"
                          type: programgateway
                      funding_source_token: "**********dd5f"
                      jit_funding:
                        acting_user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                        amount: 10
                        method: pgfs.authorization
                        token: 251bdc52-588a-4291-8c5d-6ded3a67e1a8
                        user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                      last_modified_time: 2021-08-21T17:26:30Z
                      response:
                        code: "0000"
                        memo: Approved or completed successfully
                      state: PENDING
                      token: 592b8164-a4af-45ee-ab24-13a4bb43e6b2
                      transaction_token: cd22cff7-2845-4508-a916-cf89fd9edae1
                      user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                    issuer_payment_node: b9a60cd41a2cc1c23090ed3666bdbf1z
                    issuer_received_time: 2021-08-21T17:26:29Z
                    network: MARQETA
                    pos:
                      card_holder_presence: false
                      card_presence: false
                      is_recurring: false
                      pan_entry_mode: MAG_STRIPE
                      partial_approval_capable: false
                      pin_entry_mode: "TRUE"
                      purchase_amount_only: false
                      terminal_attendance: ATTENDED
                    preceding_related_transaction_token: 06a8fe88-58b1-4682-a8ad-96eb973e1d74
                    response:
                      code: "0000"
                      memo: Approved or completed successfully
                    state: PENDING
                    subnetwork: GATEWAY_JIT
                    token: cd22cff7-2845-4508-a916-cf89fd9edae1
                    transaction_metadata:
                      payment_channel: OTHER
                    type: gpa.credit.authorization
                    user:
                      metadata: null
                    user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                    user_transaction_time: 2021-08-21T17:26:29Z
                  - acquirer:
                      institution_country: "840"
                      institution_id_code: "428399181"
                      retrieval_reference_number: "528294182583"
                      system_trace_audit_number: "656761"
                    acquirer_fee_amount: 0
                    acting_user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                    amount: 10
                    approval_code: "761515"
                    card:
                      metadata: null
                    card_acceptor:
                      city: Berkeley
                      country_code: USA
                      mcc: "6411"
                      mid: "000000000011111"
                      name: Chicken Tooth Music
                      street_address: 111 Main St
                    card_security_code_verification:
                      response:
                        code: "0000"
                        memo: Card security code match
                      type: CVV1
                    card_token: 02cc766c-24a5-4c3b-adcf-0e5e27b09329
                    created_time: 2021-08-21T17:26:29Z
                    currency_code: USD
                    duration: 622
                    fraud:
                      network:
                        account_risk_score: "7"
                        transaction_risk_score: 97
                    gpa:
                      available_balance: 0
                      balances:
                        USD:
                          available_balance: 0
                          credit_balance: 0
                          currency_code: USD
                          impacted_amount: -10
                          ledger_balance: 20
                          pending_credits: 0
                      credit_balance: 0
                      currency_code: USD
                      impacted_amount: -10
                      ledger_balance: 20
                      pending_credits: 0
                    gpa_order:
                      amount: 10
                      created_time: 2021-08-21T17:26:30Z
                      funding:
                        amount: 10
                        currency_code: USD
                        funding_source_token: "**********dd5f"
                        gateway_log:
                          duration: 481
                          message: Approved or completed successfully
                          order_number: "1200"
                          response:
                            code: "200"
                            data:
                              jit_funding:
                                address_verification:
                                  gateway:
                                    on_file:
                                      postal_code: "94601"
                                      street_address: 2000 High St
                                    response:
                                      code: "0000"
                                      memo: Address and postal code match
                                amount: 10
                                method: pgfs.authorization
                                original_jit_funding_token: your-jit-funding-token
                                token: your-jit-funding-token
                                user_token: your-jit-funding-user
                          timed_out: false
                          transaction_id: your-jit-funding-token
                        jit_funding:
                          acting_user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                          amount: 10
                          method: pgfs.authorization
                          token: 251bdc52-588a-4291-8c5d-6ded3a67e1a8
                          user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                        source:
                          active: true
                          created_time: 2021-08-21T17:25:43Z
                          is_default_account: false
                          last_modified_time: 2021-08-21T17:25:43Z
                          name: PGFS for simulating transactions
                          token: "**********dd5f"
                          type: programgateway
                        user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                      last_modified_time: 2021-08-21T17:26:30Z
                      response:
                        code: "0000"
                        memo: Approved or completed successfully
                      state: PENDING
                      token: 592b8164-a4af-45ee-ab24-13a4bb43e6b2
                      transaction_token: cd22cff7-2845-4508-a916-cf89fd9edae1
                    issuer_payment_node: b9a60cd41a2cc1c23090ed3666bdbf1z
                    issuer_received_time: 2021-08-21T17:26:29Z
                    network: VISA
                    pos:
                      card_holder_presence: false
                      card_presence: false
                      is_recurring: false
                      pan_entry_mode: MAG_STRIPE
                      partial_approval_capable: false
                      pin_entry_mode: "TRUE"
                      purchase_amount_only: false
                      terminal_attendance: ATTENDED
                      terminal_id: TR100000
                    request_amount: 10
                    response:
                      code: "0000"
                      memo: Approved or completed successfully
                    settlement_date: 2021-08-21T00:00:00Z
                    state: PENDING
                    subnetwork: VISANET
                    token: 06a8fe88-58b1-4682-a8ad-96eb973e1d74
                    transaction_metadata:
                      payment_channel: OTHER
                    type: authorization
                    user:
                      metadata: null
                    user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                    user_transaction_time: 2021-08-21T17:26:29Z
                end_index: 1
                is_more: true
                start_index: 0
              schema:
                $ref: "#/components/schemas/TransactionModelListResponse"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: List transactions
      tags:
        - transactions
  /transactions/fundingsource/{funding_source_token}:
    get:
      description: >-
        List transactions for a specific funding source.


        By default, this endpoint returns transactions conducted within the last
        30 days.

        To return transactions older than 30 days, you must include the
        `start_date` and `end_date` query parameters in your request.


        By default, `GET /transactions/fundingsource/{funding_source_token}`
        returns transactions having either `PENDING` or `COMPLETION` states.


        This endpoint supports <</core-api/field-filtering, field filtering>>
        and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getTransactionsFundingsourceFundingsourcetoken
      parameters:
        - description: The unique identifier of the funding account.
          explode: false
          in: path
          name: funding_source_token
          required: true
          schema:
            type: string
          style: simple
        - description: The number of transactions to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 10
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            $ref: "#/components/schemas/getTransactionsFundingsourceFundingsourcetokenSortB\
              y"
          style: form
        - description: >-
            The starting date (or date-time) of a date range from which to
            return transactions.

            To return transactions for a single day, enter the same date in both
            the `start_date` and `end_date` fields.
          explode: true
          in: query
          name: start_date
          required: false
          schema:
            type: string
          style: form
        - description: >-
            The ending date (or date-time) of a date range from which to return
            transactions.

            To return transactions for a single day, enter the same date in both
            the `end_date` and `start_date` fields.
          explode: true
          in: query
          name: end_date
          required: false
          schema:
            type: string
          style: form
        - description: Comma-delimited list of transaction types to include.
          explode: true
          in: query
          name: type
          required: false
          schema:
            type: string
          style: form
        - description: Specifies whether to return credit or debit transactions.
          explode: true
          in: query
          name: polarity
          required: false
          schema:
            $ref: "#/components/schemas/getTransactionsFundingsourceFundingsourcetokenPolar\
              ity"
          style: form
        - description: Specifies the API version for the request.
          explode: true
          in: query
          name: version
          required: false
          schema:
            type: string
          style: form
        - description: If `true`, the query returns additional information for diagnostic
            purposes.
          explode: true
          in: query
          name: verbose
          required: false
          schema:
            type: boolean
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionModelListResponse"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: List transactions for a funding account
      tags:
        - transactions
  /transactions/{token}:
    get:
      description: >-
        Retrieve a specific transaction.

        Include the `token` path parameter to identify the transaction.


        [NOTE]

        Transactions are not available in real time via this endpoint, and
        typically appear after 30 seconds.

        On occasion, a transaction may require up to four hours to appear.
      operationId: getTransactionsToken
      parameters:
        - description: The unique identifier of the transaction.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: Specifies the API version for the request.
          explode: true
          in: query
          name: version
          required: false
          schema:
            type: string
          style: form
        - description: If `true`, the query returns additional information for diagnostic
            purposes.
          explode: true
          in: query
          name: verbose
          required: false
          schema:
            type: boolean
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                acquirer:
                  institution_country: "840"
                  institution_id_code: "428399181"
                  retrieval_reference_number: "528294182583"
                  system_trace_audit_number: "656761"
                acquirer_fee_amount: 0
                acting_user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                amount: 10
                approval_code: "761515"
                card:
                  metadata: null
                card_acceptor:
                  city: Berkeley
                  country_code: USA
                  mcc: "6411"
                  mid: "000000000011111"
                  name: Chicken Tooth Music
                  street_address: 111 Main St
                card_security_code_verification:
                  response:
                    code: "0000"
                    memo: Card security code match
                  type: CVV1
                card_token: 02cc766c-24a5-4c3b-adcf-0e5e27b09329
                cardholder_authentication_data:
                  electronic_commerce_indicator: authentication_successful
                  verification_result: verified
                  verification_value_created_by: issuer_acs
                created_time: 2021-08-21T17:26:29Z
                currency_code: USD
                currency_conversion:
                  network:
                    conversion_rate: 1
                    dynamic_currency_conversion: false
                    original_amount: 10
                    original_currency_code: "840"
                duration: 622
                fraud:
                  network:
                    account_risk_score: "7"
                    transaction_risk_score: 97
                gpa:
                  available_balance: 0
                  balances:
                    USD:
                      available_balance: 0
                      credit_balance: 0
                      currency_code: USD
                      impacted_amount: -10
                      ledger_balance: 20
                      pending_credits: 0
                  credit_balance: 0
                  currency_code: USD
                  impacted_amount: -10
                  ledger_balance: 20
                  pending_credits: 0
                gpa_order:
                  amount: 10
                  created_time: 2021-08-21T17:26:30Z
                  currency_code: USD
                  funding:
                    amount: 10
                    gateway_log:
                      duration: 481
                      message: Approved or completed successfully
                      order_number: "1200"
                      response:
                        code: "200"
                        data:
                          - jit_funding:
                              address_verification:
                                gateway:
                                  on_file:
                                    postal_code: "94601"
                                    street_address: 2000 High St
                                  response:
                                    code: "0000"
                                    memo: Address and postal code match
                              amount: 10
                              method: pgfs.authorization
                              original_jit_funding_token: your-jit-funding-token
                              token: your-jit-funding-token
                              user_token: your-jit-funding-user
                      timed_out: false
                      transaction_id: your-jit-funding-token
                    source:
                      active: true
                      created_time: 2021-08-21T17:25:43Z
                      is_default_account: false
                      last_modified_time: 2021-08-21T17:25:43Z
                      name: PGFS for simulating transactions
                      token: "**********dd5f"
                      type: programgateway
                  funding_source_token: "**********dd5f"
                  jit_funding:
                    acting_user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                    amount: 10
                    method: pgfs.authorization
                    token: 251bdc52-588a-4291-8c5d-6ded3a67e1a8
                    user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                  last_modified_time: 2021-08-21T17:26:30Z
                  response:
                    code: "0000"
                    memo: Approved or completed successfully
                  state: PENDING
                  token: 592b8164-a4af-45ee-ab24-13a4bb43e6b2
                  transaction_token: cd22cff7-2845-4508-a916-cf89fd9edae1
                  user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                issuer_payment_node: b9a60cd41a2cc1c23090ed3666bdbf1z
                issuer_received_time: 2021-08-21T17:26:29Z
                network: VISA
                pos:
                  card_holder_presence: false
                  card_presence: false
                  is_recurring: false
                  pan_entry_mode: MAG_STRIPE
                  partial_approval_capable: false
                  pin_entry_mode: "TRUE"
                  purchase_amount_only: false
                  terminal_attendance: ATTENDED
                  terminal_id: TR100000
                request_amount: 10
                response:
                  code: "0000"
                  memo: Approved or completed successfully
                settlement_date: 2021-08-21T00:00:00Z
                state: PENDING
                subnetwork: VISANET
                token: 06a8fe88-58b1-4682-a8ad-96eb973e1d74
                transaction_metadata:
                  payment_channel: OTHER
                type: authorization
                user:
                  metadata: null
                user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                user_transaction_time: 2021-08-21T17:26:29Z
              schema:
                $ref: "#/components/schemas/transaction_model"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Transaction token not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve transaction
      tags:
        - transactions
  /transactions/{token}/related:
    get:
      description: >-
        List all transactions related to the specified transaction.


        By default, this endpoint returns transactions conducted within the last
        30 days.

        To return transactions older than 30 days, you must include the
        `start_date` and `end_date` query parameters in your request.


        By default, this endpoint returns transactions of any state.

        To return transactions in specific states, you must include the `state`
        query parameter in your request.


        This endpoint supports <</core-api/field-filtering, field filtering>>
        and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getTransactionsTokenRelated
      parameters:
        - description: The unique identifier of the transaction.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: The number of transactions to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 10
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            $ref: "#/components/schemas/getTransactionsTokenRelatedSortBy"
          style: form
        - description: >-
            The starting date (or date-time) of a date range from which to
            return transactions.

            To return transactions for a single day, enter the same date in both
            the `start_date` and `end_date` fields.
          explode: true
          in: query
          name: start_date
          required: false
          schema:
            type: string
          style: form
        - description: >-
            The ending date (or date-time) of a date range from which to return
            transactions.

            To return transactions for a single day, enter the same date in both
            the `end_date` and `start_date` fields.
          explode: true
          in: query
          name: end_date
          required: false
          schema:
            type: string
          style: form
        - description: Comma-delimited list of transaction types to include
          explode: true
          in: query
          name: type
          required: false
          schema:
            type: string
          style: form
        - description: Comma-delimited list of transaction states to display.
          explode: true
          in: query
          name: state
          required: false
          schema:
            default: ALL
            type: string
          style: form
        - description: Specifies the API version for the request.
          explode: true
          in: query
          name: version
          required: false
          schema:
            type: string
          style: form
        - description: If `true`, the query returns additional information for diagnostic
            purposes.
          explode: true
          in: query
          name: verbose
          required: false
          schema:
            type: boolean
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data:
                  - acquirer:
                      institution_country: "840"
                      institution_id_code: "428399181"
                      retrieval_reference_number: "528294182583"
                      system_trace_audit_number: "656761"
                    acting_user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                    amount: 10
                    card:
                      metadata: null
                    card_security_code_verification:
                      response:
                        code: "0000"
                        memo: Card security code match
                      type: CVV1
                    card_token: 02cc766c-24a5-4c3b-adcf-0e5e27b09329
                    created_time: 2021-08-21T17:26:29Z
                    currency_code: USD
                    duration: 537
                    fraud:
                      network:
                        account_risk_score: "7"
                        transaction_risk_score: 97
                    gpa:
                      available_balance: 0
                      balances:
                        USD:
                          available_balance: 0
                          credit_balance: 0
                          currency_code: USD
                          impacted_amount: 10
                          ledger_balance: 20
                          pending_credits: 0
                      credit_balance: 0
                      currency_code: USD
                      impacted_amount: 10
                      ledger_balance: 20
                      pending_credits: 0
                    gpa_order:
                      amount: 10
                      created_time: 2021-08-21T17:26:30Z
                      funding:
                        amount: 10
                        currency_code: USD
                        funding_source_token: "**********dd5f"
                        gateway_log:
                          duration: 481
                          message: Approved or completed successfully
                          order_number: "1200"
                          response:
                            code: "200"
                            data:
                              jit_funding:
                                address_verification:
                                  gateway:
                                    on_file:
                                      postal_code: 94601
                                      street_address: 2000 High St
                                    response:
                                      code: "0000"
                                      memo: Address and postal code match
                                amount: 10
                                method: pgfs.authorization
                                original_jit_funding_token: your-jit-funding-token
                                token: your-jit-funding-token
                                user_token: your-jit-funding-user
                          timed_out: false
                          transaction_id: your-jit-funding-token
                        jit_funding:
                          acting_user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                          amount: 10
                          method: pgfs.authorization
                          token: 251bdc52-588a-4291-8c5d-6ded3a67e1a8
                          user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                        source:
                          active: true
                          created_time: 2021-08-21T17:25:43Z
                          is_default_account: false
                          last_modified_time: 2021-08-21T17:25:43Z
                          name: PGFS for simulating transactions
                          token: "**********dd5f"
                          type: programgateway
                        user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                      last_modified_time: 2021-08-21T17:26:30Z
                      response:
                        code: "0000"
                        memo: Approved or completed successfully
                      state: PENDING
                      token: 592b8164-a4af-45ee-ab24-13a4bb43e6b2
                      transaction_token: cd22cff7-2845-4508-a916-cf89fd9edae1
                    issuer_payment_node: b9a60cd41a2cc1c23090ed3666bdbf1z
                    issuer_received_time: 2021-08-21T17:26:29Z
                    network: MARQETA
                    pos:
                      card_holder_presence: false
                      card_presence: false
                      is_recurring: false
                      pan_entry_mode: MAG_STRIPE
                      partial_approval_capable: false
                      pin_entry_mode: "TRUE"
                      purchase_amount_only: false
                      terminal_attendance: ATTENDED
                    preceding_related_transaction_token: 06a8fe88-58b1-4682-a8ad-96eb973e1d74
                    response:
                      code: "0000"
                      memo: Approved or completed successfully
                    state: PENDING
                    subnetwork: GATEWAY_JIT
                    token: cd22cff7-2845-4508-a916-cf89fd9edae1
                    transaction_metadata:
                      payment_channel: OTHER
                    type: gpa.credit.authorization
                    user:
                      metadata: null
                    user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                    user_transaction_time: 2021-08-21T17:26:29Z
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/TransactionModelListResponse"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: List related transactions
      tags:
        - transactions
  /users:
    get:
      description: >-
        To return an array of all of a program's users, send a `GET` request to
        the `/users` endpoint.

        This endpoint supports <</core-api/field-filtering, field filtering>>
        and <</core-api/sorting-and-pagination, pagination>>.

        To narrow your result set to users that match certain criteria, see the
        <<search_users,Search users>> endpoint.


        The `business_token` field is conditionally returned in the response (it
        cannot be set through the API).

        You can use this field in conjunction with the `parent_token` field to
        determine whether the user has a parent or grandparent that is a
        business:


        [cols="1,1,1"]

        |===

        | parent_token | business_token | Description


        | Not populated

        | Not populated

        | User does not have a parent.


        | Populated

        | Not populated

        | User's parent is a user.


        | Populated; matches `business_token`

        | Populated; matches `parent_token`

        | User's parent is a business.


        | Populated; does not match `business_token`

        | Populated; does not match `parent_token`

        | User's parent is a user and the parent's parent is a business.

        |===
      operationId: getUsers
      parameters:
        - description: The number of `user` resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Search type
          explode: true
          in: query
          name: search_type
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 2
                data:
                  - account_holder_group_token: DEFAULT_AHG
                    active: true
                    address1: 1234 Grove Street
                    birth_date: 1991-01-01
                    city: Berkeley
                    country: USA
                    created_time: 2021-08-16T19:43:02Z
                    email: jane.doe@company.com
                    first_name: Jane
                    gender: F
                    identifications:
                      - type: SSN
                        value: "5555"
                    last_modified_time: 2021-08-16T19:43:02Z
                    last_name: Doe
                    metadata:
                      authentication_answer1: Cashier
                      authentication_answer2: Trabant
                      authentication_answer3: Blue
                      authentication_question1: What was your first job?
                      authentication_question2: What make was your first car?
                      authentication_question3: What is your favorite color?
                      notification_email: jane.doe@home.com
                      notification_language: spa
                    password: P@ssw0rd
                    phone: "5105551212"
                    postal_code: "94702"
                    state: CA
                    status: ACTIVE
                    token: my_user_01
                    uses_parent_account: false
                  - account_holder_group_token: DEFAULT_AHG
                    active: true
                    address1: 2345 Main Street
                    birth_date: 1992-02-02
                    city: Berkeley
                    country: USA
                    created_time: 2022-03-14T00:45:00Z
                    email: john.doe@company.com
                    first_name: John
                    gender: M
                    identifications:
                      - type: SSN
                        value: "4444"
                    last_modified_time: 2022-03-14T00:45:00Z
                    last_name: Doe
                    metadata:
                      key1: value1
                      key2: value2
                    password: my-password
                    phone: "5105551212"
                    postal_code: "94702"
                    state: CA
                    status: ACTIVE
                    token: my_user_02
                    uses_parent_account: false
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/UserCardHolderListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List users
      tags:
        - users
    post:
      description: >-
        This endpoint enables you to create a user.

        A new user's initial status depends on the <</core-api/kyc-verification,
        Know Your Customer (KYC) requirements>> of the program or associated
        <</core-api/account-holder-groups, account holder group>>.


        [cols="1,1,1,1"]

        |===

        | KYC Required | Initial User Status | User Active on Creation | User
        Limitations


        | Always

        | `UNVERIFIED`

        | Optional

        | Cannot load funds; cannot activate cards.


        | Conditionally

        | `LIMITED`

        | Optional

        | Restricted by rules in `accountholdergroups.pre_kyc_controls`.


        | Never

        | `ACTIVE`

        | Required

        | None.

        |===


        To change or track the history of a user's status, see the
        `/usertransitions` endpoint.

        For more information on status changes, see <<create_user_transition,
        Create User Transition>> on this page.


        To perform KYC verification on users, the `user` object must have the
        following fields configured:


        * `first_name`

        * `last_name`

        * `address1` (cannot be a PO Box)

        * `city`

        * `state`

        * `postal_code`

        * `country`

        * `birth_date`

        * `identifications`


        [NOTE]

        The `identifications` requirement depends on your program's
        configuration.

        To determine if you should provide a full or abbreviated identification
        number, contact your Marqeta representative.

        KYC verification requires the full Social Security Number (SSN) of the
        user.


        To create a child user, you must identify the parent user or business
        and decide whether the child user shares an account with the parent.


        The parent must be an existing user or business.

        On the child user, set the `parent_token` field to the value of the
        parent's `token` field.

        If either the parent or the parent's parent is a business, a
        `business_token` field is added to the user.

        This field's value is set to the token of either the parent or
        grandparent (whichever is the business).


        The `uses_parent_account` field determines whether the child shares
        balances with the parent (`true`) or whether the child balances are
        independent of the parent (`false`).

        If you do not specify a value for `uses_parent_account`, it is set to
        `false` by default (the user does not share the parent's balance) and
        returned in the response body.

        This field cannot be updated, so you must decide upon creation whether
        the child user shares the parent balance.


        Sharing an account with a parent user affects how the child user
        interacts with cards as follows:


        * A child user cannot spend funds if its parent is not active.

        * An active child user can activate cards, whether the parent is active
        or not.
      operationId: postUsers
      requestBody:
        content:
          application/json:
            example:
              address1: 1234 Grove Street
              birth_date: 1991-01-01
              city: Berkeley
              country: USA
              email: jane.doe@company.com
              first_name: Jane
              gender: F
              identifications:
                - type: SSN
                  value: "111234444"
              last_name: Doe
              metadata:
                authentication_answer1: Cashier
                authentication_answer2: Trabant
                authentication_answer3: Blue
                authentication_question1: What was your first job?
                authentication_question2: What make was your first car?
                authentication_question3: What is your favorite color?
                notification_email: jane.doe@home.com
                notification_language: spa
              password: P@ssw0rd
              phone: "5105551212"
              postal_code: "94702"
              state: CA
              token: my_user_01
              uses_parent_account: false
            schema:
              $ref: "#/components/schemas/card_holder_model"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                account_holder_group_token: DEFAULT_AHG
                active: true
                address1: 1234 Grove Street
                birth_date: 1991-01-01
                city: Berkeley
                corporate_card_holder: false
                country: USA
                created_time: 2022-03-26T20:21:24Z
                email: jane.doe6@company.com
                first_name: Jane
                gender: F
                last_modified_time: 2022-03-26T20:21:24Z
                last_name: Doe
                metadata:
                  authentication_answer1: Cashier
                  authentication_answer2: Trabant
                  authentication_answer3: Blue
                  authentication_question1: What was your first job?
                  authentication_question2: What make was your first car?
                  authentication_question3: What is your favorite color?
                  notification_email: jane.doe@home.com
                  notification_language: spa
                password: P@ssw0rd
                phone: "5105551212"
                ssn: "5555"
                state: CA
                status: ACTIVE
                token: my_user_01
                uses_parent_account: false
                zip: "94702"
              schema:
                $ref: "#/components/schemas/user_card_holder_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "409":
          content: {}
          description: Request already processed with a different payload
        "412":
          content: {}
          description: Pre-condition setup issue
        "500":
          content: {}
          description: Server error
      summary: Create user
      tags:
        - users
  /users/auth/changepassword:
    post:
      description: >-
        To change a user password, send a `POST` request to the
        `/users/auth/changepassword` endpoint and include the `current_password`
        and `new_password` in link:http://www.json.org/[JSON, window="_blank"]
        format in the body of the request.

        This endpoint operates in the context of a currently logged-in user.


        A successful password change returns an empty response body with a
        response code of `204 No Content`.
      operationId: postUsersAuthChangepassword
      requestBody:
        content:
          application/json:
            example:
              current_password: my_old_password
              new_password: my_new_password
            schema:
              $ref: "#/components/schemas/password_update_model"
        description: Password update object
        required: true
      responses:
        "204":
          content: {}
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Server error
      summary: Update user password
      tags:
        - users
  /users/auth/clientaccesstoken:
    post:
      description: >-
        Each time you want to display a virtual card's sensitive data (for
        example, when using `marqeta.js`), you must first request a new,
        single-use client access token from the Marqeta platform by sending a
        `POST` request to the `/users/auth/clientaccesstoken` endpoint.

        Unredeemed client access tokens expire after five minutes.
      operationId: postUsersAuthClientaccesstoken
      requestBody:
        content:
          application/json:
            example:
              card_token: my_card_01
            schema:
              $ref: "#/components/schemas/client_access_token_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                created: 2022-07-29T12:00:00Z
                expires: 2022-07-29T12:05:00Z
                token: ewogICJ0b2tlbiI6ICI5NzIwMDkwNS00ODc0LTRkMWEtODEzMS1jMWI3NDAwNzJjM2MmYXBwbGljYXRpb25fdG9rZW49eW91cl9hcHBsaWNhdGlvbl90b2tlbiIsCiAgImFwcGxpY2F0aW9uIjogewogICAgInRva2VuIjogInlvdXJfYXBwbGljYXRpb25fdG9rZW4iLAogICAgImFjdGl2ZSI6IHRydWUsCiAgICAiY2xpZW50X2FwaV9iYXNlX3VybCI6ICJodHRwOi8vd2lkZ2V0cy1lbnYubWFycWV0YS5jb20vY2xpZW50L2FwaS92MSIsCiAgICAiYXNzZXRzX3VybCI6ICJodHRwOi8vd2lkZ2V0cy1lbnYubWFycWV0YS5jb20vY2xpZW50L2Fzc2V0cy8xLjAuMCIsCiAgICAiY2xpZW50dG9rZW5hcHBsaWNhdGlvbklkIjogIjU3MDI2OTJhMGI4ZGNlOTg1YWVmNTExMiIKICB9LAogICJhcHBsaWNhdGlvbl90b2tlbiI6IG51bGwsCiAgImV4cGlyZXMiOiAiMjAxOC0xMi0zMVQyMzo1OTo1OSswMDAwIiwKICAiY2FyZF90b2tlbiI6ICJ0b2tlbl9vZl90aGVfY2FyZF95b3VfbmVlZF90b19wcmVzZW50IiwKICAiYWNjZXNzZWQiOiBudWxsLAogICJjbGllbnR0b2tlbklkIjogIjU5MTc2Y2JlMGI4ZGNlOTg1YWVmNTEzMCIsCiAgImNyZWF0ZWQiOiAiMjAxOC0wMS0wMVQwMDowMDowMCswMDAwIgp9
              schema:
                $ref: "#/components/schemas/client_access_token_response"
          description: Created
        "400":
          content: {}
          description: User input error/Bad request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Server error
      summary: Create client access token
      tags:
        - users
  /users/auth/clientaccesstoken/{token}:
    get:
      description: To retrieve application and card information using a client access
        token, send a `GET` request to the
        `/users/auth/clientaccesstoken/{token}` endpoint.
      operationId: getUsersAuthClientaccesstokenToken
      parameters:
        - description: The client access token.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: The unique identifier of the `application` object.
          explode: true
          in: query
          name: application_token
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                created: 2022-07-29T12:00:00Z
                expires: 2022-07-29T12:05:00Z
                token: ewogICJ0b2tlbiI6ICI5NzIwMDkwNS00ODc0LTRkMWEtODEzMS1jMWI3NDAwNzJjM2MmYXBwbGljYXRpb25fdG9rZW49eW91cl9hcHBsaWNhdGlvbl90b2tlbiIsCiAgImFwcGxpY2F0aW9uIjogewogICAgInRva2VuIjogInlvdXJfYXBwbGljYXRpb25fdG9rZW4iLAogICAgImFjdGl2ZSI6IHRydWUsCiAgICAiY2xpZW50X2FwaV9iYXNlX3VybCI6ICJodHRwOi8vd2lkZ2V0cy1lbnYubWFycWV0YS5jb20vY2xpZW50L2FwaS92MSIsCiAgICAiYXNzZXRzX3VybCI6ICJodHRwOi8vd2lkZ2V0cy1lbnYubWFycWV0YS5jb20vY2xpZW50L2Fzc2V0cy8xLjAuMCIsCiAgICAiY2xpZW50dG9rZW5hcHBsaWNhdGlvbklkIjogIjU3MDI2OTJhMGI4ZGNlOTg1YWVmNTExMiIKICB9LAogICJhcHBsaWNhdGlvbl90b2tlbiI6IG51bGwsCiAgImV4cGlyZXMiOiAiMjAxOC0xMi0zMVQyMzo1OTo1OSswMDAwIiwKICAiY2FyZF90b2tlbiI6ICJ0b2tlbl9vZl90aGVfY2FyZF95b3VfbmVlZF90b19wcmVzZW50IiwKICAiYWNjZXNzZWQiOiBudWxsLAogICJjbGllbnR0b2tlbklkIjogIjU5MTc2Y2JlMGI4ZGNlOTg1YWVmNTEzMCIsCiAgImNyZWF0ZWQiOiAiMjAxOC0wMS0wMVQwMDowMDowMCswMDAwIgp9
              schema:
                $ref: "#/components/schemas/client_access_token_response"
          description: Success
        "400":
          content: {}
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Server error
      summary: Retrieve client access token
      tags:
        - users
  /users/auth/login:
    post:
      description: >-
        To log in a user and return a user access token, send a `POST` request
        to the `/users/auth/login` endpoint and include the user details in
        link:http://www.json.org/[JSON, window="_blank"] format in the body of
        the request.


        [TIP]

        To check a user's credentials without logging out the user, call the
        `/users/auth/onetime` endpoint.
      operationId: postUsersAuthLogin
      requestBody:
        content:
          application/json:
            example:
              email: jane.doe@company.com
              password: P@ssw0rd
              user_token: my_user_01
            schema:
              $ref: "#/components/schemas/login_request_model"
        description: User login object
        required: false
      responses:
        "204":
          content:
            application/json:
              example:
                access_token:
                  expires: 2023-03-01T21:02:04Z
                  one_time: false
                  token: e12b1f64-1444-4aa3-83d9-347800c68e94
                user:
                  active: true
                  created_time: 2021-04-01T17:52:39Z
                  email: jane.doe@company.com
                  last_modified_time: 2021-04-01T17:52:39Z
                  password: P@ssw0rd
                  token: my_user_01
                  uses_parent_account: false
              schema:
                $ref: "#/components/schemas/login_response_model"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Server error
      summary: Log in user
      tags:
        - users
  /users/auth/logout:
    post:
      description: >-
        To log out a user, send a `POST` request to the `/users/auth/logout`
        endpoint.


        A successful logout returns an empty response body with a response code
        of `204 No Content`.
      operationId: postUsersAuthLogout
      responses:
        "204":
          content: {}
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Server error
      summary: Log out user
      tags:
        - users
  /users/auth/onetime:
    post:
      description: >-
        This endpoint returns a single-use access token.

        This type of token authorizes a single request to access API endpoints
        and data associated with a particular user.

        A single-use access token differs from a user access token (as returned
        by `POST` `/users/auth/login`) only in the number of times it can be
        used.


        To return a single-use access token, send a `POST` request to the
        `/users/auth/onetime` endpoint.

        Provide one of these sets of input data:


        * *Case #1* – Application token and user access token

        * *Case #2* – Application token, admin access token, and user token

        * *Case #3* – Application token, user's Marqeta password, and user's
        email address


        In each case, provide the application token as the HTTP Basic
        Authentication username in the request header's Authorization field.

        When applicable, provide the user access token or admin access token as
        the HTTP Basic Authentication password.

        When applicable, provide the user token or user's Marqeta password and
        email address in link:http://www.json.org/[JSON, window="_blank"] format
        in the request body.


        Before instantiating an embedded Marqeta widget, call this endpoint to
        obtain the single-use access token required as input (cases #1 and #2).


        This endpoint is also useful when you want to check a user's credentials
        before performing a sensitive operation without having to log out the
        user (case #3).


        [NOTE]

        Calling this endpoint and returning a single-use access token does not
        invalidate the user's current user access token.
      operationId: postUsersAuthOnetime
      requestBody:
        content:
          application/json:
            examples:
              case_one:
                summary: "*Case 1:* Authorization: Basic
                  `my_application_token:my_user_access_token`"
                value: {}
              case_three:
                summary: "*Case 3:* Authorization: Basic `my_application_token`"
                value:
                  email: jane.doe@company.com
                  password: P@ssw0rd
              case_two:
                summary: "*Case 2:* Authorization: Basic
                  `my_application_token:my_admin_access_token`"
                value:
                  user_token: my_user_token
            schema:
              $ref: "#/components/schemas/one_time_request_model"
        description: One-time object
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                expires: 2023-04-01T00:00:00Z
                one_time: true
                token: 697e0bde-ea52-44bd-8150-0e0f83e9625d
              schema:
                $ref: "#/components/schemas/access_token_response"
          description: Created
        "400":
          content: {}
          description: User input error/Bad request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Server error
      summary: Create single-use token
      tags:
        - users
  /users/auth/resetpassword:
    post:
      description: >-
        The first step in resetting a user's password is to request a password
        reset token.

        Send a `POST` request to the `/users/auth/resetpassword` endpoint and
        include the user's email address in link:http://www.json.org/[JSON,
        window="_blank"] format in the body of the request.

        This request generates and sends an email message containing the
        `user_token` and `password_reset_token` to the user's email address.

        You must customize the email message with a link that passes the
        `user_token` and `password_reset_token` to a web page where a subsequent
        request updates the password.


        A successful request returns an empty response body with a response code
        of `204 No Content`.
      operationId: postUsersAuthResetpassword
      requestBody:
        content:
          application/json:
            example:
              email: jane.doe@company.com
            schema:
              $ref: "#/components/schemas/reset_user_password_email_model"
        required: false
      responses:
        "204":
          content: {}
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Server error
      summary: Request user password reset token
      tags:
        - users
  /users/auth/resetpassword/{token}:
    post:
      description: >-
        To reset the user's password, send a `POST` request to the
        `/users/auth/resetpassword/{token}` endpoint.

        Include the `user_token` and `new_password` in
        link:http://www.json.org/[JSON, window="_blank"] format in the body of
        the request.

        Include the `password_reset_token` as a path parameter.


        A successful password reset returns an empty response body with a
        response code of `204 No Content`.
      operationId: postUsersAuthResetpasswordToken
      parameters:
        - description: The password reset token generated using the `POST
            /users/auth/resetpassword` operation.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              new_password: newPassword123@
              user_token: my_user_01
            schema:
              $ref: "#/components/schemas/reset_user_password_model"
        required: false
      responses:
        "204":
          content: {}
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Server error
      summary: Reset user password
      tags:
        - users
  /users/auth/verifyemail:
    post:
      description: >-
        The first step in verifying a cardholder's email address is to request
        an email verification token.

        To request an email verification token, send a `POST` request to the
        `/users/auth/verifyemail` endpoint.

        No input parameters are required because this operation is performed in
        the context of an authenticated user.

        This request generates and sends an email message containing the email
        verification token to the user's email address.

        The email message must be customized with a link that passes the email
        verification token to a web page where a subsequent request verifies the
        email address.

        You set up the subsequent request in step 2.


        A successful request returns an empty response body with a response code
        of `204 No Content`.
      operationId: postUsersAuthVerifyemail
      responses:
        "204":
          content: {}
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Server error
      summary: Request email verification token
      tags:
        - users
  /users/auth/verifyemail/{token}:
    post:
      description: >-
        To verify the email address, send a `POST` request to the
        `/users/auth/verifyemail/{email_verification_token}` endpoint.

        Include the `email_verification_token` as a path parameter.


        A successful email verification returns an empty response body with a
        response code of `204 No Content`.
      operationId: postUsersAuthVerifyemailToken
      parameters:
        - description: The email verification token generated using the `POST
            /users/auth/verifyemail` operation.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "204":
          content: {}
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Server error
      summary: Verify email address
      tags:
        - users
  /users/lookup:
    post:
      description: >-
        To search for one or more users, send a `POST` request to the
        `/users/lookup` endpoint.

        Include in the message body any parameters by which you want to query.

        This endpoint supports <</core-api/field-filtering, field filtering>>
        and <</core-api/sorting-and-pagination, pagination>>.
      operationId: postUsersLookup
      parameters:
        - description: The number of `user` resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Search type
          explode: true
          in: query
          name: search_type
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      requestBody:
        content:
          application/json:
            example:
              first_name: Jane
            schema:
              $ref: "#/components/schemas/user_card_holder_search_model"
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data:
                  - account_holder_group_token: DEFAULT_AHG
                    active: true
                    address1: 1234 Grove Street
                    birth_date: 1991-01-01
                    city: Berkeley
                    country: USA
                    created_time: 2020-03-16T20:26:28Z
                    email: jane.doe@company.com
                    first_name: Jane
                    gender: F
                    identifications:
                      - type: DRIVERS_LICENSE
                        value: "12345"
                    last_modified_time: 2020-03-16T20:26:29Z
                    last_name: Doe
                    metadata: {}
                    password: P@ssw0rd
                    phone: "5105551212"
                    postal_code: "94702"
                    state: CA
                    status: ACTIVE
                    token: my_user_01
                    uses_parent_account: false
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/UserCardHolderListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: Search users
      tags:
        - users
  /users/{parent_token}/children:
    get:
      description: >-
        To retrieve users who are children of a parent user or business, send a
        `GET` request to the `/users/{parent_token}/children` endpoint.

        Include the parent's user or business token as a URL path parameter.


        The `business_token` field is conditionally returned in the response (it
        cannot be set through the API).

        You can use this field in conjunction with the `parent_token` field to
        determine whether the user has a parent or grandparent that is a
        business:


        [cols="1,1,1"]

        |===

        | parent_token | business_token | Description


        | Not populated

        | Not populated

        | User does not have a parent.


        | Populated

        | Not populated

        | User's parent is a user.


        | Populated; matches `business_token`

        | Populated; matches `parent_token`

        | User's parent is a business.


        | Populated; does not match `business_token`

        | Populated; does not match `parent_token`

        | User's parent is a user and the parent's parent is a business.

        |===


        This endpoint supports <</core-api/field-filtering, field filtering>>.
      operationId: getUsersParenttokenChildren
      parameters:
        - description: The number of user resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: The unique identifier of the parent account holder.
          explode: false
          in: path
          name: parent_token
          required: true
          schema:
            type: string
          style: simple
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data:
                  - account_holder_group_token: DEFAULT_AHG
                    active: true
                    address1: 123 Main Street
                    city: Oakland
                    country: USA
                    created_time: 2020-08-16T19:46:58Z
                    email: john_smith@company.com
                    first_name: John
                    gender: M
                    identifications:
                      - birth_date: 1986-04-01
                        type: SSN
                        value: "7777"
                    last_modified_time: 2020-08-16T19:46:58Z
                    last_name: Smith
                    metadata: {}
                    parent_token: my_user_01
                    password: P@55word
                    phone: "5101111111"
                    postal_code: "94601"
                    state: CA
                    status: ACTIVE
                    token: child_of_parent
                    uses_parent_account: true
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/UserCardHolderListResponse"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: List user child accounts
      tags:
        - users
  /users/{token}:
    get:
      description: >-
        To retrieve a specific user, send a `GET` request to the
        `/users/{token}` endpoint.

        Include the user `token` path parameter to specify the user to return.


        The `business_token` field is conditionally returned in the response (it
        cannot be set through the API).

        You can use this field in conjunction with the `parent_token` field to
        determine whether the user has a parent or grandparent that is a
        business:


        [cols="1,1,1"]

        |===

        | parent_token | business_token | Description


        | Not populated

        | Not populated

        | User does not have a parent.


        | Populated

        | Not populated

        | User's parent is a user.


        | Populated; matches `business_token`

        | Populated; matches `parent_token`

        | User's parent is a business.


        | Populated; does not match `business_token`

        | Populated; does not match `parent_token`

        | User's parent is a user and the parent's parent is a business.

        |===


        This endpoint supports <</core-api/field-filtering, field filtering>>.
      operationId: getUsersToken
      parameters:
        - description: The unique identifier of the `user` resource.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                account_holder_group_token: DEFAULT_AHG
                active: true
                address1: 1234 Grove Street
                birth_date: 1991-01-01
                city: Berkeley
                country: USA
                created_time: 2021-08-16T19:39:34Z
                email: jane.doe@company.com
                first_name: Jane
                gender: F
                identifications:
                  - type: SSN
                    value: "5555"
                last_modified_time: 2021-08-16T19:39:34Z
                last_name: Doe
                metadata:
                  authentication_answer1: Cashier
                  authentication_answer2: Trabant
                  authentication_answer3: Blue
                  authentication_question1: What was your first job?
                  authentication_question2: What make was your first car?
                  authentication_question3: What is your favorite color?
                  notification_email: jane.doe@home.com
                  notification_language: spa
                password: P@ssw0rd
                phone: "5105551212"
                postal_code: "94702"
                state: CA
                status: ACTIVE
                token: my_user_01
                uses_parent_account: false
              schema:
                $ref: "#/components/schemas/user_card_holder_response"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Cardholder not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve user
      tags:
        - users
    put:
      description: >-
        To update a specific `user` resource, send a `PUT` request to the
        `/users/{token}` endpoint.

        Include the user `token` path parameter to specify the user to update.


        To unlink a child user account from a parent account, pass a null value
        to the `parent_token` field of the child user resource.
      operationId: putUsersToken
      parameters:
        - description: The unique identifier of the `user` resource you want to update.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              address1: 4321 Grove Street
            schema:
              $ref: "#/components/schemas/UserCardHolderUpdateModel"
        description: User object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                account_holder_group_token: DEFAULT_AHG
                active: true
                address1: 4321 Grove Street
                corporate_card_holder: false
                created_time: 2021-01-29T00:12:20Z
                last_modified_time: 2021-09-23T21:41:24Z
                metadata: {}
                status: ACTIVE
                token: my_user_01
                uses_parent_account: false
              schema:
                $ref: "#/components/schemas/card_holder_model"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: Update user
      tags:
        - users
  /users/{token}/ssn:
    get:
      description: >-
        To retrieve the government-issued identification number for a user, send
        a `GET` request to the `/users/{token}/ssn` endpoint.

        Include the `token` path parameter to specify the user whose
        identification number (SSN, TIN, NIN, SIN) you wish to return.

        You can indicate whether to return the full number or the last four
        digits only.
      operationId: getUsersTokenSsn
      parameters:
        - description: The unique identifier of the `user` resource.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: >-
            To return the full identification number, set to `true`.

            To return only the last four digits, set to `false`.


            If the identifications array contains only the last four digits of
            the identification number, the `/users/{token}/ssn` endpoint will
            return only the last four digits, regardless of the `full_ssn`
            parameter.
          explode: true
          in: query
          name: full_ssn
          required: false
          schema:
            type: boolean
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                ssn: "5555"
              schema:
                $ref: "#/components/schemas/ssn_response_model"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: Retrieve user identification number
      tags:
        - users
  /usertransitions:
    post:
      description: >-
        This endpoint enables you to change a user's status, depending on your
        role and the previous status change.

        By changing a user's status, you can control the user's capabilities and
        the setting of the `user.active` field.

        You cannot control `user.active` directly.


        [cols="2,4a,4a"]

        |===

        | user.status Field | Description | User Limitations


        | `UNVERIFIED` 

        | Initial status of a new user belonging to an account holder group
        where KYC is always required.  +

        *Allowable Transitions:*  +

        `ACTIVE`, `CLOSED`

        | Cannot load funds or activate cards.  +

        *user.active Field:*  +

        `false` 


        | `LIMITED` 

        | Initial status of a new user belonging to an account holder group
        where KYC is conditionally required.  +

        *Allowable Transitions:*  +

        `ACTIVE`, `SUSPENDED`, `CLOSED`

        | Restricted by rules in `accountholdergroups.pre_kyc_controls`.  +

        *user.active Field:*  +

        `true` 


        | `ACTIVE` 

        | Status of a user who has passed KYC, or initial status of a new user
        belonging to an account holder group where KYC is never required.  +

        *Allowable Transitions:*  +

        `SUSPENDED`, `CLOSED`, `UNVERIFIED`

        | None.  +

        *user.active Field:*  +

        `true`


        | `SUSPENDED` 

        | The user is temporarily inactive.


        Transitioning a suspended user to the `ACTIVE` status is restricted,
        based on your role and the details of the previous status change.  +

        *Allowable Transitions:*  +

        `ACTIVE`, `LIMITED`, `UNVERIFIED`, `CLOSED`

        | Cannot load funds or activate cards.  +

        *user.active Field:*  +

        `false`


        | `CLOSED` 

        | The user is permanently inactive.


        In general, the `CLOSED` status should be terminal. 

        For exceptional cases, you can transition a user to other statuses,
        depending on your role and the details of the previous status change. 

        Contact your Marqeta representative for more information.  +

        *Allowable Transitions:*  +

        `ACTIVE`, `LIMITED`, `UNVERIFIED`, `SUSPENDED`

        | Cannot load funds or activate cards.  +

        *user.active Field:*  +

        `false`


        |===


        [NOTE]

        The Marqeta platform transitions a user's status in response to certain
        events.

        For example, a user in the `UNVERIFIED` status is transitioned to
        `ACTIVE` when the user passes KYC verification.
      operationId: postUsertransitions
      requestBody:
        content:
          application/json:
            example:
              channel: API
              reason: Activating user
              reason_code: "00"
              status: ACTIVE
              token: activate_05
              user_token: my_user_01
            schema:
              $ref: "#/components/schemas/UserTransitionRequest"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                channel: API
                created_time: 2022-03-15T00:00:00Z
                reason: Activating user
                reason_code: "00"
                status: ACTIVE
                token: activate_05
                user_token: my_user_01
              schema:
                $ref: "#/components/schemas/UserTransitionResponse"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "409":
          content: {}
          description: Request already processed with a different payload
        "412":
          content: {}
          description: Pre-condition setup issue
        "500":
          content: {}
          description: Server error
      summary: Create user transition
      tags:
        - user transitions
  /usertransitions/user/{user_token}:
    get:
      description: List all transitions for a given user.
      operationId: getUsertransitionsUserUsertoken
      parameters:
        - description: The unique identifier of the `user` resource.
          explode: false
          in: path
          name: user_token
          required: true
          schema:
            type: string
          style: simple
        - description: The number of user transitions to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -id
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data:
                  - channel: API
                    created_time: 2022-03-15T00:00:00Z
                    reason: Activating user
                    reason_code: "00"
                    status: ACTIVE
                    token: activate_05
                    user_token: my_user_01
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/UserTransitionListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List transitions for user
      tags:
        - user transitions
  /usertransitions/{token}:
    get:
      description: Retrieve a user transition.
      operationId: getUsertransitionsToken
      parameters:
        - description: The unique identifier of the user transition you want to retrieve.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                channel: API
                created_time: 2022-03-15T00:00:00Z
                reason: Activating user
                reason_code: "00"
                status: ACTIVE
                token: activate_05
                user_token: my_user_01
              schema:
                $ref: "#/components/schemas/UserTransitionResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Cardholder not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve user transition
      tags:
        - user transitions
  /velocitycontrols:
    get:
      description: >-
        Retrieves a list of all the velocity controls associated with a specific
        user or card product, or lists all the velocity controls defined for
        your program.


        Include either a `user` or a `card_product` query parameter to indicate
        the user or card product whose associated velocity controls you want to
        retrieve (do not include both).


        To list all velocity controls for your program, omit the `user` and
        `card_product` query parameters from your request.


        This endpoint supports <</core-api/field-filtering, field filtering>>
        and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getVelocitycontrols
      parameters:
        - description: >-
            The unique identifier of the card product.

            Enter the string `null` to retrieve velocity controls that are not
            associated with any card product.
          explode: true
          in: query
          name: card_product
          required: false
          schema:
            type: string
          style: form
        - description: >-
            The unique identifier of the user.

            Enter the string `null` to retrieve velocity controls that are not
            associated with any user.
          explode: true
          in: query
          name: user
          required: false
          schema:
            type: string
          style: form
        - description: The number of velocity control resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data:
                  - active: true
                    amount_limit: 500
                    approvals_only: true
                    association:
                      user_token: my_user_04
                    currency_code: USD
                    include_cashback: true
                    include_credits: false
                    include_purchases: true
                    include_transfers: true
                    include_withdrawals: true
                    merchant_scope: {}
                    token: my_velocitycontrol_01
                    usage_limit: 10
                    velocity_window: DAY
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/VelocityControlListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List velocity controls
      tags:
        - velocity controls
    post:
      description: >-
        Limits how much and how frequently a user can spend funds. 

        If multiple velocity controls apply to the same user, the user cannot
        exceed any of the defined spending limits.


        [TIP]

        You can create program-level controls in the sandbox environment.

        However, you must work with your Marqeta representative to create
        program-level controls in a production environment.
      operationId: postVelocitycontrols
      requestBody:
        content:
          application/json:
            example:
              amount_limit: 500
              association:
                user_token: my_user_04
              currency_code: USD
              token: my_velocitycontrol_01
              usage_limit: 10
              velocity_window: DAY
            schema:
              $ref: "#/components/schemas/velocity_control_request"
        description: Velocity control object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                active: true
                amount_limit: 500
                approvals_only: true
                association:
                  user_token: my_user_04
                currency_code: USD
                include_cashback: true
                include_credits: false
                include_purchases: true
                include_transfers: true
                include_withdrawals: true
                merchant_scope: {}
                token: my_velocitycontrol_01
                usage_limit: 10
                velocity_window: DAY
              schema:
                $ref: "#/components/schemas/velocity_control_response"
          description: Created
        "400":
          content: {}
          description: Bad request
        "409":
          content: {}
          description: Token already associated with a different payload
        "500":
          content: {}
          description: Server error
      summary: Create velocity control
      tags:
        - velocity controls
  /velocitycontrols/user/{user_token}/available:
    get:
      description: >-
        Retrieves a list of the available balances of the velocity controls
        associated with a user.


        Depending on the control, the balance can include an available monetary
        amount, the number of transactions remaining, and the number of days
        remaining in the time window.


        This endpoint supports <</core-api/field-filtering, field filtering>>
        and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getVelocitycontrolsUserUsertokenAvailable
      parameters:
        - description: The unique identifier of the cardholder.
          explode: false
          in: path
          name: user_token
          required: true
          schema:
            type: string
          style: simple
        - description: The number of available balance resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
        - explode: true
          in: query
          name: force_dto
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 2
                data:
                  - active: true
                    amount_limit: 296
                    approvals_only: true
                    association: {}
                    available:
                      amount: 296
                      days_remaining: 1
                      uses: 1
                    currency_code: USD
                    include_cashback: true
                    include_credits: false
                    include_purchases: true
                    include_transfers: true
                    include_withdrawals: true
                    merchant_scope:
                      mcc: "3058"
                    name: Jane Doe
                    token: card_3
                    usage_limit: 1
                    velocity_window: DAY
                  - active: true
                    amount_limit: 500.5
                    approvals_only: true
                    association: {}
                    available:
                      amount: 500.5
                      days_remaining: 1
                      uses: 1000
                    currency_code: "840"
                    include_cashback: true
                    include_credits: false
                    include_purchases: true
                    include_transfers: true
                    include_withdrawals: true
                    merchant_scope:
                      mcc: "1234"
                    token: card_4
                    usage_limit: 1000
                    velocity_window: DAY
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/VelocityControlBalanceListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List user velocity control balances
      tags:
        - velocity controls
  /velocitycontrols/{token}:
    get:
      description: Retrieves a specific velocity control.
      operationId: getVelocitycontrolsToken
      parameters:
        - description: The unique identifier of the velocity control resource.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                active: true
                amount_limit: 500
                approvals_only: true
                association:
                  user_token: my_user_04
                currency_code: USD
                include_cashback: true
                include_credits: false
                include_purchases: true
                include_transfers: true
                include_withdrawals: true
                merchant_scope: {}
                token: my_velocitycontrol_01
                usage_limit: 10
                velocity_window: DAY
              schema:
                $ref: "#/components/schemas/velocity_control_response"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Velocity control not found
        "500":
          content: {}
          description: Server error
      summary: Returns a specific velocity control
      tags:
        - velocity controls
    put:
      description: Updates a specific velocity control.
      operationId: putVelocitycontrolsToken
      parameters:
        - description: The unique identifier of the velocity control resource.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              amount_limit: 1000
              token: my_velocitycontrol_01
              usage_limit: 20
            schema:
              $ref: "#/components/schemas/velocity_control_update_request"
        description: Velocity control object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                active: true
                amount_limit: 1000
                approvals_only: true
                association:
                  user_token: my_user_04
                currency_code: USD
                include_cashback: true
                include_credits: false
                include_purchases: true
                include_transfers: true
                include_withdrawals: true
                merchant_scope: {}
                token: my_velocitycontrol_01
                usage_limit: 20
                velocity_window: DAY
              schema:
                $ref: "#/components/schemas/velocity_control_response"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: Update velocity control
      tags:
        - velocity controls
  /webhooks:
    get:
      description: >-
        Returns an array of all webhooks.


        This endpoint supports <</core-api/field-filtering, field filtering>>,
        <</core-api/sorting-and-pagination, sorting>>, and
        <</core-api/sorting-and-pagination, pagination>>.
      operationId: getWebhooks
      parameters:
        - description: Set to `true` to return only active webhook configurations.
          explode: true
          in: query
          name: active
          required: false
          schema:
            default: false
            type: boolean
          style: form
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: >-
            Comma-delimited list of fields to return (`field_1,field_2`, and so
            on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields
            `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending
            order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data:
                  - active: true
                    config:
                      basic_auth_password: my_20-to-50-character_password
                      basic_auth_username: my_username
                      custom_header:
                        my_header_name_1: my_value_1
                        my_header_name_2: my_value_2
                        my_header_name_3: my_value_3
                      secret: my_20-character-min_secret
                      url: https://my_secure_domain.com/webhook
                    created_time: 2022-02-24T23:20:28Z
                    events:
                      - "*"
                    last_modified_time: 2022-02-24T23:20:28Z
                    name: my_webhook_name
                    token: my_webhook_token
                end_index: 0
                is_more: true
                start_index: 0
              schema:
                $ref: "#/components/schemas/WebhookResponseModelListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List webhooks
      tags:
        - Webhooks Management
    post:
      description: Creates a webhook.
      operationId: postWebhooks
      requestBody:
        content:
          application/json:
            example:
              active: true
              config:
                basic_auth_password: my_20-to-50-character_password
                basic_auth_username: my_username
                custom_header:
                  my_header_name_1: my_value_1
                  my_header_name_2: my_value_2
                secret: my_20-character-min_secret
                url: https://my_secure_domain.com/webhook
              events:
                - "*"
              name: my_webhook_name
              token: my_webhook_token
            schema:
              $ref: "#/components/schemas/webhook_request_model"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                active: true
                config:
                  basic_auth_password: my_20-to-50-character_password
                  basic_auth_username: my_username
                  custom_header:
                    my_header_name_1: my_value_1
                    my_header_name_2: my_value_2
                  secret: my_20-character-min_secret
                  url: https://my_secure_domain.com/webhook
                created_time: 2022-02-24T23:20:28Z
                events:
                  - "*"
                last_modified_time: 2022-02-24T23:20:28Z
                name: my_webhook_name
                token: my_webhook_token
              schema:
                $ref: "#/components/schemas/webhook_response_model"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "409":
          content: {}
          description: Request already processed with a different payload
        "500":
          content: {}
          description: Server error
      summary: Create webhook
      tags:
        - Webhooks Management
  /webhooks/customheaders/{token}:
    put:
      description: Adds or updates a webhook's custom HTTP headers.
      operationId: putWebhooksCustomHeadersToken
      parameters:
        - description: The unique identifier of the webhook.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              custom_header:
                my_header_name_1: my_value_1
                my_header_name_2: my_value_2
                my_header_name_3: my_value_3
            schema:
              $ref: "#/components/schemas/WebhookUpdateCustomHeaderRequest"
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                active: true
                config:
                  basic_auth_password: my_20-to-50-character_password
                  basic_auth_username: my_username
                  custom_header:
                    my_header_name_1: my_value_1
                    my_header_name_2: my_value_2
                    my_header_name_3: my_value_3
                  secret: my_20-character-min_secret
                  url: https://my_secure_domain.com/webhook
                created_time: 2022-02-06T08:12:32Z
                events:
                  - transaction.*
                last_modified_time: 2022-02-26T22:07:23Z
                name: my_webhook_name
                token: my_webhook_01
              schema:
                $ref: "#/components/schemas/webhook_response_model"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Resource not found
        "500":
          content: {}
          description: Server error
      summary: Updates a specific webhook configuration with custom headers
      tags:
        - Webhooks Management
  /webhooks/{token}:
    get:
      description: Retrieves a webhook.
      operationId: getWebhooksToken
      parameters:
        - description: The unique identifier of the webhook.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/webhook_response_model"
          description: Success
        "404":
          content: {}
          description: Resource not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve webhook
      tags:
        - Webhooks Management
    put:
      description: Updates a webhook.
      operationId: putWebhooksToken
      parameters:
        - description: The unique identifier of the webhook.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/webhook_base_model"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/webhook_response_model"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Resource not found
        "500":
          content: {}
          description: Server error
      summary: Update webhook
      tags:
        - Webhooks Management
  /webhooks/{token}/ping:
    post:
      description: >-
        Pings webhook endpoint.


        Send a ping request to your webhook endpoint to validate credentials and
        connectivity.

        Your webhook endpoint must be configured to respond.


        *Configuring your webhook endpoint*


        This subsection describes the ping request that your webhook endpoint
        should expect and its expected response.


        When the Marqeta platform receives the ping request, it sends a `POST`
        request containing the following body to the URL of your webhook
        endpoint:


        [#ping-webhook-sample]

        [source,json]

        ----

        {
          "pings": [
            {
              "token": "marqeta",
              "payload": "healthcheck"
            }
          ]
        }

        ----


        To indicate that it is functioning properly, your webhook endpoint must
        respond with a status code of "200" (see
        <</developer-guides/signature-verification, Signature Verification>> for
        a code example that identifies a ping request).

        The response can optionally include a link:http://www.json.org/[JSON,
        window="_blank"]-formatted body, for example:


        [#ping-webhook-sample-2]

        [source,json]

        ----

        {"my_endpoint_status": "alive"}

        ----


        The Marqeta platform then responds to its requestor by echoing, as-is,
        the response code and body received from your webhook endpoint.


        *Using the ping facility*


        To ping a webhook endpoint, send a `POST` request to
        `/webhooks/{token}/ping` and use the `token` path parameter to specify
        the webhook to ping.

        Include an empty, JSON-formatted body in the request, that is:


        [#ping-webhook-sample-3]

        [source,json]

        ----

        {}

        ----


        The following chain of actions occurs during a successful ping:


        . The Marqeta platform receives the ping request (`POST` to
        `/webhooks/{token}/ping`).

        . The Marqeta platform sends a request to your webhook endpoint.

        . Your webhook endpoint responds with a status code of "200" and an
        optional body.

        . The Marqeta platform responds to its requestor by echoing, as-is, the
        response code and body received from your webhook endpoint.


        [NOTE]

        If the customer-hosted endpoint fails to respond within five seconds,
        the Marqeta platform times out the request and responds with the
        following message body (where `<optional message>` represents additional
        details you can choose to include in the response):


        [#ping-webhook-sample-4]

        [source,json]

        ----

        {
          "error_message": "Webhook operation failed " + <optional message>,
          "error_code": "422600"
        }

        ----


        Failed pings are not automatically retried.
      operationId: postWebhooksTokenPing
      parameters:
        - description: The unique identifier of the webhook.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                pings:
                  - my_endpoint_status: alive
              schema:
                $ref: "#/components/schemas/webhook_ping_model"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Resource not found
        "500":
          content: {}
          description: Server error
      summary: Ping webhook
      tags:
        - Webhooks Management
  /webhooks/{token}/{event_type}/{event_token}:
    post:
      description: >-
        Resends an event notification to your webhook endpoint.


        Although you send this request as a `POST`, all parameters are passed in
        the URL and the body is empty.

        The event notification is resent to your webhook endpoint and also
        returned in the response to this request.
      operationId: postWebhooksTokenEventtypeEventtoken
      parameters:
        - description: The unique identifier of the webhook.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: Specifies the type of event you want to resend.
          explode: false
          in: path
          name: event_type
          required: true
          schema:
            $ref: "#/components/schemas/postWebhooksTokenEventtypeEventtokenEventType"
          style: simple
        - description: The token identifying the event for which you want to resend a
            notification.
          explode: false
          in: path
          name: event_token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content: {}
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Resource not found
        "500":
          content: {}
          description: Server error
      summary: Resend event notification
      tags:
        - Webhooks Management
components:
  schemas:
    ACHListResponse:
      properties:
        count:
          description: The number of resources to retrieve.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/aCHListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    AcceptedCountriesListResponse:
      properties:
        count:
          description: The number of `acceptedcountries` objects to retrieve.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/acceptedCountriesListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    AccountHolderGroupListResponse:
      properties:
        count:
          description: The number of resources to retrieve.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/accountHolderGroupListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    AddressRequestModel:
      description: An address associated with the business.
      properties:
        address1:
          description: >-
            Street address of the business proprietor or officer.


            This field is required for KYC verification (US-based accounts
            only).

            Cannot perform KYC if set to a PO Box.
          maxLength: 35
          minLength: 0
          type: string
        address2:
          description: Additional address information.
          maxLength: 35
          minLength: 0
          type: string
        city:
          description: >-
            City of business proprietor or officer.


            This field is required for KYC verification (US-based accounts
            only).
          maxLength: 35
          minLength: 0
          type: string
        country:
          description: Country where the business proprietor or officer resides.
          maxLength: 40
          minLength: 0
          type: string
        postal_code:
          description: >-
            Business proprietor or officer's postal code.


            This field is required for KYC verification (US-based accounts
            only).
          maxLength: 20
          minLength: 0
          type: string
        state:
          description: >-
            State where the business proprietor or officer resides.


            This field is required for KYC verification (US-based accounts
            only).
          maxLength: 35
          minLength: 0
          type: string
        zip:
          description: ZIP code of the address.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    AddressResponseModel:
      properties:
        address1:
          description: Street address.
          maxLength: 35
          minLength: 0
          type: string
        address2:
          description: Additional address information.
          maxLength: 35
          minLength: 0
          type: string
        city:
          description: City.
          maxLength: 35
          minLength: 0
          type: string
        country:
          description: Country.
          maxLength: 40
          minLength: 0
          type: string
        postal_code:
          description: Postal code of the address.
          maxLength: 20
          minLength: 0
          type: string
        state:
          description: State, province, or territory of the address.
          maxLength: 35
          minLength: 0
          type: string
        zip:
          description: ZIP code of the address.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    AndroidPushTokenRequestAddress:
      description: Specifies the cardholder address.
      properties:
        address1:
          description: The street address of the cardholder.
          type: string
        address2:
          description: >-
            Additional address information for the cardholder, such as a suite
            or

            apartment number.


            `Suite 600`, for example.
          example: Suite 600
          type: string
        city:
          description: The city of the cardholder.
          type: string
        country:
          description: |-
            The two-character ISO 3166-1 alpha-2 country code.
            `US`, for example.
          example: US
          type: string
        name:
          description: The name of the cardholder.
          type: string
        phone:
          description: The phone number of the cardholder.
          example: "5105551212"
          type: string
        postal_code:
          description: |-
            The postal code of the cardholder, such as a ZIP code.
            `94612`, for example.
          example: "94612"
          type: string
        state:
          description: |-
            The two-character state or province code.
            `CA`, for example.
          example: CA
          type: string
      required:
        - address1
        - address2
        - city
        - country
        - name
        - phone
        - postal_code
        - state
        - zip
      type: object
    Application:
      description: Contains client application information.
      properties:
        access_code:
          description: The access code of the client application.
          type: string
        assets_url:
          description: The URL of the client application assets.
          type: string
        client_api_base_url:
          description: The base URL of the client API.
          type: string
        environment:
          description: The client application's environment.
          type: string
        program:
          description: The name of the program on the Marqeta platform.
          type: string
        program_short_code:
          description: The short code of the program on the Marqeta platform.
          type: string
        token:
          description: The unique identifier of the `application` object.
          type: string
      type: object
    AuthControlExemptMidsListResponse:
      properties:
        count:
          description: The number of resources retrieved.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/authControlExemptMidsListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    AuthControlListResponse:
      properties:
        count:
          description: The number of resources retrieved.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/authControlListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    Authentication:
      description: Contains the cardholder's email address and password information.
      properties:
        email_verified:
          default: false
          description: Specifies whether the email address has been verified.
          type: boolean
        email_verified_time:
          description: The date and time when the email address was verified.
          format: date-time
          type: string
        last_password_update_channel:
          $ref: "#/components/schemas/authenticationLastPasswordUpdateChannel"
        last_password_update_time:
          description: The date and time when the password was last changed.
          format: date-time
          type: string
      type: object
    AutoReloadListResponse:
      properties:
        count:
          description: The number of resources to retrieve.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/autoReloadListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    BankTransferListResponse:
      properties:
        count:
          description: The number of resources retrieved.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/bankTransferListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    BankTransferTransitionListResponse:
      properties:
        count:
          description: The number of resources retrieved.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/bankTransferTransitionListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    BillingAddress:
      properties:
        address:
          type: string
        compressed_zip:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        zip:
          type: string
      type: object
    BulkCardOrderListResponse:
      properties:
        count:
          description: The number of resources retrieved.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/bulkCardOrderListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    BusinessCardHolderListResponse:
      properties:
        count:
          description: The number of resources to retrieve.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/businessCardHolderListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    BusinessTransitionListResponse:
      properties:
        count:
          description: The number of resources retrieved.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/businessTransitionListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    BusinessTransitionRequest:
      properties:
        business_token:
          description: Identifies the business whose status you want to transition.
          type: string
        channel:
          $ref: "#/components/schemas/businessTransitionRequestChannel"
        idempotentHash:
          type: string
        reason:
          description: Additional information about the status change.
          type: string
        reason_code:
          $ref: "#/components/schemas/businessTransitionRequestReasonCode"
        status:
          $ref: "#/components/schemas/businessTransitionRequestStatus"
        token:
          description: >-
            The unique identifier of the business transition.


            If you do not include a token, the system generates one
            automatically. 

            This token is referenced in other API calls, so we recommend that
            you define a simple string that is easy to remember. 

            This value cannot be updated. 
          type: string
      required:
        - business_token
        - channel
        - reason_code
        - status
      type: object
    BusinessTransitionResponse:
      properties:
        business_token:
          description: Identifies the business whose status you want to transition.
          type: string
        channel:
          $ref: "#/components/schemas/businessTransitionResponseChannel"
        created_time:
          description: |-
            The date and time when the resource was created, in UTC.
            `2021-10-26T20:03:15Z`, for example.
          format: date-time
          type: string
        last_modified_time:
          description: |-
            The date and time when the resource was last updated, in UTC.
            `2021-10-26T20:03:15Z`, for example.
          format: date-time
          type: string
        reason:
          description: Additional information about the status change.
          type: string
        reason_code:
          $ref: "#/components/schemas/businessTransitionResponseReasonCode"
        status:
          $ref: "#/components/schemas/businessTransitionResponseStatus"
        token:
          description: The unique identifier of the business transition.
          type: string
      required:
        - channel
        - reason_code
        - status
        - token
      type: object
    CardFulfillmentResponse:
      description: Specifies certain physical characteristics of a card, as well as
        shipment information.
      properties:
        card_fulfillment_reason:
          $ref: "#/components/schemas/cardFulfillmentResponseCardFulfillmentReason"
        card_personalization:
          $ref: "#/components/schemas/card_personalization"
        shipping:
          $ref: "#/components/schemas/ShippingInformationResponse"
      required:
        - card_personalization
      type: object
    CardListResponse:
      properties:
        count:
          description: The number of resources retrieved.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/cardListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    CardProductListResponse:
      properties:
        count:
          description: The number of resources to retrieve.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/cardProductListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    CardTransitionListResponse:
      properties:
        count:
          description: The number of resources to retrieve.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/cardTransitionListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    CardholderAddressListResponse:
      properties:
        count:
          description: The number of resources to retrieve.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/cardholderAddressListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    CardholderAddressResponse:
      description: Address information for a cardholder or funding source.
      properties:
        active:
          default: false
          description: Whether the address is active.
          type: boolean
        address_1:
          description: Street address of the funding source.
          maxLength: 255
          minLength: 0
          type: string
        address_2:
          description: Additional address information for the funding source.
          maxLength: 255
          minLength: 0
          type: string
        business_token:
          description: |-
            The unique identifier of the `business` account holder.
            Required if `user_token` is not specified.
          maxLength: 36
          minLength: 1
          type: string
        city:
          description: City of the funding source.
          maxLength: 40
          minLength: 0
          type: string
        country:
          description: Country of the funding source.
          maxLength: 40
          minLength: 1
          type: string
        created_time:
          description: Date and time when the address was created.
          format: date-time
          type: string
        first_name:
          description: First name of the account holder associated with the funding source.
          maxLength: 40
          minLength: 0
          type: string
        is_default_address:
          default: false
          description: Whether this address is the default address used by the funding
            source.
          type: boolean
        last_modified_time:
          description: Date and time when the address was last modified.
          format: date-time
          type: string
        last_name:
          description: Last name of the account holder associated with the funding source.
          maxLength: 40
          minLength: 0
          type: string
        phone:
          description: Phone number of the funding source.
          maxLength: 255
          minLength: 0
          type: string
        postal_code:
          description: Postal code of the funding source.
          maxLength: 10
          minLength: 0
          type: string
        state:
          description: >-
            Two-character state, province, or territorial abbreviation.


            For the complete list, see
            <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations,
            Valid state, provincial, and territorial abbreviations>>.
          maxLength: 2
          minLength: 0
          type: string
        token:
          description: Unique identifier of the address.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            The unique identifier of the `user` account holder.
            Required if `business_token` is not specified.
          maxLength: 36
          minLength: 1
          type: string
        zip:
          description: Zip code of the funding source.
          maxLength: 10
          minLength: 0
          type: string
      required:
        - address_1
        - city
        - country
        - created_time
        - first_name
        - last_modified_time
        - last_name
        - postal_code
        - state
        - token
        - zip
      type: object
    ClearingModel:
      properties:
        amount:
          type: number
        card_acceptor:
          $ref: "#/components/schemas/card_acceptor_model"
        force_post:
          default: false
          type: boolean
        is_refund:
          default: false
          type: boolean
        mid:
          maxLength: 50
          minLength: 1
          type: string
        network_fees:
          $ref: "#/components/schemas/clearingModelNetworkFees"
        original_transaction_token:
          maxLength: 36
          minLength: 1
          type: string
        webhook:
          $ref: "#/components/schemas/webhook"
      required:
        - amount
        - original_transaction_token
      type: object
    CommandoModeListResponse:
      properties:
        count:
          description: The number of Commando Mode control sets to retrieve.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/commandoModeListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    CommandoModeTransitionListResponse:
      properties:
        count:
          description: The number of Commando Mode control set transition objects to
            retrieve.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/commandoModeTransitionListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    DDARequest:
      properties:
        dda:
          type: string
      required:
        - dda
      type: object
    DepositAccountUpdateRequest:
      properties:
        allow_immediate_credit:
          default: false
          type: boolean
      type: object
    DepositDepositResponse:
      description: Contains information about a direct deposit.
      properties:
        amount:
          description: Amount being debited or credited.
          type: number
        business_token:
          description: The unique identifier of the `business` account holder.
          type: string
        company_discretionary_data:
          description: Company-specific data provided by the direct deposit originator.
          type: string
        company_entry_description:
          description: Company-specific data provided by the direct deposit originator.
          type: string
        company_identification:
          description: Alphanumeric code that identifies the direct deposit originator.
          type: string
        company_name:
          description: Name of the direct deposit originator.
          type: string
        created_time:
          description: Date and time when the direct deposit account was created.
          format: date-time
          type: string
        direct_deposit_account_token:
          description: The unique identifier of the direct deposit account.
          type: string
        individual_identification_number:
          description: Accounting number by which the recipient is known to the direct
            deposit originator.
          type: string
        individual_name:
          description: Name of the direct deposit recipient.
          type: string
        last_modified_time:
          description: Date and time when the direct deposit account was last modified.
          format: date-time
          type: string
        settlement_date:
          description: Date and time when the credit or debit is applied.
          format: date-time
          type: string
        standard_entry_class_code:
          description: Three-letter code identifying the type of entry.
          type: string
        state:
          $ref: "#/components/schemas/depositDepositResponseState"
        state_reason:
          description: Explanation for why the direct deposit record is in the current
            state.
          type: string
        state_reason_code:
          description: Standard code describing the reason for the current state.
          type: string
        token:
          description: The unique identifier of the direct deposit record.
          type: string
        type:
          $ref: "#/components/schemas/depositDepositResponseType"
        user_token:
          description: The unique identifier of the `user` account holder.
          type: string
      type: object
    DigitalWalletTokenListResponse:
      properties:
        count:
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/digitalWalletTokenListResponseData"
        end_index:
          format: int32
          type: integer
        is_more:
          default: false
          type: boolean
        start_index:
          format: int32
          type: integer
      type: object
    DigitalWalletTokenTransitionListResponse:
      properties:
        count:
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/digitalWalletTokenTransitionListResponseData"
        end_index:
          format: int32
          type: integer
        is_more:
          default: false
          type: boolean
        start_index:
          format: int32
          type: integer
      type: object
    DirectDepositAccountListResponse:
      properties:
        count:
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/directDepositAccountListResponseData"
        end_index:
          format: int32
          type: integer
        is_more:
          default: false
          type: boolean
        start_index:
          format: int32
          type: integer
      type: object
    DirectDepositListResponse:
      properties:
        count:
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/directDepositListResponseData"
        end_index:
          format: int32
          type: integer
        is_more:
          default: false
          type: boolean
        start_index:
          format: int32
          type: integer
      type: object
    DirectDepositRequest:
      properties:
        account_number:
          type: string
        amount:
          type: number
        company_discretionary_data:
          maxLength: 20
          minLength: 0
          type: string
        company_entry_description:
          maxLength: 10
          minLength: 0
          type: string
        company_identification:
          maxLength: 10
          minLength: 0
          type: string
        company_name:
          maxLength: 16
          minLength: 0
          type: string
        earlyPayEligible:
          default: false
          type: boolean
        individual_identification_number:
          maxLength: 22
          minLength: 0
          type: string
        individual_name:
          maxLength: 35
          minLength: 0
          type: string
        settlement_date:
          format: date-time
          type: string
        standard_entry_class_code:
          maxLength: 3
          minLength: 0
          type: string
        token:
          maxLength: 36
          minLength: 0
          type: string
        type:
          $ref: "#/components/schemas/directDepositRequestType"
      required:
        - account_number
        - amount
        - settlement_date
        - type
      type: object
    DirectDepositTransitionListResponse:
      properties:
        count:
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/directDepositTransitionListResponseData"
        end_index:
          format: int32
          type: integer
        is_more:
          default: false
          type: boolean
        start_index:
          format: int32
          type: integer
      type: object
    DirectDepositTransitionRequest:
      properties:
        channel:
          $ref: "#/components/schemas/directDepositTransitionRequestChannel"
        direct_deposit_token:
          type: string
        idempotentHash:
          type: string
        reason:
          maxLength: 255
          minLength: 0
          type: string
        reason_code:
          $ref: "#/components/schemas/directDepositTransitionRequestReasonCode"
        state:
          $ref: "#/components/schemas/directDepositTransitionRequestState"
        token:
          type: string
      required:
        - channel
        - direct_deposit_token
        - reason
        - state
      type: object
    DirectDepositTransitionResponse:
      properties:
        channel:
          $ref: "#/components/schemas/directDepositTransitionResponseChannel"
        created_time:
          format: date-time
          type: string
        direct_deposit_account_token:
          type: string
        direct_deposit_token:
          type: string
        reason:
          type: string
        reason_code:
          type: string
        state:
          $ref: "#/components/schemas/directDepositTransitionResponseState"
        token:
          type: string
        transaction_token:
          type: string
        type:
          type: string
      type: object
    DisputeModel:
      description: Contains information about a disputed transaction.
      properties:
        case_management_identifier:
          description: The unique identifier of the dispute case.
          type: string
        reason:
          description: The reason for the dispute.
          type: string
      type: object
    FeeListResponse:
      properties:
        count:
          description: The number of resources to retrieve.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/feeListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    FulfillmentAddressResponse:
      description: Specifies a fulfillment shipping or return address.
      properties:
        address1:
          description: Street address.
          maxLength: 255
          minLength: 0
          type: string
        address2:
          description: Additional address information.
          maxLength: 255
          minLength: 0
          type: string
        city:
          description: City.
          maxLength: 40
          minLength: 0
          type: string
        country:
          description: Country.
          maxLength: 40
          minLength: 0
          type: string
        first_name:
          description: First name.
          maxLength: 40
          minLength: 0
          type: string
        last_name:
          description: Last name.
          maxLength: 40
          minLength: 0
          type: string
        middle_name:
          description: Middle name.
          maxLength: 40
          minLength: 0
          type: string
        phone:
          description: Phone number.
          maxLength: 20
          minLength: 0
          type: string
        postal_code:
          description: Postal code.
          maxLength: 10
          minLength: 0
          type: string
        state:
          description: State.
          maxLength: 32
          minLength: 0
          type: string
        zip:
          description: ZIP code.
          maxLength: 10
          minLength: 0
          type: string
      type: object
    FulfillmentResponse:
      description: >-
        Specifies certain physical characteristics of a card, as well as bulk
        shipment information.


        This object is returned if it exists in the resource.
      properties:
        card_personalization:
          $ref: "#/components/schemas/card_personalization"
        shipping:
          $ref: "#/components/schemas/ShippingInformationResponse"
      required:
        - card_personalization
      type: object
    FundingAccountListResponse:
      properties:
        count:
          description: The number of resources to retrieve.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/fundingAccountListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    GPAUnloadListResponse:
      properties:
        count:
          description: The number of resources to retrieve.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/gPAUnloadListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    HealthCheckResult:
      properties:
        component:
          type: string
        data:
          additionalProperties:
            properties: {}
            type: object
          type: object
        fatal:
          type: boolean
        healthy:
          type: boolean
        status:
          type: string
      type: object
    IdentificationRequestModel:
      description: Contains forms of identification associated with the cardholder.
      properties:
        expiration_date:
          description: The expiration date for the form of identification, if applicable.
          type: string
        type:
          $ref: "#/components/schemas/identificationRequestModelType"
        value:
          description: The identification number associated with the form of identification.
          readOnly: true
          type: string
      required:
        - type
      type: object
    IdentificationRequestModel_1:
      description: Contains forms of identification associated with the cardholder.
      properties:
        expiration_date:
          description: The expiration date for the form of identification, if applicable.
          type: string
        type:
          $ref: "#/components/schemas/identificationRequestModel1Type"
        value:
          description: The identification number associated with the form of identification.
          readOnly: true
          type: string
      required:
        - type
      type: object
    IdentificationResponseModel:
      description: Contains identifications associated with the cardholder.
      properties:
        expiration_date:
          description: The expiration date for the form of identification, if applicable.
          readOnly: true
          type: string
        type:
          $ref: "#/components/schemas/identificationResponseModelType"
        value:
          description: The identification number associated with the form of identification.
          readOnly: true
          type: string
      type: object
    ImagesCarrier:
      description: Specifies personalized images that appear on the card carrier.
      properties:
        message_1:
          description: Specifies a custom message that appears on the card carrier.
          type: string
        name:
          description: Specifies a PNG image to display on the card carrier.
          type: string
      type: object
    KYCListResponse:
      properties:
        count:
          description: The number of resources in the returned array.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/kYCListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    MCCGroupListResponse:
      properties:
        count:
          description: The number of resources to retrieve.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/mCCGroupListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    MerchantGroupListResponse:
      properties:
        count:
          description: The number of resources retrieved.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/merchantGroupListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
      type: object
    PTCAddress:
      properties:
        city:
          maxLength: 40
          minLength: 1
          type: string
        country:
          maxLength: 3
          minLength: 3
          type: string
        county:
          maxLength: 3
          minLength: 3
          type: string
        line1:
          maxLength: 255
          minLength: 1
          type: string
        line2:
          maxLength: 255
          minLength: 0
          type: string
        postal_code:
          type: string
        state:
          type: string
      required:
        - city
        - county
        - line1
        - postal_code
        - state
      type: object
    PTCPhone:
      properties:
        country_code:
          type: string
        number:
          maxLength: 14
          minLength: 4
          type: string
      required:
        - number
      type: object
    PTCSoftDescriptor:
      properties:
        address:
          $ref: "#/components/schemas/PTCAddress"
        email:
          type: string
        name:
          maxLength: 50
          minLength: 0
          type: string
        phone:
          $ref: "#/components/schemas/PTCPhone"
      required:
        - address
        - name
      type: object
    PrimaryContactInfoModel:
      description: Describes the business' primary contact person.
      properties:
        department:
          description: Business department of the primary contact.
          maxLength: 255
          minLength: 0
          type: string
        email:
          description: Email address of the primary contact.
          maxLength: 255
          minLength: 0
          type: string
        extension:
          description: Phone extension of the primary contact.
          maxLength: 255
          minLength: 0
          type: string
        fax:
          description: Fax number of the primary contact.
          maxLength: 255
          minLength: 0
          type: string
        full_name:
          description: Full name of the primary contact.
          maxLength: 255
          minLength: 0
          type: string
        mobile:
          description: Mobile phone number of the primary contact.
          maxLength: 255
          minLength: 0
          type: string
        phone:
          description: Phone number of the primary contact.
          maxLength: 255
          minLength: 0
          type: string
        title:
          description: Title of the primary contact.
          maxLength: 255
          minLength: 0
          type: string
      type: object
    ProgramReserveTransactionListResponse:
      properties:
        count:
          description: The number of resources to retrieve.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/programReserveTransactionListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    ProgramTransferListResponse:
      properties:
        count:
          description: The number of program transfer resources to retrieve.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/programTransferListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    ProgramTransferTypeListResponse:
      properties:
        count:
          description: The number of program transfer resources to retrieve.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/programTransferTypeListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    PushToCardDisburseListResponse:
      properties:
        count:
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/pushToCardDisburseListResponseData"
        end_index:
          format: int32
          type: integer
        is_more:
          default: false
          type: boolean
        start_index:
          format: int32
          type: integer
      type: object
    PushToCardListResponse:
      properties:
        count:
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/pushToCardListResponseData"
        end_index:
          format: int32
          type: integer
        is_more:
          default: false
          type: boolean
        start_index:
          format: int32
          type: integer
      type: object
    RealTimeFeeAssessmentRequest:
      description: Controls the assessment of real-time fees.
      properties:
        domestic_enabled:
          default: false
          description: Enables fee assessments where the origin of the transaction
            acquirer is inside the US.
          type: boolean
        international_enabled:
          default: false
          description: Enables fee assessments where the origin of the transaction
            acquirer is outside the US.
          type: boolean
        transaction_type:
          $ref: "#/components/schemas/realTimeFeeAssessmentRequestTransactionType"
      type: object
    RealTimeFeeGroupListResponse:
      properties:
        count:
          description: The number of resources to retrieve.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/realTimeFeeGroupListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    ReversalModel:
      properties:
        amount:
          type: number
        find_original_window_days:
          format: int32
          type: integer
        is_advice:
          default: false
          type: boolean
        network_fees:
          $ref: "#/components/schemas/reversalModelNetworkFees"
        original_transaction_token:
          maxLength: 36
          minLength: 1
          type: string
        webhook:
          $ref: "#/components/schemas/webhook"
      required:
        - amount
        - original_transaction_token
      type: object
    ShippingInformationResponse:
      description: Specifies shipping details for the card.
      properties:
        care_of_line:
          description: Person or entity to receive the card on behalf of the recipient.
          type: string
        method:
          $ref: "#/components/schemas/shippingInformationResponseMethod"
        recipient_address:
          $ref: "#/components/schemas/FulfillmentAddressResponse"
        return_address:
          $ref: "#/components/schemas/FulfillmentAddressResponse"
      type: object
    TransactionModelListResponse:
      properties:
        count:
          description: The number of resources to retrieve.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/transactionModelListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    UserCardHolderListResponse:
      properties:
        count:
          description: The number of `user` resources to retrieve.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/userCardHolderListResponseData"
        end_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    UserCardHolderUpdateModel:
      properties:
        account_holder_group_token:
          description: >-
            Associates the specified account holder group with the cardholder.

            Send a `GET` request to `/accountholdergroups` to retrieve account
            holder group tokens.
          maxLength: 36
          minLength: 0
          type: string
        active:
          default: true
          description: Specifies if the cardholder is in the `ACTIVE` state on the Marqeta
            platform.
          type: boolean
        address1:
          description: |-
            Cardholder's address.

            *NOTE:* Required for KYC verification (US-based cardholders only).
            Cannot perform KYC if set to a PO Box.
          maxLength: 255
          minLength: 0
          type: string
        address2:
          description: |-
            Additional address information for the cardholder.

            *NOTE:* Cannot perform KYC if set to a PO Box.
          maxLength: 255
          minLength: 0
          type: string
        birth_date:
          description: |-
            Cardholder's date of birth.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          type: string
        city:
          description: |-
            The city that corresponds to the address.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 40
          minLength: 0
          type: string
        company:
          description: Company name.
          maxLength: 255
          minLength: 0
          type: string
        corporate_card_holder:
          default: false
          description: Specifies if the cardholder holds a corporate card.
          type: boolean
        country:
          description: |-
            Country in which the cardholder resides.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 40
          minLength: 0
          type: string
        email:
          description: |-
            A valid email address for the cardholder.

            This value must be unique among cardholders.
          maxLength: 255
          minLength: 1
          type: string
        first_name:
          description: |-
            Cardholder's first name.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 40
          minLength: 0
          type: string
        gender:
          $ref: "#/components/schemas/userCardHolderUpdateModelGender"
        honorific:
          description: "Cardholder's title or prefix: Ms., Mr., Miss, Mrs."
          maxLength: 10
          minLength: 0
          type: string
        id_card_expiration_date:
          description: The expiration date of the cardholder's identification card.
          type: string
        id_card_number:
          description: Cardholder's identification card number.
          maxLength: 255
          minLength: 0
          type: string
        identifications:
          $ref: "#/components/schemas/userCardHolderUpdateModelIdentifications"
        ip_address:
          description: Cardholder's IP address.
          maxLength: 39
          minLength: 0
          type: string
        last_name:
          description: |-
            Cardholder's last name.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 40
          minLength: 0
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Associates any additional metadata you provide with the cardholder.
          type: object
        middle_name:
          description: Cardholder's middle name.
          maxLength: 40
          minLength: 0
          type: string
        nationality:
          description: Cardholder's nationality.
          maxLength: 255
          minLength: 0
          type: string
        notes:
          description: Any additional information pertaining to the cardholder.
          maxLength: 255
          minLength: 0
          type: string
        parent_token:
          description: >-
            The unique identifier of a `user` or `business` resource already in
            the system.


            Required if `uses_parent_account = true`.

            This account holder is configured as the parent of the current
            cardholder.


            To unlink a child account from a parent account, update this field
            to a null value.
          maxLength: 36
          minLength: 1
          type: string
        passport_expiration_date:
          description: Expiration date of the cardholder's passport.
          type: string
        passport_number:
          description: Cardholder's passport number.
          maxLength: 40
          minLength: 0
          type: string
        password:
          description: Cardholder's `user` account password on the Marqeta platform.
          maxLength: 255
          minLength: 0
          type: string
        phone:
          description: >-
            Cardholder's telephone number (including area code), prepended by
            the `+` symbol and the 1- to 3-digit country calling code.

            Do not include hyphens, spaces, or parentheses.
          maxLength: 255
          minLength: 0
          type: string
        postal_code:
          description: |-
            Postal code of the cardholder's address.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 10
          minLength: 0
          type: string
        ssn:
          description: The cardholder's Social Security Number.
          type: string
        state:
          description: >-
            State in which the cardholder resides.


            *NOTE:*
            <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations,
            Valid two-character abbreviation>> required for KYC verification
            (US-based cardholders only).
          maxLength: 32
          minLength: 0
          type: string
        token:
          description: The unique identifier of the cardholder.
          maxLength: 36
          minLength: 1
          type: string
        uses_parent_account:
          default: false
          description: >-
            Indicates whether the child shares balances with the parent
            (`true`), or the child's balances are independent of the parent
            (`false`).


            If set to `true`, you must also include a `parent_token` in the
            request.

            This value cannot be updated.
          type: boolean
      type: object
    UserTransitionListResponse:
      properties:
        count:
          description: The number of `user` resources retrieved.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/userTransitionListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    UserTransitionRequest:
      properties:
        channel:
          $ref: "#/components/schemas/userTransitionRequestChannel"
        idempotentHash:
          type: string
        reason:
          description: Additional information about the status change.
          type: string
        reason_code:
          $ref: "#/components/schemas/userTransitionRequestReasonCode"
        status:
          $ref: "#/components/schemas/userTransitionRequestStatus"
        token:
          description: >-
            The unique identifier of the user transition.


            If you do not include a token, the system generates one
            automatically.

            This token is referenced in other API calls, so we recommend that
            you define a simple string that is easy to remember.

            This value cannot be updated.
          type: string
        user_token:
          description: The unique identifier of the user whose status is transitioned.
          type: string
      required:
        - channel
        - reason_code
        - status
        - user_token
      type: object
    UserTransitionResponse:
      properties:
        channel:
          $ref: "#/components/schemas/userTransitionResponseChannel"
        created_time:
          description: The date and time when the resource was created, in UTC.
          format: date-time
          type: string
        last_modified_time:
          description: The date and time when the resource was last modified, in UTC.
          format: date-time
          type: string
        reason:
          description: Additional information about the status change.
          type: string
        reason_code:
          $ref: "#/components/schemas/userTransitionResponseReasonCode"
        status:
          $ref: "#/components/schemas/userTransitionResponseStatus"
        token:
          description: The unique identifier of the user transition.
          type: string
        user_token:
          description: The unique identifier of the user whose status is transitioned.
          type: string
      required:
        - channel
        - reason_code
        - status
        - token
      type: object
    UserValidationRequest:
      description: Contains information about the user.
      properties:
        birth_date:
          description: The birth date of the user associated with this card.
          format: date-time
          type: string
        phone:
          description: The telephone number of the user associated with this card.
          maxLength: 255
          minLength: 0
          type: string
        random_name_line1_postfix:
          description: >-
            A random six-digit numeric postfix generated for some bulk card
            orders.


            See <</core-api/bulk-card-orders, Bulk Card Orders>> for more
            information about numeric postfixes.
          maxLength: 6
          minLength: 6
          type: string
        ssn:
          description: The Social Security number of the user associated with this card.
          maxLength: 255
          minLength: 0
          type: string
      type: object
    UserValidationResponse:
      description: Contains information about the user.
      properties:
        birth_date:
          default: false
          description: Indicates whether the `birth_date` field in the request was
            validated.
          type: boolean
        phone:
          default: false
          description: Indicates whether the `phone` field in the request was validated.
          type: boolean
        random_name_line1_postfix:
          default: false
          description: Indicates whether the `random_name_line1_postfix` field in the
            request was validated.
          type: boolean
        ssn:
          default: false
          description: Indicates whether the `ssn` field in the request was validated.
          type: boolean
      required:
        - birth_date
        - phone
        - random_name_line1_postfix
        - ssn
      type: object
    ValidationsRequest:
      description: Contains information about the user.
      properties:
        user:
          $ref: "#/components/schemas/UserValidationRequest"
      type: object
    ValidationsResponse:
      description: Contains information about the user.
      properties:
        user:
          $ref: "#/components/schemas/UserValidationResponse"
      required:
        - user
      type: object
    VelocityControlBalanceListResponse:
      properties:
        count:
          description: The number of velocity control resources retrieved.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/velocityControlBalanceListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
      type: object
    VelocityControlListResponse:
      properties:
        count:
          description: The number of velocity control resources retrieved.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/velocityControlListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
      type: object
    WebhookResponseModelListResponse:
      properties:
        count:
          description: The number of resources to retrieve.
          format: int32
          type: integer
        data:
          $ref: "#/components/schemas/webhookResponseModelListResponseData"
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    WebhookUpdateCustomHeaderRequest:
      properties:
        custom_header:
          additionalProperties:
            type: string
          description: Custom headers to be passed along with the request.
          type: object
      type: object
    accepted_countries_model:
      properties:
        country_codes:
          $ref: "#/components/schemas/acceptedCountriesModelCountryCodes"
        created_time:
          description: |-
            The time when the `acceptedcountries` object was created, in UTC.
            This field is returned when included in your query.
          format: date-time
          type: string
        is_whitelist:
          default: false
          description: >-
            Specifies if the list of accepted countries in this object is an
            allow list.

            If set to `true`, transactions are accepted for all countries
            included in the object's `country_codes` array.

            If set to `false`, transactions are prohibited for all countries
            included in the object's `country_codes` array.
          type: boolean
        last_modified_time:
          description: >-
            The time when the `acceptedcountries` object was last updated, in
            UTC.

            This field is returned when included in your query.
          format: date-time
          type: string
        name:
          description: The name of the `acceptedcountries` object.
          type: string
        token:
          description: The unique identifier of the `acceptedcountries` object.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - country_codes
        - is_whitelist
        - name
      type: object
    access_token_response:
      description: Contains a cardholder's login access information.
      properties:
        application:
          $ref: "#/components/schemas/Application"
        expires:
          description: The date and time when the access token expires.
          format: date-time
          type: string
        master_roles:
          $ref: "#/components/schemas/accessTokenResponseMasterRoles"
        one_time:
          description: Indicates whether the access token is a single-use token.
          type: boolean
        token:
          description: The access token.
          type: string
        token_type:
          description: Specifies the type of access token.
          type: string
        user_token:
          description: The unique identifier of the `user` resource.
          type: string
      required:
        - expires
      type: object
    account:
      description: Contains information related to the cardholder and provided by the
        digital wallet provider.
      properties:
        email_address:
          description: Digital wallet provider's email address for the cardholder.
          type: string
        id:
          description: Digital wallet provider's identity number for the cardholder.
          type: string
        score:
          description: Score from the digital wallet provider.
          type: string
      type: object
    account_funding:
      properties:
        funding_source:
          $ref: "#/components/schemas/accountFundingFundingSource"
        receiver_account_type:
          $ref: "#/components/schemas/accountFundingReceiverAccountType"
        receiver_name:
          type: string
        screening_score:
          type: string
        transaction_purpose:
          type: string
        transaction_type:
          $ref: "#/components/schemas/accountFundingTransactionType"
      type: object
    account_holder_group_config:
      description: Contains configuration fields for the account holder group.
      properties:
        is_reloadable:
          default: false
          description: >-
            If set to `false`, this control prohibits an account holder's
            account from being reloaded with funds after the initial load.


            This restriction applies to GPA orders, peer transfers, and direct
            deposits, but does not apply to operator adjustments.
          type: boolean
        kyc_required:
          $ref: "#/components/schemas/accountHolderGroupConfigKycRequired"
        pre_kyc_controls:
          $ref: "#/components/schemas/pre_kyc_controls"
        real_time_fee_group_token:
          description: Associates the specified real-time fee group with the members of
            the account holder group.
          maxLength: 36
          minLength: 0
          type: string
      type: object
    account_holder_group_request:
      properties:
        config:
          $ref: "#/components/schemas/account_holder_group_config"
        name:
          description: Descriptive name for the account holder group.
          maxLength: 40
          minLength: 1
          type: string
        token:
          description: The unique identifier of the account holder group.
          maxLength: 36
          minLength: 1
          type: string
      type: object
    account_holder_group_response:
      properties:
        config:
          $ref: "#/components/schemas/account_holder_group_config"
        name:
          description: Descriptive name for the account holder group.
          type: string
        token:
          description: The unique identifier of the account holder group.
          type: string
      type: object
    account_holder_group_update_request:
      properties:
        config:
          $ref: "#/components/schemas/account_holder_group_config"
        name:
          description: Descriptive name for the account holder group.
          maxLength: 40
          minLength: 1
          type: string
      type: object
    ach_model:
      properties:
        account_number:
          description: The ACH account number.
          type: string
        account_type:
          $ref: "#/components/schemas/achModelAccountType"
        bank_name:
          description: The name of the financial institution where the ACH account is held.
          type: string
        business_token:
          description: |-
            The unique identifier of the `business` account holder.
            This token is required if a `user_token` is not specified.
          maxLength: 36
          minLength: 1
          type: string
        is_default_account:
          default: false
          description: >-
            If there are multiple funding sources, this field specifies which
            source is used by default in funding calls.

            If there is only one funding source, the system ignores this field
            and always uses that source.
          type: boolean
        name_on_account:
          description: The name on the ACH account.
          maxLength: 50
          minLength: 1
          type: string
        routing_number:
          description: The routing number for the ACH account.
          readOnly: true
          type: string
        token:
          description: >-
            The unique identifier of the funding source.

            If you do not include a token, the system will generate one
            automatically.

            This token is necessary for use in other calls, so we recommend that
            rather than let the system generate one, you use a simple string
            that is easy to remember.

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            The unique identifier of the `user` account holder.
            This token is required if a `business_token` is not specified.
          maxLength: 36
          minLength: 1
          type: string
        verification_notes:
          description: |-
            Free-form text field for holding notes about verification.
            This field is returned only if `verification_override = true`.
          type: string
        verification_override:
          default: false
          description: Allows the ACH funding source to be used regardless of its
            verification status.
          type: boolean
      required:
        - account_number
        - account_type
        - name_on_account
        - routing_number
      type: object
    ach_partner_request_model:
      properties:
        business_token:
          description: Required if 'user_token' is null
          maxLength: 36
          minLength: 1
          type: string
        idempotentHash:
          type: string
        is_default_account:
          default: false
          description: >-
            If there are multiple funding sources, this field specifies which
            source is used by default in funding calls.

            If there is only one funding source, the system ignores this field
            and always uses that source.
          type: boolean
        partner:
          $ref: "#/components/schemas/achPartnerRequestModelPartner"
        partner_account_link_reference_token:
          type: string
        token:
          description: >-
            The unique identifier of the funding source.

            If you do not include a token, the system will generate one
            automatically.

            This token is necessary for use in other calls, so we recommend that
            rather than let the system generate one, you use a simple string
            that is easy to remember.

            This value cannot be updated.
          type: string
        user_token:
          description: Required if 'business_token' is null
          maxLength: 36
          minLength: 1
          type: string
      required:
        - partner
        - partner_account_link_reference_token
      type: object
    ach_response_model:
      properties:
        account_suffix:
          description: The ACH account identifier appended to the bank account number.
          type: string
        account_type:
          description: The type of account.
          type: string
        active:
          default: false
          description: Specifies whether the account is active.
          type: boolean
        bank_name:
          description: |-
            The name of the bank holding the account.
            This field is returned if it exists in the resource.
          type: string
        business_token:
          description: |-
            The unique identifier of the `business` account holder.
            This token is returned if a `user_token` is not specified.
          type: string
        created_time:
          description: |-
            The date and time when the resource was created, in UTC.
            `2022-02-26T20:03:05Z`, for example.
          format: date-time
          type: string
        date_sent_for_verification:
          description: >-
            The date and time when the account was sent for verification, in
            UTC.

            `2022-02-26T20:03:05Z`, for example.


            This field is returned if it exists in the resource.
          format: date-time
          type: string
        date_verified:
          description: |-
            The date and time when the account was verified, in UTC.
            `2022-02-26T20:03:05Z`, for example.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        is_default_account:
          default: false
          description: >-
            If there are multiple funding sources, this field specifies which
            source is used by default in funding calls.

            If there is only one funding source, the system ignores this field
            and always uses that source.


            This field is returned if it exists in the resource.
          type: boolean
        last_modified_time:
          description: |-
            The date and time when the resource was last modified, in UTC.
            `2022-02-26T20:03:05Z`, for example.
          format: date-time
          type: string
        name_on_account:
          description: The name on the ACH account.
          type: string
        partner:
          type: string
        partner_account_link_reference_token:
          type: string
        token:
          description: The unique identifier of the funding source.
          type: string
        user_token:
          description: |-
            The unique identifier of the `user` account holder.
            This token is returned if a `business_token` is not specified.
          type: string
        verification_notes:
          description: |-
            Free-form text field for holding notes about verification.
            This field is returned only if `verification_override = true`.
          type: string
        verification_override:
          default: false
          description: >-
            Allows the ACH funding source to be used regardless of its
            verification status.

            This field is returned if it exists in the resource.
          type: boolean
        verification_status:
          description: |-
            The account verification status.
            This field is returned if it exists in the resource.
          type: string
      required:
        - account_suffix
        - account_type
        - active
        - created_time
        - last_modified_time
        - name_on_account
        - token
      type: object
    ach_verification_model:
      properties:
        active:
          default: false
          description: Indicates whether the ACH funding source is active.
          type: boolean
        verify_amount1:
          description: Verification amount.
          type: number
        verify_amount2:
          description: Verification amount.
          type: number
      type: object
    acquirer:
      description: Contains information about the merchant's financial institution.
      properties:
        institution_country:
          description: Country code of the merchant's financial institution.
          type: string
        institution_id_code:
          description: Identifier code of the merchant's financial institution.
          type: string
        network_international_id:
          description: The international network identifier.
          type: string
        retrieval_reference_number:
          description: Retrieval reference number of the merchant's financial institution.
          type: string
        system_trace_audit_number:
          description: System trace audit number of the merchant's financial institution.
          type: string
      type: object
    activation_actions:
      description: Defines actions to execute when the card is activated.
      properties:
        swap_digital_wallet_tokens_from_card_token:
          description: >-
            Moves all digital wallet tokens from the specified card to the new
            card.


            Not relevant when `reissue_pan_from_card_token` is set.
          maxLength: 36
          minLength: 1
          type: string
        terminate_reissued_source_card:
          default: true
          description: Whether or not the source card from which the card was reissued
            should be terminated.
          type: boolean
      type: object
    address_verification:
      description: Contains address verification information.
      properties:
        name:
          description: The name of the cardholder.
          type: string
        postal_code:
          description: Postal code.
          type: string
        street_address:
          description: Street address provided by the cardholder.
          type: string
        zip:
          description: ZIP code.
          type: string
      type: object
    address_verification_model:
      description: Contains address verification data consisting of address data
        entered by the cardholder, address data held by the Marqeta platform,
        and an assertion by the Marqeta platform as to whether the two sets of
        data match.
      properties:
        on_file:
          $ref: "#/components/schemas/avs_information"
        request:
          $ref: "#/components/schemas/avs_information"
        response:
          $ref: "#/components/schemas/response"
      type: object
    address_verification_source:
      description: Contains address verification data consisting of address data
        entered by the cardholder, address data held by the Marqeta platform,
        and an assertion by the Marqeta platform as to whether the two sets of
        data match.
      properties:
        on_file:
          $ref: "#/components/schemas/avs_information"
        response:
          $ref: "#/components/schemas/response"
      type: object
    airline:
      description: Contains information about airline-related transactions.
      properties:
        depart_date:
          description: The date and time of departure.
          format: date-time
          type: string
        origination_city:
          description: The city where the flight originates.
          type: string
        passenger_name:
          description: The name of the passenger.
          type: string
      type: object
    auth_control_exempt_mids_request:
      properties:
        association:
          $ref: "#/components/schemas/spend_control_association"
        end_time:
          description: |-
            The date and time when the exception ends, in UTC.
            `2021-10-26T20:03:05Z`, for example.
          format: date-time
          type: string
        merchant_group_token:
          description: |-
            The token of the merchant group to be exempted.
            This field is required if there is no entry in the `mid` field.
            Pass either this field or the `mid` field, not both.
          maxLength: 36
          minLength: 1
          type: string
        mid:
          description: >-
            The merchant to be exempted.

            This field is required if there is no entry in the
            `merchant_group_token` field.

            Use either this field or the `merchant_group_token` field, not both.
          maxLength: 36
          minLength: 1
          type: string
        name:
          description: The name of the merchant identifier authorization control exemption.
          maxLength: 255
          minLength: 0
          type: string
        start_time:
          description: |-
            The date and time when the exception starts, in UTC.
            `2020-10-26T20:03:05Z`, for example.
          format: date-time
          type: string
        token:
          description: >-
            The unique identifier of the merchant identifier authorization
            control exemption.


            If you do not include a token, the system will generate one
            automatically.

            This token is necessary for use in other API calls, so we recommend
            that rather than let the system generate one, you use a simple
            string that is easy to remember.

            This value cannot be updated.
          type: string
      required:
        - name
      type: object
    auth_control_exempt_mids_response:
      properties:
        active:
          default: false
          description: Indicates whether the merchant identifier authorization control
            exception is active.
          type: boolean
        association:
          $ref: "#/components/schemas/spend_control_association"
        created:
          description: |-
            The date and time when the resource was created, in UTC.
            `2020-10-26T20:03:05Z`, for example.
          format: date-time
          type: string
        end_time:
          description: |-
            The date and time when the exception ends, in UTC.
            `2021-10-26T20:03:05Z`, for example.
          format: date-time
          type: string
        last_updated:
          description: |-
            The date and time when the resource was last updated, in UTC.
            `2020-10-26T20:03:15Z`, for example.
          format: date-time
          type: string
        merchant_group_token:
          description: |-
            The token of the merchant group to be exempted.
            This field is required if there is no entry in the `mid` field.
            Pass either this field or the `mid` field, not both.
          maxLength: 36
          minLength: 1
          type: string
        mid:
          description: >-
            The merchant to be exempted.

            This field is required if there is no entry in the
            `merchant_group_token` field.

            Use either this field or the `merchant_group_token` field, not both.
          maxLength: 36
          minLength: 1
          type: string
        name:
          description: The name of the merchant identifier authorization control exemption.
          maxLength: 255
          minLength: 0
          type: string
        start_time:
          description: |-
            The date and time when the exception starts, in UTC.
            `2020-10-26T20:03:05Z`, for example.
          format: date-time
          type: string
        token:
          description: The unique identifier of the merchant identifier authorization
            control exemption.
          type: string
      required:
        - name
      type: object
    auth_control_exempt_mids_update_request:
      properties:
        active:
          default: false
          description: Indicates whether the merchant identifier authorization control
            exception is active.
          type: boolean
      type: object
    auth_control_merchant_scope:
      description: >-
        Defines the group of merchants to which the authorization control
        applies.

        This object is required if the `association` object is not included in
        your request.

        Your request can include both the `merchant_scope` and `association`
        objects.


        If you include this object in your request, you must populate one or
        more of its fields. 

        If no fields are populated, the authorization control applies to all
        merchants. 
      properties:
        mcc:
          description: 4 char max
          maxLength: 4
          minLength: 1
          type: string
        mcc_group:
          description: 36 char max
          maxLength: 36
          minLength: 1
          type: string
        merchant_group_token:
          description: |-
            The unique identifier of a merchant group.

            Enter a value to control access to a group of merchants.
          maxLength: 36
          minLength: 1
          type: string
        mid:
          description: 36 char max
          maxLength: 36
          minLength: 1
          type: string
      type: object
    auth_control_request:
      properties:
        active:
          default: true
          description: >-
            Indicates whether the authorization control is active.

            If the control will be used for Commando Mode, set to `false` and
            then enable it using `commando_mode_enables`.

            See <</core-api/commando-mode#_update_commando_mode_control_set,
            Update Commando Mode control set>>.
          type: boolean
        association:
          $ref: "#/components/schemas/spend_control_association"
        end_time:
          description: The date and time when the exception ends.
          format: date-time
          type: string
        merchant_scope:
          $ref: "#/components/schemas/auth_control_merchant_scope"
        name:
          description: The name of the authorization control.
          maxLength: 255
          minLength: 0
          type: string
        start_time:
          description: The date and time when the exception goes into effect.
          format: date-time
          type: string
        token:
          description: >-
            The unique identifier of the authorization control.


            If you do not include a token, the system will generate one
            automatically.

            This token is necessary for use in other API calls, so we recommend
            that rather than let the system generate one, you use a simple
            string that is easy to remember.

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - name
      type: object
    auth_control_response:
      properties:
        active:
          default: true
          description: >-
            Indicates whether the authorization control is active.

            If the control will be used for Commando Mode, set to `false` and
            then enable it using `commando_mode_enables`.

            See <</core-api/commando-mode#_update_commando_mode_control_set,
            Update Commando Mode control set>>.
          type: boolean
        association:
          $ref: "#/components/schemas/spend_control_association"
        end_time:
          description: The date and time when the exception ends.
          format: date-time
          type: string
        merchant_scope:
          $ref: "#/components/schemas/auth_control_merchant_scope"
        name:
          description: The name of the authorization control.
          maxLength: 255
          minLength: 0
          type: string
        start_time:
          description: The date and time when the exception goes into effect.
          format: date-time
          type: string
        token:
          description: >-
            The unique identifier of the authorization control.


            If you do not include a token, the system will generate one
            automatically.

            This token is necessary for use in other API calls, so we recommend
            that rather than let the system generate one, you use a simple
            string that is easy to remember.

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - name
      type: object
    auth_control_update_request:
      properties:
        active:
          default: true
          description: Indicates whether the authorization control is active.
          type: boolean
        association:
          $ref: "#/components/schemas/spend_control_association"
        end_time:
          description: The date and time when the exception ends.
          format: date-time
          type: string
        merchant_scope:
          $ref: "#/components/schemas/merchant_scope"
        name:
          description: The name of the authorization control.
          maxLength: 255
          minLength: 0
          type: string
        start_time:
          description: The date and time when the exception goes into effect.
          format: date-time
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
      required:
        - token
      type: object
    auth_request_model:
      properties:
        amount:
          type: number
        card_acceptor:
          $ref: "#/components/schemas/card_acceptor_model"
        card_options:
          $ref: "#/components/schemas/card_options"
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        cash_back_amount:
          type: number
        is_pre_auth:
          default: false
          type: boolean
        mid:
          maxLength: 50
          minLength: 1
          type: string
        network_fees:
          $ref: "#/components/schemas/authRequestModelNetworkFees"
        pin:
          maxLength: 50
          minLength: 1
          type: string
        transaction_options:
          $ref: "#/components/schemas/transaction_options"
        webhook:
          $ref: "#/components/schemas/webhook"
      required:
        - amount
        - card_token
        - mid
      type: object
    authorization_advice_model:
      properties:
        amount:
          type: number
        network_fees:
          $ref: "#/components/schemas/authorizationAdviceModelNetworkFees"
        original_transaction_token:
          maxLength: 36
          minLength: 1
          type: string
        transaction_options:
          $ref: "#/components/schemas/transaction_options"
        webhook:
          $ref: "#/components/schemas/webhook"
      required:
        - amount
        - original_transaction_token
      type: object
    authorization_controls:
      description: >-
        Controls the expiration of authorizations and automatic increases to the
        authorization amount for MCCs specified in this group.


        By default, these authorization controls apply program-wide, meaning
        that they apply to every card in your program. 

        You can, however, exempt cards associated with any particular card
        product by setting that card product's
        `allow_mcc_group_authorization_controls` field to `false`.
      properties:
        hold_expiration_days:
          default: 7
          description: Specifies the number of days after which an authorization
            associated with this group expires.
          format: int32
          type: integer
        hold_increase:
          $ref: "#/components/schemas/hold_increase"
      type: object
    auto_reload_association:
      description: |-
        Contains the scope of the auto reload: card product, user, or business. 

        If no value is supplied, the auto reload applies at the program level.
      properties:
        business_token:
          description: Unique identifier of the associated business.
          maxLength: 36
          minLength: 1
          type: string
        card_product_token:
          description: Unique identifier of the associated card product.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: Unique identifier of the associated user.
          maxLength: 36
          minLength: 1
          type: string
      type: object
    auto_reload_model:
      description: |-
        Contains information about an auto reload. 
        See <</core-api/auto-reload,Auto Reloads>> for more information.

        Returned if an auto reload was executed.
      properties:
        active:
          default: true
          description: |-
            Whether the auto reload is active.

            Only one auto reload per level, per object, can be active.
          type: boolean
        association:
          $ref: "#/components/schemas/auto_reload_association"
        currency_code:
          description: Currency of the funds used in the auto reload.
          type: string
        funding_source_address_token:
          description: >-
            Unique identifier of the associated funding source address used for
            the auto reload.


            Returned when the funding source is a payment card.
          maxLength: 36
          minLength: 1
          type: string
        funding_source_token:
          description: >-
            Unique identifier of the associated funding source used for the auto
            reload.


            Returned when `order_scope` contains the `gpa` object.
          maxLength: 36
          minLength: 1
          type: string
        order_scope:
          $ref: "#/components/schemas/order_scope"
        token:
          description: Unique identifier of the auto reload.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - currency_code
        - order_scope
      type: object
    auto_reload_response_model:
      properties:
        active:
          default: true
          description: |-
            Specifies whether the auto reload is active.

            Only one auto reload per level, per object, can be active.
          type: boolean
        association:
          $ref: "#/components/schemas/auto_reload_association"
        created_time:
          description: |-
            The date and time when the auto reload object was created, in UTC.
            `2021-10-26T20:03:05Z`, for example.
          format: date-time
          type: string
        currency_code:
          description: The three-digit ISO 4217 currency code.
          type: string
        funding_source_address_token:
          description: >-
            The unique identifier of the funding source address to use for this
            auto reload.


            If your funding source is an ACH account, then a
            `funding_source_address_token` is not required.

            If your funding source is a payment card, you must have at least one
            funding source address in order to create a GPA order.
          maxLength: 36
          minLength: 1
          type: string
        funding_source_token:
          description: The unique identifier of the funding source to use for this auto
            reload.
          maxLength: 36
          minLength: 1
          type: string
        last_modified_time:
          description: >-
            The date and time when the auto reload object was last modified, in
            UTC.

            `2021-10-26T20:03:10Z`, for example.
          format: date-time
          type: string
        order_scope:
          $ref: "#/components/schemas/order_scope"
        token:
          description: The unique identifier of the auto reload.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - created_time
        - currency_code
        - last_modified_time
        - order_scope
      type: object
    auto_reload_update_model:
      properties:
        active:
          default: true
          description: |-
            Specifies whether the auto reload is active.

            Only one auto reload per level, per object, can be active.
          type: boolean
        association:
          $ref: "#/components/schemas/auto_reload_association"
        currency_code:
          description: The three-digit ISO 4217 currency code.
          type: string
        funding_source_address_token:
          description: >-
            The unique identifier of the funding source address to use for this
            auto reload.


            If your funding source is an ACH account, then a
            `funding_source_address_token` is not required.

            If your funding source is a payment card, you must have at least one
            funding source address in order to create a GPA order.
          maxLength: 36
          minLength: 1
          type: string
        funding_source_token:
          description: The unique identifier of the funding source to use for this auto
            reload.
          maxLength: 36
          minLength: 1
          type: string
        order_scope:
          $ref: "#/components/schemas/order_scope"
        token:
          description: The token in the path parameter takes precedence over the token
            body field.
          maxLength: 36
          minLength: 1
          type: string
      type: object
    available:
      description: Specifies the available balances of the velocity controls
        associated with a user.
      properties:
        amount:
          description: The total amount of spend remaining in the velocity control.
          exclusiveMinimum: false
          minimum: 0
          type: number
        days_remaining:
          description: The number of days remaining in the velocity control time window.
          format: int32
          type: integer
        uses:
          default: 0
          description: The number of uses remaining in the velocity control.
          format: int32
          type: integer
      required:
        - amount
        - uses
      type: object
    avs_control_options:
      properties:
        decline_on_address_number_mismatch:
          default: false
          description: >-
            Set to `true` to decline account verification or authorization
            messages whose address number does not match the address number on
            file.


            Set to `false` to not decline account verification or authorization
            messages whose address number does not match the address number on
            file.


            This field is functional only if `validate = true`.
          type: boolean
        decline_on_postal_code_mismatch:
          default: true
          description: >-
            Set to `true` to decline account verification or authorization
            messages whose postal code does not match the postal code on file.


            Set to `false` to not decline account verification or authorization
            messages whose postal code does not match the postal code on file.


            This field is functional only if `validate = true`.
          type: boolean
        validate:
          default: true
          description: >-
            Set to `true` to require validation of account verification or
            authorization messages.


            Set to `false` to forgo validation and approve all account
            verification and authorization messages.
          type: boolean
      type: object
    avs_controls:
      properties:
        auth_messages:
          $ref: "#/components/schemas/avs_control_options"
        av_messages:
          $ref: "#/components/schemas/avs_control_options"
      type: object
    avs_information:
      description: Contains address verification information provided by the
        cardholder or held on file by Marqeta.
      properties:
        postal_code:
          description: Postal code provided by the Marqeta platform.
          type: string
        street_address:
          description: Street address provided by the cardholder.
          type: string
        zip:
          description: ZIP code provided by the cardholder.
          type: string
      type: object
    balance_inquiry_request_model:
      properties:
        account_type:
          $ref: "#/components/schemas/balanceInquiryRequestModelAccountType"
        card_acceptor:
          $ref: "#/components/schemas/card_acceptor_model"
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        mid:
          maxLength: 50
          minLength: 1
          type: string
        network_fees:
          $ref: "#/components/schemas/balanceInquiryRequestModelNetworkFees"
        pin:
          maxLength: 15
          minLength: 1
          type: string
        webhook:
          $ref: "#/components/schemas/webhook"
      required:
        - account_type
        - card_acceptor
        - card_token
        - mid
      type: object
    bank_transfer_request_model:
      properties:
        amount:
          description: The amount to push or pull.
          exclusiveMinimum: false
          minimum: 0.01
          type: number
        currency_code:
          description: The currency of the push or pull.
          type: string
        funding_source_token:
          description: The ACH funding source token for the external account.
          maxLength: 36
          minLength: 0
          type: string
        memo:
          description: Additional text describing the ACH transfer.
          type: string
        standard_entry_class_code:
          $ref: "#/components/schemas/bankTransferRequestModelStandardEntryClassCode"
        statement_descriptor:
          description: Description of the transaction, as it will appear on the receiver's
            bank statement.
          maxLength: 10
          minLength: 0
          type: string
        token:
          description: The token of the ACH transfer to retrieve.
          maxLength: 36
          minLength: 0
          type: string
        transfer_speed:
          $ref: "#/components/schemas/bankTransferRequestModelTransferSpeed"
        type:
          $ref: "#/components/schemas/bankTransferRequestModelType"
      required:
        - amount
        - funding_source_token
      type: object
    bank_transfer_response_model:
      properties:
        amount:
          description: The amount to push or pull.
          exclusiveMinimum: false
          minimum: 0.01
          type: number
        batch_number:
          description: Field required in older versions of the API, but no longer used.
          type: string
        created_time:
          description: |-
            The date and time when the ACH transfer was created, in UTC.
            `2021-10-26T20:03:15Z`, for example.
          format: date-time
          type: string
        currency_code:
          description: Valid alpha-3
            link:https://www.iso.org/iso-4217-currency-codes.html[ISO 4217
            currency code, window="_blank"]
          type: string
        funding_source_token:
          description: The ACH funding source token for the external account.
          maxLength: 36
          minLength: 0
          type: string
        last_modified_time:
          description: |-
            The date and time when the ACH transfer was last modified, in UTC.
            `2021-10-26T20:03:10Z`, for example.
          format: date-time
          type: string
        memo:
          description: Additional text describing the ACH transfer.
          type: string
        return_code:
          description: A standardized ACH return code for a returned transaction,
            generally sent by the RDFI. Transactions can be returned for any of
            the reasons listed in the
            <</developer-guides/ach-origination#_nacha_ach_return_codes, NACHA
            ACH return codes table>> of the ACH Origination Guide.
          type: string
        return_reason:
          description: Human-readable description correlating to the `return_code`, such
            as `Insufficient funds`, if a return code is present in the
            response.
          type: string
        standard_entry_class_code:
          $ref: "#/components/schemas/bankTransferResponseModelStandardEntryClassCode"
        statement_descriptor:
          description: Description of the transaction, as it will appear on the receiver's
            bank statement.
          maxLength: 10
          minLength: 0
          type: string
        status:
          $ref: "#/components/schemas/bankTransferResponseModelStatus"
        token:
          description: The token of the ACH transfer to retrieve.
          maxLength: 36
          minLength: 0
          type: string
        transfer_speed:
          $ref: "#/components/schemas/bankTransferResponseModelTransferSpeed"
        transitions:
          $ref: "#/components/schemas/bankTransferResponseModelTransitions"
        type:
          $ref: "#/components/schemas/bankTransferResponseModelType"
      required:
        - amount
        - funding_source_token
      type: object
    bank_transfer_transition_request_model:
      properties:
        bank_transfer_token:
          description: Token of the ACH transfer you want to transition.
          maxLength: 36
          minLength: 0
          type: string
        batch_number:
          description: Field required in older versions of the API, but no longer used.
          type: string
        channel:
          $ref: "#/components/schemas/bankTransferTransitionRequestModelChannel"
        effective_date:
          format: date-time
          type: string
        program_reserve_token:
          description: Not currently used.
          maxLength: 36
          minLength: 0
          type: string
        reason:
          description: Description of why the ACH transfer status was updated.
          type: string
        return_code:
          description: >-
            A standardized ACH return code for a returned transaction, generally
            sent by the RDFI.

            Transactions can be returned for any of the reasons listed in the
            <</developer-guides/ach-origination#_nacha_ach_return_codes, NACHA
            ACH return codes table>> of the ACH Origination Guide.
          type: string
        status:
          $ref: "#/components/schemas/bankTransferTransitionRequestModelStatus"
        token:
          maxLength: 36
          minLength: 0
          type: string
      required:
        - bank_transfer_token
        - channel
        - status
      type: object
    bank_transfer_transition_response_model:
      properties:
        bank_transfer_token:
          description: Token of the ACH transfer being transitioned.
          maxLength: 36
          minLength: 0
          type: string
        batch_number:
          description: Field required in older versions of the API, but no longer used.
          type: string
        channel:
          $ref: "#/components/schemas/bankTransferTransitionResponseModelChannel"
        created_time:
          description: The date and time when the ACH transfer was created.
          format: date-time
          type: string
        effective_date:
          format: date-time
          type: string
        last_modified_time:
          description: The date and time when the ACH transfer was last modified.
          format: date-time
          type: string
        program_reserve_token:
          description: Not currently used.
          maxLength: 36
          minLength: 0
          type: string
        reason:
          description: >-
            An explanation of why the transition is being made, for example
            "Created by POST call on API".

            Returned if this information was supplied when the transition was
            originally created.
          type: string
        return_code:
          description: A standardized ACH return code for a returned transaction,
            generally sent by the RDFI. Transactions can be returned for any of
            the reasons listed in the
            <</developer-guides/ach-origination#_nacha_ach_return_codes, NACHA
            ACH return codes table>> of the ACH Origination Guide.
          type: string
        return_reason:
          description: Human-readable description correlating to the `return_code`, such
            as `Insufficient funds`, if a return code is present in the
            response.
          type: string
        status:
          $ref: "#/components/schemas/bankTransferTransitionResponseModelStatus"
        token:
          description: The unique identifier of the bank transfer transition.
          maxLength: 36
          minLength: 0
          type: string
        transaction_jit_token:
          description: Transaction token for JIT-related ledger entries for the ACH
            transfer.
          type: string
        transaction_token:
          description: Transaction token for *non*-JIT-related ledger entries for the ACH
            transfer.
          type: string
      required:
        - bank_transfer_token
        - channel
        - status
      type: object
    base_ach_request_model:
      properties:
        account_number:
          description: The ACH account number.
          type: string
        account_type:
          $ref: "#/components/schemas/baseAchRequestModelAccountType"
        bank_name:
          description: The name of the bank holding the account.
          type: string
        is_default_account:
          default: false
          description: >-
            If there are multiple funding sources, this field specifies which
            source is used by default in funding calls.

            If there is only one funding source, the system ignores this field
            and always uses that source.
          type: boolean
        name_on_account:
          description: The name on the ACH account.
          maxLength: 50
          minLength: 1
          type: string
        routing_number:
          description: The routing number for the ACH account.
          readOnly: true
          type: string
        token:
          description: >-
            The unique identifier of the funding source.

            If you do not include a token, the system will generate one
            automatically.

            This token is necessary for use in other calls, so we recommend that
            rather than let the system generate one, you use a simple string
            that is easy to remember.

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        verification_notes:
          description: |-
            Free-form text field for holding notes about verification.
            This field is returned only if `verification_override = true`.
          type: string
        verification_override:
          default: false
          description: Allows the ACH funding source to be used regardless of its
            verification status.
          type: boolean
      required:
        - account_number
        - account_type
        - name_on_account
        - routing_number
      type: object
    base_ach_response_model:
      properties:
        account_suffix:
          description: The ACH account identifier appended to the bank account number.
          type: string
        account_type:
          description: The type of account.
          type: string
        active:
          default: false
          description: Specifies whether the account is active.
          type: boolean
        bank_name:
          description: |-
            The name of the bank holding the account.
            This field is returned if it exists in the resource.
          type: string
        created_time:
          description: |-
            The date and time when the resource was created, in UTC.
            `2022-02-26T20:03:05Z`, for example.
          format: date-time
          type: string
        date_sent_for_verification:
          description: >-
            The date and time when the account was sent for verification, in
            UTC.

            `2022-02-26T20:03:05Z`, for example.


            This field is returned if it exists in the resource.
          format: date-time
          type: string
        date_verified:
          description: |-
            The date and time when the account was verified, in UTC.
            `2022-02-26T20:03:05Z`, for example.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        is_default_account:
          default: false
          description: >-
            If there are multiple funding sources, this field specifies which
            source is used by default in funding calls.

            If there is only one funding source, the system ignores this field
            and always uses that source.
          type: boolean
        last_modified_time:
          description: |-
            The date and time when the resource was last modified, in UTC.
            `2022-02-26T20:03:05Z`, for example.
          format: date-time
          type: string
        name_on_account:
          description: The name on the ACH account.
          type: string
        partner:
          type: string
        partner_account_link_reference_token:
          type: string
        token:
          description: The unique identifier of the funding source.
          type: string
        verification_notes:
          description: |-
            Free-form text field for holding notes about verification.
            This field is returned only if `verification_override = true`.
          type: string
        verification_override:
          default: false
          description: >-
            Allows the ACH funding source to be used regardless of its
            verification status.

            This field is returned if it exists in the resource.
          type: boolean
        verification_status:
          description: |-
            The account verification status.
            This field is returned if it exists in the resource.
          type: string
      required:
        - account_suffix
        - account_type
        - active
        - created_time
        - last_modified_time
        - name_on_account
        - token
      type: object
    beneficial_owner_request:
      description: >-
        Contains information about the beneficial owner of the business, if
        applicable.


        This object is required for KYC verification in the United States if the
        business has a beneficial owner.

        Do not include information about the proprietor or business officer in a
        `beneficial_owner` object.

        If the proprietor or officer of the business is also a beneficial owner,
        you must indicate that in the `proprietor_is_beneficial_owner` field in
        the body field details of the business.
      properties:
        dob:
          description: Date of birth of the beneficial owner.
          format: date-time
          type: string
        first_name:
          description: First name of the beneficial owner.
          type: string
        home:
          $ref: "#/components/schemas/AddressRequestModel"
        last_name:
          description: Last name of the beneficial owner.
          type: string
        middle_name:
          description: Middle name of the beneficial owner.
          type: string
        phone:
          description: Ten-digit phone number of the beneficial owner.
          type: string
        ssn:
          description: Nine-digit Social Security Number of the beneficial owner.
          type: string
        title:
          description: Title of the beneficial owner.
          type: string
      type: object
    beneficial_owner_response:
      description: >-
        Contains information about the beneficial owner of the business, if
        applicable.


        This object is required for KYC verification in the United States if the
        business has a beneficial owner.

        Do not include information about the proprietor or business officer in a
        `beneficial_owner` object.

        If the proprietor or officer of the business is also a beneficial owner,
        you must indicate that in the `proprietor_is_beneficial_owner` field in
        the body field details of the business.
      properties:
        first_name:
          description: First name of the beneficial owner.
          type: string
        getdob:
          description: Date of birth of the beneficial owner.
          format: date-time
          type: string
        home:
          $ref: "#/components/schemas/AddressResponseModel"
        last_name:
          description: Last name of the beneficial owner.
          type: string
        middle_name:
          description: Middle name of the beneficial owner.
          type: string
        phone:
          description: Ten-digit phone number of the beneficial owner.
          type: string
        title:
          description: Title of the beneficial owner.
          type: string
      type: object
    bulk_issuance_request:
      properties:
        card_allocation:
          description: The number of cards in the order.
          format: int32
          maximum: 50000
          type: integer
        card_product_token:
          description: Specifies the card product from which to create your cards.
          maxLength: 36
          minLength: 1
          type: string
        expedite:
          default: false
          description: >-
            Set to `true` to request expedited processing of the order by your
            card fulfillment provider.


            This expedited service is available for cards fulfilled by
            link:http://perfectplastic.com/[Perfect Plastic Printing,
            window="_blank"], link:http://www.idemia.com[IDEMIA,
            window="_blank"], and link:https://www.arroweye.com/[Arroweye
            Solutions, window="_blank"].


            *NOTE:* Contact your Marqeta representative for information
            regarding the cost of expedited service.
          type: boolean
        expiration_offset:
          $ref: "#/components/schemas/expiration_offset"
        fulfillment:
          $ref: "#/components/schemas/fulfillment"
        name_line_1_numeric_postfix:
          default: false
          description: >-
            If set to `true`, the unique numeric postfix appended to each card's
            token field is also appended to the card's `fulfillment.

            card_personalization.text.name_line_1.value` field.
          type: boolean
        name_line_1_random_postfix:
          default: false
          description: >-
            If set to `true`, the unique random postfix appended to each card's
            token field is also appended to the card's `fulfillment.

            card_personalization.text.name_line_1.value` field.
          type: boolean
        token:
          description: >-
            If you do not include a token, the system will generate one
            automatically.

            This token is necessary for use in other API calls, so we recommend
            that rather than let the system generate one, you use a simple
            string that is easy to remember.

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        user_association:
          $ref: "#/components/schemas/user_association"
      required:
        - card_allocation
        - card_product_token
        - fulfillment
        - token
      type: object
    bulk_issuance_response:
      properties:
        card_allocation:
          description: The number of cards in the order.
          format: int32
          maximum: 50000
          type: integer
        card_fulfillment_time:
          description: |-
            The date and time when the bulk card order was fulfilled, in UTC.
            `2021-10-26T20:03:05Z`, for example.

            This field is included if your bulk card order has been processed.
          format: date-time
          type: string
        card_product_token:
          description: Specifies the card product from which the cards are created.
          maxLength: 36
          minLength: 1
          type: string
        cards_processed:
          description: |-
            The number of cards processed in the bulk card order.

            This field is returned if it exists in the resource.
          format: int32
          type: integer
        created_time:
          description: |-
            The date and time when the resource was created, in UTC.
            `2021-10-26T20:03:05Z`, for example.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        expedite:
          default: false
          description: >-
            Indicates if expedited processing of this bulk card order was
            requested.


            This field is returned if it exists in the resource.
          type: boolean
        expiration_offset:
          $ref: "#/components/schemas/expiration_offset"
        fulfillment:
          $ref: "#/components/schemas/FulfillmentResponse"
        name_line1_end_index:
          description: >-
            This field is included if your bulk card order has been processed.


            You can use the `name_line1_start_index` and `name_line1_end_index`
            fields to identify the cards and users associated with the order.

            For example, if the start index is "1" and the end index is "3", the
            card tokens are "card-1", "card-2", and "card-3", and the user
            tokens are "user-1", "user-2", and "user-3".


            See <</core-api/bulk-card-orders#create_bulk_card_order, Create bulk
            card order>> for more information about the automatic generation and
            naming of cards and users.
          format: int32
          type: integer
        name_line1_start_index:
          description: >-
            This field is included if your bulk card order has been processed.


            You can use the `name_line1_start_index` and `name_line1_end_index`
            fields to identify the cards and users associated with the order.

            For example, if the start index is "1" and the end index is "3", the
            card tokens are "card-1", "card-2", and "card-3", and the user
            tokens are "user-1", "user-2", and "user-3".


            See <</core-api/bulk-card-orders#create_bulk_card_order, Create bulk
            card order>> for more information about the automatic generation and
            naming of cards and users.
          format: int32
          type: integer
        name_line_1_numeric_postfix:
          default: false
          description: If set to `true`, the unique numeric postfix appended to each
            card's token field is also appended to the card's `fulfillment.
            card_personalization.text.name_line_1.value` field.
          type: boolean
        name_line_1_random_postfix:
          default: false
          description: >-
            If set to `true`, the unique random postfix appended to each card's
            token field is also appended to the card's `fulfillment.

            card_personalization.text.name_line_1.value` field.


            This field is returned if it exists in the resource.
          type: boolean
        provider_ship_date:
          description: >-
            The date and time when the card provider shipped the bulk card
            order, in UTC.

            `2021-10-26T20:03:05Z`, for example.


            This field is included if your bulk card order has shipped.
          format: date-time
          type: string
        provider_shipping_method:
          description: |-
            The shipping method used by the card provider.
            `United_Postal_Service`, for example.

            This field is included if your bulk card order has shipped.
          type: string
        provider_tracking_number:
          description: >-
            A tracking number is included only if your card provider is Arroweye
            Solutions.


            This field is included if your bulk card order has shipped.
          type: string
        token:
          description: The unique identifier of the bulk card order.
          maxLength: 36
          minLength: 1
          type: string
        user_association:
          $ref: "#/components/schemas/user_association"
      required:
        - card_allocation
        - card_product_token
        - fulfillment
        - token
      type: object
    business_card_holder_response:
      properties:
        account_holder_group_token:
          description: Associates the specified account holder group with the business.
          maxLength: 36
          minLength: 0
          type: string
        active:
          default: false
          description: Specifies if the business is in the `ACTIVE` state on the Marqeta
            platform.
          type: boolean
        attestation_consent:
          default: false
          description: Indicates that the attester agrees that the information provided is
            correct and truthful.
          type: boolean
        attestation_date:
          description: The timestamp of the attestation.
          format: date-time
          type: string
        attester_name:
          description: The name of the attester for KYC verification.
          maxLength: 64
          minLength: 0
          type: string
        attester_title:
          description: The title of the attester for KYC verification.
          maxLength: 64
          minLength: 0
          type: string
        authentication:
          $ref: "#/components/schemas/Authentication"
        beneficial_owner1:
          $ref: "#/components/schemas/beneficial_owner_response"
        beneficial_owner2:
          $ref: "#/components/schemas/beneficial_owner_response"
        beneficial_owner3:
          $ref: "#/components/schemas/beneficial_owner_response"
        beneficial_owner4:
          $ref: "#/components/schemas/beneficial_owner_response"
        business_name_dba:
          description: Fictitious business name ("Doing Business As" or DBA).
          maxLength: 255
          minLength: 0
          type: string
        business_name_legal:
          description: Legal name of business.
          maxLength: 255
          minLength: 0
          type: string
        business_type:
          description: Indicates the type of business, for example B2B
            (business-to-business) or B2C (business-to-consumer).
          maxLength: 255
          minLength: 0
          type: string
        created_time:
          description: |-
            The date and time when the business was created, in UTC.
            `2021-10-26T20:03:05Z`, for example.
          format: date-time
          type: string
        date_established:
          description: The date and time when the business was established.
          format: date-time
          type: string
        duns_number:
          description: Data Universal Numbering System (DUNS) number of the business.
          maxLength: 255
          minLength: 0
          type: string
        general_business_description:
          description: General description of the business.
          maxLength: 255
          minLength: 0
          type: string
        history:
          description: History of the business.
          maxLength: 255
          minLength: 0
          type: string
        identifications:
          $ref: "#/components/schemas/businessCardHolderResponseIdentifications"
        in_current_location_since:
          description: The date on which the business office opened in its current location.
          format: date-time
          type: string
        incorporation:
          $ref: "#/components/schemas/business_incorporation_response"
        international_office_locations:
          description: The locations of the business' offices outside the US.
          maxLength: 255
          minLength: 0
          type: string
        ip_address:
          description: The IP address of the business.
          maxLength: 39
          minLength: 0
          type: string
        last_modified_time:
          description: |-
            The date and time when the business was last modified, in UTC.
            `2021-10-26T20:03:05Z`, for example.
          format: date-time
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Associates any additional metadata you provide with the business.
          type: object
        notes:
          description: Any additional information pertaining to the business.
          maxLength: 255
          minLength: 0
          type: string
        office_location:
          $ref: "#/components/schemas/AddressResponseModel"
        password:
          description: Password for the `business` account on the Marqeta platform.
          maxLength: 255
          minLength: 1
          type: string
        phone:
          description: 10-digit telephone number of business.
          maxLength: 255
          minLength: 0
          type: string
        primary_contact:
          $ref: "#/components/schemas/PrimaryContactInfoModel"
        proprietor_is_beneficial_owner:
          default: false
          description: Indicates that the proprietor or officer of the business is also a
            beneficial owner.
          type: boolean
        proprietor_or_officer:
          $ref: "#/components/schemas/business_proprietor_response"
        status:
          $ref: "#/components/schemas/businessCardHolderResponseStatus"
        taxpayer_id:
          description: The taxpayer identifier of the business.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: The unique identifier of the business resource.
          maxLength: 36
          minLength: 1
          type: string
        website:
          description: URL of the business' website.
          maxLength: 255
          minLength: 0
          type: string
      required:
        - created_time
        - last_modified_time
      type: object
    business_card_holder_update:
      properties:
        account_holder_group_token:
          description: Associates the specified account holder group with the business.
          maxLength: 36
          minLength: 0
          type: string
        active:
          default: true
          description: Specifies if the business is in the `ACTIVE` state on the Marqeta
            platform.
          type: boolean
        attestation_consent:
          default: false
          description: >-
            Indicates that the attester agrees that the information provided is
            correct and truthful.


            This field is required for KYC verification (US-based accounts
            only).
          type: boolean
        attestation_date:
          description: >-
            The timestamp of the attestation.


            This field is required for KYC verification (US-based accounts
            only).
          format: date-time
          type: string
        attester_name:
          description: >-
            The name of the attester for KYC verification.


            This field is required for KYC verification (US-based accounts
            only).
          maxLength: 64
          minLength: 0
          type: string
        attester_title:
          description: The title of the attester for KYC verification.
          maxLength: 64
          minLength: 0
          type: string
        beneficial_owner1:
          $ref: "#/components/schemas/beneficial_owner_request"
        beneficial_owner2:
          $ref: "#/components/schemas/beneficial_owner_request"
        beneficial_owner3:
          $ref: "#/components/schemas/beneficial_owner_request"
        beneficial_owner4:
          $ref: "#/components/schemas/beneficial_owner_request"
        business_name_dba:
          description: >-
            Fictitious business name ("Doing Business As" or DBA).


            This field is required for KYC verification (US-based accounts
            only).

            If your business does not use a fictitious business name, enter your
            legal business name again in this field.
          maxLength: 255
          minLength: 0
          type: string
        business_name_legal:
          description: >-
            Legal name of business.


            This field is required for KYC verification (US-based accounts
            only).
          maxLength: 255
          minLength: 0
          type: string
        business_type:
          description: Indicates the type of business, for example business-to-business
            (B2B) or business-to-consumer (B2C).
          maxLength: 255
          minLength: 0
          type: string
        date_established:
          description: >-
            Date the business was established.


            This field is required for KYC verification (US-based accounts
            only).
          format: date-time
          type: string
        duns_number:
          description: Data Universal Numbering System (DUNS) number of the business.
          maxLength: 255
          minLength: 0
          type: string
        general_business_description:
          description: General description of the business.
          maxLength: 255
          minLength: 0
          type: string
        history:
          description: History of the business.
          maxLength: 255
          minLength: 0
          type: string
        identifications:
          $ref: "#/components/schemas/businessCardHolderUpdateIdentifications"
        in_current_location_since:
          description: The date on which the business office opened in its current location.
          format: date-time
          type: string
        incorporation:
          $ref: "#/components/schemas/business_incorporation"
        international_office_locations:
          description: The locations of the business' offices outside the United States.
          maxLength: 255
          minLength: 0
          type: string
        ip_address:
          description: The IP address of the business.
          maxLength: 39
          minLength: 0
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Associates any additional metadata you provide with the business.
          type: object
        notes:
          description: Any additional information pertaining to the business.
          maxLength: 255
          minLength: 0
          type: string
        office_location:
          $ref: "#/components/schemas/AddressRequestModel"
        password:
          description: Password for the `business` account on the Marqeta platform.
          maxLength: 255
          minLength: 0
          type: string
        phone:
          description: 10-digit telephone number of business.
          maxLength: 255
          minLength: 0
          type: string
        primary_contact:
          $ref: "#/components/schemas/PrimaryContactInfoModel"
        proprietor_is_beneficial_owner:
          default: false
          description: >-
            Indicates that the proprietor or officer of the business is also a
            beneficial owner.


            This field is required for KYC verification in the United States if
            the business proprietor or officer is also a beneficial owner.

            If the proprietor or business officer is a beneficial owner, use
            this field to indicate their beneficial ownership.

            Do not include information about the proprietor or business officer
            in a `beneficial_owner` object.
          type: boolean
        proprietor_or_officer:
          $ref: "#/components/schemas/business_proprietor"
        taxpayer_id:
          description: The taxpayer identifier of the business.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: |-
            The unique identifier of the business. 

            Send a `GET` request to `/businesses` to retrieve business tokens.
          maxLength: 36
          minLength: 1
          type: string
        website:
          description: URL of the business' website.
          maxLength: 255
          minLength: 0
          type: string
      type: object
    business_cardholder:
      properties:
        account_holder_group_token:
          description: Associates the specified account holder group with the business.
          maxLength: 36
          minLength: 0
          type: string
        active:
          default: true
          description: Specifies if the business is in the `ACTIVE` state on the Marqeta
            platform.
          type: boolean
        attestation_consent:
          default: false
          description: >-
            Indicates that the attester agrees that the information provided is
            correct and truthful.


            This field is required for KYC verification (US-based accounts
            only).
          type: boolean
        attestation_date:
          description: >-
            The timestamp of the attestation.


            This field is required for KYC verification (US-based accounts
            only).
          format: date-time
          type: string
        attester_name:
          description: >-
            The name of the attester for KYC verification.


            This field is required for KYC verification (US-based accounts
            only).
          maxLength: 64
          minLength: 0
          type: string
        attester_title:
          description: The title of the attester for KYC verification.
          maxLength: 64
          minLength: 0
          type: string
        beneficial_owner1:
          $ref: "#/components/schemas/beneficial_owner_request"
        beneficial_owner2:
          $ref: "#/components/schemas/beneficial_owner_request"
        beneficial_owner3:
          $ref: "#/components/schemas/beneficial_owner_request"
        beneficial_owner4:
          $ref: "#/components/schemas/beneficial_owner_request"
        business_name_dba:
          description: >-
            Fictitious business name ("Doing Business As" or DBA).


            This field is required for KYC verification (US-based accounts
            only).

            If your business does not use a fictitious business name, enter your
            legal business name again in this field.
          maxLength: 255
          minLength: 0
          type: string
        business_name_legal:
          description: >-
            Legal name of business.


            This field is required for KYC verification (US-based accounts
            only).
          maxLength: 255
          minLength: 0
          type: string
        business_type:
          description: Indicates the type of business, for example B2B
            (business-to-business) or B2C (business-to-consumer).
          maxLength: 255
          minLength: 0
          type: string
        date_established:
          description: >-
            Date the business was established.


            This field is required for KYC verification (US-based accounts
            only).
          format: date-time
          type: string
        duns_number:
          description: Data Universal Numbering System (DUNS) number of the business.
          maxLength: 255
          minLength: 0
          type: string
        general_business_description:
          description: General description of the business.
          maxLength: 255
          minLength: 0
          type: string
        history:
          description: History of the business.
          maxLength: 255
          minLength: 0
          type: string
        identifications:
          $ref: "#/components/schemas/businessCardholderIdentifications"
        in_current_location_since:
          description: The date on which the business office opened in its current location.
          format: date-time
          type: string
        incorporation:
          $ref: "#/components/schemas/business_incorporation"
        international_office_locations:
          description: The locations of the business' offices outside the US.
          maxLength: 255
          minLength: 0
          type: string
        ip_address:
          description: The IP address of the business.
          maxLength: 39
          minLength: 0
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Associates any additional metadata you provide with the business.
          type: object
        notes:
          description: Any additional information pertaining to the business.
          maxLength: 255
          minLength: 0
          type: string
        office_location:
          $ref: "#/components/schemas/AddressRequestModel"
        password:
          description: Password for the `business` account on the Marqeta platform.
          maxLength: 255
          minLength: 1
          type: string
        phone:
          description: 10-digit telephone number of business.
          maxLength: 255
          minLength: 0
          type: string
        primary_contact:
          $ref: "#/components/schemas/PrimaryContactInfoModel"
        proprietor_is_beneficial_owner:
          default: false
          description: >-
            Indicates that the proprietor or officer of the business is also a
            beneficial owner.


            This field is required for KYC verification if the business
            proprietor or officer is also a beneficial owner.
          type: boolean
        proprietor_or_officer:
          $ref: "#/components/schemas/business_proprietor"
        taxpayer_id:
          description: The taxpayer identifier of the business.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: >-
            The unique identifier of the business resource.


            If you do not include a token, the system generates one
            automatically.

            This token is necessary for use in other API calls, so we recommend
            that rather than let the system generate one, you use a simple
            string that is easy to remember.

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        website:
          description: URL of the business' website.
          maxLength: 255
          minLength: 0
          type: string
      type: object
    business_incorporation:
      description: |-
        Contains information about the organizational structure of the business.

        This object is required for KYC verification (US-based accounts only).
      properties:
        address_registered_under:
          $ref: "#/components/schemas/AddressRequestModel"
        incorporation_type:
          $ref: "#/components/schemas/businessIncorporationIncorporationType"
        is_public:
          default: false
          description: A value of `true` indicates that the business is publicly held.
          type: boolean
        name_registered_under:
          description: Name under which the business is registered.
          maxLength: 255
          minLength: 0
          type: string
        state_of_incorporation:
          description: >-
            State where the business is incorporated.


            This field is required for KYC verification (US-based accounts
            only).
          maxLength: 255
          minLength: 0
          type: string
        stock_symbol:
          description: Business stock symbol.
          maxLength: 255
          minLength: 0
          type: string
      type: object
    business_incorporation_response:
      properties:
        address_registered_under:
          $ref: "#/components/schemas/AddressResponseModel"
        incorporation_type:
          $ref: "#/components/schemas/businessIncorporationResponseIncorporationType"
        is_public:
          default: false
          description: A value of `true` indicates that the business is publicly held.
          type: boolean
        name_registered_under:
          description: Name under which the business is registered.
          maxLength: 255
          minLength: 0
          type: string
        state_of_incorporation:
          description: State where the business is incorporated.
          maxLength: 255
          minLength: 0
          type: string
        stock_symbol:
          description: Stock symbol associated with the business.
          maxLength: 255
          minLength: 0
          type: string
      type: object
    business_metadata:
      description: Contains customer-provided information about the business that
        funded the transaction.
      properties:
        metadata:
          additionalProperties:
            type: string
          description: Associates customer-provided metadata with the business.
          type: object
      type: object
    business_proprietor:
      description: |-
        Contains information about the proprietor or officer of the business.

        This object is required for KYC verification in the United States.
      properties:
        alternative_names:
          description: Alternate names of the business proprietor or officer.
          type: string
        dob:
          description: >-
            Business proprietor or officer's date of birth.


            This field is required for KYC verification (US-based accounts
            only).
          format: date-time
          type: string
        email:
          description: Email address of the business proprietor or officer.
          type: string
        first_name:
          description: First name of business proprietor or officer.
          type: string
        home:
          $ref: "#/components/schemas/AddressRequestModel"
        identifications:
          $ref: "#/components/schemas/businessProprietorIdentifications"
        last_name:
          description: Last name of business proprietor or officer.
          type: string
        middle_name:
          description: Middle name of business proprietor or officer.
          type: string
        phone:
          description: Telephone number of the business proprietor or officer.
          type: string
        ssn:
          description: The Social Security Number of the business proprietor or officer.
          type: string
        title:
          description: Title of business proprietor or officer.
          type: string
      required:
        - first_name
        - last_name
      type: object
    business_proprietor_response:
      properties:
        alternative_names:
          description: Alternate names of the business proprietor or officer.
          type: string
        dob:
          description: Business proprietor or officer's date of birth.
          format: date-time
          type: string
        email:
          description: Email address of the business proprietor or officer.
          type: string
        first_name:
          description: First name of the business proprietor or officer.
          type: string
        home:
          $ref: "#/components/schemas/AddressResponseModel"
        identifications:
          $ref: "#/components/schemas/businessProprietorResponseIdentifications"
        last_name:
          description: Last name of the business proprietor or officer.
          type: string
        middle_name:
          description: Middle name of the business proprietor or officer.
          type: string
        phone:
          description: Telephone number of the business proprietor or officer.
          type: string
        ssn:
          description: Social Security Number of the business proprietor or officer.
          type: string
        title:
          description: Title of the business proprietor or officer.
          type: string
      type: object
    card_acceptor_model:
      properties:
        address:
          maxLength: 255
          minLength: 0
          type: string
        city:
          maxLength: 40
          minLength: 0
          type: string
        country:
          type: string
        ecommerce_security_level_indicator:
          type: string
        mcc:
          maxLength: 5
          minLength: 0
          type: string
        name:
          maxLength: 50
          minLength: 0
          type: string
        partial_approval_capable:
          default: false
          type: boolean
        state:
          type: string
        zip:
          maxLength: 10
          minLength: 0
          type: string
      type: object
    card_holder_address_model:
      properties:
        active:
          default: true
          description: Specifies whether the address is active.
          type: boolean
        address_1:
          description: Street address.
          maxLength: 255
          minLength: 0
          type: string
        address_2:
          description: Additional address information.
          maxLength: 255
          minLength: 0
          type: string
        business_token:
          description: |-
            The unique identifier of the `business` account holder.
            This token is required if a `user_token` is not specified.
          maxLength: 36
          minLength: 1
          type: string
        city:
          description: City.
          maxLength: 40
          minLength: 0
          type: string
        country:
          description: Country.
          maxLength: 40
          minLength: 1
          type: string
        first_name:
          description: First name.
          maxLength: 40
          minLength: 0
          type: string
        is_default_address:
          default: false
          description: >-
            A value of `true` specifies that this address is the default address
            used by the account holder's funding source.

            If this is the account holder's only address, it is used as the
            default regardless of this field's setting.
          type: boolean
        last_name:
          description: Last name.
          maxLength: 40
          minLength: 0
          type: string
        phone:
          description: Telephone number.
          maxLength: 255
          minLength: 0
          type: string
        postal_code:
          description: Postal code.
          maxLength: 10
          minLength: 0
          type: string
        state:
          description: >-
            Two-character state, province, or territorial abbreviation.


            For a complete list of valid state and province abbreviations, see
            <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations,
            Valid state, provincial, and territorial abbreviations>>.
          maxLength: 2
          minLength: 0
          type: string
        token:
          description: >-
            The unique identifier of the address.

            If you do not include a token, the system will generate one
            automatically.

            This token is necessary for use in other API calls, so we recommend
            that rather than let the system generate one, you use a simple
            string that is easy to remember.

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            The unique identifier of the `user` account holder.
            This token is required if a `business_token` is not specified.
          maxLength: 36
          minLength: 1
          type: string
        zip:
          description: |-
            The United States ZIP code.
            This field is required if `postal_code` is not specified.
          maxLength: 10
          minLength: 0
          type: string
      required:
        - address_1
        - city
        - country
        - first_name
        - last_name
        - state
      type: object
    card_holder_address_update_model:
      properties:
        active:
          default: true
          description: Specifies whether the address is active.
          type: boolean
        address_1:
          description: Street address.
          maxLength: 255
          minLength: 0
          type: string
        address_2:
          description: Additional address information.
          maxLength: 255
          minLength: 0
          type: string
        city:
          description: City.
          maxLength: 40
          minLength: 0
          type: string
        country:
          description: Country.
          maxLength: 40
          minLength: 0
          type: string
        first_name:
          description: First name.
          maxLength: 40
          minLength: 0
          type: string
        is_default_address:
          default: false
          description: >-
            A value of `true` specifies that this address is the default address
            used by the account holder's funding source.

            If this is the account holder's only address, it is used as the
            default regardless of this field's setting.
          type: boolean
        last_name:
          description: Last name.
          maxLength: 40
          minLength: 0
          type: string
        phone:
          description: Telephone number.
          maxLength: 255
          minLength: 0
          type: string
        postal_code:
          description: Postal code.
          maxLength: 10
          minLength: 0
          type: string
        state:
          description: >-
            Two-character state, province, or territorial abbreviation.


            For a complete list, see
            <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations,
            Valid state, provincial, and territorial abbreviations>>.
          maxLength: 2
          minLength: 0
          type: string
        zip:
          maxLength: 10
          minLength: 0
          type: string
      type: object
    card_holder_model:
      description: Contains information about a cardholder.
      properties:
        account_holder_group_token:
          description: >-
            Associates the specified account holder group with the cardholder.


            Send a `GET` request to `/accountholdergroups` to retrieve account
            holder group tokens.
          maxLength: 36
          minLength: 0
          type: string
        active:
          default: true
          description: Specifies if the cardholder is in the `ACTIVE` state on the Marqeta
            platform.
          type: boolean
        address1:
          description: |-
            Cardholder's address.

            *NOTE:* Required for KYC verification (US-based cardholders only).
            Cannot perform KYC if set to a PO Box.
          maxLength: 255
          minLength: 0
          type: string
        address2:
          description: |-
            Additional address information for the cardholder.

            *NOTE:* Cannot perform KYC if set to a PO Box.
          maxLength: 255
          minLength: 0
          type: string
        birth_date:
          description: |-
            Cardholder's date of birth.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          type: string
        city:
          description: |-
            City where the cardholder resides.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 40
          minLength: 0
          type: string
        company:
          description: Company name.
          maxLength: 255
          minLength: 0
          type: string
        corporate_card_holder:
          default: false
          description: Specifies if the cardholder holds a corporate card.
          type: boolean
        country:
          description: |-
            Country where the cardholder resides.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 40
          minLength: 0
          type: string
        email:
          description: |-
            Valid email address of the cardholder.

            This value must be unique among users.
          maxLength: 255
          minLength: 1
          type: string
        first_name:
          description: |-
            Cardholder's first name.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 40
          minLength: 0
          type: string
        gender:
          $ref: "#/components/schemas/cardHolderModelGender"
        honorific:
          description: "Cardholder's title or prefix: Ms., Mr., Miss, Mrs., and so on."
          maxLength: 10
          minLength: 0
          type: string
        id_card_expiration_date:
          description: The expiration date of the cardholder's identification card.
          type: string
        id_card_number:
          description: Cardholder's identification card number.
          maxLength: 255
          minLength: 0
          type: string
        identifications:
          $ref: "#/components/schemas/cardHolderModelIdentifications"
        ip_address:
          description: Cardholder's IP address.
          maxLength: 39
          minLength: 0
          type: string
        last_name:
          description: |-
            Cardholder's last name.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 40
          minLength: 0
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Associates any additional metadata you provide with the cardholder.
          type: object
        middle_name:
          description: Cardholder's middle name.
          maxLength: 40
          minLength: 0
          type: string
        nationality:
          description: Cardholder's nationality.
          maxLength: 255
          minLength: 0
          type: string
        notes:
          description: Any additional information pertaining to the cardholder.
          maxLength: 255
          minLength: 0
          type: string
        parent_token:
          description: >-
            The unique identifier of a `user` or `business` already in the
            system.

            Send a `GET` request to `/users` to retrieve `user` tokens or
            `/businesses` to retrieve `business` tokens.


            Required if `uses_parent_account = true`.

            This `user` or `business` is configured as the parent of the current
            `user`.
          maxLength: 36
          minLength: 1
          type: string
        passport_expiration_date:
          description: The expiration date of the cardholder's passport.
          type: string
        passport_number:
          description: Cardholder's passport number.
          maxLength: 40
          minLength: 0
          type: string
        password:
          description: Cardholder's `user` account password on the Marqeta platform.
          maxLength: 255
          minLength: 0
          type: string
        phone:
          description: >-
            Telephone number of the cardholder (including area code), prepended
            by the `+` symbol and the 1- to 3-digit country calling code.

            Do not include hyphens, spaces, or parentheses.
          maxLength: 255
          minLength: 0
          type: string
        postal_code:
          description: |-
            Postal code of the cardholder's address.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 10
          minLength: 0
          type: string
        ssn:
          description: The cardholder's Social Security Number.
          type: string
        state:
          description: >-
            State in which the cardholder resides.


            *NOTE:*
            <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations,
            Valid two-character abbreviation>> required for KYC verification
            (US-based cardholders only).
          maxLength: 32
          minLength: 0
          type: string
        token:
          description: >-
            The unique identifier of the cardholder.

            If you do not include a token, the system generates one
            automatically.

            This token is necessary for use in other API calls, so we recommend
            that rather than let the system generate one, you use a simple
            string that is easy to remember.

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        uses_parent_account:
          default: false
          description: >-
            Indicates whether the child shares balances with the parent
            (`true`), or the child's balances are independent of the parent
            (`false`).


            If set to `true`, must also include a `parent_token` in the request.

            This value cannot be updated.
          type: boolean
      type: object
    card_life_cycle:
      description: Defines characteristics of the lifecycle of cards of this card
        product type.
      properties:
        activate_upon_issue:
          default: false
          description: A value of `true` indicates that cards of this card product type
            are active once they are issued.
          type: boolean
        card_service_code:
          default: 101
          description: >-
            A sequence of three digits that defines various services,
            differentiates card usage in international or domestic interchange,
            designates PIN and authorization requirements, and identifies card
            restrictions.

            The following values are commonly used:


            *First digit*


            * *1* — International interchange OK

            * *2* — International interchange, use IC (chip) where feasible

            * *5* — National interchange only except under bilateral agreement

            * *6* — National interchange only except under bilateral agreement,
            use IC (chip) where feasible

            * *7* — No interchange except under bilateral agreement (closed
            loop)

            * *9* — Test


            *Second digit*


            * *0* — Normal

            * *2* — Contact issuer via online means

            * *4* — Contact issuer via online means except under bilateral
            agreement


            *Third digit*


            * *0* — No restrictions, PIN required

            * *1* — No restrictions

            * *2* — Goods and services only (no cash)

            * *3* — ATM only, PIN required

            * *4* — Cash only

            * *5* — Goods and services only (no cash), PIN required

            * *6* — No restrictions, use PIN where feasible

            * *7* — Goods and services only (no cash), use PIN where feasible
          format: int32
          type: integer
        expiration_offset:
          $ref: "#/components/schemas/expiration_offset_with_minimum"
        update_expiration_upon_activation:
          default: false
          description: >-
            Normally, the `expiration_offset` is measured from the date of
            issue.

            Set this field to `true` to measure `expiration_offset` from the
            date of activation instead.
          type: boolean
      type: object
    card_metadata:
      properties:
        metadata:
          additionalProperties:
            type: string
          description: Associates customer-injected metadata with the card.
          type: object
      type: object
    card_options:
      properties:
        billing_address:
          $ref: "#/components/schemas/BillingAddress"
        card_present:
          default: false
          type: boolean
        cvv:
          maxLength: 3
          minLength: 0
          type: string
        expiration:
          maxLength: 4
          minLength: 4
          type: string
      type: object
    card_personalization:
      description: Allows personalized attributes to be added to the card.
      properties:
        carrier:
          $ref: "#/components/schemas/carrier"
        images:
          $ref: "#/components/schemas/images"
        perso_type:
          $ref: "#/components/schemas/cardPersonalizationPersoType"
        text:
          $ref: "#/components/schemas/text"
      required:
        - text
      type: object
    card_product_config:
      description: |-
        Defines the characteristics of the card product.
        Configurations are conditionally required based on program setup.

        For more information, contact your Marqeta representative.
      properties:
        card_life_cycle:
          $ref: "#/components/schemas/card_life_cycle"
        clearing_and_settlement:
          $ref: "#/components/schemas/clearing_and_settlement"
        digital_wallet_tokenization:
          $ref: "#/components/schemas/digital_wallet_tokenization"
        fulfillment:
          $ref: "#/components/schemas/card_product_fulfillment"
        jit_funding:
          $ref: "#/components/schemas/jit_funding"
        poi:
          $ref: "#/components/schemas/poi"
        selective_auth:
          $ref: "#/components/schemas/selective_auth"
        special:
          $ref: "#/components/schemas/special"
        transaction_controls:
          $ref: "#/components/schemas/transaction_controls"
      type: object
    card_product_fulfillment:
      description: Determines physical characteristics of a card, along with its bulk
        shipment information.
      properties:
        all_zero_card_security_code:
          default: false
          description: If `true`, an all zero code (000) is allowed as a valid value in an
            authorization request.
          type: boolean
        allow_card_creation:
          default: true
          description: >-
            Controls the ability to create cards from this card product; `true`
            allows and `false` disallows the creation of cards.


            *NOTE:* The card product's `active` field has no effect on card
            creation or the behavior of this field.
          type: boolean
        bin_prefix:
          description: The prefix of the bank identification number.
          type: string
        bulk_ship:
          default: false
          description: Enables bulk ordering of cards of this card product type using the
            `/bulkissuances` endpoint.
          type: boolean
        card_personalization:
          $ref: "#/components/schemas/card_personalization"
        enable_offline_pin:
          default: false
          description: Enables offline PIN verification for EMV ("chip-and-PIN") card
            payments.
          type: boolean
        fulfillment_provider:
          $ref: "#/components/schemas/cardProductFulfillmentFulfillmentProvider"
        package_id:
          default: "0"
          description: Card fulfillment provider's package ID.
          maxLength: 50
          minLength: 1
          type: string
        pan_length:
          default: "16"
          description: Specifies the length of the primary account number (PAN).
          type: string
        payment_instrument:
          $ref: "#/components/schemas/cardProductFulfillmentPaymentInstrument"
        shipping:
          $ref: "#/components/schemas/shipping"
        uppercase_name_lines:
          default: true
          description: >-
            A value of `true` sets the text in the
            `fulfillment.card_personalization.text.name_line_1` and
            `name_line_2` fields to all uppercase letters.

            A value of `false` leaves the text in its original state.
          type: boolean
      required:
        - card_personalization
      type: object
    card_product_request:
      properties:
        active:
          default: false
          description: >-
            Indicates whether the card product is active.


            *NOTE:* This field has no effect on the ability to create cards from
            this card product.

            Use the `config.fulfillment.allow_card_creation` field to
            allow/disallow card creation.
          type: boolean
        config:
          $ref: "#/components/schemas/card_product_config"
        end_date:
          description: The end date of the range over which the card product can be active.
          format: date
          type: string
        name:
          description: |-
            The name of the card product.
            We recommend using a unique string.
          maxLength: 40
          minLength: 1
          type: string
        start_date:
          description: >-
            The date when the card product becomes active.

            If the start date has passed and the card is set to `active =
            false`, then the card will not be activated.
          format: date
          type: string
        token:
          description: >-
            The unique identifier of the card product.


            If you do not include a token, the system will generate one
            automatically.

            This token is required in other API calls, so we recommend that
            rather than let the system generate one, you use a simple string
            that is easy to remember.

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - name
        - start_date
      type: object
    card_product_response:
      properties:
        active:
          default: false
          description: Indicates whether the card product is active.
          type: boolean
        config:
          $ref: "#/components/schemas/card_product_config"
        created_time:
          description: |-
            The date and time when the resource was created, in UTC.
            `2021-10-26T20:03:10Z`, for example.
          format: date-time
          type: string
        end_date:
          description: The end date of the range over which the card product can be active.
          format: date
          type: string
        last_modified_time:
          description: |-
            The date and time when the resource was last updated, in UTC.
            `2021-10-26T20:03:15Z`, for example.
          format: date-time
          type: string
        name:
          description: The name of the card product.
          maxLength: 40
          minLength: 1
          type: string
        start_date:
          description: The date when the card product becomes active.
          format: date
          type: string
        token:
          description: The unique identifier of the card product.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - created_time
        - last_modified_time
        - name
        - start_date
      type: object
    card_product_update_model:
      properties:
        active:
          default: false
          description: >-
            Indicates whether the card product is active.


            *NOTE:* This field has no effect on the ability to create cards from
            this card product.

            Use the `config.fulfillment.allow_card_creation` field to
            allow/disallow card creation.
          type: boolean
        config:
          $ref: "#/components/schemas/card_product_config"
        end_date:
          description: The end date of the range over which the card product can be active.
          format: date
          type: string
        name:
          description: |-
            The name of the card product.
            We recommend using a unique string.
          maxLength: 40
          minLength: 0
          type: string
        start_date:
          description: >-
            The date the card product becomes active.

            If the start date has passed and the card is set to `active =
            false`, then the card will not be activated.
          format: date
          type: string
      type: object
    card_request:
      properties:
        activation_actions:
          $ref: "#/components/schemas/activation_actions"
        bulk_issuance_token:
          description: |-
            Associates the card with the specified bulk card order.
            This field cannot be updated.
          type: string
        card_product_token:
          description: The unique identifier of the card product.
          maxLength: 36
          minLength: 1
          type: string
        expedite:
          default: false
          description: >-
            Set to `true` to request expedited processing of the card by your
            card fulfillment provider.


            This expedited service is available for cards fulfilled by
            link:http://perfectplastic.com/[Perfect Plastic Printing,
            window="_blank"], link:http://www.idemia.com[IDEMIA,
            window="_blank"], and link:https://www.arroweye.com/[Arroweye
            Solutions, window="_blank"].


            *NOTE:* Contact your Marqeta representative for information
            regarding the cost of expedited service.
          type: boolean
        expiration_offset:
          $ref: "#/components/schemas/expiration_offset"
        fulfillment:
          $ref: "#/components/schemas/fulfillment"
        metadata:
          additionalProperties:
            type: string
          description: Associates customer-provided metadata with the card.
          type: object
        new_pan_from_card_token:
          description: >-
            Reissues the specified card (known as the "source" card) with a new
            primary account number (PAN).


            This field reissues a card with a new PAN from the specified source
            card.

            The source card is automatically terminated when the card is
            reissued with the new PAN.

            Use this field when reissuing a lost or stolen card.
          maxLength: 36
          minLength: 0
          type: string
        reissue_pan_from_card_token:
          description: >-
            Reissues the specified card (known as the "source" card).


            This field reissues a card by copying the PAN and PIN from the
            specified source card to the newly created card.

            The reissued card has the same PAN and PIN as the source card but a
            new expiration date and CVV2 number.


            *NOTE:* By default, the source card is automatically terminated when
            the reissued card is activated.

            However, if your program is configured for multiple active cards,
            you can prevent the source card from being automatically terminated
            by setting the `activation_actions.terminate_reissued_source_card`
            field to `false`.
          maxLength: 36
          minLength: 0
          type: string
        token:
          description: >-
            The unique identifier of the card.


            If you do not include a token, the system will generate one
            automatically.

            Other API calls will require this token, so we recommend creating a
            token that is easy to remember rather than letting the system
            generate one.

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        translate_pin_from_card_token:
          description: >-
            Copies the PIN from the specified card to the newly created card.


            Both cards must belong to the same user.

            Populating this field will raise an error if
            `reissue_pan_from_card_token` is also set.
          maxLength: 36
          minLength: 0
          type: string
        user_token:
          description: The unique identifier of the authorized user of the card.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - card_product_token
        - user_token
      type: object
    card_response:
      description: Contains information about the card used in the transaction.
      properties:
        activation_actions:
          $ref: "#/components/schemas/activation_actions"
        barcode:
          description: The barcode printed on the card, expressed as numerals.
          type: string
        bulk_issuance_token:
          description: The unique identifier of the bulk card order.
          type: string
        card_product_token:
          description: Unique identifier of the card product.
          type: string
        chip_cvv_number:
          description: Three-digit card verification value (CVV2) included on the back of
            the card.
          type: string
        contactless_exemption_counter:
          description: >-
            A running count of contactless transactions.

            You can limit the number of contactless transactions that can be
            performed without issuing a strong customer authentication (SCA)
            challenge at the card product level.


            For more information about strong customer authentication, see
            <</core-api/card-products, Card Products>>.
          format: int32
          type: integer
        contactless_exemption_total_amount:
          description: >-
            A running total of funds spent in contactless transactions.

            You can limit the total amount that can be spent in contactless
            transactions without issuing a strong customer authentication (SCA)
            challenge at the card product level.


            For more information about strong customer authentication, see
            <</core-api/card-products, Card Products>>.
          type: number
        created_time:
          description: Date and time when the card was created.
          format: date-time
          type: string
        cvv_number:
          description: Three-digit card verification value (CVV2) of the chip, included on
            the back of the card.
          type: string
        expedite:
          default: false
          description: Whether to expedite the card fulfillment order.
          type: boolean
        expiration:
          description: Month and year when the card expires.
          type: string
        expiration_time:
          description: Date and time when the card expires.
          format: date-time
          type: string
        fulfillment:
          $ref: "#/components/schemas/CardFulfillmentResponse"
        fulfillment_status:
          $ref: "#/components/schemas/cardResponseFulfillmentStatus"
        instrument_type:
          $ref: "#/components/schemas/cardResponseInstrumentType"
        last_four:
          description: Last four digits of the card PAN.
          type: string
        last_modified_time:
          description: Date and time when the card was last modified.
          format: date-time
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Associates customer-provided metadata with the card.
          type: object
        new_pan_from_card_token:
          type: string
        pan:
          description: Full primary account number (PAN) of the card.
          type: string
        pin_is_set:
          default: false
          description: Specifies if a PIN was set.
          type: boolean
        reissue_pan_from_card_token:
          description: >-
            Reissues the specified card (known as the "source" card).


            This field reissues a card by copying the PAN and PIN from the
            specified source card to the newly created card.

            The reissued card has the same PAN and PIN as the source card, but a
            new expiration date and CVV2 number.


            *NOTE:* By default, the source card is automatically terminated.

            However, if your program is configured for multiple active cards,
            you can prevent the source card from being automatically terminated
            by setting the `activation_actions.terminate_reissued_source_card`
            field to `false`.
          type: string
        state:
          $ref: "#/components/schemas/cardResponseState"
        state_reason:
          description: Reason for the state of the card.
          type: string
        token:
          description: Unique identifier of the card.
          type: string
        translate_pin_from_card_token:
          description: >-
            Token of the source card from which to transfer the PIN.


            Returned if the card is a reissue or replacement that keeps the
            source card's PIN.
          type: string
        user_token:
          description: Unique identifier of the cardholder.
          type: string
      required:
        - barcode
        - card_product_token
        - created_time
        - expiration
        - expiration_time
        - fulfillment_status
        - last_four
        - last_modified_time
        - pan
        - pin_is_set
        - state
        - state_reason
        - token
        - user_token
      type: object
    card_security_code_verification:
      description: Contains information about a verification check performed on the
        card's security code.
      properties:
        response:
          $ref: "#/components/schemas/response"
        type:
          $ref: "#/components/schemas/cardSecurityCodeVerificationType"
      required:
        - response
        - type
      type: object
    card_swap_hash:
      properties:
        new_card_token:
          maxLength: 36
          minLength: 1
          type: string
        previous_card_token:
          maxLength: 36
          minLength: 1
          type: string
      required:
        - new_card_token
        - previous_card_token
      type: object
    card_transition_request:
      properties:
        card_token:
          description: Identifies the card whose state will transition.
          maxLength: 36
          minLength: 1
          type: string
        channel:
          $ref: "#/components/schemas/cardTransitionRequestChannel"
        reason:
          description: Additional information about the state change.
          maxLength: 255
          minLength: 0
          type: string
        reason_code:
          $ref: "#/components/schemas/cardTransitionRequestReasonCode"
        state:
          $ref: "#/components/schemas/cardTransitionRequestState"
        sync_state_with_dwts:
          description: >-
            When true, eligible digital wallet tokens will update with a card
            transition. In other words, their state will reflect the card's
            state.


            When omitted or false, eligible digital wallet tokens will not
            update with a card transition. In other words, their state is
            independent from the card's state.


            Eligible digital wallet tokens are ones associated with the card in
            the card transition request and have a valid starting state for the
            transition. In other words, if the card transition request is for
            SUSPENDED, only ACTIVE tokens will be eligible.
          readOnly: true
          type: boolean
        token:
          description: >-
            The unique identifier of the card transition.


            If you do not include a token, the system will generate one
            automatically.

            This token is referenced in other API calls, so we recommend that
            you define a simple string that is easy to remember.

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        validations:
          $ref: "#/components/schemas/ValidationsRequest"
      required:
        - card_token
        - channel
        - state
      type: object
    card_transition_response:
      properties:
        barcode:
          description: The barcode printed on the card, expressed as numerals.
          type: string
        bulk_issuance_token:
          description: The unique identifier of the bulk card order.
          type: string
        card:
          $ref: "#/components/schemas/card_metadata"
        card_product_token:
          description: The unique identifier of the card product.
          maxLength: 36
          minLength: 0
          type: string
        card_token:
          description: The unique identifier of the card.
          maxLength: 36
          minLength: 1
          type: string
        channel:
          $ref: "#/components/schemas/cardTransitionResponseChannel"
        created_time:
          description: |-
            The date and time when the resource was created, in UTC.
            `2021-10-26T20:03:05Z`, for example.
          format: date-time
          type: string
        expedite:
          default: false
          description: A value of `true` indicates that you requested expedited processing
            of the card from your card fulfillment provider.
          type: boolean
        expiration:
          description: The expiration date in `MMyy` format.
          type: string
        expiration_time:
          description: The expiration date and time in UTC format.
          type: string
        fulfillment:
          $ref: "#/components/schemas/fulfillment"
        fulfillment_status:
          $ref: "#/components/schemas/cardTransitionResponseFulfillmentStatus"
        last_four:
          description: The last four digits of the card PAN.
          type: string
        new_pan_from_card_token:
          description: Reissues the specified card (known as the "source" card) with a new
            primary account number (PAN).
          type: string
        pan:
          description: The primary account number (PAN) of the card.
          type: string
        pin_is_set:
          default: false
          description: Specifies if the personal identification number (PIN) has been set
            for the card.
          type: boolean
        reason:
          description: Additional information about the state change.
          maxLength: 255
          minLength: 0
          type: string
        reason_code:
          $ref: "#/components/schemas/cardTransitionResponseReasonCode"
        reissue_pan_from_card_token:
          description: Reissues the specified card (known as the "source" card).
          type: string
        state:
          $ref: "#/components/schemas/cardTransitionResponseState"
        token:
          description: The unique identifier of the card transition.
          maxLength: 36
          minLength: 1
          type: string
        type:
          $ref: "#/components/schemas/cardTransitionResponseType"
        user:
          $ref: "#/components/schemas/cardholder_metadata"
        user_token:
          description: The unique identifier of the cardholder.
          maxLength: 36
          minLength: 1
          type: string
        validations:
          $ref: "#/components/schemas/ValidationsResponse"
      required:
        - barcode
        - card_product_token
        - card_token
        - channel
        - expiration
        - expiration_time
        - fulfillment_status
        - last_four
        - pan
        - pin_is_set
        - state
        - token
        - type
        - user_token
      type: object
    card_update_request:
      properties:
        expedite:
          default: false
          description: >-
            Set to `true` to request expedited processing of the card by your
            card fulfillment provider.


            This expedited service is available for cards fulfilled by
            link:http://perfectplastic.com/[Perfect Plastic Printing,
            window="_blank"], link:http://www.idemia.com[IDEMIA,
            window="_blank"], and link:https://www.arroweye.com/[Arroweye
            Solutions, window="_blank"].


            *NOTE:* Contact your Marqeta representative for information
            regarding the cost of expedited service.
          type: boolean
        fulfillment:
          $ref: "#/components/schemas/fulfillment"
        metadata:
          additionalProperties:
            type: string
          description: Associates customer-provided metadata with the card.
          type: object
        token:
          description: The unique identifier of the card you want to update.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: Specifies the user you want to associate with the card.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - token
      type: object
    cardholder_authentication_data:
      description: >-
        Contains 3-D Secure verification data:


        * `electronic_commerce_indicator` – The level of verification performed.

        * `verification_result` – The result of the verification.

        * `verification_value_created_by` – The transaction participant who
        determined the verification result.

        * `three_ds_message_version` – The 3D Secure message version used for
        authentication.

        * `authentication_method` – The 3D Secure authentication method.

        * `authentication_status` – The 3D Secure authentication status.

        * `acquirer_exemption` – Indicates a 3D Secure authentication exemption
        from the acquirer.

        * `issuer_exemption` – Indicates a 3D Secure authentication exemption
        from the issuer.
      properties:
        acquirer_exemption:
          $ref: "#/components/schemas/cardholderAuthenticationDataAcquirerExemption"
        authentication_method:
          description: Specifies the 3D Secure authentication method.
          type: string
        authentication_status:
          description: Specifies the status of the 3D Secure authentication.
          type: string
        electronic_commerce_indicator:
          description: The status of the verification attempt, as provided by a
            transaction participant.
          type: string
        issuer_exemption:
          type: string
        three_ds_message_version:
          description: Specifies the 3D Secure message version used for authentication.
          type: string
        verification_result:
          description: The result of the verification attempt, as provided by a
            transaction participant.
          type: string
        verification_value_created_by:
          description: Transaction participant who determined the verification result.
          type: string
      type: object
    cardholder_balance:
      description: Contains GPA balance information for the cardholder.
      properties:
        available_balance:
          description: >-
            Ledger balance minus any authorized transactions that have not yet
            cleared.

            Also known as the cardholder's purchasing power.

            When using JIT Funding, this balance is usually equal to $0.00.
          type: number
        balances:
          additionalProperties:
            $ref: "#/components/schemas/cardholder_balance"
          description: Contains GPA balance information, organized by currency code.
          type: object
        cached_balance:
          description: Not currently in use.
          type: number
        credit_balance:
          description: Not currently in use.
          type: number
        currency_code:
          description: Currency of the funds used in the transaction.
          type: string
        impacted_amount:
          description: Balance change based on the amount of the transaction.
          type: number
        last_updated_time:
          description: |-
            The date and time when the resource was last updated, in UTC.
            `2021-10-26T20:03:05Z`, for example.
          format: date-time
          type: string
        ledger_balance:
          description: >-
            When using standard funding: The funds that are available to spend
            immediately, including funds from any authorized transactions that
            have not yet cleared.


            When using Just-in-Time (JIT) Funding: Authorized funds that are
            currently on hold, but not yet cleared.
          type: number
        pending_credits:
          description: ACH loads that have been accepted, but for which the funding time
            has not yet elapsed.
          type: number
      required:
        - available_balance
        - balances
        - cached_balance
        - credit_balance
        - currency_code
        - last_updated_time
        - ledger_balance
        - pending_credits
      type: object
    cardholder_balances:
      description: |-
        Returns general purpose account (GPA) balances for a user or business. 
        This object includes a link to balances of related user GPAs.
      properties:
        gpa:
          $ref: "#/components/schemas/cardholder_balance"
        links:
          $ref: "#/components/schemas/cardholderBalancesLinks"
      required:
        - gpa
        - links
      type: object
    cardholder_metadata:
      description: Contains customer-provided information about the cardholder that
        performed the transaction.
      properties:
        metadata:
          additionalProperties:
            type: string
          description: Associates customer-provided metadata with the cardholder.
          type: object
      type: object
    cardholder_msa_balance:
      description: This object is deprecated, do not use.
      properties:
        available_balance:
          type: number
        balances:
          additionalProperties:
            $ref: "#/components/schemas/cardholder_balance"
          type: object
        cached_balance:
          type: number
        campaign_token:
          type: string
        credit_balance:
          type: number
        currency_code:
          type: string
        impacted_amount:
          type: number
        last_updated_time:
          format: date-time
          type: string
        ledger_balance:
          type: number
        name:
          type: string
        pending_credits:
          type: number
      required:
        - available_balance
        - balances
        - cached_balance
        - credit_balance
        - currency_code
        - last_updated_time
        - ledger_balance
        - name
        - pending_credits
      type: object
    carrier:
      description: Contains attributes of the card carrier.
      properties:
        logo_file:
          description: Image to display on the card carrier.
          type: string
        logo_thumbnail_file:
          description: Specifies a thumbnail-sized rendering of the image specified in the
            `logo_file` field.
          type: string
        message_file:
          description: Specifies a text file containing a custom message to print on the
            card carrier.
          type: string
        message_line:
          description: Specifies a custom message that appears on the card carrier.
          type: string
        template_id:
          description: Card carrier template to use.
          type: string
      type: object
    chargeback_response:
      description: Contains the chargeback object associated with this transaction if
        a chargeback has been initiated.
      properties:
        amount:
          description: Amount of the chargeback.
          exclusiveMinimum: false
          minimum: 0.01
          type: number
        channel:
          $ref: "#/components/schemas/chargebackResponseChannel"
        created_time:
          description: >-
            Date and time when the chargeback was created.

            Not returned for transactions when the associated chargeback is in
            the `INITIATED` state.
          format: date-time
          type: string
        credit_user:
          default: false
          description: Whether to credit the user for the chargeback amount.
          type: boolean
        last_modified_time:
          description: >-
            Date and time when the chargeback was last modified.

            Not returned for transactions when the associated chargeback is in
            the `INITIATED` state.
          format: date-time
          type: string
        memo:
          description: Additional comments about the chargeback.
          maxLength: 1024
          minLength: 1
          type: string
        network:
          $ref: "#/components/schemas/chargebackResponseNetwork"
        network_case_id:
          description: Network-assigned identifier of the chargeback.
          maxLength: 50
          minLength: 0
          type: string
        reason_code:
          description: Identifies the standardized reason for the chargeback.
          type: string
        reason_description:
          $ref: "#/components/schemas/chargebackResponseReasonDescription"
        state:
          $ref: "#/components/schemas/chargebackResponseState"
        token:
          description: Unique identifier of the chargeback.
          maxLength: 36
          minLength: 1
          type: string
        transaction_token:
          description: Unique identifier of the transaction being charged back.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - amount
        - channel
        - created_time
        - credit_user
        - last_modified_time
        - network
        - state
        - token
        - transaction_token
      type: object
    clearing_and_settlement:
      description: Specifies the destination for overdraft funds.
      properties:
        overdraft_destination:
          $ref: "#/components/schemas/clearingAndSettlementOverdraftDestination"
      type: object
    client_access_token_request:
      properties:
        application_token:
          description: The unique identifier of the `application` object.
          maxLength: 255
          minLength: 1
          type: string
        card_token:
          description: The unique identifier of the card whose sensitive information you
            want to display.
          maxLength: 255
          minLength: 1
          type: string
      required:
        - card_token
      type: object
    client_access_token_response:
      properties:
        application:
          $ref: "#/components/schemas/Application"
        card_token:
          description: The unique identifier of the card whose sensitive information you
            want to display.
          type: string
        created:
          description: The date and time that the client access token was created, in UTC.
          format: date-time
          type: string
        expires:
          description: The date and time that the client access token expires, in UTC.
          format: date-time
          type: string
        token:
          description: Value of the client access token to redeem when displaying
            sensitive card data.
          type: string
      required:
        - created
        - expires
      type: object
    commando_mode_enables:
      description: Defines program behavior when Commando Mode is enabled.
      properties:
        auth_controls:
          $ref: "#/components/schemas/commandoModeEnablesAuthControls"
        ignore_card_suspended_state:
          default: false
          description: If `true`, transactions conducted while in Commando Mode proceed
            even when the card is suspended; if `false`, transactions conducted
            while Commando Mode is enabled are declined if the card is
            suspended.
          type: boolean
        program_funding_source:
          description: The unique identifier of the program funding source that
            substitutes for the program gateway funding source upon Commando
            Mode enablement.
          type: string
        use_cache_balance:
          default: false
          description: This field not in use.
          type: boolean
        velocity_controls:
          $ref: "#/components/schemas/commandoModeEnablesVelocityControls"
      required:
        - program_funding_source
      type: object
    commando_mode_nested_transition:
      description: Describes the current state object of the Commando Mode control set.
      properties:
        channel:
          $ref: "#/components/schemas/commandoModeNestedTransitionChannel"
        commando_enabled:
          default: false
          description: >-
            Indicates whether Commando Mode is enabled.


            * If `commando_enabled` is `true` and `COMMANDO_MANUAL` is
            configured, all transactions are processed via Commando Mode.

            * If `commando_enabled` is `true` and `COMMANDO_AUTO` is configured,
            Commando Mode is ready to intervene only when a transaction times
            out or encounters an error.   
          type: boolean
        reason:
          description: Describes the reason why the current state of the Commando Mode
            control set was last changed.
          type: string
        username:
          description: Identifies the user who last changed the Commando Mode control
            set's state.
          type: string
      required:
        - channel
        - commando_enabled
      type: object
    commando_mode_response:
      properties:
        commando_mode_enables:
          $ref: "#/components/schemas/commando_mode_enables"
        created_time:
          description: The date and time when the resource was created, in UTC.
          format: date-time
          type: string
        current_state:
          $ref: "#/components/schemas/commando_mode_nested_transition"
        last_modified_time:
          description: The date and time when the resource was last updated, in UTC.
          format: date-time
          type: string
        program_gateway_funding_source_token:
          description: The unique identifier of the associated program gateway funding
            source.
          type: string
        real_time_standin_criteria:
          $ref: "#/components/schemas/real_time_standin_criteria"
        token:
          description: The unique identifier of the Commando Mode control set.
          type: string
      required:
        - created_time
        - last_modified_time
      type: object
    commando_mode_transition_response:
      properties:
        commando_mode_token:
          description: The unique identifier of the Commando Mode control set.
          type: string
        created_time:
          description: The date and time when the resource was created, in UTC.
          format: date-time
          type: string
        name:
          description: Identifies the user who changed the Commando Mode control set's
            state.
          type: string
        token:
          description: The unique identifier of the Command Mode control set transition
            object.
          type: string
        transition:
          $ref: "#/components/schemas/commando_mode_nested_transition"
        type:
          description: Specifies the type of event that triggered the Commando Mode
            transition, such as a `connection_error` or `response_timeout`.
          type: string
      required:
        - created_time
      type: object
    config:
      description: "Allows for configuration options for this group, including control
        over the expiration of authorizations and automatic increases to the
        authorization amount. "
      properties:
        authorization_controls:
          $ref: "#/components/schemas/authorization_controls"
      type: object
    control_token_request:
      properties:
        card_token:
          description: The unique identifier of the card for which you want to generate a
            control token.
          maxLength: 36
          minLength: 1
          type: string
        controltoken_type:
          $ref: "#/components/schemas/controlTokenRequestControltokenType"
      required:
        - card_token
      type: object
    control_token_response:
      properties:
        control_token:
          description: >-
            The unique value generated as a result of issuing a `POST` request
            to the `/pins/controltoken` endpoint. 

            This value cannot be updated.
          type: string
      required:
        - control_token
      type: object
    currency_conversion:
      description: Contains information about currency conversion.
      properties:
        network:
          $ref: "#/components/schemas/network"
      type: object
    customer_due_diligence_request:
      properties:
        answer:
          type: string
        question:
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
      required:
        - answer
        - question
      type: object
    customer_due_diligence_response:
      properties:
        account_token:
          type: string
        answer:
          type: string
        bank:
          type: string
        question:
          type: string
        token:
          type: string
        type:
          type: string
      required:
        - account_token
        - answer
        - bank
        - question
        - token
        - type
      type: object
    customer_due_diligence_update_response:
      properties:
        answer:
          type: string
      type: object
    deposit_account:
      properties:
        account_number:
          type: string
        allow_immediate_credit:
          default: false
          type: boolean
        business_token:
          type: string
        routing_number:
          type: string
        token:
          type: string
        user_token:
          type: string
      required:
        - account_number
        - routing_number
        - token
      type: object
    deposit_account_update_request:
      properties:
        allow_immediate_credit:
          default: false
          type: boolean
      type: object
    device:
      description: Contains information related to the device being provisioned.
      properties:
        device_id:
          description: Identity number of the device.
          type: string
        ip_address:
          description: Device's IP address.
          type: string
        language_code:
          description: Language the device is configured to use.
          type: string
        location:
          description: Geographic coordinates of the device.
          type: string
        name:
          description: Name of the device.
          type: string
        phone_number:
          description: Device's telephone number.
          type: string
        token:
          description: Unique identifier of the device object.
          type: string
        type:
          description: Type of device being provisioned.
          type: string
      type: object
    digital_wallet_android_pay_provision_request:
      properties:
        card_token:
          description: Identifies the card to use for the provision request.
          maxLength: 36
          minLength: 1
          type: string
        device_id:
          description: The unique identifier of the user's Android device.
          maxLength: 24
          minLength: 1
          type: string
        device_type:
          $ref: "#/components/schemas/digitalWalletAndroidPayProvisionRequestDeviceType"
        provisioning_app_version:
          description: Version of the application making the provisioning request (used
            for debugging and fraud).
          maxLength: 50
          minLength: 1
          type: string
        wallet_account_id:
          description: The user's Google wallet account ID.
          maxLength: 50
          minLength: 1
          type: string
      required:
        - card_token
        - device_id
        - device_type
        - provisioning_app_version
        - wallet_account_id
      type: object
    digital_wallet_android_pay_provision_response:
      properties:
        card_token:
          type: string
        created_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        last_modified_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        push_tokenize_request_data:
          $ref: "#/components/schemas/push_tokenize_request_data_androidpay"
      required:
        - card_token
        - created_time
        - last_modified_time
        - push_tokenize_request_data
      type: object
    digital_wallet_apple_pay_provision_request:
      properties:
        card_token:
          description: Identifies the card to use for the provision request.
          maxLength: 36
          minLength: 1
          type: string
        certificates:
          $ref: "#/components/schemas/digitalWalletApplePayProvisionRequestCertificates"
        device_type:
          $ref: "#/components/schemas/digitalWalletApplePayProvisionRequestDeviceType"
        nonce:
          description: One-time-use nonce provided by Apple for security purposes.
          type: string
        nonce_signature:
          description: Apple-provided signature to the nonce.
          type: string
        provisioning_app_version:
          description: Version of the application making the provisioning request (used
            for debugging and fraud).
          maxLength: 50
          minLength: 1
          type: string
      required:
        - card_token
        - certificates
        - device_type
        - nonce
        - nonce_signature
        - provisioning_app_version
      type: object
    digital_wallet_apple_pay_provision_response:
      properties:
        activation_data:
          type: string
        card_token:
          type: string
        created_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        encrypted_pass_data:
          type: string
        ephemeral_public_key:
          type: string
        last_modified_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
      required:
        - activation_data
        - card_token
        - created_time
        - encrypted_pass_data
        - ephemeral_public_key
        - last_modified_time
      type: object
    digital_wallet_samsung_pay_provision_request:
      properties:
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        device_id:
          maxLength: 24
          minLength: 1
          type: string
        device_type:
          $ref: "#/components/schemas/digitalWalletSamsungPayProvisionRequestDeviceType"
        provisioning_app_version:
          maxLength: 50
          minLength: 1
          type: string
        wallet_user_id:
          maxLength: 50
          minLength: 1
          type: string
      required:
        - card_token
        - device_id
        - device_type
        - provisioning_app_version
        - wallet_user_id
      type: object
    digital_wallet_samsung_pay_provision_response:
      properties:
        card_token:
          type: string
        created_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        last_modified_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        push_tokenize_request_data:
          $ref: "#/components/schemas/push_tokenize_request_data_samsungpay"
      required:
        - card_token
        - created_time
        - last_modified_time
        - push_tokenize_request_data
      type: object
    digital_wallet_token:
      description: >-
        Contains information about the digital wallet that funded the
        transaction.


        Returned for all transactions funded by a digital wallet or related to
        digital wallet token provisioning.


        For more on digital wallets, see the
        <</core-api/digital-wallets-management, Digital Wallets Management>> API
        reference and <</developer-guides/digital-wallets-and-tokenization,
        Digital Wallets and Tokenization>> developer guide.
      properties:
        address_verification:
          $ref: "#/components/schemas/address_verification"
        card_token:
          description: Unique identifier of the card.
          type: string
        created_time:
          description: Date and time when the digital wallet token object was created.
          format: date-time
          type: string
        device:
          $ref: "#/components/schemas/device"
        fulfillment_status:
          description: >-
            Digital wallet token's provisioning status.


            For fulfillment status descriptions, see
            <</core-api/digital-wallets-management#_create_digital_wallet_token_transition,
            Create Digital Wallet Token Transition>>.
          type: string
        issuer_eligibility_decision:
          description: >-
            The Marqeta platform's decision as to whether the digital wallet
            token should be provisioned.


            * *0000* – The token should be provisioned.


            * *token.activation.verification.required* – Provisioning is
            pending; further action is required for completion.


            For all other values, check the value of the `fulfillment_status`
            field to definitively ascertain the provisioning outcome.


            *NOTE:* The value `invalid.cid` indicates an invalid CVV2 number.
          type: string
        last_modified_time:
          description: Date and time when the digital wallet token object was last modified.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/digital_wallet_token_metadata"
        state:
          description: >-
            State of the digital wallet token.


            For state descriptions, see
            <</developer-guides/managing-the-lifecycle-of-digital-wallet-tokens#_transitioning_token_states,
            Transitioning Token States>>.
          type: string
        state_reason:
          description: Reason why the digital wallet token transitioned to its current
            state.
          type: string
        token:
          description: Unique identifier of the digital wallet token.
          type: string
        token_service_provider:
          $ref: "#/components/schemas/token_service_provider"
        user:
          $ref: "#/components/schemas/user_card_holder_response"
        wallet_provider_profile:
          $ref: "#/components/schemas/wallet_provider_profile"
      type: object
    digital_wallet_token_address_verification:
      properties:
        validate:
          default: true
          description: Set to `true` to enable the address verification system (AVS) for
            provisioning.
          type: boolean
      type: object
    digital_wallet_token_hash:
      properties:
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
      required:
        - token
      type: object
    digital_wallet_token_metadata:
      description: Contains additional information about the digital wallet token.
      properties:
        cardproduct_preferred_notification_language:
          description: >-
            The language specified in the
            `config.transaction_controls.notification_language` field of the
            card product:

            `ces` (Czech), `deu` (German), `eng` (English), `fra` (French),
            `ita` (Italian), `pol` (Polish), `spa` (Spanish), `swe` (Swedish)


            The ISO maintains the
            link:https://www.iso.org/iso-3166-country-codes.html[full list of
            ISO 3166 two- and three-digit numeric country codes,
            window="_blank"].
          type: string
        issuer_product_config_id:
          description: The unique identifier of the product configuration on the Marqeta
            platform.
          type: string
      type: object
    digital_wallet_token_transition_request:
      properties:
        channel:
          $ref: "#/components/schemas/digitalWalletTokenTransitionRequestChannel"
        digital_wallet_token:
          $ref: "#/components/schemas/digital_wallet_token_hash"
        override_tsp_error:
          default: false
          type: boolean
        reason:
          description: The reason for the transition.
          maxLength: 255
          minLength: 0
          type: string
        reason_code:
          $ref: "#/components/schemas/digitalWalletTokenTransitionRequestReasonCode"
        state:
          $ref: "#/components/schemas/digitalWalletTokenTransitionRequestState"
        token:
          description: >-
            The unique identifier of the digital wallet token transition (not
            the identifier of the digital wallet token itself).


            If you do not include a value for the `token` field, the system will
            generate one automatically.

            This value is necessary for use in other API calls, so we recommend
            that rather than let the system generate one, you use a simple
            string that is easy to remember.

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        token_reference_id:
          type: string
      required:
        - digital_wallet_token
        - state
      type: object
    digital_wallet_token_transition_response:
      properties:
        card_swap:
          $ref: "#/components/schemas/card_swap_hash"
        channel:
          $ref: "#/components/schemas/digitalWalletTokenTransitionResponseChannel"
        created_time:
          format: date-time
          type: string
        digital_wallet_token:
          $ref: "#/components/schemas/digital_wallet_token_hash"
        fulfillment_status:
          $ref: "#/components/schemas/digitalWalletTokenTransitionResponseFulfillmentStat\
            us"
        reason:
          maxLength: 255
          minLength: 0
          type: string
        reason_code:
          $ref: "#/components/schemas/digitalWalletTokenTransitionResponseReasonCode"
        state:
          $ref: "#/components/schemas/digitalWalletTokenTransitionResponseState"
        token:
          maxLength: 36
          minLength: 1
          type: string
        type:
          maxLength: 36
          minLength: 0
          readOnly: true
          type: string
      required:
        - channel
        - digital_wallet_token
        - fulfillment_status
        - state
        - token
        - type
      type: object
    digital_wallet_tokenization:
      description: Controls characteristics related to digital wallets.
      properties:
        card_art_id:
          description: >-
            Specifies the digital wallet card art identifier for the card
            product.

            Digital wallets display the card art after the initial token has
            been provisioned and activated.

            Digital wallet card art is updated for all wallets automatically
            whenever a tokenized card is reissued or replaced.


            * If your card program is Managed by Marqeta, Marqeta populates this
            field on your behalf.

            * If your card program is Powered by Marqeta, you can obtain the
            correct card art identifier directly from Visa or Mastercard.


            If this field is left blank, your card product inherits the card art
            assigned to the account BIN range.
          type: string
        provisioning_controls:
          $ref: "#/components/schemas/provisioning_controls"
      type: object
    digital_wallet_x_pay_provision_request:
      properties:
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        device_id:
          maxLength: 24
          minLength: 1
          type: string
        device_type:
          $ref: "#/components/schemas/digitalWalletXPayProvisionRequestDeviceType"
        provisioning_app_version:
          maxLength: 50
          minLength: 1
          type: string
        token_requestor_id:
          maxLength: 11
          minLength: 0
          type: string
        wallet_account_id:
          maxLength: 50
          minLength: 1
          type: string
      required:
        - card_token
        - device_id
        - device_type
        - provisioning_app_version
        - token_requestor_id
        - wallet_account_id
      type: object
    digital_wallet_x_pay_provision_response:
      properties:
        card_token:
          type: string
        created_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        last_modified_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        push_tokenize_request_data:
          $ref: "#/components/schemas/push_tokenize_request_data_xpay"
      required:
        - card_token
        - created_time
        - last_modified_time
        - push_tokenize_request_data
      type: object
    direct_deposit_account_request:
      properties:
        allow_immediate_credit:
          default: false
          type: boolean
        business_token:
          description: Required if 'user_token' is null
          maxLength: 36
          minLength: 1
          type: string
        customer_due_diligence:
          $ref: "#/components/schemas/directDepositAccountRequestCustomerDueDiligence"
        token:
          type: string
        type:
          $ref: "#/components/schemas/directDepositAccountRequestType"
        user_token:
          description: Required if 'business_token' is null
          maxLength: 36
          minLength: 1
          type: string
      type: object
    direct_deposit_account_response:
      properties:
        account_number:
          maxLength: 17
          minLength: 13
          type: string
        allow_immediate_credit:
          default: false
          type: boolean
        business_token:
          maxLength: 36
          minLength: 36
          type: string
        created_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        last_modified_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        routing_number:
          maxLength: 9
          minLength: 9
          type: string
        state:
          maxLength: 10
          minLength: 6
          type: string
        token:
          maxLength: 36
          minLength: 36
          type: string
        type:
          maxLength: 36
          minLength: 7
          type: string
        user_token:
          maxLength: 36
          minLength: 36
          type: string
      required:
        - account_number
        - allow_immediate_credit
        - business_token
        - created_time
        - last_modified_time
        - routing_number
        - state
        - token
        - user_token
      type: object
    direct_deposit_account_transition_request:
      properties:
        account_token:
          maxLength: 36
          minLength: 1
          type: string
        channel:
          $ref: "#/components/schemas/directDepositAccountTransitionRequestChannel"
        reason:
          maxLength: 255
          minLength: 1
          type: string
        state:
          $ref: "#/components/schemas/directDepositAccountTransitionRequestState"
        token:
          type: string
      required:
        - account_token
        - channel
      type: object
    direct_deposit_account_transition_response:
      properties:
        account_token:
          maxLength: 36
          minLength: 36
          type: string
        business_token:
          maxLength: 36
          minLength: 36
          type: string
        channel:
          maxLength: 10
          minLength: 6
          type: string
        created_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        reason:
          maxLength: 255
          minLength: 0
          type: string
        state:
          maxLength: 10
          minLength: 6
          type: string
        token:
          maxLength: 36
          minLength: 36
          type: string
        user_token:
          maxLength: 36
          minLength: 36
          type: string
      required:
        - account_token
        - business_token
        - channel
        - created_time
        - reason
        - state
        - token
        - user_token
      type: object
    echo_ping_request:
      properties:
        payload:
          description: The payload of the ping request.
          type: string
        token:
          description: The unique identifier of the ping request.
          type: string
      type: object
    echo_ping_response:
      properties:
        id:
          type: string
        payload:
          type: string
        success:
          default: false
          type: boolean
      type: object
    error_message_from_web_push_provisioning_request:
      properties:
        error_code:
          example: "400401"
          type: string
        error_message:
          example: "Invalid input(s): invalid user token"
          type: string
      required:
        - error_code
        - error_message
      type: object
    expiration_offset:
      description: >-
        Specifies the length of time after the date of issue for which the cards
        are valid.


        If this field is not specified, the card uses the
        `config.card_life_cycle.expiration_offset` of the bulk card order or
        card product as appropriate.
      properties:
        unit:
          $ref: "#/components/schemas/expirationOffsetUnit"
        value:
          description: >-
            Specifies the number of time units (as defined by the `unit` field
            in this object) that this card is valid.

            In other words, cards expire `value` x `unit` after the date of
            issue.


            This number is rounded as follows:


            * *YEARS* - Rounds up to the last second of the last day of the
            month of expiration.

            For example, if the issue date is 1 Jan 2021 and `value = 1`, the
            cards expire on the last day of Jan 2022.


            * *MONTHS* - Rounds up to the last second of the last day of the
            month of expiration.

            For example, if the issue date is 1 May 2022 and `value = 1`, the
            cards expire on the last day of June 2022.


            * *DAYS* - Rounds up to the last second of the day of expiration.


            * *HOURS*, *MINUTES*, *SECONDS* - No rounding.
          format: int32
          type: integer
      type: object
    expiration_offset_with_minimum:
      description: Specifies the length of time after the date of issue for which
        cards of this card product type are valid.
      properties:
        min_offset:
          $ref: "#/components/schemas/min_offset"
        unit:
          $ref: "#/components/schemas/expirationOffsetWithMinimumUnit"
        value:
          description: >-
            Specifies the number of time units (as defined by the `unit` field
            in this object) that cards of this card product type are valid.

            In other words, cards expire `value` x `unit` after the date of
            issue.


            This number is rounded as follows:


            * *YEARS* – Rounds up to the last second of the last day of the
            month of expiration.

            For example, if the issue date is 1 Jan 2021 and `value = 1`, the
            cards expire on the last day of Jan 2022.


            * *MONTHS* – Rounds up to the last second of the last day of the
            month of expiration.

            For example, if the issue date is 1 May 2022 and `value = 1`, the
            cards expire on the last day of June 2022.


            * *DAYS* – Rounds up to the last second of the day of expiration.


            * *HOURS*, *MINUTES*, *SECONDS* – No rounding.
          format: int32
          type: integer
      type: object
    fee:
      description: Contains information about fees related to the transaction.
      properties:
        active:
          default: false
          description: Indicates whether the fee is active.
          type: boolean
        amount:
          description: Amount of the fee.
          type: number
        created_time:
          description: Date and time when the fee was created.
          format: date-time
          type: string
        currency_code:
          description: The three-digit ISO 4217 currency code.
          type: string
        last_modified_time:
          description: Date and time when the fee was last modified.
          format: date-time
          type: string
        name:
          description: Name of the fee.
          type: string
        real_time_assessment:
          $ref: "#/components/schemas/real_time_fee_assessment"
        tags:
          description: Descriptive metadata about the fee.
          type: string
        token:
          description: Unique identifier of the fee.
          type: string
      required:
        - active
        - amount
        - created_time
        - currency_code
        - last_modified_time
        - name
        - token
      type: object
    fee_detail:
      description: Contains information about a fee.
      properties:
        fee:
          $ref: "#/components/schemas/fee"
        memo:
          description: Additional text that describes the fee.
          maxLength: 99
          minLength: 1
          type: string
        tags:
          description: Comma-delimited list of tags describing the fee.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: The unique identifier of the fee.
          maxLength: 36
          minLength: 1
          type: string
        transaction_token:
          description: Unique identifier of the transaction.
          type: string
      required:
        - fee
        - token
        - transaction_token
      type: object
    fee_model:
      description: Contains attributes that define characteristics of one or more fees.
      properties:
        memo:
          description: Memo or note describing the fee.
          maxLength: 99
          minLength: 1
          type: string
        tags:
          description: Comma-delimited list of tags describing the fee.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: Specifies the fee to add.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - token
      type: object
    fee_request:
      properties:
        active:
          default: true
          description: Indicates whether the fee is active.
          type: boolean
        amount:
          description: The amount of the fee.
          type: number
        currency_code:
          description: The three-digit ISO 4217 currency code.
          type: string
        name:
          description: The name of the fee request.
          maxLength: 50
          minLength: 1
          type: string
        real_time_assessment:
          $ref: "#/components/schemas/RealTimeFeeAssessmentRequest"
        tags:
          description: Descriptive metadata about the fee.
          maxLength: 255
          minLength: 1
          type: string
        token:
          description: >-
            The unique identifier of the fee.


            If you do not include a token, the system will generate one
            automatically.

            This token is necessary for use in other API calls, so we recommend
            that rather than let the system generate one, you use a simple
            string that is easy to remember.

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - amount
        - currency_code
        - name
      type: object
    fee_transfer_request:
      properties:
        business_token:
          description: |-
            Specifies the `business` account holder to which the fee applies.

            Pass either `business_token` or `user_token`, not both.
          maxLength: 36
          minLength: 1
          type: string
        fees:
          $ref: "#/components/schemas/feeTransferRequestFees"
        tags:
          description: Metadata about the transfer.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: >-
            The unique identifier of the fee transfer.


            If you do not include a token, the system will generate one
            automatically. 

            This token is necessary for use in other API calls, so we recommend
            that rather than let the system generate one, you use a simple
            string that is easy to remember. 

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            Specifies the `user` account holder to which the fee applies.

            Pass either `user_token` or `business_token`, not both.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - business_token
        - user_token
      type: object
    fee_transfer_response:
      description: Contains information about a fee transfer, including the amount,
        currency code, and user or business token.
      properties:
        business_token:
          description: |-
            The unique identifier of the `business` account holder.
            Required if `user_token` is not specified.
          maxLength: 36
          minLength: 1
          type: string
        created_time:
          description: Date and time when the fee transfer was created.
          format: date-time
          type: string
        fees:
          $ref: "#/components/schemas/feeTransferResponseFees"
        tags:
          description: Customer-defined tags for the fee transfer.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: Unique identifier of the fee transfer.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            The unique identifier of the `user` account holder.
            Required if `business_token` is not specified.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - business_token
        - created_time
        - fees
        - token
        - user_token
      type: object
    fee_update_request:
      properties:
        active:
          default: true
          description: Indicates whether the fee is active.
          type: boolean
        amount:
          description: The amount of the fee.
          type: number
        currency_code:
          description: The three-digit ISO 4217 currency code.
          type: string
        name:
          description: The name of the fee request.
          maxLength: 50
          minLength: 1
          type: string
        real_time_assessment:
          $ref: "#/components/schemas/RealTimeFeeAssessmentRequest"
        tags:
          description: Descriptive metadata about the fee.
          maxLength: 255
          minLength: 1
          type: string
      type: object
    financial_request_model:
      properties:
        amount:
          type: number
        card_acceptor:
          $ref: "#/components/schemas/card_acceptor_model"
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        cash_back_amount:
          type: number
        is_pre_auth:
          default: false
          type: boolean
        mid:
          maxLength: 50
          minLength: 1
          type: string
        pin:
          maxLength: 15
          minLength: 1
          type: string
        transaction_options:
          $ref: "#/components/schemas/transaction_options"
        webhook:
          $ref: "#/components/schemas/webhook"
      required:
        - amount
        - card_acceptor
        - card_token
        - mid
      type: object
    fraud_view:
      description: Contains one or more fraud determinations by the card network that
        apply to either the transaction or the cardholder's account.
      properties:
        issuer_processor:
          $ref: "#/components/schemas/issuer_fraud_view"
        network:
          $ref: "#/components/schemas/network_fraud_view"
        network_account_intelligence_score:
          $ref: "#/components/schemas/network_account_intelligence_score"
      type: object
    fulfillment:
      description: Specifies certain physical characteristics of a card, as well as
        shipment information.
      properties:
        card_fulfillment_reason:
          $ref: "#/components/schemas/fulfillmentCardFulfillmentReason"
        card_personalization:
          $ref: "#/components/schemas/card_personalization"
        shipping:
          $ref: "#/components/schemas/shipping"
      required:
        - card_personalization
      type: object
    fulfillment_address_request:
      description: Specifies a fulfillment shipping or return address.
      properties:
        address1:
          description: Number and street.
          maxLength: 255
          minLength: 0
          type: string
        address2:
          description: Additional address information.
          maxLength: 255
          minLength: 0
          type: string
        city:
          description: City.
          maxLength: 40
          minLength: 0
          type: string
        country:
          description: Country.
          maxLength: 40
          minLength: 0
          type: string
        first_name:
          description: First name.
          maxLength: 40
          minLength: 0
          type: string
        last_name:
          description: Last name.
          maxLength: 40
          minLength: 0
          type: string
        middle_name:
          description: Middle name.
          maxLength: 40
          minLength: 0
          type: string
        phone:
          description: Telephone number.
          maxLength: 20
          minLength: 0
          type: string
        postal_code:
          description: Postal code.
          maxLength: 10
          minLength: 0
          type: string
        state:
          description: State.
          maxLength: 32
          minLength: 0
          type: string
        zip:
          description: United States ZIP code.
          maxLength: 10
          minLength: 0
          type: string
      type: object
    funding:
      description: Contains funding information for the transaction, including the
        funding amount, type, and time.
      properties:
        amount:
          description: Amount of funds unloaded and returned to the funding source.
          type: number
        gateway_log:
          $ref: "#/components/schemas/gateway_log_model"
        source:
          $ref: "#/components/schemas/funding_source_model"
        source_address:
          $ref: "#/components/schemas/CardholderAddressResponse"
      required:
        - source
      type: object
    funding_account_response_model:
      properties:
        account_suffix:
          description: |-
            The account identifier appended to the bank account number.
            This field is returned if it exists in the resource.
          type: string
        account_type:
          description: |-
            The type of account.
            This field is returned if it exists in the resource.
          type: string
        active:
          default: false
          description: |-
            Specifies whether the account is active.
            This field is returned if it exists in the resource.
          type: boolean
        business_token:
          description: |-
            The unique identifier of the `business` account holder.
            This token is returned if a `user_token` is not specified.
          type: string
        created_time:
          description: |-
            The date and time when the resource was created, in UTC.
            `2022-02-26T20:03:05Z`, for example.
          format: date-time
          type: string
        date_sent_for_verification:
          description: >-
            The date and time when the account was sent for verification, in
            UTC.

            `2022-02-26T20:03:05Z`, for example.


            This field is returned if it exists in the resource.
          format: date-time
          type: string
        date_verified:
          description: |-
            The date and time when the account was verified, in UTC.
            `2022-02-26T20:03:05Z`, for example.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        exp_date:
          description: |-
            Payment card expiration date.
            This field is returned if it exists in the resource.
          type: string
        is_default_account:
          default: false
          description: >-
            If there are multiple funding sources, this field specifies which
            source is used by default in funding calls.

            If there is only one funding source, the system ignores this field
            and always uses that source.


            This field is returned if it exists in the resource.
          type: boolean
        last_modified_time:
          description: |-
            The date and time when the resource was last modified, in UTC.
            `2022-02-26T20:03:05Z`, for example.
          format: date-time
          type: string
        link_partner_account_reference_token:
          type: string
        name_on_account:
          description: |-
            The name on the account.
            This field is returned if it exists in the resource.
          type: string
        partner:
          type: string
        token:
          description: |-
            The unique identifier of the funding source.
            This field is returned if it exists in the resource.
          type: string
        type:
          description: The funding source type.
          type: string
        user_token:
          description: |-
            The unique identifier of the `user` account holder.
            This token is returned if a `business_token` is not specified.
          type: string
        verification_notes:
          description: |-
            Free-form text field for holding notes about verification.
            This field is returned only if `verification_override = true`.
          type: string
        verification_override:
          default: false
          description: Allows the ACH funding source to be used regardless of its
            verification status.
          type: boolean
        verification_status:
          description: |-
            The account verification status.
            This field is returned if it exists in the resource.
          type: string
      required:
        - created_time
        - last_modified_time
      type: object
    funding_source_model:
      description: Contains funding source information for the transaction, including
        the funding type and time.
      discriminator:
        mapping:
          bankaccount: "#/components/schemas/bank_account_funding_source_model"
          chargeback: "#/components/schemas/chargeback_funding_source_model"
          directdeposit: "#/components/schemas/direct_deposit_funding_source_model"
          paymentcard: "#/components/schemas/payment_card_funding_source_model"
          program: "#/components/schemas/program_funding_source_model"
          programgateway: "#/components/schemas/program_gateway_funding_source_model"
        propertyName: type
      properties:
        active:
          default: false
          description: Whether the funding source is active.
          type: boolean
        created_time:
          description: Date and time when the funding source was created.
          format: date-time
          type: string
        is_default_account:
          default: false
          description: Whether the GPA order unload's funding source is the default
            funding account.
          type: boolean
        last_modified_time:
          description: Date and time when the funding source was last modified.
          format: date-time
          type: string
        token:
          description: Unique identifier of the funding source.
          type: string
        type:
          description: Funding type of the funding source.
          type: string
      required:
        - active
        - created_time
        - is_default_account
        - last_modified_time
        - token
        - type
      type: object
    gateway_log_model:
      description: Contains information from the gateway in response to a funding request.
      properties:
        duration:
          description: Length of time in milliseconds the gateway took to respond to a
            funding request.
          format: int64
          type: integer
        message:
          description: >-
            Message about the status of the funding request.

            Useful for determining whether it was approved and completed
            successfully, declined by the gateway, or timed out.
          type: string
        order_number:
          description: |-
            Customer order number.
            Same value as `transaction.token`.
          type: string
        response:
          $ref: "#/components/schemas/gateway_response"
        timed_out:
          default: false
          description: Whether the gateway sent a response (`true`) or timed out (`false`).
          type: boolean
        transaction_id:
          description: Customer-defined identifier for the transaction.
          type: string
      required:
        - message
        - order_number
        - transaction_id
      type: object
    gateway_program_custom_header_update_request:
      properties:
        custom_header:
          additionalProperties:
            type: string
          description: >-
            Additional custom information included in the HTTP header. 

            For example, this might contain security information, along with
            Basic Authentication, when making a JIT Funding request. 

            Custom headers also appear in the associated webhook's
            notifications. 
          type: object
      type: object
    gateway_program_funding_source_request:
      properties:
        active:
          description: Indicates whether the program gateway funding source is active.
          type: boolean
        basic_auth_password:
          description: Password for authenticating your environment.
          maxLength: 100
          minLength: 20
          type: string
        basic_auth_username:
          description: Username for authenticating your environment.
          maxLength: 50
          minLength: 1
          type: string
        custom_header:
          additionalProperties:
            type: string
          description: >-
            Additional custom information included in the HTTP header. 

            For example, this might contain security information, along with
            Basic Authentication, when making a JIT Funding request. 

            Custom headers also appear in the associated webhook's
            notifications. 
          type: object
        name:
          description: The name of the program gateway funding source.
          maxLength: 50
          minLength: 1
          type: string
        timeout_millis:
          description: Total timeout in milliseconds for gateway processing.
          format: int64
          maximum: 7000
          minimum: 1000
          type: integer
        token:
          description: >-
            The unique identifier of the program gateway funding source.

            If you do not include a token, the system will generate one
            automatically.

            As this token is necessary for use in other calls, we recommend that
            you define a simple and easy to remember string rather than letting
            the system generate a token for you.

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        url:
          description: The URL of the gateway endpoint hosted in your environment, to
            which `POST` requests are submitted by the Marqeta platform.
          maxLength: 250
          minLength: 0
          type: string
        use_mtls:
          default: false
          description: Specifies whether or not to use mutual transport layer security
            (mTLS) authentication for the funding request.
          type: boolean
      required:
        - basic_auth_password
        - basic_auth_username
        - name
        - url
      type: object
    gateway_program_funding_source_response:
      properties:
        account:
          description: The bank account number.
          type: string
        active:
          description: |-
            Indicates whether the program gateway funding source is active.
            This field is returned if it exists in the resource.
          type: boolean
        basic_auth_password:
          description: Password for authenticating your environment.
          type: string
        basic_auth_username:
          description: Username for authenticating your environment.
          type: string
        created_time:
          description: |-
            The date and time when the resource was created, in UTC.
            `2022-02-26T20:03:05Z`, for example.
          format: date-time
          type: string
        custom_header:
          additionalProperties:
            type: string
          description: Custom headers to be passed along with the request.
          type: object
        last_modified_time:
          description: |-
            The date and time when the resource was last modified, in UTC.
            `2022-02-26T20:03:05Z`, for example.
          format: date-time
          type: string
        name:
          maxLength: 50
          minLength: 1
          type: string
        timeout_millis:
          description: Total timeout in milliseconds for gateway processing.
          format: int64
          type: integer
        token:
          maxLength: 36
          minLength: 1
          type: string
        url:
          description: The URL of the gateway endpoint hosted in your environment, to
            which `POST` requests are submitted by the Marqeta platform.
          type: string
        use_mtls:
          default: false
          description: Specifies whether or not to use mutual transport layer security
            (mTLS) authentication for the funding request.
          type: boolean
        version:
          description: The program gateway funding source object version.
          type: string
      required:
        - account
        - basic_auth_password
        - basic_auth_username
        - created_time
        - custom_header
        - last_modified_time
        - name
        - timeout_millis
        - token
        - url
        - use_mtls
        - version
      type: object
    gateway_program_funding_source_update_request:
      properties:
        active:
          description: Indicates whether the program gateway funding source is active.
          type: boolean
        basic_auth_password:
          description: Password for authenticating your environment.
          maxLength: 100
          minLength: 20
          type: string
        basic_auth_username:
          description: Username for authenticating your environment.
          maxLength: 50
          minLength: 1
          type: string
        custom_header:
          additionalProperties:
            type: string
          description: >-
            Additional custom information included in the HTTP header. 

            For example, this might contain security information, along with
            Basic Authentication, when making a JIT Funding request. 

            Custom headers also appear in the associated webhook's
            notifications. 
          type: object
        name:
          description: The name of the program gateway funding source.
          maxLength: 50
          minLength: 1
          type: string
        timeout_millis:
          description: Total timeout in milliseconds for gateway processing.
          format: int64
          maximum: 7000
          minimum: 1000
          type: integer
        url:
          description: The URL of the gateway endpoint hosted in your environment, to
            which `POST` requests are submitted by the Marqeta platform.
          maxLength: 250
          minLength: 0
          type: string
        use_mtls:
          default: false
          description: Specifies whether or not to use mutual transport layer security
            (mTLS) authentication for the funding request.
          type: boolean
      required:
        - basic_auth_password
        - basic_auth_username
        - url
      type: object
    gateway_response:
      description: Contains information on the gateway's response to a funding request.
      properties:
        code:
          description: Code received from the gateway.
          type: string
        data:
          $ref: "#/components/schemas/jit_program_response"
      required:
        - code
      type: object
    gpa:
      description: |-
        Contains information about the GPA order. 
        See <</core-api/gpa-orders, GPA Orders>> for more information.
      properties:
        reload_amount:
          description: >-
            Available balance on the card after the reload has completed.


            This value must be greater than or equal to the value of
            `trigger_amount`.

            Note that this is not the same as the amount added to the card,
            which will vary from reload to reload.
          exclusiveMinimum: false
          minimum: 0.01
          type: number
        trigger_amount:
          description: |-
            Threshold that determines when the reload happens.

            The reload is triggered when the balance drops below this amount.
          exclusiveMinimum: false
          minimum: 0.01
          type: number
      required:
        - reload_amount
        - trigger_amount
      type: object
    gpa_request:
      properties:
        amount:
          description: The amount to fund.
          type: number
        business_token:
          description: |-
            The unique identifier of the business.

            Pass either a `business` token or a `user` token, not both.

            Send a `GET` request to `/businesses` to retrieve business tokens.
          maxLength: 36
          minLength: 1
          type: string
        currency_code:
          description: The three-digit ISO 4217 currency code.
          type: string
        fees:
          $ref: "#/components/schemas/gpaRequestFees"
        funding_source_address_token:
          description: >-
            Identifies the funding source address to use for this order.

            If your funding source is an ACH account, then a funding source
            address is not required. If your funding source is a payment card,
            you must have at least one funding source address in order to create
            a GPA order.

            Send a `GET` request to `/fundingsources/addresses/user/{token}` to
            retrieve addresses for a specific user.
          maxLength: 36
          minLength: 1
          type: string
        funding_source_token:
          description: >-
            Identifies the funding source to use for this order.


            You don't have to supply a funding source token value in this call
            if you have a default funding source set up (verify the funding
            source's `is_default_account` field).

            If you have only one funding source, then this source is used as the
            default.

            If you have multiple funding sources and none are configured as the
            default, then an error is returned.


            Send a `GET` request to `/fundingsources/user/{user_token}` to
            retrieve funding source tokens for a user or to
            `/fundingsources/business/{business_token}` to retrieve funding
            source tokens for a business.
          maxLength: 36
          minLength: 1
          type: string
        memo:
          description: Additional descriptive text.
          maxLength: 99
          minLength: 1
          type: string
        tags:
          description: Comma-delimited list of tags describing the order.
          maxLength: 255
          minLength: 1
          type: string
        token:
          description: >-
            The unique identifier of the GPA order.


            If you do not include a token, the system will generate one
            automatically.

            This token is necessary for use in other calls, so we recommend that
            rather than let the system generate one, you use a simple string
            that is easy to remember.

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            The unique identifier of the user.

            Pass either a `user` token or a `business` token, not both.

            Send a `GET` request to `/users` to retrieve business tokens.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - amount
        - currency_code
        - funding_source_token
      type: object
    gpa_response:
      description: >-
        Contains information about a GPA order, including fees, funding sources,
        and addresses.

        See <</core-api/gpa-orders, GPA Orders>> for more information.
      properties:
        amount:
          description: Amount of the funding transaction.
          type: number
        business_token:
          description: |-
            The unique identifier of the `business` account holder.
            Required if `user_token` is not specified.
          type: string
        created_time:
          description: Date and time when the funding transaction was created, in UTC.
          format: date-time
          type: string
        currency_code:
          description: Currency code of the funding transaction.
          type: string
        fees:
          $ref: "#/components/schemas/gpaResponseFees"
        funding:
          $ref: "#/components/schemas/funding"
        funding_source_address_token:
          description: Unique identifier of the funding source address.
          type: string
        funding_source_token:
          description: Unique identifier of the funding source.
          type: string
        gateway_message:
          description: >-
            Message about the status of the funding request.

            Useful for determining whether it was approved and completed
            successfully, declined by the gateway, or timed out.


            This field is returned if it exists in the resource.
          type: string
        gateway_token:
          description: |-
            Unique identifier of the JIT Funding request and response.

            This field is returned if it exists in the resource.
          format: int64
          type: integer
        jit_funding:
          $ref: "#/components/schemas/jit_funding_api"
        last_modified_time:
          description: Date and time when the funding transaction was last modified, in UTC.
          format: date-time
          type: string
        memo:
          description: Additional information describing the funding transaction.
          type: string
        response:
          $ref: "#/components/schemas/response"
        state:
          description: Current status of the funding transaction.
          type: string
        tags:
          description: Custom-defined tags you create that are related to the funding
            transaction.
          type: string
        token:
          description: Unique identifier of the funding transaction.
          type: string
        transaction_token:
          description: Unique identifier of the transaction being funded.
          type: string
        user_token:
          description: |-
            The unique identifier of the `user` account holder.
            Required if `business_token` is not specified.
          type: string
      required:
        - amount
        - created_time
        - currency_code
        - funding
        - funding_source_token
        - last_modified_time
        - response
        - state
        - token
        - transaction_token
      type: object
    gpa_returns:
      description: Contains information about a GPA order unload, which unloads a GPA
        order by returning funds to the funding source.
      properties:
        amount:
          description: Amount of funds to return to funding source.
          type: number
        created_time:
          description: Date and time when the GPA order unload was created, in UTC.
          format: date-time
          type: string
        funding:
          $ref: "#/components/schemas/funding"
        funding_source_address_token:
          description: Identifies the funding source used for this GPA order.
          type: string
        funding_source_token:
          description: Unique identifier of the funding source to which to return funds.
          type: string
        jit_funding:
          $ref: "#/components/schemas/jit_funding_api"
        last_modified_time:
          description: Date and time when the GPA order unload was last modified.
          format: date-time
          type: string
        memo:
          description: Additional descriptive text.
          type: string
        original_order_token:
          description: Identifies the original GPA order.
          type: string
        response:
          $ref: "#/components/schemas/response"
        state:
          description: Current status of the GPA order unload.
          type: string
        tags:
          description: Comma-delimited list of tags describing the GPA order.
          type: string
        token:
          description: Unique identifier of the GPA order unload.
          type: string
        transaction_token:
          description: Unique identifier of the original funding transaction to unload.
          type: string
      required:
        - amount
        - created_time
        - funding
        - funding_source_token
        - last_modified_time
        - response
        - state
        - token
        - transaction_token
      type: object
    hold_increase:
      description: Controls automatic increases to the authorization amount for MCCs
        specified in this group.
      properties:
        type:
          $ref: "#/components/schemas/holdIncreaseType"
        value:
          description: >-
            Specifies the amount of the automatic increase to the authorization
            amount.


            The `type` field controls whether this amount is a fixed amount or a
            percentage.
          type: number
      required:
        - type
        - value
      type: object
    images:
      description: Specifies personalized images that appear on the card.
      properties:
        card:
          $ref: "#/components/schemas/images_card"
        carrier:
          $ref: "#/components/schemas/ImagesCarrier"
        carrier_return_window:
          $ref: "#/components/schemas/images_carrier_return_window"
        signature:
          $ref: "#/components/schemas/images_signature"
      type: object
    images_card:
      description: Specifies personalized images that appear on the card.
      properties:
        name:
          description: Specifies a PNG image to display on the card.
          type: string
        thermal_color:
          description: Specifies the color of the image displayed on the card.
          type: string
      type: object
    images_carrier_return_window:
      description: Specifies a PNG image to display in the return address window of
        envelopes used for sending cards to cardholders.
      properties:
        name:
          description: Specifies a PNG image to display in the return-address window of
            envelopes used for sending cards to cardholders.
          type: string
      type: object
    images_signature:
      description: Specifies a PNG image of the cardholder's signature.
      properties:
        name:
          description: Specifies a PNG image of the cardholder's signature.
          type: string
      type: object
    in_app_provisioning:
      properties:
        address_verification:
          $ref: "#/components/schemas/digital_wallet_token_address_verification"
        enabled:
          default: false
          description: A value of `true` enables the type of provisioning controlled by
            the setting.
          type: boolean
      type: object
    issuer_fraud_view:
      properties:
        recommended_action:
          type: string
        risk_level:
          type: string
        riskcontrol_tags:
          $ref: "#/components/schemas/issuerFraudViewRiskcontrolTags"
        rule_violations:
          $ref: "#/components/schemas/issuerFraudViewRuleViolations"
        score:
          format: int32
          type: integer
      type: object
    jit_address_verification:
      description: Contains address verification data consisting of address data
        entered by the cardholder, address data held by the Marqeta platform,
        and an assertion by the Marqeta platform as to whether the two sets of
        data match.
      properties:
        gateway:
          $ref: "#/components/schemas/address_verification_source"
        issuer:
          $ref: "#/components/schemas/address_verification_source"
        request:
          $ref: "#/components/schemas/avs_information"
      type: object
    jit_funding:
      description: Governs the behavior of JIT Funding.
      properties:
        paymentcard_funding_source:
          $ref: "#/components/schemas/jit_funding_paymentcard_funding_source"
        program_funding_source:
          $ref: "#/components/schemas/jit_funding_program_funding_source"
        programgateway_funding_source:
          $ref: "#/components/schemas/jit_funding_programgateway_funding_source"
      type: object
    jit_funding_api:
      description: Contains JIT funding details for the transaction.
      properties:
        acting_user_token:
          description: >-
            User who conducted the transaction.


            Can be a child user configured to share its parent's account
            balance.
          maxLength: 36
          minLength: 0
          type: string
        address_verification:
          $ref: "#/components/schemas/jit_address_verification"
        amount:
          description: >-
            Requested amount of funding.


            *NOTE:* This field's value can differ from the transaction's
            top-level `amount` field or any other `amount` field within the
            transaction.

            In particular, these fields will differ if the account being funded
            already has a positive account balance.

            Associated fees can also cause these fields to differ.
          exclusiveMinimum: false
          minimum: 0
          type: number
        balances:
          additionalProperties:
            $ref: "#/components/schemas/cardholder_balance"
          description: Contains GPA balance information for the cardholder.
          type: object
        business_token:
          description: The unique identifier of the `business` account holder.
          maxLength: 36
          minLength: 0
          type: string
        decline_reason:
          $ref: "#/components/schemas/jitFundingApiDeclineReason"
        incremental_authorization_jit_funding_tokens:
          $ref: "#/components/schemas/jitFundingApiIncrementalAuthorizationJitFundingToke\
            ns"
        memo:
          description: Additional information that describes the JIT funding transaction.
          maxLength: 99
          minLength: 0
          type: string
        method:
          $ref: "#/components/schemas/jitFundingApiMethod"
        original_jit_funding_token:
          description: >-
            Token of the first associated JIT Funding message.

            Useful for correlating related JIT Funding messages (that is, those
            associated with the same GPA order).

            Not included in the first of any set of related messages.
          maxLength: 36
          minLength: 0
          type: string
        tags:
          description: Custom-defined tags you create that are related to the JIT funding
            transaction.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: Unique identifier of the JIT Funding notification.
          maxLength: 36
          minLength: 0
          type: string
        user_token:
          description: Unique identifier of the `user` account holder.
          maxLength: 36
          minLength: 0
          type: string
      required:
        - amount
        - method
        - token
        - user_token
      type: object
    jit_funding_paymentcard_funding_source:
      properties:
        enabled:
          default: false
          description: >-
            Specifies whether JIT Funding is enabled or disabled for the payment
            card funding source.

            A value of `true` indicates that the payment card funding source is
            enabled and will be debited when swipes occur.
          type: boolean
        refunds_destination:
          $ref: "#/components/schemas/jitFundingPaymentcardFundingSourceRefundsDestinatio\
            n"
      type: object
    jit_funding_program_funding_source:
      properties:
        enabled:
          default: false
          description: >-
            Specifies whether JIT Funding is enabled or disabled for the program
            funding source.

            A value of `true` indicates that the program funding source is
            enabled and will be debited when swipes occur.
          type: boolean
        funding_source_token:
          description: |-
            The unique identifier of the already existing funding source.
            Required if JIT Funding is enabled.
          maxLength: 36
          minLength: 0
          type: string
        refunds_destination:
          $ref: "#/components/schemas/jitFundingProgramFundingSourceRefundsDestination"
      type: object
    jit_funding_programgateway_funding_source:
      properties:
        always_fund:
          default: false
          description: If set to `true`, this card product is always funded from this
            program gateway funding source.
          type: boolean
        enabled:
          default: false
          description: >-
            Specifies whether JIT Funding is enabled or disabled for the program
            gateway funding source.

            A value of `true` indicates that the program gateway funding source
            is enabled and will be debited when swipes occur.
          type: boolean
        funding_source_token:
          description: |-
            The unique identifier of the already existing funding source.
            Required if JIT Funding is enabled.
          maxLength: 36
          minLength: 0
          type: string
        refunds_destination:
          $ref: "#/components/schemas/jitFundingProgramgatewayFundingSourceRefundsDestina\
            tion"
      type: object
    jit_program_response:
      description: Contains JIT funding gateway response data.
      properties:
        jit_funding:
          $ref: "#/components/schemas/jit_funding_api"
      required:
        - jit_funding
      type: object
    kyc_request:
      properties:
        business_token:
          description: >-
            Specifies the `business` account holder on which to perform the
            identity check.

            Do not pass this field if your request includes the `user_token`
            field.


            Send a `GET` request to `/businesses` to retrieve business tokens.
          maxLength: 36
          minLength: 1
          type: string
        manual_override:
          default: false
          description: >-
            Set to `true` to designate a `user` account holder as having passed
            a verification check without Marqeta performing the check through
            one of its KYC providers.


            Use this override when you perform verification through another
            mechanism, such as with an alternative KYC provider or directly with
            the account holder.

            You must obtain explicit, written approval from Marqeta before using
            the `manual_override` field for KYC verification.

            Consult your Customer Success representative for more information.


            You cannot use manual override for business KYC verification, only
            for user KYC verification.
          type: boolean
        notes:
          description: >-
            Notes pertaining to a manual override.

            This field is returned in the response only when the
            `manual_override` field is set to `true`.
          maxLength: 255
          minLength: 0
          type: string
        reference_id:
          description: >-
            Can be specified only if `manual_override=true`.

            If you verified a `user` account holder's identity by performing a
            KYC verification outside of the Marqeta platform, you can use the
            `reference_id` field to store the reference number returned by that
            KYC provider.


            *NOTE:* When you submit a KYC verification request with
            `manual_override=false`, the Marqeta platform performs the
            verification through one of its KYC providers.

            If the KYC provider responds with a reference ID, that ID is passed
            to you by way of this field in the response.
          maxLength: 32
          minLength: 0
          type: string
        token:
          description: >-
            The unique identifier of the identity check.


            If you do not include a token, the system will generate one
            automatically.

            This token is necessary for use in other API calls, so we recommend
            that rather than let the system generate one, you use a simple
            string that is easy to remember.

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: >-
            Specifies the `user` account holder on which to perform the identity
            check.

            Do not pass this field if your request includes the `business_token`
            field.


            Send a `GET` request to `/users` to retrieve user tokens.
          maxLength: 36
          minLength: 1
          type: string
      type: object
    kyc_response:
      properties:
        business_token:
          description: The `business` account holder on which the identity check was
            performed.
          type: string
        created_time:
          description: Time when the KYC verification was performed.
          format: date-time
          type: string
        last_modified_time:
          description: Time when the KYC verification was last updated.
          format: date-time
          type: string
        manual_override:
          default: false
          description: >-
            If `true`, the `user` account holder is designated as having passed
            a verification check without Marqeta performing the check.


            This override is used when verification is performed through another
            mechanism, such as with an alternative KYC provider or directly with
            the account holder.
          type: boolean
        notes:
          description: >-
            Notes pertaining to a manual override.

            This field is included in the response only when the
            `manual_override` field is set to `true`.
          type: string
        reference_id:
          description: >-
            If you verified the account holder's identity by performing a KYC
            verification outside of the Marqeta platform, you can use the
            `reference_id` field to store the reference number returned by that
            KYC provider.

            This field is included in the response only when the
            `manual_override` field is set to `true`.


            *NOTE:* When you submit a KYC verification request with
            `manual_override=false`, the Marqeta platform performs the
            verification through one of its KYC providers.

            If the KYC provider responds with a reference ID, that ID is passed
            to you by way of this field in the response.
          type: string
        result:
          $ref: "#/components/schemas/result"
        token:
          description: The unique identifier of the identity check.
          type: string
        user_token:
          description: The `user` account holder on which the identity check was performed.
          type: string
      required:
        - created_time
        - last_modified_time
      type: object
    link:
      description: A link to balances of related user GPAs.
      properties:
        href:
          description: The URL of the requested `/balances` resource.
          readOnly: true
          type: string
        method:
          description: The HTTP method of the link.
          type: string
        rel:
          description: Specifies the relationship between the current resource and the
            linked resource.
          type: string
      required:
        - href
        - method
        - rel
      type: object
    login_request_model:
      properties:
        email:
          description: The cardholder's email address.
          type: string
        password:
          description: Cardholder's `user` account password on the Marqeta platform.
          maxLength: 255
          minLength: 1
          type: string
        user_token:
          description: |-
            Identifies the cardholder to log in.

            Send a `GET` request to `/users` to retrieve user tokens.
          maxLength: 36
          minLength: 1
          type: string
      type: object
    login_response_model:
      properties:
        access_token:
          $ref: "#/components/schemas/access_token_response"
        user:
          $ref: "#/components/schemas/user_card_holder_response"
      type: object
    manual_entry:
      properties:
        address_verification:
          $ref: "#/components/schemas/digital_wallet_token_address_verification"
        enabled:
          default: false
          description: A value of `true` enables the type of provisioning controlled by
            the setting.
          type: boolean
      type: object
    mcc_group_model:
      properties:
        active:
          default: false
          description: Indicates if the group is active or inactive.
          type: boolean
        config:
          $ref: "#/components/schemas/config"
        mccs:
          $ref: "#/components/schemas/mccGroupModelMccs"
        name:
          description: The name of the group.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: >-
            The unique identifier of the group.


            If you do not include a token, the system will generate one
            automatically.

            This token is necessary for use in other API calls, so we recommend
            that rather than let the system generate one, you use a simple
            string that is easy to remember.

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - mccs
        - name
      type: object
    mcc_group_update_model:
      properties:
        active:
          default: false
          description: Indicates whether the MCC group is active or inactive.
          type: boolean
        config:
          $ref: "#/components/schemas/config"
        mccs:
          $ref: "#/components/schemas/mccGroupUpdateModelMccs"
        name:
          description: The name of the MCC group.
          type: string
      type: object
    merchant_group_request:
      properties:
        active:
          default: false
          description: Indicates if the merchant group is active or not.
          type: boolean
        mids:
          $ref: "#/components/schemas/merchantGroupRequestMids"
        name:
          description: The name of the merchant group.
          maxLength: 40
          minLength: 1
          type: string
        token:
          description: >-
            The unique identifier of the group.


            If you do not include a token, the system will generate one
            automatically.

            This token is necessary for use in other API calls, so we recommend
            that rather than let the system generate one, you use a simple
            string that is easy to remember.

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - name
      type: object
    merchant_group_response:
      properties:
        active:
          default: false
          description: Indicates if the merchant group is active or not.
          type: boolean
        created_time:
          description: The date and time when the resource was created, in UTC.
          format: date-time
          type: string
        last_modified_time:
          description: The date and time when the resource was last modified, in UTC.
          format: date-time
          type: string
        mids:
          $ref: "#/components/schemas/merchantGroupResponseMids"
        name:
          description: The name of the merchant group.
          type: string
        token:
          description: The unique identifier of the merchant group.
          type: string
      type: object
    merchant_group_update_request:
      properties:
        active:
          default: false
          description: Indicates if the merchant group is active or not.
          type: boolean
        mids:
          $ref: "#/components/schemas/merchantGroupUpdateRequestMids"
        name:
          description: The name of the merchant group.
          maxLength: 40
          minLength: 1
          type: string
      type: object
    merchant_response_model:
      description: Deprecated, do not use.
      properties:
        active:
          default: true
          type: boolean
        address1:
          maxLength: 255
          minLength: 0
          type: string
        address2:
          maxLength: 255
          minLength: 0
          type: string
        city:
          maxLength: 40
          minLength: 0
          type: string
        contact:
          maxLength: 40
          minLength: 0
          type: string
        contact_email:
          maxLength: 40
          minLength: 0
          type: string
        country:
          maxLength: 40
          minLength: 0
          type: string
        created_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        last_modified_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        latitude:
          format: float
          type: number
        longitude:
          format: float
          type: number
        name:
          maxLength: 40
          minLength: 0
          type: string
        partial_auth_flag:
          default: true
          type: boolean
        phone:
          maxLength: 10
          minLength: 0
          type: string
        province:
          maxLength: 20
          minLength: 0
          type: string
        state:
          maxLength: 2
          minLength: 0
          type: string
        token:
          description: The unique identifier of the merchant
          maxLength: 36
          minLength: 1
          type: string
        zip:
          maxLength: 10
          minLength: 0
          type: string
      required:
        - created_time
        - last_modified_time
        - name
      type: object
    merchant_scope:
      description: >-
        Defines the group of merchants to which the velocity control applies.


        Populate no more than one field of the `merchant_scope` object. 

        If no fields are populated, the velocity control applies to all
        merchants.
      properties:
        mcc:
          description: >-
            MCC (Merchant Category Code). 

            Identifies the type of products or services provided by the
            merchant.


            Enter a value to control spending on a particular type of product or
            service.
          maxLength: 4
          minLength: 1
          type: string
        mcc_group:
          description: >-
            Token identifying a group of MCCs.

            Enter a value to control spending on a group of product or service
            types.


            Send a `GET` request to `/mccgroups` to retrieve MCC group tokens.
          maxLength: 36
          minLength: 1
          type: string
        mid:
          description: |-
            MID (Merchant ID). 
            The unique identification number of a merchant.

            Enter a value to control spending with a particular merchant.
          maxLength: 36
          minLength: 1
          type: string
      type: object
    min_offset:
      description: |-
        Specifies the minimum expiration offset allowed by this card product.
        If not specified, the `min_offset` equals the `expiration_offset`. 
      properties:
        unit:
          $ref: "#/components/schemas/minOffsetUnit"
        value:
          description: >-
            Specifies the number of time units (as defined by the `unit` field)
            that cards of this card product type are valid.

            In other words, cards expire `value` x `unit` after the date of
            issue.


            This number is rounded as follows:


            * *YEARS* – Rounds up to the last second of the last day of the
            month of expiration.

            For example, if the issue date is 1 Jan 2021 and `value = 1`, the
            cards expire on the last day of Jan 2022.


            * *MONTHS* – Rounds up to the last second of the last day of the
            month of expiration.

            For example, if the issue date is 1 May 2022 and `value = 1`, the
            cards expire on the last day of June 2022.


            * *DAYS* – Rounds up to the last second of the day of expiration.


            * *HOURS*, *MINUTES*, *SECONDS* – No rounding.
          format: int32
          type: integer
      type: object
    msa:
      description: Deprecated, do not use.
      properties:
        campaign_token:
          type: string
        reload_amount:
          exclusiveMinimum: false
          minimum: 0.01
          type: number
        trigger_amount:
          exclusiveMinimum: false
          minimum: 0.01
          type: number
      required:
        - campaign_token
        - reload_amount
        - trigger_amount
      type: object
    msa_aggregated_balances:
      description: Deprecated, do not use.
      properties:
        available_balance:
          type: number
        balances:
          additionalProperties:
            $ref: "#/components/schemas/msa_aggregated_balances"
          type: object
        cached_balance:
          type: number
        credit_balance:
          type: number
        currency_code:
          description: The three-digit ISO 4217 currency code.
          type: string
        impacted_amount:
          type: number
        last_updated_time:
          format: date-time
          type: string
        ledger_balance:
          type: number
        pending_credits:
          type: number
      required:
        - available_balance
        - balances
        - cached_balance
        - credit_balance
        - currency_code
        - last_updated_time
        - ledger_balance
        - pending_credits
      type: object
    msa_balances:
      description: Deprecated, do not use.
      properties:
        available_balance:
          type: number
        balances:
          additionalProperties:
            $ref: "#/components/schemas/msa_balances"
          type: object
        cached_balance:
          type: number
        credit_balance:
          type: number
        currency_code:
          type: string
        impacted_amount:
          type: number
        last_updated_time:
          format: date-time
          type: string
        ledger_balance:
          type: number
        pending_credits:
          type: number
      required:
        - available_balance
        - balances
        - cached_balance
        - credit_balance
        - currency_code
        - last_updated_time
        - ledger_balance
        - pending_credits
      type: object
    msa_order_response:
      description: Deprecated, do not use.
      properties:
        active:
          default: false
          type: boolean
        aggregated_balances:
          $ref: "#/components/schemas/msa_aggregated_balances"
        business_token:
          type: string
        campaign_token:
          type: string
        created_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        currency_code:
          type: string
        end_date:
          description: yyyy-MM-ddThh:mm:ssZ
          format: date-time
          type: string
        funding:
          $ref: "#/components/schemas/funding"
        last_modified_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        last_transaction_date:
          description: yyyy-MM-ddThh:mm:ssZ
          format: date-time
          type: string
        order_balances:
          $ref: "#/components/schemas/msa_balances"
        purchase_amount:
          type: number
        reward_amount:
          type: number
        reward_trigger_amount:
          type: number
        start_date:
          description: yyyy-MM-ddThh:mm:ssZ
          format: date-time
          type: string
        token:
          type: string
        transaction_token:
          type: string
        unloaded_amount:
          type: number
        user_token:
          type: string
      required:
        - active
        - aggregated_balances
        - campaign_token
        - created_time
        - currency_code
        - funding
        - last_modified_time
        - last_transaction_date
        - order_balances
        - purchase_amount
        - reward_amount
        - reward_trigger_amount
        - transaction_token
      type: object
    msa_returns:
      description: Deprecated, do not use.
      properties:
        active:
          default: false
          type: boolean
        aggregated_balances:
          $ref: "#/components/schemas/msa_aggregated_balances"
        amount:
          type: number
        business_token:
          type: string
        campaign_token:
          type: string
        created_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        currency_code:
          type: string
        end_date:
          description: yyyy-MM-ddThh:mm:ssZ
          format: date-time
          type: string
        funding:
          $ref: "#/components/schemas/funding"
        last_modified_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        last_transaction_date:
          description: yyyy-MM-ddThh:mm:ssZ
          format: date-time
          type: string
        order_balances:
          $ref: "#/components/schemas/msa_balances"
        original_order_token:
          type: string
        reward_amount:
          type: number
        reward_trigger_amount:
          type: number
        start_date:
          description: yyyy-MM-ddThh:mm:ssZ
          format: date-time
          type: string
        token:
          type: string
        transaction_token:
          type: string
        unloaded_amount:
          type: number
        user_token:
          type: string
      required:
        - active
        - aggregated_balances
        - amount
        - campaign_token
        - created_time
        - currency_code
        - funding
        - last_modified_time
        - last_transaction_date
        - order_balances
        - original_order_token
        - reward_amount
        - reward_trigger_amount
        - transaction_token
      type: object
    network:
      description: Contains information from the card network about currency
        conversion, including the original currency of the transaction, the
        amount of the transaction in the original currency, and the conversion
        rate.
      properties:
        conversion_rate:
          description: >-
            Conversion rate between the origination currency and the settlement
            currency.


            Returned when the transaction currency is different from the
            origination currency.
          type: number
        dynamic_currency_conversion:
          default: false
          description: Indicates whether currency conversion was performed dynamically at
            the point of sale.
          type: boolean
        original_amount:
          description: Amount of the transaction in the currency in which it originated.
          type: number
        original_currency_code:
          description: Currency type of the origination currency.
          type: string
        settlement_data:
          $ref: "#/components/schemas/settlement_data"
      type: object
    network_account_intelligence_score:
      properties:
        name:
          type: string
        service_type:
          type: string
        value:
          type: string
      type: object
    network_fee_model:
      description: Contains card network fees assessed against the cardholder.
      properties:
        amount:
          description: The amount of the network fee.
          type: number
        credit_debit:
          $ref: "#/components/schemas/networkFeeModelCreditDebit"
        type:
          $ref: "#/components/schemas/networkFeeModelType"
      type: object
    network_fraud_view:
      description: Contains network-provided information about fraud determinations.
      properties:
        account_risk_score:
          description: >-
            _(Visa only)_ Account holder risk condition code evaluated by the
            card network.

            A higher score indicates a greater likelihood that the card number
            is compromised.
          type: string
        account_risk_score_reason_code:
          description: _(Visa only)_ Unique code that describes the main driver of the
            `account_risk_score`.
          type: string
        transaction_risk_score:
          description: |-
            Network-provided risk score for the transaction.
            A higher score indicates higher risk.
            Useful for making authorization decisions.
          format: int32
          type: integer
        transaction_risk_score_reason_code:
          description: _(Mastercard only)_ Unique code that describes the main driver of
            the `transaction_risk_score`.
          type: string
        transaction_risk_score_reason_description:
          description: _(Mastercard only)_ Description of the
            `transaction_risk_score_reason_code`.
          type: string
      type: object
    network_metadata:
      description: >-
        Contains network-related metadata for the transaction, including details
        about the card program and the card product.


        May be returned if the request uses Transaction Model V2 of the Marqeta
        Core API. 

        Not returned for V1 requests.
      properties:
        product_id:
          description: >-
            Product identification value assigned by the card network to each
            card product.

            Can be used to track card-level activity by individual account
            number for premium card products.
          type: string
        program_id:
          description: Program identification number used with `product_id` that
            identifies the programs associated with a card within a program
            registered by the issuer with the card network.
          type: string
        spend_qualifier:
          description: Indicates whether or not the base spend-assessment threshold
            defined by the card network has been met.
          type: string
        surcharge_free_atm_network:
          description: Name of the surcharge-free ATM network used to complete the
            transaction.
          type: string
      type: object
    offer_model:
      description: Deprecated, do not use.
      properties:
        active:
          default: true
          type: boolean
        campaign_token:
          maxLength: 36
          minLength: 1
          type: string
        currency_code:
          type: string
        end_date:
          format: date-time
          type: string
        name:
          maxLength: 255
          minLength: 0
          type: string
        purchase_amount:
          type: number
        reward_amount:
          type: number
        reward_trigger_amount:
          type: number
        start_date:
          format: date-time
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
      required:
        - campaign_token
        - currency_code
        - name
        - purchase_amount
        - reward_amount
      type: object
    offer_order_aggregated_balances:
      description: Deprecated, do not use.
      properties:
        available_balance:
          type: number
        balances:
          additionalProperties:
            $ref: "#/components/schemas/offer_order_aggregated_balances"
          type: object
        cached_balance:
          type: number
        credit_balance:
          type: number
        currency_code:
          type: string
        impacted_amount:
          type: number
        last_updated_time:
          format: date-time
          type: string
        ledger_balance:
          type: number
        pending_credits:
          type: number
      required:
        - available_balance
        - balances
        - cached_balance
        - credit_balance
        - currency_code
        - last_updated_time
        - ledger_balance
        - pending_credits
      type: object
    offer_order_balances:
      description: Deprecated, do not use.
      properties:
        available_balance:
          type: number
        balances:
          additionalProperties:
            $ref: "#/components/schemas/offer_order_balances"
          type: object
        cached_balance:
          type: number
        credit_balance:
          type: number
        currency_code:
          type: string
        impacted_amount:
          type: number
        last_updated_time:
          format: date-time
          type: string
        ledger_balance:
          type: number
        pending_credits:
          type: number
      required:
        - available_balance
        - balances
        - cached_balance
        - credit_balance
        - currency_code
        - last_updated_time
        - ledger_balance
        - pending_credits
      type: object
    offer_order_response:
      description: Deprecated, do not use.
      properties:
        business_token:
          type: string
        created_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        funding:
          $ref: "#/components/schemas/funding"
        last_modified_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        last_transaction_date:
          description: yyyy-MM-ddThh:mm:ssZ
          format: date-time
          type: string
        offer:
          $ref: "#/components/schemas/offer_model"
        order_aggregated_balances:
          $ref: "#/components/schemas/offer_order_aggregated_balances"
        order_balances:
          $ref: "#/components/schemas/offer_order_balances"
        token:
          type: string
        user_token:
          type: string
      required:
        - created_time
        - last_modified_time
        - last_transaction_date
        - order_aggregated_balances
        - order_balances
        - token
      type: object
    one_time_request_model:
      properties:
        email:
          description: >-
            Cardholder's email address.


            Required when neither the user token nor the admin access token is
            provided as the Basic Authentication password (case #3).
          maxLength: 255
          minLength: 1
          type: string
        password:
          description: >-
            Cardholder's `user` account password on the Marqeta platform.


            Required when neither the user token nor the admin access token is
            provided as the Basic Authentication password (case #3). 
          maxLength: 255
          minLength: 1
          type: string
        user_token:
          description: >-
            Identifies the cardholder whose data is accessed.

            Send a `GET` request to `/users` to retrieve cardholder tokens.


            Required when the Basic Authentication password is set to an admin
            access token (case #2).
          maxLength: 36
          minLength: 1
          type: string
      type: object
    order_scope:
      description: Defines the balance threshold and reload amounts.
      properties:
        gpa:
          $ref: "#/components/schemas/gpa"
        msa:
          $ref: "#/components/schemas/msa"
      type: object
    original_credit:
      description: Contains information about an original credit transaction (OCT),
        which enables the cardholder to receive funds on the specified card from
        an external source via the card network.
      properties:
        deferred_hold_by:
          $ref: "#/components/schemas/originalCreditDeferredHoldBy"
        funding_source:
          $ref: "#/components/schemas/originalCreditFundingSource"
        screening_score:
          description: >-
            Sanctions screening score to assist with meeting Anti-Money
            Laundering (AML) obligations.


            Higher scores indicate that the sender's data more closely resembles
            an entry on the regulatory watchlist.


            A value of 999 means that no screening score is available.
          type: string
        sender_account_type:
          $ref: "#/components/schemas/originalCreditSenderAccountType"
        sender_address:
          description: Sender's street address.
          type: string
        sender_city:
          description: Sender's city.
          type: string
        sender_country:
          description: Sender's country.
          type: string
        sender_name:
          description: Full name of the sender.
          type: string
        sender_state:
          description: Sender's state.
          type: string
        transaction_purpose:
          description: The purpose of the original credit transaction.
          type: string
        transaction_type:
          $ref: "#/components/schemas/originalCreditTransactionType"
      type: object
    original_credit_sender_data:
      properties:
        deferred_hold_by:
          $ref: "#/components/schemas/originalCreditSenderDataDeferredHoldBy"
        funding_source:
          $ref: "#/components/schemas/originalCreditSenderDataFundingSource"
        sender_account_number:
          type: string
        sender_account_type:
          $ref: "#/components/schemas/originalCreditSenderDataSenderAccountType"
        sender_address:
          type: string
        sender_city:
          type: string
        sender_country:
          type: string
        sender_name:
          type: string
        sender_reference_number:
          type: string
        sender_state:
          type: string
        transaction_purpose:
          $ref: "#/components/schemas/originalCreditSenderDataTransactionPurpose"
        unique_transaction_reference_number:
          maxLength: 17
          minLength: 1
          type: string
        visa_transaction_purpose:
          type: string
      required:
        - funding_source
      type: object
    orignalcredit_request_model:
      properties:
        amount:
          type: number
        card_acceptor:
          $ref: "#/components/schemas/card_acceptor_model"
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        mid:
          maxLength: 50
          minLength: 1
          type: string
        screening_score:
          type: string
        sender_data:
          $ref: "#/components/schemas/original_credit_sender_data"
        transactionPurpose:
          type: string
        type:
          $ref: "#/components/schemas/orignalcreditRequestModelType"
        webhook:
          $ref: "#/components/schemas/webhook"
      required:
        - amount
        - card_token
        - mid
        - type
      type: object
    other_poi:
      description: Allows for configuration of points of interaction other than
        ecommerce or ATMs, such as points of sale (POS).
      properties:
        allow:
          default: true
          description: >-
            If set to `true`, card transactions at points of interaction other
            than ecommerce or ATMs are allowed.

            This group includes points of sale (POS).
          type: boolean
        card_presence_required:
          default: false
          description: If set to `true`, cards of this card product type are required to
            be present during the transaction, such as in IVR scenarios.
          type: boolean
        cardholder_presence_required:
          default: false
          description: A value of `true` indicates that the cardholder is required to be
            present, such as in a restaurant where the card is present but the
            cardholder is not present when the card is swiped.
          type: boolean
        track1_discretionary_data:
          type: string
        track2_discretionary_data:
          type: string
      type: object
    pan_request:
      properties:
        cvv_number:
          description: >-
            The three-digit card verification value (CVV2) included on the back
            of the card.


            This value cannot be updated.
          type: string
        expiration:
          description: Card expiration date.
          type: string
        pan:
          description: The PAN of the card whose information you want to retrieve.
          type: string
      required:
        - pan
      type: object
    pan_response:
      properties:
        card_token:
          description: The unique identifier of the card.
          type: string
        created_time:
          description: |-
            The date and time when the resource was created, in UTC.
            `2021-10-26T20:03:15Z`, for example.
          format: date-time
          type: string
        last_modified_time:
          description: |-
            The date and time when the resource was last modified, in UTC.
            `2021-10-26T20:03:15Z`, for example.
          format: date-time
          type: string
        user_token:
          description: The unique identifier of the cardholder.
          type: string
      required:
        - card_token
        - created_time
        - last_modified_time
        - user_token
      type: object
    password_update_model:
      properties:
        current_password:
          description: The current password.
          maxLength: 255
          minLength: 1
          type: string
        new_password:
          description: The new password.
          maxLength: 255
          minLength: 1
          type: string
      required:
        - current_password
        - new_password
      type: object
    payment_card_response_model:
      properties:
        account_suffix:
          description: The account identifier appended to the payment card number.
          type: string
        account_type:
          description: The type of payment card account.
          type: string
        active:
          default: false
          description: Specifies whether the account is active.
          type: boolean
        business_token:
          description: |-
            The unique identifier of the `business` account holder.
            This token is returned if a `user_token` is not specified.
          type: string
        created_time:
          description: |-
            The date and time when the resource was created, in UTC.
            `2022-02-26T20:03:05Z`, for example.
          format: date-time
          type: string
        exp_date:
          description: Payment card expiration date.
          type: string
        is_default_account:
          default: false
          description: >-
            If there are multiple funding sources, this field specifies which
            source is used by default in funding calls.

            If there is only one funding source, the system ignores this field
            and always uses that source.
          type: boolean
        last_modified_time:
          description: |-
            The date and time when the resource was last modified, in UTC.
            `2022-02-26T20:03:05Z`, for example.
          format: date-time
          type: string
        token:
          description: The unique identifier of the funding source.
          type: string
        type:
          description: The funding source type.
          type: string
        user_token:
          description: |-
            The unique identifier of the `user` account holder.
            This token is returned if a `business_token` is not specified.
          type: string
      required:
        - account_suffix
        - account_type
        - active
        - created_time
        - exp_date
        - is_default_account
        - last_modified_time
        - token
        - type
      type: object
    peer_transfer_request:
      properties:
        amount:
          description: The amount of the transfer.
          type: number
        currency_code:
          description: The three-digit ISO 4217 currency code.
          type: string
        memo:
          description: Additional descriptive text about the transfer.
          maxLength: 99
          minLength: 1
          type: string
        recipient_business_token:
          description: |-
            Specifies the `business` account holder that receives funds.

            Send a `GET` request to `/businesses` to retrieve business tokens.
          maxLength: 36
          minLength: 1
          type: string
        recipient_user_token:
          description: |-
            Specifies the `user` account holder that receives funds.

            Send a `GET` request to `/users` to retrieve user tokens.
          maxLength: 36
          minLength: 1
          type: string
        sender_business_token:
          description: |-
            Specifies the `business` account holder that sends funds.

            Send a `GET` request to `/businesses` to retrieve business tokens.
          maxLength: 36
          minLength: 1
          type: string
        sender_user_token:
          description: |-
            Specifies the `user` account holder that sends funds.

            Send a `GET` request to `/users` to retrieve user tokens.
          maxLength: 36
          minLength: 1
          type: string
        tags:
          description: Metadata about the peer transfer.
          maxLength: 255
          minLength: 1
          type: string
        token:
          description: >-
            The unique identifier of the peer transfer request.


            If you do not include a token, the system will generate one
            automatically.

            This token is necessary for use in other API calls, so we recommend
            that rather than let the system generate one, you use a simple
            string that is easy to remember.

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - amount
        - currency_code
      type: object
    peer_transfer_response:
      description: >-
        Contains information about a peer transfer, including sender and
        recipient tokens, transfer amount, and currency code. 

        See <</core-api/peer-transfers, Peer Transfers>> for more information.
      properties:
        amount:
          description: Amount of the peer transfer.
          type: number
        created_time:
          description: Date and time when the peer transfer was created.
          format: date-time
          type: string
        currency_code:
          description: The three-digit ISO 4217 currency code.
          type: string
        memo:
          description: Additional comments about the peer transfer.
          type: string
        recipient_business_token:
          description: Specifies the `business` account holder that receives funds.
          type: string
        recipient_user_token:
          description: Specifies the `user` account holder that receives funds.
          type: string
        sender_business_token:
          description: Specifies the `business` account holder that sends funds.
          type: string
        sender_user_token:
          description: Specifies the `user` account holder that sends funds.
          type: string
        tags:
          description: Custom-defined tags you create that are related to the peer transfer.
          type: string
        token:
          description: Unique identifier of the peer transfer request.
          type: string
      required:
        - amount
        - created_time
        - currency_code
        - token
      type: object
    pin_request:
      properties:
        control_token:
          description: >-
            The unique value generated as a result of issuing a `POST` request
            to the `/pins/controltoken` endpoint. 

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        pin:
          description: The four-digit number to associate with the card.
          type: string
      required:
        - control_token
        - pin
      type: object
    pin_reveal_request:
      properties:
        cardholder_verification_method:
          $ref: "#/components/schemas/pinRevealRequestCardholderVerificationMethod"
        control_token:
          description: >-
            The unique value generated as a result of issuing a `POST` request
            to the `/pins/controltoken` endpoint. 

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - cardholder_verification_method
        - control_token
      type: object
    ping_response:
      properties:
        env:
          type: string
        id:
          type: string
        revision:
          type: string
        success:
          type: boolean
        system_components:
          $ref: "#/components/schemas/pingResponseSystemComponents"
        timestamp:
          type: string
        version:
          type: string
      type: object
    poi:
      description: Governs the point of interaction.
      properties:
        atm:
          default: false
          description: A value of `true` enables cards to be used for withdrawing cash at
            an ATM and for receiving cash back at a point of sale (POS).
          type: boolean
        ecommerce:
          default: true
          description: A value of `true` enables cards to be used for online purchases.
          type: boolean
        other:
          $ref: "#/components/schemas/other_poi"
      type: object
    pos:
      description: >-
        Contains information about the point of sale, including details on how
        the card was presented.


        May be returned if the request uses Transaction Model V2 of the Marqeta
        Core API. 

        Not returned for V1 requests. 
      properties:
        card_data_input_capability:
          $ref: "#/components/schemas/posCardDataInputCapability"
        card_holder_presence:
          default: false
          description: Whether the cardholder was present during the transaction.
          type: boolean
        card_presence:
          default: false
          description: Whether the card was present during the transaction.
          type: boolean
        cardholder_authentication_method:
          $ref: "#/components/schemas/posCardholderAuthenticationMethod"
        country_code:
          description: Country code of the card acceptor or terminal.
          type: string
        is_installment:
          default: false
          description: Whether the transaction is an installment payment.
          type: boolean
        is_recurring:
          default: false
          description: Whether the transaction is recurring.
          type: boolean
        pan_entry_mode:
          $ref: "#/components/schemas/posPanEntryMode"
        partial_approval_capable:
          default: false
          description: Whether the card acceptor or terminal is capable of partial
            approvals.
          type: boolean
        pin_entry_mode:
          $ref: "#/components/schemas/posPinEntryMode"
        pin_present:
          default: false
          description: Indicates whether a PIN was presented during the transaction.
          type: boolean
        purchase_amount_only:
          default: false
          description: Whether the card acceptor/terminal supports purchase-only approvals.
          type: boolean
        terminal_attendance:
          $ref: "#/components/schemas/posTerminalAttendance"
        terminal_id:
          description: Card acceptor or terminal identification number.
          type: string
        terminal_location:
          $ref: "#/components/schemas/posTerminalLocation"
        terminal_type:
          $ref: "#/components/schemas/posTerminalType"
        zip:
          description: The ZIP code of the card acceptor or terminal.
          type: string
      type: object
    pre_kyc_controls:
      description: >-
        Contains configuration fields for a number of controls.


        *NOTE:* These controls are in effect only if `kyc_required` is `ALWAYS`
        or `CONDITIONAL` and the account holder has not yet passed KYC.
      properties:
        balance_max:
          description: Specifies the maximum ledger balance allowed for members of the
            account holder group.
          exclusiveMinimum: false
          minimum: 0.01
          type: number
        cash_access_enabled:
          default: false
          description: >-
            If set to `false`, this control prohibits an account holder's cards
            from being used at an ATM.


            *NOTE:* If a card product's `config.poi.atm` field is set to
            `false`, associated cards are prohibited from being used at an ATM
            regardless of this control's setting.
          type: boolean
        enable_non_program_loads:
          default: false
          description: >-
            If set to `true`, funds can only be loaded from a program funding
            source.


            This restriction applies to GPA orders, peer transfers, and direct
            deposits, but does not apply to operator adjustments.
          type: boolean
        international_enabled:
          default: false
          description: >-
            If set to `false`, this control prohibits an account holder from
            conducting transactions with a non-domestic country code.


            *NOTE:* If a card product is configured to prohibit non-domestic
            transactions, its associated cards are prohibited from such
            transactions regardless of this control's setting.
          type: boolean
        is_reloadable_pre_kyc:
          default: false
          description: >-
            If set to `false`, this control prohibits an account holder's
            account from being reloaded with funds after an initial load.


            This restriction applies to GPA orders, peer transfers, and direct
            deposits, but does not apply to operator adjustments.
          type: boolean
      type: object
    preceding_transaction:
      description: >-
        Returned for `authorization.clearing` transaction types following a
        financial advice.


        Contains information about the preceding transaction.
      properties:
        amount:
          description: Amount of the preceding transaction.
          type: number
        token:
          description: Unique identifier of the preceding transaction.
          type: string
      type: object
    program:
      description: Information about the program on the Marqeta platform.
      properties:
        long_code:
          description: The program long code on the Marqeta platform.
          type: string
        program_id:
          description: The program identifier on the Marqeta platform.
          type: string
        short_code:
          description: The program short code on the Marqeta platform.
          type: string
      required:
        - long_code
        - program_id
        - short_code
      type: object
    program_funding_source_request:
      properties:
        active:
          description: Indicates whether the program funding source is active.
          type: boolean
        name:
          description: The name of the program funding source.
          maxLength: 50
          minLength: 1
          type: string
        token:
          description: >-
            The unique identifier of the funding source.

            If you do not include a token, the system will generate one
            automatically.

            As this token is necessary for use in other calls, we recommend that
            you define a simple and easy to remember string rather than letting
            the system generate a token for you.

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - name
      type: object
    program_funding_source_response:
      properties:
        account:
          description: The account identifier.
          type: string
        active:
          description: |-
            Indicates whether the program funding source is active.
            This field is returned if it exists in the resource.
          type: boolean
        created_time:
          description: |-
            The date and time when the resource was created, in UTC.
            `2022-02-26T20:03:05Z`, for example.
          format: date-time
          type: string
        last_modified_time:
          description: |-
            The date and time when the resource was last modified, in UTC.
            `2022-02-26T20:03:05Z`, for example.
          format: date-time
          type: string
        name:
          description: The name of the program funding source.
          maxLength: 50
          minLength: 1
          type: string
        token:
          description: The unique identifier of the funding source.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - account
        - created_time
        - last_modified_time
        - name
        - token
      type: object
    program_funding_source_update_request:
      properties:
        active:
          description: Indicates whether the program funding source is active.
          type: boolean
        name:
          description: The name of the program funding source.
          maxLength: 50
          minLength: 1
          type: string
      type: object
    program_reserve_account_balance:
      properties:
        available_balance:
          description: >-
            Ledger balance minus any authorized transactions that have not yet
            cleared.

            When using JIT Funding, this balance is usually equal to $0.00.
          readOnly: true
          type: number
        balances:
          additionalProperties:
            $ref: "#/components/schemas/program_reserve_account_balance"
          description: Contains program reserve account balance information, organized by
            currency code.
          type: object
        credit_balance:
          description: Not currently in use.
          readOnly: true
          type: number
        currency_code:
          description: The three-digit ISO 4217 currency code.
          type: string
        ledger_balance:
          description: >-
            When using standard funding: The funds that are available to spend
            immediately, including funds from any authorized transactions that
            have not yet cleared.

            When using Just-in-Time (JIT) Funding: Authorized funds that are
            currently on hold, but not yet cleared.
          readOnly: true
          type: number
        pending_credits:
          description: ACH loads that have been accepted, but for which the funding time
            has not yet elapsed.
          readOnly: true
          type: number
      type: object
    program_reserve_transaction_response:
      properties:
        amount:
          description: The amount of the program reserve account credit or debit.
          type: number
        created_time:
          description: |-
            The date and time when the resource was created, in UTC.
            `2021-10-26T20:03:05Z`, for example.
          format: date-time
          type: string
        currency_code:
          description: The three-digit ISO 4217 currency code.
          type: string
        last_modified_time:
          description: |-
            The date and time when the resource was last modified, in UTC.
            `2021-10-26T20:03:05Z`, for example.
          format: date-time
          type: string
        memo:
          description: Memo or note describing the transaction.
          type: string
        state:
          $ref: "#/components/schemas/programReserveTransactionResponseState"
        tags:
          description: Comma-delimited list of tags describing the transaction.
          type: string
        token:
          description: The unique identifier of the transaction response.
          type: string
        transaction_token:
          description: The unique identifier of the transaction.
          type: string
        type:
          $ref: "#/components/schemas/programReserveTransactionResponseType"
      required:
        - created_time
        - last_modified_time
      type: object
    program_transfer:
      properties:
        amount:
          description: Amount of program transfer.
          type: number
        business_token:
          description: |-
            The unique identifier of the business.
            Pass either a `business` token or a `user` token, not both.

            Send a `GET` request to `/businesses` to retrieve business tokens.
          maxLength: 36
          minLength: 1
          type: string
        currency_code:
          description: The three-digit ISO 4217 currency code.
          type: string
        fees:
          $ref: "#/components/schemas/programTransferFees"
        memo:
          description: Memo or note describing the program transfer.
          maxLength: 99
          minLength: 1
          type: string
        tags:
          description: Comma-delimited list of tags describing the program transfer.
          maxLength: 255
          minLength: 1
          type: string
        token:
          description: >-
            If you do not include a token, the system will generate one
            automatically.

            This token is necessary for use in other API calls, so we recommend
            that rather than let the system generate one, you use a simple
            string that is easy to remember.

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        type_token:
          description: >-
            Specifies the program transfer type.


            Send a `GET` request to `/programtransfers/types` to retrieve
            program transfer type tokens.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            The unique identifier of the user.
            Pass either a `user` token or a `business` token, not both.

            Send a `GET` request to `/users` to retrieve business tokens.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - amount
        - currency_code
        - type_token
      type: object
    program_transfer_response:
      description: Contains information about a program transfer, which moves funds
        from an account holder's GPA to a program funding source.
      properties:
        amount:
          description: Amount to be transferred.
          type: number
        business_token:
          description: |-
            The unique identifier of the `business` account holder.
            Required if `user_token` is not specified.
          maxLength: 36
          minLength: 1
          type: string
        created_time:
          description: |-
            The date and time when the resource was created, in UTC.
            `2021-10-26T20:03:05Z`, for example.
          format: date-time
          type: string
        currency_code:
          description: Currency code of the funds to be transferred.
          type: string
        fees:
          $ref: "#/components/schemas/programTransferResponseFees"
        jit_funding:
          $ref: "#/components/schemas/jit_funding_api"
        memo:
          description: Additional description of the program transfer.
          maxLength: 99
          minLength: 1
          type: string
        tags:
          description: Custom-defined tags you create that are related to the program
            transfer.
          maxLength: 255
          minLength: 1
          type: string
        token:
          description: Unique identifier of the program transfer.
          maxLength: 36
          minLength: 1
          type: string
        transaction_token:
          description: The unique identifier of the transaction.
          type: string
        type_token:
          description: Unique identifier of the program transfer type.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            The unique identifier of the `user` account holder.
            Required if `business_token` is not specified.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - amount
        - currency_code
        - transaction_token
        - type_token
      type: object
    program_transfer_type_reponse:
      properties:
        created_time:
          description: >-
            The date and time when the program transfer type object was created,
            in UTC.

            `2021-10-26T20:03:05Z`, for example.
          format: date-time
          type: string
        last_modified_time:
          description: >-
            The date and time when the program transfer type object was last
            modified, in UTC.

            `2021-10-26T20:03:05Z`, for example.
          format: date-time
          type: string
        memo:
          description: Memo or note describing the program transfer type.
          type: string
        program_funding_source_token:
          description: Identifies the program funding source to which program transfers
            will be credited.
          type: string
        tags:
          description: Comma-delimited list of tags describing the program transfer type.
          type: string
        token:
          description: The unique identifier of the program transfer type request object.
          type: string
      required:
        - program_funding_source_token
        - token
      type: object
    program_transfer_type_request:
      properties:
        memo:
          description: Memo or note describing the program transfer type.
          maxLength: 99
          minLength: 1
          type: string
        program_funding_source_token:
          description: >-
            Identifies the program funding source to which program transfers
            will be credited.


            Send a `GET` request to `/fundingsources/program` to retrieve
            program funding source tokens.
          maxLength: 36
          minLength: 1
          type: string
        tags:
          description: Comma-delimited list of tags describing the program transfer type.
          maxLength: 255
          minLength: 1
          type: string
        token:
          description: >-
            If you do not include a token, the system will generate one
            automatically.

            This token is necessary for use in other API calls, so we recommend
            that rather than let the system generate one, you use a simple
            string that is easy to remember.

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - memo
        - program_funding_source_token
      type: object
    program_transfer_type_response:
      properties:
        created_time:
          description: >-
            The date and time when the program transfer type object was created,
            in UTC.

            `2021-10-26T20:03:05Z`, for example.
          format: date-time
          type: string
        last_modified_time:
          description: >-
            The date and time when the program transfer type object was last
            modified, in UTC.

            `2021-10-26T20:03:05Z`, for example.
          format: date-time
          type: string
        memo:
          description: Memo or note describing the program transfer type.
          type: string
        program_funding_source_token:
          description: Identifies the program funding source to which program transfers
            will be credited.
          type: string
        tags:
          description: Comma-delimited list of tags describing the program transfer type.
          type: string
        token:
          description: The unique identifier of the program transfer type request object.
          type: string
      required:
        - program_funding_source_token
        - token
      type: object
    provisioning_controls:
      properties:
        force_yellow_path_for_card_product:
          type: boolean
        in_app_provisioning:
          $ref: "#/components/schemas/in_app_provisioning"
        manual_entry:
          $ref: "#/components/schemas/manual_entry"
        wallet_provider_card_on_file:
          $ref: "#/components/schemas/wallet_provider_card_on_file"
        web_push_provisioning:
          $ref: "#/components/schemas/web_push_provisioning"
      type: object
    push_to_card_disburse_request:
      properties:
        amount:
          exclusiveMaximum: false
          exclusiveMinimum: false
          maximum: 50000
          minimum: 0.01
          type: number
        currency_code:
          type: string
        memo:
          maxLength: 99
          minLength: 1
          type: string
        payment_instrument_token:
          maxLength: 36
          minLength: 1
          type: string
        soft_descriptor:
          $ref: "#/components/schemas/PTCSoftDescriptor"
        tags:
          maxLength: 255
          minLength: 1
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
      required:
        - amount
        - currency_code
        - payment_instrument_token
      type: object
    push_to_card_disbursement_response:
      properties:
        amount:
          type: number
        created_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        currency_code:
          type: string
        last_modified_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        memo:
          maxLength: 99
          minLength: 1
          type: string
        payment_instrument_token:
          maxLength: 36
          minLength: 1
          type: string
        status:
          type: string
        tags:
          maxLength: 255
          minLength: 1
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
      required:
        - created_time
        - last_modified_time
      type: object
    push_to_card_request:
      properties:
        address_1:
          maxLength: 255
          minLength: 1
          type: string
        address_2:
          maxLength: 255
          minLength: 1
          type: string
        city:
          maxLength: 40
          minLength: 1
          type: string
        country:
          type: string
        cvv:
          type: string
        exp_date:
          type: string
        name_on_card:
          maxLength: 50
          minLength: 1
          type: string
        pan:
          maxLength: 19
          minLength: 14
          type: string
        postal_code:
          maxLength: 10
          minLength: 1
          type: string
        state:
          maxLength: 2
          minLength: 1
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          maxLength: 36
          minLength: 1
          type: string
      required:
        - address_1
        - city
        - country
        - cvv
        - exp_date
        - name_on_card
        - pan
        - postal_code
        - state
        - user_token
      type: object
    push_to_card_response:
      properties:
        address_1:
          maxLength: 255
          minLength: 1
          type: string
        address_2:
          maxLength: 255
          minLength: 1
          type: string
        city:
          maxLength: 40
          minLength: 1
          type: string
        country:
          type: string
        created_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        exp_date:
          type: string
        fast_fund_transfer_eligible:
          default: false
          type: boolean
        gambling_fund_transfer_eligible:
          default: false
          type: boolean
        last_four:
          type: string
        last_modified_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        last_name:
          readOnly: true
          type: string
        name_on_card:
          type: string
        postal_code:
          maxLength: 10
          minLength: 1
          type: string
        state:
          maxLength: 2
          minLength: 1
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
      required:
        - created_time
        - last_modified_time
      type: object
    push_tokenize_request_data_androidpay:
      properties:
        card_type:
          type: string
        display_name:
          type: string
        last_digits:
          type: string
        network:
          type: string
        opaque_payment_card:
          type: string
        token_service_provider:
          type: string
        user_address:
          $ref: "#/components/schemas/AndroidPushTokenRequestAddress"
      type: object
    push_tokenize_request_data_samsungpay:
      properties:
        card_type:
          type: string
        display_name:
          type: string
        extra_provision_payload:
          type: string
        last_digits:
          type: string
        network:
          type: string
        token_service_provider:
          type: string
      type: object
    push_tokenize_request_data_xpay:
      properties:
        card_type:
          type: string
        display_name:
          type: string
        extra_provision_payload:
          type: string
        last_digits:
          type: string
        network:
          type: string
        token_service_provider:
          type: string
      type: object
    real_time_fee_assessment:
      description: Contains information about the assessment of real-time fees.
      properties:
        domestic_enabled:
          default: false
          description: Enables fee assessments where the transaction acquirer is located
            in the US.
          type: boolean
        international_enabled:
          default: false
          description: Enables fee assessments where the transaction acquirer is located
            outside the US.
          type: boolean
        transaction_type:
          description: Indicates the type of transactions on which the fee is assessed.
          type: string
      type: object
    real_time_fee_group:
      description: Contains information about a real-time fee group.
      properties:
        active:
          default: false
          description: Whether the real-time fee group is active.
          type: boolean
        created_time:
          description: Date and time when the real-time fee group was created.
          format: date-time
          type: string
        fee_tokens:
          $ref: "#/components/schemas/realTimeFeeGroupFeeTokens"
        last_modified_time:
          description: Date and time when the real-time fee group was last modified.
          format: date-time
          type: string
        name:
          description: Name of the real-time fee group.
          type: string
        token:
          description: Unique identifier of the real-time fee group.
          type: string
      required:
        - active
        - name
        - token
      type: object
    real_time_fee_group_create_request:
      properties:
        active:
          default: true
          description: Indicates whether the real-time fee group is active.
          type: boolean
        fee_tokens:
          $ref: "#/components/schemas/realTimeFeeGroupCreateRequestFeeTokens"
        name:
          description: A descriptive name for the real-time fee group.
          maxLength: 50
          minLength: 1
          type: string
        token:
          description: >-
            The unique identifier of the real-time fee group.


            If you do not include a token, the system will generate one
            automatically.

            This token is necessary for use in other API calls, so we recommend
            that rather than let the system generate one, you use a simple
            string that is easy to remember.

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - name
      type: object
    real_time_fee_group_request:
      properties:
        active:
          default: true
          description: Indicates whether the real-time fee group is active.
          type: boolean
        fee_tokens:
          $ref: "#/components/schemas/realTimeFeeGroupRequestFeeTokens"
        name:
          description: A descriptive name for the real-time fee group.
          maxLength: 50
          minLength: 1
          type: string
      type: object
    real_time_standin_criteria:
      description: Specifies which event types automatically enable Commando Mode.
      properties:
        enabled:
          default: false
          description: If `true`, Commando Mode is automatically enabled by events defined
            in the `real_time_standin_criteria` object; if `false`, Auto
            Commando Mode is not enabled.
          type: boolean
        include_application_errors:
          default: false
          description: If `true`, an application error (any non-connection, non-timeout
            error) automatically enables Commando Mode when
            `real_time_standin_criteria.enabled` is also `true`.
          type: boolean
        include_connection_errors:
          default: false
          description: If `true`, a non-timeout connection error automatically enables
            Commando Mode when `real_time_standin_criteria.enabled` is also
            `true`.
          type: boolean
        include_response_timeouts:
          default: false
          description: If `true`, a gateway response slower than 3000ms automatically
            enables Commando Mode when `real_time_standin_criteria.enabled` is
            also `true`.
          type: boolean
      type: object
    request_for_apple_pay_wpp_JWT:
      properties:
        card_token:
          description: Unique identifier of the `card` resource.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
          type: string
      required:
        - card_token
      type: object
    reset_user_password_email_model:
      properties:
        email:
          description: The cardholder's email address.
          maxLength: 255
          minLength: 1
          type: string
      required:
        - email
      type: object
    reset_user_password_model:
      properties:
        new_password:
          description: The cardholder's new `user` account password on the Marqeta platform.
          maxLength: 255
          minLength: 1
          type: string
        user_token:
          description: The unique identifier of the cardholder.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - new_password
        - user_token
      type: object
    response:
      description: Contains information about the response, including the response
        code and response memo.
      properties:
        additional_information:
          description: Information about the relevant velocity control for the
            transaction, if applicable.
          type: string
        code:
          description: >-
            Four-digit code corresponding to the outcome of the attempted
            transaction.


            `card_security_code_verification.response.code` indicates whether
            the verification check passed. 

            It can have these possible values:


            * 0000 – passed

            * 0001 – did not pass
          type: string
        memo:
          description: Information on the outcome of the attempted transaction.
          type: string
      required:
        - code
        - memo
      type: object
    result:
      description: Contains information about the KYC verification result.
      properties:
        codes:
          $ref: "#/components/schemas/resultCodes"
        status:
          description: KYC verification status.
          type: string
      type: object
    result_code:
      description: Contains the KYC result code and a descriptive message about that codes.
      properties:
        code:
          description: For any `PENDING` or `FAILURE` outcome, see the
            <<user_kyc_failure_codes, User KYC failure codes>> table, the
            <<outcome_reasons_for_the_business, Outcome reasons for the
            business>> table, or the
            <<outcome_reasons_for_individuals_associated_with_a_business,
            Outcome reasons for individuals associated with a business>> table.
          type: string
        message:
          description: Result code description.
          type: string
      type: object
    risk_assessment:
      description: Contains the digital wallet provider's risk assessment for
        provisioning the digital wallet token.
      properties:
        score:
          description: Wallet provider's decision as to whether the digital wallet token
            should be provisioned.
          type: string
        version:
          description: Wallet provider's risk assessment version.
          type: string
      type: object
    riskcontrol_tags:
      properties:
        rule_name:
          type: string
        tag:
          type: string
        values:
          $ref: "#/components/schemas/riskcontrolTagsValues"
      type: object
    selective_auth:
      description: Contains information about authorization decisions.
      properties:
        dmd_location_sensitivity:
          $ref: "#/components/schemas/selectiveAuthDmdLocationSensitivity"
        enable_regex_search_chain:
          default: false
          description: Use `true` to perform regular expression checking on the
            description received in the authorization.
          type: boolean
        sa_mode:
          $ref: "#/components/schemas/selectiveAuthSaMode"
      type: object
    sending_provisioning_data_to_google_pay_backend_request:
      properties:
        card_setting:
          $ref: "#/components/schemas/sendingProvisioningDataToGooglePayBackendRequestCar\
            dSetting"
        card_token:
          description: Unique identifier of the `card` resource.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
          type: string
        client_session_id:
          description: A string provided by Google Pay that identifies the client session.
            backend.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
          type: string
        integrator_id:
          description: A Google-assigned string that uniquely identifies both the
            integrator that is initiating the session and the issuer of the
            payment card.
          example: ACMEISSUER_1
          type: string
        public_device_id:
          description: String provided by Google Pay that identifies the Android device
            that will receive the token.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
          type: string
        public_wallet_id:
          description: String provided by Google Pay that identifies the device-scoped
            Google Pay wallet that receives the token.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
          type: string
        server_session_id:
          description: A string provided by Google Pay that identifies the backend session.
          example: 8c84fab9-889c-4cb7-a330-accac5799ea5
          type: string
        token_setting:
          $ref: "#/components/schemas/sendingProvisioningDataToGooglePayBackendRequestTok\
            enSetting"
      required:
        - card_setting
        - card_token
        - client_session_id
        - integrator_id
        - public_device_id
        - public_wallet_id
        - server_session_id
        - token_setting
      type: object
    settlement_data:
      description: Contains information from the card network about currency
        conversion at the time of settlement, including the original currency of
        the transaction, the amount of the transaction in the original currency,
        and the conversion rate.
      properties:
        amount:
          description: The settled amount.
          type: number
        conversion_rate:
          description: >-
            Returned when the transaction currency is different from the
            origination currency.


            Conversion rate between the origination currency and the settlement
            currency.
          type: number
        currency_code:
          description: The ISO 4217 code of the currency used in the transaction.
          type: string
      type: object
    shipping:
      description: Specifies the shipping details for the card.
      properties:
        care_of_line:
          description: >-
            Adds the specified value as a C/O (care of) line to the mailing
            carrier.


            *NOTE:* This field overrides the equivalent field on the associated
            card product.
          type: string
        method:
          $ref: "#/components/schemas/shippingMethod"
        recipient_address:
          $ref: "#/components/schemas/fulfillment_address_request"
        return_address:
          $ref: "#/components/schemas/fulfillment_address_request"
      type: object
    simulation_response_model:
      properties:
        raw_iso8583:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        transaction:
          $ref: "#/components/schemas/transaction_model"
      type: object
    special:
      description: Contains information about merchant onboarding.
      properties:
        merchant_on_boarding:
          default: false
          description: A value of `true` indicates cards of this card product type can be
            used for merchant onboarding.
          type: boolean
      type: object
    spend_control_association:
      description: Defines the group of users to which the velocity control applies.
      properties:
        card_product_token:
          description: |-
            The unique identifier of the card product.

            Pass either `card_product_token` or `user_token`, not both. 
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            The unique identifier of the cardholder.

            Pass either `card_product_token` or `user_token`, not both. 
          maxLength: 36
          minLength: 1
          type: string
      type: object
    ssn_response_model:
      description: Contains tax identification information.
      properties:
        nin:
          description: National Identification Number.
          type: string
        sin:
          description: Social Insurance Number.
          type: string
        ssn:
          description: United States Social Security Number.
          type: string
        tin:
          description: Taxpayer Identification Number.
          type: string
      type: object
    store_response_model:
      description: Deprecated, do not use.
      properties:
        active:
          default: true
          type: boolean
        address1:
          maxLength: 255
          minLength: 0
          type: string
        address2:
          maxLength: 255
          minLength: 0
          type: string
        city:
          maxLength: 40
          minLength: 0
          type: string
        contact:
          maxLength: 40
          minLength: 0
          type: string
        contact_email:
          maxLength: 40
          minLength: 0
          type: string
        country:
          maxLength: 40
          minLength: 0
          type: string
        created_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        keyed_auth_cvv_enforced:
          default: false
          type: boolean
        last_modified_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        latitude:
          format: float
          type: number
        longitude:
          format: float
          type: number
        merchant_token:
          maxLength: 36
          minLength: 0
          type: string
        mid:
          maxLength: 50
          minLength: 1
          type: string
        name:
          maxLength: 40
          minLength: 0
          type: string
        network_mid:
          maxLength: 50
          minLength: 1
          type: string
        partial_approval_capable:
          default: false
          type: boolean
        partial_auth_flag:
          default: true
          description: 1 char max
          type: boolean
        phone:
          maxLength: 10
          minLength: 0
          type: string
        postal_code:
          maxLength: 10
          minLength: 0
          type: string
        province:
          maxLength: 20
          minLength: 0
          type: string
        state:
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: The unique identifier of the merchant
          maxLength: 36
          minLength: 1
          type: string
        zip:
          maxLength: 10
          minLength: 0
          type: string
      required:
        - address1
        - city
        - created_time
        - last_modified_time
        - merchant_token
        - mid
        - name
        - state
      type: object
    strong_customer_authentication_limits:
      description: Contains information about Strong Customer Authentication (SCA)
        behavior for contactless point-of-sale (POS) and low-value payment (LVP)
        e-commerce transactions.
      properties:
        sca_contactless_cumulative_amount_limit:
          description: >-
            Specifies the cumulative limit of transactions the cardholder can
            perform before receiving an SCA challenge.


            A value of `0` in this field means that the cumulative amount spent
            in contactless POS transactions performed by the cardholder does not
            impact the decision of whether or not an SCA challenge is served.
          readOnly: true
          type: number
        sca_contactless_transaction_limit:
          description: >-
            Specifies the maximum allowable amount for a single contactless
            point-of-sale (POS) transaction, above which the cardholder receives
            a strong customer authentication (SCA) challenge.


            A value of `0` in this field means that the amount of any single
            contactless POS transaction performed by the cardholder does not
            impact the decision of whether or not an SCA challenge is served.
          readOnly: true
          type: number
        sca_contactless_transactions_count_limit:
          description: >-
            Specifies the number of contactless POS transactions the cardholder
            can perform before receiving an SCA challenge.


            A value of `0` in this field means that the number of contactless
            POS transactions performed by the cardholder does not impact the
            decision of whether or not an SCA challenge is served.
          format: int32
          readOnly: true
          type: integer
        sca_contactless_transactions_currency:
          description: >-
            Specifies the currency type for contactless POS transactions.


            This field is required if either the
            `sca_contactless_transaction_limit` field or the
            `sca_contactless_cumulative_amount_limit` field in this object
            contains a value, even if that value is `0`.
          readOnly: true
          type: string
        sca_lvp_cumulative_amount_limit:
          description: >-
            Specifies the cumulative limit of LVP e-commerce transactions the
            cardholder can perform before receiving an SCA challenge.


            For example, if you set the value of this field to `100.00`, your
            cardholder can perform two transactions for `30.00` and two
            transactions for `20.00` before receiving an SCA challenge.


            If you leave this field blank, the cumulative amount spent in LVP
            e-commerce transactions performed by the cardholder does not impact
            the decision of whether or not an SCA challenge is served.
          readOnly: true
          type: number
        sca_lvp_transaction_limit:
          description: >-
            Specifies the maximum allowable amount for a single low-value
            payment (LVP) e-commerce transaction, above which the cardholder
            receives a strong customer authentication (SCA) challenge.


            If you leave this field blank, the amount of any single LVP
            e-commerce transaction performed by the cardholder does not impact
            the decision of whether or not an SCA challenge is served.
          readOnly: true
          type: number
        sca_lvp_transactions_count_limit:
          description: >-
            Specifies the number of LVP e-commerce transactions the cardholder
            can perform before receiving an SCA challenge.


            If you leave this field blank, the total number of LVP e-commerce
            transactions performed by the cardholder does not impact the
            decision of whether or not an SCA challenge is served.
          format: int32
          readOnly: true
          type: integer
        sca_lvp_transactions_currency:
          description: >-
            Specifies the currency type for LVP e-commerce transaction limits.


            This field is required if any one of the
            `sca_lvp_transaction_limit`, `sca_lvp_cumulative_amount_limit`, or
            `sca_lvp_transactions_count_limit` fields in this object contains a
            value, even if that value is `0`.
          readOnly: true
          type: string
        sca_tra_exemption_amount_limit:
          description: >-
            Specifies the maximum allowable amount for a single low-value
            payment (LVP) e-commerce transaction with transaction risk analysis
            (TRA) exemption sent by the merchant or acquirer.

            If the transaction amount exceeds the specified limit, then the
            transaction is either approved or it receives a strong customer
            authentication (SCA) challenge based on `sca_lvp_transaction_limit`
            and `sca_lvp_transactions_currency`.
          readOnly: true
          type: number
      type: object
    terminal_model:
      description: Deprecated, do not use.
      properties:
        card_presence:
          type: string
        cardholder_presence:
          type: string
        channel:
          type: string
        partial_approval_capable:
          type: string
        pin_present:
          type: string
        processing_type:
          type: string
        tid:
          type: string
      type: object
    text:
      description: Specifies personalized text that appears on the card.
      properties:
        name_line_1:
          $ref: "#/components/schemas/text_value"
        name_line_2:
          $ref: "#/components/schemas/text_value"
        name_line_3:
          $ref: "#/components/schemas/text_value"
      required:
        - name_line_1
      type: object
    text_value:
      properties:
        value:
          description: Specifies a line of personalized text that appears on the card.
          type: string
      type: object
    token_request:
      properties:
        account_number:
          description: Payment card account number.
          type: string
        business_token:
          description: |-
            The unique identifier of the `business` account holder.
            This token is required if the `user_token` is not included.
          maxLength: 36
          minLength: 1
          type: string
        cvv_number:
          description: Payment card CVV2 number.
          maxLength: 4
          minLength: 3
          type: string
        exp_date:
          description: Payment card expiration date.
          type: string
        is_default_account:
          default: false
          description: >-
            If there are multiple funding sources, this field specifies which
            source is used by default in funding calls.

            If there is only one funding source, the system ignores this field
            and always uses that source.
          type: boolean
        postal_code:
          description: Postal code of the account holder (user or business).
          type: string
        token:
          description: >-
            The unique identifier of the funding account.

            If you do not include a token, the system will generate one
            automatically.

            As this token is necessary for use in other calls, we recommend that
            you define a simple and easy to remember string rather than letting
            the system generate a token for you.

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            The unique identifier of the `user` account holder.
            This token is required if the `business_token` is not included.
          maxLength: 36
          minLength: 1
          type: string
        zip:
          type: string
      required:
        - account_number
        - cvv_number
        - exp_date
      type: object
    token_service_provider:
      description: Contains information held and provided by the token service
        provider (card network).
      properties:
        correlation_id:
          description: The unique value representing a tokenization request (Mastercard
            only).
          type: string
        pan_reference_id:
          description: Unique identifier of the digital wallet token PAN within the card
            network.
          type: string
        token_assurance_level:
          description: _(Mastercard only)_ Represents the confidence level in the digital
            wallet token.
          type: string
        token_eligibility_decision:
          description: Digital wallet's decision as to whether the digital wallet token
            should be provisioned.
          type: string
        token_expiration:
          description: Expiration date of the digital wallet token.
          type: string
        token_pan:
          description: Primary account number (PAN) of the digital wallet token.
          type: string
        token_reference_id:
          description: Unique identifier of the digital wallet token within the card
            network.
          type: string
        token_requestor_id:
          description: >-
            Unique numerical identifier of the token requestor within the card
            network.

            These ID numbers map to `token_requestor_name` field values as
            follows:


            *Mastercard*


            * 50110030273 – `APPLE_PAY`

            * 50120834693 – `ANDROID_PAY`

            * 50139059239 – `SAMSUNG_PAY`


            *Visa*


            * 40010030273 – `APPLE_PAY`

            * 40010075001 – `ANDROID_PAY`

            * 40010043095 – `SAMSUNG_PAY`

            * 40010075196 – `MICROSOFT_PAY`

            * 40010075338 – `VISA_CHECKOUT`

            * 40010075449 – `FACEBOOK`

            * 40010075839 – `NETFLIX`

            * 40010077056 – `FITBIT_PAY`

            * 40010069887 – `GARMIN_PAY`
          type: string
        token_requestor_name:
          description: Name of the token requestor within the card network.
          type: string
        token_score:
          description: Token score assigned by the digital wallet.
          type: string
        token_type:
          description: Type of the digital wallet token.
          type: string
      required:
        - pan_reference_id
      type: object
    token_update_request:
      properties:
        active:
          default: true
          description: Indicates whether the card funding source is active.
          type: boolean
        exp_date:
          description: The expiration date for the payment card.
          type: string
        is_default_account:
          default: false
          description: >-
            If there are multiple funding sources, this field specifies which
            source is used by default in funding calls.

            If there is only one funding source, the system ignores this field
            and always uses that source.
          type: boolean
      required:
        - exp_date
      type: object
    transaction_card_acceptor:
      description: Contains information about the merchant.
      properties:
        address:
          description: >-
            Card acceptor's address.

            May be returned if the request uses Transaction Model V1 of the
            Marqeta Core API.

            Not returned for V2 requests.
          type: string
        city:
          description: Card acceptor's city.
          type: string
        country_code:
          description: >-
            Card acceptor's country code.

            May be returned if the request uses Transaction Model V2 of the
            Marqeta Core API.

            Not returned for V1 requests.
          type: string
        country_of_origin:
          description: >-
            The merchant's country of origin.


            A merchant's country of origin can be different from the country in
            which the merchant is located.

            For example, embassies are physically located in countries that are
            not their country of origin: a Mexican embassy might be physically
            located in Singapore, but the country of origin is Mexico.


            This field is included when the cardholder conducts a transaction
            with a government-controlled merchant using a Marqeta-issued card.
          type: string
        independent_sales_organization_id:
          type: string
        mcc:
          description: Merchant category code (MCC).
          type: string
        mcc_groups:
          $ref: "#/components/schemas/transactionCardAcceptorMccGroups"
        merchant_tax_id:
          type: string
        mid:
          description: The merchant identifier.
          type: string
        name:
          description: Card acceptor's name.
          type: string
        network_assigned_id:
          type: string
        network_mid:
          description: The merchant identifier on the card network.
          type: string
        payment_facilitator_id:
          type: string
        payment_facilitator_name:
          description: >-
            The name of the payment facilitator, including the sub-merchant
            identifier, of an original credit transaction.

            This field is returned when a payment facilitator participates in
            the transaction.
          type: string
        poi:
          $ref: "#/components/schemas/terminal_model"
        postal_code:
          description: Card acceptor's postal code.
          type: string
        state:
          description: >-
            Two-character state, province, or territorial abbreviation.


            For a complete list of valid state and province abbreviations, see
            <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations,
            Valid state, provincial, and territorial abbreviations>>.


            *Note*: Non-US merchants may return more than 2 char for this field.
          type: string
        sub_merchant_id:
          type: string
        transfer_service_provider_name:
          description: >-
            The name of the transfer service provider of a money transfer
            original credit transaction.

            This field is included when a transfer service provider participates
            in the transaction.
          type: string
      type: object
    transaction_controls:
      description: Controls transactional characteristics of card usage.
      properties:
        accepted_countries_token:
          description: >-
            Set to `accept_us_only` to allow transactions only within the US.


            Set to `decline_ofac_countries` to allow international transactions
            except with countries that the Financial Action Task Force (FATF)
            and Office of Foreign Assets Control (OFAC) have identified as high
            risk.


            Users with the Admin role can create and update additional lists of
            accepted countries for transactions at the `/acceptedcountries`
            endpoint.

            See <</core-api/accepted-countries, Accepted Countries>>.
          type: string
        address_verification:
          $ref: "#/components/schemas/avs_controls"
        allow_chip_fallback:
          default: false
          description: Indicates whether to allow transactions where an EMV chip-enabled
            card was processed using the magstripe as fallback.
          type: boolean
        allow_first_pin_set_via_financial_transaction:
          default: false
          description: >-
            *WARNING:* This field is deprecated and will be unsupported in a
            future release.


            Allows cardholders to define a PIN as they complete their first
            PIN-debit transaction.
          type: boolean
        allow_gpa_auth:
          default: false
          description: >-
            A value of `true` allows transactions to be authorized using GPA
            funds.


            *NOTE:* For most programs, this field should be set to `true`.
          type: boolean
        allow_mcc_group_authorization_controls:
          default: false
          description: >-
            The <</core-api/mcc-groups, MCC group>> `authorization_controls`
            object allows you to automatically increase authorization holds and
            to specify authorization expiration times based on merchant type.

            By default, these settings apply to all cards in your program.

            You can, however, exempt cards associated with a particular card
            product by setting this field to `false`.


            *NOTE:* Partial authorizations are disallowed if this field is set
            to `true`.
          type: boolean
        allow_network_load:
          default: false
          description: >-
            Indicates whether card network loads are allowed.

            The associated card's state must be `ACTIVE` or the load will be
            rejected.
          type: boolean
        allow_network_load_card_activation:
          default: false
          description: >-
            Indicates whether card network loads are allowed.

            Sets the associated card's state to `ACTIVE` if its current state is
            `INACTIVE`.
          type: boolean
        allow_quasi_cash:
          default: false
          description: >-
            Indicates whether quasi-cash transactions are allowed.

            In a quasi-cash transaction, the cardholder purchases an item that
            can be directly converted to cash, such as traveler's checks, money
            orders, casino chips, or lottery tickets.
          type: boolean
        always_require_icc:
          default: false
          description: A value of `true` indicates that the cards of this card product
            type require an Integrated Circuit Card.
          type: boolean
        always_require_pin:
          default: false
          description: A value of `true` indicates that the cards of this card product
            type require a PIN.
          type: boolean
        enable_credit_service:
          default: false
          type: boolean
        enable_partial_auth_approval:
          default: false
          description: >-
            Set to `true` to enable partial authorizations.


            When this setting is `false` and the requested authorization amount
            exceeds available funds, the transaction is declined.

            When this setting is `true` and the requested authorization amount
            exceeds available funds, the transaction is authorized for the
            amount of available funds.
          type: boolean
        ignore_card_suspended_state:
          default: false
          description: >-
            Allows transactions to be approved even if the card's `state =
            SUSPENDED`.

            When this field is set to `true`, the card behaves as if its `state
            = ACTIVE`.
          type: boolean
        notification_language:
          description: >-
            Specifies the language for 3D Secure and digital wallet token
            notifications sent to cardholders under this card program.

            By default, notifications are sent in English.

            You can also send notifications to your cardholders in Czech,
            French, Italian, German, Polish, Spanish, and Swedish.


            To specify the language for OTP notifications at the user level, see
            <</core-api/users, Users>>.

            Languages set at the user level take precedence over the language
            set at the card product level.
          type: string
        quasi_cash_exempt_merchant_group_token:
          description: >-
            The token of the merchant group that you want to exempt from
            quasi-cash transaction authorization control, allowing your
            cardholders to conduct quasi-cash transactions.

            In a quasi-cash transaction, the cardholder purchases an item that
            can be directly converted to cash, such as traveler's checks, money
            orders, casino chips, or lottery tickets.


            You can specify a merchant group token in addition to whatever
            merchant identifiers you listed in the `quasi_cash_exempt_mids`
            field, if any.
          maxLength: 36
          minLength: 1
          type: string
        quasi_cash_exempt_mids:
          description: >-
            A comma-separated list of merchant identifiers that you want to
            exempt from quasi-cash transaction authorization control, allowing
            your cardholders to conduct quasi-cash transactions.

            In a quasi-cash transaction, the cardholder purchases an item that
            can be directly converted to cash, such as traveler's checks, money
            orders, casino chips, or lottery tickets.
          type: string
        require_card_not_present_card_security_code:
          default: false
          description: A value of `true` indicates that if `card_presence_required` is
            `true`, the card's security code is required.
          type: boolean
        strong_customer_authentication_limits:
          $ref: "#/components/schemas/strong_customer_authentication_limits"
      type: object
    transaction_metadata:
      description: >-
        Contains merchant-provided metadata related to the transaction,
        including details about lodging- and transit-related purchases.


        May be returned if the request uses Transaction Model V2 of the Marqeta
        Core API.

        Not returned for V1 requests.
      properties:
        airline:
          $ref: "#/components/schemas/airline"
        authorization_life_cycle:
          description: Number of days the pre-authorization is in effect.
          format: int32
          type: integer
        cross_border_transaction:
          default: false
          description: Whether the transaction is cross-border, i.e., when the merchant
            and the cardholder are located in two different countries.
          type: boolean
        is_deferred_authorization:
          type: boolean
        is_lodging_auto_rental:
          default: false
          description: Whether the transaction is a lodging or vehicle rental.
          type: boolean
        lodging_auto_rental_start_date:
          description: Date and time when the lodging check-in or vehicle rental began.
          format: date-time
          type: string
        moto_indicator:
          $ref: "#/components/schemas/transactionMetadataMotoIndicator"
        payment_channel:
          $ref: "#/components/schemas/transactionMetadataPaymentChannel"
        transaction_category:
          $ref: "#/components/schemas/transactionMetadataTransactionCategory"
        transit:
          $ref: "#/components/schemas/transit"
      type: object
    transaction_model:
      properties:
        account_funding:
          $ref: "#/components/schemas/account_funding"
        acquirer:
          $ref: "#/components/schemas/acquirer"
        acquirer_fee_amount:
          description: >-
            Indicates the amount of the acquirer fee.

            Account holders are sometimes charged an acquirer fee for card use
            at ATMs, fuel dispensers, and so on.
          type: number
        acquirer_reference_id:
          description: |-
            Acquirer-assigned unique identifier of the transaction.
            Useful for settlement and reconciliation.
          type: string
        acting_user_token:
          description: >-
            Unique identifier of the user who conducted the transaction.

            This might be a child user configured to share its parent's account
            balance.
          maxLength: 36
          minLength: 0
          type: string
        address_verification:
          $ref: "#/components/schemas/address_verification_model"
        advice_reason_code:
          type: string
        advice_reason_details:
          type: string
        amount:
          description: Amount of the transaction.
          type: number
        amount_to_be_released:
          description: Amount to release following a financial advice.
          type: number
        approval_code:
          description: Unique identifier assigned to an authorization, printed on the
            receipt at point of sale.
          type: string
        auto_reload:
          $ref: "#/components/schemas/auto_reload_model"
        bank_transfer_token:
          type: string
        batch_number:
          description: The batch number of the transaction.
          type: string
        business:
          $ref: "#/components/schemas/business_metadata"
        business_token:
          description: Unique identifier of the business that owns the account that funded
            the transaction.
          maxLength: 36
          minLength: 0
          type: string
        card:
          $ref: "#/components/schemas/card_response"
        card_acceptor:
          $ref: "#/components/schemas/transaction_card_acceptor"
        card_holder_model:
          $ref: "#/components/schemas/user_card_holder_response"
        card_product_token:
          maxLength: 36
          minLength: 0
          type: string
        card_security_code_verification:
          $ref: "#/components/schemas/card_security_code_verification"
        card_token:
          description: |-
            Unique identifier of the card.
            Useful when a single account holder has multiple cards.
          maxLength: 36
          minLength: 0
          type: string
        cardholder_authentication_data:
          $ref: "#/components/schemas/cardholder_authentication_data"
        cash_back_amount:
          description: >-
            Amount of cash back requested by the cardholder during the
            transaction.

            Included in the total transaction amount.
          type: number
        chargeback:
          $ref: "#/components/schemas/chargeback_response"
        clearing_record_sequence_number:
          description: A sequence number that identifies a specific clearing message among
            multiple clearing messages for an authorization.
          type: string
        created_time:
          description: >-
            Date and time when the Marqeta platform created the transaction
            entry, in UTC format.

            For example, when Marqeta processed the clearing record for a
            refund.
          format: date-time
          type: string
        currency_code:
          description: Currency type of the transaction.
          type: string
        currency_conversion:
          $ref: "#/components/schemas/currency_conversion"
        digital_wallet_token:
          $ref: "#/components/schemas/digital_wallet_token"
        direct_deposit:
          $ref: "#/components/schemas/DepositDepositResponse"
        dispute:
          $ref: "#/components/schemas/DisputeModel"
        duration:
          description: Duration of the transaction on Marqeta's servers, in milliseconds.
          format: int32
          type: integer
        enhanced_data_token:
          description: The enhanced commercial card data token for the transaction.
          type: string
        fee:
          $ref: "#/components/schemas/fee"
        fee_transfer:
          $ref: "#/components/schemas/fee_transfer_response"
        fees:
          $ref: "#/components/schemas/transactionModelFees"
        fraud:
          $ref: "#/components/schemas/fraud_view"
        from_account:
          description: Specifies the account type for ATM transactions.
          type: string
        gpa:
          $ref: "#/components/schemas/cardholder_balance"
        gpa_order:
          $ref: "#/components/schemas/gpa_response"
        gpa_order_unload:
          $ref: "#/components/schemas/gpa_returns"
        identifier:
          description: Sequential identifier of the transaction.
          type: string
        incremental_authorization_transaction_tokens:
          $ref: "#/components/schemas/transactionModelIncrementalAuthorizationTransaction\
            Tokens"
        interchange_rate_descriptor:
          type: string
        is_preauthorization:
          default: false
          description: Indicates if the transaction is a pre-authorization.
          type: boolean
        isaIndicator:
          $ref: "#/components/schemas/transactionModelIsaIndicator"
        issuer_interchange_amount:
          description: The amount of interchange charged by the card issuer.
          type: number
        issuer_payment_node:
          description: Unique identifier of the Marqeta platform server that received the
            transaction from the card network.
          type: string
        issuer_received_time:
          description: Date and time when the Marqeta platform received the transaction
            from the card network, in UTC.
          type: string
        merchant:
          $ref: "#/components/schemas/merchant_response_model"
        msa_order_unload:
          $ref: "#/components/schemas/msa_returns"
        msa_orders:
          $ref: "#/components/schemas/transactionModelMsaOrders"
        multi_clearing_sequence_count:
          description: >-
            If an authorization has multiple clearing transactions, this field
            displays their total number.

            For example, if an authorization has four clearing transactions, the
            sequence count is `04`.
          type: string
        multi_clearing_sequence_number:
          description: >-
            If an authorization has multiple clearing transactions, this field
            displays the sequence number for the clearing transaction.

            For example, if this is the second clearing transaction of four, the
            sequence number is `02`.
          type: string
        network:
          description: Indicates which card network was used to complete the transactions.
          type: string
        network_metadata:
          $ref: "#/components/schemas/network_metadata"
        network_reference_id:
          description: |-
            Network-assigned unique identifier of the transaction.
            Useful for settlement and reconciliation.
          type: string
        offer_orders:
          $ref: "#/components/schemas/transactionModelOfferOrders"
        original_credit:
          $ref: "#/components/schemas/original_credit"
        peer_transfer:
          $ref: "#/components/schemas/peer_transfer_response"
        polarity:
          $ref: "#/components/schemas/transactionModelPolarity"
        pos:
          $ref: "#/components/schemas/pos"
        preceding_related_transaction_token:
          description: >-
            Returned for final transaction types.


            Unique identifier of the preceding related transaction.

            Useful for identifying the transaction that preceded the current
            one.


            For example, `authorization`, a temporary transaction type, precedes
            and is completed by `authorization.clearing`, a final transaction
            type.

            In this case, the `authorization` token is returned with this field.

            For which transaction types are temporary or final, see
            <</core-api/event-types#_transaction_events, Transaction events in
            Event Types>>.
          type: string
        preceding_transaction:
          $ref: "#/components/schemas/preceding_transaction"
        program:
          $ref: "#/components/schemas/program"
        program_transfer:
          $ref: "#/components/schemas/program_transfer_response"
        real_time_fee_group:
          $ref: "#/components/schemas/real_time_fee_group"
        request_amount:
          description: Merchant-requested amount, including any fees.
          type: number
        response:
          $ref: "#/components/schemas/response"
        settlement_date:
          description: >-
            Date and time when funds were moved for a transaction, in UTC.

            For example, in the case of a refund, when funds were credited to
            the cardholder.
          format: date-time
          type: string
        standin_approved_by:
          description: >-
            Indicates which party approved a transaction: the card network using
            stand-in processing, or Marqeta using Commando Mode.

            Returned only when a transaction is approved.
          type: string
        standin_by:
          description: "Indicates which party approved a transaction: the card network
            using stand-in processing, or Marqeta using Commando Mode."
          type: string
        standin_reason:
          description: Indicates why the card network handled a transaction requiring
            stand-in processing.
          type: string
        state:
          $ref: "#/components/schemas/transactionModelState"
        store:
          $ref: "#/components/schemas/store_response_model"
        subnetwork:
          description: >-
            Indicates which subnetwork was used to complete the transaction.

            Possible values include the following:


            * *VISANET* – Used for VisaNet signature-based transactions.

            * *VISANETDEBIT* – Used for VisaNet Debit PIN-based transaction.

            * *VISAINTERLINK* – Used for Visa Interlink PIN-based transactions.

            * *VISAPLUS* – Used for ATM withdrawals on Visa.

            * *MAESTRO* – Used for PIN-based transactions on Mastercard.

            * *CIRRUS* – Used for ATM withdrawals on Mastercard.

            * *MASTERCARDDEBIT* – Used for signature-based transactions on
            Mastercard.

            * *GATEWAY_JIT* – Used for Gateway JIT Funding transactions.

            * *MANAGED_JIT* – Used for Managed JIT Funding transactions or for
            transactions that occur while Commando Mode is enabled.
          type: string
        token:
          description: >-
            Unique identifier of the transaction, formatted as a UUID.


            *NOTE:* For subsequent related transactions, this token value
            appears as the `preceding_related_transaction_token`.
          maxLength: 36
          minLength: 1
          readOnly: true
          type: string
        transaction_attributes:
          additionalProperties:
            type: string
          description: Additional transaction attributes.
          type: object
        transaction_metadata:
          $ref: "#/components/schemas/transaction_metadata"
        type:
          $ref: "#/components/schemas/transactionModelType"
        user:
          $ref: "#/components/schemas/cardholder_metadata"
        user_token:
          description: Unique identifier of the user who owns the account that funded the
            transaction; subsequent related transactions retain the same
            `user_token`, even if the card used to complete the transaction
            moves to another user.
          maxLength: 36
          minLength: 0
          type: string
        user_transaction_time:
          description: >-
            Date and time when the user initiated the transaction, in UTC.

            For example, when a merchant performed the original authorization
            for a refund.
          format: date-time
          type: string
      required:
        - acting_user_token
        - amount
        - state
        - token
        - type
      type: object
    transaction_options:
      properties:
        additional_data:
          type: string
        card_expiration_date_yymm:
          type: string
        database_transaction_timeout:
          format: int32
          type: integer
        encryption_key_id:
          type: string
        is_async:
          default: false
          type: boolean
        pre_auth_time_limit:
          type: string
        send_expiration_date:
          default: false
          type: boolean
        send_track_data:
          default: false
          type: boolean
        transaction_timeout_threshold_seconds:
          format: int64
          type: integer
        transaction_token:
          type: string
      type: object
    transit:
      description: Contains merchant-provided, transit-related metadata related to the
        transaction.
      properties:
        transaction_type:
          $ref: "#/components/schemas/transitTransactionType"
        transportation_mode:
          $ref: "#/components/schemas/transitTransportationMode"
      type: object
    unload_request_model:
      properties:
        amount:
          description: The amount of funds to unload (i.e., to return to the funding
            source).
          type: number
        funding_source_address_token:
          description: >-
            Identifies the funding source to use for this GPA unload order.


            Send a `GET` request to `/fundingsources/addresses/user/{token}` to
            retrieve addresses for a specific user.
          maxLength: 36
          minLength: 1
          type: string
        memo:
          description: Additional descriptive text about the GPA unload.
          maxLength: 99
          minLength: 0
          type: string
        original_order_token:
          description: Identifies the original GPA order.
          maxLength: 36
          minLength: 1
          type: string
        tags:
          description: Comma-delimited list of tags describing the GPA unload order.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: >-
            The unique identifier of the GPA unload order.


            If you do not include a token, the system will generate one
            automatically.

            This token is necessary for use in other calls, so we recommend that
            rather than let the system generate one, you use a simple string
            that is easy to remember.

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - amount
        - original_order_token
      type: object
    user_association:
      description: Associates each card with a user.
      properties:
        single_inventory_user:
          default: false
          description: >-
            Set to `true` to associate all cards with the same user.

            Set to `false` to associate each card with a different user.

            When set to `false`, users are generated automatically and
            associated with the cards.
          type: boolean
        single_inventory_user_token:
          default: "false"
          description: >-
            If `single_inventory_user=true`, use this field to specify the token
            of an existing user.

            All cards in the order will be associated with this user.
          maxLength: 36
          minLength: 1
          type: string
      type: object
    user_card_holder_response:
      description: Contains information about a cardholder.
      properties:
        account_holder_group_token:
          description: Associates the specified account holder group with the cardholder.
          maxLength: 36
          minLength: 0
          type: string
        active:
          default: false
          description: Specifies if the cardholder is in the `ACTIVE` state on the Marqeta
            platform.
          type: boolean
        address1:
          description: Cardholder's address.
          maxLength: 255
          minLength: 0
          type: string
        address2:
          description: Additional address information for the cardholder.
          maxLength: 255
          minLength: 0
          type: string
        authentication:
          $ref: "#/components/schemas/Authentication"
        birth_date:
          description: Cardholder's date of birth.
          type: string
        business_token:
          description: The unique identifier of the `business` resource.
          type: string
        city:
          description: City where the cardholder resides.
          maxLength: 40
          minLength: 0
          type: string
        company:
          description: Company name.
          maxLength: 255
          minLength: 0
          type: string
        corporate_card_holder:
          default: false
          description: Specifies if the cardholder holds a corporate card.
          type: boolean
        country:
          description: Country where the cardholder resides.
          maxLength: 40
          minLength: 0
          type: string
        created_time:
          description: The date and time when the resource was created, in UTC.
          format: date-time
          type: string
        email:
          description: Valid email address of the cardholder.
          maxLength: 255
          minLength: 1
          type: string
        first_name:
          description: Cardholder's first name.
          maxLength: 40
          minLength: 0
          type: string
        gender:
          $ref: "#/components/schemas/userCardHolderResponseGender"
        honorific:
          description: "Cardholder's title or prefix: Ms., Mr., Miss, Mrs., and so on."
          maxLength: 10
          minLength: 0
          type: string
        id_card_expiration_date:
          description: The expiration date of the cardholder's identification card.
          readOnly: true
          type: string
        id_card_number:
          description: The cardholder's identification card number.
          maxLength: 255
          minLength: 0
          type: string
        identifications:
          $ref: "#/components/schemas/userCardHolderResponseIdentifications"
        ip_address:
          description: Cardholder's IP address.
          maxLength: 39
          minLength: 0
          type: string
        last_modified_time:
          description: The date and time when the resource was last updated, in UTC.
          format: date-time
          type: string
        last_name:
          description: Cardholder's last name.
          maxLength: 40
          minLength: 0
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Associates any additional metadata you provide with the cardholder.
          type: object
        middle_name:
          description: Cardholder's middle name.
          maxLength: 40
          minLength: 0
          type: string
        nationality:
          description: Cardholder's nationality.
          maxLength: 255
          minLength: 0
          type: string
        notes:
          description: Any additional information pertaining to the cardholder.
          maxLength: 255
          minLength: 0
          type: string
        parent_token:
          description: The unique identifier of a `user` or `business` already in the
            system.
          maxLength: 36
          minLength: 1
          type: string
        passport_expiration_date:
          description: The expiration date of the cardholder's passport.
          readOnly: true
          type: string
        passport_number:
          description: Cardholder's passport number.
          maxLength: 40
          minLength: 0
          type: string
        password:
          description: Cardholder's `user` account password on the Marqeta platform.
          maxLength: 255
          minLength: 1
          type: string
        phone:
          description: Cardholder's telephone number.
          maxLength: 255
          minLength: 0
          type: string
        postal_code:
          description: Postal code of the cardholder's address.
          maxLength: 10
          minLength: 0
          type: string
        ssn:
          description: The cardholder's Social Security Number.
          type: string
        state:
          description: State in which the cardholder resides.
          maxLength: 2
          minLength: 0
          type: string
        status:
          $ref: "#/components/schemas/userCardHolderResponseStatus"
        token:
          description: The unique identifier of the cardholder.
          maxLength: 36
          minLength: 1
          type: string
        uses_parent_account:
          default: false
          description: Indicates whether the child shares balances with the parent
            (`true`), or the child's balances are independent of the parent
            (`false`).
          type: boolean
        zip:
          description: ZIP code of the cardholder's address.
          maxLength: 10
          minLength: 0
          type: string
      required:
        - created_time
        - last_modified_time
      type: object
    user_card_holder_search_model:
      properties:
        dda:
          description: >-
            Performs a match on the specified deposit account number.

            Send a `GET` request to `/directdeposits/accounts/{user_token}` to
            retrieve the deposit account number for a specific cardholder.
          type: string
        email:
          description: Performs a non-case-sensitive, exact match on the cardholder's
            `email` field.
          maxLength: 255
          minLength: 1
          type: string
        first_name:
          description: >-
            Performs a non-case-sensitive match on the cardholder's `first_name`
            field.

            Matching is partial on the beginning of the name.

            For example, a match on "Alex" returns both "Alex" and "Alexander".
          maxLength: 40
          minLength: 0
          type: string
        last_name:
          description: >-
            Performs a non-case-sensitive match on the cardholder's `last_name`
            field.

            Matching is partial on the beginning of the name.

            For example, a match on "Smith" returns both "Smith" and
            "Smithfield".
          maxLength: 40
          minLength: 0
          type: string
        phone:
          description: Performs a match on the cardholder's `phone` field.
          maxLength: 255
          minLength: 0
          type: string
        ssn:
          description: Performs a match on the cardholder's identification number.
          type: string
      type: object
    velocity_control_balance_response:
      properties:
        active:
          description: Indicates whether the velocity control is active.
          type: boolean
        amount_limit:
          description: Maximum monetary sum that can be cleared within the time period
            defined by the `velocity_window` field.
          exclusiveMinimum: false
          minimum: 0
          type: number
        approvals_only:
          description: If set to `true`, only approved transactions are subject to control.
          type: boolean
        association:
          $ref: "#/components/schemas/spend_control_association"
        available:
          $ref: "#/components/schemas/available"
        currency_code:
          description: The three-character ISO 4217 currency code.
          type: string
        include_cashback:
          description: If set to `true`, cashbacks from a point of sale are subject to
            control.
          type: boolean
        include_credits:
          description: If set to `true`, original credit transactions are subject to
            control.
          type: boolean
        include_purchases:
          description: If set to `true`, purchases are subject to control.
          type: boolean
        include_transfers:
          description: If set to `true`, transfers are subject to control.
          type: boolean
        include_withdrawals:
          description: If set to `true`, ATM withdrawals are subject to control.
          type: boolean
        merchant_scope:
          $ref: "#/components/schemas/merchant_scope"
        name:
          description: A description of how the velocity control restricts spending, for
            example, "Max spend of $500 per day" or "Max spend of $5000 per
            month for non-exempt employees".
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: The unique identifier of the velocity control.
          maxLength: 36
          minLength: 1
          type: string
        usage_limit:
          description: Maximum number of times a card can be used within the time period
            defined by the `velocity_window` field.
          format: int32
          minimum: -1
          type: integer
        velocity_window:
          $ref: "#/components/schemas/velocityControlBalanceResponseVelocityWindow"
      required:
        - amount_limit
        - available
        - currency_code
        - velocity_window
      type: object
    velocity_control_request:
      properties:
        active:
          description: >-
            Indicates whether the velocity control is active.

            If the control will be used for Commando Mode, set to `false` and
            then enable it using `commando_mode_enables`.

            See <</core-api/commando-mode#_update_commando_mode_control_set,
            Update Commando Mode control set>>.
          type: boolean
        amount_limit:
          description: Maximum monetary sum that can be cleared within the time period
            defined by the `velocity_window` field.
          exclusiveMinimum: false
          minimum: 0
          type: number
        approvals_only:
          description: If set to `true`, only approved transactions are subject to control.
          type: boolean
        association:
          $ref: "#/components/schemas/spend_control_association"
        currency_code:
          description: The three-character ISO 4217 currency code.
          type: string
        include_cashback:
          description: If set to `true`, cashbacks from a point of sale are subject to
            control.
          type: boolean
        include_credits:
          description: If set to `true`, original credit transactions are subject to
            control.
          type: boolean
        include_purchases:
          description: If set to `true`, purchases are subject to control.
          type: boolean
        include_transfers:
          description: If set to `true`, transfers are subject to control.
          type: boolean
        include_withdrawals:
          description: If set to `true`, ATM withdrawals are subject to control.
          type: boolean
        merchant_scope:
          $ref: "#/components/schemas/merchant_scope"
        name:
          description: >-
            A description of how the velocity control restricts spending, for
            example, "Max spend of $500 per day" or "Max spend of $5000 per
            month for non-exempt employees".


            Ensure that the description you provide here adequately captures the
            kind of restriction exerted by this velocity control, because the
            Marqeta platform will send this information to you in a webhook in
            the event that the transaction authorization attempt is declined by
            the velocity control.


            *NOTE:* This field is very important.

            If your program has multiple velocity controls in place, it is not
            always clear which one prevented the transaction from being
            approved.

            Adding specific details to this field gives you more contextual
            information when debugging or monitoring declined authorization
            attempts.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: >-
            The unique identifier of the velocity control.


            If you do not include a token, the system will generate one
            automatically.

            This token is necessary for use in other API calls, so we recommend
            that rather than let the system generate one, you use a simple
            string that is easy to remember.

            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        usage_limit:
          description: >-
            Maximum number of times a card can be used within the time period
            defined by the `velocity_window` field.


            If `velocity_window` is set to `TRANSACTION`, do not include a
            `usage_limit` in your request.


            Set to `-1` to indicate that the card can be used an unlimited
            number of times.
          format: int32
          minimum: -1
          type: integer
        velocity_window:
          $ref: "#/components/schemas/velocityControlRequestVelocityWindow"
      required:
        - amount_limit
        - currency_code
        - velocity_window
      type: object
    velocity_control_response:
      properties:
        active:
          description: Indicates whether the velocity control is active.
          type: boolean
        amount_limit:
          description: Maximum monetary sum that can be cleared within the time period
            defined by the `velocity_window` field.
          exclusiveMinimum: false
          minimum: 0
          type: number
        approvals_only:
          description: If set to `true`, only approved transactions are subject to control.
          type: boolean
        association:
          $ref: "#/components/schemas/spend_control_association"
        currency_code:
          description: The three-character ISO 4217 currency code.
          type: string
        include_cashback:
          description: If set to `true`, cashbacks from a point of sale are subject to
            control.
          type: boolean
        include_credits:
          description: If set to `true`, original credit transactions are subject to
            control.
          type: boolean
        include_purchases:
          description: If set to `true`, purchases are subject to control.
          type: boolean
        include_transfers:
          description: If set to `true`, transfers are subject to control.
          type: boolean
        include_withdrawals:
          description: If set to `true`, ATM withdrawals are subject to control.
          type: boolean
        merchant_scope:
          $ref: "#/components/schemas/merchant_scope"
        name:
          description: A description of how the velocity control restricts spending, for
            example, "Max spend of $500 per day" or "Max spend of $5000 per
            month for non-exempt employees".
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: The unique identifier of the velocity control.
          maxLength: 36
          minLength: 1
          type: string
        usage_limit:
          description: Maximum number of times a card can be used within the time period
            defined by the `velocity_window` field.
          format: int32
          minimum: -1
          type: integer
        velocity_window:
          $ref: "#/components/schemas/velocityControlResponseVelocityWindow"
      required:
        - amount_limit
        - currency_code
        - velocity_window
      type: object
    velocity_control_update_request:
      properties:
        active:
          description: Indicates whether the velocity control is active.
          type: boolean
        amount_limit:
          description: Maximum monetary sum that can be cleared within the time period
            defined by the `velocity_window` field.
          exclusiveMinimum: false
          minimum: 0
          type: number
        approvals_only:
          description: If set to `true`, only approved transactions are subject to control.
          type: boolean
        association:
          $ref: "#/components/schemas/spend_control_association"
        currency_code:
          description: The three-character ISO 4217 currency code.
          type: string
        include_cashback:
          description: If set to `true`, cashbacks from a point of sale are subject to
            control.
          type: boolean
        include_credits:
          description: If set to `true`, original credit transactions are subject to
            control.
          type: boolean
        include_purchases:
          description: If set to `true`, purchases are subject to control.
          type: boolean
        include_transfers:
          description: If set to `true`, transfers are subject to control.
          type: boolean
        include_withdrawals:
          description: If set to `true`, ATM withdrawals are subject to control.
          type: boolean
        merchant_scope:
          $ref: "#/components/schemas/merchant_scope"
        name:
          description: >-
            A description of how the velocity control restricts spending, for
            example, "Max spend of $500 per day" or "Max spend of $5000 per
            month for non-exempt employees".


            Ensure that the description you provide here adequately captures the
            kind of restriction exerted by this velocity control, because the
            Marqeta platform will send this information to you in a webhook in
            the event that the transaction authorization attempt is declined by
            the velocity control.


            *NOTE:* This field is very important.

            If your program has multiple velocity controls in place, it is not
            always clear which one prevented the transaction from being
            approved.

            Adding specific details to this field gives you more contextual
            information when debugging or monitoring declined authorization
            attempts.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: The unique identifier of the velocity control resource.
          maxLength: 36
          minLength: 1
          type: string
        usage_limit:
          description: >-
            Maximum number of times a card can be used within the time period
            defined by the `velocity_window` field.


            If `velocity_window` is set to `TRANSACTION`, do not include a
            `usage_limit` in your request.
          format: int32
          minimum: -1
          type: integer
        velocity_window:
          $ref: "#/components/schemas/velocityControlUpdateRequestVelocityWindow"
      required:
        - token
      type: object
    wallet_provider_card_on_file:
      properties:
        address_verification:
          $ref: "#/components/schemas/digital_wallet_token_address_verification"
        enabled:
          default: false
          description: A value of `true` enables the type of provisioning controlled by
            the setting.
          type: boolean
      type: object
    wallet_provider_profile:
      description: Contains information held and provided by the digital wallet provider.
      properties:
        account:
          $ref: "#/components/schemas/account"
        device_score:
          description: Score from the device.
          type: string
        pan_source:
          description: Source from which the digital wallet provider obtained the card PAN.
          type: string
        reason_code:
          description: >-
            Reason for the wallet provider's provisioning decision.


            * *01* – Cardholder's wallet account is too new relative to launch.

            * *02* – Cardholder's wallet account is too new relative to
            provisioning request.

            * *03* – Cardholder's wallet account/card pair is newer than date
            threshold.

            * *04* – Changes made to account data within the account threshold.

            * *05* – Suspicious transactions linked to this account.

            * *06* – Account has not had activity in the last year.

            * *07* – Suspended cards in the secure element.

            * *08* – Device was put in lost mode in the last seven days for
            longer than the duration threshold.

            * *09* – The number of provisioning attempts on this device in 24
            hours exceeds threshold.

            * *0A* – There have been more than the threshold number of different
            cards attempted at provisioning to this phone in 24 hours.

            * *0B* – The card provisioning attempt contains a distinct name in
            excess of the threshold.

            * *0C* – The device score is less than 3.

            * *0D* – The account score is less than 4.

            * *0E* – Device provisioning location outside of the cardholder's
            wallet account home country.

            * *0G* – Suspect fraud.
          type: string
        recommendation_reasons:
          $ref: "#/components/schemas/walletProviderProfileRecommendationReasons"
        risk_assessment:
          $ref: "#/components/schemas/risk_assessment"
      type: object
    web_push_provisioning:
      properties:
        wpp_apple_card_template_id:
          type: string
        wpp_apple_partner_id:
          type: string
        wpp_google_piaid:
          type: string
      type: object
    web_push_provisioning_apple_pay_JWS_header:
      properties:
        kid:
          description: The unique identifier of the JWS Public Key of the key pair used to
            generate the signature.
          example: 8dc7aed4-29e3-41e4-9cdb-673a05e6615c
          type: string
      required:
        - kid
      type: object
    web_push_provisioning_apple_pay_JWS_model:
      properties:
        header:
          $ref: "#/components/schemas/web_push_provisioning_apple_pay_JWS_header"
        payload:
          description: JWS message payload.
          example: |-
            Encoding-BASE64URL(Value): {
                "jti": "491e392a-b03b-422d-900b-7f8e268f9718",
                "lid": "en-US",
                "iss": "ORG-ffffffff-abcd-1234-7890-ffffffffffff",
                "sub": "provisioningTarget"
                "aud": "Apple",
                "exp": 1640341542706,
                "iat": 1640337942706,
                "cti": "5c4e4dea-a841-4614-8990-eb172328317a",
            }
          type: string
        protected:
          description: JWS Protected Headers, contains the Header Parameters that are
            integrity protected by the JWS Signature.
          example: >-
            Encoding-BASE64URL(UTF8(Value)): {
                "alg": "ES256",
                "cty": "application/credential;charset=utf-8",
                "typ": "JOSE+JSON"
                "x5t#S256":"2CF24DBA5FB0A30E26E83B2AC5B9E29E1B161E5C1FA7425E73043362938B9824"
            }
          type: string
        signature:
          description: JWS Signature
          example: 5lD1znG2DD2DytqGUcSDOwJQMYbCGDCCCiXxyhpC1zOWTH1Y6jUJFAupl0jEud9nUvw3mmpuSt6zcAE1r4yb0w
          type: string
      required:
        - header
        - payload
        - protected
        - signature
      type: object
    web_push_provisioning_apple_pay_JWT_response:
      properties:
        jws:
          $ref: "#/components/schemas/web_push_provisioning_apple_pay_JWS_model"
        state:
          description: |-
            Unique state associated with the token.
            The Marqeta platform returns a UUID in this field.
          example: e2675f06-7e4d-11ec-90d6-0242ac120003
          type: string
      required:
        - jws
        - state
      type: object
    webhook:
      properties:
        endpoint:
          description: Valid URL
          maxLength: 512
          minLength: 1
          type: string
        password:
          description: Authentication password
          type: string
        secret:
          description: Authentication secret
          type: string
        username:
          description: Authentication username
          type: string
      required:
        - endpoint
        - password
        - username
      type: object
    webhook_base_model:
      properties:
        active:
          default: true
          description: Indicates whether the webhook is active.
          type: boolean
        config:
          $ref: "#/components/schemas/webhook_config_model"
        events:
          $ref: "#/components/schemas/webhookBaseModelEvents"
        name:
          description: Descriptive name of the webhook.
          maxLength: 64
          minLength: 1
          type: string
      required:
        - config
        - events
        - name
      type: object
    webhook_config_model:
      description: Contains the configuration information for the webhook.
      properties:
        basic_auth_password:
          description: Password for accessing your webhook endpoint.
          maxLength: 50
          minLength: 20
          type: string
        basic_auth_username:
          description: Username for accessing your webhook endpoint.
          maxLength: 50
          minLength: 1
          type: string
        custom_header:
          additionalProperties:
            type: string
          description: Custom headers to be passed along with the request.
          type: object
        secret:
          description: >-
            A randomly chosen string used for implementing HMAC-SHA1.


            HMAC-SHA1 provides an added layer of security by authenticating the
            message and validating message integrity.

            Using this functionality requires that your webhook endpoint verify
            the message signature.

            For information about implementing this functionality, see
            <</developer-guides/signature-verification, Signature
            Verification>>.
          maxLength: 50
          minLength: 20
          type: string
        url:
          description: URL of your webhook endpoint.
          maxLength: 255
          minLength: 1
          type: string
        use_mtls:
          default: false
          description: Set to `true` to use MTLS for the webhook.
          type: boolean
      required:
        - basic_auth_password
        - basic_auth_username
        - url
      type: object
    webhook_ping_model:
      properties:
        pings:
          $ref: "#/components/schemas/webhookPingModelPings"
      required:
        - pings
      type: object
    webhook_request_model:
      properties:
        active:
          default: true
          description: Indicates whether the webhook is active.
          type: boolean
        config:
          $ref: "#/components/schemas/webhook_config_model"
        events:
          $ref: "#/components/schemas/webhookRequestModelEvents"
        name:
          description: Descriptive name of the webhook.
          maxLength: 64
          minLength: 1
          type: string
        token:
          description: Unique identifier of the webhook.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - config
        - events
        - name
      type: object
    webhook_response_model:
      properties:
        active:
          default: true
          description: |-
            Indicates whether the webhook is active.
            This field is returned if you included it in your webhook.
          type: boolean
        config:
          $ref: "#/components/schemas/webhook_config_model"
        created_time:
          description: Date and time when the webhook event was created, in UTC.
          format: date-time
          type: string
        events:
          $ref: "#/components/schemas/webhookResponseModelEvents"
        last_modified_time:
          description: Date and time when the associated object was last modified, in UTC.
          format: date-time
          type: string
        name:
          description: Descriptive name of the webhook.
          maxLength: 64
          minLength: 1
          type: string
        token:
          description: The unique identifier of the webhook.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - config
        - events
        - name
      type: object
    withdrawal_request_model:
      properties:
        account_type:
          $ref: "#/components/schemas/withdrawalRequestModelAccountType"
        amount:
          type: number
        card_acceptor:
          $ref: "#/components/schemas/card_acceptor_model"
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        mid:
          maxLength: 50
          minLength: 1
          type: string
        pin:
          maxLength: 15
          minLength: 1
          type: string
        webhook:
          $ref: "#/components/schemas/webhook"
      required:
        - amount
        - card_token
        - mid
      type: object
    aCHListResponseData:
      description: An array of `ach_response_model` objects.
      items:
        $ref: "#/components/schemas/base_ach_response_model"
      type: array
    acceptedCountriesListResponseData:
      description: An array of `acceptedcountries` objects.
      items:
        $ref: "#/components/schemas/accepted_countries_model"
      type: array
    accountHolderGroupListResponseData:
      description: An array of account holder group objects.
      items:
        $ref: "#/components/schemas/account_holder_group_response"
      type: array
    authControlExemptMidsListResponseData:
      description: An array of objects in a returned resource.
      items:
        $ref: "#/components/schemas/auth_control_exempt_mids_response"
      type: array
    authControlListResponseData:
      description: An array of objects in a returned resource.
      items:
        $ref: "#/components/schemas/auth_control_response"
      type: array
    autoReloadListResponseData:
      description: An array of objects in a returned resource.
      items:
        $ref: "#/components/schemas/auto_reload_response_model"
      type: array
    bankTransferListResponseData:
      description: An array of ACH transfer objects.
      items:
        $ref: "#/components/schemas/bank_transfer_response_model"
      type: array
    bankTransferTransitionListResponseData:
      description: An array of ACH transfer transition objects.
      items:
        $ref: "#/components/schemas/bank_transfer_transition_response_model"
      type: array
    bulkCardOrderListResponseData:
      description: An array of objects in the returned resource.
      items:
        $ref: "#/components/schemas/bulk_issuance_response"
      type: array
    businessCardHolderListResponseData:
      description: An array of business objects.
      items:
        $ref: "#/components/schemas/business_cardholder"
      type: array
    businessTransitionListResponseData:
      description: An array of business transition objects.
      items:
        $ref: "#/components/schemas/BusinessTransitionResponse"
      type: array
    cardListResponseData:
      description: An array of card objects.
      items:
        $ref: "#/components/schemas/card_response"
      type: array
    cardProductListResponseData:
      description: An array of objects in a returned resource.
      items:
        $ref: "#/components/schemas/card_product_response"
      type: array
    cardTransitionListResponseData:
      description: An array of card transitions.
      items:
        $ref: "#/components/schemas/card_transition_response"
      type: array
    cardholderAddressListResponseData:
      description: An array of `cardholder_address_model` objects.
      items:
        $ref: "#/components/schemas/CardholderAddressResponse"
      type: array
    clearingModelNetworkFees:
      items:
        $ref: "#/components/schemas/network_fee_model"
      type: array
    commandoModeListResponseData:
      description: An array of Commando Mode control set objects.
      items:
        $ref: "#/components/schemas/commando_mode_response"
      type: array
    commandoModeTransitionListResponseData:
      description: An array of Commando Mode control set transition objects.
      items:
        $ref: "#/components/schemas/commando_mode_transition_response"
      type: array
    digitalWalletTokenListResponseData:
      items:
        $ref: "#/components/schemas/digital_wallet_token"
      type: array
    digitalWalletTokenTransitionListResponseData:
      items:
        $ref: "#/components/schemas/digital_wallet_token_transition_response"
      type: array
    directDepositAccountListResponseData:
      items:
        $ref: "#/components/schemas/direct_deposit_account_response"
      type: array
    directDepositListResponseData:
      items:
        $ref: "#/components/schemas/DepositDepositResponse"
      type: array
    directDepositTransitionListResponseData:
      items:
        $ref: "#/components/schemas/DirectDepositTransitionResponse"
      type: array
    feeListResponseData:
      description: An array of `fees` objects.
      items:
        $ref: "#/components/schemas/fee"
      type: array
    fundingAccountListResponseData:
      description: An array of `funding_account_response_model` objects.
      items:
        $ref: "#/components/schemas/funding_account_response_model"
      type: array
    gPAUnloadListResponseData:
      description: An array of GPA unload order objects.
      items:
        $ref: "#/components/schemas/gpa_returns"
      type: array
    kYCListResponseData:
      description: An array of KYC verification response objects.
      items:
        $ref: "#/components/schemas/kyc_response"
      type: array
    mCCGroupListResponseData:
      description: An array of objects in a returned resource.
      items:
        $ref: "#/components/schemas/mcc_group_model"
      type: array
    merchantGroupListResponseData:
      description: An array of merchant group objects.
      items:
        $ref: "#/components/schemas/merchant_group_response"
      type: array
    programReserveTransactionListResponseData:
      description: A list of program reserve transactions.
      items:
        $ref: "#/components/schemas/program_reserve_transaction_response"
      type: array
    programTransferListResponseData:
      description: An array of program transfer objects.
      items:
        $ref: "#/components/schemas/program_transfer_response"
      type: array
    programTransferTypeListResponseData:
      description: An array of program transfer types.
      items:
        $ref: "#/components/schemas/program_transfer_type_response"
      type: array
    pushToCardDisburseListResponseData:
      items:
        $ref: "#/components/schemas/push_to_card_disbursement_response"
      type: array
    pushToCardListResponseData:
      items:
        $ref: "#/components/schemas/push_to_card_response"
      type: array
    realTimeFeeGroupListResponseData:
      description: An array of `real_time_fee_group` objects.
      items:
        $ref: "#/components/schemas/real_time_fee_group"
      type: array
    reversalModelNetworkFees:
      items:
        $ref: "#/components/schemas/network_fee_model"
      type: array
    transactionModelListResponseData:
      description: An array of transaction objects.
      items:
        $ref: "#/components/schemas/transaction_model"
      type: array
    userCardHolderListResponseData:
      description: An array of `user` objects.
      items:
        $ref: "#/components/schemas/user_card_holder_response"
      type: array
    userCardHolderUpdateModelIdentifications:
      description: One or more objects containing identifications associated with the
        cardholder.
      items:
        $ref: "#/components/schemas/IdentificationRequestModel"
      type: array
    userTransitionListResponseData:
      description: An array of user transition objects.
      items:
        $ref: "#/components/schemas/UserTransitionResponse"
      type: array
    velocityControlBalanceListResponseData:
      description: An array of velocity control resources that include available balances.
      items:
        $ref: "#/components/schemas/velocity_control_balance_response"
      type: array
    velocityControlListResponseData:
      description: An array of velocity control resources.
      items:
        $ref: "#/components/schemas/velocity_control_response"
      type: array
    webhookResponseModelListResponseData:
      description: An array of webhooks.
      items:
        $ref: "#/components/schemas/webhook_response_model"
      type: array
    acceptedCountriesModelCountryCodes:
      description: A comma-delimited list of accepted countries by ISO 3166
        three-digit country code.
      items:
        description: The ISO 3166 three-digit numeric country code.
        type: string
      type: array
    accessTokenResponseMasterRoles:
      description: An array of master roles.
      items:
        type: string
      type: array
    authRequestModelNetworkFees:
      items:
        $ref: "#/components/schemas/network_fee_model"
      type: array
    authorizationAdviceModelNetworkFees:
      items:
        $ref: "#/components/schemas/network_fee_model"
      type: array
    balanceInquiryRequestModelNetworkFees:
      items:
        $ref: "#/components/schemas/network_fee_model"
      type: array
    bankTransferResponseModelTransitions:
      description: An array of ACH transfer transition objects.
      items:
        $ref: "#/components/schemas/bank_transfer_transition_response_model"
      type: array
    businessCardHolderResponseIdentifications:
      description: One or more objects containing identifications associated with the
        business.
      items:
        $ref: "#/components/schemas/IdentificationResponseModel"
      type: array
    businessCardHolderUpdateIdentifications:
      description: One or more objects containing identifications associated with the
        business.
      items:
        $ref: "#/components/schemas/IdentificationRequestModel"
      type: array
    businessCardholderIdentifications:
      description: One or more objects containing identifications associated with the
        business.
      items:
        $ref: "#/components/schemas/IdentificationRequestModel"
      type: array
    businessProprietorIdentifications:
      description: One or more objects containing personal identifications of the
        business proprietor or officer.
      items:
        $ref: "#/components/schemas/IdentificationRequestModel"
      type: array
    businessProprietorResponseIdentifications:
      description: One or more objects containing personal identifications of the
        business proprietor or officer.
      items:
        $ref: "#/components/schemas/IdentificationResponseModel"
      type: array
    cardHolderModelIdentifications:
      description: One or more objects containing identifications associated with the
        cardholder.
      items:
        $ref: "#/components/schemas/IdentificationRequestModel"
      type: array
    cardholderAuthenticationDataAcquirerExemption:
      description: >-
        Indicates 3D Secure authentication exemptions from the acquirer.

        This array is returned if it is included in the transaction data from
        the card network.
      items:
        type: string
      type: array
    cardholderBalancesLinks:
      description: An array of links to balances of related user GPAs.
      items:
        $ref: "#/components/schemas/link"
      type: array
      uniqueItems: true
      xml:
        wrapped: true
    commandoModeEnablesAuthControls:
      description: The unique identifiers of the authorization controls enabled while
        in Commando Mode.
      items:
        type: string
      type: array
    commandoModeEnablesVelocityControls:
      description: The unique identifiers of the velocity controls enabled while in
        Commando Mode.
      items:
        type: string
      maxItems: 2147483647
      minItems: 1
      type: array
    digitalWalletApplePayProvisionRequestCertificates:
      items:
        type: string
      type: array
    directDepositAccountRequestCustomerDueDiligence:
      description: Required if account type = Checking
      items:
        $ref: "#/components/schemas/customer_due_diligence_request"
      type: array
    feeTransferRequestFees:
      description: Contains attributes that define characteristics of one or more fees.
      items:
        $ref: "#/components/schemas/fee_model"
      type: array
      xml:
        wrapped: true
    feeTransferResponseFees:
      description: |-
        List of fees associated with the fee transfer.

        This array is returned if it exists in the resource.
      items:
        $ref: "#/components/schemas/fee_detail"
      type: array
    gpaRequestFees:
      description: List of fees associated with the funding transaction.
      items:
        $ref: "#/components/schemas/fee_model"
      type: array
      xml:
        wrapped: true
    gpaResponseFees:
      description: |-
        List of fees associated with the GPA order.

        This array is returned if it exists in the resource.
      items:
        $ref: "#/components/schemas/fee_detail"
      type: array
      xml:
        wrapped: true
    issuerFraudViewRiskcontrolTags:
      items:
        $ref: "#/components/schemas/riskcontrol_tags"
      type: array
    issuerFraudViewRuleViolations:
      items:
        type: string
      type: array
    jitFundingApiIncrementalAuthorizationJitFundingTokens:
      description: An array of JIT funding tokens for incremental authorization requests.
      items:
        type: string
      type: array
    mccGroupModelMccs:
      description: >-
        The set of merchant category codes that you want to include in this
        group. 

        For each element, valid characters are 0-9, and the length must be 4
        digits. 

        You can also specify a range like "9876-9880". 

        An MCC can belong to more than one group.
      items:
        properties: {}
        type: object
      maxItems: 500
      minItems: 0
      type: array
      uniqueItems: true
    mccGroupUpdateModelMccs:
      description: >-
        The set of merchant category codes that you want to include in this
        group. 

        For each element, valid characters are 0-9, and the length must be 4
        digits. 

        You can also specify a range like "9876-9880". 

        An MCC can belong to more than one group.


        Updating the merchant category codes for the group completely replaces
        the group's existing codes. 

        For example, if the current MCC group is `["1234"]` and you want to add
        the 2345 code (while retaining the existing code), you must specify
        `["1234", "2345"]` in this field.
      items:
        type: string
      maxItems: 500
      minItems: 1
      type: array
      uniqueItems: true
    merchantGroupRequestMids:
      description: |-
        A comma-separated list of alphanumeric merchant identifiers.
        You can include merchant identifiers in multiple merchant groups.
      items:
        type: string
      maxItems: 4000
      minItems: 1
      type: array
      uniqueItems: true
    merchantGroupResponseMids:
      description: A comma-separated list of alphanumeric merchant identifiers.
      items:
        type: string
      type: array
    merchantGroupUpdateRequestMids:
      description: |-
        A comma-separated list of alphanumeric merchant identifiers.
        You can include merchant identifiers in multiple merchant groups.
      items:
        type: string
      maxItems: 4000
      minItems: 1
      type: array
      uniqueItems: true
    pingResponseSystemComponents:
      items:
        $ref: "#/components/schemas/HealthCheckResult"
      type: array
      uniqueItems: true
    programTransferFees:
      description: Contains attributes that define characteristics of one or more fees.
      items:
        $ref: "#/components/schemas/fee_model"
      type: array
      xml:
        wrapped: true
    programTransferResponseFees:
      description: |-
        List of fees associated with the program transfer.

        This array is returned if it exists in the resource.
      items:
        $ref: "#/components/schemas/fee_detail"
      type: array
      xml:
        wrapped: true
    realTimeFeeGroupFeeTokens:
      description: An array of unique fee identifiers.
      items:
        type: string
      type: array
      uniqueItems: true
    realTimeFeeGroupCreateRequestFeeTokens:
      description: >-
        Specifies the fees in this real-time fee group.


        No two fees in the group can be applicable to the same transaction type
        (in other words, each fee must have a different value for its
        `real_time_assessment.transaction_type` field). 
      items:
        type: string
      type: array
      uniqueItems: true
    realTimeFeeGroupRequestFeeTokens:
      description: >-
        Specifies the fees in this real-time fee group.


        No two fees in the group can be applicable to the same transaction type
        (in other words, each fee must have a different value for its
        `real_time_assessment.transaction_type` field). 
      items:
        type: string
      type: array
      uniqueItems: true
    resultCodes:
      description: An array of KYC verification result code objects.
      items:
        $ref: "#/components/schemas/result_code"
      type: array
    riskcontrolTagsValues:
      items:
        type: string
      type: array
    transactionCardAcceptorMccGroups:
      description: An array of `mcc_groups`.
      items:
        type: string
      type: array
    transactionModelFees:
      description: |-
        List of fees associated with the transaction.

        This array is returned if it exists in the resource.
      items:
        $ref: "#/components/schemas/network_fee_model"
      type: array
    transactionModelIncrementalAuthorizationTransactionTokens:
      description: An array of incremental authorization transaction tokens.
      items:
        type: string
      type: array
    transactionModelMsaOrders:
      description: |-
        MSA orders are no longer supported.
        Do not use.
      items:
        $ref: "#/components/schemas/msa_order_response"
      type: array
    transactionModelOfferOrders:
      description: |-
        Offer orders are no longer supported.
        Do not use.
      items:
        $ref: "#/components/schemas/offer_order_response"
      type: array
    userCardHolderResponseIdentifications:
      description: One or more objects containing identifications associated with the
        cardholder.
      items:
        $ref: "#/components/schemas/IdentificationResponseModel"
      type: array
    walletProviderProfileRecommendationReasons:
      description: An array of recommendation reasons from the digital wallet provider.
      items:
        type: string
      type: array
    webhookBaseModelEvents:
      description: >-
        Specifies the types of events for which notifications are sent.


        The wildcard character `\*` indicates that you receive all webhook
        notifications, or all notifications of a specified category.

        For example, `\*` indicates that you receive all webhook notifications;
        `transaction.*` indicates that you receive all `transaction` webhook
        notifications.


        *NOTE:* You can only use the wildcard character with the _base_ type
        events, not subcategories. 

        For example, you cannot subscribe to `cardtransition.fulfillment.\*`
        events, but you can subscribe to `cardtransition.*`.
      items:
        type: string
      type: array
    webhookPingModelPings:
      description: An array of ping requests to your webhook endpoint.
      items:
        $ref: "#/components/schemas/echo_ping_request"
      type: array
    webhookRequestModelEvents:
      description: >-
        Specifies the types of events for which notifications are sent.


        The wildcard character `\*` indicates that you receive all webhook
        notifications, or all notifications of a specified category.

        For example, `\*` indicates that you receive all webhook notifications;
        `transaction.*` indicates that you receive all `transaction` webhook
        notifications.


        *NOTE:* You can only use the wildcard character with the _base_ type
        events, not subcategories. 

        For example, you cannot subscribe to `cardtransition.fulfillment.\*`
        events, but you can subscribe to `cardtransition.*`.
      items:
        type: string
      type: array
    webhookResponseModelEvents:
      description: >-
        Specifies the types of events for which notifications are sent.


        The wildcard character `\*` indicates that you receive all webhook
        notifications, or all notifications of a specified category.

        For example, `\*` indicates that you receive all webhook notifications;
        `transaction.*` indicates that you receive all `transaction` webhook
        notifications.


        *NOTE:* You can only use the wildcard character with the _base_ type
        events, not subcategories. 

        For example, you cannot subscribe to `cardtransition.fulfillment.\*`
        events, but you can subscribe to `cardtransition.*`.
      items:
        type: string
      type: array
    getBalancesTokenMsasSortBy:
      enum:
        - name
      type: string
    getUserDirectDepositAccountsState:
      enum:
        - ACTIVE
        - SUSPENDED
        - TERMINATED
        - UNSUPPORTED
        - UNACTIVATED
        - LIMITED
      type: string
    getDigitalwallettokensEmbed:
      enum:
        - user
      type: string
    getDirectdepositsDirectDepositState:
      enum:
        - PENDING
        - APPLIED
        - REVERSED
        - REJECTED
      type: string
    getTransactionsSortBy:
      default: -user_transaction_time
      enum:
        - -created_time
        - created_time
        - -user_transaction_time
        - user_transaction_time
      type: string
    getTransactionsFundingsourceFundingsourcetokenSortBy:
      default: -user_transaction_time
      enum:
        - -created_time
        - created_time
        - -user_transaction_time
        - user_transaction_time
      type: string
    getTransactionsFundingsourceFundingsourcetokenPolarity:
      enum:
        - CREDIT
        - DEBIT
        - PENDING_CREDIT
        - PENDING_DEBIT
      type: string
    getTransactionsTokenRelatedSortBy:
      default: -user_transaction_time
      enum:
        - -created_time
        - created_time
        - -user_transaction_time
        - user_transaction_time
      type: string
    postWebhooksTokenEventtypeEventtokenEventType:
      enum:
        - chargebacktransition
        - digitalwallettokentransition
        - cardtransition
        - usertransition
        - businesstransition
        - transaction
      type: string
    authenticationLastPasswordUpdateChannel:
      description: Specifies the channel through which the password was last changed.
      enum:
        - USER_CHANGE
        - USER_RESET
      type: string
    businessTransitionRequestChannel:
      description: The mechanism by which the transaction was initiated.
      enum:
        - API
        - IVR
        - FRAUD
        - ADMIN
        - SYSTEM
      type: string
    businessTransitionRequestReasonCode:
      description: >-
        Identifies the standardized reason for the transition:


        *00:* Object activated for the first time.


        *01:* Requested by you.


        *02:* Inactivity over time.


        *03:* This address cannot accept mail or the addressee is unknown.


        *04:* Negative account balance.


        *05:* Account under review.


        *06:* Suspicious activity was identified.


        *07:* Activity outside the program parameters was identified.


        *08:* Confirmed fraud was identified.


        *09:* Matched with an Office of Foreign Assets Control list.


        *10:* Card was reported lost.


        *11:* Card information was cloned.


        *12:* Account or card information was compromised.


        *13:* Temporary status change while on hold/leave.


        *14:* Initiated by Marqeta.


        *15:* Initiated by issuer.


        *16:* Card expired.


        *17:* Failed KYC.


        *18:* Changed to `ACTIVE` because information was properly validated.


        *19:* Changed to `ACTIVE` because account activity was properly
        validated.


        *20:* Change occurred prior to the normalization of reason codes.


        *21:* Initiated by a third party, often a digital wallet provider.


        *22:* PIN retry limit reached.


        *23:* Card was reported stolen.


        *24:* Address issue.


        *25:* Name issue.


        *26:* SSN issue.


        *27:* DOB issue.


        *28:* Email issue.


        *29:* Phone issue.


        *30:* Account/fulfillment mismatch.


        *31:* Other reason.
      enum:
        - "00"
        - "01"
        - "02"
        - "03"
        - "04"
        - "05"
        - "06"
        - "07"
        - "08"
        - "09"
        - "10"
        - "11"
        - "12"
        - "13"
        - "14"
        - "15"
        - "16"
        - "17"
        - "18"
        - "19"
        - "20"
        - "21"
        - "22"
        - "23"
        - "24"
        - "25"
        - "26"
        - "27"
        - "28"
        - "29"
        - "30"
        - "31"
      type: string
    businessTransitionRequestStatus:
      description: Specifies the new status of the business.
      enum:
        - UNVERIFIED
        - LIMITED
        - ACTIVE
        - SUSPENDED
        - CLOSED
      type: string
    businessTransitionResponseChannel:
      description: The mechanism by which the transaction was initiated.
      enum:
        - API
        - IVR
        - FRAUD
        - ADMIN
        - SYSTEM
      type: string
    businessTransitionResponseReasonCode:
      description: >-
        Identifies the standardized reason for the transition:


        *00:* Object activated for the first time.


        *01:* Requested by you.


        *02:* Inactivity over time.


        *03:* This address cannot accept mail or the addressee is unknown.


        *04:* Negative account balance.


        *05:* Account under review.


        *06:* Suspicious activity was identified.


        *07:* Activity outside the program parameters was identified.


        *08:* Confirmed fraud was identified.


        *09:* Matched with an Office of Foreign Assets Control list.


        *10:* Card was reported lost.


        *11:* Card information was cloned.


        *12:* Account or card information was compromised.


        *13:* Temporary status change while on hold/leave.


        *14:* Initiated by Marqeta.


        *15:* Initiated by issuer.


        *16:* Card expired.


        *17:* Failed KYC.


        *18:* Changed to `ACTIVE` because information was properly validated.


        *19:* Changed to `ACTIVE` because account activity was properly
        validated.


        *20:* Change occurred prior to the normalization of reason codes.


        *21:* Initiated by a third party, often a digital wallet provider.


        *22:* PIN retry limit reached.


        *23:* Card was reported stolen.


        *24:* Address issue.


        *25:* Name issue.


        *26:* SSN issue.


        *27:* DOB issue.


        *28:* Email issue.


        *29:* Phone issue.


        *30:* Account/fulfillment mismatch.


        *31:* Other reason.
      enum:
        - "00"
        - "01"
        - "02"
        - "03"
        - "04"
        - "05"
        - "06"
        - "07"
        - "08"
        - "09"
        - "10"
        - "11"
        - "12"
        - "13"
        - "14"
        - "15"
        - "16"
        - "17"
        - "18"
        - "19"
        - "20"
        - "21"
        - "22"
        - "23"
        - "24"
        - "25"
        - "26"
        - "27"
        - "28"
        - "29"
        - "30"
        - "31"
      type: string
    businessTransitionResponseStatus:
      description: Specifies the status of the business.
      enum:
        - UNVERIFIED
        - LIMITED
        - ACTIVE
        - SUSPENDED
        - CLOSED
      type: string
    cardFulfillmentResponseCardFulfillmentReason:
      description: Specifies the reason for card fulfillment.
      enum:
        - NEW
        - LOST_STOLEN
        - EXPIRED
      type: string
    depositDepositResponseState:
      description: Current status of the direct deposit record.
      enum:
        - PENDING
        - APPLIED
        - REVERSED
        - REJECTED
      type: string
    depositDepositResponseType:
      description: Determines whether funds are being debited from or credited to the
        account.
      enum:
        - CREDIT
        - DEBIT
      type: string
    directDepositRequestType:
      enum:
        - CREDIT
        - DEBIT
      type: string
    directDepositTransitionRequestChannel:
      enum:
        - API
        - SYSTEM
        - PROD_SUPPORT
      type: string
    directDepositTransitionRequestReasonCode:
      enum:
        - R01
        - R02
        - R03
        - R04
        - R06
        - R08
        - R09
        - R10
        - R11
        - R14
        - R15
        - R16
        - R17
        - R18
        - R20
        - R23
        - R24
        - R29
      type: string
    directDepositTransitionRequestState:
      enum:
        - PENDING
        - APPLIED
        - REVERSED
        - REJECTED
      type: string
    directDepositTransitionResponseChannel:
      enum:
        - API
        - IVR
        - FRAUD
        - ADMIN
        - SYSTEM
        - NETWORK
        - PROD_SUPPORT
        - UNSUPPORTED
      type: string
    directDepositTransitionResponseState:
      enum:
        - PENDING
        - APPLIED
        - REVERSED
        - REJECTED
      type: string
    identificationRequestModelType:
      description: >-
        The form of identification.


        *NOTE:* Full SSN is required for KYC verification (US-based cardholders
        only).

        Nine digits only, no delimiters.

        `123456789`, for example.
      enum:
        - SSN
        - TIN
        - SIN
        - NIN
        - PASSPORT_NUMBER
        - DRIVERS_LICENSE
        - BUSINESS_NUMBER
        - BUSINESS_TAX_ID
        - TAXPAYER_REFERENCE
      readOnly: true
      type: string
    identificationRequestModel1Type:
      description: >-
        The form of identification.


        *NOTE:* Full SSN is required for KYC verification (US-based cardholders
        only).

        Nine digits only, no delimiters.

        `123456789`, for example.
      enum:
        - SSN
        - TIN
        - SIN
        - NIN
        - PASSPORT_NUMBER
        - DRIVERS_LICENSE
        - BUSINESS_NUMBER
        - BUSINESS_TAX_ID
        - TAXPAYER_REFERENCE
      readOnly: true
      type: string
    identificationResponseModelType:
      description: The form of identification.
      enum:
        - SSN
        - TIN
        - SIN
        - NIN
        - PASSPORT_NUMBER
        - DRIVERS_LICENSE
        - BUSINESS_NUMBER
        - BUSINESS_TAX_ID
        - TAXPAYER_REFERENCE
      readOnly: true
      type: string
    realTimeFeeAssessmentRequestTransactionType:
      description: Indicates the type of transactions on which the fee is assessed.
      enum:
        - authorization
        - pindebit.atm.withdrawal
        - pindebit
      type: string
    shippingInformationResponseMethod:
      description: Shipping company and shipping service level.
      enum:
        - LOCAL_MAIL
        - LOCAL_MAIL_PACKAGE
        - GROUND
        - TWO_DAY
        - OVERNIGHT
        - INTERNATIONAL
        - FEDEX_EXPEDITED
        - FEDEX_REGULAR
        - UPS_EXPEDITED
        - UPS_REGULAR
        - USPS_EXPEDITED
        - USPS_REGULAR
      type: string
    userCardHolderUpdateModelGender:
      description: Cardholder's gender.
      enum:
        - F
        - M
      maxLength: 1
      minLength: 0
      type: string
    userTransitionRequestChannel:
      description: The mechanism by which the transaction was initiated.
      enum:
        - API
        - IVR
        - FRAUD
        - ADMIN
        - SYSTEM
      type: string
    userTransitionRequestReasonCode:
      description: >-
        Identifies the standardized reason for the transition:

        *00:* Object activated for the first time.

        *01:* Requested by you.

        *02:* Inactivity over time.

        *03:* This address cannot accept mail or the addressee is unknown.

        *04:* Negative account balance.

        *05:* Account under review.

        *06:* Suspicious activity was identified.

        *07:* Activity outside the program parameters was identified.

        *08:* Confirmed fraud was identified.

        *09:* Matched with an Office of Foreign Assets Control list.

        *10:* Card was reported lost.

        *11:* Card information was cloned.

        *12:* Account or card information was compromised.

        *13:* Temporary status change while on hold/leave.

        *14:* Initiated by Marqeta.

        *15:* Initiated by issuer.

        *16:* Card expired.

        *17:* Failed KYC.

        *18:* Changed to `ACTIVE` because information was properly validated.

        *19:* Changed to `ACTIVE` because account activity was properly
        validated.

        *20:* Change occurred prior to the normalization of reason codes.

        *21:* Initiated by a third party, often a digital wallet provider.

        *22:* PIN retry limit reached.

        *23:* Card was reported stolen.

        *24:* Address issue.

        *25:* Name issue.

        *26:* SSN issue.

        *27:* DOB issue.

        *28:* Email issue.

        *29:* Phone issue.

        *30:* Account/fulfillment mismatch.

        *31:* Other reason. 
      enum:
        - "00"
        - "01"
        - "02"
        - "03"
        - "04"
        - "05"
        - "06"
        - "07"
        - "08"
        - "09"
        - "10"
        - "11"
        - "12"
        - "13"
        - "14"
        - "15"
        - "16"
        - "17"
        - "18"
        - "19"
        - "20"
        - "21"
        - "22"
        - "23"
        - "24"
        - "25"
        - "26"
        - "27"
        - "28"
        - "29"
        - "30"
        - "31"
      type: string
    userTransitionRequestStatus:
      description: Specifies the new status of the user.
      enum:
        - UNVERIFIED
        - LIMITED
        - ACTIVE
        - SUSPENDED
        - CLOSED
      type: string
    userTransitionResponseChannel:
      description: The mechanism by which the transaction was initiated.
      enum:
        - API
        - IVR
        - FRAUD
        - ADMIN
        - SYSTEM
      type: string
    userTransitionResponseReasonCode:
      description: >-
        Identifies the standardized reason for the transition:

        *00:* Object activated for the first time.

        *01:* Requested by you.

        *02:* Inactivity over time.

        *03:* This address cannot accept mail or the addressee is unknown.

        *04:* Negative account balance.

        *05:* Account under review.

        *06:* Suspicious activity was identified.

        *07:* Activity outside the program parameters was identified.

        *08:* Confirmed fraud was identified.

        *09:* Matched with an Office of Foreign Assets Control list.

        *10:* Card was reported lost.

        *11:* Card information was cloned.

        *12:* Account or card information was compromised.

        *13:* Temporary status change while on hold/leave.

        *14:* Initiated by Marqeta.

        *15:* Initiated by issuer.

        *16:* Card expired.

        *17:* Failed KYC.

        *18:* Changed to `ACTIVE` because information was properly validated.

        *19:* Changed to `ACTIVE` because account activity was properly
        validated.

        *20:* Change occurred prior to the normalization of reason codes.

        *21:* Initiated by a third party, often a digital wallet provider.

        *22:* PIN retry limit reached.

        *23:* Card was reported stolen.

        *24:* Address issue.

        *25:* Name issue.

        *26:* SSN issue.

        *27:* DOB issue.

        *28:* Email issue.

        *29:* Phone issue.

        *30:* Account/fulfillment mismatch.

        *31:* Other reason. 
      enum:
        - "00"
        - "01"
        - "02"
        - "03"
        - "04"
        - "05"
        - "06"
        - "07"
        - "08"
        - "09"
        - "10"
        - "11"
        - "12"
        - "13"
        - "14"
        - "15"
        - "16"
        - "17"
        - "18"
        - "19"
        - "20"
        - "21"
        - "22"
        - "23"
        - "24"
        - "25"
        - "26"
        - "27"
        - "28"
        - "29"
        - "30"
        - "31"
      type: string
    userTransitionResponseStatus:
      description: Specifies the new status of the user.
      enum:
        - UNVERIFIED
        - LIMITED
        - ACTIVE
        - SUSPENDED
        - CLOSED
      type: string
    accountFundingFundingSource:
      enum:
        - CREDIT
        - DEBIT
        - PREPAID
        - DEPOSIT_ACCOUNT
        - CASH
        - MOBILE_MONEY_ACCOUNT
        - NON_VISA_CREDIT
      type: string
    accountFundingReceiverAccountType:
      enum:
        - OTHER
        - RTN_BANK_ACCOUNT
        - IBAN
        - CARD_ACCOUNT
        - EMAIL
        - PHONE_NUMBER
        - BANK_ACCOUNT_NUMBER_AND_BANK_IDENTIFICATION_CODE
        - WALLET_ID
        - SOCIAL_NETWORK_ID
      type: string
    accountFundingTransactionType:
      enum:
        - ACCOUNT_TO_ACCOUNT
        - PERSON_TO_PERSON
        - WALLET_TRANSFER
        - MONEY_TRANSFER_BY_BANK
        - BUSINESS_TO_BUSINESS
        - DISBURSEMENT
        - GOVERNMENT_DISBURSEMENT
        - GAMBLING_PAYOUT
        - LOYALTY
        - MERCHANT_DISBURSEMENT
        - ONLINE_GAMBLING_PAYOUT
        - PENSION_DISBURSEMENT
        - PREPAID_LOADS
        - CARD_BILL_PAYMENT
        - BILL_PAYMENT
        - CASH_CLAIM
        - CASH_IN
        - CASH_OUT
        - MOBILE_AIR_TIME_PAYMENT
        - MONEY_TRANSFER_BY_MERCHANT
        - FACE_TO_FACE_MERCHANT_PAYMENT
        - GOVERNMENT_PAYMENT
        - PAYMENTS_GOODS_SERVICES
        - FUNDS_TRANSFER
        - GENERAL_BUSINESS_TO_BUSINESS_TRANSFER
        - BUSINESS_TO_BUSINESS_TRANSFER
        - CASH_DEPOSIT
      type: string
    accountHolderGroupConfigKycRequired:
      description: If set to `ALWAYS`, new account holders are created in an
        `UNVERIFIED` status and must pass identity verification (KYC) before
        they can be active; if set to `CONDITIONAL`, new account holders begin
        in a `LIMITED` status and have limited actions available before passing
        identity verification; if set to `NEVER`, new account holders are
        created in an active state.
      enum:
        - ALWAYS
        - CONDITIONAL
        - NEVER
      type: string
    achModelAccountType:
      description: The type of account.
      enum:
        - checking
        - savings
        - corporate
        - loan
      type: string
    achPartnerRequestModelPartner:
      enum:
        - PLAID
      type: string
    balanceInquiryRequestModelAccountType:
      enum:
        - checking
        - savings
        - credit
      type: string
    bankTransferRequestModelStandardEntryClassCode:
      description: |-
        Three-letter code identifying the type of entry.

        * *WEB* — Internet-initiated entry
        * *PPD* — Prearranged Payment and Deposit
        * *CCD* — Cash Concentration and Disbursement
      enum:
        - WEB
        - PPD
        - CCD
      type: string
    bankTransferRequestModelTransferSpeed:
      description: |-
        Specifies how quickly to initiate the ACH transfer.

        *NOTE:* Same-day transfers are limited to a maximum amount of $100,000.
      enum:
        - STANDARD
        - SAME_DAY
      type: string
    bankTransferRequestModelType:
      description: Specifies whether the ACH transfer is a push (credit) or pull (debit).
      enum:
        - PUSH
        - PULL
      type: string
    bankTransferResponseModelStandardEntryClassCode:
      description: |-
        Three-letter code identifying the type of entry.

        * *WEB* — Internet-initiated entry
        * *PPD* — Prearranged Payment and Deposit
        * *CCD* — Cash Concentration and Disbursement
      enum:
        - WEB
        - PPD
        - CCD
      type: string
    bankTransferResponseModelStatus:
      description: New state of the ACH transfer.
      enum:
        - INITIATED
        - PENDING
        - PROCESSING
        - SUBMITTED
        - RETURNED
        - COMPLETED
        - ERROR
        - CANCELLED
      type: string
    bankTransferResponseModelTransferSpeed:
      description: |-
        Specifies how quickly to initiate the ACH transfer.

        *NOTE:* Same-day transfers are limited to a maximum amount of $100,000.
      enum:
        - STANDARD
        - SAME_DAY
      type: string
    bankTransferResponseModelType:
      description: Specifies whether the ACH transfer is a push (credit) or pull (debit).
      enum:
        - PUSH
        - PULL
      type: string
    bankTransferTransitionRequestModelChannel:
      description: Mechanism by which the transaction was initiated.
      enum:
        - API
        - SYSTEM
      type: string
    bankTransferTransitionRequestModelStatus:
      description: >-
        New state of the ACH transfer.

        *NOTE:* In production environments, the only value to which you are
        allowed to transition an ACH transfer is `CANCELLED`.
      enum:
        - PENDING
        - PROCESSING
        - SUBMITTED
        - RETURNED
        - COMPLETED
        - CANCELLED
      type: string
    bankTransferTransitionResponseModelChannel:
      description: Mechanism by which the transaction was initiated.
      enum:
        - API
        - SYSTEM
      type: string
    bankTransferTransitionResponseModelStatus:
      description: New state of the ACH transfer.
      enum:
        - PENDING
        - PROCESSING
        - SUBMITTED
        - RETURNED
        - COMPLETED
        - CANCELLED
      type: string
    baseAchRequestModelAccountType:
      description: The type of account.
      enum:
        - checking
        - savings
        - corporate
        - loan
      type: string
    businessCardHolderResponseStatus:
      description: Specifies the state of the business on the Marqeta platform.
      enum:
        - UNVERIFIED
        - LIMITED
        - ACTIVE
        - SUSPENDED
        - CLOSED
      type: string
    businessIncorporationIncorporationType:
      description: >-
        Organizational structure of the business, such as corporation or sole
        proprietorship.


        This field is required for KYC verification (US-based accounts only).
      enum:
        - LLC
        - CORPORATION
        - SOLE_PROPRIETORSHIP
        - PARTNERSHIP
        - COOPERATIVE
        - OTHER
      maxLength: 255
      minLength: 0
      type: string
    businessIncorporationResponseIncorporationType:
      description: Organizational structure of the business (corporation or sole
        proprietorship, for example).
      enum:
        - LLC
        - CORPORATION
        - SOLE_PROPRIETORSHIP
        - PARTNERSHIP
        - OTHER
      maxLength: 255
      minLength: 0
      type: string
    cardHolderModelGender:
      description: The gender of the cardholder.
      enum:
        - F
        - M
      maxLength: 1
      minLength: 0
      type: string
    cardPersonalizationPersoType:
      description: Specifies the method for printing personalized text on the card.
      enum:
        - EMBOSS
        - LASER
        - FLAT
      type: string
    cardProductFulfillmentFulfillmentProvider:
      default: PERFECTPLASTIC
      description: >-
        Specifies the fulfillment provider.


        *NOTE:* Expedited processing is available for cards that are fulfilled
        by link:http://perfectplastic.com/[Perfect Plastic Printing,
        window="_blank"], link:http://www.idemia.com[IDEMIA, window="_blank"],
        and link:https://www.arroweye.com/[Arroweye Solutions, window="_blank"].

        You can expedite an order's processing by using the `expedite` field of
        the <</core-api/cards, card>> or <</core-api/bulk-card-orders,
        bulkissuance>> object.

        Contact your Marqeta representative for information regarding the cost
        of expedited service.
      enum:
        - PERFECTPLASTIC
        - ARROWEYE
        - IDEMIA
        - IDEMIA_UK
        - IDEMIA_FR
        - IDEMIA_CZ
        - IDEMIA_APAC
        - IDEMIA_PL
        - IDEMIA_AU
        - IDEMIA_LA
        - GEMALTO
        - NITECREST
        - OBERTHUR
        - ALLPAY
      type: string
    cardProductFulfillmentPaymentInstrument:
      default: PHYSICAL_MSR
      description: Specifies the physical form cards of this card product type will take.
      enum:
        - PHYSICAL_MSR
        - PHYSICAL_ICC
        - PHYSICAL_CONTACTLESS
        - PHYSICAL_COMBO
        - VIRTUAL_PAN
      type: string
    cardResponseFulfillmentStatus:
      description: Status of the card fulfillment.
      enum:
        - ISSUED
        - ORDERED
        - REORDERED
        - REJECTED
        - SHIPPED
        - DELIVERED
        - DIGITALLY_PRESENTED
      type: string
    cardResponseInstrumentType:
      description: >-
        The instrument type of the card:


        * *PHYSICAL_MSR:* A physical card with a magnetic stripe. This is the
        default physical card type.

        * *PHYSICAL_ICC:* A physical card with an integrated circuit, or "chip."

        * *PHYSICAL_CONTACTLESS:* A physical card that uses radio frequency
        identification (RFID) or near-field communication (NFC) to enable
        payment over a secure radio interface.

        * *PHYSICAL_COMBO:* A physical card with a chip that also supports
        contactless payments.

        * *VIRTUAL_PAN:* A virtual card with a PAN.
      enum:
        - PHYSICAL_MSR
        - PHYSICAL_ICC
        - PHYSICAL_CONTACTLESS
        - PHYSICAL_COMBO
        - VIRTUAL_PAN
      type: string
    cardResponseState:
      description: State of the card.
      enum:
        - ACTIVE
        - SUSPENDED
        - TERMINATED
        - UNSUPPORTED
        - UNACTIVATED
        - LIMITED
      type: string
    cardSecurityCodeVerificationType:
      description: >-
        Indicates the type of security code.

        Can have these possible values:


        * *CVV1* – the security code stored in the magnetic stripe on the card.

        * *CVV2* – the security code printed on the card.

        * *ICVV* – the security code stored on the chip of the card.

        * *DCVV* – a dynamic security code used in some contactless payments
        when a card or device is tapped against the card reader.
      enum:
        - CVV1
        - CVV2
        - ICVV
      type: string
    cardTransitionRequestChannel:
      description: >-
        The mechanism by which the transition was initiated.


        * *ADMIN* - Indicates that the card transition was initiated through the
        Marqeta Dashboard.

        * *API* - Indicates that the card transition was initiated by you
        through the Core API.

        Use this value when creating a card transition with an API `POST`
        request.

        * *FRAUD* - Indicates that either Marqeta or the card network has
        determined that the card is fraudulent.

        * *IVR* - Indicates that the card transition was initiated through your
        Interactive Voice Response system.

        * *SYSTEM* - Indicates that the card transition was initiated by
        Marqeta.

        For example, Marqeta suspended the card due to excessive failed PIN
        entries.
      enum:
        - API
        - IVR
        - FRAUD
        - ADMIN
        - SYSTEM
      type: string
    cardTransitionRequestReasonCode:
      description: >-
        A standard code describing the reason for the transition:


        * *00:* Object activated for the first time

        * *01:* Requested by you

        * *02:* Inactivity over time

        * *03:* This address cannot accept mail or the addressee is unknown

        * *04:* Negative account balance

        * *05:* Account under review

        * *06:* Suspicious activity was identified

        * *07:* Activity outside the program parameters was identified

        * *08:* Confirmed fraud was identified

        * *09:* Matched with an Office of Foreign Assets Control list

        * *10:* Card was reported lost

        * *11:* Card information was cloned

        * *12:* Account or card information was compromised

        * *13:* Temporary status change while on hold/leave

        * *14:* Initiated by Marqeta

        * *15:* Initiated by issuer

        * *16:* Card expired

        * *17:* Failed KYC

        * *18:* Changed to `ACTIVE` because information was properly validated

        * *19:* Changed to `ACTIVE` because account activity was properly
        validated

        * *20:* Change occurred prior to the normalization of reason codes

        * *21:* Initiated by a third party, often a digital wallet provider

        * *22:* PIN retry limit reached

        * *23:* Card was reported stolen

        * *24:* Address issue

        * *25:* Name issue

        * *26:* SSN issue

        * *27:* DOB issue

        * *28:* Email issue

        * *29:* Phone issue

        * *30:* Account/fulfillment mismatch

        * *31:* Other reason
      enum:
        - "00"
        - "01"
        - "02"
        - "03"
        - "04"
        - "05"
        - "06"
        - "07"
        - "08"
        - "09"
        - "10"
        - "11"
        - "12"
        - "13"
        - "14"
        - "15"
        - "16"
        - "17"
        - "18"
        - "19"
        - "20"
        - "21"
        - "22"
        - "23"
        - "24"
        - "25"
        - "26"
        - "27"
        - "28"
        - "29"
        - "30"
        - "31"
      type: string
    cardTransitionRequestState:
      description: Specifies the new state.
      enum:
        - ACTIVE
        - SUSPENDED
        - TERMINATED
      readOnly: true
      type: string
    cardTransitionResponseChannel:
      description: >-
        The mechanism by which the transition was initiated.


        * *ADMIN* - Indicates that the card transition was initiated through the
        Marqeta Dashboard.

        * *API* - Indicates that the card transition was initiated by you
        through the Core API.

        Use this value when creating a card transition with an API `POST`
        request.

        * *FRAUD* - Indicates that either Marqeta or the card network has
        determined that the card is fraudulent.

        * *IVR* - Indicates that the card transition was initiated through your
        Interactive Voice Response system.

        * *SYSTEM* - Indicates that the card transition was initiated by
        Marqeta.

        For example, Marqeta suspended the card due to excessive failed PIN
        entries.
      enum:
        - API
        - IVR
        - FRAUD
        - ADMIN
        - SYSTEM
      type: string
    cardTransitionResponseFulfillmentStatus:
      description: >-
        Provides status information about the card related to order and
        delivery.


        The possible fulfillment states are:


        * *ISSUED:* Initial state of all newly created/issued cards

        * *ORDERED:* Card ordered through card fulfillment provider

        * *REJECTED:* Card rejected by card fulfillment provider

        * *SHIPPED:* Card shipped by card fulfillment provider

        * *DELIVERED:* Card delivered by the card fulfillment provider.

        * *DIGITALLY_PRESENTED:* Card digitally presented using the
        `/cards/{token}/showpan` endpoint; does not affect the delivery of
        physical cards
      enum:
        - ISSUED
        - ORDERED
        - REJECTED
        - SHIPPED
        - DELIVERED
        - DIGITALLY_PRESENTED
      type: string
    cardTransitionResponseReasonCode:
      description: >-
        A standard code describing the reason for the transition:


        * *00:* Object activated for the first time

        * *01:* Requested by you

        * *02:* Inactivity over time

        * *03:* This address cannot accept mail or the addressee is unknown

        * *04:* Negative account balance

        * *05:* Account under review

        * *06:* Suspicious activity was identified

        * *07:* Activity outside the program parameters was identified

        * *08:* Confirmed fraud was identified

        * *09:* Matched with an Office of Foreign Assets Control list

        * *10:* Card was reported lost

        * *11:* Card information was cloned

        * *12:* Account or card information was compromised

        * *13:* Temporary status change while on hold/leave

        * *14:* Initiated by Marqeta

        * *15:* Initiated by issuer

        * *16:* Card expired

        * *17:* Failed KYC

        * *18:* Changed to `ACTIVE` because information was properly validated

        * *19:* Changed to `ACTIVE` because account activity was properly
        validated

        * *20:* Change occurred prior to the normalization of reason codes

        * *21:* Initiated by a third party, often a digital wallet provider

        * *22:* PIN retry limit reached

        * *23:* Card was reported stolen

        * *24:* Address issue

        * *25:* Name issue

        * *26:* SSN issue

        * *27:* DOB issue

        * *28:* Email issue

        * *29:* Phone issue

        * *30:* Account/fulfillment mismatch

        * *31:* Other reason
      enum:
        - "00"
        - "01"
        - "02"
        - "03"
        - "04"
        - "05"
        - "06"
        - "07"
        - "08"
        - "09"
        - "10"
        - "11"
        - "12"
        - "13"
        - "14"
        - "15"
        - "16"
        - "17"
        - "18"
        - "19"
        - "20"
        - "21"
        - "22"
        - "23"
        - "24"
        - "25"
        - "26"
        - "27"
        - "28"
        - "29"
        - "30"
        - "31"
      type: string
    cardTransitionResponseState:
      description: Indicates the state of the card.
      enum:
        - ACTIVE
        - SUSPENDED
        - TERMINATED
        - UNACTIVATED
      type: string
    cardTransitionResponseType:
      description: >-
        This field cannot be set directly using the `/cardtransitions` endpoint.

        A card transition's `type` is managed by the Marqeta platform, based on
        the before and after state of the transition, as specified in the
        request's `state` field.


        This field appears only when populated by the card fulfillment provider.

        The `type` field's possible values are:


        * *state.activated:* Card was activated

        * *state.reinstated:* Card was reinstated from a suspended state

        * *state.suspended:* Card was suspended

        * *state.terminated:* Card was terminated

        * *state.limited:* Card was limited

        * *fulfillment.digitally_presented:* Card was digitally presented using
        the `/cards/{token}/showpan` endpoint; does not affect the delivery of
        physical cards

        * *fulfillment.issued:* Card was created/issued

        * *fulfillment.ordered:* Card was ordered from the card fulfillment
        provider

        * *fulfillment.rejected:* Card was rejected by the card fulfillment
        provider

        * *fulfillment.reordered:* Card was reordered from the card fulfillment
        provider

        * *fulfillment.shipped:* Card was shipped by the card fulfillment
        provider

        * *fulfillment.delivered:* Card was delivered by the card fulfillment
        provider
      enum:
        - fulfillment.issued
        - state.activated
        - state.suspended
        - state.reinstated
        - state.terminated
        - state.limited
        - fulfillment.ordered
        - fulfillment.rejected
        - fulfillment.shipped
        - fulfillment.delivered
        - fulfillment.digitally_presented
      readOnly: true
      type: string
    chargebackResponseChannel:
      description: Channel the chargeback came through.
      enum:
        - GATEWAY
        - GATEWAY_AUTOMATED
        - ISSUER
        - ISSUER_AUTOMATED
      type: string
    chargebackResponseNetwork:
      description: Network handling the chargeback.
      enum:
        - MARQETA
        - DISCOVER
        - MASTERCARD
        - PULSE
        - VISA
      type: string
    chargebackResponseReasonDescription:
      enum:
        - SERVICE_NOT_PROVIDED_MERCHANDISE_NOT_RECEIVED
        - CANCELLED_RECURRING_TRANSACTION
        - NOT_AS_DESCRIBED_OR_DEFECTIVE_MERCHANDISE
        - FRAUD_MULTIPLE_TRANSACTIONS
        - FRAUD_TRANSACTION
        - NO_AUTHORIZATION
        - LATE_PRESENTMENT
        - TRANSACTION_NOT_RECOGNIZED
        - INCORRECT_CURRENCY_OR_TRANSACTION_CODE
        - INCORRECT_TRANSACTION_AMOUNT_OR_ACCOUNT_NUMBER
        - NOT_AUTHORIZED_CARD_PRESENT
        - NOT_AUTHORIZED_CARD_ABSENT
        - CREDIT_NOT_PROCESSED
        - NON_RECEIPT_OF_CASH_OR_LOAD_TRANSACTION_VALUE_AT_ATM
      type: string
    chargebackResponseState:
      description: State of the case.
      enum:
        - INITIATED
        - REPRESENTMENT
        - PREARBITRATION
        - ARBITRATION
        - CASE_WON
        - CASE_LOST
        - NETWORK_REJECTED
        - WITHDRAWN
      type: string
    clearingAndSettlementOverdraftDestination:
      default: GPA
      description: |-
        Specifies the destination for overdraft funds.

        This field does not apply if JIT Funding is enabled.
      enum:
        - GPA
        - MSA
        - MERCHANT_CAMPAIGN_ACCOUNT
        - GLOBAL_OVERDRAFT_ACCOUNT
      type: string
    commandoModeNestedTransitionChannel:
      description: The mechanism that changed the Commando Mode control set's state.
      enum:
        - API
        - SYSTEM
        - ADMIN
      type: string
    controlTokenRequestControltokenType:
      description: >-
        Specifies the type of action completed by this request.


        *WARNING:* Sending a request to this endpoint with a `SHOW_PIN` control
        token requires PCI DSS compliance.


        The lifespan of the control token depends on the token type: 


        * *SET_PIN:* 60 minutes

        * *SHOW_PIN:* 5 minutes
      enum:
        - SET_PIN
        - SHOW_PIN
      type: string
    digitalWalletAndroidPayProvisionRequestDeviceType:
      description: >-
        The type of device into which the digital wallet token will be
        provisioned.


        Example device types include:
      enum:
        - MOBILE_PHONE
        - WATCH
        - TABLET
      type: string
    digitalWalletApplePayProvisionRequestDeviceType:
      description: The type of device into which the digital wallet token will be
        provisioned.
      enum:
        - MOBILE_PHONE
        - WATCH
        - TABLET
      type: string
    digitalWalletSamsungPayProvisionRequestDeviceType:
      enum:
        - MOBILE_PHONE
        - WATCH
        - TABLET
      type: string
    digitalWalletTokenTransitionRequestChannel:
      enum:
        - TOKEN_SERVICE_PROVIDER
        - TOKEN_SERVICE_PROVIDER_API
        - DIGITAL_WALLET
        - API
        - IVR
        - FRAUD
        - ADMIN
        - SYSTEM
      type: string
    digitalWalletTokenTransitionRequestReasonCode:
      description: A standard two-digit reason code.
      enum:
        - "00"
        - "01"
        - "02"
        - "03"
        - "04"
        - "05"
        - "06"
        - "07"
        - "08"
        - "09"
        - "10"
        - "11"
        - "12"
        - "13"
        - "14"
        - "15"
        - "16"
        - "17"
        - "18"
        - "19"
        - "20"
        - "21"
        - "22"
        - "23"
        - "24"
        - "25"
        - "26"
        - "27"
        - "28"
        - "29"
        - "30"
        - "31"
      type: string
    digitalWalletTokenTransitionRequestState:
      description: >-
        Specifies the state to which the digital wallet token will transition.


        The original state is `REQUESTED`. You cannot modify the state if its
        current value is either `REQUEST_DECLINED` or `TERMINATED`.
      enum:
        - ACTIVE
        - SUSPENDED
        - TERMINATED
      type: string
    digitalWalletTokenTransitionResponseChannel:
      enum:
        - TOKEN_SERVICE_PROVIDER
        - DIGITAL_WALLET
        - API
        - IVR
        - FRAUD
        - ADMIN
        - SYSTEM
        - TOKEN_SERVICE_PROVIDER_API
      type: string
    digitalWalletTokenTransitionResponseFulfillmentStatus:
      enum:
        - DECISION_RED
        - DECISION_YELLOW
        - DECISION_GREEN
        - REJECTED
        - PROVISIONED
      type: string
    digitalWalletTokenTransitionResponseReasonCode:
      enum:
        - "00"
        - "01"
        - "02"
        - "03"
        - "04"
        - "05"
        - "06"
        - "07"
        - "08"
        - "09"
        - "10"
        - "11"
        - "12"
        - "13"
        - "14"
        - "15"
        - "16"
        - "17"
        - "18"
        - "19"
        - "20"
        - "21"
        - "22"
        - "23"
        - "24"
        - "25"
        - "26"
        - "27"
        - "28"
        - "29"
        - "30"
        - "31"
      type: string
    digitalWalletTokenTransitionResponseState:
      enum:
        - REQUESTED
        - REQUEST_DECLINED
        - ACTIVE
        - SUSPENDED
        - TERMINATED
      type: string
    digitalWalletXPayProvisionRequestDeviceType:
      enum:
        - MOBILE_PHONE
        - WATCH
        - TABLET
      type: string
    directDepositAccountRequestType:
      enum:
        - DEPOSIT_ACCOUNT
        - CHECKING
        - SAVINGS
      type: string
    directDepositAccountTransitionRequestChannel:
      enum:
        - API
        - IVR
        - FRAUD
        - ADMIN
        - SYSTEM
        - NETWORK
        - PROD_SUPPORT
        - UNSUPPORTED
      type: string
    directDepositAccountTransitionRequestState:
      enum:
        - ACTIVE
        - SUSPENDED
        - TERMINATED
        - UNSUPPORTED
        - UNACTIVATED
        - LIMITED
      type: string
    expirationOffsetUnit:
      description: Specifies the units for the `value` field.
      enum:
        - YEARS
        - MONTHS
        - DAYS
        - HOURS
        - MINUTES
        - SECONDS
      type: string
    expirationOffsetWithMinimumUnit:
      description: Specifies the units for the `value` field.
      enum:
        - YEARS
        - MONTHS
        - DAYS
        - HOURS
        - MINUTES
        - SECONDS
      type: string
    fulfillmentCardFulfillmentReason:
      description: The reason for card fulfillment.
      enum:
        - NEW
        - LOST_STOLEN
        - EXPIRED
      type: string
    holdIncreaseType:
      default: AMOUNT
      description: Controls whether the `value` field represents a fixed amount or a
        percentage of the authorization amount.
      enum:
        - AMOUNT
        - PERCENT
        - UP_TO_LIMIT
      type: string
    jitFundingApiDeclineReason:
      description: The reason that the transaction was declined.
      enum:
        - INVALID_AMOUNT
        - INSUFFICIENT_FUNDS
        - TRANSACTION_NOT_PERMITTED
        - SUSPECTED_FRAUD
        - AMOUNT_LIMIT_EXCEEDED
        - TRANSACTION_COUNT_LIMIT_EXCEEDED
        - DUPLICATE_TRANSACTION
        - INVALID_MERCHANT
        - INVALID_CARD
        - NO_CREDIT_ACCOUNT
        - EXPIRED_CARD
        - NO_CHECKING_ACCOUNT
        - NO_SAVINGS_ACCOUNT
        - STOP_PAYMENT
        - REVOCATION_AUTHORIZATION_ORDER
        - REVOCATION_ALL_AUTHORIZATION_ORDER
        - SOFT_DECLINE_AUTHENTICATION_REQUIRED
        - CLOSED_ACCOUNT
        - SOFT_DECLINE_PIN_REQUIRED
      type: string
    jitFundingApiMethod:
      description: JIT Funding notification type.
      enum:
        - pgfs.authorization
        - pgfs.balanceinquiry
        - pgfs.authorization.incremental
        - pgfs.authorization.capture
        - pgfs.authorization.reversal
        - pgfs.auth_plus_capture
        - pgfs.refund
        - pgfs.force_capture
        - pgfs.authorization.capture.chargeback
        - pgfs.authorization.capture.chargeback.reversal
        - pgfs.pindebit.chargeback
        - pgfs.pindebit.chargeback.reversal
        - pgfs.dispute.credit
        - pgfs.dispute.debit
        - pgfs.directdeposit.credit
        - pgfs.directdeposit.debit
        - pgfs.directdeposit.credit.reversal
        - pgfs.directdeposit.debit.reversal
        - pgfs.adjustment.credit
        - pgfs.adjustment.debit
        - pgfs.auth_plus_capture.standin
        - pgfs.authorization.standin
        - pgfs.network.load
        - pgfs.original.credit.authorization
        - pgfs.original.credit.auth_plus_capture
        - pgfs.refund.authorization
        - pgfs.refund.authorization.reversalpgfs.billpayment
        - pgfs.billpayment.capture
        - pgfs.billpayment.reversal
        - pgfs.authorization.account_verification
      type: string
    jitFundingPaymentcardFundingSourceRefundsDestination:
      description: Specifies the return destination for refunds in the case of a
        transaction reversal.
      enum:
        - GATEWAY
        - GPA
        - WATERFALL
      maxLength: 50
      minLength: 0
      type: string
    jitFundingProgramFundingSourceRefundsDestination:
      description: >-
        Specifies the return destination for refunds in the case of a
        transaction reversal.

        `PROGRAM_FUNDING_SOURCE` returns funds to the program funding source.

        `GPA` returns the funds to the user's GPA.
      enum:
        - PROGRAM_FUNDING_SOURCE
        - GPA
        - WATERFALL
      maxLength: 50
      minLength: 0
      type: string
    jitFundingProgramgatewayFundingSourceRefundsDestination:
      description: >-
        Specifies the return destination for refunds in the case of a
        transaction reversal.

        In most cases, you should set the value to `GATEWAY`, which returns
        funds to the program gateway funding source.

        Setting to `GPA` returns the funds to the user's GPA, which creates a
        positive account balance and introduces the potential of a transaction
        being authorized without a JIT Funding request being sent to the
        gateway.
      enum:
        - GATEWAY
        - GPA
        - WATERFALL
      maxLength: 50
      minLength: 0
      type: string
    minOffsetUnit:
      description: Specifies the units for the `value` field.
      enum:
        - YEARS
        - MONTHS
        - DAYS
        - HOURS
        - MINUTES
        - SECONDS
      type: string
    networkFeeModelCreditDebit:
      description: |-
        Indicates whether the fee is a credit or a debit.

        * *C* indicates a credit
        * *D* indicates a debit
      enum:
        - C
        - D
      type: string
    networkFeeModelType:
      description: The type of fee assessed by the card network.
      enum:
        - ISSUER_FEE
        - SWITCH_FEE
        - PINDEBIT_ASSOC_FEE
        - ACQUIRER_FEE
        - INTERCHANGE_FEE
        - CUR_CONV_CARDHOLDER_FEE
        - CUR_CONV_ISSUER_FEE
        - CROSS_BORDER_ISSUER_FEE
      type: string
    originalCreditDeferredHoldBy:
      enum:
        - absent
        - visa
        - originator
      type: string
    originalCreditFundingSource:
      description: Sender's account from which the OCT draws funds.
      enum:
        - CREDIT
        - DEBIT
        - PREPAID
        - DEPOSIT_ACCOUNT
        - CASH
        - MOBILE_MONEY_ACCOUNT
        - NON_VISA_CREDIT
      type: string
    originalCreditSenderAccountType:
      description: The type of account from which the OCT draws funds.
      enum:
        - OTHER
        - RTN_BANK_ACCOUNT
        - IBAN
        - CARD_ACCOUNT
        - EMAIL
        - PHONE_NUMBER
        - BANK_ACCOUNT_NUMBER_AND_BANK_IDENTIFICATION_CODE
        - WALLET_ID
        - SOCIAL_NETWORK_ID
      type: string
    originalCreditTransactionType:
      description: Type of original credit transaction.
      enum:
        - ACCOUNT_TO_ACCOUNT
        - PERSON_TO_PERSON
        - WALLET_TRANSFER
        - MONEY_TRANSFER_BY_BANK
        - BUSINESS_TO_BUSINESS
        - DISBURSEMENT
        - GOVERNMENT_DISBURSEMENT
        - GAMBLING_PAYOUT
        - LOYALTY
        - MERCHANT_DISBURSEMENT
        - ONLINE_GAMBLING_PAYOUT
        - PENSION_DISBURSEMENT
        - PREPAID_LOADS
        - CARD_BILL_PAYMENT
        - BILL_PAYMENT
        - CASH_CLAIM
        - CASH_IN
        - CASH_OUT
        - MOBILE_AIR_TIME_PAYMENT
        - MONEY_TRANSFER_BY_MERCHANT
        - FACE_TO_FACE_MERCHANT_PAYMENT
        - GOVERNMENT_PAYMENT
        - PAYMENTS_GOODS_SERVICES
        - FUNDS_TRANSFER
        - GENERAL_BUSINESS_TO_BUSINESS_TRANSFER
        - BUSINESS_TO_BUSINESS_TRANSFER
        - CASH_DEPOSIT
      type: string
    originalCreditSenderDataDeferredHoldBy:
      enum:
        - absent
        - visa
        - originator
      type: string
    originalCreditSenderDataFundingSource:
      enum:
        - credit
        - debit
        - prepaid
        - deposit_account
        - cash
        - mobile_money_payment
        - non_visa_credit
      type: string
    originalCreditSenderDataSenderAccountType:
      enum:
        - other
        - rtn_bank_account
        - iban
        - card_account
        - email
        - phone_number
        - bank_account_number_and_identification_code
        - wallet_id
        - social_network_id
      type: string
    originalCreditSenderDataTransactionPurpose:
      enum:
        - family_support
        - labor_transfers
        - travel
        - education
        - medical_treatment
        - emergency_need
        - savings
        - gifts
        - other
        - salary
        - lending
        - crypto_currency
      type: string
    orignalcreditRequestModelType:
      enum:
        - account_to_account
        - person_to_person
        - prepaid
        - wallet_transfer
        - money_transfer_by_bank
        - business_to_business
        - disbursement
        - government_disbursement
        - gambling_payout
        - loyalty
        - merchant_disbursement
        - online_gambling_payout
        - pension_disbursement
        - prepaid_loads
        - card_bill_payment
        - bill_payment
        - cash_claim
        - cash_in
        - cash_out
        - mobile_air_time_payment
        - money_transfer_by_merchant
        - face_to_face_merchant_payment
        - government_payment
        - payments_goods_services
      type: string
    pinRevealRequestCardholderVerificationMethod:
      description: >-
        The supplemental method used to verify the cardholder's identity before
        revealing the card's PIN.


        The possible cardholder verification methods are:


        * *BIOMETRIC_FACE:* In-app authentication via facial recognition

        * *BIOMETRIC_FINGERPRINT:* In-app authentication via biometric
        fingerprint

        * *LOGIN:* In-app authentication by re-entering the app password

        * *EXP_CVV:* In-app authentication by entering the card's expiration
        date and CVV

        * *OTP:* Two-factor authentication involving a one-time password (OTP)

        * *OTP_CVV:* Two-factor authentication involving the card's CVV and an
        OTP

        * *OTHER:* Authentication that relies on other secure methods
      enum:
        - BIOMETRIC_FACE
        - BIOMETRIC_FINGERPRINT
        - LOGIN
        - EXP_CVV
        - OTP_CVV
        - OTP
        - OTHER
      type: string
    posCardDataInputCapability:
      description: How the terminal accepts card data.
      enum:
        - UNKNOWN
        - NO_TERMINAL
        - MAG_STRIPE
        - MAG_STRIPE_CONTACTLESS
        - MAG_STRIPE_KEY_ENTRY
        - CHIP
        - CHIP_CONTACTLESS
        - CHIP_MAG_STRIPE
        - CHIP_MAG_STRIPE_KEY_ENTRY
        - KEY_ENTRY
        - OCR
        - MICR
        - BAR_CODE
      type: string
    posCardholderAuthenticationMethod:
      description: Method used to authenticate the cardholder.
      enum:
        - UNSPECIFIED
        - NON_AUTHENTICATED
        - SIGNATURE
        - PIN
        - ID_VERIFIED
      type: string
    posPanEntryMode:
      description: Method used for capturing the card PAN during the transaction.
      enum:
        - UNKNOWN
        - MANUAL
        - MAG_STRIPE
        - MAG_STRIPE_CONTACTLESS
        - BAR_CODE
        - OCR
        - MICR
        - CHIP
        - CHIP_CONTACTLESS
        - CARD_ON_FILE
        - CHIP_FALLBACK
        - OTHER
      type: string
    posPinEntryMode:
      description: |-
        Whether the card acceptor or terminal can capture card PINs.

        *NOTE:* This field does not indicate whether a PIN was entered.
      enum:
        - UNKNOWN
        - "TRUE"
        - "FALSE"
        - DEFECTIVE
      type: string
    posTerminalAttendance:
      description: Whether the card acceptor/terminal was attended.
      enum:
        - UNSPECIFIED
        - ATTENDED
        - UNATTENDED
        - NO_TERMINAL
      type: string
    posTerminalLocation:
      description: Location of the card acceptor/terminal.
      enum:
        - ON_PREMISE
        - OFF_PREMISE_MERCHANT
        - OFF_PREMISE_CARDHOLDER
        - NO_TERMINAL
      type: string
    posTerminalType:
      description: Type of card acceptor/terminal.
      enum:
        - AUTO_DISPENSER_WITH_PIN
        - SELF_SERVICE
        - LIMITED_AMOUNT
        - IN_FLIGHT
        - ECOMMERCE
        - TRANSPONDER
      type: string
    programReserveTransactionResponseState:
      description: The state of the transaction.
      enum:
        - PENDING
        - COMPLETE
      type: string
    programReserveTransactionResponseType:
      description: The type of transaction.
      enum:
        - CREDIT
        - DEBIT
        - PENDING_CREDIT
        - PENDING_DEBIT
      type: string
    selectiveAuthDmdLocationSensitivity:
      default: 0
      description: >-
        Determines what type of merchant information is required for a match
        (authorization).

        Not relevant if `enable_regex_search_chain = false`.


        * *0* – Requires exact match on card acceptor name and postal code to
        existing entry in Marqeta Merchant database (most restrictive).

        * *1* – Partial match on card acceptor name (least restrictive).

        * *2* – Partial match on card acceptor name; exact match on card
        acceptor city.

        * *3* – Partial match on card acceptor name; exact match on card
        acceptor postal code.

        * *4* – Partial match on card acceptor name; exact match on street
        address 1 and postal code.
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      format: int32
      type: integer
    selectiveAuthSaMode:
      default: 1
      description: >-
        * *0* — Inactive

        * *1* — Active (attempts to authorize a merchant that does not have a
        recognized MID by matching other pieces of information)

        * *2* — Logging and notification (checks the transaction and logs
        results, but does not authorize)


        Selective authorization applies to transactions that are limited to
        specific merchants.

        Matching requirements for authorization are set by the
        `dmd_location_sensitivity` field.
      enum:
        - 0
        - 1
        - 2
      format: int32
      type: integer
    sendingProvisioningDataToGooglePayBackendRequestCardSetting:
      description: |-
        `1`: FPAN save will be attempted.
        `0`: FPAN save will not be attempted.
      enum:
        - 0
        - 1
      example: 0
      format: int32
      type: integer
    sendingProvisioningDataToGooglePayBackendRequestTokenSetting:
      description: |-
        `1`: Tokenization will be attempted.
        `0`: Tokenization will not be attempted.
      enum:
        - 0
        - 1
      example: 0
      format: int32
      type: integer
    shippingMethod:
      description: Specifies the shipping service.
      enum:
        - LOCAL_MAIL
        - LOCAL_MAIL_PACKAGE
        - GROUND
        - TWO_DAY
        - OVERNIGHT
        - INTERNATIONAL
        - FEDEX_EXPEDITED
        - FEDEX_REGULAR
        - UPS_EXPEDITED
        - UPS_REGULAR
        - USPS_EXPEDITED
        - USPS_REGULAR
      type: string
    transactionMetadataMotoIndicator:
      description: Indicates the type of mail or telephone order transaction.
      enum:
        - UNKNOWN
        - MANUAL
        - RECURRING
        - INSTALLMENT
        - OTHERS
      type: string
    transactionMetadataPaymentChannel:
      description: Channel from which the transaction was originated.
      enum:
        - OTHER
        - ATM
        - ECOMMERCE
        - MAIL
        - PHONE
        - MOTO
      type: string
    transactionMetadataTransactionCategory:
      description: Industry for which the transaction was originated.
      enum:
        - RETAIL_SALE
        - BILL_PAY
        - HOTEL
        - HEALTH_CARE
        - RESTAURANT
        - AUTO_RENTAL
        - AIRLINE
        - PAYMENT
        - HOSPITALIZATION_COLLEGE
        - PHONE_MAIL_ECOMMERCE
        - ATM
        - TRANSIT
      type: string
    transactionModelIsaIndicator:
      description: The international service assessment indicator indicates if an ISA
        fee is applicable to the transaction.
      enum:
        - MULTI_CURRENCY
        - SINGLE_CURRENCY
        - REBATE_CANCELLED
        - MULTI_CURRENCY_NON_US_COUNTRIES
        - SINGLE_CURRENCY_PAID_BY_ISSUER
        - NO_CHARGE_ASSESSED
      type: string
    transactionModelPolarity:
      description: Indicates whether the transaction is credit or debit.
      enum:
        - CREDIT
        - DEBIT
        - PENDING_CREDIT
        - PENDING_DEBIT
      type: string
    transactionModelState:
      description: >-
        Current state of the transaction.

        For more information about the `state` field, see
        <</developer-guides/about-transactions#_the_transaction_lifecycle, The
        transaction lifecycle>>.
      enum:
        - PENDING
        - CLEARED
        - COMPLETION
        - DECLINED
        - ERROR
      type: string
    transactionModelType:
      description: >-
        Transaction event type.

        For more information about the `type` field, see
        <</core-api/event-types#_transaction_events, Transaction events>>.
      enum:
        - gpa.credit
        - gpa.credit.pending
        - gpa.credit.pending.reversal
        - gpa.credit.reversal
        - gpa.credit.networkload
        - gpa.credit.networkload.reversal
        - gpa.debit.networkload
        - gpa.debit
        - gpa.grant
        - gpa.credit.issueroperator
        - gpa.debit.issueroperator
        - gpa.credit.chargeback
        - gpa.credit.chargeback.reversal
        - gpa.credit.billpayment
        - gpa.credit.authorization.billpayment
        - gpa.credit.authorization.billpayment.reversal
        - msa.credit.pending
        - msa.credit.pending.reversal
        - msa.credit.reversal
        - msa.credit
        - msa.debit
        - msa.credit.chargeback
        - msa.credit.chargeback.reversal
        - authorization
        - authorization.advice
        - authorization.reversal
        - authorization.clearing
        - authorization.reversal.issuerexpiration
        - authorization.clearing.chargeback
        - authorization.clearing.chargeback.reversal
        - refund
        - pindebit.atm.withdrawal
        - pindebit.balanceinquiry
        - pindebit.cashback
        - pindebit
        - programreserve.credit
        - programreserve.debit
        - billpayment
        - billpayment.clearing
        - billpayment.reversal
        - fee.charge.pending
        - fee.charge
        - fee.charge.pending.refund
        - funds.expire
        - reward.earn
        - transfer.peer
        - transfer.fee
        - account.credit
        - account.debit
        - unknown
      readOnly: true
      type: string
    transitTransactionType:
      description: Type of transit transaction.
      enum:
        - PRE_FUNDED
        - REAL_TIME_AUTHORIZED
        - POST_AUTHORIZED_AGGREGATED
        - AUTHORIZED_AGGREGATED_SPLIT_CLEARING
        - OTHER
        - DEBIT_RECOVERY
      type: string
    transitTransportationMode:
      description: Mode of transportation.
      enum:
        - BUS
        - TRAIN
        - WATER_BORNE_VEHICLE
        - TOLL
        - PARKING
        - TAXI
        - PARA_TRANSIT
        - SELF_DRIVE_VEHICLE
        - COACH
        - LOCOMOTIVE
        - POWERED_MOTOR_VEHICLE
        - TRAILER
        - INTER_CITY
        - CABLE_CAR
      type: string
    userCardHolderResponseGender:
      description: Cardholder's gender.
      enum:
        - F
        - M
      maxLength: 1
      minLength: 0
      type: string
    userCardHolderResponseStatus:
      description: Specifies the status of the cardholder on the Marqeta platform.
      enum:
        - UNVERIFIED
        - LIMITED
        - ACTIVE
        - SUSPENDED
        - CLOSED
      type: string
    velocityControlBalanceResponseVelocityWindow:
      description: >-
        Defines the time period to which the `amount_limit` and `usage_limit`
        fields apply:


        * *DAY* – one day; days begin at 00:00:00 UTC.

        * *WEEK* – one week; weeks begin Mondays at 00:00:00 UTC.

        * *MONTH* – one month; months begin on the first day of month at
        00:00:00 UTC.

        * *LIFETIME* – forever; time period never expires.

        * *TRANSACTION* – a single transaction.
      enum:
        - DAY
        - WEEK
        - MONTH
        - LIFETIME
        - TRANSACTION
      type: string
    velocityControlRequestVelocityWindow:
      description: >-
        Defines the time period to which the `amount_limit` and `usage_limit`
        fields apply:


        * *DAY* – one day; days begin at 00:00:00 UTC.

        * *WEEK* – one week; weeks begin Mondays at 00:00:00 UTC.

        * *MONTH* – one month; months begin on the first day of month at
        00:00:00 UTC.

        * *LIFETIME* – forever; time period never expires.

        * *TRANSACTION* – a single transaction.


        *NOTE:* If set to `DAY`, `WEEK`, or `MONTH`, the velocity control takes
        effect retroactively from the beginning of the specified period.

        The amount and usage data already collected within the first period is
        counted toward the limits.


        *NOTE:* Editing any of the following fields on a velocity control resets
        its usage and amount count to 0:


        * `merchant_scope.mcc`

        * `merchant_scope.mid`

        * `merchant_scope.mcc_group`

        * `association.user_token`

        * `association.card_product_token`

        * `velocity_window`
      enum:
        - DAY
        - WEEK
        - MONTH
        - LIFETIME
        - TRANSACTION
      type: string
    velocityControlResponseVelocityWindow:
      description: >-
        Defines the time period to which the `amount_limit` and `usage_limit`
        fields apply:


        * *DAY* – one day; days begin at 00:00:00 UTC.

        * *WEEK* – one week; weeks begin Mondays at 00:00:00 UTC.

        * *MONTH* – one month; months begin on the first day of month at
        00:00:00 UTC.

        * *LIFETIME* – forever; time period never expires.

        * *TRANSACTION* – a single transaction.
      enum:
        - DAY
        - WEEK
        - MONTH
        - LIFETIME
        - TRANSACTION
      type: string
    velocityControlUpdateRequestVelocityWindow:
      description: >-
        Defines the time period to which the `amount_limit` and `usage_limit`
        fields apply:


        * *DAY* – one day; days begin at 00:00:00 UTC.

        * *WEEK* – one week; weeks begin Mondays at 00:00:00 UTC.

        * *MONTH* – one month; months begin on the first day of month at
        00:00:00 UTC.

        * *QUARTER* - three months; quarters begin on January 1, April 1, July
        1, and October 1 at 00:00:00 UTC.

        * *YEAR* - twelve months; years begin on January 1 at 00:00:00 UTC. 

        * *LIFETIME* – forever; time period never expires.

        * *TRANSACTION* – a single transaction.


        *NOTE:* If set to `DAY`, `WEEK`, `MONTH`, `QUARTER`, or `YEAR,` the
        velocity control takes effect retroactively from the beginning of the
        specified period.

        The amount and usage data already collected within the first period is
        counted toward the limits.


        *NOTE:* Editing any of the following fields on a velocity control resets
        its usage and amount count to 0:


        * `merchant_scope.mcc`

        * `merchant_scope.mid`

        * `merchant_scope.mcc_group`

        * `association.user_token`

        * `association.card_product_token`

        * `velocity_window`
      enum:
        - DAY
        - WEEK
        - MONTH
        - QUARTER
        - YEAR
        - LIFETIME
        - TRANSACTION
      type: string
    withdrawalRequestModelAccountType:
      enum:
        - checking
        - savings
        - credit
      type: string
  securitySchemes:
    admin:
      scheme: basic
      type: http
