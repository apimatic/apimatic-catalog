openapi: 3.0.3

# This is your document metadata.
info:
  version: 1.0.0
  title: Health Check - Status API
  contact:
    url: 'https://www.sovos.com'
    name: Sovos
    email: contact@sovos.com
  description: Sovos VAT Platform - Status (1.0.0) |
    HealthCheck status of Sovos Compliance APIs based on different country. This API allows for monitoring of Sovos - e-Archiving / e-Invoicing / Reporting products. Status will be returned of the systems as requested with Up/Working or Down/NotWorking as a response.

# Servers where this API is hosted
servers: 
  - url: 'https://api-test.sovos.com'
    description: sandbox
  - url: 'https://api.sovos.com'
    description: production
tags:
  - name: Status
    description: Perform a health check to retrieve the status of the backend systems by `country`.

# Describe your paths here
paths:
  # This is a endpoint path.
  '/v1/status':
    # This is an HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      summary: 'Check the status of the backend systems by country'
      tags:
        - Status
      parameters:
        # An example parameter that is in query and is required
        - name: countryCode
          in: query
          description: |
            The two-digit country code specified by the ISO 3166-1 alpha-2 standard. 
          schema:
            type: string
        - name: x-apikey
          in: header
          description: |
            `x-apikey` The API key that can be generated after registration.
          schema:
            type: string
      # Expected responses for this operation:
      responses:
        # Response code
        '200':
          description: Successful response
          # Response body content.
          content:
            # JSON response with a schema referenced from the  
            # components object.
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Status
                  timestamp:
                    type: number
                    example: 1571936582195
                  data:
                    type: object
                    description: 'Data returned by the response. In this example, the Base-64 encoded mapped/output file.'
                    example:
                      serviceStatus: Up
                      message: Working
              examples:
                example-1:
                  value:
                    success: true
                    status: 200
                    message: Health Check
                    timestamp: 1626418978789
                    data:
                      serviceStatus: Up
                      message: Working
# Reusable components of your API belong here. Utilize
# components with JSON references.
components:
  # Schemas is a map of names to Schema objects
  schemas:
    Default_Response:
      description: ''
      type: object
      properties:
        timestamp:
          type: number
        status:
          type: number
        success:
          type: boolean
        message:
          type: string
          minLength: 1
      required:
        - timestamp
        - status
        - success
        - message
      x-examples:
        example-1:
          timestamp: 0
          status: 0
          success: true
          message: string