{"openapi":"3.0.3","info":{"contact":{"email":"experience@nium.com","name":"NIUM Platform","url":"https://www.nium.com"},"description":"NIUM Platform","license":{"name":"Copyright (c) 2024 NIUM"},"title":"Payout","version":"2024.7.16"},"servers":[{"url":"https://gateway.nium.com/"}],"tags":[{"name":"Beneficiary","description":"REST API's for Beneficiary"},{"name":"Reference Data","description":"REST API's for Reference Data"},{"name":"Payout","description":"REST API's for Payout"}],"paths":{"/api/v1/client/{clientHashId}/customer/{customerHashId}/accountVerification":{"post":{"parameters":[{"description":"Unique client identifier generated and shared before API handshake.","in":"path","name":"clientHashId","required":true,"schema":{"type":"string"}},{"description":"Unique customer identifier generated on customer creation.","in":"path","name":"customerHashId","required":true,"schema":{"type":"string"}},{"description":"Enter a unique UUID value.","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountValidationResponseDTO"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WalletApiError"}}},"description":"BadRequest"},"401":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WalletApiError"}}},"description":"Not Found"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WalletApiError"}}},"description":"Internal Server Error"}},"tags":["Beneficiary"],"deprecated":false,"description":"This API enables you to verify the details of a beneficiary's bank account.\n> > ℹ️ INFO \n >This API only supports account verification for specific destinations and corridors.\n>For more information, see  [Account verification] (/apis/docs/account-verification#supported-corridors-for-account-verification). for details.","operationId":"AccountVerification","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountValidationRequestDTO"}}},"description":"accountValidationRequestDTO","required":true},"summary":"Account verification (Confirmation of Payee)","x-info":{"apiType":"external"},"security":[{"default":[]}]}},"/api/v2/client/{clientHashId}/customer/{customerHashId}/beneficiaries":{"get":{"parameters":[{"description":"This field accepts an account number.","in":"query","name":"beneficiaryAccountNumber","required":false,"schema":{"type":"string"}},{"description":"This field accepts the beneficiary name.","in":"query","name":"beneficiaryName","required":false,"schema":{"type":"string"}},{"description":"Unique client identifier generated and shared before API handshake.","in":"path","name":"clientHashId","required":true,"schema":{"type":"string","example":"{{clientHashId}}"}},{"description":"Unique customer identifier generated on customer creation.","in":"path","name":"customerHashId","required":true,"schema":{"type":"string"}},{"description":"This field accepts the 3-letter [ISO-4217 currency code](https://docs.nium.com/apis/docs/currency-and-country-codes) currency code.","in":"query","name":"destinationCurrency","required":false,"schema":{"type":"string"}},{"description":"This field accepts the payout method for the remittance payout. This field can accept one of the following values:","in":"query","name":"payoutMethod","required":false,"schema":{"enum":["LOCAL","SWIFT","WALLET","CARD","PROXY"],"type":"string"}},{"description":"Enter a unique UUID value","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"responses":{"200":{"content":{"*/*":{"schema":{"items":{"$ref":"#/components/schemas/BeneficiaryResponseDTO"},"type":"array"}}},"description":"OK"},"400":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"BadRequest"},"401":{"content":{"*/*":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"*/*":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Not Found"},"500":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Internal Server Error"}},"tags":["Beneficiary"],"deprecated":false,"description":"This API allows you to fetch beneficiary details.","operationId":"BeneficiaryListV2","summary":"Beneficiary List V2","x-info":{"apiType":"external"},"security":[{"default":[]}]},"post":{"parameters":[{"description":"Unique client identifier generated and shared before API handshake.","in":"path","name":"clientHashId","required":true,"schema":{"type":"string","example":"{{clientHashId}}"}},{"description":"Unique customer identifier generated on customer creation.","in":"path","name":"customerHashId","required":true,"schema":{"type":"string"}},{"description":"Enter a unique UUID value","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"responses":{"200":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/BeneficiaryResponseDTO"}}},"description":"OK"},"400":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"BadRequest"},"401":{"content":{"*/*":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"*/*":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Not Found"},"500":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Internal Server Error"}},"tags":["Beneficiary"],"deprecated":false,"description":"This API allows you to add a beneficiary to transfer funds. \n > ⚠️ IMPORTANT \n  Some fields are conditional based on corridors. Use the [Beneficiary Validation Schema V2](/apis/reference/beneficiaryvalidationschemav2) with the currency code and payout method to determine if a field is required or not.","operationId":"AddBeneficiaryV2","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AddBeneficiaryRequestDTO"},"example":{"beneficiaryName":"RanjithP Singh","beneficiaryAccountType":"CORPORATE","beneficiaryAddress":"TOWER bridge of MY","beneficiaryCity":"Wales","beneficiaryCountryCode":"MY","beneficiaryEmail":"sangle@outlook.com","beneficiaryPostcode":"654646","remitterBeneficiaryRelationship":"Father","beneficiaryState":"MY","beneficiaryContactCountryCode":"60","beneficiaryContactNumber":"9902892467","destinationCurrency":"PHP","destinationCountry":"PH","beneficiaryAccountNumber":"NDIyOTk4MDA2OTk0ODY1MQ==","beneficiaryAlias":"RanjithParthasarathi 2","beneficiaryBankName":"A.B.S. White And Co. Ltd.","payoutMethod":"CARD"}}},"description":"addBeneficiaryRequestDTO","required":true},"summary":"Add Beneficiary V2","x-info":{"apiType":"external"},"security":[{"default":[]}]}},"/api/v2/client/{clientHashId}/customer/{customerHashId}/beneficiaries/{beneficiaryHashId}":{"get":{"parameters":[{"description":"Unique beneficiary hash ID.","in":"path","name":"beneficiaryHashId","required":true,"schema":{"type":"string"}},{"description":"Unique client identifier generated and shared before API handshake.","in":"path","name":"clientHashId","required":true,"schema":{"type":"string","example":"{{clientHashId}}"}},{"description":"Unique customer identifier generated on customer creation.","in":"path","name":"customerHashId","required":true,"schema":{"type":"string"}},{"description":"Enter a unique UUID value","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"responses":{"200":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/BeneficiaryResponseDTO"}}},"description":"OK"},"400":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"BadRequest"},"401":{"content":{"*/*":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"*/*":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Not Found"},"500":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Internal Server Error"}},"tags":["Beneficiary"],"deprecated":false,"description":"This API allows you to fetch beneficiary details of an individual beneficiary.","operationId":"BeneficiaryDetailsV2","summary":"Beneficiary Details V2","x-info":{"apiType":"external"},"security":[{"default":[]}]},"put":{"parameters":[{"description":"Unique beneficiary hash ID.","in":"path","name":"beneficiaryHashId","required":true,"schema":{"type":"string"}},{"description":"Unique client identifier generated and shared before API handshake.","in":"path","name":"clientHashId","required":true,"schema":{"type":"string","example":"{{clientHashId}}"}},{"description":"Unique customer identifier generated on customer creation.","in":"path","name":"customerHashId","required":true,"schema":{"type":"string"}},{"description":"Enter a unique UUID value","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"responses":{"200":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/BeneficiaryResponseDTO"},"example":{"beneficiaryHashId":"61bc92239e334f0012376882","beneficiaryName":"MYR bene CARD bomb56","beneficiaryContactCountryCode":"60","beneficiaryContactNumber":"9902892400","beneficiaryAccountType":"Corporate","beneficiaryEmail":"sangleNew@outlook.com","remitterBeneficiaryRelationship":"FatherNew","beneficiaryAddress":"TOWER bridge of MY New","beneficiaryCountryCode":"MY","beneficiaryState":"New","beneficiaryCity":"Wales New","beneficiaryPostcode":"65464600","beneficiaryCreatedAt":"2021-12-17 13:35:31","beneficiaryUpdatedAt":"2021-12-17 13:35:31","payoutHashId":"61bc92239e334f0012376883","destinationCountry":"PH","destinationCurrency":"PHP","beneficiaryBankName":"null","beneficiaryBankAccountType":"Current","beneficiaryAccountNumber":"","beneficiaryBankCode":"null","routingCodeType1":"null","routingCodeValue1":"null","routingCodeType2":"null","routingCodeValue2":"null","payoutMethod":"CARD","beneficiaryIdentificationType":"","beneficiaryIdentificationValue":"","payoutCreatedAt":"2021-12-17 13:35:31","payoutUpdatedAt":"2021-12-20 14:09:40","beneficiaryCardType":"VISA","beneficiaryCardToken":"759e02c8-e62e-40f7-804c-430a46bbaeb9","beneficiaryCardNumberMask":"XXXX XXXX XXXX 0200","beneficiaryCardIssuerName":"INSTAREM Test Bank","beneficiaryCardExpiryDate":"null","beneficiaryCardMetaData":{"cardTypeCode":"D","billingCurrencyCode":"PHP","billingCurrencyMinorDigits":"2","issuerName":"INSTAREM Test Bank","cardIssuerCountryCode":"PH","fastFundsIndicator":"Y","pushFundsBlockIndicator":"Y","onlineGamblingBlockIndicator":"N","isCardValid":true,"isBankSupported":true},"proxyType":"null","proxyValue":"null"}}},"description":"OK"},"400":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"BadRequest"},"401":{"content":{"*/*":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"*/*":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Not Found"},"500":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Internal Server Error"}},"tags":["Beneficiary"],"deprecated":false,"description":"This API allows you to update beneficiary details.","operationId":"UpdateBeneficiaryV2","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateBeneficiaryRequestDTO"},"example":{"beneficiaryName":"MYR bene CARD bomb56","beneficiaryAddress":"TOWER bridge of MY New","beneficiaryCity":"Wales New","beneficiaryCountryCode":"MY","beneficiaryEmail":"sangleNew@outlook.com","beneficiaryPostcode":"65464600","remitterBeneficiaryRelationship":"FatherNew","beneficiaryState":"New","beneficiaryContactCountryCode":"60","beneficiaryContactNumber":"9902892400","beneficiaryAccountNumber":"NDEyMzQ0MDAwMDAwMDIwMA==","beneficiaryAlias":"RanjithParthasarathi1New","beneficiaryBankName":"A.B.S. White And Co. Ltd.New","authenticationCode":"abc01"}}},"description":"Info:\n Update Beneficiary API will be restricted when a remittance transaction for the beneficiary is Pending."},"summary":"Update Beneficiary V2","x-info":{"apiType":"external"},"security":[{"default":[]}]}},"/api/v2/client/{clientHashId}/customer/{customerHashId}/currency/{currencyCode}/validationSchemas":{"get":{"parameters":[{"description":"Unique client identifier generated and shared before API handshake.","in":"path","name":"clientHashId","required":true,"schema":{"type":"string","example":"{{clientHashId}}"}},{"description":"This field accepts the 3-letter [ISO-4217 currency code](doc:currency-and-country-codes).","in":"path","name":"currencyCode","required":true,"schema":{"type":"string"}},{"description":"Unique customer identifier generated on customer creation.","in":"path","name":"customerHashId","required":true,"schema":{"type":"string"}},{"allowEmptyValue":false,"description":"This field can accept the different modes of payout.","in":"query","name":"payoutMethod","required":false,"schema":{"type":"string"}},{"description":"Enter a unique UUID value","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"string"},"example":[{"$schema":"http://json-schema.org/draft-07/schema#","$id":"beneficiary.krw.local.json","type":"object","title":"KRW local beneficiary Validations","required":["clientLegalEntity","destinationCountry","beneficiaryName","beneficiaryCountryCode","beneficiaryEmail","beneficiaryAccountType","beneficiaryContactCountryCode","beneficiaryContactNumber","beneficiaryAccountNumber","beneficiaryBankCode"],"properties":{"clientLegalEntity":{"$id":"#/properties/clientLegalEntity","type":"string","title":"Client legal entity","pattern":"^[A-Z]{2}$","errorMessage":"Client legal entity should be valid country code."},"destinationCountry":{"$id":"#/properties/destinationCountry","type":"string","title":"Destination country","const":"KR","errorMessage":"Destination country should be KR."},"beneficiaryName":{"$id":"#/properties/beneficiaryName","type":"string","title":"Beneficiary name","pattern":"^[A-Za-z0-9 '-]{1,255}$","errorMessage":"Name can contain english alphabets, numbers and special characters - (' -). Length should not be more than 255 characters."},"beneficiaryAlias":{"$id":"#/properties/beneficiaryAlias","type":"string","title":"Beneficiary alias","pattern":"^.{5,30}$","errorMessage":"Length of Alias should not be less than 5 and more than 30 characters."},"beneficiaryAddress":{"$id":"#/properties/beneficiaryAddress","type":"string","title":"Beneficiary address","maxLength":"200","errorMessage":"Length of Address should not be more than 200 characters."},"beneficiaryCity":{"$id":"#/properties/beneficiaryCity","type":"string","title":"Beneficiary city","maxLength":"50","errorMessage":"Length of City should not be more than 50 characters."},"beneficiaryCountryCode":{"$id":"#/properties/beneficiaryCountryCode","type":"string","title":"Beneficiary country code","pattern":"^[A-Z]{2}$","errorMessage":"Country code should be valid."},"beneficiaryEmail":{"$id":"#/properties/beneficiaryEmail","type":"string","title":"Beneficiary email","maxLength":"100","pattern":"^([a-zA-Z0-9+_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,10})$","errorMessage":"Beneficiary should have a valid email address."},"beneficiaryBankAccountType":{"$id":"#/properties/beneficiaryBankAccountType","type":"string","title":"Beneficiary bank account type","enum":["Checking","Saving","Maestra","Current"],"errorMessage":"Bank Account should be of the type : Checking, Saving, Maestra or Current."},"beneficiaryAccountType":{"$id":"#/properties/beneficiaryAccountType","type":"string","title":"Beneficiary account type","enum":["Individual","Corporate"],"errorMessage":"Account Type should be Individual or Corporate."},"beneficiaryContactCountryCode":{"$id":"#/properties/beneficiaryContactCountryCode","type":"string","title":"Beneficiary contact country code","maxLength":"5","errorMessage":"Contact country code should not be more than 5 characters."},"beneficiaryContactNumber":{"$id":"#/properties/beneficiaryContactNumber","type":"string","title":"Beneficiary contact number","pattern":"^[0-9]{1,17}$","errorMessage":"Length of Contact Number should not be more than 17 digits."},"beneficiaryState":{"$id":"#/properties/beneficiaryState","type":"string","title":"Beneficiary state","maxLength":"50","errorMessage":"Length of State should not be more than 50 characters."},"beneficiaryPostcode":{"$id":"#/properties/beneficiaryPostcode","type":"string","title":"Beneficiary postcode","maxLength":"15","errorMessage":"Length of Postal Code should not be more than 15 characters."},"remitterBeneficiaryRelationship":{"$id":"#/properties/remitterBeneficiaryRelationship","type":"string","title":"Remitter beneficiary relationship","pattern":"^.[A-Za-z0-9 -.]{1,255}$","errorMessage":"Relationship should not contain special characters."},"beneficiaryAccountNumber":{"$id":"#/properties/beneficiaryAccountNumber","type":"string","title":"Beneficiary account number","maxLength":"50","errorMessage":"Length of Account Number should not be more than 50 characters."},"beneficiaryBankName":{"$id":"#/properties/beneficiaryBankName","type":"string","title":"Beneficiary bank name","maxLength":"255","errorMessage":"Length of Bank Name should not be more than 255 characters."},"beneficiaryBankCode":{"$id":"#/properties/beneficiaryBankCode","type":"string","title":"Beneficiary bank code","pattern":"^[0-9]{3}$","errorMessage":"Length of Bank code should be 3 digits."},"beneficiaryIdentificationType":{"$id":"#/properties/beneficiaryIdentificationType","type":"string","title":"Beneficiary identification type","pattern":"^[A-Za-z0-9\\s-.():_/]{1,255}$","errorMessage":"Identification Type can contain only these special characters - (- . ( ) : _ /)"},"beneficiaryIdentificationValue":{"$id":"#/properties/beneficiaryIdentificationValue","type":"string","title":"Beneficiary identification value","pattern":"^[A-Za-z0-9\\s-.():_/]{1,255}$","errorMessage":"Identification Value can contain only these special characters - (- . ( ) : _ /)"}},"if":{"properties":{"clientLegalEntity":{"const":"AU"}},"required":["clientLegalEntity"]},"then":{"required":["beneficiaryAddress","beneficiaryCity","beneficiaryBankName"]}}]}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"BadRequest"},"401":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Not Found"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Internal Server Error"}},"tags":["Beneficiary"],"deprecated":false,"description":"This API will allow you to fetch the validation schema for beneficiary validation details.","operationId":"BeneficiaryValidationSchemaV2","summary":"Beneficiary Validation Schema V2","x-info":{"apiType":"external"},"security":[{"default":[]}]}},"/api/v2/client/{clientHashId}/customer/{customerHashId}/beneficiaries/validate":{"post":{"parameters":[{"description":"Unique client identifier generated and shared before API handshake.","in":"path","name":"clientHashId","required":true,"schema":{"type":"string","example":"{{clientHashId}}"}},{"description":"Unique customer identifier generated on customer creation.","in":"path","name":"customerHashId","required":true,"schema":{"type":"string"}},{"description":"Enter a unique UUID value","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BeneficiaryValidationResponseDTO"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"BadRequest"},"401":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Not Found"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Internal Server Error"}},"tags":["Beneficiary"],"deprecated":false,"description":"This API allows you to Validate Beneficiary Details.\n >ℹ️ INFO \n >This API only supports account verification for below destination corridors.\n>**For LOCAL payment method:** Vietnam (VN), Thailand (TH), India (IN), Pakistan(PK), Malaysia(MY), Indonesia (ID)\n>**For PROXY payment method:** Singapore (SG), India (IN), Malaysia(MY)","operationId":"ConfirmationofPayee","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BeneficiaryValidationRequestDTO"}}},"description":"beneficiaryValidationRequestDTO","required":true},"summary":"Confirmation of Payee (Previous version)","x-info":{"apiType":"external"},"security":[{"default":[]}]}},"/api/v1/client/{clientHashId}/customer/{customerHashId}/beneficiaries":{"get":{"parameters":[{"description":"Unique client identifier generated and shared before API handshake.","in":"path","name":"clientHashId","required":true,"schema":{"type":"string","example":"{{clientHashId}}"}},{"description":"Unique customer identifier generated on customer creation.","in":"path","name":"customerHashId","required":true,"schema":{"type":"string"}},{"description":"parameters","in":"query","name":"parameters","required":false,"schema":{"items":{"additionalProperties":{"type":"string"},"type":"object"},"type":"string"}},{"description":"Enter a unique UUID value","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"responses":{"200":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/Resource"}}},"description":"OK"},"400":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"BadRequest"},"401":{"content":{"*/*":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"*/*":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Not Found"},"500":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Internal Server Error"}},"tags":["Beneficiary"],"deprecated":false,"description":"This API allows you to fetch beneficiary details.\n >⚠️ WARNING \n >This API version is deprecated. Eventually, a deprecated API version becomes unsupported. [Beneficiary List V2](/apis/reference/beneficiarylistv2) is the latest version of this API.","operationId":"BeneficiaryList","summary":"Beneficiary List","x-info":{"apiType":"external"},"security":[{"default":[]}]},"post":{"parameters":[{"description":"Unique client identifier generated and shared before API handshake.","in":"path","name":"clientHashId","required":true,"schema":{"type":"string","example":"{{clientHashId}}"}},{"description":"Unique customer identifier generated on customer creation.","in":"path","name":"customerHashId","required":true,"schema":{"type":"string"}},{"description":"Enter a unique UUID value","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"responses":{"200":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/Resource"}}},"description":"OK"},"400":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"BadRequest"},"401":{"content":{"*/*":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"*/*":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Not Found"},"500":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Internal Server Error"}},"tags":["Beneficiary"],"deprecated":false,"description":"This API allows you to add a beneficiary to transfer funds.\n >⚠️ WARNING \n >This API version is deprecated. Eventually, a deprecated API version becomes unsupported. [Add Beneficiary V2](/apis/reference/addbeneficiaryv2) is the latest version of this API.","operationId":"AddBeneficiary","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AddBeneficiaryRequest"},"example":{"beneficiaryDetail":{"name":"John Adams","account_type":"Individual","address":"66 Mills Street","country_code":"AU","state":"Queensland","city":"Herston","postcode":"4006","contact_country_code":"61","contact_number":"2432082348"},"payoutDetail":{"country_code":"AU","destination_currency":"AUD","account_number":"1234588","routing_code_type_1":"BSB CODE","routing_code_value_1":"404456","payout_method":"LOCAL"},"authenticationCode":"auth001"}}},"description":"addBeneficiaryRequest","required":true},"summary":"Add Beneficiary","x-info":{"apiType":"external"},"security":[{"default":[]}]}},"/api/v1/client/{clientHashId}/customer/{customerHashId}/beneficiaries/{beneficiaryHashId}":{"delete":{"parameters":[{"description":"Unique beneficiary hash ID.","in":"path","name":"beneficiaryHashId","required":true,"schema":{"type":"string"}},{"description":"Unique client identifier generated and shared before API handshake.","in":"path","name":"clientHashId","required":true,"schema":{"type":"string","example":"{{clientHashId}}"}},{"description":"Unique customer identifier generated on customer creation.","in":"path","name":"customerHashId","required":true,"schema":{"type":"string"}},{"description":"Enter a unique UUID value","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"responses":{"200":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/Resource"}}},"description":"OK"},"400":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"BadRequest"},"401":{"content":{"*/*":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"*/*":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Not Found"},"500":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Internal Server Error"}},"tags":["Beneficiary"],"deprecated":false,"description":"This API allows you to delete a beneficiary.","operationId":"DeleteBeneficiary","summary":"Delete Beneficiary","x-info":{"apiType":"external"},"security":[{"default":[]}]},"get":{"parameters":[{"description":"Unique beneficiary hash ID.","in":"path","name":"beneficiaryHashId","required":true,"schema":{"type":"string"}},{"description":"Unique client identifier generated and shared before API handshake.","in":"path","name":"clientHashId","required":true,"schema":{"type":"string","example":"{{clientHashId}}"}},{"description":"Unique customer identifier generated on customer creation.","in":"path","name":"customerHashId","required":true,"schema":{"type":"string"}},{"description":"Enter a unique UUID value","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"responses":{"200":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/Resource"}}},"description":"OK"},"400":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"BadRequest"},"401":{"content":{"*/*":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"*/*":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Not Found"},"500":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Internal Server Error"}},"tags":["Beneficiary"],"deprecated":false,"description":"This API allows you to fetch beneficiary details of an individual beneficiary.\n >⚠️ WARNING \n >This API version is deprecated. Eventually, a deprecated API version becomes unsupported. [Beneficiary Details V2](/apis/reference/beneficiarydetailsv2) is the latest version of this API.","operationId":"BeneficiaryDetails","summary":"Beneficiary Details","x-info":{"apiType":"external"},"security":[{"default":[]}]},"put":{"parameters":[{"description":"Unique beneficiary hash ID.","in":"path","name":"beneficiaryHashId","required":true,"schema":{"type":"string"}},{"description":"Unique client identifier generated and shared before API handshake.","in":"path","name":"clientHashId","required":true,"schema":{"type":"string","example":"{{clientHashId}}"}},{"description":"Unique customer identifier generated on customer creation.","in":"path","name":"customerHashId","required":true,"schema":{"type":"string"}},{"description":"Enter a unique UUID value","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"responses":{"200":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/Resource"},"example":{"beneficiaryDetail":{"beneficiary_hash_id":"617226f6dee66b0017e1479c","name":"John Adams New","account_type":"Individual","address":"99 Mills Street","country_code":"AU","state":"Queensland","city":"Herston","postcode":"4006","created_at":"2021-10-22T02:50:30.120Z","contact_country_code":"61","contact_number":"2432082348"},"payoutDetail":{"payout_hash_id":"617226f6dee66b0017e1479d","country_code":"AU","destination_currency":"AUD","account_number":"1234589","routing_code_type_1":"BSB CODE","routing_code_value_1":"404456","payout_method":"LOCAL","created_at":"2021-10-22T02:50:30.127Z"}}}},"description":"OK"},"400":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"BadRequest"},"401":{"content":{"*/*":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"*/*":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Not Found"},"500":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Internal Server Error"}},"tags":["Beneficiary"],"deprecated":false,"description":"This API allows you to update beneficiary details.","operationId":"UpdateBeneficiary","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AddBeneficiaryRequest"},"example":{"beneficiaryDetail":{"name":"John Adams New","account_type":"Individual","address":"99 Mills Street","country_code":"AU","state":"Queensland","city":"Herston","postcode":"4006","contact_country_code":"61","contact_number":"2432082348"},"payoutDetail":{"country_code":"AU","destination_currency":"AUD","account_number":"1234589","routing_code_type_1":"BSB CODE","routing_code_value_1":"404456","payout_method":"LOCAL"},"authenticationCode":"auth001"}}},"description":"Info:\n Update Beneficiary API will be restricted when a remittance transaction for the beneficiary is Pending."},"summary":"Update Beneficiary","x-info":{"apiType":"external"},"security":[{"default":[]}]}},"/api/v1/client/{clientHashId}/customer/{customerHashId}/currency/{currencyCode}/validationSchemas":{"get":{"parameters":[{"description":"Unique client identifier generated and shared before API handshake.","in":"path","name":"clientHashId","required":true,"schema":{"type":"string","example":"{{clientHashId}}"}},{"description":"This field accepts the 3-letter [ISO-4217 currency code](doc:currency-and-country-codes).","in":"path","name":"currencyCode","required":true,"schema":{"type":"string"}},{"description":"Unique customer identifier generated on customer creation.","in":"path","name":"customerHashId","required":true,"schema":{"type":"string"}},{"allowEmptyValue":false,"description":"This field can accept the different modes of payout.This field can accept one of the following values:\n1.LOCAL\n2.SWIFT\n3.WALLET\nDefault value of the parameter is LOCAL.","in":"query","name":"payoutMethod","required":false,"schema":{"type":"string"}},{"description":"Enter a unique UUID value","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Resource"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"BadRequest"},"401":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Not Found"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Internal Server Error"}},"tags":["Beneficiary"],"deprecated":false,"description":"This API will allow you to fetch the validation schema for beneficiary validation details.\n >⚠️ WARNING \n >This API version is deprecated. Eventually, a deprecated API version becomes unsupported. [Beneficiary Validation Schema V2](/apis/reference/beneficiaryvalidationschemav2) is the latest version of this API.","operationId":"BeneficiaryValidationSchema","summary":"Beneficiary Validation Schema","x-info":{"apiType":"external"},"security":[{"default":[]}]}},"/api/v2/client/{clientHashId}/payout/banks":{"get":{"parameters":[{"description":"This field can accept the bank code of specified branch and country.","in":"query","name":"bankCode","required":false,"schema":{"type":"string"}},{"description":"This field can accept the bank name associated with country.","in":"query","name":"bankName","required":false,"schema":{"type":"string"}},{"description":"Unique client identifier generated and shared before API handshake.","in":"path","name":"clientHashId","required":true,"schema":{"type":"string","example":"{{clientHashId}}"}},{"description":"This field accepts the [2-letter ISO-2 country code](doc:currency-and-country-codes) for which routing code search is initiated.","in":"query","name":"countryCode","required":true,"schema":{"type":"string"}},{"description":"This field accepts the [3-letter ISO-4217 currency code](doc:currency-and-country-codes) for which routing code search is to be initiated.","in":"query","name":"currencyCode","required":false,"schema":{"type":"string"}},{"description":"This field can accept the different modes of payout. This field can accept one of the following values:\nLOCAL\nSWIFT\nWALLET\nCARD\nPROXY(upcoming feature)\nDefault value of the parameter is LOCAL.","in":"query","name":"payoutMethod","required":false,"schema":{"type":"string"}},{"description":"This field determines the routing code type for the search.","in":"query","name":"routingCodeType","required":true,"schema":{"enum":["IFSC","SWIFT","ACH CODE","BSB CODE","SORT CODE","BANK CODE","LOCATION ID","BRANCH CODE","BRANCH NAME","TRANSIT NUMBER"],"type":"string"}},{"description":"This field accepts the partial or full value of the Bank Name on which the search is initiated, for example, it could be DBS.","in":"query","name":"searchValue","required":true,"schema":{"type":"string"}},{"description":"Enter a unique UUID value","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/PartialSearchBankNameResponseDTO"},"type":"array"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"BadRequest"},"401":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Not Found"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Internal Server Error"}},"tags":["Reference Data"],"deprecated":false,"description":"This API will allow you to search the routing code details using bank name.","operationId":"SearchRoutingCodeUsingBankName","summary":"Search Routing Code Using Bank Name","x-info":{"apiType":"external"},"security":[{"default":[]}]}},"/api/v2/client/{clientHashId}/payout/branches":{"get":{"parameters":[{"description":"This field can accept the bank code of specified branch and country.","in":"query","name":"bankCode","required":false,"schema":{"type":"string"}},{"description":"This field can accept the bank name associated with country.","in":"query","name":"bankName","required":false,"schema":{"type":"string"}},{"description":"Unique client identifier generated and shared before API handshake.","in":"path","name":"clientHashId","required":true,"schema":{"type":"string","example":"{{clientHashId}}"}},{"description":"This field accepts the [2-letter ISO-2 country code](doc:currency-and-country-codes) for which routing code search is initiated.","in":"query","name":"countryCode","required":true,"schema":{"type":"string"}},{"description":"This field accepts the [3-letter ISO-4217 currency code](doc:currency-and-country-codes) for which routing code search is to be initiated.","in":"query","name":"currencyCode","required":false,"schema":{"type":"string"}},{"description":"This field can accept the different modes of payout. This field can accept one of the following values:\nLOCAL\nSWIFT\nWALLET\nCARD\nPROXY(upcoming feature)\nDefault value of the parameter is LOCAL.","in":"query","name":"payoutMethod","required":false,"schema":{"type":"string"}},{"description":"This field determines the routing code type for the search.","in":"query","name":"routingCodeType","required":true,"schema":{"enum":["IFSC","SWIFT","ACH CODE","BSB CODE","SORT CODE","BANK CODE","LOCATION ID","BRANCH CODE","BRANCH NAME","TRANSIT NUMBER"],"type":"string"}},{"description":"This field accepts the partial or full value of the Bank Name on which the search is initiated, for example, it could be DBS.","in":"query","name":"searchValue","required":true,"schema":{"type":"string"}},{"description":"Enter a unique UUID value","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/PartialSearchBranchNameResponseDTO"},"type":"array"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"BadRequest"},"401":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Not Found"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Internal Server Error"}},"tags":["Reference Data"],"deprecated":false,"description":"This API will allow you to search the routing code details using branch name.","operationId":"SearchRoutingCodeUsingBranchName","summary":"Search Routing Code Using Branch Name","x-info":{"apiType":"external"},"security":[{"default":[]}]}},"/api/v2/client/{clientHashId}/supportedCorridors":{"get":{"parameters":[{"description":"This field accepts the beneficiary account type.","in":"query","name":"beneficiaryAccountType","required":false,"schema":{"type":"string"}},{"description":"Unique client identifier generated and shared before API handshake.","in":"path","name":"clientHashId","required":true,"schema":{"type":"string","example":"{{clientHashId}}"}},{"description":"This field accepts type of Client e.g. FI, NonFI, default NonFI.","in":"query","name":"clientType","required":false,"schema":{"type":"string"}},{"description":"This field accepts the type of customer.","in":"query","name":"customerType","required":false,"schema":{"type":"string"}},{"description":"This field accepts the [2-letter ISO-2 destination country code](https://docs.nium.com/apis/docs/currency-and-country-codes).","in":"query","name":"destinationCountry","required":false,"schema":{"type":"string"}},{"description":"This field accepts the [3-letter ISO-4217 currency code](https://docs.nium.com/apis/docs/currency-and-country-codes) which will be used to filter the user selected currency and get the payout method.","in":"query","name":"destinationCurrency","required":false,"schema":{"type":"string"}},{"description":"This field accepts the different modes of payout.","in":"query","name":"payoutMethod","required":false,"schema":{"type":"string"}},{"description":"This field determines the routing code type for the currency.","in":"query","name":"routingCodeType","required":false,"schema":{"type":"string"}},{"description":"Enter a unique UUID value","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/SupportedCorridorsResponseDTO"},"type":"array"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"BadRequest"},"401":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Not Found"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Internal Server Error"}},"tags":["Reference Data"],"deprecated":false,"description":"This API will allow you to fetch the supported corridors for remittance with details.","operationId":"FetchSupportedCorridorsV2","summary":"Fetch Supported Corridors V2","x-info":{"apiType":"external"},"security":[{"default":[]}]}},"/api/v1/client/{clientHashId}/customer/{customerHashId}/country/{countryCode}/routingCodeType/{routingCodeType}/routingCodeValue/{routingCodeValue}/routingCode":{"get":{"parameters":[{"description":"Unique client identifier generated and shared before API handshake.","in":"path","name":"clientHashId","required":true,"schema":{"type":"string","example":"{{clientHashId}}"}},{"description":"This field accepts the [2-letter ISO-2 country code](doc:currency-and-country-codes) of a beneficiary.","in":"path","name":"countryCode","required":true,"schema":{"type":"string"}},{"description":"This field accepts the unique customer identifier generated on customer creation.","in":"path","name":"customerHashId","required":true,"schema":{"type":"string"}},{"description":"This field accepts the routing code type 1. The possible values are:\nSWIFT for all cases where SWIFT is applicable\nIFSC (relevant for India)\nACH CODE (relevant for USA)\nBSB CODE (relevant for Australia)\nSORT CODE (relevant for the UK)\nLOCATION ID (relevant for Nepal)\nBANK CODE (relevant for few countries including Canada, Hong Kong, Sri Lanka, South Korea, Pakistan, Brazil, and some more)\nTRANSIT NUMBER (relevant for Canada)\nBRANCH CODE (relevant for Sri Lanka, Vietnam, Brazil, Uruguay, Kenya and some more)\nGiven that the routing_code_type_1 is a PATH parameter, apply URL encoding. For example, when you want to pass ACH CODE, after URL encoding you will pass it as ACH%20CODE","in":"path","name":"routingCodeType","required":true,"schema":{"type":"string"}},{"description":"This field accepts the routing code value 1. Refer to the [Examples of Routing Codes](/apis/docs/routing-codes#examples-of-routing-codes).","in":"path","name":"routingCodeValue","required":true,"schema":{"type":"string"}},{"description":"Enter a unique UUID value","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"responses":{"200":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/Resource"}}},"description":"OK"},"400":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"BadRequest"},"401":{"content":{"*/*":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"*/*":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Not Found"},"500":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Internal Server Error"}},"tags":["Reference Data"],"deprecated":false,"description":"This API allows you to fetch the bank details against the routing information.","operationId":"FetchBankDetailsusingRoutingCode","summary":"Fetch Bank Details using Routing Code","x-info":{"apiType":"external"},"security":[{"default":[]}]}},"/api/v1/client/{clientHashId}/customer/{customerHashId}/partialSearch":{"post":{"parameters":[{"description":"Unique client identifier generated and shared before API handshake.","in":"path","name":"clientHashId","required":true,"schema":{"type":"string","example":"{{clientHashId}}"}},{"description":"Unique customer identifier generated on customer creation.","in":"path","name":"customerHashId","required":true,"schema":{"type":"string"}},{"description":"Enter a unique UUID value","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Resource"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"BadRequest"},"401":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Not Found"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Internal Server Error"}},"tags":["Reference Data"],"deprecated":false,"description":"This API will allow you to search the routing code details of a bank based on certain parameters - i.e., by using bank name or branch name.\nThis API will help you to build a user experience where you can help your users to locate a specific routing code (that could be SWIFT, IFSC, SORT CODE, ACH CODE, etc., - see the list below) by using full or partial name search of bank name or branch name. For example, if your user is looking for SWIFT CODE for HSBC in the UK, then this API can be used to search for the SORT CODE by searching using the bank name.","operationId":"SearchRoutingCodeusingbanknamebranchname","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PartialSearchDTO"}}},"description":"partialSearchDTO","required":true},"summary":"Search Routing Code (using bank name/branch name)","x-info":{"apiType":"external"},"security":[{"default":[]}]}},"/api/v1/client/{clientHashId}/customer/{customerHashId}/supportedCorridors":{"get":{"parameters":[{"description":"Unique client identifier generated and shared before API handshake.","in":"path","name":"clientHashId","required":true,"schema":{"type":"string","example":"{{clientHashId}}"}},{"description":"Unique customer identifier generated on customer creation.","in":"path","name":"customerHashId","required":true,"schema":{"type":"string"}},{"description":"Enter a unique UUID value","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Resource"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"BadRequest"},"401":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Not Found"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Internal Server Error"}},"tags":["Reference Data"],"deprecated":false,"description":"This API will allow you to fetch the supported corridors for remittance with details.","operationId":"FetchSupportedCorridors","summary":"Fetch Supported Corridors","x-info":{"apiType":"external"},"security":[{"default":[]}]}},"/api/v1/client/{clientHashId}/customer/{customerHashId}/widget/token":{"post":{"parameters":[{"description":"Unique client identifier generated and shared before API handshake.","in":"path","name":"clientHashId","required":true,"schema":{"type":"string","example":"{{clientHashId}}"}},{"description":"Unique customer identifier generated during customer creation.","in":"path","name":"customerHashId","required":true,"schema":{"type":"string"}},{"description":"Enter a unique UUID value","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"responses":{"200":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerCardWidgetTokenResponse"}}},"description":"OK"},"400":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"BadRequest"},"401":{"content":{"*/*":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"*/*":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Not Found"},"500":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Internal Server Error"}},"tags":["Payout"],"deprecated":false,"description":"This API allows you to use NIUM’s card widget to tokenize beneficiary card details. Non-PCI DSS compliant Clients are expected to integrate with this new API to get beneficiary’s encrypted card token number. This token number needs to be passed in field encryptedBeneficiaryCardToken while adding a beneficiary to make a payout to card.","operationId":"CustomerGetCardWidget","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerCardWidgetTokenRequestDTO"}}},"description":"cardWidgetTokenRequestDTO","required":true},"summary":"Get Card Widget","x-info":{"apiType":"external"},"security":[{"default":[]}]}},"/api/v1/client/{clientHashId}/customer/{customerHashId}/wallet/{walletHashId}/refund":{"post":{"parameters":[{"description":"Unique client identifier generated and shared before API handshake.","in":"path","name":"clientHashId","required":true,"schema":{"type":"string","example":"{{clientHashId}}"}},{"description":"Unique customer identifier generated on customer creation.","in":"path","name":"customerHashId","required":true,"schema":{"type":"string"}},{"description":"Unique wallet identifier generated simultaneously with customer creation.","in":"path","name":"walletHashId","required":true,"schema":{"type":"string"}},{"description":"Enter a unique UUID value","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseOfWalletRefundResponseDTO"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WalletApiError"}}},"description":"BadRequest"},"401":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WalletApiError"}}},"description":"Not Found"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WalletApiError"}}},"description":"Internal Server Error"}},"tags":["Payout"],"deprecated":false,"description":"This API allows you to withdraw funds from the customer's wallet.","operationId":"WithdrawFundsFromWallet","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WalletRefundRequestDTO"}}},"description":"walletRefundRequestDTO","required":true},"summary":"Withdraw Funds from Wallet","x-info":{"apiType":"external"},"security":[{"default":[]}]}},"/api/v1/client/{clientHashId}/customer/{customerHashId}/wallet/{walletHashId}/remittance":{"post":{"parameters":[{"description":"Unique client identifier generated and shared before API handshake.","in":"path","name":"clientHashId","required":true,"schema":{"type":"string","example":"{{clientHashId}}"}},{"description":"Unique customer identifier generated on customer creation.","in":"path","name":"customerHashId","required":true,"schema":{"type":"string"}},{"description":"Unique wallet identifier generated simultaneously with customer creation.","in":"path","name":"walletHashId","required":true,"schema":{"type":"string"}},{"description":"Enter a unique UUID value","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RemittanceResponseDTO"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WalletApiError"}}},"description":"BadRequest"},"401":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WalletApiError"}}},"description":"Not Found"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WalletApiError"}}},"description":"Internal Server Error"}},"tags":["Payout"],"deprecated":false,"description":"This API will allow you to send money to the registered beneficiary.","operationId":"TransferMoney","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RemittanceTransactionsRequestDTO"}}},"description":"remittanceTransactionsRequestDTO","required":true},"summary":"Transfer Money","x-info":{"apiType":"external"},"security":[{"default":[]}]}},"/api/v1/client/{clientHashId}/customer/{customerHashId}/wallet/{walletHashId}/remittance/{systemReferenceNumber}/audit":{"get":{"parameters":[{"description":"Unique client identifier generated and shared before API handshake.","in":"path","name":"clientHashId","required":true,"schema":{"type":"string","example":"{{clientHashId}}"}},{"description":"Unique customer identifier generated on customer creation.","in":"path","name":"customerHashId","required":true,"schema":{"type":"string"}},{"description":"This is a unique system reference number generated by card issuance platform for the transaction.","in":"path","name":"systemReferenceNumber","required":true,"schema":{"type":"string"}},{"description":"Unique wallet identifier generated simultaneously with customer creation.","in":"path","name":"walletHashId","required":true,"schema":{"type":"string"}},{"description":"Enter a unique UUID value","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RemittanceEventsResponseDTO2"},"type":"array","example":[{"lastUpdatedAt":"2021-07-21 06:15:05","partnerReferenceNumber":"UATPY347218677","paymentReferenceNumber":"3439355906865742179996444814736","status":"PAID","systemReferenceNumber":"RT1865935214","gpi":null},{"lastUpdatedAt":"2021-07-20 09:15:06","partnerReferenceNumber":"UATPY347218677","paymentReferenceNumber":"3439355906865742179996444814736","status":"SENT_TO_BANK","systemReferenceNumber":"RT1865935214","gpi":{"reasonCode":"G000","statusDescription":"Delivered to next bank","timestamp":"2021-07-20 08:15:06","forwardBankName":"DONGUANN RURAL","forwardBankCode":"DGCCCN22XXX","remarks":"The payment has been forwarded to next participant bank in the swift network. It can be either credited to beneficiary directly or passed to next bank."}},{"lastUpdatedAt":"2021-07-20 07:23:03","partnerReferenceNumber":"UATPY347218677","paymentReferenceNumber":"null","status":"PG_PROCESSING","systemReferenceNumber":"RT1865935214","gpi":null}]}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WalletApiError"}}},"description":"BadRequest"},"401":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WalletApiError"}}},"description":"Not Found"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WalletApiError"}}},"description":"Internal Server Error"}},"tags":["Payout"],"deprecated":false,"description":"This API allows you to fetch the Remittance Life Cycle Status along with Payment Reference Number, Partner Reference Number, System Reference Number, Date and Time of the Remittance status based on the System Reference Number provided in the input.","operationId":"FetchRemittanceLifeCycleStatus","summary":"Fetch Remittance Life Cycle Status","x-info":{"apiType":"external"},"security":[{"default":[]}]}},"/api/v1/client/{clientHashId}/customer/{customerHashId}/wallet/{walletHashId}/transactions/{authCode}/rfi/upload":{"post":{"parameters":[{"description":"Authorization code of the transaction.","in":"path","name":"authCode","required":true,"schema":{"type":"string"}},{"description":"Unique client identifier generated and shared before API handshake.","in":"path","name":"clientHashId","required":true,"schema":{"type":"string","example":"{{clientHashId}}"}},{"description":"Unique customer identifier generated on customer creation.","in":"path","name":"customerHashId","required":true,"schema":{"type":"string"}},{"description":"Unique wallet identifier generated simultaneously with customer creation.","in":"path","name":"walletHashId","required":true,"schema":{"type":"string"}},{"description":"Enter a unique UUID value","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"responses":{"200":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/UploadRfiDetailsResponseDTO"}}},"description":"OK"},"400":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/WalletApiError"}}},"description":"BadRequest"},"401":{"content":{"*/*":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"*/*":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/WalletApiError"}}},"description":"Not Found"},"500":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/WalletApiError"}}},"description":"Internal Server Error"}},"tags":["Payout"],"deprecated":false,"description":"This API allows you to respond to an RFI raised for a transaction.","operationId":"RespondtoTransactionRFI","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UploadRfiDocumentRequestDTO"}}},"description":"uploadRfiDocumentRequestDTO","required":true},"summary":"Respond to Transaction RFI","x-info":{"apiType":"external"},"security":[{"default":[]}]}},"/api/v1/remittance/purposeCodes":{"get":{"responses":{"200":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/PurposeCodeResponseDTO"},"type":"array"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WalletApiError"}}},"description":"BadRequest"},"401":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WalletApiError"}}},"description":"Not Found"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WalletApiError"}}},"description":"Internal Server Error"}},"tags":["Payout"],"deprecated":false,"description":"This API will allow you to fetch the list of purpose of transfer.","operationId":"PurposeofTransfer","summary":"Purpose of Transfer","x-info":{"apiType":"external"},"parameters":[{"description":"Enter a unique UUID value","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"security":[{"default":[]}]}},"/api/v1/client/{clientHashId}/customer/{customerHashId}/wallet/{walletHashId}/remittance/{systemReferenceNumber}/receipt":{"get":{"parameters":[{"description":"Unique client identifier generated and shared before API handshake.","in":"path","name":"clientHashId","required":true,"schema":{"type":"string"}},{"description":"Unique customer identifier generated on customer creation.","in":"path","name":"customerHashId","required":true,"schema":{"type":"string"}},{"description":"Unique System Reference Number generated on Transfer Money request.","in":"path","name":"systemReferenceNumber","required":true,"schema":{"type":"string"}},{"description":"Unique wallet identifier generated simultaneously with customer creation.","in":"path","name":"walletHashId","required":true,"schema":{"type":"string"}},{"description":"Enter a unique UUID value.","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"responses":{"200":{"description":"Returns a transaction receipt file TransactionReceipt_<systemReferenceNumber>.pdf"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError2"}}},"description":"Bad Request"},"401":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError2"}}},"description":"Not Found"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError2"}}},"description":"Internal Server Error"}},"tags":["Payout"],"deprecated":false,"description":"This API allows you to download a proof of payment receipt against a transaction.","operationId":"PoP","summary":"Get Proof Of Payment","x-info":{"apiType":"external"},"security":[{"default":[]}]}},"/api/v1/client/{clientHashId}/customer/{customerHashId}/wallet/{walletHashId}/mandate/{mandateId}/transactions/{transactionId}/return":{"post":{"parameters":[{"description":"Unique client identifier generated and shared before API handshake.","in":"path","name":"clientHashId","required":true,"schema":{"type":"string"}},{"description":"Unique customer identifier generated on customer creation.","in":"path","name":"customerHashId","required":true,"schema":{"type":"string"}},{"description":"Unique mandateId","in":"path","name":"mandateId","required":true,"schema":{"type":"string"}},{"description":"Unique transactionId","in":"path","name":"transactionId","required":true,"schema":{"type":"string"}},{"description":"Unique wallet identifier generated simultaneously with customer creation.","in":"path","name":"walletHashId","required":true,"schema":{"type":"string"}},{"description":"Enter a unique UUID value.","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError2"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError2"}}},"description":"Bad Request"},"401":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError2"}}},"description":"Not Found"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError2"}}},"description":"Internal Server Error"}},"tags":["Payout"],"deprecated":false,"description":"This API will allow you to return to Direct Debit Mandate","operationId":"returnMandate","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateMandateRequestDTO"}}},"description":"updateMandateRequestDTO","required":true},"summary":"Return Mandate","x-info":{"apiType":"external"},"security":[{"default":[]}]}},"/api/v3/client/{clientHashId}/supportedCorridors":{"get":{"parameters":[{"description":"This field accepts the beneficiary account type.","in":"query","name":"beneficiaryAccountType","required":false,"schema":{"enum":["INDIVIDUAL","CORPORATE"],"type":"string"}},{"description":"Unique client identifier generated and shared before API handshake.","in":"path","name":"clientHashId","required":true,"schema":{"type":"string"}},{"description":"This field accepts the type of customer.","in":"query","name":"customerType","required":false,"schema":{"enum":["INDIVIDUAL","CORPORATE"],"type":"string"}},{"description":"This field accepts the [2-letter ISO-2 destination country code](https://docs.nium.com/apis/docs/currency-and-country-codes).","in":"query","name":"destinationCountry","required":false,"schema":{"type":"string"}},{"description":"This field accepts the [3-letter ISO-4217 currency code](https://docs.nium.com/apis/docs/currency-and-country-codes) which will be used to filter the user selected currency and get the payout method.","in":"query","name":"destinationCurrency","required":false,"schema":{"type":"string"}},{"description":"The sort order for the results.","example":"DESC","in":"query","name":"order","required":false,"schema":{"enum":["ASC","DESC"],"type":"string"}},{"description":"This API may have lot of data in response and supports pagination. Entire response data is divided into pages with size as the upper limit on the number of data. Integer values from 0 onwards are acceptable.\\nDefault page is 0.","example":0,"in":"query","name":"page","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"This field accepts the different modes of payout.","in":"query","name":"payoutMethod","required":false,"schema":{"enum":["LOCAL","SWIFT","WALLET","CASH","CARD","PROXY"],"type":"string"}},{"description":"Breakdowns the supported payout methods into different categories including: <code>ach</code>, <code>cash</code>, <code>proxy_api</code>, <code>wire_local</code> and others.\n","in":"query","name":"payoutMethodCategory","required":false,"schema":{"enum":["visaDirect","sepa","ach","proxy","proxyFps","wallet","wireForeign","proxyDuitnow","wireLocal","proxyBank","cash","unionPay","proxyUpi"],"type":"string"}},{"description":"Determines the routing code type for the currency.","in":"query","name":"routingCodeType","required":false,"schema":{"type":"string"}},{"description":"Determines the number of elements per page. Typical values can be 1-500.","example":500,"in":"query","name":"size","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"Enter a unique UUID value.","in":"header","name":"x-request-id","schema":{"type":"string","example":"{{$guid}}"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SupportedCorridorsResponse"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"BadRequest"},"401":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"schema":{"type":"string"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Not Found"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerApiError"}}},"description":"Internal Server Error"}},"tags":["Reference Data"],"deprecated":false,"description":"This API will allow you to fetch the supported corridors for remittance with details.","operationId":"FetchSupportedCorridorsV3","summary":"Fetch Supported Corridors V3","x-info":{"apiType":"external"},"security":[{"default":[]}]}}},"components":{"schemas":{"AccountVerificationInfoDTO":{"properties":{"name":{"type":"string"},"status":{"type":"string"}},"title":"AccountVerificationInfoDTO","type":"object"},"AddBeneficiaryRequest":{"properties":{"authenticationCode":{"description":"This field accepts the authentication code generated as part of Strong Customer Authentication (SCA).\nNote: Authentication code must be passed if regulatory region of the program is UK or EU. This field does not accept a value for any other region.","type":"string"},"beneficiaryDetail":{"$ref":"#/components/schemas/BeneficiaryDetailRequest","description":"This object accepts the beneficiary details."},"payoutDetail":{"$ref":"#/components/schemas/PayoutRequest","description":"This object accepts the payout details of the beneficiary’s bank."}},"required":["beneficiaryDetail","payoutDetail"],"title":"Add beneficiary request","type":"object"},"AddBeneficiaryRequestDTO":{"properties":{"authenticationCode":{"description":"This fields accepts the authenticationCode generated as part of SCA(Strong Customer Authentication).\nNote: Authentication code must be passed if regulatory region of the program is UK or EU and License Entity Nium. For other regions, this field is optional. \n Note: For this conditional field, see the callout at the top of this page.","type":"string"},"autoSweepPayoutAccount":{"type":"boolean"},"beneficiaryAccountNumber":{"description":"This field accepts an account number. \n Note: For this conditional field, see the callout at the top of this page.","type":"string"},"beneficiaryAccountType":{"description":"This field accepts the bank account type of the beneficiary. The account type can be either Individual or Corporate.","enum":["Individual","Corporate"],"type":"string","example":"INDIVIDUAL"},"beneficiaryAddress":{"description":"This field accepts an address of the beneficiary. \n Note: For this conditional field, see the callout at the top of this page.","type":"string"},"beneficiaryAlias":{"description":"This field accepts the alias of beneficiary. \n Note: For this conditional field, see the callout at the top of this page.","type":"string"},"beneficiaryBankAccountType":{"description":"The type of account. This field is conditional in case of WALLET payout and the possible values are:\nCurrent\nSaving\nMaestra\nChecking \n Note: For this conditional field, see the callout at the top of this page.","type":"string"},"beneficiaryBankCode":{"description":"This field accepts the beneficiary bank code. \n Note: For this conditional field, see the callout at the top of this page.","type":"string"},"beneficiaryBankName":{"description":"This field accepts the beneficiary bank name. \n Note: For this conditional field, see the callout at the top of this page.","type":"string"},"beneficiaryCardExpiryDate":{"description":"This field accepts expiry date of card. \n Note: For this conditional field, see the callout at the top of this page.","type":"string"},"beneficiaryCardIssuerName":{"description":"This field accepts issuer name of the card. \n Note: For this conditional field, see the callout at the top of this page.","type":"string"},"beneficiaryCity":{"description":"This field accepts the city of the beneficiary. \n Note: For this conditional field, see the callout at the top of this page.","type":"string"},"beneficiaryContactCountryCode":{"description":"This field accepts the mobile number country code of the beneficiary. \n Note: For this conditional field, see the callout at the top of this page.","type":"string"},"beneficiaryContactName":{"type":"string","description":"This field accepts the name of the contact person of the business, applicable when beneficiary is a business."},"beneficiaryContactNumber":{"description":"This field accepts the mobile number of the beneficiary--digits only--without the country code. \n Note: For this conditional field, see the callout at the top of this page.","type":"string"},"beneficiaryCountryCode":{"description":"This field accepts the [ISO-2 country code](doc:currency-and-country-codes) of the beneficiary.","type":"string"},"beneficiaryDob":{"type":"string"},"beneficiaryEmail":{"description":"This field accepts an email of the beneficiary. \n Note: For this conditional field, see the callout at the top of this page.","type":"string"},"beneficiaryEntityType":{"type":"string","description":"This field accepts the entity type of the business, when the beneficiary is a business. Refer to the enum value list for allowed values. The value `go` indicates a majority owned subsidiary of state-owned company.","example":"partnership"},"beneficiaryEstablishmentDate":{"type":"string"},"beneficiaryIdentificationType":{"description":"This field accepts the type of identification document name for a beneficiary. \n Note: For this conditional field, see the callout at the top of this page.","type":"string"},"beneficiaryIdentificationValue":{"description":"This field accepts an identification document number for the beneficiary. \n Note: For this conditional field, see the callout at the top of this page.","type":"string"},"beneficiaryName":{"description":"This field accepts the name of the beneficiary.","type":"string"},"beneficiaryPostcode":{"description":"This field accepts the postal code of the beneficiary. \n Note: For this conditional field, see the callout at the top of this page.","type":"string"},"beneficiaryState":{"description":"This field accepts the state of the beneficiary. \n Note: For this conditional field, see the callout at the top of this page.","type":"string"},"convertDestinationCurrency":{"description":"This field denotes if the beneficiary bank converts the amount in the destination account currency and credits to the account in case the beneficiary account is not in the same currency as destination currency.","type":"boolean"},"defaultAutoSweepPayoutAccount":{"type":"boolean"},"destinationCountry":{"description":"This field contains the 2-letter [ISO-2 country code](doc:currency-and-country-codes) of the destination country. \n Note: For this conditional field, see the callout at the top of this page.","type":"string"},"destinationCurrency":{"description":"This field accepts the 3-letter [ISO-4217 destination currency code](doc:currency-and-country-codes).","type":"string"},"encryptedBeneficiaryCardToken":{"description":"This field accepts the system generated token number to identify the card stored at NIUM's platform.\nNote: This field is mandatory if the client is non-PCI DSS compliant. \n Note: For this conditional field, see the callout at the top of this page.","type":"string"},"payoutMethod":{"description":"This field accepts the payout method for the remittance payout. This field can accept one of the following values:\nLOCAL\nSWIFT\nWALLET\nCARD\nPROXY","type":"string"},"proxyType":{"description":"This field indicates the proxy type sent in the payment request.\nFor SGD-PayNow: The proxy type can be MOBILE, UEN , NRIC, or VPA\n For INR-UPI: The proxy type should be VPA\nFor BRL-PIX: The proxy type can be MOBILE, ID, EMAIL, or RANDOM_KEY\n For AUD-PayID: The proxy type can be MOBILE, EMAIL, ABN, or ORGANISATION_ID (only domestic payouts are allowed)\nFor MYR-DuitNow: The proxy type can be NRIC, PASSPORT, CORPORATE_REGISTRATION_NUMBER, MOBILE, or ARMY_ID\nNote: This field is mandatory when the payoutMethod type is PROXY. \n Note: For this conditional field, see the callout at the top of this page.","type":"string"},"proxyValue":{"description":"This field indicates the proxy value such as VPA, UEN, or mobile number etc.\nNote: This field is mandatory when the payoutMethod type is PROXY\nThe mobile number should include country code. \n Note: For this conditional field, see the callout at the top of this page.","type":"string"},"remitterBeneficiaryRelationship":{"description":"This field accepts the relationship of the beneficiary with the remitter. \n Note: For this conditional field, see the callout at the top of this page.","type":"string"},"routingCodeType1":{"description":"This field accepts the routing code type 1, for example, SWIFT for all countries, IFSC for India, SORT CODE for UK, ACH CODE for USA, BRANCH CODE for Brazil and Bangladesh, BSB CODE for Australia, BANK CODE for HongKong. \n Note: For this conditional field, see the callout at the top of this page.","type":"string"},"routingCodeType2":{"description":"This field accepts the routing code type 2, for example, SWIFT for all countries, IFSC for India, SORT CODE for UK, ACH CODE for USA, BRANCH CODE for Brazil and Bangladesh, BSB CODE for Australia, BANK CODE for HongKong. \n Note: For this conditional field, see the callout at the top of this page.","type":"string"},"routingCodeValue1":{"description":"This field accepts the routing code value 1, for example, ADCBINBB or ADCBINBB123 for SWIFT, SBIN0000058 for IFSC, 100000 for SORT CODE, 111000025 for ACH CODE, 012515 for BSB CODE, 151 for BANK CODE. \n Note: For this conditional field, see the callout at the top of this page.","type":"string"},"routingCodeValue2":{"description":"This field accepts the routing code value 2, for example, ADCBINBB or ADCBINBB123 for SWIFT, SBIN0000058 for IFSC, 100000 for SORT CODE, 111000025 for ACH CODE, 012515 for BSB CODE, 151 for BANK CODE. \n Note: For this conditional field, see the callout at the top of this page.","type":"string"}},"required":["beneficiaryAccountType","beneficiaryCountryCode","beneficiaryName","destinationCurrency","payoutMethod"],"title":"Add beneficiary request","type":"object"},"CustomerApiError":{"properties":{"errors":{"description":"List of errors occurred.","example":["field1 is not valid","field2 is not valid"],"items":{"type":"string"},"type":"array"},"message":{"description":"Error message descriptor.","example":"Error message descriptor.","type":"string"},"status":{"description":"HttpStatus of the request : BAD_REQUEST, INTERNAL_SERVER_ERROR.","enum":["200 OK","400 BAD_REQUEST","403 FORBIDDEN","404 NOT_FOUND","500 INTERNAL_SERVER_ERROR","502 BAD_GATEWAY","503 SERVICE_UNAVAILABLE"],"example":"BAD_REQUEST","type":"string"}},"title":"ApiError","type":"object"},"BeneficiaryDetailRequest":{"properties":{"account_type":{"description":"This field accepts the bank account type of the beneficiary. The account_type can be either Individual or Company.","enum":["Individual","Corporate"],"type":"string"},"address":{"description":"This field accepts an address of the beneficiary.","type":"string"},"autosweep_payout_account":{"description":"This field accepts the boolean value for the autosweepPayoutAccount.","type":"boolean"},"beneficiary_contact_name":{"description":"This field accepts the contact name of the beneficiary.","type":"string"},"beneficiary_dob":{"description":"This field accepts the date of birth of the beneficiary in the format YYYY-MM-DD, for example, 2023-07-08","example":"2023-07-08","type":"string"},"beneficiary_entity_type":{"description":"This field accepts the entity type of the beneficiary.","type":"string"},"beneficiary_establishment_date":{"description":"This field accepts the date of establishment of the beneficiary in the format YYYY-MM-DD, for example, 2023-07-08","example":"2023-07-08","type":"string"},"city":{"description":"This field accepts the city of the beneficiary.\nMaximum character limit: 50.","type":"string"},"contact_country_code":{"description":"This field accepts the ISO-2 country code for the mobile number of beneficiary.","type":"string"},"contact_number":{"description":"This field accepts the mobile number of the beneficiary--digits only--without the country code.","type":"string"},"convert_destination_currency":{"description":"This field denotes if the beneficiary bank converts the amount in the destination account currency and credits to the account in case the beneficiary account is not in the same currency as destination currency.","type":"boolean"},"country_code":{"description":"This field accepts the [ISO-2 country code](doc:currency-and-country-codes) for the mobile number of beneficiary.","type":"string"},"default_autosweep_payout_account":{"description":"This field accepts the boolean value for the defaultAutosweepPayoutAccount.","type":"boolean"},"email":{"description":"This field accepts an email of the beneficiary.","type":"string"},"name":{"description":"This field accepts the name of the beneficiary.The beneficiary_group_name is required.Name can contain alphabets, numbers, and special characters that is (. , () ' / -).\nMaximum character limit: 150.","type":"string"},"postcode":{"description":"This field accepts the postal code of the beneficiary.","type":"string"},"relationship":{"description":"This field accepts the relationship of the beneficiary with the remitter.","type":"string"},"state":{"description":"This field accepts the state of the beneficiary. Maximum character limit: 50.","type":"string"}},"required":["account_type","country_code","name"],"title":"Beneficiary detail request","type":"object"},"BeneficiaryResponseDTO":{"properties":{"accountVerification":{"$ref":"#/components/schemas/AccountVerificationInfoDTO","description":"This object contains the account verification details"},"autosweepPayoutAccount":{"description":"This field contains the boolean value for the autosweepPayoutAccount.","type":"boolean"},"beneficiaryAccountNumber":{"description":"This field contains an account number as a payout detail.","type":"string"},"beneficiaryAccountType":{"description":"This field contains the bank account type of the beneficiary. The account type can be either Individual or Corporate.","type":"string"},"beneficiaryAddress":{"description":"This field contains an address of the beneficiary.","type":"string"},"beneficiaryBankAccountType":{"description":"This field contains one of following four bank account types given at the time of beneficiary creation:\n• Current\n• Saving\n• Maestra\n• Checking","enum":["Current","Saving","Maestra","Checking"],"type":"string"},"beneficiaryBankCode":{"description":"This field contains the bank code of the payout.","type":"string"},"beneficiaryBankName":{"description":"This field contains the beneficiary bank name.","type":"string"},"beneficiaryCardExpiryDate":{"description":"This field contains the beneficiary’s card expiry date.","type":"string"},"beneficiaryCardIssuerName":{"description":"This field contains the beneficiary’s card issuer name.","type":"string"},"beneficiaryCardMetaData":{"$ref":"#/components/schemas/CardMetaDataResponseDTO","description":"This object contains the card information."},"beneficiaryCardNumberMask":{"description":"This field contains the 16-digit masked card number of beneficiary in the format XXXX XXXX XXXX 8351.","type":"string"},"beneficiaryCardToken":{"description":"This field contains the system generated token number to identify the card stored at NIUM's platform.","type":"string"},"beneficiaryCardType":{"description":"This field contains the beneficiary card type, for example, VISA, geoswift.","type":"string"},"beneficiaryCity":{"description":"This field contains the city of the beneficiary.","type":"string"},"beneficiaryContactCountryCode":{"description":"This field contains the mobile country code of the beneficiary.","type":"string"},"beneficiaryContactName":{"type":"string","description":"This field contains the name of the contact person of the business, applicable when beneficiary is a business."},"beneficiaryContactNumber":{"description":"This field contains the mobile number of the beneficiary--digits only--without the country code.","type":"string"},"beneficiaryCountryCode":{"description":"This field contains  the 2-letter [ISO-2 country code](doc:currency-and-country-codes) for the mobile number of beneficiary.","type":"string"},"beneficiaryCreatedAt":{"description":"This field contains the date and time of beneficiary creation.","type":"string"},"beneficiaryDob":{"type":"string"},"beneficiaryEmail":{"description":"This field contains an email of the beneficiary.","type":"string"},"beneficiaryEntityType":{"type":"string","description":"This field contains the entity type of the business, when the beneficiary is a business. Refer to the ENUM value list for allowed values. The value GO indicates a majority owned subsidiary of state-owned company.","example":"partnership"},"beneficiaryEstablishmentDate":{"type":"string"},"beneficiaryHashId":{"description":"This field contains the unique beneficiary hash ID.","format":"uuid","type":"string"},"beneficiaryIdentificationType":{"description":"This field contains the type of identification document name for a beneficiary.","type":"string"},"beneficiaryIdentificationValue":{"description":"This field contains an identification document number for the beneficiary.","type":"string"},"beneficiaryName":{"description":"This field contains the name of the beneficiary.","type":"string"},"beneficiaryPostcode":{"description":"This field contains the postal code of the beneficiary.","type":"string"},"beneficiaryState":{"description":"This field contains the state of the beneficiary.","type":"string"},"beneficiaryUpdatedAt":{"description":"This field contains the date and time of beneficiary updation.","type":"string"},"defaultAutosweepPayoutAccount":{"description":"This field contains the boolean value for the defaultAutosweepPayoutAccount.","type":"boolean"},"destinationCountry":{"description":"This field contains the 2-letter [ISO-2 country code](doc:currency-and-country-codes) for the payout bank.","type":"string"},"destinationCurrency":{"description":"This field contains the 3-letter [ISO-4217 destination currency code](doc:currency-and-country-codes) of the payout as per the destination country from supported corridors.","type":"string"},"payoutCreatedAt":{"description":"This field contains the date and time of payout creation.","type":"string"},"payoutHashId":{"description":"This field contains the unique payout hash ID.","format":"uuid","type":"string"},"payoutMethod":{"description":"This field contains the payout method for the remittance payout.","enum":["LOCAL","SWIFT","WALLET"],"type":"string"},"payoutUpdatedAt":{"type":"string","description":"This field contains the time at which payout was updated."},"proxyType":{"description":"This field contains the proxy type sent in the payment request.\n• For SGD-PayNow: The proxy type can be MOBILE, UEN, NRIC, or VPA.\n• For INR-UPI: The proxy type should be VPA.\n• For BRL-PIX: The proxy type can be MOBILE, ID, EMAIL, or RANDOM_KEY.\n• For AUD-PayID: The proxy type can be MOBILE, EMAIL, ABN, or ORGANISATION_ID( only domestic payouts are allowed).\n• For MYR-DuitNow: The proxy type can be NRIC, PASSPORT, CORPORATE_REGISTRATION_NUMBER, MOBILE, or ARMY_ID.","type":"string"},"proxyValue":{"description":"This field contains the proxy value such as VPA, UEN, or mobile number etc.","type":"string"},"remitterBeneficiaryRelationship":{"description":"This field contains the relationship of the beneficiary with the remitter.","type":"string"},"routingCodeType1":{"description":"This field contains the routing code type 1, for example, SWIFT for all countries, IFSC for India, SORT CODE for UK, ACH CODE for USA, BRANCH CODE for Brazil and Bangladesh, BSB CODE for Australia, BANK CODE for HongKong.","type":"string"},"routingCodeType2":{"description":"This field contains the routing code type 2, for example, SWIFT for all countries, IFSC for India, SORT CODE for UK, ACH CODE for USA, BRANCH CODE for Brazil and Bangladesh, BSB CODE for Australia, BANK CODE for HongKong.","type":"string"},"routingCodeValue1":{"description":"This field contains the routing code value 1, for example, ADCBINBB or ADCBINBB123 for SWIFT, SBIN0000058 for IFSC, 100000 for SORT CODE, 111000025 for ACH CODE, 012515 for BSB CODE, 151 for BANK CODE.","type":"string"},"routingCodeValue2":{"description":"This field contains the routing code value 2, for example, ADCBINBB or ADCBINBB123 for SWIFT, SBIN0000058 for IFSC, 100000 for SORT CODE, 111000025 for ACH CODE, 012515 for BSB CODE, 151 for BANK CODE.","type":"string"}},"title":"Beneficiary response","type":"object"},"BeneficiaryValidationRequestDTO":{"properties":{"beneficiaryAccountNumber":{"description":"The beneficiary account number.","type":"string"},"beneficiaryAccountType":{"type":"string","description":"The bank account type of the beneficiary. The account type can be either Individual or Corporate."},"beneficiaryBankCode":{"description":"The bank code of the beneficiary. E.g: The bank code for England is GB.\nNote: This field is mandatory when the destination country is Pakistan (PK).","type":"string"},"beneficiaryContactNumber":{"type":"string","description":"The mobile number of the beneficiary--digits only--without the country code."},"beneficiaryCountryCode":{"type":"string","description":"The 2-letter [ISO-2 country code](doc:currency-and-country-codes) of the beneficiary/bank."},"beneficiaryName":{"description":"This field accepts the name of a beneficiary.","type":"string"},"destinationCountry":{"description":"The 2-letter [ISO-2 country code](doc:currency-and-country-codes) of the destination country.","type":"string"},"destinationCurrency":{"type":"string"},"payoutMethod":{"description":"This field can accept the different modes of payout. This field can accept one of the following values:\nLOCAL\nPROXY\n","type":"string"},"proxyType":{"description":"This field indicates the proxy type sent in the payment request.\n For SGD-PayNow: The proxy type can be MOBILE, UEN , or NRIC\nFor INR-UPI: The proxy type should be VPA\n For MYR-DuitNow: The proxy type can be NRIC, PASSPORT, CORPORATE_REGISTRATION_NUMBER, MOBILE, or ARMY_ID\nNote : This field is mandatory when the payoutMethod type is PROXY.","type":"string"},"proxyValue":{"description":"This field indicates the proxy value such as VPA, UEN, or mobile number etc.\nNote: This field is mandatory when the payoutMethod type is PROXY\nThe mobile number should include country code.","type":"string"},"routingCodeType1":{"description":"This field accepts the routing code type 1, for example, SWIFT for all countries, IFSC for India, SORT CODE for UK, ACH CODE for USA, BRANCH CODE for Brazil and Bangladesh, BSB CODE for Australia, BANK CODE for HongKong.\nThis field is Required if the payoutMethod is LOCAL.","type":"string"},"routingCodeValue1":{"description":"This field accepts the routing code value 1, for example, ADCBINBB or ADCBINBB123 for SWIFT, SBIN0000058 for IFSC, 100000 for SORT CODE, 111000025 for ACH CODE, 012515 for BSB CODE, 151 for BANK CODE.\nThis field is Required if the payoutMethod is LOCAL.","type":"string"}},"required":["destinationCountry","payoutMethod"],"title":"Beneficiary validation request","type":"object"},"BeneficiaryValidationResponseDTO":{"properties":{"beneficiaryBankCode":{"description":"This field contains beneficiary bank code if the payout method is proxy and proxy type is VPA.","type":"string"},"beneficiaryName":{"description":"This field contains beneficiary name if the payout method is proxy.","type":"string"},"status":{"description":"This field contains the status only when the proxy type is VPA. The possible values are:\nVE: Virtual Address Available\nF: Failed\nVN: Virtual Address not Available","type":"string"},"valid":{"description":"This field will return true if the provided details are valid otherwise false.","type":"boolean"}},"title":"Beneficiary validation response","type":"object"},"BranchNameResponseDTO":{"properties":{"city":{"type":"string"},"district":{"type":"string"},"ifsc":{"type":"string"},"state":{"type":"string"}},"title":"Branch name response","type":"object"},"ButtonDTO":{"properties":{"borderColor":{"description":"This field accepts the client card widget style for button border color.","type":"string"},"color":{"description":"This field accepts the client card widget style for button color.","type":"string"},"fontSize":{"description":"This field accepts the client card widget style for button font size.","type":"string"},"textColor":{"description":"This field accepts the client card widget style for button text color.","type":"string"}},"title":"Button","type":"object"},"CSSAttributeDTO":{"properties":{"button":{"$ref":"#/components/schemas/ButtonDTO","description":"This is an object which accepts button properties."},"container":{"$ref":"#/components/schemas/ContainerDTO","description":"This is an object which accepts container properties."},"inputField":{"$ref":"#/components/schemas/InputFieldDTO","description":"This is an object which accepts input fields as CSS attributes."}},"title":"CSS attributes","type":"object"},"CardMetaDataResponseDTO":{"properties":{"billingCurrencyCode":{"description":"This field contains the 3-letter [ISO-4217 destination currency code](doc:currency-and-country-codes) for the card billing currency.","type":"string"},"billingCurrencyMinorDigits":{"description":"This field contains the number of decimal positions that should be present in any amounts for the requested card's billing currency.","type":"string"},"cardIssuerCountryCode":{"description":"This field indicates the beneficiary card issuer [country code](doc:currency-and-country-codes).","type":"string"},"cardTypeCode":{"description":"This field contains the code of the card type, for example, Credit, Debit, Prepaid, Charge, Deferred Debit.","type":"string"},"fastFundsIndicator":{"description":"This field ensures if the card is eligible for fast funds that is if the funds will settle in 30 mins or less. If not eligible then typically fund will settle within 2 business days.","type":"string"},"isBankSupported":{"description":"This field ensures if the issuer bank is supported by the card type such as Visa or geoswift.","type":"boolean"},"isCardValid":{"description":"This field ensures if the card details entered is valid or not.","type":"boolean"},"issuerName":{"description":"This field contains the beneficiary card issuer name.","type":"string"},"onlineGambingBlockIndicator":{"description":"This code ensures if the card can receive push-payments for online gambling payouts.\nIf the value is \"Y\" then the account cannot receive gambling Push Funds (OCTs).\nIf the value is \"N\" then the account can receive gambling Push Funds (OCTs).","type":"string"},"pushFundsBlockIndicator":{"description":"This field ensures if the associated card can receive push-to-card disbursements or not.","type":"string"}},"title":"Card metadata response","type":"object"},"CustomerCardWidgetTokenRequestDTO":{"properties":{"cardType":{"type":"string"},"clientDomain":{"description":"This field contains the domain name where the widget needs to be embedded","type":"string"},"cssAttributes":{"$ref":"#/components/schemas/CSSAttributeDTO","description":"This is an object which accepts CSS attributes."},"destinationCountry":{"description":"This field contains the 2-letter [ISO-2 country code](https://nium-documents.s3-eu-west-1.amazonaws.com/spend-documents/Country+Code.pdf) of the destination country.","type":"string"}},"required":["cardType"],"title":"CardWidgetTokenRequestDTO","type":"object"},"CustomerCardWidgetTokenResponse":{"properties":{"widgetUrl":{"type":"string"}},"title":"CardWidgetTokenResponse","type":"object"},"ContainerDTO":{"properties":{"backgroundColor":{"description":"This field accepts the client card widget style for container background color.","type":"string"},"borderColor":{"description":"This field accepts the client card widget style for container border color.","type":"string"}},"title":"Container","type":"object"},"File":{"properties":{"absolute":{"type":"boolean"},"absoluteFile":{"$ref":"#/components/schemas/File"},"absolutePath":{"type":"string"},"canonicalFile":{"$ref":"#/components/schemas/File"},"canonicalPath":{"type":"string"},"directory":{"type":"boolean"},"file":{"type":"boolean"},"freeSpace":{"format":"int64","type":"integer"},"hidden":{"type":"boolean"},"name":{"type":"string"},"parent":{"type":"string"},"parentFile":{"$ref":"#/components/schemas/File"},"path":{"type":"string"},"totalSpace":{"format":"int64","type":"integer"},"usableSpace":{"format":"int64","type":"integer"}},"title":"File","type":"object"},"IdentificationDocumentDTO":{"properties":{"document":{"description":"This field accepts the Base64 encoded document being uploaded. The size limit of the original document, which can be pdf, jpeg, jpg, or png, and should not exceed 2MB. It is recommended to use standard libraries for the same. For example, java.util.Base64.getEncoder().encodeToString(byte[] data);This can be used in Java.","type":"string"},"fileName":{"description":"This field accepts the file name of the document being uploaded.","type":"string"},"fileType":{"description":"This field accepts the file type of the document being uploaded. The valid values are jpg, jpeg, png, pdf, image/jpg, image/jpeg, image/png, and application/pdf.","type":"string"}},"title":"Identification document","type":"object"},"InputFieldDTO":{"properties":{"activeBorderColor":{"description":"This field accepts the client card widget style for text filed active border color.","type":"string"},"errorBorderColor":{"description":"This field accepts the client card widget style for text filed error border color.","type":"string"},"errorMessageColor":{"description":"This field accepts the client car d widget style for text filed error label color.","type":"string"},"labelColor":{"description":"This field accepts the client card widget style for text filed label color.","type":"string"},"labelFontSize":{"description":"This field accepts the client card widget style for text filed label size.","type":"string"}},"title":"Input field","type":"object"},"InputStream":{"title":"InputStream","type":"object"},"PartialSearchBankNameResponseDTO":{"properties":{"bankName":{"type":"string"},"routingCodeValue":{"items":{"type":"string"},"type":"array"}},"title":"Partial search bank name response","type":"object"},"PartialSearchBranchNameResponseDTO":{"properties":{"branchName":{"type":"string"},"routingCodeValue":{"items":{"$ref":"#/components/schemas/BranchNameResponseDTO"},"type":"array"}},"title":"Partial search branch name response","type":"object"},"PartialSearchDTO":{"properties":{"country_code":{"description":"This field accepts the [2-letter ISO-2 country code](doc:currency-and-country-codes) for which routing code search is initiated.","type":"string"},"currency_code":{"description":"This field accepts the [3-letter ISO-4217 currency code](doc:currency-and-country-codes) for which routing code search is to be initiated.","type":"string"},"payout_method":{"description":"This field can accept the different modes of payout. This field can accept one of the following values:\n1.LOCAL\n2.SWIFT\nDefault value of the parameter is LOCAL.","type":"string"},"routing_code_type":{"description":"This field determines the routing code type for the search. The possible values are:\nIFSC\nSWIFT\nACH CODE\nBSB CODE\nSORT CODE\nBANK CODE\nLOCATION ID\nBRANCH CODE\nBRANCH NAME\nTRANSIT NUMBER","enum":["IFSC","SWIFT","ACH CODE","BSB CODE","SORT CODE","BANK CODE","LOCATION ID","BRANCH CODE","BRANCH NAME","TRANSIT NUMBER"],"type":"string"},"search_key":{"description":"This field accepts the key on which the search is initiated. The possible values for search key are:\nbank_name\nbranch_name","enum":["bank_name","branch_name"],"type":"string"},"search_value":{"description":"This field accepts the partial or full value of the search key on which the search is initiated, for example, if search_key is bank_name, search_value could be DBS.","type":"string"}},"required":["routing_code_type","search_key","search_value"],"title":"Partial search","type":"object"},"PayoutRequest":{"properties":{"account_number":{"description":"This field accepts an account number as a payout detail.","type":"string"},"account_type":{"description":"The type of account. This field is conditional in case of WALLET payout.","enum":["Current","Saving","Maestra","Checking"],"type":"string"},"bank_code":{"description":"This field accepts the bank code of the payout.","type":"string"},"bank_name":{"description":"This field contains the beneficiary bank name.","type":"string"},"country_code":{"description":"This field accepts the [ISO-2 country code](doc:currency-and-country-codes) for the payout bank.","type":"string"},"destination_currency":{"description":"This field accepts the 3-letter [ISO-4217 destination currency code](doc:currency-and-country-codes) of the payout as per the destination country from supported corridors.","type":"string"},"identification_type":{"description":"This field accepts the type of identification document name for a beneficiary.","type":"string"},"identification_value":{"description":"This field accepts an identification document number for the beneficiary.","type":"string"},"payout_method":{"description":"This field accepts the payout method for the remittance payout.","enum":["LOCAL","SWIFT","WALLET","CASH","CARD","PROXY","FEDWIRE"],"type":"string"},"proxy_type":{"description":"This field indicates the proxy type sent in the payment request.\n For SGD-PayNow: The proxy type can be MOBILE, UEN, NRIC, or VPA.\n For INR-UPI: The proxy type should be VPA.\nFor BRL-PIX: The proxy type can be MOBILE, ID, EMAIL, or RANDOM_KEY\nFor AUD-PayID: The proxy type can be MOBILE, EMAIL, ABN, or ORGANISATION_ID(only domestic payouts are allowed)\nFor MYR-DuitNow: The proxy type can be NRIC, PASSPORT, CORPORATE_REGISTRATION_NUMBER, MOBILE, or ARMY_ID.\nNote: This field is mandatory when the payout_method type is PROXY","type":"string"},"proxy_value":{"description":"This field indicates the proxy value such as VPA, UEN, or mobile number etc.\nNote: This field is mandatory when the payout_method type is PROXY\nThe mobile number should include country code.","type":"string"},"routing_code_type_1":{"description":"This field accepts the routing code type 1, for example, SWIFT for all countries, IFSC for India, SORT CODE for UK, ACH CODE for USA, BRANCH CODE for Brazil and Bangladesh, BSB CODE for Australia, BANK CODE for HongKong.","type":"string"},"routing_code_type_2":{"description":"This field accepts the routing code type 2, for example, SWIFT for all countries, IFSC for India, SORT CODE for UK, ACH CODE for USA, BRANCH CODE for Brazil and Bangladesh, BSB CODE for Australia, BANK CODE for HongKong.","type":"string"},"routing_code_value_1":{"description":"This field accepts the routing code value 1, for example, ADCBINBB or ADCBINBB123 for SWIFT, SBIN0000058 for IFSC, 100000 for SORT CODE, 111000025 for ACH CODE, 012515 for BSB CODE, 151 for BANK CODE.","type":"string"},"routing_code_value_2":{"description":"This field accepts the routing code value 2, for example, ADCBINBB or ADCBINBB123 for SWIFT, SBIN0000058 for IFSC, 100000 for SORT CODE, 111000025 for ACH CODE, 012515 for BSB CODE, 151 for BANK CODE.","type":"string"}},"required":["destination_currency","payout_method"],"title":"Payout request","type":"object"},"Resource":{"properties":{"description":{"type":"string"},"file":{"$ref":"#/components/schemas/File"},"filename":{"type":"string"},"inputStream":{"$ref":"#/components/schemas/InputStream"},"open":{"type":"boolean"},"readable":{"type":"boolean"},"uri":{"$ref":"#/components/schemas/URI"},"url":{"$ref":"#/components/schemas/URL"}},"title":"Resource","type":"object"},"SupportedCorridorsResponse":{"properties":{"content":{"description":"This field contains an array that holds the response data.","items":{"$ref":"#/components/schemas/SupportedCorridorsResponseDTO2"},"type":"array"},"totalElements":{"description":"This field contains the number of elements in the response body.","format":"int64","type":"integer"},"totalPages":{"description":"This field contains the number of pages in the response body.","format":"int32","type":"integer"}},"title":"SupportedCorridorsResponse","type":"object"},"SupportedCorridorsResponseDTO":{"properties":{"beneficiaryAccountType":{"type":"string"},"customerType":{"type":"string"},"destinationCountry":{"type":"string"},"destinationCurrency":{"type":"string"},"payoutMethod":{"type":"string"},"routingCodeType":{"type":"string"}},"title":"Supported corridors response","type":"object"},"SupportedCorridorsResponseDTO2":{"properties":{"accountVerification":{"description":"This field provides whether account verification is supported or not.","type":"string"},"additionalInfo":{"description":"This field provides additional information with respect to the corridor.","example":"USD ACH payouts can also be done to below countries if the ACH code is supported as  per regulator guidelines.  - U. S. Virgin Islands , Guam  American Samoa , The Northern Mariana Islands  The status update will be done on T+2 basis though the Beneficiary may receive the  credit before this.The status update will be done on T+2 basis though the Beneficiary may receive the  credit before this","type":"string"},"beneficiaryAccountType":{"description":"This field provides the beneficiary account type.","example":"INDIVIDUAL","type":"string"},"beneficiaryStatementNarrative":{"description":"This field provides information that will be visible on the beneficiary statement for payout transaction.","example":"NIUM Transaction ID is passed on and will be visible in the Beneficiary’s Statement","type":"string"},"channels":{"description":"This field provides information on channel supported. ","example":"All banks in USA in the ACH network","type":"string"},"clientType":{"description":"This field provides type of Client e.g. FI, NonFI","example":"NonFI","type":"string"},"customerCountry":{"description":"List of countries accepted as remitter country.","example":"US","items":{"type":"string"},"type":"array"},"customerType":{"description":"This field provides the type of customer.","example":"CORPORATE","type":"string"},"cutoffDeliveryNotes":{"description":"This field provides information on Cut-off times and delivery.","example":"T2 day credit subject to cutoff of 15.00 EST","type":"string"},"deliveryTAT":{"description":"This field provides information on delivery times such as Realtime, T0 – same day , T1 – next day etc.","type":"string"},"destinationCountry":{"description":"This field provides the 2-letter ISO-2 destination country code.","example":"US","type":"string"},"destinationCurrency":{"description":"This field provides destination Currency.","example":"USD","type":"string"},"fxSource":{"description":"This field provides information on the FX source.","example":"Live Interbank based rates available 24x7, including off-market hours","type":"string"},"limitCurrency":{"description":"This field provides currency for the minimum and maximum limits.","example":"USD","type":"string"},"mandatoryDataRequirement":{"description":"This field provides information on mandatory information required for payout request.","example":"Remitter Name,Remitter Identification Type,Remitter Address,Remitter State,Remitter Post Code,Remitter Date of Birth (for Individual),Beneficiary City,Beneficiary Country Code,Beneficiary Post Code,Beneficiary Account Number,Routing Code Value 1,Remitter Account Type,Remitter Identification Number,Remitter Country Code,Remitter City,Remit Purpose Code,Beneficiary Address,Beneficiary State,Beneficiary Account Type,Beneficiary Bank Name,Beneficiary Name,Routing Code Type 1 – ACH Code","items":{"type":"string"},"type":"array"},"maximumAmount":{"description":"This field provides information for maximum amount for the corridor, currency and payment method","example":1000000,"type":"string"},"minimumAmount":{"description":"This field provides information for minimum amount for the corridor, currency and payment method.","type":"string"},"networkParticipant":{"description":"This field provides type of network participant.","example":"Bank","type":"string"},"payoutMethod":{"description":"This field accepts the different modes of payout. ","example":"LOCAL","type":"string"},"payoutMethodCategory":{"description":"Separates the payout methods into different categories including <strong>ach</strong>, <strong>cash</strong>, <strong>proxy_upi</strong>, and <strong>wire_local</strong>.","type":"string"},"proofOfPayment":{"description":"This field provides information on proof of payment.","type":"string"},"routingCodeType":{"description":"This field provides the routing code type for the currency. For example SWIFT, ACH CODE etc. \nThe possible values are: \n• SWIFT for all cases where SWIFT is applicable \n• IFSC (relevant for India) \n• ACH CODE (relevant for USA) \n• BSB CODE (relevant for Australia) \n• SORT CODE (relevant for the UK) \n• LOCATION ID (relevant for Nepal) \n• BANK CODE (relevant for few countries including Canada, Hong Kong, Sri Lanka, South Korea, Pakistan, Brazil, and some more) \n• TRANSIT NUMBER (relevant for Canada) \n• BRANCH CODE (relevant for Sri Lanka, Vietnam, Brazil, Uruguay, Kenya and some more)","example":"ACH CODE","type":"string"},"supportingDocuments":{"description":"This field provides information on any supporting documents required for payout for e.g. Invoice etc","example":"Beneficiary banks may ask for additional information / supporting documents from  Beneficiary e.g., Relationship between the remitter and Beneficiary; Nature of  business; Duration of contract; Commercial agreement; Current invoice; etc.","items":{"type":"string"},"type":"array"},"wallets":{"description":"This field provides information on wallets partners.","example":62654,"items":{"type":"string"},"type":"array"}},"title":"SupportedCorridorsResponseDTO2","type":"object"},"URI":{"properties":{"host":{"type":"string"},"absolute":{"type":"boolean"},"authority":{"type":"string"},"fragment":{"type":"string"},"opaque":{"type":"boolean"},"path":{"type":"string"},"port":{"format":"int32","type":"integer"},"query":{"type":"string"},"rawAuthority":{"type":"string"},"rawFragment":{"type":"string"},"rawPath":{"type":"string"},"rawQuery":{"type":"string"},"rawSchemeSpecificPart":{"type":"string"},"rawUserInfo":{"type":"string"},"scheme":{"type":"string"},"schemeSpecificPart":{"type":"string"},"userInfo":{"type":"string"}},"title":"URI","type":"object"},"URL":{"properties":{"host":{"type":"string"},"authority":{"type":"string"},"content":{"type":"object"},"defaultPort":{"format":"int32","type":"integer"},"file":{"type":"string"},"path":{"type":"string"},"port":{"format":"int32","type":"integer"},"protocol":{"type":"string"},"query":{"type":"string"},"ref":{"type":"string"},"userInfo":{"type":"string"}},"title":"URL","type":"object"},"UpdateBeneficiaryRequestDTO":{"properties":{"authenticationCode":{"description":"This fields accepts the authenticationCode generated as part of SCA(Strong Customer Authentication).\nNote: Authentication code must be passed if regulatory region of the program is UK or EU and License Entity NIUM. For other region, this field is non-mandatory.","type":"string"},"autosweepPayoutAccount":{"type":"boolean"},"beneficiaryAccountNumber":{"description":"This field accepts an account number as a beneficiary detail.","type":"string"},"beneficiaryAccountType":{"description":"This field accepts the bank account type of the beneficiary. The account_type can be either Individual or Company.","type":"string"},"beneficiaryAddress":{"description":"This field accepts an address of the beneficiary.","type":"string"},"beneficiaryAlias":{"description":"This field accepts the beneficiary alias","type":"string"},"beneficiaryBankAccountType":{"description":"The type of account. This field is conditional in case of WALLET payout and the possible values are:\n• Current\n• Saving\n• Maestra\n• Checking","type":"string"},"beneficiaryBankCode":{"description":"This field accepts the bank code of the beneficiary.","type":"string"},"beneficiaryBankName":{"description":"This field accepts the bank name of the beneficiary.","type":"string"},"beneficiaryCardExpiryDate":{"description":"This field contains the beneficiary’s card expiry date.","type":"string"},"beneficiaryCardIssuerName":{"description":"This field contains the beneficiary’s card issuer name.","type":"string"},"beneficiaryCity":{"description":"This field accepts the city of the beneficiary.","type":"string"},"beneficiaryContactCountryCode":{"description":"This field accepts the mobile number country code of the beneficiary.","type":"string"},"beneficiaryContactName":{"type":"string","description":"This field accepts the name of the contact person of the business, applicable when beneficiary is a business."},"beneficiaryContactNumber":{"description":"This field accepts the mobile number of the beneficiary.","type":"string"},"beneficiaryCountryCode":{"description":"This field accepts the 2-letter [ISO-2 country code](doc:currency-and-country-codes) of the beneficiary/bank.","type":"string"},"beneficiaryDob":{"type":"string"},"beneficiaryEmail":{"description":"This field accepts an email of the beneficiary.","type":"string"},"beneficiaryEntityType":{"type":"string","description":"This field accepts the entity type of the business, when the beneficiary is a business. Refer to the ENUM value list for allowed values. The value GO indicates a majority owned subsidiary of state-owned company.","example":"partnership"},"beneficiaryEstablishmentDate":{"type":"string"},"beneficiaryIdentificationType":{"description":"This field accepts the type of identification document name for a beneficiary.","type":"string"},"beneficiaryIdentificationValue":{"description":"This is an identification document number for the beneficiary.","type":"string"},"beneficiaryName":{"description":"This field accepts the name of the beneficiary.","type":"string"},"beneficiaryPostcode":{"description":"This field accepts the postal code of the beneficiary.","type":"string"},"beneficiaryState":{"description":"This field accepts the state of the beneficiary.","type":"string"},"destinationCountry":{"description":"This field accepts the [ISO-2 country code](https://nium-documents.s3-eu-west-1.amazonaws.com/spend-documents/Country+Code.pdf) for the payout bank.","type":"string"},"destinationCurrency":{"description":"This field accepts the 3-letter [ISO-4217 destination currency code](https://www.iso.org/iso-4217-currency-codes.html) of the payout as per the destination country from supported corridors.","type":"string"},"encryptedBeneficiaryCardToken":{"description":"This field accepts the system generated token number to identify the card stored at NIUM's platform.\nNote: This field is mandatory if the client is non-PCI DSS compliant.","type":"string"},"payoutMethod":{"description":"This field accepts the payout method for the remittance payout.","enum":["LOCAL","SWIFT","WALLET","CASH","CARD","PROXY"],"type":"string"},"proxyType":{"description":"This field indicates the proxy type sent in the payment request.\n• For SGD-PayNow: The proxy type can be MOBILE, UEN, NRIC, or VPA.\n• For INR-UPI: The proxy type should be VPA.\n• For BRL-PIX: The proxy type can be MOBILE, ID, EMAIL, or RANDOM_KEY.\n• For AUD-PayID: The proxy type can be MOBILE, EMAIL, ABN, or ORGANISATION_ID (only domestic payouts are allowed).\n• For MYR-DuitNow: The proxy type can be NRIC, PASSPORT, CORPORATE_REGISTRATION_NUMBER, MOBILE, or ARMY_ID.\nNote: This field is mandatory when the payoutMethod type is PROXY.","type":"string"},"proxyValue":{"description":"This field indicates the proxy value such as VPA, UEN, or mobile number etc.\nNote: This field is mandatory when the payoutMethod type is PROXY.\nThe mobile number should include country code.","type":"string"},"remitterBeneficiaryRelationship":{"description":"This field accepts the relationship of the beneficiary with the remitter.","type":"string"},"routingCodeType1":{"description":"This field accepts the routing code type 1, for example, SWIFT for all countries, IFSC for India, SORT CODE for UK, ACH CODE for USA, BRANCH CODE for Brazil and Bangladesh, BSB CODE for Australia, BANK CODE for HongKong.","type":"string"},"routingCodeType2":{"description":"This field accepts the routing code type 2, for example, SWIFT for all countries, IFSC for India, SORT CODE for UK, ACH CODE for USA, BRANCH CODE for Brazil and Bangladesh, BSB CODE for Australia, BANK CODE for HongKong.","type":"string"},"routingCodeValue1":{"description":"This field accepts the routing code value 1, for example, ADCBINBB or ADCBINBB123 for SWIFT, SBIN0000058 for IFSC, 100000 for SORT CODE, 111000025 for ACH CODE, 012515 for BSB CODE, 151 for BANK CODE.","type":"string"},"routingCodeValue2":{"description":"This field accepts the routing code value 2, for example, ADCBINBB or ADCBINBB123 for SWIFT, SBIN0000058 for IFSC, 100000 for SORT CODE, 111000025 for ACH CODE, 012515 for BSB CODE, 151 for BANK CODE.","type":"string"}},"required":["beneficiaryCountryCode","beneficiaryName","destinationCurrency","payoutMethod"],"title":"Update beneficiary request","type":"object"},"Standard404Error":{"properties":{"code":{"enum":["resource_not_found"],"type":"string"},"description":{"type":"string"}},"title":"Standard404Error","type":"object"},"AccountValidationRequestDTO":{"properties":{"accountNumber":{"description":"The bank account number which needs to be verified.","type":"string"},"bankAccountType":{"description":"The type of account.","enum":["CHECKING","SAVING","MAESTRA","CURRENT"],"type":"string"},"bankCode":{"description":"The bank code of the beneficiary. E.g: The bank code for England is GB.\nNote: This field is mandatory when the destination country is Pakistan (PK).","type":"string"},"beneficiary":{"$ref":"#/components/schemas/BeneficiaryAccountDetailsDTO"},"destinationCountry":{"description":"This field accepts the 2-letter [ISO-2 country code](https://docs.nium.com/apis/docs/currency-and-country-codes) of the destination country.","type":"string"},"destinationCurrency":{"description":"The 3-letter ISO-3 currency code of the bank account.","type":"string"},"payoutMethod":{"description":"The different payout modes that'll be used by the beneficiary.","enum":["CARD","WALLET","CASH","SWIFT","LOCAL","PROXY","FEDWIRE","CHECK"],"type":"string"},"proxyType":{"description":"<p>Specifies the proxy type sent in the payment request:</p>\n<ul>\n  <li><strong>SGD-PayNow:</strong> The proxy type can be <code>MOBILE</code>, <code>UEN</code>, or <code>NRIC</code></li>\n  <li><strong>INR-UPI:</strong> The proxy type is <code>VPA</code></li>\n  <li><strong>MYR-DuitNow:</strong> The proxy type can be <code>NRIC</code>, <code>PASSPORT</code>, <code>CORPORATE_REGISTRATION_NUMBER</code>, <code>MOBILE</code>, or <code>ARMY_ID</code></li>\n</ul>\n<p><strong>Note:</strong> This field is mandatory when the payout method type is <code>PROXY</code>.</p>\n","type":"string"},"proxyValue":{"description":"<p>The available proxy values. This can include VPA, UEN, or a mobile number.</p>\n<p><strong>Note:</strong> This field is mandatory when the payout method type is <code>PROXY</code>.</p>\n<p>Mobile number must include country code.</p>\n","type":"string"},"routingInfo":{"items":{"$ref":"#/components/schemas/BankRoutingInfo"},"type":"array"}},"required":["bankAccountType","destinationCurrency","payoutMethod"],"title":"AccountValidationRequestDTO","type":"object"},"AccountValidationResponseDTO":{"properties":{"accountValidationId":{"description":"The unique ID generated to represent the validation attempt.","type":"string"},"beneficiary":{"$ref":"#/components/schemas/BeneficiaryDetailsDTO"},"status":{"description":"Provides the status of the verification request. Available values include:\n<ul>\n  <li><code>confirmation_in_progress</code></li>\n  <li><code>verified</code></li>\n  <li><code>not_verified</code></li>\n  <li><code>not_supported</code></li>\n</ul>\n<p>For more information, see <a href=\"https://docs.nium.com/apis/docs/account-verification\">Account Verification</a>.</p>\n","type":"string"}},"title":"AccountValidationResponseDTO","type":"object"},"AdditionalFeesDTO":{"properties":{"feeType":{"description":"This field accepts the fee type as FIXED (flat) or PERCENTAGE","enum":["FIXED","PERCENTAGE"],"example":"FIXED","type":"string"},"feeValue":{"description":"This field accepts the client's fee value to be added on existing fee value","example":2,"format":"double","type":"number"},"fxMarkup":{"description":"This field accepts the client's additional fx markup rate to be added on existing fx markup","example":0.2,"format":"double","type":"number"}},"title":"Additional fees","type":"object","description":"This object accepts the Client's additional fees"},"AddressDTO":{"properties":{"addressLine1":{"type":"string","description":"This field accepts the line 1 of the customer’s address.\nMaximum character limit: 100."},"addressLine2":{"type":"string","description":"This field accepts the line 2 of the customer’s address.\nMaximum character limit: 100."},"city":{"type":"string","description":"This field accepts the city of the customer’s address.\nMaximum character limit: 50."},"country":{"type":"string","description":"This field accepts the 2-letter [ISO Alpha-2 country code](doc:currency-and-country-codes) denoting the customer’s country."},"postcode":{"type":"string","description":"This field accepts the postal code of the customer’s address. The acceptable special characters are:\nHypen(-)\nHash(#)\nSpace( )\nMinimum character limit: 3\nMaximum character limit: 10\nExample: CM-4165 65"},"state":{"type":"string","description":"This field accepts the state of the customer’s address"}},"title":"Address","type":"object"},"WalletApiError":{"properties":{"errors":{"description":"List of errors occurred.","example":["field1 is not valid","field2 is not valid"],"items":{"type":"string"},"type":"array"},"message":{"description":"Error message descriptor.","example":"Error message descriptor.","type":"string"},"status":{"description":"HttpStatus of the request : BAD_REQUEST, INTERNAL_SERVER_ERROR.","enum":["200 OK","400 BAD_REQUEST","403 FORBIDDEN","404 NOT_FOUND","500 INTERNAL_SERVER_ERROR","502 BAD_GATEWAY","503 SERVICE_UNAVAILABLE"],"example":"BAD_REQUEST","type":"string"}},"title":"ApiError","type":"object"},"ApiError2":{"properties":{"errors":{"description":"List of errors occurred.","example":["field1 is not valid","field2 is not valid"],"items":{"type":"string"},"type":"array"},"message":{"description":"Error message descriptor.","example":"Error message descriptor.","type":"string"}},"title":"ApiError2","type":"object"},"ApiErrorResponse":{"properties":{"code":{"enum":["invalid_client_hash_id","invalid_customer_hash_id","invalid_wallet_hash_id","invalid_card_hash_id","customer_status_not_clear","invalid_currency","currency_not_configured","wallet_creation_limit_exceeds","tags_maximum_limit_exceeded","tag_key_contains_special_chars","unique_tag_key_required","duplicate_client_transaction_config","invalid_client_transaction_config","invalid_transaction_category","invalid_transaction_type","wallet_currency_already_exists","invalid_permission_to_override_customer_fee","invalid_customer_fee_for_individual","invalid_fee_type_for_customer_level","invalid_FX_markup_flat_fee","invalid_customer_fee_currency","invalid_customer_fee_status","fee_already_defined_for_auth_currency","invalid_transaction_currency","invalid_fee_currency","customer_fee_above_threshold","fee_currency_should_not_be_any","customer_fee_does_not_exists","customer_fee_update_not_allowed_for_region","customer_fee_already_exists","wallet_currency_removal_not_allowed","invalid_system_reference_number","invalid_status_for_remittance_cancel","wallet_creation_not_allowed","invalid_input","resource_not_found","invalid_date_range"],"type":"string"},"description":{"type":"string"},"field":{"type":"string"}},"title":"ApiErrorResponse","type":"object"},"ApiResponseOfWalletRefundResponseDTO":{"properties":{"body":{"$ref":"#/components/schemas/WalletRefundResponseDTO","description":"This field will return the response message from the server.","example":"Success"},"code":{"description":"This field will return the HTTP status code with its interpretation.","example":"200 OK","type":"string"},"message":{"description":"This field will return the response message.","example":"Success","type":"string"},"status":{"description":"This field signifies if the request was successful or has an error.","enum":["200 OK","400 BAD_REQUEST","403 FORBIDDEN","404 NOT_FOUND","500 INTERNAL_SERVER_ERROR","502 BAD_GATEWAY","503 SERVICE_UNAVAILABLE"],"example":"OK","type":"string"}},"title":"ApiResponseOfWalletRefundResponseDTO","type":"object"},"BankRoutingInfo":{"properties":{"type":{"description":"The routing code type.","enum":["IFSC","SWIFT","ACH_CODE","BSB_CODE","SORT_CODE","BANK_CODE","LOCATION_ID","BRANCH_CODE","TRANSIT_NUMBER","BRANCH_NAME","CNAPS","WALLET"],"type":"string"},"value":{"description":"<p>Accepts the routing code value 1. Examples include:</p>\n<ul>\n  <li><code>ADCBINBB</code> or <code>ADCBINBB123</code> for SWIFT</li>\n  <li><code>SBIN0000058</code> for IFSC</li>\n  <li><code>100000</code> for SORT CODE</li>\n  <li><code>111000025</code> for ACH CODE</li>\n  <li><code>012515</code> for BSB CODE</li>\n  <li><code>151</code> for BANK CODE</li>\n</ul>\n<p>If you have any questions, please reach out to your Nium account manager or <a href=\"mailto:support@nium.\n","type":"string"}},"title":"BankRoutingInfo","type":"object"},"Beneficiary":{"properties":{"id":{"description":"This is an unique beneficiary ID which depends upon the destination currency and payout method. The beneficiary Id and payout ID can be obtained using [Beneficiary List  API](ref:beneficiarylistv2).","example":"5f7ddd6a56b63400178319c5","type":"string"}},"required":["id"],"title":"Beneficiary","type":"object"},"BeneficiaryAccountDetailsDTO":{"properties":{"accountType":{"description":"This field accepts the bank account type of the beneficiary.","enum":["INDIVIDUAL","CORPORATE"],"type":"string"},"address":{"description":"This field accepts an address of the beneficiary.","type":"string"},"alias":{"type":"string"},"city":{"description":"This field accepts the city of the beneficiary.","type":"string"},"contactNumber":{"description":"This field accepts the mobile number of the beneficiary.","type":"string"},"countryCode":{"description":"This field accepts the [ISO-2 country code](https://docs.nium.com/apis/docs/currency-and-country-codes) for the mobile number of beneficiary.","type":"string"},"email":{"description":"This field accepts an email of the beneficiary.","type":"string"},"name":{"description":"This field accepts the name of a beneficiary.","type":"string"},"postcode":{"description":"This field accepts an postcode of the beneficiary.","type":"string"},"remitterBeneficiaryRelationship":{"description":"This field accepts the relationship of the beneficiary with the remitter.","type":"string"},"state":{"description":"This field accepts the state of the beneficiary.","type":"string"}},"title":"BeneficiaryAccountDetailsDTO","type":"object"},"BeneficiaryDetailsDTO":{"properties":{"bankAccountName":{"description":"The name registered with the bank account. (Only supported in some corridors. For more information, see <a href=\"https://docs.nium.com/apis/docs/account-verification\">Account Verification</a>.)\n","type":"string"}},"title":"BeneficiaryDetailsDTO","type":"object"},"ClientCustomTagDTO":{"properties":{"key":{"description":"This field accepts the Client's custom key of the tag.\nThe maximum key length limit is 128 characters.","type":"string"},"value":{"description":"This field accepts the Client's custom value of the tag.\nThe maximum value length limit is 256 characters.","type":"string"}},"title":"ClientCustomTagDTO","type":"object"},"DeviceDetailsDTO":{"properties":{"countryIP":{"description":"This field accepts the country IP for the device by the customer for initiating the request.","example":"66.249.74.64","type":"string"},"deviceInfo":{"description":"This field accepts the device information used by the customer for initiating the request.","example":"macOS","type":"string"},"ipAddress":{"description":"This field accepts the IP address of the device used by the customer for initiating the request.","example":"45.48.241.198","type":"string"},"sessionId":{"description":"This field accepts the session Id for the session of the customer for initiating the request.","example":"40531ac01a6f11edafc28dba55d51275","type":"string"}},"title":"Device details","type":"object"},"GPIResponseDTO":{"properties":{"forwardBankCode":{"description":"This field contains forward Bank Code for GPI","type":"string"},"forwardBankName":{"description":"This field contains forward Bank Name for GPI","type":"string"},"reasonCode":{"description":"This field contains GPI reason code.","enum":["G000","G001","G002","G003","G004","G005","G006"],"type":"string"},"remarks":{"description":"This field contains remarks","type":"string"},"statusDescription":{"description":"This field contains GPI Status Description for GPI.","type":"string"},"timestamp":{"description":"This field contains GPI timestamp","type":"string"}},"title":"GPIResponseDTO","type":"object"},"IdentificationDocDTO":{"properties":{"identificationDocColor":{"description":"This field accepts the color of the document being uploaded.","type":"string"},"identificationDocExpiry":{"description":"This field accepts the expiry date of the document being uploaded.","type":"string"},"identificationDocHolderName":{"description":"This field accepts the name of the customer as per the document being uploaded.","type":"string"},"identificationDocIssuanceCountry":{"description":"This field accepts the issuing country of the document being uploaded.","type":"string"},"identificationDocReferenceNumber":{"description":"This field accepts the reference number of the document being uploaded.","type":"string"},"identificationDocument":{"description":"It is an array of actual documents for the data provided in previous fields. We support a maximum of 4 files in the array, and the total max size should be less than 10 MB. A separate object is needed for each document image.","items":{"$ref":"#/components/schemas/IdentificationDocumentDTO"},"type":"array"},"identificationIssuingAuthority":{"description":"This field accepts the authority issuing the document being uploaded.","type":"string"},"identificationIssuingDate":{"description":"This field accepts the date of issuance of the document being uploaded. The format should be yyyy-mm-dd. Example, 2010-10-10.","type":"string"},"identificationType":{"description":"This field accepts the type of document being uploaded.","type":"string"},"identificationValue":{"description":"This field accepts the unique document id being uploaded.","type":"string"}},"title":"Identification doc","type":"object"},"Payout":{"properties":{"audit_id":{"description":"The audit Id must be taken from [Exchange Rate Lock and Hold](ref:exchangeratelockandhold) API.","example":112,"format":"int64","type":"integer"},"destination_amount":{"description":"This field accepts the destination amount for remittance. Either the source or the destination amount is mandatory.\n\nAllowed decimal limit is 2.","example":0,"format":"double","type":"number"},"preScreening":{"description":"This field indicates if compliance checks are to be done at the time of payout creation. This field is applicable only for scheduled and Post-Funded payouts.","example":false,"type":"boolean"},"scheduledPayoutDate":{"description":"This field accepts scheduled payout date in yyyy-MM-dd format","example":"2022-11-29","type":"string"},"serviceTime":{"description":"This field should denote the date of providing of service/export in yyyy-MM-dd format","example":"2022-11-29","type":"string"},"source_amount":{"description":"This field accepts the source amount for remittance. Either the source or the destination amount is mandatory.\n\nAllowed decimal limit is 2.","example":100,"format":"double","type":"number"},"source_currency":{"description":"This field accepts the source currency for remittance.","example":"INR","type":"string"},"swiftFeeType":{"description":"This field accepts the swift fee type and defines who will bear the SWIFT charges for the given transaction. Clients can send any of the below values basis which, they will be charged for the SWIFT transaction. In case this field is absent SHA will be applied by default.\n\nOUR - SWIFT charges borne by the customer\nSHA - SWIFT charges shared by the customer and beneficiary\n\nNote: Clients should make sure that fee template is configured for each of the swift fee type. To know if the template is configured, clients should call [Fee Details](/apis/reference/feedetails) API","enum":["OUR","SHA"],"example":"OUR","type":"string"},"tradeOrderID":{"description":"This field should denote the invoice number relevant to the transaction","example":"TR012345","type":"string"}},"title":"Payout","type":"object"},"PurposeCodeResponseDTO":{"properties":{"description":{"description":"This field contains the description of the purpose of transfer.","example":"Medical Treatment","type":"string"},"purposeCode":{"description":"This field contains the purpose code for the remittance transaction. Refer to the [Glossary of Purpose Codes](doc:purpose-of-transfer-codes) for the list of possible values.","example":"IR004","type":"string"}},"title":"Purpose code response","type":"object"},"RemittanceEventsResponseDTO2":{"properties":{"errorCode":{"description":"This field contains ISO error code.","type":"string"},"errorDescription":{"description":"This field contains ISO reason description.","type":"string"},"errorReasonCode":{"description":"This field contains ISO reason code.","type":"string"},"estimatedDeliveryTime":{"type":"string"},"gpi":{"$ref":"#/components/schemas/GPIResponseDTO"},"lastUpdatedAt":{"format":"date-time","type":"string","description":"This field contains the latest updated date of the remittance transaction status."},"partnerReferenceNumber":{"type":"string","description":"This field contains the unique ID from the partner involved in the remittance."},"paymentReferenceNumber":{"type":"string","description":"This field contains the unique ID returned by payment gateway as a reference for the payment done."},"status":{"type":"string","description":"This field contains the status of the remittance transaction."},"statusDetails":{"type":"string","description":"This field will provide details about the status of the transaction. As an example, if the status is “RETURN”, this field will provide the reason for the “RETURN”."},"systemReferenceNumber":{"type":"string","description":"This field contains the unique system reference number generated for each remittance transaction."}},"title":"Remittance events response","type":"object"},"RemittanceResponseDTO":{"properties":{"estimatedDeliveryTime":{"description":"This field is estimated delivery time of transaction.","example":"2023‐08‐24T06:39:51Z","type":"string"},"message":{"description":"This field will return a success message if the money transferred successfully.","example":"Transfer accepted","type":"string"},"payment_id":{"description":"This field contains the unique payment ID.","example":"null","type":"string"},"system_reference_number":{"description":"This is a unique system reference number assigned to the transaction.","example":"RT6431795378","type":"string"}},"title":"Remittance response","type":"object"},"RemittanceTransactionsRequestDTO":{"properties":{"tags":{"description":"This is an array which accepts custom tags & values.\nMaximum 15 key-value pairs can be sent in tags.","items":{"$ref":"#/components/schemas/ClientCustomTagDTO"},"type":"array"},"additionalFees":{"$ref":"#/components/schemas/AdditionalFeesDTO","description":"This object accepts the Client's additional fees"},"authenticationCode":{"description":"This field accepts the authentication code generated as part of SCA (Strong Customer Authentication).\n\nNote: Either exemption code or authentication is expected if the program's regulatory region is UK or EU. This field does not accept a value for any other region.","type":"string"},"beneficiary":{"$ref":"#/components/schemas/Beneficiary","description":"This object will accept the beneficiary details."},"customerComments":{"description":"This field is used to add any customer comments.\n\nMaximum character limit is 512.\n\nNote: Special characters are not allowed in this field.","example":"Transfer to family","type":"string"},"deviceDetails":{"$ref":"#/components/schemas/DeviceDetailsDTO","description":"This object accepts the device and IP details for the transaction."},"exemptionCode":{"description":"This field accepts the reason code for the exemption provided as part of SCA (Strong Customer Authentication). This must be 2 character string and the valid values are as following:\n01 - Trusted Beneficiary\n03 - Recurring Transactions\n04 - Payment to Self\nNote: Exemption code is expected if authenticationCode is not provided and regulatory region is UK or EU.","enum":["01","03","04"],"example":"01 - Trusted Beneficiary","type":"string"},"ownPayment":{"description":"This field applies only to licensed financial institutions. Boolean value 'false' indicates an on-behalf payout request or 'true' indicates a payout executed by the Financial Institution itself.\nIf the field is absent from the request, the default flag is set to 'false'. A valid remitter object is required to be passed for on-behalf payout.","example":true,"type":"boolean"},"payout":{"$ref":"#/components/schemas/Payout","description":"This object accepts the payout details."},"purposeCode":{"description":"This field accepts the purpose code for the payment. Refer to the [Glossary of Purpose Codes](doc:purpose-of-transfer-codes) to identify the correct value to be provided.\n\nIf purpose code value is not passed then the default value will be IR01802 (Advertising & Public relations-related expenses).\n\nPurpose Code - Description\nIR001         - Transfer to own account\nIR002         - Family Maintenance\nIR003         - Education-related student expenses\nIR004         - Medical Treatment\nIR005         - Hotel Accommodation\nIR006         - Travel\nIR007         - Utility Bills\nIR008         - Repayment of Loans\nIR009         - Tax Payment\nIR010         - Purchase of Residential Property\nIR011         - Payment of Property Rental\nIR012         - Insurance Premium\nIR013         - Product indemnity insurance\nIR014         - Insurance Claims Payment\nIR015         - Mutual Fund Investment\nIR016         - Investment in Shares\nIR017         - Donations\nIR01801       - Information Service Charges\nIR01802       - Advertising & Public relations-related expenses\nIR01803       - Royalty fees, trademark fees, patent fees, and copyright fees\nIR01804       - Fees for brokers, front end fee, commitment fee, guarantee fee and custodian fee\nIR01805       - Fees for advisors, technical assistance, and academic knowledge, including remuneration for specialists\nIR01806       - Representative office expenses\nIR01807       - Construction costs/expenses\nIR01808       - Transportation fees for goods\nIR01809       - For payment of exported goods\nIR01810       - Delivery fees for goods\nIR01811\t      - General Goods Trades - Offline trade","example":"IR01802","type":"string"},"remitter":{"$ref":"#/components/schemas/RemitterRequestDTO","description":"This object accepts the Remitter details while doing on-behalf payouts. This object applies only to licensed financial institutions."},"sourceOfFunds":{"description":"This field accepts the source of funds. The possible values are:\nSalary\nPersonal Savings\nPersonal Wealth\nRetirement Funds\nBusiness Owner/Shareholder\nLoan Facility\nPersonal Account\nCorporate Account","enum":["Salary","Personal Savings","Personal Wealth","Retirement Funds","Business Owner/Shareholder","Loan Facility","Personal Account","Corporate Account"],"example":"Business Owner/Shareholder","type":"string"}},"required":["beneficiary","payout","purposeCode","sourceOfFunds"],"title":"Remittance transactions request","type":"object"},"RemitterRequestDTO":{"properties":{"accountType":{"description":"This field accepts the Remitter's account type as INDIVIDUAL or CORPORATE","enum":["INDIVIDUAL","CORPORATE"],"type":"string"},"address":{"description":"This field accepts address for Remitter's place of residence.","type":"string"},"bankAccountNumber":{"description":"This field accepts the account number of the Remitter.","type":"string"},"city":{"description":"This field accepts the city for Remitter's place of residence.","type":"string"},"contactNumber":{"description":"This field accepts the Remitter's contact number.","type":"string"},"countryCode":{"description":"This field accepts the country of residence for the remitter.","type":"string"},"dob":{"description":"This field accepts Remitter's birth date.","type":"string"},"idExpiryDate":{"description":"The expiration date of the identification document.","type":"string"},"idIssueDate":{"description":"The date the identification document was issued.","type":"string"},"identificationNumber":{"description":"ID number of the selected identificationType.","type":"string"},"identificationType":{"description":"This field accepts the ID document type of the remitter e.g. Passport, National_ID etc..","type":"string"},"industryType":{"description":"This field accepts industry type associated with the remitter.","type":"string"},"name":{"description":"This field accepts the name of the remitter.","type":"string"},"nationality":{"description":"This field accepts Remitter's nationality.","type":"string"},"originatingFICity":{"description":"The city of the financial institution where the request was initiated.","type":"string"},"originatingFICountry":{"description":"The country of the financial institution where the request was initiated.","type":"string"},"originatingFIName":{"description":"The name of the financial institution where the request was initiated. Typically applicable for requests that don't originate from a financial institution that is a direct customer of Nium.","type":"string"},"placeOfBirth":{"description":"This field accepts Remitter's place of birth.","type":"string"},"postcode":{"description":"This field accepts the postcode  for Remitter's place of residence.","type":"string"},"state":{"description":"This field accepts the state  for Remitter's place of residence.","type":"string"}},"title":"RemitterRequestDTO","type":"object"},"RfiResponseInfo":{"properties":{"additionalInfo":{"additionalProperties":{"type":"string"},"description":"This object accepts RFI raised for additional information fields.","type":"object"},"address":{"$ref":"#/components/schemas/AddressDTO","description":"This object accepts the address detail for the customer."},"bankAccountNumber":{"description":"This field accepts the bank account number.","type":"string"},"bankName":{"description":"This field accepts the bank name.","type":"string"},"companyName":{"description":"This field accepts the company name of the customer.","type":"string"},"dateOfBirth":{"description":"This field accepts the date of birth of the customer. The format is yyyy-mm-dd.","type":"string"},"firstName":{"description":"This field accepts the first name of the customer.\nMaximum character limit: 50.","type":"string"},"identificationDoc":{"$ref":"#/components/schemas/IdentificationDocDTO","description":"This object contains the document details for which RFI is raised."},"lastName":{"description":"This field accepts the last name of the customer.\nMaximum character limit: 50.","type":"string"},"middleName":{"description":"This field accepts the middle name of the customer.\nMaximum character limit: 50.","type":"string"},"nationality":{"description":"This field accepts the 2-letter [ISO Alpha-2 country code](doc:currency-and-country-codes) denoting the customer’s citizenship.","type":"string"}},"title":"Rfi response info","type":"object"},"WalletRfiResponseRequest":{"properties":{"rfiHashId":{"description":"This field accepts the unique RFI hash ID.","format":"uuid","type":"string"},"rfiResponseInfo":{"$ref":"#/components/schemas/RfiResponseInfo","description":"This object accepts the actual data or document element as requested."}},"required":["rfiHashId","rfiResponseInfo"],"title":"Wallet Rfi response request","type":"object"},"WalletStandard500Error":{"properties":{"code":{"enum":["internal_error","external_dependent_system_failed"],"type":"string"},"description":{"enum":["An internal error occurred"],"type":"string"}},"title":"Standard500Error","type":"object"},"UpdateMandateRequestDTO":{"properties":{"remarks":{"description":"This field accepts the remarks to cancel or return mandate","type":"string"}},"title":"UpdateMandateRequestDTO","type":"object"},"UploadRfiDetailsResponseDTO":{"properties":{"complianceId":{"type":"string"},"remarks":{"type":"string"},"status":{"type":"string"}},"title":"Upload Rfi details response","type":"object"},"UploadRfiDocumentRequestDTO":{"properties":{"rfiResponseRequest":{"description":"This array contains the objects for each RFI being responded to. This facilitates responding to multiple RFIs in one-go for the same transaction. Refer the example for more details.","items":{"$ref":"#/components/schemas/WalletRfiResponseRequest"},"type":"array"}},"required":["rfiResponseRequest"],"title":"Upload Rfi document request","type":"object"},"WalletRefundRequestDTO":{"properties":{"accountName":{"description":"This field is needed in case of BANK_TRANSFER to specify the account holder name.","type":"string"},"accountNumber":{"description":"This field is needed in case of BANK_TRANSFER to specify the account number of the receiver.","type":"string"},"amount":{"description":"An amount to be transferred.","example":10,"format":"double","type":"number"},"bankCode":{"description":"This field is needed in case of BANK_TRANSFER to specify the bank code for the receiver.","type":"string"},"bankName":{"description":"This field is needed in case of BANK_TRANSFER to specify the bank name for the receiver.","type":"string"},"comments":{"description":"This field is for an instruction or a message to support personnel.","example":"An instruction/message to support personnel","type":"string"},"currencyCode":{"description":"This field contains the 3-letter [ISO-4217 currency code](doc:currency-and-country-codes) for the amount","example":"SGD","type":"string"},"pocketName":{"description":"This is the name of the pocket defined under base currency.","example":"MEAL","type":"string"},"refundMode":{"description":"The mode of refund. CASH is the only allowed mode of refund for this request.","enum":["CASH","BANK_TRANSFER"],"example":"CASH","type":"string"}},"required":["amount","currencyCode","refundMode"],"title":"Wallet refund request","type":"object"},"WalletRefundResponseDTO":{"properties":{"message":{"description":"This field will return a success message.","example":"success","type":"string"},"systemReferenceNumber":{"description":"This is a unique system reference number generated by card issuance platform for the transaction.","example":"WR9781887936","type":"string"}},"title":"Wallet refund response","type":"object"}},"securitySchemes":{"default":{"in":"header","name":"x-api-key","type":"apiKey"}}},"security":[{"default":[]}],"x-readme":{"explorer-enabled":true,"proxy-enabled":true}}