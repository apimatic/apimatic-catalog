{
  "openapi": "3.0.1",
  "info": {
    "title": "Avvance APIs",
    "description": "\n# Overview\n\nThis API follows common REST API standards and practices and most HTTP clients will likely support it. Standard HTTP authentication methods and response status codes are used. We recommend using either a rest client like Postman or cURL, you can retrieve existing resources and begin to explore the API with just a browser.\n",
    "termsOfService": "https://avvance.com/terms/",
    "contact": {
      "email": "AvvanceIntegration@elavon.com"
    },
    "license": {
      "name": "US Bank / Avvance / Elavon",
      "url": "http://www.usbank.com/"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://alpha-api.usbank.com",
      "description": "Sandbox"
    },
    {
      "url": "https://api.usbank.com",
      "description": "Production"
    }
  ],
  "tags": [
    {
      "name": "Authentication Request",
      "description": "Avvance REST APIs use OAuth 2.0 access tokens to authenticate requests. In order to set up the OAuth integration and token request, the following steps will be performed:\n\n1. Avvance will send instructions including a key and a secret, securely to you. Your key and secret will need to be Base64 encoded as key:secret \n2. Get a token via the /token endpoint. Send your encoded client credentials in the header. Avvance will return an access token.\n3. Send the access token in the header for all other operations.\n4. Subsequent tokens are acquired by sending an authentication request to /token endpoint and receiving a new valid token, regardless of the expiration time of the previously received token. There is no refresh token mechanism.\n\nNever share your secret key. Keep it guarded and secure.\n"
    },
    {
      "name": "Initiate Loan",
      "description": "This loan initiation API accepts the invoice amount, customer email or phone number to generate and return the unique customer application URL. This unique URL can be used in invoice email, text or used to generate a QR code which customers can use to start the Avvance loan process."
    },
    {
      "name": "Enroll Merchant Request",
      "description": "The partner merchant onboarding API facilitates the initiation of the enrollment process by accepting the parameters such as merchantId, firstName, lastName and applicantEmail. Upon submission, it generates and returns a unique URL dedicated to the merchant's application. This exclusive url serves as the gateway for merchants to commence their enrollment journey seamlessly."
    },
    {
      "name": "Void",
      "description": "Void API is a POST request that voids a previous Avvance purchase or refund transaction. Only Avvance transactions that are not settled can be voided."
    },
    {
      "name": "Refund",
      "description": "Refund API is a POST request that refunds a previous Avvance purchase. Only Avvance transactions that are settled can be refunded. Partial refunds are allowed. Sum of partial refund amount cannot exceed the original Avvance purchase amount."
    },
    {
      "name": "Loan Status",
      "description": "Avvance sends webhooks to partners for customer loan status for their invoice."
    },
    {
      "name": "Reporting",
      "description": "Reporting API retrieves the transactions associated with the merchants and the partners."
    }
  ],
  "paths": {
    "/poslp/services/avvance-loan/v1/transactions": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Retrieve transactions",
        "parameters": [
          {
            "$ref": "#/components/parameters/BearerToken"
          },
          {
            "$ref": "#/components/parameters/ChannelID"
          },
          {
            "$ref": "#/components/parameters/CorrelationID"
          },
          {
            "$ref": "#/components/parameters/ApplicationID"
          },
          {
            "$ref": "#/components/parameters/ClientData"
          },
          {
            "$ref": "#/components/parameters/SessionID"
          },
          {
            "$ref": "#/components/parameters/PartnerID"
          },
          {
            "$ref": "#/components/parameters/MerchantID"
          },
          {
            "$ref": "#/components/parameters/RoutingKey"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Accepts application/JSON content"
            }
          },
          {
            "name": "startDate",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Indicates the date from when the transactions need to be retrieved"
            }
          },
          {
            "name": "endDate",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Indicates the date until when the transactions need to be retrieved"
            }
          },
          {
            "name": "pageNumber",
            "in": "header",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Indicates the number of pages used for displaying the retrieved transactions",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Indicates the number of transaction entries that can be displayed in one page",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MerchantTransactionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/oauth2/v1/token": {
      "post": {
        "tags": [
          "Authentication Request"
        ],
        "summary": "Token Request",
        "description": "OAuth 2.0 Token Endpoint",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthencticationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid or bad request"
          },
          "401": {
            "description": "Imvalid credentials"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "source": "curl --location --request POST 'https://alpha-api.us.bank-dns.com/auth/oauth2/v1/token' \\\n--header 'Content-Type: application/x-www-form-urlencoded' \\\n--header 'Authorization: Basic MXN5SjFvXXXXXXXXXXXXXXXXXXXXXuaHlLZXJVTA==' \\\n--data-urlencode 'grant_type=client_credentials'  \n"
          }
        ]
      }
    },
    "/poslp/services/partner/enroll-merchant": {
      "post": {
        "tags": [
          "Enroll Merchant Request"
        ],
        "summary": "Enroll Merchant Request",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "operationId": "Enrollmerchant",
        "parameters": [
          {
            "$ref": "#/components/parameters/BearerToken"
          },
          {
            "$ref": "#/components/parameters/ChannelID"
          },
          {
            "$ref": "#/components/parameters/CorrelationID"
          },
          {
            "$ref": "#/components/parameters/ClientData"
          },
          {
            "$ref": "#/components/parameters/RoutingKey"
          },
          {
            "$ref": "#/components/parameters/PartnerID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnrollmerchantRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnrollmerchantResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "source": "curl --location --request POST  'https://dev-api.usbank.com/poslp/services/partner/enroll-merchant'  \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer JaV2IAugx8yUG4jGwS9kVmlAWrM4' \\\n--header 'channel-id: owa' \\\n--header 'Correlation-ID: 34444' \\\n--header 'application-id: test' \\\n--header 'Partner-ID: UAT_Test_BNPL_Partner_success' \\\n--header 'routingKey: it1' \\\n--header 'clientdata: { \"ChannelID\":\"owa\" }' \\\n--header 'Session-ID: dededed' \\           \n"
          }
        ]
      }
    },
    "/poslp/services/avvance-loan/v1/void": {
      "post": {
        "tags": [
          "Void"
        ],
        "summary": "Void",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "operationId": "voidTransaction",
        "parameters": [
          {
            "$ref": "#/components/parameters/BearerToken"
          },
          {
            "$ref": "#/components/parameters/ChannelID"
          },
          {
            "$ref": "#/components/parameters/CorrelationID"
          },
          {
            "$ref": "#/components/parameters/ApplicationID"
          },
          {
            "$ref": "#/components/parameters/SessionKey"
          },
          {
            "$ref": "#/components/parameters/ClientData"
          },
          {
            "$ref": "#/components/parameters/SessionID"
          },
          {
            "$ref": "#/components/parameters/RoutingKey"
          },
          {
            "$ref": "#/components/parameters/PartnerID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoanTransactionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessLoanTransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/poslp/services/avvance-loan/v1/refund": {
      "post": {
        "tags": [
          "Refund"
        ],
        "summary": "Refund",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "operationId": "refundTransaction",
        "parameters": [
          {
            "$ref": "#/components/parameters/BearerToken"
          },
          {
            "$ref": "#/components/parameters/ChannelID"
          },
          {
            "$ref": "#/components/parameters/CorrelationID"
          },
          {
            "$ref": "#/components/parameters/ApplicationID"
          },
          {
            "$ref": "#/components/parameters/SessionKey"
          },
          {
            "$ref": "#/components/parameters/ClientData"
          },
          {
            "$ref": "#/components/parameters/SessionID"
          },
          {
            "$ref": "#/components/parameters/RoutingKey"
          },
          {
            "$ref": "#/components/parameters/PartnerID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundTransactionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessLoanTransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/poslp/services/avvance-loan/v1/create": {
      "post": {
        "tags": [
          "Initiate Loan"
        ],
        "summary": "Initiate Loan",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "operationId": "createShoppingCart",
        "parameters": [
          {
            "$ref": "#/components/parameters/BearerToken"
          },
          {
            "$ref": "#/components/parameters/ChannelID"
          },
          {
            "$ref": "#/components/parameters/CorrelationID"
          },
          {
            "$ref": "#/components/parameters/ApplicationID"
          },
          {
            "$ref": "#/components/parameters/SessionKey"
          },
          {
            "$ref": "#/components/parameters/ClientData"
          },
          {
            "$ref": "#/components/parameters/SessionID"
          },
          {
            "$ref": "#/components/parameters/RoutingKey"
          },
          {
            "$ref": "#/components/parameters/PartnerID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShoppingCartCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingCartCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "x-webhooks": {
    "loanStatus": {
      "post": {
        "tags": [
          "Loan Status"
        ],
        "summary": "Loan",
        "parameters": [
          {
            "$ref": "#/components/parameters/ChannelID"
          },
          {
            "$ref": "#/components/parameters/CorrelationID"
          },
          {
            "$ref": "#/components/parameters/ApplicationID"
          },
          {
            "$ref": "#/components/parameters/SessionID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoanStatus"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "4xx": {
            "description": "Do Not Retry"
          },
          "5xx": {
            "description": "Retry. Avvance will try up to 2 times until server responds successfully. In event of continued failure, Avvance will attempt to post the response one more time the next day at 1 am CST. No Further attempts will be made.\n"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MerchantInvoice": {
        "type": "object",
        "properties": {
          "txnDate": {
            "type": "string",
            "description": "Transaction date",
            "example": "2024-02-29T00:00:00.000Z"
          },
          "invoiceID": {
            "type": "string",
            "description": "Invoice ID",
            "example": "INQUD33826967"
          },
          "txnType": {
            "type": "string",
            "description": "Transaction type",
            "example": "FULL"
          },
          "consumerFirstName": {
            "type": "string",
            "description": "First name of the loan applicant",
            "example": "John"
          },
          "consumerLastName": {
            "type": "string",
            "description": "Last name of the loan applicant",
            "example": "Doe"
          },
          "txnStatus": {
            "type": "string",
            "description": "Transaction status",
            "example": "SETTLED"
          },
          "txnAmount": {
            "type": "number",
            "description": "Transaction amount",
            "format": "decimal",
            "example": 1575
          },
          "sequenceNumber": {
            "type": "integer",
            "description": "Transaction order number",
            "format": "int32",
            "example": 1
          },
          "totalRefundedAmount": {
            "type": "number",
            "description": "Total refunded amount",
            "format": "decimal",
            "example": 0
          }
        }
      },
      "MerchantTransactionsResponse": {
        "type": "object",
        "properties": {
          "transactions": {
            "$ref": "#/components/schemas/Transactions"
          }
        }
      },
      "Metadata": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "example": 1,
            "format": "int32",
            "description": "Indicates the page number on which the retrieved transactions can be displayed"
          },
          "pageSize": {
            "type": "integer",
            "example": "10 records",
            "format": "int32",
            "description": "Indicates the number of transaction entries that can be displayed on one page"
          },
          "hasNext": {
            "type": "boolean",
            "example": "true",
            "description": "Indicates whether next page has transaction or not"
          }
        }
      },
      "Transactions": {
        "type": "object",
        "properties": {
          "merchantID": {
            "type": "string",
            "$ref": "#/components/parameters/MerchantID",
            "example": null
          },
          "merchantInvoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MerchantInvoice"
            }
          },
          "_metadata": {
            "$ref": "#/components/schemas/Metadata"
          }
        }
      },
      "EnrollmerchantRequest": {
        "required": [
          "merchantId"
        ],
        "type": "object",
        "properties": {
          "merchantId": {
            "maximum": 22,
            "type": "string",
            "description": "The merchant ID (MID)",
            "example": 8025491732
          },
          "firstName": {
            "maximum": 24,
            "type": "string",
            "description": "First name of the merchant",
            "example": "John"
          },
          "lastName": {
            "maximum": 24,
            "type": "string",
            "description": "Last name of the merchant",
            "example": "Doe"
          },
          "applicantEmail": {
            "maximum": 24,
            "type": "string",
            "description": "Email of the merchant",
            "example": "peng.li@elavon.com"
          }
        }
      },
      "EnrollmerchantResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Possible values",
            "enum": [
              "SUCCESS",
              "FAIL"
            ]
          },
          "applyUrl": {
            "type": "string",
            "description": "applyUrl to start the merchant enrolment process.",
            "example": "https://it01-onboarding.elavon.com/gateway/elavon/merchant/aps?passcode=IRZES3RLLFDWISSZMZXHGM2RNRIS6OKUMY2TMVCDOBTFUYZTKNYEOVCUPJXFO5DZM5LFKPI_&source=MI"
          }
        }
      },
      "LoanTransactionRequest": {
        "required": [
          "merchantId",
          "partnerSessionId"
        ],
        "type": "object",
        "properties": {
          "merchantId": {
            "maximum": 22,
            "type": "string",
            "description": "The merchant ID (MID) assigned by Elavon",
            "example": 435523232323
          },
          "partnerSessionId": {
            "maximum": 64,
            "type": "string",
            "description": "Unique partner session ID assigned to an Invoice",
            "example": "77ebbf62-2869-4953-9302-a1bf46c6e112"
          }
        }
      },
      "LoanStatus": {
        "required": [
          "notificationType",
          "alternateId",
          "productName",
          "eventName"
        ],
        "type": "object",
        "description": "Indicates the stage of customer loan application process",
        "properties": {
          "notificationType": {
            "maxLength": 7,
            "type": "string",
            "description": "Indicates that this request is webhook payload",
            "example": "WEBHOOK"
          },
          "alternateId": {
            "type": "string",
            "description": "Partner that has been defined by Avvance in its internal systems when onboarding the partner into Avvance platform",
            "example": "Avvance_Test_Partner"
          },
          "occurredAt": {
            "type": "string",
            "description": "Date and time when this event has been triggered",
            "example": "2023-06-28T17:08:50.000Z"
          },
          "productName": {
            "type": "string",
            "description": "Product name",
            "example": "BNPL"
          },
          "eventName": {
            "type": "string",
            "description": "Webhook event name for which payload is being sent",
            "example": "LOAN_STATUS_DETAILS"
          },
          "eventDetails": {
            "$ref": "#/components/schemas/EventDetails"
          }
        }
      },
      "EventDetails": {
        "required": [
          "merchantId"
        ],
        "type": "object",
        "description": "This section contains the actual webhook payload.",
        "properties": {
          "merchantId": {
            "maxLength": 22,
            "type": "string",
            "description": "Indicates that the merchant ID (MID) assigned by Elavon",
            "example": 435523232323
          },
          "applicationGUID": {
            "maxLength": 64,
            "type": "string",
            "description": "Unique loan application ID assigned to an invoice",
            "example": "7b831e4d-cfc7-4215-bad4-11a88eff8090"
          },
          "terminalId": {
            "maxLength": 28,
            "type": "number",
            "description": "The terminal identification number used to uniquely identify the Merchant and their financial institution to Elavon.  \nThe terminal ID consists of two parts and is assigned by Elavon for each POS device.  \n- Digits 1-6 = Bank Number – This six-digit fixed length value is assigned by Elavon.  \n- Digits 7-22 = Terminal Number or ID – This variable length value is assigned by Elavon and has a minimum length of 1 and a maximum length of 16.\n"
          },
          "paymentTransactionId": {
            "maxLength": 10,
            "type": "string",
            "description": "Transaction reference number assigned by Elavon",
            "example": "56F478UI89"
          },
          "approvalCode": {
            "maxLength": 6,
            "type": "string",
            "description": "This field contains the approval code for an approved transaction",
            "example": 528657
          },
          "partnerSessionId": {
            "maxLength": 64,
            "type": "string",
            "description": "Unique partner session ID assigned to an Invoice",
            "example": "77ebbf62-2869-4953-9302-a1bf46c6e112"
          },
          "loanStatus": {
            "$ref": "#/components/schemas/Status"
          },
          "invoiceAmount": {
            "$ref": "#/components/schemas/InvoiceAmount"
          },
          "loanSummary": {
            "$ref": "#/components/schemas/LoanSummary"
          }
        }
      },
      "Status": {
        "required": [
          "status",
          "merchantMessage"
        ],
        "type": "object",
        "description": "This informs the stage of customer checkout process which has been triggered to notify the partner.",
        "properties": {
          "status": {
            "description": "Refer to the [loan status](https://developer.elavon.com/products/avvance/v1/status-codes-and-error-codes#webhook-status-codes) section.",
            "enum": [
              "APPLICATION_STARTED",
              "APPLICATION_LINK_EXPIRED",
              "APPLICATION_APPROVED",
              "APPLICATION_PENDING_REQUIRE_CUSTOMER_ACTION",
              "APPLICATION_DENIED_REQUEST_ALTERNATE_PAYMENT",
              "SYSTEM_ERROR_REQUEST_ALTERNATE_PAYMENT",
              "INVOICE_PAYMENT_TRANSACTION_AUTHORIZED",
              "INVOICE_PAYMENT_TRANSACTION_SETTLED"
            ]
          },
          "merchantMessage": {
            "description": "Refer to the [loan status](https://developer.elavon.com/products/avvance/v1/status-codes-and-error-codes#webhook-status-codes) section.",
            "enum": [
              "PENDING_CUSTOMER_ACTION",
              "EXPIRED_LINK",
              "REQUEST_ALTERNATIVE_PAYMENT",
              "INVOICE_PAID",
              "PAYMENT_SETTLED"
            ]
          }
        }
      },
      "InvoiceAmount": {
        "required": [
          "value",
          "currency"
        ],
        "type": "object",
        "description": "Invoice amount object",
        "properties": {
          "value": {
            "maxLength": 8,
            "type": "number",
            "description": "Invoice amount",
            "example": 1240
          },
          "currency": {
            "maxLength": 7,
            "type": "string",
            "description": "Currency name",
            "example": "USD"
          }
        }
      },
      "LoanSummary": {
        "type": "object",
        "description": "Summary of loan issued. This object is available only if loanStatus decision is APPROVED and reason is TRANSACTION.",
        "properties": {
          "accountType": {
            "maxLength": 24,
            "type": "string",
            "description": "Loan type name",
            "example": "Avvance installment loan"
          },
          "accountNumber": {
            "maxLength": 19,
            "type": "string",
            "description": "Account number associated with the loan (Last 4 digits)",
            "example": 12121312121312120000
          },
          "amountFinanced": {
            "maxLength": 8,
            "type": "string",
            "description": "Amount of the loan financed",
            "example": 700
          },
          "apr": {
            "maxLength": 4,
            "type": "number",
            "description": "Indicates the APR of the financed loan",
            "example": 3
          },
          "term": {
            "maxLength": 2,
            "type": "number",
            "description": "Indicates the payment term of the financed loan",
            "example": 6
          },
          "monthlyPayment": {
            "maxLength": 8,
            "type": "number",
            "description": "Indicates the monthly payment amount",
            "example": 116.67
          },
          "totalLoanAmount": {
            "maxLength": 8,
            "type": "number",
            "description": "Indicates the total invoice amount",
            "example": 700
          },
          "firstPaymentDue": {
            "maxLength": 10,
            "type": "string",
            "description": "Indicates the first payment due date",
            "example": "01/17/2024"
          }
        }
      },
      "ProcessLoanTransactionResponse": {
        "type": "object",
        "properties": {
          "isTransactionComplete": {
            "maximum": 16,
            "type": "boolean",
            "description": "Indicates whether the transaction is complete or not. Possible value is `True`.",
            "example": true
          },
          "paymentTransactionId": {
            "maximum": 10,
            "type": "string",
            "description": "Transaction reference number assigned by Elavon",
            "example": "797293de-6366-4eec-a74a-3e1bde57f6f2"
          },
          "approvalCode": {
            "maximum": 6,
            "type": "string",
            "description": "Code associated with an approved transaction",
            "example": "6NBE61"
          },
          "partnerSessionId": {
            "maximum": 64,
            "type": "string",
            "description": "Unique partner session ID of a previously approved invoice paid with Avvance",
            "example": "77ebbf62-2869-4953-9302-a1bf46c6e112"
          }
        }
      },
      "BaseResponse": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Error"
          },
          "timestamp": {
            "type": "string",
            "description": "Indicates the date and the time when the error event occurred",
            "example": "2024-03-13T12:02:49.546Z"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Error code. Refer to [status codes and error codes](https://developer.elavon.com/products/avvance/v1/status-codes-and-error-codes#error-codes) for more details.",
            "example": "400.44010.41199"
          },
          "message": {
            "type": "string",
            "description": "Error message. Refer to [status codes and error codes](https://developer.elavon.com/products/avvance/v1/status-codes-and-error-codes#error-codes) for more details.",
            "example": "A shopping cart for this given partnerSessionId already exists"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetail"
            }
          }
        }
      },
      "ErrorDetail": {
        "type": "object",
        "properties": {
          "attributeName": {
            "type": "string",
            "description": "Name of the attribute causing the error"
          },
          "reason": {
            "type": "string",
            "description": "Detailed error reason. Refer to [status codes and error codes](https://developer.elavon.com/products/avvance/v1/status-codes-and-error-codes#error-codes) for more details.",
            "example": "A shopping cart for this given partnerSessionId already exists."
          }
        }
      },
      "RefundTransactionRequest": {
        "required": [
          "partnerSessionId",
          "merchantId",
          "refundAmount"
        ],
        "type": "object",
        "properties": {
          "partnerSessionId": {
            "maximum": 64,
            "type": "string",
            "description": "Unique partner session ID assigned to an invoice",
            "example": "77ebbf62-2869-4953-9302-a1bf46c6e112"
          },
          "merchantId": {
            "maximum": 22,
            "type": "string",
            "description": "The merchant ID assigned by Elavon",
            "example": 435523232323
          },
          "refundAmount": {
            "type": "number",
            "format": "float",
            "description": "Amount to be refunded. Partial refunds are allowed.",
            "example": 300
          }
        }
      },
      "BillingAddress": {
        "type": "object",
        "description": "Billing Address. Auto suggestions will be provided on input.",
        "properties": {
          "street1": {
            "type": "string",
            "maximum": 255,
            "description": "Street 1 - The house number and street name of the loan applicant",
            "example": "123 First Street"
          },
          "street2": {
            "type": "string",
            "maximum": 255,
            "description": "Street 2 - Apartment or condominium unit number and floor number of the loan applicant",
            "example": "Unit 2"
          },
          "street3": {
            "type": "string",
            "maximum": 255,
            "description": "Street 3 of the loan applicant",
            "example": "Monterey apartments"
          },
          "city": {
            "type": "string",
            "maximum": 64,
            "description": "City name of the loan applicant",
            "example": "Los Angeles"
          },
          "state": {
            "type": "string",
            "maximum": 2,
            "description": "State name of the loan applicant",
            "example": "CA"
          },
          "countryCode": {
            "type": "string",
            "maximum": 10,
            "description": "Country code of the loan applicant",
            "example": "US"
          },
          "postalCode": {
            "type": "string",
            "maximum": 10,
            "description": "Postal code of the loan applicant",
            "example": "91755"
          }
        }
      },
      "Consumer": {
        "type": "object",
        "description": "Loan applicant details",
        "properties": {
          "language": {
            "type": "string",
            "maximum": 10,
            "description": "Preferred language of the loan applicant",
            "example": "EN"
          },
          "email": {
            "maximum": 255,
            "type": "string",
            "description": "Email of the loan applicant",
            "example": "abc@email.com"
          },
          "firstName": {
            "maximum": 64,
            "type": "string",
            "description": "First name of the loan applicant",
            "example": "Joe"
          },
          "middleName": {
            "maximum": 64,
            "type": "string",
            "description": "Middle name of the loan applicant",
            "example": "kr"
          },
          "lastName": {
            "maximum": 64,
            "type": "string",
            "description": "Last name of the loan applicant",
            "example": "Dow"
          },
          "mobilePhone": {
            "maximum": 20,
            "type": "string",
            "description": "Mobile number of the loan applicant. Use 9009009000. Other mobile numbers will decline the transaction in UAT environment.",
            "example": "9009009000"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/BillingAddress"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/ShippingAddress"
          },
          "IPAddress": {
            "type": "string",
            "description": "IP Address",
            "example": "100.100.0.10"
          }
        }
      },
      "MetaData": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Key defines any data set."
          },
          "value": {
            "type": "string",
            "description": "Value is a variable of the data set."
          }
        },
        "description": "Metadata"
      },
      "ShippingAddress": {
        "type": "object",
        "properties": {
          "street1": {
            "type": "string",
            "maximum": 255,
            "description": "Street 1 - The house number and street name of the loan applicant",
            "example": "123 First Street"
          },
          "street2": {
            "type": "string",
            "maximum": 255,
            "description": "Street 2 - Apartment or condominium unit number and floor number of the loan applicant",
            "example": "Unit 2"
          },
          "street3": {
            "type": "string",
            "maximum": 255,
            "description": "Street 3 of the loan applicant",
            "example": "Monterey apartments"
          },
          "city": {
            "type": "string",
            "maximum": 64,
            "description": "City name of the loan applicant",
            "example": "Los Angeles"
          },
          "state": {
            "type": "string",
            "maximum": 2,
            "description": "State name of the loan applicant",
            "example": "CA"
          },
          "countryCode": {
            "type": "string",
            "maximum": 10,
            "description": "Country code of the loan applicant",
            "example": "US"
          },
          "postalCode": {
            "type": "string",
            "maximum": 10,
            "description": "Postal code of the loan applicant",
            "example": 91755
          },
          "shippingDate": {
            "pattern": "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})",
            "type": "string",
            "description": "Shipping date in yyyy-mm-dd format",
            "example": "2024-05-10"
          }
        },
        "description": "Shipping Address"
      },
      "ShoppingCartCreateRequest": {
        "required": [
          "cartOriginationChannel",
          "invoiceAmount",
          "merchantId",
          "partnerSessionId",
          "returnUrl"
        ],
        "type": "object",
        "properties": {
          "partnerSessionId": {
            "maximum": 64,
            "type": "string",
            "description": "Unique partner session ID assigned to an invoice",
            "example": "77ebbf62-2869-4953-9302-a1bf46c6e112"
          },
          "merchantId": {
            "maximum": 22,
            "type": "string",
            "description": "Merchant ID assigned by Elavon",
            "example": 435523232323
          },
          "invoiceId": {
            "maximum": 60,
            "type": "string",
            "description": "Invoice ID assigned for the transaction",
            "example": "INV8282882"
          },
          "invoiceAmount": {
            "maximum": 25000,
            "minimum": 300,
            "type": "string",
            "description": "Invoice amount has to be within range $300 and $25000.",
            "example": "340"
          },
          "currencyType": {
            "maximum": 10,
            "type": "string",
            "description": "Currency type. Default to USD if the value is not sent in the request.",
            "example": "USD"
          },
          "merchantTransactionId": {
            "maximum": 35,
            "type": "string",
            "description": "Unique merchant assigned data for this transaction",
            "example": "TXNID00000192"
          },
          "purchaseDescription": {
            "maximum": 255,
            "type": "string",
            "description": "Purchase description",
            "example": "My Test Purchase"
          },
          "terminalId": {
            "maximum": 28,
            "type": "string",
            "description": "The terminal identification number used to identify the merchant and their financial institution.  \nThe terminal ID consists of two parts and is assigned by Elavon for each POS device.  \n  - Digits 1-6 = Bank Number. This six-digit fixed length value is assigned by Elavon.  \n  - Digits 7-22 = Terminal Number or ID – This variable length value is assigned by Elavon and has a minimum length of 1 and a maximum length of 16.\n",
            "example": "0010548510000000724990"
          },
          "cartOriginationChannel": {
            "type": "string",
            "description": "Cart origination channel",
            "enum": [
              "ECOM",
              "MAILORDER",
              "TELEPHONEORDER",
              "RETAIL"
            ],
            "example": "ECOM"
          },
          "consumer": {
            "$ref": "#/components/schemas/Consumer"
          },
          "metadata": {
            "type": "array",
            "description": "Metadata",
            "items": {
              "$ref": "#/components/schemas/MetaData"
            }
          },
          "partnerReturnSuccessUrl": {
            "maximum": 1000,
            "type": "string",
            "description": "Success return URL is used to redirect the customer once the loan processing is completed.",
            "example": "https://cloudapply.us.bank-dns.com/success"
          },
          "partnerReturnErrorUrl": {
            "maximum": 1000,
            "type": "string",
            "description": "Error return URL is used to redirect the customer upon any failures.",
            "example": "https://cloudapply.us.bank-dns.com/success"
          }
        }
      },
      "ShoppingCartCreateResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Possible values",
            "enum": [
              "SUCCESS",
              "FAIL"
            ]
          },
          "isMerchantValid": {
            "type": "string",
            "description": "Possible value is `Y` in case of success. The value `N` indicates failure.",
            "example": "Y"
          },
          "isCartCreated": {
            "type": "string",
            "description": "Possible value is `Y` in case of success. The value `N` indicates failure.",
            "example": "Y"
          },
          "consumerOnboardingURL": {
            "type": "string",
            "description": "Link shared with customer to start the lending process.",
            "example": "https://uat01-onboarding.usbank.com/usl/avvance-installment-loans/begin?passcode=KZXE42TMI5SWCVCOIRYE443MKAVWMQTPIQYUC4DYKNSES5LOJ5MGOUTOJNJVGUSPO5HECPI"
          },
          "applicationGUID": {
            "type": "string",
            "description": "Unique loan application ID assigned to an invoice",
            "format": "uuid"
          },
          "partnerSessionID": {
            "type": "string",
            "description": "Unique partner session ID assigned to an invoice that was received in the initiate loan request.",
            "example": "77ebbf62-2869-4953-9302-a1bf46c6e112"
          }
        }
      },
      "AuthenticationRequest": {
        "required": [
          "grant_type"
        ],
        "type": "object",
        "properties": {
          "grant_type": {
            "type": "string",
            "description": "Value should be client credentials.",
            "example": "client_credentials",
            "enum": [
              "client_credentials"
            ]
          }
        }
      },
      "AuthencticationResponse": {
        "properties": {
          "tokenType": {
            "type": "string",
            "description": "Bearer Token",
            "example": "BearerToken"
          },
          "expiresIn": {
            "type": "string",
            "description": "Expiry time in seconds",
            "example": 899
          },
          "accessToken": {
            "type": "string",
            "description": "Authorization Token (JWT) that should be sent in subsequent API Calls.",
            "example": "6yRvexxxxxxxxxxxxxxRPkyOp"
          }
        }
      }
    },
    "securitySchemes": {
      "Basic": {
        "type": "http",
        "scheme": "basic"
      },
      "BearerToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "parameters": {
      "Authorization": {
        "name": "Authorization",
        "in": "header",
        "description": "The Base64 encoded key and secret. Your key and secret key will be provided by Avvance when you start your project.",
        "example": "Basic MXN5SjFvXXXXXXXXXXXXXXXXXXXXXuaHlLZXJVTA==",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "BearerToken": {
        "name": "Authorization",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "description": "Bearer Token that was received as part of the Authentication request",
          "example": "Bearer Mb6LKWrsfPGkS3mOLj1rPnwsPVW1R"
        }
      },
      "ChannelID": {
        "name": "Channel-ID",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "description": "Requested channel with possible values   \n  - WEB  \n  - OWA (if mobile)  \n",
          "enum": [
            "WEB",
            "OWA"
          ]
        }
      },
      "CorrelationID": {
        "name": "Correlation-ID",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "description": "Universally Unique Identifier (UUID). A unique ID sent by Avvance for every request. It is used to trace the request."
        }
      },
      "ApplicationID": {
        "name": "Application-ID",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "description": "Application ID",
          "example": "AVNC_PTNR"
        }
      },
      "SessionKey": {
        "name": "sessionKey",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "description": "Universally Unique Identifier (UUID). A unique ID sent by the partner for every session. It is used to trace the request."
        }
      },
      "ClientData": {
        "name": "clientdata",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "description": "Metadata of the client information in JSON",
          "example": "{ \"ChannelID\":\"OWA\" }",
          "enum": [
            {
              "ChannelID": "OWA"
            },
            {
              "ChannelID": "WEB"
            }
          ]
        }
      },
      "SessionID": {
        "name": "Session-ID",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "description": "Universally Unique Identifier (UUID). A unique ID sent by the partner for every session. It is used to trace the request.",
          "example": "77ebbf62-2869-4953-9302-a1bf46c6e112"
        }
      },
      "RoutingKey": {
        "name": "routingKey",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "description": "Attribute added to the message header. Applicable for the demo environments to route only particular instance.",
          "enum": [
            "uat1",
            "uat2",
            "uat3"
          ]
        }
      },
      "PartnerID": {
        "name": "partner-ID",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "description": "Unique Partner ID defined by Avvance during onboarding"
        }
      },
      "MerchantID": {
        "name": "merchantID",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "description": "Indicates that the merchant ID (MID) assigned by Elavon",
          "example": 435523232323
        }
      }
    }
  }
}