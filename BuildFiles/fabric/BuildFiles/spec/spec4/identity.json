{"collection":{"item":[{"name":"Authentication Endpoints","description":"These endpoints allow `sysapp` and `userapp` to authenticate themselves or their end users using fabric Identity. TThe main objective of these endpoints is to provide access tokens to applications, allowing them to invoke other fabric services such as Order, Products, and more.","item":[{"id":"7cb06fad-c9ad-43bb-80f4-bde15ea0eec5","name":"Authorize `userapp` with and without PKCE","request":{"name":"Authorize `userapp` with and without PKCE","description":{"content":"Use this endpoint to authenticate `userapp`(s) using fabric Identity. When calling this endpoint, the immediate response will be a browser redirect to the hosted Login page configured in fabric Identity. After successful authentication of the user on the hosted Login page, fabric Identity will redirect back to the `userapp` using the provided `redirect_uri`. This endpoint supports both authorization code flow with and without Proof of Code Exchange (PKCE). <br> **Note**: This endpoint is not required for `sysapp` authentication (refer to `/token` endpoint instead)","type":"text/plain"},"url":{"path":["oauth2","default","v1","authorize"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"description":{"content":"(Required) Client ID of the `userapp`","type":"text/plain"},"key":"client_id","value":"<string>"},{"disabled":false,"description":{"content":"(Required) Type of the response expected. This should always be set to `code` (as per OAuth 2.0 grant type, refer to https://datatracker.ietf.org/doc/html/rfc6749#page-19) for additional info.","type":"text/plain"},"key":"response_type","value":"<string>"},{"disabled":false,"description":{"content":"(Required) Scope of the endpoint call. This should always be set to `openid` (as per OpenID Connect standard. Refer to https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest for additional info)","type":"text/plain"},"key":"scope","value":"<string>"},{"disabled":false,"description":{"content":"(Required) Redirect URI of the `userapp` is where fabric Identity will redirect the user upon successful login. This URI should be hosted by the `userapp`. As part of the redirect, you will receive the auth code (as `code` query parameter) which can then be exchanged for the access token (refer to `/token`).","type":"text/plain"},"key":"redirect_uri","value":"<string>"},{"disabled":false,"description":{"content":"(Required) Random string created by the `userapp`. It is used to maintain state between the request and the callback. The `state` helps mitigate Cross-Site Request Forgery (CSRF) when it is cryptographically derived from a browser cookie that signifies the the user or session.","type":"text/plain"},"key":"state","value":"<string>"},{"disabled":false,"description":{"content":"Required only when using authorization code flow with PKCE. <br> A code challenge method supported by PKCE specification. fabric Identity only supports the value of `S256` (Refer to https://datatracker.ietf.org/doc/html/rfc7636#section-4.2 for additional info). This parameter is mandatory for authorization code flow with PKCE and is not required for the regular authorization code flow.","type":"text/plain"},"key":"code_challenge_method","value":"<string>"},{"disabled":false,"description":{"content":"(Required) Required only when using authorization code flow with PKCE. The code challenge created by the `userapp` as per the specification on PKCE - https://datatracker.ietf.org/doc/html/rfc7636#section-4.2.","type":"text/plain"},"key":"code_challenge","value":"<string>"}],"variable":[]},"method":"GET","body":{},"auth":null},"response":[{"id":"9c682dc7-dcd8-4e41-8c33-bf74cb0e3658","name":"Found. A successful response to this endpoint will re-direct the user to the hosted Login page provided by the fabric Identity. Once the user successfully logs in, fabric Identity would re-direct the client back to the `redirect_uri` hosted on the `userapp` with the authorization code (as query parameter `code`) and the state (as query parameter `state`). The `state` parameter in the callback would be the same value as sent in the request.","originalRequest":{"url":{"path":["oauth2","default","v1","authorize"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"description":{"content":"(Required) Client ID of the `userapp`","type":"text/plain"},"key":"client_id","value":"<string>"},{"disabled":false,"description":{"content":"(Required) Type of the response expected. This should always be set to `code` (as per OAuth 2.0 grant type, refer to https://datatracker.ietf.org/doc/html/rfc6749#page-19) for additional info.","type":"text/plain"},"key":"response_type","value":"<string>"},{"disabled":false,"description":{"content":"(Required) Scope of the endpoint call. This should always be set to `openid` (as per OpenID Connect standard. Refer to https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest for additional info)","type":"text/plain"},"key":"scope","value":"<string>"},{"disabled":false,"description":{"content":"(Required) Redirect URI of the `userapp` is where fabric Identity will redirect the user upon successful login. This URI should be hosted by the `userapp`. As part of the redirect, you will receive the auth code (as `code` query parameter) which can then be exchanged for the access token (refer to `/token`).","type":"text/plain"},"key":"redirect_uri","value":"<string>"},{"disabled":false,"description":{"content":"(Required) Random string created by the `userapp`. It is used to maintain state between the request and the callback. The `state` helps mitigate Cross-Site Request Forgery (CSRF) when it is cryptographically derived from a browser cookie that signifies the the user or session.","type":"text/plain"},"key":"state","value":"<string>"},{"disabled":false,"description":{"content":"Required only when using authorization code flow with PKCE. <br> A code challenge method supported by PKCE specification. fabric Identity only supports the value of `S256` (Refer to https://datatracker.ietf.org/doc/html/rfc7636#section-4.2 for additional info). This parameter is mandatory for authorization code flow with PKCE and is not required for the regular authorization code flow.","type":"text/plain"},"key":"code_challenge_method","value":"<string>"},{"disabled":false,"description":{"content":"(Required) Required only when using authorization code flow with PKCE. The code challenge created by the `userapp` as per the specification on PKCE - https://datatracker.ietf.org/doc/html/rfc7636#section-4.2.","type":"text/plain"},"key":"code_challenge","value":"<string>"}],"variable":[]},"method":"GET","body":{}},"status":"Found","code":302,"header":[],"cookie":[],"_postman_previewlanguage":"text"}],"event":[],"protocolProfileBehavior":{"disableBodyPruning":true}},{"id":"40fe2def-4d92-4c23-a8b5-ab9b7d0fbf3b","name":"Fetch access token","request":{"name":"Fetch access token","description":{"content":"This endpoint allows `userapp` and `sysapp` to fetch access tokens. For `userapp`, use this endpoint after the `/authorize` endpoint and the subsequent callback. For `userapp` this endpoint supports generation of access token from authorization code or from refresh token, sent in the previous `authorize` endpoint's callback. For `sysapp` this endpoint can directly be used to get an access token, no prior `/authorize` end point call is needed.<br/><b><span style='color: red'>NOTE: Fetching a token for a `sysapp` via the browser on our developer portal WILL NOT WORK as browser requests to the token endpoint must use PKCE.</span></b> Instead, send the request through a server side/native method and ensure the 'Origin' header is not present.","type":"text/plain"},"url":{"path":["oauth2",":authServerId","v1","token"],"host":["{{baseUrl}}"],"query":[],"variable":[{"type":"any","value":"<string>","key":"authServerId","disabled":false,"description":{"content":"(Required) Use `default` for `userapp` flows. For `sysapp`, use the tenant-specific server ID provided by fabric Identity (see Getting Started).","type":"text/plain"}}]},"header":[{"key":"Content-Type","value":"application/x-www-form-urlencoded"},{"key":"Accept","value":"application/json"}],"method":"POST","body":{"mode":"urlencoded","urlencoded":[{"disabled":false,"description":{"content":"(Required) Required for all authentication flows and app types. Set to `authorization_code` for `userapp` (for both authorization code flow with and without PKCE). Set to `client_credentials` when using for `sysapp`.","type":"text/plain"},"key":"grant_type","value":"authorization_code"},{"disabled":false,"description":{"content":"Required only for `userapp` and authorization code flow with PKCE.","type":"text/plain"},"key":"client_id","value":"<string>"},{"disabled":false,"description":{"content":"Required only for `userapp` and authorization code flow with PKCE.","type":"text/plain"},"key":"client_secret","value":"<string>"},{"disabled":false,"description":{"content":"Required for `userapp` with both authorization code flow with and without PKCE. URL encoded `redirect_uri` sent by the `userapp` in the previous `/authorize` call.","type":"text/plain"},"key":"redirect_uri","value":"<string>"},{"disabled":false,"description":{"content":"Required only for `userapp` and authorization code flow with PKCE. Code verifier using for deriving the `code_challenge` sent in the `/authorize` call. Refer to https://datatracker.ietf.org/doc/html/rfc7636#section-4.2 for more details","type":"text/plain"},"key":"code_verifier","value":"<string>"},{"disabled":false,"description":{"content":"Required for `userapp` with both authorization code flow with and without PKCE. <br> Authorization code received as part of the callback response to the `/authorize` call.","type":"text/plain"},"key":"code","value":"<string>"},{"disabled":false,"description":{"content":"Required only for `sysapp`. Value should always be set to `s2s`.","type":"text/plain"},"key":"scope","value":"s2s"}]},"auth":null},"response":[{"id":"857be4fc-3b31-4dac-be7e-6af094da1ce6","name":"Access token response","originalRequest":{"url":{"path":["oauth2",":authServerId","v1","token"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"key":"Content-Type","value":"application/x-www-form-urlencoded"},{"key":"Accept","value":"application/json"}],"method":"POST","body":{"mode":"urlencoded","urlencoded":[{"disabled":false,"description":{"content":"(Required) Required for all authentication flows and app types. Set to `authorization_code` for `userapp` (for both authorization code flow with and without PKCE). Set to `client_credentials` when using for `sysapp`.","type":"text/plain"},"key":"grant_type","value":"authorization_code"},{"disabled":false,"description":{"content":"Required only for `userapp` and authorization code flow with PKCE.","type":"text/plain"},"key":"client_id","value":"<string>"},{"disabled":false,"description":{"content":"Required only for `userapp` and authorization code flow with PKCE.","type":"text/plain"},"key":"client_secret","value":"<string>"},{"disabled":false,"description":{"content":"Required for `userapp` with both authorization code flow with and without PKCE. URL encoded `redirect_uri` sent by the `userapp` in the previous `/authorize` call.","type":"text/plain"},"key":"redirect_uri","value":"<string>"},{"disabled":false,"description":{"content":"Required only for `userapp` and authorization code flow with PKCE. Code verifier using for deriving the `code_challenge` sent in the `/authorize` call. Refer to https://datatracker.ietf.org/doc/html/rfc7636#section-4.2 for more details","type":"text/plain"},"key":"code_verifier","value":"<string>"},{"disabled":false,"description":{"content":"Required for `userapp` with both authorization code flow with and without PKCE. <br> Authorization code received as part of the callback response to the `/authorize` call.","type":"text/plain"},"key":"code","value":"<string>"},{"disabled":false,"description":{"content":"Required only for `sysapp`. Value should always be set to `s2s`.","type":"text/plain"},"key":"scope","value":"s2s"}]}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n  \"token_type\": \"<string>\",\n  \"expires_in\": \"<number>\",\n  \"access_token\": \"<string>\",\n  \"id_token\": \"<string>\",\n  \"scope\": \"<string>\"\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[],"protocolProfileBehavior":{"disableBodyPruning":true}}]}],"event":[],"variable":[{"key":"customer_name","value":"yourcompany"},{"key":"baseUrl","value":"https://{{customer_name}}.login.fabric.inc"}],"info":{"_postman_id":"7b514eca-8197-4ad7-b5d8-d4aee5184c97","name":"Authentication v3","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json","description":{"content":"fabric **Identity** API is designed to be used by all third-party developers for the purpose of authenticating and obtaining access tokens. These tokens are essential for building e-commerce solutions that seamlesly integrate with fabric services such as Orders, Offers, among others.\n\nContact Support:\n Email: support@fabric.inc","type":"text/plain"}}}}
