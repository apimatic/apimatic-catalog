{
    "openapi": "3.0.1",
    "info": {
        "title": "SIX Web API (prod)",
        "description": "All APIs about instruments",
        "contact": {
            "name": "SIX Web API Team ðŸš€",
            "url": "https://web.apiportal.six-group.com/portal/bfi/"
        },
        "version": "v1"
    },
    "servers": [
        {
            "url": "https://web.api.six-group.com"
        }
    ],
    "security": [
        {
            "mutualTLS": [
                "mTLS is required to make API calls. It can be requested to SIX via the Dev Portal."
            ]
        }
    ],
    "paths": {
        "/api/findata/v1/instruments/referenceData/indexComposition": {
            "get": {
                "tags": [
                    "referenceData"
                ],
                "description": "Index composition for instruments.",
                "operationId": "indexComposition_1",
                "parameters": [
                    {
                        "name": "scheme",
                        "in": "query",
                        "description": "Scheme of the Instrument Identifier.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ISIN",
                                "SEDOL",
                                "CUSIP",
                                "CINS",
                                "WKN",
                                "VALOR",
                                "COMMONCODE",
                                "TICKER_BC"
                            ]
                        },
                        "example": "ISIN"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Instrument Identification to be provided by client as input parameter.",
                            "format": "comma separated values"
                        },
                        "examples": {
                            "It is recommended to request with a single ID to ensure optimal API performance.": {
                                "summary": "CH1292887457",
                                "description": "It is recommended to request with a single ID to ensure optimal API performance.",
                                "value": "CH1292887457"
                            }
                        }
                    },
                    {
                        "name": "preferredLanguage",
                        "in": "query",
                        "description": "Language in ISO 639 alpha-2 code for string fields where content in different languages is available.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "IT"
                            ]
                        },
                        "example": "EN"
                    },
                    {
                        "name": "extensions",
                        "in": "query",
                        "description": "Select Extensions to know more about the GraphQL query, Data Status and Dataset IDs. EXPLAIN = include the equivalent GraphQL query in the REST API response.",
                        "required": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Optional metadata to be returned in the response",
                                "enum": [
                                    "EXPLAIN",
                                    "DATA_STATUS",
                                    "DATASET_IDS"
                                ]
                            }
                        },
                        "example": "EXPLAIN"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "api-version": {
                                "description": "The API version of the response",
                                "required": true,
                                "schema": {
                                    "type": "string",
                                    "format": "date"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IndexCompositionTopLevelV1"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {
                            "ratelimit-limit": {
                                "description": "The maximum number of requests in the current window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "ratelimit-remaining": {
                                "description": "The number of requests remaining in the current rate limit window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "retry-after": {
                                "description": "How long to wait before making a follow-up request (in seconds)",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "No required TLS certificate was sent"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {
                            "ratelimit-limit": {
                                "description": "The maximum number of requests in the current window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "ratelimit-remaining": {
                                "description": "The number of requests remaining in the current rate limit window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "retry-after": {
                                "description": "How long to wait before making a follow-up request (in seconds)",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Forbidden"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "headers": {
                            "ratelimit-limit": {
                                "description": "The maximum number of requests in the current window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "ratelimit-remaining": {
                                "description": "The number of requests remaining in the current rate limit window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "retry-after": {
                                "description": "How long to wait before making a follow-up request (in seconds)",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "API rate limit exceeded"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "headers": {
                            "ratelimit-limit": {
                                "description": "The maximum number of requests in the current window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "ratelimit-remaining": {
                                "description": "The number of requests remaining in the current rate limit window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "retry-after": {
                                "description": "How long to wait before making a follow-up request (in seconds)",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "headers": {
                            "ratelimit-limit": {
                                "description": "The maximum number of requests in the current window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "ratelimit-remaining": {
                                "description": "The number of requests remaining in the current rate limit window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "retry-after": {
                                "description": "How long to wait before making a follow-up request (in seconds)",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "api-version",
                    "in": "header",
                    "description": "The API version is represented as a date in ISO 8601 format. If not explicitly specified, the system will default to the latest version available. Valid versions: 2022-01-01, 2023-01-01, 2024-01-01, 2024-03-01, 2024-06-01, 2024-08-01",
                    "required": false,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "format": "date"
                    },
                    "example": "2024-08-01"
                }
            ]
        },
        "/api/findata/v1/listings/referenceData/indexComposition": {
            "get": {
                "tags": [
                    "referenceData"
                ],
                "description": "Index composition for instruments.",
                "operationId": "indexComposition",
                "parameters": [
                    {
                        "name": "scheme",
                        "in": "query",
                        "description": "Scheme of the Listing Identifier. It is a combination of the instrument scheme and the market scheme separated by underscore.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ISIN_BC",
                                "VALOR_BC",
                                "SEDOL_BC",
                                "CUSIP_BC",
                                "TICKER_BC",
                                "CINS_BC",
                                "COMMONCODE_BC",
                                "WKN_BC"
                            ]
                        },
                        "example": "ISIN_BC"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Listing Identifier to be provided by client as input parameter.",
                            "format": "comma separated values"
                        },
                        "examples": {
                            "It is recommended to request with a single ID to ensure optimal API performance.": {
                                "summary": "CH1292887457_3970",
                                "description": "It is recommended to request with a single ID to ensure optimal API performance.",
                                "value": "CH1292887457_3970"
                            }
                        }
                    },
                    {
                        "name": "preferredLanguage",
                        "in": "query",
                        "description": "Language in ISO 639 alpha-2 code for string fields where content in different languages is available.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "IT"
                            ]
                        },
                        "example": "EN"
                    },
                    {
                        "name": "extensions",
                        "in": "query",
                        "description": "Select Extensions to know more about the GraphQL query, Data Status and Dataset IDs. EXPLAIN = include the equivalent GraphQL query in the REST API response.",
                        "required": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Optional metadata to be returned in the response",
                                "enum": [
                                    "EXPLAIN",
                                    "DATA_STATUS",
                                    "DATASET_IDS"
                                ]
                            }
                        },
                        "example": "EXPLAIN"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "api-version": {
                                "description": "The API version of the response",
                                "required": true,
                                "schema": {
                                    "type": "string",
                                    "format": "date"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListingIndexCompositionTopLevelV1"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {
                            "ratelimit-limit": {
                                "description": "The maximum number of requests in the current window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "ratelimit-remaining": {
                                "description": "The number of requests remaining in the current rate limit window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "retry-after": {
                                "description": "How long to wait before making a follow-up request (in seconds)",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "No required TLS certificate was sent"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {
                            "ratelimit-limit": {
                                "description": "The maximum number of requests in the current window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "ratelimit-remaining": {
                                "description": "The number of requests remaining in the current rate limit window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "retry-after": {
                                "description": "How long to wait before making a follow-up request (in seconds)",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Forbidden"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "headers": {
                            "ratelimit-limit": {
                                "description": "The maximum number of requests in the current window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "ratelimit-remaining": {
                                "description": "The number of requests remaining in the current rate limit window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "retry-after": {
                                "description": "How long to wait before making a follow-up request (in seconds)",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "API rate limit exceeded"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "headers": {
                            "ratelimit-limit": {
                                "description": "The maximum number of requests in the current window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "ratelimit-remaining": {
                                "description": "The number of requests remaining in the current rate limit window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "retry-after": {
                                "description": "How long to wait before making a follow-up request (in seconds)",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "headers": {
                            "ratelimit-limit": {
                                "description": "The maximum number of requests in the current window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "ratelimit-remaining": {
                                "description": "The number of requests remaining in the current rate limit window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "retry-after": {
                                "description": "How long to wait before making a follow-up request (in seconds)",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "api-version",
                    "in": "header",
                    "description": "The API version is represented as a date in ISO 8601 format. If not explicitly specified, the system will default to the latest version available. Valid versions: 2022-01-01, 2023-01-01, 2024-01-01, 2024-03-01, 2024-06-01, 2024-08-01",
                    "required": false,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "format": "date"
                    },
                    "example": "2024-08-01"
                }
            ]
        }
    },
    "components": {
        "schemas": {
            "Details": {
                "type": "object",
                "properties": {
                    "correlationId": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    }
                }
            },
            "ErrorDetail": {
                "required": [
                    "category",
                    "code",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "category": {
                        "type": "string",
                        "description": "Error categories",
                        "example": "VALIDATION_ERROR",
                        "enum": [
                            "ENTITLEMENT_ERROR",
                            "VALIDATION_ERROR",
                            "DATA_FETCHING_ERROR",
                            "HTTP_ERROR",
                            "OTHER"
                        ]
                    },
                    "code": {
                        "type": "string",
                        "description": "code is used to identify the error",
                        "example": "CANNOT_CONVERT_PARAMETER",
                        "enum": [
                            "ACCESS_DENIED",
                            "TIMEOUT",
                            "INVALID_PERIOD",
                            "INVALID_RANGE",
                            "INVALID_CRITERIA",
                            "NO_DATA",
                            "PARAMETER_NOT_READABLE",
                            "PARAMETER_REQUIRED",
                            "DATA_REPORT_ERROR",
                            "QUOTA_LIMIT_EXCEEDED",
                            "INTERNAL_SERVICE_ERROR",
                            "REQUEST_NOT_ALLOWED",
                            "TOO_MANY_OPERATIONS",
                            "DUPLICATE_STREAM_ID",
                            "OTHER"
                        ]
                    },
                    "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "missing header 'X-HEADER'"
                    },
                    "hint": {
                        "$ref": "#/components/schemas/Hint"
                    }
                },
                "description": "A machine/human readable description of an error."
            },
            "Explain": {
                "required": [
                    "query",
                    "variables"
                ],
                "type": "object",
                "properties": {
                    "query": {
                        "type": "string"
                    },
                    "variables": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    }
                },
                "description": "Exposes the internal GraphQL query details behind a given REST request. Could be useful to migrate from REST to GraphQL (e.g. to customize the shape of the response). Disabled by default."
            },
            "ExtensionsData": {
                "type": "object",
                "properties": {
                    "explain": {
                        "$ref": "#/components/schemas/Explain"
                    },
                    "dataStatus": {
                        "type": "object",
                        "properties": {
                            "topLevel": {
                                "type": "string"
                            },
                            "dataStatus": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            "empty": {
                                "type": "boolean"
                            }
                        },
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "datasetIds": {
                        "type": "object",
                        "properties": {
                            "topLevel": {
                                "type": "string"
                            },
                            "datasetIds": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            "empty": {
                                "type": "boolean"
                            }
                        },
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "details": {
                        "$ref": "#/components/schemas/Details"
                    }
                }
            },
            "Hint": {
                "required": [
                    "data",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "ALLOWED_RANGE",
                            "ALLOWED_VALUES",
                            "CONTACT_SIX"
                        ]
                    },
                    "data": {
                        "type": "object"
                    }
                },
                "description": "a machine readable description of the error"
            },
            "ListingIndexCompositionConstituentsItemV1": {
                "type": "object",
                "properties": {
                    "valor": {
                        "type": "integer",
                        "description": "Official national instrument identifier assigned by the National Numbering Agency responsible for Switzerland: SIX Financial Information.",
                        "format": "int64"
                    },
                    "isin": {
                        "type": "string",
                        "description": "The International Securities Identification Number (ISIN) is a universally recognized and standardized code that uniquely identifies a financial instrument. The structure is defined in ISO 6166."
                    },
                    "mic": {
                        "type": "string",
                        "description": "Market Identifier Code (MIC) of the market. It is based on ISO 10383 alphanumeric-4 code and represents a universal method of identifying exchanges, trading platforms, regulated or non-regulated markets and trade reporting facilities as sources of prices and related information."
                    },
                    "currency": {
                        "type": "string",
                        "description": "Currency in which the component is priced and relevant for the monitoring, payout or index evaluation process. It is specified by SIX and typically follows the ISO 4217 alpha-3 code."
                    },
                    "indexShares": {
                        "type": "number",
                        "description": "Indicates the number of shares used for the index calculation.",
                        "format": "double"
                    },
                    "freeFloatFactor": {
                        "type": "number",
                        "description": "For an index calculated on a free float basis, this factor adjusts the number of outstanding shares to determine the free float number of shares.",
                        "format": "double"
                    },
                    "weight": {
                        "type": "number",
                        "description": "The weight of the constituent in the index provided as a percentage value. This means the value is already scaled to a percentage format and does not need further conversion. For example, a value of 5.25 represents 5.25%.",
                        "format": "double"
                    }
                },
                "description": "List of index components"
            },
            "ListingIndexCompositionIndexCompositionV1": {
                "type": "object",
                "properties": {
                    "divisor": {
                        "type": "number",
                        "description": "The Divisor serves to normalize the index value, making it more manageable and easily comprehensible. In the creation of an index, whether price or market cap weighted, the sum of the prices of all index constituents forms the initial index value. To render this value more user-friendly and memorable, the divisor is applied, adjusting the sum to a round figure. Example: In an index with an initial value of $47'600 obtained by summing the prices of its constituents, the divisor of 476 could be applied to normalize the value to 100, making it more manageable and easier to track.",
                        "format": "double"
                    },
                    "numberOfConstituents": {
                        "type": "integer",
                        "description": "This field provides the number of constituents provided in the 'Constituents' list.",
                        "format": "int32"
                    },
                    "constituents": {
                        "type": "array",
                        "description": "List of index components",
                        "items": {
                            "$ref": "#/components/schemas/ListingIndexCompositionConstituentsItemV1"
                        }
                    }
                }
            },
            "ListingIndexCompositionListingsDataV1": {
                "type": "object",
                "properties": {
                    "listings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ListingIndexCompositionListingsItemV1"
                        }
                    }
                }
            },
            "ListingIndexCompositionListingsItemV1": {
                "required": [
                    "lookupStatus",
                    "requestedId",
                    "requestedScheme"
                ],
                "type": "object",
                "properties": {
                    "requestedId": {
                        "type": "string",
                        "description": "The requested entity id used in the request"
                    },
                    "requestedScheme": {
                        "type": "string",
                        "description": "The requested scheme used in the request",
                        "enum": [
                            "ISIN_BC",
                            "VALOR_BC",
                            "SEDOL_BC",
                            "CUSIP_BC",
                            "TICKER_BC",
                            "CINS_BC",
                            "COMMONCODE_BC",
                            "WKN_BC"
                        ]
                    },
                    "lookupStatus": {
                        "type": "string",
                        "description": "Status of the response",
                        "enum": [
                            "FOUND",
                            "NOT_FOUND",
                            "NOT_AUTHORIZED",
                            "NOT_VALID_ID"
                        ]
                    },
                    "lookup": {
                        "$ref": "#/components/schemas/ListingIndexCompositionLookupV1"
                    },
                    "referenceData": {
                        "$ref": "#/components/schemas/ListingIndexCompositionReferenceDataV1"
                    }
                }
            },
            "ListingIndexCompositionLookupV1": {
                "required": [
                    "listingCurrency",
                    "listingShortName",
                    "listingStatus",
                    "marketShortName"
                ],
                "type": "object",
                "properties": {
                    "listingShortName": {
                        "type": "string",
                        "description": "Listing short name with up to 19 characters."
                    },
                    "marketShortName": {
                        "type": "string",
                        "description": "The market short name where the instrument is listed with up to 19 characters."
                    },
                    "listingCurrency": {
                        "type": "string",
                        "description": "The trading currency, as specified by SIX, typically follows the ISO 4217 alpha-3 code. This is shown in the main currency and not in fractional units. For cryptocurrencies, the Cryptocurrency Symbol in Instrument Symbology can be used for reference."
                    },
                    "listingStatus": {
                        "type": "string",
                        "description": "This shows the instruments status on the market - it shows if it is listed, suspended, admited to trading, delisted, etc",
                        "enum": [
                            "UNOFFICIALLY_LISTED_ACCORDING_TO_EXCHANGE",
                            "APPLIED",
                            "LISTED",
                            "SUSPENDED",
                            "WITHDRAWN",
                            "DELISTED_BY_EXCHANGE",
                            "PROVISIONAL",
                            "WHEN_ISSUED",
                            "NOT_LISTED",
                            "ADMITTED_TO_TRADING",
                            "OFFICIAL_LISTING_ACC_TO_REGULATORY_AUTHORITY",
                            "VIRTUAL_LISTING_DERIVED_VALUES_ONLY",
                            "LISTING_NO_TRADING",
                            "OTHER"
                        ]
                    }
                }
            },
            "ListingIndexCompositionReferenceDataV1": {
                "type": "object",
                "properties": {
                    "indexComposition": {
                        "$ref": "#/components/schemas/ListingIndexCompositionIndexCompositionV1"
                    }
                }
            },
            "ListingIndexCompositionTopLevelV1": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ListingIndexCompositionListingsDataV1"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorDetail"
                        }
                    },
                    "extensions": {
                        "$ref": "#/components/schemas/ExtensionsData"
                    }
                }
            },
            "IndexCompositionConstituentsItemV1": {
                "type": "object",
                "properties": {
                    "valor": {
                        "type": "integer",
                        "description": "Official national instrument identifier assigned by the National Numbering Agency responsible for Switzerland: SIX Financial Information.",
                        "format": "int64"
                    },
                    "isin": {
                        "type": "string",
                        "description": "The International Securities Identification Number (ISIN) is a universally recognized and standardized code that uniquely identifies a financial instrument. The structure is defined in ISO 6166."
                    },
                    "mic": {
                        "type": "string",
                        "description": "Market Identifier Code (MIC) of the market. It is based on ISO 10383 alphanumeric-4 code and represents a universal method of identifying exchanges, trading platforms, regulated or non-regulated markets and trade reporting facilities as sources of prices and related information."
                    },
                    "currency": {
                        "type": "string",
                        "description": "Currency in which the component is priced and relevant for the monitoring, payout or index evaluation process. It is specified by SIX and typically follows the ISO 4217 alpha-3 code."
                    },
                    "indexShares": {
                        "type": "number",
                        "description": "Indicates the number of shares used for the index calculation.",
                        "format": "double"
                    },
                    "freeFloatFactor": {
                        "type": "number",
                        "description": "For an index calculated on a free float basis, this factor adjusts the number of outstanding shares to determine the free float number of shares.",
                        "format": "double"
                    },
                    "weight": {
                        "type": "number",
                        "description": "The weight of the constituent in the index provided as a percentage value. This means the value is already scaled to a percentage format and does not need further conversion. For example, a value of 5.25 represents 5.25%.",
                        "format": "double"
                    }
                },
                "description": "List of index components"
            },
            "IndexCompositionIndexCompositionV1": {
                "type": "object",
                "properties": {
                    "divisor": {
                        "type": "number",
                        "description": "The Divisor serves to normalize the index value, making it more manageable and easily comprehensible. In the creation of an index, whether price or market cap weighted, the sum of the prices of all index constituents forms the initial index value. To render this value more user-friendly and memorable, the divisor is applied, adjusting the sum to a round figure. Example: In an index with an initial value of $47'600 obtained by summing the prices of its constituents, the divisor of 476 could be applied to normalize the value to 100, making it more manageable and easier to track.",
                        "format": "double"
                    },
                    "numberOfConstituents": {
                        "type": "integer",
                        "description": "This field provides the number of constituents provided in the 'Constituents' list.",
                        "format": "int32"
                    },
                    "constituents": {
                        "type": "array",
                        "description": "List of index components",
                        "items": {
                            "$ref": "#/components/schemas/IndexCompositionConstituentsItemV1"
                        }
                    }
                }
            },
            "IndexCompositionInstrumentsDataV1": {
                "type": "object",
                "properties": {
                    "instruments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IndexCompositionInstrumentsItemV1"
                        }
                    }
                }
            },
            "IndexCompositionInstrumentsItemV1": {
                "required": [
                    "lookupStatus",
                    "requestedId",
                    "requestedScheme"
                ],
                "type": "object",
                "properties": {
                    "requestedId": {
                        "type": "string",
                        "description": "The requested entity id used in the request"
                    },
                    "requestedScheme": {
                        "type": "string",
                        "description": "The requested scheme used in the request",
                        "enum": [
                            "ISIN",
                            "SEDOL",
                            "CUSIP",
                            "CINS",
                            "WKN",
                            "VALOR",
                            "COMMONCODE",
                            "TICKER_BC"
                        ]
                    },
                    "lookupStatus": {
                        "type": "string",
                        "description": "Status of the response",
                        "enum": [
                            "FOUND",
                            "NOT_FOUND",
                            "NOT_AUTHORIZED",
                            "NOT_VALID_ID"
                        ]
                    },
                    "lookup": {
                        "$ref": "#/components/schemas/IndexCompositionLookupV1"
                    },
                    "referenceData": {
                        "$ref": "#/components/schemas/IndexCompositionReferenceDataV1"
                    }
                }
            },
            "IndexCompositionLookupV1": {
                "required": [
                    "instrumentShortName",
                    "instrumentStatus",
                    "instrumentType"
                ],
                "type": "object",
                "properties": {
                    "instrumentShortName": {
                        "type": "string",
                        "description": "Instrument short name with up to 19 characters."
                    },
                    "instrumentStatus": {
                        "type": "string",
                        "description": "Status indicating whether an instrument is active or not. Provided that the instrument is still active, this may include further information such as \"in default\" or \"In liquidation/dissolution\"",
                        "enum": [
                            "NOT_YET_ISSUED",
                            "INACTIVE",
                            "IN_LIQUIDATION_DISSOLUTION",
                            "ACTIVE",
                            "IN_DEFAULT",
                            "OTHER"
                        ]
                    },
                    "instrumentType": {
                        "type": "string",
                        "description": "Instrument classification allocated by SIX Financial Information. The Instrument Type embodies a more granular categorization compared to the Security Type.",
                        "enum": [
                            "BOND",
                            "EQUITY",
                            "MTN",
                            "INSURANCE_POLICY",
                            "STRUCTURED_PRODUCT",
                            "TRUST_SHARE",
                            "INTEREST_RATE",
                            "RIGHT",
                            "CURRENCY",
                            "TRUST_CERT_FOUNDATION",
                            "TRUST_CERT_SHARE",
                            "SAVINGS_BOOK",
                            "REPO",
                            "FORWARD_TRANSACTION",
                            "COMBINED_TRANSACTION",
                            "FRN",
                            "LEVERAGED_PRODUCT",
                            "REPO_BASKET",
                            "ETD",
                            "FUTURE",
                            "MONEY_MARKET_INSTRUMENT",
                            "COMMODITY",
                            "CONVERTIBLE_BOND",
                            "INDEX",
                            "OPTION",
                            "TECHNICAL_CURRENCY",
                            "OTHER"
                        ]
                    }
                }
            },
            "IndexCompositionReferenceDataV1": {
                "type": "object",
                "properties": {
                    "indexComposition": {
                        "$ref": "#/components/schemas/IndexCompositionIndexCompositionV1"
                    }
                }
            },
            "IndexCompositionTopLevelV1": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/IndexCompositionInstrumentsDataV1"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorDetail"
                        }
                    },
                    "extensions": {
                        "$ref": "#/components/schemas/ExtensionsData"
                    }
                }
            }
        }
    }
}