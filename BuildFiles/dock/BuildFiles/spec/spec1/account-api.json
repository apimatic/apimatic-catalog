{
    "swagger": "2.0",
    "x-stoplight": {
        "id": "d2xm41o1ro75u"
    },
    "info": {
        "description": "API documentation for microservice Account",
        "title": "Account API",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.7.1"
    },
    "paths": {
        "/accounts": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Displays all accounts registered on the API, based on filters and pagination. To list all available statuses use GET account/status, for account types use GET /accounts/types",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "List accounts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page of the current result set (e.g. 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Amount of data that should be returned (e.g. 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Attribute to order the list (e.g. 'id DESC, agency')",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/account.AccountResponsePage"
                        }
                    },
                    "204": {
                        "description": "Account not found"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Creates a new Account. To fill in the accountTypeId correctly, use GET /accounts/types to get the list of available account types, for statusId use GET /accounts/status to get an available status",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Create an account",
                "parameters": [
                    {
                        "description": "Object for persisting the account",
                        "name": "content",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.AccountPersist"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/account.AccountResponse"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/accounts/balances": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Displays all Balances registered on the API, based on filters and pagination.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "List balances",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page of the current result set (e.g. 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Amount of data that should be returned (e.g. 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Attribute to order the list (e.g. 'balance_type_id', 'account_id DESC', 'amount ASC', 'id DESC, created_at', 'updated_at')",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/balance.BalanceWithAccountResponsePage"
                        }
                    }
                }
            }
        },
        "/accounts/balances/types": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Displays all balances types registered on the API, based on filters and pagination.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "List balance types",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page of the current result set (e.g. 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Amount of data that should be returned (e.g. 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Attribute to order the list (e.g. 'name', 'created_at DESC', 'updated_at ASC', 'id DESC, description')",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/balance.BalanceTypeResponsePage"
                        }
                    }
                }
            }
        },
        "/accounts/balances/types/{id}": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Return Balance Type by identification",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Find balance type by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier for the balance type (e.g. 1)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/balance.BalanceTypeResponse"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/accounts/credit-limits/types": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Displays all credit limit types registered on the API, based on filters and pagination.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "List credit limit types",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page of the current result set (e.g. 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Amount of data that should be returned (e.g. 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Attribute to order the list (e.g. 'name', 'created_at DESC', 'updated_at ASC', 'id DESC, description')",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/creditlimit.TypeResponsePage"
                        }
                    }
                }
            }
        },
        "/accounts/credit-limits/types/{id}": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Return credit limit  Type by identification",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Find credit limit type by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The identifier for the credit limit type (e.g. 1)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/creditlimit.TypeResponse"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/accounts/status": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Displays all status registered on the API, based on filters and pagination.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "List account status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page of the current result set (e.g. 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Amount of data that should be returned (e.g. 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Attribute to order the list (e.g. 'eventType', 'eventType DESC', 'status ASC', 'id DESC, status')",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/account.StatusResponsePage"
                        }
                    },
                    "204": {
                        "description": "Account not found"
                    }
                }
            }
        },
        "/accounts/status/{id}": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Return Status by identification",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Find status by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier for the status (e.g. 1)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/account.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/accounts/types": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Displays all Account Types registered on the API, based on filters and pagination.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "List account types",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page of the current result set (e.g. 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Amount of data that should be returned (e.g. 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Attribute to order the list (e.g. 'name', 'description DESC', 'created_at ASC', 'id DESC, updated_at')",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/account.AccountTypeResponsePage"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/accounts/types/{id}": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Return Account Type by identification",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Find account type by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier for the account type (e.g. 1)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/account.AccountTypeResponse"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/accounts/{id}": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Return Account by identification",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Find account by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier UUID for the account (e.g. ac8954b3-21c1-468f-86f8-56c91edd4a34)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/account.AccountResponse"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Updates an account",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Update an account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier UUID for the account (e.g. ac8954b3-21c1-468f-86f8-56c91edd4a34)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object for updating a account",
                        "name": "content",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.AccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "204": {
                        "description": "account not found"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/accounts/{id}/balances": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Displays all Balances of this account registered on the API, based on filters and pagination.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "List balances of an account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier UUID for the account (e.g. ac8954b3-21c1-468f-86f8-56c91edd4a34)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page of the current result set (e.g. 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Amount of data that should be returned (e.g. 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Attribute to order the list (e.g. 'amount', 'balance_type_id ASC', 'id DESC, 'updated_at')",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/balance.BalanceResponsePage"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Creates a new Balance to account",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Create a balance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier UUID for the account (e.g. ac8954b3-21c1-468f-86f8-56c91edd4a34)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object for persisting the balance",
                        "name": "content",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/balance.BalancePersist"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/balance.BalanceResponse"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/accounts/{id}/balances/{balanceID}": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Return Balance by identification",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Find balance of an account by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier UUID for the account (e.g. ac8954b3-21c1-468f-86f8-56c91edd4a34)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The identifier for the balance (e.g. 1)",
                        "name": "balanceID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/balance.BalanceResponse"
                        }
                    },
                    "404": {
                        "description": "No Found"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Updates a balance",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Update a balance available",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier UUID for the account (e.g. ac8954b3-21c1-468f-86f8-56c91edd4a34)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The identifier for the balance (e.g. 1)",
                        "name": "balanceID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object for updating a balance",
                        "name": "content",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/balance.UpdateAmount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/accounts/{id}/credit-limits": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Displays all credit limit types registered on the API, based on filters and pagination.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "List all credit limit of an account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier UUID for the account (e.g. ac8954b3-21c1-468f-86f8-56c91edd4a34)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page of the current result set (e.g. 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Amount of data that should be returned (e.g. 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Attribute to order the list (e.g. 'name', 'created_at DESC', 'updated_at ASC', 'id DESC, description')",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/creditlimit.ResponsePage"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Create a new credit limit to account",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Create a new credit limit to account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier UUID for the account (e.g. ac8954b3-21c1-468f-86f8-56c91edd4a34)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object for persisting the credit limit",
                        "name": "content",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/creditlimit.Persist"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/creditlimit.Response"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/accounts/{id}/credit-limits/{creditLimitId}": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Return credit limit  by identification",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Find credit limits of an account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier UUID for the account (e.g. ac8954b3-21c1-468f-86f8-56c91edd4a34)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Credit Limit Identification (e.g. 1)",
                        "name": "creditLimitId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/creditlimit.Response"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Update credit limit",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Update credit limit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier UUID for the account (e.g. ac8954b3-21c1-468f-86f8-56c91edd4a34)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Credit Limit Identification (e.g. 1)",
                        "name": "creditLimitId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object for persisting the credit limit",
                        "name": "content",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/creditlimit.UpdatePersist"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/creditlimit.Response"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/accounts/{id}/due-dates": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Displays the due dates of the account",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "List the due dates of an account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier UUID for the account (e.g. ac8954b3-21c1-468f-86f8-56c91edd4a34)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/account.DueDateResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "account.AccountPersist": {
            "type": "object",
            "required": [
                "accountTypeId",
                "statusId"
            ],
            "properties": {
                "accountTypeId": {
                    "description": "Account type. Must exist as an account type resource",
                    "type": "integer",
                    "example": 1
                },
                "agency": {
                    "description": "Agency number. The maxLength of this field is 32767",
                    "type": "integer",
                    "example": 123
                },
                "bank": {
                    "description": "Bank number. The maxLength of this field is 32767",
                    "type": "integer",
                    "example": 123
                },
                "dueDay": {
                    "description": "Due day for account",
                    "type": "integer",
                    "example": 10
                },
                "metadata": {
                    "description": "metadata object",
                    "type": "string",
                    "example": "{\"key\": value}"
                },
                "number": {
                    "description": "Account number. The maxLength of this field is 2147483647",
                    "type": "integer",
                    "example": 1234
                },
                "statusId": {
                    "description": "Account status. Must exist as a status resource",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "account.AccountRequest": {
            "type": "object",
            "properties": {
                "agency": {
                    "description": "Agency number. The maxLength of this field is 32767",
                    "type": "integer",
                    "example": 123
                },
                "bank": {
                    "description": "Bank number. The maxLength of this field is 32767",
                    "type": "integer",
                    "example": 123
                },
                "dueDay": {
                    "description": "Due day for account. Day of month",
                    "type": "integer",
                    "example": 10
                },
                "metadata": {
                    "description": "metadata object",
                    "type": "string",
                    "example": "{\"key\": value}"
                },
                "number": {
                    "description": "Account number. The maxLength of this field is 2147483647",
                    "type": "integer",
                    "example": 1234
                },
                "statusId": {
                    "description": "Account status. Must exist as a status resource",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "account.AccountResponse": {
            "type": "object",
            "properties": {
                "accountType": {
                    "description": "Account type",
                    "type": "object",
                    "$ref": "#/definitions/account.AccountTypeResponse"
                },
                "agency": {
                    "description": "Agency number",
                    "type": "integer",
                    "example": 123
                },
                "bank": {
                    "description": "Account bank",
                    "type": "integer",
                    "example": 12
                },
                "dueDay": {
                    "description": "Due day for account",
                    "type": "integer",
                    "example": 10
                },
                "id": {
                    "description": "Account  UUID",
                    "type": "string",
                    "example": "ac8954b3-21c1-468f-86f8-56c91edd4a34"
                },
                "metadata": {
                    "description": "Metadata object",
                    "type": "string"
                },
                "number": {
                    "description": "Account number",
                    "type": "integer",
                    "example": 1234
                },
                "status": {
                    "description": "Account status",
                    "type": "object",
                    "$ref": "#/definitions/account.StatusResponse"
                }
            }
        },
        "account.AccountResponsePage": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/account.AccountResponse"
                    }
                }
            }
        },
        "account.AccountTypePersist": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "description": "Status description. The maxLength of this field is 100",
                    "type": "string"
                },
                "name": {
                    "description": "Status Name. The available options are CREDIT, PREPAID and DEBIT",
                    "type": "string",
                    "example": "CREDIT"
                }
            }
        },
        "account.AccountTypeResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Account type description",
                    "type": "string",
                    "example": "CREDIT Account"
                },
                "id": {
                    "description": "Account type id",
                    "type": "integer",
                    "example": 1234
                },
                "name": {
                    "description": "Account type name",
                    "type": "string",
                    "example": "CREDIT"
                }
            }
        },
        "account.AccountTypeResponsePage": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/account.AccountTypeResponse"
                    }
                }
            }
        },
        "account.DueDateResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "Due Date creation time",
                    "type": "string",
                    "example": "YYYY-MM-DDThh:mm:ss+00:00"
                },
                "id": {
                    "description": "Account identification code",
                    "type": "string",
                    "example": "ac8954b3-21c1-468f-86f8-56c91edd4a34"
                },
                "nextDefaultDate": {
                    "description": "Next default date",
                    "type": "string",
                    "example": "YYYY-MM-DDThh:mm:ss+00:00"
                },
                "nextRealDate": {
                    "description": "Next real date",
                    "type": "string",
                    "example": "YYYY-MM-DDThh:mm:ss+00:00"
                },
                "postNextDefaultDate": {
                    "type": "string",
                    "example": "YYYY-MM-DDThh:mm:ss+00:00"
                },
                "postNextRealDate": {
                    "type": "string",
                    "example": "YYYY-MM-DDThh:mm:ss+00:00"
                },
                "previousDefaultDate": {
                    "description": "Previous default date",
                    "type": "string",
                    "example": "YYYY-MM-DDThh:mm:ss+00:00"
                },
                "previousRealDate": {
                    "description": "Previous real date",
                    "type": "string",
                    "example": "YYYY-MM-DDThh:mm:ss+00:00"
                },
                "updatedAt": {
                    "description": "Due Date last update",
                    "type": "string",
                    "example": "YYYY-MM-DDThh:mm:ss+00:00"
                }
            }
        },
        "account.StatusPersist": {
            "type": "object",
            "required": [
                "description",
                "isActive",
                "name",
                "reversive"
            ],
            "properties": {
                "description": {
                    "description": "Status description. The maxLength of this field is 100",
                    "type": "string",
                    "example": "this is the account description status"
                },
                "isActive": {
                    "description": "True: account status is active, False: account status is inactive",
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "description": "Status name. The maxLength of this field is 20",
                    "type": "string",
                    "example": "NORMAL"
                },
                "reversive": {
                    "description": "False: The state can be changed to another, True: Cannot be changed to another state",
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "account.StatusResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Status description",
                    "type": "string",
                    "example": "1234"
                },
                "id": {
                    "description": "Status id",
                    "type": "integer",
                    "example": 1234
                },
                "isActive": {
                    "description": "True: account status is active, False: account status is inactive",
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "description": "Status name",
                    "type": "string",
                    "example": "1234"
                },
                "reversive": {
                    "description": "False: The state can be changed to another, True: Cannot be changed to another state",
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "account.StatusResponsePage": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/account.StatusResponse"
                    }
                }
            }
        },
        "account.StatusUpdate": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Status description. The maxLength of this field is 100",
                    "type": "string",
                    "example": "this is the account description status"
                },
                "isActive": {
                    "description": "True: account status is active, False: account status is inactive",
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "description": "Status name. The maxLength of this field is 20",
                    "type": "string",
                    "example": "NORMAL"
                },
                "reversive": {
                    "description": "False: The state can be changed to another, True: Cannot be changed to another state",
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "balance.BalancePersist": {
            "type": "object",
            "required": [
                "balanceTypeId",
                "currency"
            ],
            "properties": {
                "balanceTypeId": {
                    "description": "Balance type. Must exist as a balance type resource",
                    "type": "integer",
                    "example": 1
                },
                "currency": {
                    "description": "Must be a currency code (ISO 4217)",
                    "type": "string",
                    "example": "986"
                }
            }
        },
        "balance.BalanceResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "Account amount",
                    "type": "number",
                    "example": 123.12
                },
                "balanceType": {
                    "description": "Balance type object",
                    "type": "object",
                    "$ref": "#/definitions/balance.BalanceTypeResponse"
                },
                "currency": {
                    "description": "Country code (ISO 4217)",
                    "type": "string",
                    "example": "986"
                },
                "id": {
                    "description": "Balance ID",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "balance.BalanceResponsePage": {
            "type": "object",
            "properties": {
                "limit": {
                    "description": "Amount of records displayed per page",
                    "type": "integer",
                    "example": 20
                },
                "nextPage": {
                    "description": "The position of the next page",
                    "type": "integer",
                    "example": 7
                },
                "offset": {
                    "description": "Records skipped to display the current page",
                    "type": "integer",
                    "example": 20
                },
                "page": {
                    "description": "The position of the current page",
                    "type": "integer",
                    "example": 1
                },
                "prevPage": {
                    "description": "The position of the previous page",
                    "type": "integer",
                    "example": 5
                },
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/balance.BalanceResponse"
                    }
                },
                "totalPages": {
                    "description": "Total amount of pages",
                    "type": "integer",
                    "example": 50
                },
                "totalRecords": {
                    "description": "Total amount of records within the given query",
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "balance.BalanceTypePersist": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "description": "balance type description. The maxLength of this field is 100",
                    "type": "string",
                    "example": "this is the balance type description"
                },
                "name": {
                    "description": "Balance type name. The maxLength of this field is 20",
                    "type": "string",
                    "example": "Balance type name"
                }
            }
        },
        "balance.BalanceTypeResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Balance type description",
                    "type": "string",
                    "example": "This is the balance type description"
                },
                "id": {
                    "description": "Balance Type ID",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "Balance type name",
                    "type": "string",
                    "example": "Balance type name"
                }
            }
        },
        "balance.BalanceTypeResponsePage": {
            "type": "object",
            "properties": {
                "limit": {
                    "description": "Amount of records displayed per page",
                    "type": "integer",
                    "example": 20
                },
                "nextPage": {
                    "description": "The position of the next page",
                    "type": "integer",
                    "example": 7
                },
                "offset": {
                    "description": "Records skipped to display the current page",
                    "type": "integer",
                    "example": 20
                },
                "page": {
                    "description": "The position of the current page",
                    "type": "integer",
                    "example": 1
                },
                "prevPage": {
                    "description": "The position of the previous page",
                    "type": "integer",
                    "example": 5
                },
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/balance.BalanceTypeResponse"
                    }
                },
                "totalPages": {
                    "description": "Total amount of pages",
                    "type": "integer",
                    "example": 50
                },
                "totalRecords": {
                    "description": "Total amount of records within the given query",
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "balance.BalanceWithAccountResponse": {
            "type": "object",
            "properties": {
                "account": {
                    "description": "Account object",
                    "type": "object",
                    "$ref": "#/definitions/account.AccountResponse"
                },
                "amount": {
                    "description": "Account amount",
                    "type": "number",
                    "example": 123.12
                },
                "balanceType": {
                    "description": "Balance type object",
                    "type": "object",
                    "$ref": "#/definitions/balance.BalanceTypeResponse"
                },
                "currency": {
                    "description": "Country code (ISO 4217)",
                    "type": "string",
                    "example": "986"
                },
                "id": {
                    "description": "Balance ID",
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "balance.BalanceWithAccountResponsePage": {
            "type": "object",
            "properties": {
                "limit": {
                    "description": "Amount of records displayed per page",
                    "type": "integer",
                    "example": 20
                },
                "nextPage": {
                    "description": "The position of the next page",
                    "type": "integer",
                    "example": 7
                },
                "offset": {
                    "description": "Records skipped to display the current page",
                    "type": "integer",
                    "example": 20
                },
                "page": {
                    "description": "The position of the current page",
                    "type": "integer",
                    "example": 1
                },
                "prevPage": {
                    "description": "The position of the previous page",
                    "type": "integer",
                    "example": 5
                },
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/balance.BalanceWithAccountResponse"
                    }
                },
                "totalPages": {
                    "description": "Total amount of pages",
                    "type": "integer",
                    "example": 50
                },
                "totalRecords": {
                    "description": "Total amount of records within the given query",
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "balance.UpdateAmount": {
            "type": "object",
            "required": [
                "amount"
            ],
            "properties": {
                "amount": {
                    "description": "Amount for account",
                    "type": "number",
                    "example": 123.12
                }
            }
        },
        "creditlimit.Persist": {
            "type": "object",
            "required": [
                "creditLimit",
                "creditTypeId",
                "currency",
                "maxCreditLimit",
                "minCreditLimit"
            ],
            "properties": {
                "creditLimit": {
                    "description": "Credit limit amount",
                    "type": "number",
                    "example": 123.12
                },
                "creditTypeId": {
                    "description": "Credit limit type",
                    "type": "integer",
                    "example": 1
                },
                "currency": {
                    "description": "Country code (ISO 4217)",
                    "type": "string",
                    "example": "986"
                },
                "maxCreditLimit": {
                    "description": "Maximum credit limit",
                    "type": "number",
                    "example": 1234.12
                },
                "minCreditLimit": {
                    "description": "Minimum credit limit",
                    "type": "number",
                    "example": 12.12
                }
            }
        },
        "creditlimit.Response": {
            "type": "object",
            "properties": {
                "accountId": {
                    "description": "Account UUID",
                    "type": "string",
                    "example": "ac8954b3-21c1-468f-86f8-56c91edd4a34"
                },
                "balanceAvailable": {
                    "description": "Amount available for account",
                    "type": "number",
                    "example": 123.12
                },
                "createdAt": {
                    "description": "Credit limit creation",
                    "type": "string",
                    "example": "YYYY-MM-DDThh:mm:ss+00:00"
                },
                "creditLimit": {
                    "description": "Credit limit amount",
                    "type": "number",
                    "example": 123.12
                },
                "creditLimitType": {
                    "description": "Credit type object",
                    "type": "object",
                    "$ref": "#/definitions/creditlimit.TypeResponse"
                },
                "currency": {
                    "description": "Country code (ISO 4217)",
                    "type": "string",
                    "example": "986"
                },
                "id": {
                    "description": "Credit limit ID",
                    "type": "integer",
                    "example": 1
                },
                "maxCreditLimit": {
                    "description": "Maximum credit limit",
                    "type": "number",
                    "example": 1234.12
                },
                "minCreditLimit": {
                    "description": "Minimum credit limit",
                    "type": "number",
                    "example": 12.12
                },
                "updatedAt": {
                    "description": "Last credit limit update",
                    "type": "string",
                    "example": "YYYY-MM-DDThh:mm:ss+00:00"
                }
            }
        },
        "creditlimit.ResponsePage": {
            "type": "object",
            "properties": {
                "limit": {
                    "description": "Amount of records displayed per page",
                    "type": "integer",
                    "example": 20
                },
                "nextPage": {
                    "description": "The position of the next page",
                    "type": "integer",
                    "example": 7
                },
                "offset": {
                    "description": "Records skipped to display the current page",
                    "type": "integer",
                    "example": 20
                },
                "page": {
                    "description": "The position of the current page",
                    "type": "integer",
                    "example": 1
                },
                "prevPage": {
                    "description": "The position of the previous page",
                    "type": "integer",
                    "example": 5
                },
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/creditlimit.Response"
                    }
                },
                "totalPages": {
                    "description": "Total amount of pages",
                    "type": "integer",
                    "example": 50
                },
                "totalRecords": {
                    "description": "Total amount of records within the given query",
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "creditlimit.TypePersist": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "description": "Credit type description. The maxLength of this field is 100",
                    "type": "string",
                    "example": "This is the credit type description"
                },
                "name": {
                    "description": "Credit type name. The maxLength of this field is 20",
                    "type": "string",
                    "example": "Credit type name"
                }
            }
        },
        "creditlimit.TypeResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "example": "YYYY-MM-DDThh:mm:ss+00:00"
                },
                "description": {
                    "description": "Credit type description. The maxLength of this field is 100",
                    "type": "string",
                    "example": "This is the credit type description"
                },
                "id": {
                    "description": "Credit type ID",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "Credit type name. The maxLength of this field is 20",
                    "type": "string",
                    "example": "Credit type name"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "YYYY-MM-DDThh:mm:ss+00:00"
                }
            }
        },
        "creditlimit.TypeResponsePage": {
            "type": "object",
            "properties": {
                "limit": {
                    "description": "Amount of records displayed per page",
                    "type": "integer",
                    "example": 20
                },
                "nextPage": {
                    "description": "The position of the next page",
                    "type": "integer",
                    "example": 7
                },
                "offset": {
                    "description": "Records skipped to display the current page",
                    "type": "integer",
                    "example": 20
                },
                "page": {
                    "description": "The position of the current page",
                    "type": "integer",
                    "example": 1
                },
                "prevPage": {
                    "description": "The position of the previous page",
                    "type": "integer",
                    "example": 5
                },
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/creditlimit.TypeResponse"
                    }
                },
                "totalPages": {
                    "description": "Total amount of pages",
                    "type": "integer",
                    "example": 50
                },
                "totalRecords": {
                    "description": "Total amount of records within the given query",
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "creditlimit.UpdateAvailablePersist": {
            "type": "object",
            "properties": {
                "balanceAvailable": {
                    "description": "Adjust the balance available",
                    "type": "number",
                    "example": 123.12
                }
            }
        },
        "creditlimit.UpdatePersist": {
            "type": "object",
            "properties": {
                "creditLimit": {
                    "description": "Credit limit amount",
                    "type": "number",
                    "example": 123.12
                },
                "currency": {
                    "description": "Country code (ISO 4217)",
                    "type": "string",
                    "example": "986"
                },
                "maxCreditLimit": {
                    "description": "Maximum credit limit",
                    "type": "number",
                    "example": 123.12
                },
                "minCreditLimit": {
                    "description": "Minimum credit limit",
                    "type": "number",
                    "example": 123.12
                }
            }
        },
        "dueday.Persist": {
            "type": "object",
            "properties": {
                "day": {
                    "description": "Day of month",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "dueday.Response": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "Due day creation date",
                    "type": "string",
                    "example": "YYYY-MM-DDThh:mm:ss+00:00"
                },
                "day": {
                    "description": "Day of month",
                    "type": "integer",
                    "example": 10
                },
                "updatedAt": {
                    "description": "Last due day update",
                    "type": "string",
                    "example": "YYYY-MM-DDThh:mm:ss+00:00"
                }
            }
        },
        "dueday.ResponsePage": {
            "type": "object",
            "properties": {
                "limit": {
                    "description": "Amount of records displayed per page",
                    "type": "integer",
                    "example": 20
                },
                "nextPage": {
                    "description": "The position of the next page",
                    "type": "integer",
                    "example": 7
                },
                "offset": {
                    "description": "Records skipped to display the current page",
                    "type": "integer",
                    "example": 20
                },
                "page": {
                    "description": "The position of the current page",
                    "type": "integer",
                    "example": 1
                },
                "prevPage": {
                    "description": "The position of the previous page",
                    "type": "integer",
                    "example": 5
                },
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dueday.Response"
                    }
                },
                "totalPages": {
                    "description": "Total amount of pages",
                    "type": "integer",
                    "example": 50
                },
                "totalRecords": {
                    "description": "Total amount of records within the given query",
                    "type": "integer",
                    "example": 100
                }
            }
        }
    },
    "securityDefinitions": {
        "issuerIdAuthentication": {
            "type": "apiKey",
            "name": "issuer_id",
            "in": "header"
        }
    }
}