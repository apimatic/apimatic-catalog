{
    "swagger": "2.0",
    "x-stoplight": {
        "id": "2e0i8n5g51wfp"
    },
    "info": {
        "description": "API documentation for product Service",
        "title": "Product API",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/v1",
    "paths": {
        "/product_types": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Displays all types of products  registered on the API, based on filters and pagination.\nproduct_type resources can be used to create (\"/product_types\" POST), update (\"/product_types/{id}\" PUT).",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Product Types"
                ],
                "summary": "List product types",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page of the current result set (e.g. 1, 2, 3...)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Amount of data that should be returned (e.g. 50, 100, 500, ...)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Attribute to order the list (e.g. 'eventType', 'eventType DESC', 'status ASC', 'id DESC, status')",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Name filter of product_type (e.g. 'PREPAID BLACK', 'CREDIT 123', ...)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Description filter of product_type  (e.g. 'Lorem Ipsum dolor sit amet', 'product description', ...)",
                        "name": "description",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product_type.ResponsePage"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/product_types/{id}": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Returns information for a product type",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Product Types"
                ],
                "summary": "Find product type by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier (UUID) for the product_type (e.g. ac8954b3-21c1-468f-86f8-56c91edd4a34, ...)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product_type.Response"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/products": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Displays all products registered on the API, based on filters and pagination.\nproduct resources can be used to create (\"/products\" POST), update (\"/products/{id}\" PUT).",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "List products",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page of the current result set (e.g. 1, 2, 3...)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Amount of data that should be returned (e.g. 10, 100, 500, ...)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Attribute to order the list (e.g. 'eventType', 'eventType DESC', 'status ASC', 'id DESC, status', ...)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Name filter of product  (e.g. 'eventType', 'eventType DESC', 'status ASC', 'id DESC, status', ...)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Description filter of product  (e.g. 'Lorem Ipsum dolor sit amet', 'product description', ...)",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bin filter of product. Bin has only 6 digits. (e.g. 123456, 654321, 012345, ...)",
                        "name": "bin",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Range Initial filter of product (e.g. 1, 2, 10, ...)",
                        "name": "rangeInitial",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Range Last filter of product  (e.g. 1, 2, 10, ...)",
                        "name": "rangeLast",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Find data by metadata. (eg.  {ExampleID: 1234} = ?metadata=%7B%22ExampleID%22%3A1234%7D, ...)",
                        "name": "metadata",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.ResponsePage"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Returns product information",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Find product by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier (UUID) for the product  (e.g. ac8954b3-21c1-468f-86f8-56c91edd4a34, ...)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.Response"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        }
    },
    "definitions": {
        "product.Response": {
            "properties": {
                "artId": {
                    "description": "Identifier used by the printing company (Embossing)",
                    "type": "integer"
                },
                "bin": {
                    "description": "Product BIN with 6 digits",
                    "example": "123456, 654321",
                    "type": "string"
                },
                "brand": {
                    "description": "Product brand type",
                    "example": "CABAL, ELO, GOOD CARD, MASTERCARD, PRIVATE LABEL, VISA ...",
                    "type": "string"
                },
                "description": {
                    "description": "Product description",
                    "example": "This product is used for...",
                    "type": "string"
                },
                "embossingSetupId": {
                    "description": "UUID used by embossing setup",
                    "example": "2a40a62e-c351-4197-8a7e-16b48356538e, ...",
                    "type": "string"
                },
                "expirationDateFormat": {
                    "description": "Used in the generation of CVV I. The formart expected is yyMM",
                    "example": "2001, 2103, 2112 ...",
                    "type": "string"
                },
                "id": {
                    "description": "Product UUID",
                    "example": "ac8954b3-21c1-468f-86f8-56c91edd4a34",
                    "type": "string"
                },
                "metadata": {
                    "description": "The metadata contains an object whose content can be anything",
                    "example": "{...}",
                    "type": "string"
                },
                "name": {
                    "description": "Product name",
                    "example": "Credit ABC",
                    "type": "string"
                },
                "productTypeId": {
                    "description": "Product type UUID",
                    "example": "2a40a62e-c351-4197-8a7e-16b48356538e, ...",
                    "type": "string"
                },
                "rangeInitial": {
                    "description": "Product initial parte of the range",
                    "type": "integer"
                },
                "rangeLast": {
                    "description": "Product final part of the range",
                    "type": "integer"
                },
                "secondaryExpirationDateFormat": {
                    "description": "Used in the generation of CVV II. The formart expected is yyMM",
                    "example": "2001, 2103, 2112 ...",
                    "type": "string"
                },
                "serviceCode": {
                    "description": "International service code table",
                    "example": "206, 101, 521 ...",
                    "type": "string"
                },
                "size": {
                    "description": "Product size (?)",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "product.ResponsePage": {
            "properties": {
                "limit": {
                    "description": "Amount of records displayed per page",
                    "type": "integer"
                },
                "nextPage": {
                    "description": "The position of the next page",
                    "type": "integer"
                },
                "offset": {
                    "description": "Records skipped to display the current page",
                    "type": "integer"
                },
                "page": {
                    "description": "The position of the current page",
                    "type": "integer"
                },
                "prevPage": {
                    "description": "The position of the previous page",
                    "type": "integer"
                },
                "records": {
                    "items": {
                        "$ref": "#/definitions/product.Response"
                    },
                    "type": "array"
                },
                "totalPages": {
                    "description": "Total amount of pages",
                    "type": "integer"
                },
                "totalRecords": {
                    "description": "Total amount of records within the given query",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "product_type.Response": {
            "properties": {
                "brandType": {
                    "description": "Product type brand",
                    "example": "CABAL, ELO, GOOD CARD, MASTERCARD, PRIVATE LABEL, VISA ...",
                    "type": "string"
                },
                "description": {
                    "description": "Product type description",
                    "example": "This product type is used for...",
                    "type": "string"
                },
                "id": {
                    "description": "Product type UUID",
                    "example": "ac8954b3-21c1-468f-86f8-56c91edd4a34",
                    "type": "string"
                },
                "name": {
                    "description": "Product type name",
                    "example": "Gift Card X",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "product_type.ResponsePage": {
            "properties": {
                "limit": {
                    "description": "Amount of records displayed per page",
                    "type": "integer"
                },
                "nextPage": {
                    "description": "The position of the next page",
                    "type": "integer"
                },
                "offset": {
                    "description": "Records skipped to display the current page",
                    "type": "integer"
                },
                "page": {
                    "description": "The position of the current page",
                    "type": "integer"
                },
                "prevPage": {
                    "description": "The position of the previous page",
                    "type": "integer"
                },
                "records": {
                    "items": {
                        "$ref": "#/definitions/product_type.Response"
                    },
                    "type": "array"
                },
                "totalPages": {
                    "description": "Total amount of pages",
                    "type": "integer"
                },
                "totalRecords": {
                    "description": "Total amount of records within the given query",
                    "type": "integer"
                }
            },
            "type": "object"
        }
    },
    "securityDefinitions": {
        "issuerIdAuthentication": {
            "type": "apiKey",
            "name": "issuer_id",
            "in": "header"
        }
    }
}