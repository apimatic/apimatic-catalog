openapi: 3.0.0
x-swagstar:
  category: Customer Management:Customer Reference Data Mgmt
x-generation-date: March 6, 2019 11:54 AM
x-workspaceId: qhAvZakoARiuseau8
externalDocs:
  description: API Docs
  url: https://developer.nab.com.au
info:
  title: Customer
  description: Retrieve personal information on an authorised NAB customer
  version: v1.2
  contact:
    name: Nab OB API Team
    url: https://developer.nab.com.au
    email: nabapi@nab.com.au
tags:
  - name: Customer
    description: Retrieve personal information on an authorised NAB customer
paths:
  /cds-au/v1/common/customer:
    x-swagstar:
      name: Customer
    get:
      summary: Get Customer
      description: Obtain basic information on the customer that has authorised the
        current session
      operationId: getCustomer
      x-swagstar:
        apiAuth: jwt
        apiTarget:
          - service
          - openbank
        plugins:
          route-rate-limiting:
            second: 10
          openid-connect-v2:
            scopes_required:
              - common:customer.basic:read
            audience_required:
              - obapi
            acr:
              - urn:cds.au:cdr:2
            tls_bound_token: true
          aws-lambda:
            function_name: "{{SWAGSTAR_ENV_customerApiGetCustomerLambdaName}}"
            timeout: 25000
            keepalive: 25000
      x-scopes:
        - common_basic_customer
      tags:
        - Common APIs
        - Customer
      responses:
        "200":
          description: Request completed successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCommonCustomer"
        "400":
          description: Request has malformed, missing or non-compliant JSON body or URL
            parameters.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorList"
        "401":
          description: Authorization header missing or invalid token.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorList"
        "403":
          description: Token has incorrect scope or a security policy was violated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorList"
        "429":
          description: The operation was refused as too many requests have been made
            within a certain timeframe.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorList"
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorList"
        "503":
          description: Service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorList"
      x-version: "1"
  /cds-au/v1/common/customer/detail:
    get:
      description: Retrieve customer detail
      operationId: GetCustomerDetails
      parameters:
        - description: Version of the API end point requested by the client. Must be
            set to a positive integer. The data holder should respond with the highest
            supported version between [x-min-v](#request-headers) and [x-v](#request-headers).
            If the value of [x-min-v](#request-headers) is equal to or higher than the
            value of [x-v](#request-headers) then the [x-min-v](#request-headers) header
            should be treated as absent. If all versions requested are not supported
            then the data holder should respond with a 406 Not Acceptable. See [HTTP
            Headers](#request-headers)
          in: header
          name: x-v
          required: true
          schema:
            type: string
        - description: Minimum version of the API end point requested by the client.
            Must be set to a positive integer if provided. The data holder should respond
            with the highest supported version between [x-min-v](#request-headers) and
            [x-v](#request-headers). If all versions requested are not supported then
            the data holder should respond with a 406 Not Acceptable.
          in: header
          name: x-min-v
          schema:
            type: string
        - description: An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as
            a correlation id. If provided, the data holder must play back this value
            in the x-fapi-interaction-id response header. If not provided a [RFC4122]
            UUID value is required to be provided in the response header to track the
            interaction.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: The time when the customer last logged in to the data recipient.
            Required for all resource calls (customer present and unattended). Not to
            be included for unauthenticated calls.
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The customer's original IP address if the customer is currently
            logged in to the data recipient. The presence of this header indicates that
            the API is being called in a customer present context. Not to be included
            for unauthenticated calls.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: The customer's original standard http headers Base64 encoded,
            including the original User Agent header, if the customer is currently logged
            in to the data recipient. Mandatory for customer present calls. Not required
            for unattended or unauthenticated calls.
          in: header
          name: x-cds-client-headers
          schema:
            type: string
      tags:
        - Common APIs
        - Customer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCommonCustomerDetail"
          description: Success The API service call completed successfully
          headers:
            x-v:
              schema:
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Request has malformed, missing or non-compliant JSON body or URL
            parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Authorization header missing or invalid token.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Token has incorrect scope or a security policy was violated.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: The request was well formed but was unable to be processed due to
            business logic specific to the request
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                type: integer
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Something went wrong.
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Service is currently unavailable.
        "504":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Server Timeout
      summary: Get Customer Detail
      x-swagstar:
        apiAuth: jwt
        apiTarget:
          - service
          - openbank
        plugins:
          openid-connect-v2:
            acr:
              - urn:cds.au:cdr:2
            tls_bound_token: true
            scopes_required:
              - common:customer.detail:read
            audience_required:
              - obapi
          route-rate-limiting:
            second: 10
    x-swagstar:
      name: getCustomerDetail
servers:
  - url: https://openbank-secure.api.nab.com.au
components:
  schemas:
    ApiError:
      description: Error response.
      properties:
        errorId:
          type: string
        message:
          type: string
        details:
          description: Additional details for the error.
          items:
            $ref: "#/components/schemas/ErrorDetails"
          type: array
      required:
        - errorId
        - message
      type: object
    ErrorResponse:
      properties:
        errors:
          description: Additional details for the error. Mandatory for client side
            4xx errors.
          items:
            $ref: "#/components/schemas/ErrorDetails"
          type: array
      type: object
    ErrorDetails:
      properties:
        code:
          description: holds an end point specific error code
          example: error-code
          type: string
        title:
          description: holds a human readable label of the error that is constant
            per code
          example: something went wrong
          type: string
        detail:
          description: holds a human readable description of this specific error
          example: something went wrong somewhere
          type: string
        meta:
          description: holds additional end point specific data relevant to the error
          properties: {}
          type: object
      type: object
    ResponseCommonCustomer:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: object
          required:
            - customerUType
          properties:
            customerUType:
              type: string
              description: The type of customer object that is present
              enum:
                - person
                - organisation
            person:
              $ref: "#/components/schemas/CommonPerson"
            organisation:
              $ref: "#/components/schemas/CommonOrganisation"
        links:
          $ref: "#/components/schemas/Links"
        meta:
          $ref: "#/components/schemas/Meta"
    ResponseCommonCustomerDetail:
      type: object
      required:
        - data
        - links
        - meta
      properties:
        data:
          type: object
          required:
            - customerUType
          properties:
            customerUType:
              type: string
              description: The type of customer object that is present
              enum:
                - person
                - organisation
            person:
              $ref: "#/components/schemas/CommonPersonDetail"
            organisation:
              $ref: "#/components/schemas/CommonOrganisationDetail"
        links:
          $ref: "#/components/schemas/Links"
        meta:
          $ref: "#/components/schemas/Meta"
    ErrorList:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - title
              - detail
            properties:
              code:
                type: string
                description: The code of the error
              title:
                type: string
                description: A displayable title of the error type
              detail:
                type: string
                description: Detail of the error
              meta:
                type: object
                description: Optional additional data for specific error types
    CommonPerson:
      type: object
      required:
        - lastUpdateTime
        - lastName
        - middleNames
      properties:
        lastUpdateTime:
          type: string
          description: The date and time that this record was last updated by the
            customer. If no update has occurred then this date should reflect
            the initial creation date for the data
          format: DateTimeString
        firstName:
          type: string
          description: For people with single names this field need not be present.  The
            single name should be in the lastName field
        lastName:
          type: string
          description: For people with single names the single name should be in this field
        middleNames:
          type: array
          description: Field is mandatory but array may be empty
          items:
            type: string
        prefix:
          type: string
          description: Also known as title or salutation.  The prefix to the name (e.g.
            Mr, Mrs, Ms, Miss, Sir, etc)
        suffix:
          type: string
          description: Used for a trailing suffix to the name (e.g. Jr)
        occupationCode:
          type: string
          description: Value is a valid [ANZCO v1.2](http://www.abs.gov.au/ANZSCO)
            Standard Occupation classification.
    CommonPersonDetail:
      allOf:
        - $ref: "#/components/schemas/CommonPerson"
        - type: object
          required:
            - phoneNumbers
            - emailAddresses
            - physicalAddresses
          properties:
            phoneNumbers:
              type: array
              description: At least one record is required
              items:
                $ref: "#/components/schemas/CommonPhoneNumber"
            emailAddresses:
              type: array
              description: May be empty
              items:
                $ref: "#/components/schemas/CommonEmailAddress"
            physicalAddresses:
              type: array
              description: Must contain at least one address. One and only one address may
                have the purpose of REGISTERED. Zero or one, and no more than
                one, record may have the purpose of MAIL. If zero then the
                REGISTERED address is to be used for mail
              items:
                $ref: "#/components/schemas/CommonPhysicalAddressWithPurpose"
    CommonOrganisation:
      type: object
      required:
        - lastUpdateTime
        - agentLastName
        - agentRole
        - businessName
        - organisationType
      properties:
        lastUpdateTime:
          type: string
          description: The date and time that this record was last updated by the
            customer. If no update has occurred then this date should reflect
            the initial creation date for the data
          format: DateTimeString
        agentFirstName:
          type: string
          description: The first name of the individual providing access on behalf of the
            organisation. For people with single names this field need not be
            present.  The single name should be in the lastName field
        agentLastName:
          type: string
          description: The last name of the individual providing access on behalf of the
            organisation. For people with single names the single name should be
            in this field
        agentRole:
          type: string
          description: The role of the individual identified as the agent who is providing
            authorisation.  Expected to be used for display.  Default to
            “Unspecified” if the role is not known
        businessName:
          type: string
          description: Name of the organisation
        legalName:
          type: string
          description: Legal name, if different to the business name
        shortName:
          type: string
          description: Short name used for communication, if  different to the business name
        abn:
          type: string
          description: Australian Business Number for the organisation
        acn:
          type: string
          description: Australian Company Number for the organisation. Required only if an
            ACN is applicable for the organisation type
        isACNCRegistered:
          type: boolean
          description: True if registered with the ACNC.  False if not. Absent or null if
            not confirmed.
        industryCode:
          type: string
          description: "[ANZSIC (2006)](http://www.abs.gov.au/anzsic) code for the
            organisation."
        organisationType:
          type: string
          description: Legal organisation type
          enum:
            - SOLE_TRADER
            - COMPANY
            - PARTNERSHIP
            - TRUST
            - GOVERNMENT_ENTITY
            - OTHER
        registeredCountry:
          type: string
          description: Enumeration with values from ISO 3166 Alpha-3 country
            codes.  Assumed to be AUS if absent
        establishmentDate:
          type: string
          description: The date the organisation described was established
          format: DateString
    CommonOrganisationDetail:
      allOf:
        - $ref: "#/components/schemas/CommonOrganisation"
        - type: object
          required:
            - physicalAddresses
          properties:
            physicalAddresses:
              type: array
              description: Must contain at least one address. One and only one address may
                have the purpose of REGISTERED. Zero or one, and no more than
                one, record may have the purpose of MAIL. If zero then the
                REGISTERED address is to be used for mail
              items:
                $ref: "#/components/schemas/CommonPhysicalAddressWithPurpose"
    CommonPhoneNumber:
      type: object
      required:
        - purpose
        - number
        - fullNumber
      properties:
        isPreferred:
          type: boolean
          description: Required to be true for one and only one entry to indicate the
            preferred phone number.  Assumed to be 'false' if not present
        purpose:
          type: string
          description: The purpose of the number as specified by the customer
          enum:
            - MOBILE
            - HOME
            - WORK
            - OTHER
            - INTERNATIONAL
            - UNSPECIFIED
        countryCode:
          type: string
          description: If absent, assumed to be Australia (+61). The + should be included
        areaCode:
          type: string
          description: Required for non Mobile Phones, if field is present and refers to
            Australian code - the leading 0 should be omitted.
        number:
          type: string
          description: The actual phone number, with leading zeros as appropriate
        extension:
          type: string
          description: An extension number (if applicable)
        fullNumber:
          type: string
          description: Fully formatted phone number with country code, area code, number
            and extension incorporated. Formatted according to section 5.1.4. of
            RFC 3966
    CommonEmailAddress:
      type: object
      required:
        - isPreferred
        - purpose
        - address
      properties:
        isPreferred:
          type: boolean
          description: Required for one and only one email record in the collection.
            Denotes the default email address
        purpose:
          type: string
          description: The purpose for the email, as specified by the customer (Enumeration)
          enum:
            - WORK
            - HOME
            - OTHER
            - UNSPECIFIED
        address:
          type: string
          description: A correctly formatted email address, as defined by the addr_spec
            format in RFC_5322
    CommonPhysicalAddressWithPurpose:
      allOf:
        - type: object
          required:
            - purpose
          properties:
            purpose:
              type: string
              description: Enumeration of values indicating the purpose of the physical
                address
              enum:
                - REGISTERED
                - MAIL
                - PHYSICAL
                - WORK
                - OTHER
        - $ref: "#/components/schemas/CommonPhysicalAddress"
    CommonPhysicalAddress:
      type: object
      required:
        - addressUType
      properties:
        addressUType:
          type: string
          description: The type of address object present
          enum:
            - simple
            - paf
        simple:
          $ref: "#/components/schemas/CommonSimpleAddress"
        paf:
          $ref: "#/components/schemas/CommonPAFAddress"
    CommonSimpleAddress:
      type: object
      required:
        - addressLine1
        - city
        - state
      properties:
        mailingName:
          type: string
          description: Name of the individual or business formatted for inclusion in an
            address used for physical mail
        addressLine1:
          type: string
          description: First line of the standard address object
        addressLine2:
          type: string
          description: Second line of the standard address object
        addressLine3:
          type: string
          description: Third line of the standard address object
        postcode:
          type: string
          description: Mandatory for Australian addresses
        city:
          type: string
          description: Name of the city or locality
        state:
          type: string
          description: Free text if the country is not Australia. If country is Australia
            then must be one of the values defined by the ISO 3166:AU standard
        country:
          type: string
          description: A valid ISO 3166 Alpha-3 country code
    CommonPAFAddress:
      type: object
      description: Australian address formatted according to the file format defined
        by the [PAF file
        format](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf)
      required:
        - localityName
        - postcode
        - state
      properties:
        dpid:
          type: string
          description: Unique identifier for an address as defined by Australia
            Post.  Also known as Delivery Point Identifier
        thoroughfareNumber1:
          type: integer
          description: Thoroughfare number for a property (first number in a property
            ranged address)
        thoroughfareNumber1Suffix:
          type: string
          description: Suffix for the thoroughfare number. Only relevant is
            thoroughfareNumber1 is populated
        thoroughfareNumber2:
          type: integer
          description: Second thoroughfare number (only used if the property has a ranged
            address eg 23-25)
        thoroughfareNumber2Suffix:
          type: string
          description: Suffix for the second thoroughfare number. Only relevant is
            thoroughfareNumber2 is populated
        flatUnitNumber:
          type: string
          description: Unit number (including suffix, if applicable)
        floorLevelNumber:
          type: string
          description: Floor or level number (including alpha characters)
        lotNumber:
          type: integer
          description: Allotment number for the address
        buildingName1:
          type: string
          description: Building/Property name 1
        buildingName2:
          type: string
          description: Building/Property name 2
        streetName:
          type: string
          description: The name of the street
        streetType:
          type: string
          description: The street type. Valid enumeration defined by Australia Post PAF
            code file
        streetSuffix:
          type: string
          description: The street type suffix. Valid enumeration defined by Australia Post
            PAF code file
        postalDeliveryType:
          type: string
          description: Postal delivery type. (eg. PO BOX). Valid enumeration defined by
            Australia Post PAF code file
        postalDeliveryNumber:
          type: integer
          description: Postal delivery number if the address is a postal delivery type
        postalDeliveryNumberPrefix:
          type: string
          description: Postal delivery number prefix related to the postal delivery number
        postalDeliveryNumberSuffix:
          type: string
          description: Postal delivery number suffix related to the postal delivery number
        localityName:
          type: string
          description: Full name of locality
        postcode:
          type: string
          description: Postcode for the locality
        state:
          type: string
          description: State in which the address belongs. Valid enumeration defined by
            Australia Post PAF code file
    Meta:
      type: object
    Links:
      type: object
      required:
        - self
      properties:
        self:
          type: string
          description: Fully qualified link to this API call
          format: URIString
