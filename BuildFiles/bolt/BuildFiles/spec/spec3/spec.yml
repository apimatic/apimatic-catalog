openapi: 3.0.0
info:
  version: 1.0.0
  title: Merchant Callback API Reference
  description: |
    ## About
    The [Merchant Callback API](/developers/guides/custom-cart-guides/how-to-integrate/merchant_api/) is a general endpoint on your eCommerce server that Bolt calls to receive information necessary for operating the checkout process.

    **Note**: You must also reference the [Bolt API](/api-bolt) when building a custom cart integration.

    ### URL Options
    You can set the URL(s) for your Merchant Callback API in the [Bolt Merchant dashboard](https://merchant.bolt.com).
    - **v1**: v1 endpoints are individualized and described in the subsections below with unique URLs (e.g., `/order_shipping_and_tax`)
    - **Universal**: The "Universal API" is one endpoint (instead of many) that handles all events described in this spec; the methods and payloads are identical, however you only need to use one URL.

    Need more information? See our [Developer reference articles](/developers/references/) for **environment details**, **error codes**, and more.
servers:
  - url: 'https://merchant-url.com/api'
paths:
  /cart_create:
    post:
      summary: cart.create
      operationId: cart.create
      description: |
        This is only used for Product-Page Checkout to create a cart filled with items.
      security:
        - ApiKeyAuth:
            - X-API-Key
      tags:
        - Cart
      parameters:
        - $ref: '#/components/parameters/bolt_hmac_param'
      requestBody:
        $ref: '#/components/requestBodies/cart_create'
      responses:
        '200':
          $ref: '#/components/responses/cart_create'
        '422':
          $ref: '#/components/responses/cart_create_error'
  /cart_update:
    post:
      summary: cart.update
      operationId: cart.update
      description: |
        This request updates the shopper's cart with any changes, such as adding or removing items.
      security:
        - ApiKeyAuth:
            - X-API-Key
      tags:
        - Cart
      parameters:
        - $ref: '#/components/parameters/bolt_hmac_param'
      requestBody:
        $ref: '#/components/requestBodies/cart_update'
      responses:
        '200':
          $ref: '#/components/responses/cart_update'
        '422':
          $ref: '#/components/responses/cart_update_error'
  /universal_api:
    post:
      summary: cart.addons
      operationId: cart.addons
      description: |
        Requests add-ons to be shown based on the shopper's cart contents.
      security:
        - ApiKeyAuth:
            - X-API-Key
      tags:
        - Cart
      parameters:
        - $ref: '#/components/parameters/bolt_hmac_param'
      requestBody:
        $ref: '#/components/requestBodies/cart_addons'
      responses:
        '200':
          $ref: '#/components/responses/cart_addons'
        '422':
          $ref: '#/components/responses/cart_addons_error'
  /discounts.code.apply:
    post:
      summary: discounts.code.apply
      operationId: discounts.code.apply
      description: |
        This request validates a shopper-submitted discount code and applies the discount to the cart if it exists.
      security:
        - ApiKeyAuth:
            - X-API-Key
      tags:
        - Discount
      parameters:
        - $ref: '#/components/parameters/bolt_hmac_param'
      requestBody:
        $ref: '#/components/requestBodies/discount_check'
      responses:
        '200':
          $ref: '#/components/responses/discount_check'
        '422':
          $ref: '#/components/responses/discount_check_error'
  /order_create:
    post:
      summary: order.create
      operationId: order.create
      description: |
        This request verifies the pre-authorization of an order, confirming that the order can be successfully created.
      security:
        - ApiKeyAuth:
            - X-API-Key
      tags:
        - Order
      parameters:
        - $ref: '#/components/parameters/bolt_hmac_param'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                event:
                  type: string
                  enum:
                    - order.create
                data:
                  type: object
                  description: This is a generic wrapper for the merchant's data. Open to see properties.
                  properties:
                    order:
                      $ref: '#/components/schemas/order'
                    payment_method:
                      $ref: '#/components/schemas/payment_method'
                    currency:
                      $ref: '#/components/schemas/currency_iso'
                    metadata:
                      $ref: '#/components/schemas/metadata_component'
      responses:
        '200':
          description: Order Created Successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - event
                  - status
                  - data
                properties:
                  event:
                    type: string
                    enum:
                      - order.create
                  status:
                    type: string
                    enum:
                      - success
                  data:
                    type: object
                    description: This is a generic wrapper for the Merchant Callback APIâ€™s request body.
                    properties:
                      display_id:
                        $ref: '#/components/schemas/display_id'
                      order_received_url:
                        $ref: '#/components/schemas/order_received_url'
        '422':
          description: Order Creation Failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - failure
                  error:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /order_shipping:
    post:
      summary: order.shipping
      operationId: order.shipping
      description: |
        This retrieves a shopper's shipping options for a given order.
      security:
        - ApiKeyAuth:
            - X-API-Key
      tags:
        - Order
      parameters:
        - $ref: '#/components/parameters/bolt_hmac_param'
      requestBody:
        $ref: '#/components/requestBodies/order_shipping'
      responses:
        '200':
          $ref: '#/components/responses/order_shipping'
        '422':
          $ref: '#/components/responses/order_shipping_error'
  /order_shipping_and_tax:
    post:
      summary: order.shipping_and_tax
      operationId: order.shipping_and_tax
      description: |
        This retrieves a shopper's shipping options and tax calculations for a given order.
      security:
        - ApiKeyAuth:
            - X-API-Key
      tags:
        - Order
      parameters:
        - $ref: '#/components/parameters/bolt_hmac_param'
      requestBody:
        $ref: '#/components/requestBodies/order_shipping_and_tax'
      responses:
        '200':
          $ref: '#/components/responses/order_shipping_and_tax'
        '422':
          $ref: '#/components/responses/order_shipping_and_tax_error'
  /order_tax:
    post:
      summary: order.tax
      operationId: order.tax
      description: |
        This retrieves a shopper's tax calculations for a given order.
      security:
        - ApiKeyAuth:
            - X-API-Key
      tags:
        - Order
      parameters:
        - $ref: '#/components/parameters/bolt_hmac_param'
      requestBody:
        $ref: '#/components/requestBodies/order_tax'
      responses:
        '200':
          $ref: '#/components/responses/order_tax'
        '422':
          $ref: '#/components/responses/order_tax_error'
  /product_get:
    get:
      summary: product.info
      operationId: product.info
      description: |
        Bolt uses this endpoint to fetch product details, availability, and variant information from a merchant to display in Checkout Everywhere. You can pass either the `productID` or the `sku`; if both are present, Bolt defaults to `productID`.
      security:
        - ApiKeyAuth:
            - X-API-Key
      tags:
        - Products
      parameters:
        - $ref: '#/components/parameters/bolt_hmac_param'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                event:
                  type: string
                  enum:
                    - product.info
                data:
                  type: object
                  description: This is a generic wrapper for the merchant's data. Open to see properties.
                  properties:
                    productID:
                      $ref: '#/components/schemas/product_id'
                    sku:
                      $ref: '#/components/schemas/sku'
      responses:
        '200':
          description: Item Not Found
          content:
            application/json:
              schema:
                type: object
                required:
                  - event
                  - status
                  - data
                properties:
                  event:
                    type: string
                    enum:
                      - product.info
                  status:
                    type: string
                    enum:
                      - success
                  data:
                    type: object
                    properties:
                      Current:
                        $ref: '#/components/schemas/product'
                      Variants:
                        $ref: '#/components/schemas/variants'
                      Parent:
                        $ref: '#/components/schemas/product'
        '404':
          description: Item Not Found
          content:
            application/json:
              schema:
                type: object
                required:
                  - event
                  - status
                properties:
                  event:
                    type: string
                    enum:
                      - product.info
                  status:
                    type: string
                    enum:
                      - failure
                  error:
                    type: object
                    properties:
                      code:
                        $ref: '#/components/schemas/code'
                      message:
                        $ref: '#/components/schemas/message'
  /webhooks_transaction:
    post:
      summary: Transaction Webhooks
      operationId: TransactionWebhooks
      description: |
        This request updates the merchant on the status of the transaction.
      security:
        - ApiKeyAuth:
            - X-API-Key
      tags:
        - Webhooks
      parameters:
        - $ref: '#/components/parameters/bolt_hmac_param'
      requestBody:
        $ref: '#/components/requestBodies/webhooks_transaction'
      responses:
        '200':
          $ref: '#/components/responses/webhooks_transaction'
        '422':
          $ref: '#/components/responses/webhooks_transaction_error'
  /webhooks_credit_card:
    post:
      summary: Credit Card Webhooks (BETA)
      operationId: TransactionWebhooksBeta
      description: |
        This request notifies merchants on changes to a existing customer's saved credit card information.
      security:
        - ApiKeyAuth:
            - X-API-Key
      tags:
        - Webhooks
      parameters:
        - $ref: '#/components/parameters/bolt_hmac_param'
      requestBody:
        $ref: '#/components/requestBodies/webhooks_credit_card'
      responses:
        '200':
          $ref: '#/components/responses/webhooks_transaction'
        '422':
          $ref: '#/components/responses/webhooks_transaction_error'
  /oauth/login:  
    get:
      security: []
      summary: account.get
      operationId: account.get
      description: |
        Use this endpoint to validate whether a shopper has an existing merchant account using their email address.
      tags:
        - Account
      parameters:
        - $ref: '#/components/parameters/bolt_hmac_param'
      requestBody:
        $ref: '#/components/requestBodies/account_get'
      responses:
        '200':
          $ref: '#/components/responses/account_get'
        '404':
          $ref: '#/components/responses/account_get_error'
  /oauth/login{code}{state}{scope}{reference}:
    get:
      security: []
      summary: account.login
      operationId: account.login
      description: |
        Use this endpoint to log a shopper in using OAuth.
      tags:
        - Account
      parameters:
        - $ref: '#/components/parameters/bolt_hmac_param'
        - $ref: '#/components/parameters/code'
        - $ref: '#/components/parameters/state'
        - $ref: '#/components/parameters/scope'
        - $ref: '#/components/parameters/reference'
      responses:
        '200':
          $ref: '#/components/responses/account_login'
        '404':
          $ref: '#/components/responses/account_login_error'
  /account_upsert:
    post:
      tags: 
        - Account
      x-speakeasy-ignore: true
      summary: Upsert Shopper Account
      operationId: callbackAccountUpsert
      description: Create or update a shopper account with profile information, payment and addresses.
      security: []
      parameters:
        - $ref: '#/components/parameters/bolt_hmac_param'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create-full-account'
      responses:
        '200':
          description: The account details were successfully created/updated
        '4XX':
          description: An error has occurred, and further details are contained in the response.
        default:
          description: An error has occurred, and further details are contained in the response.       
tags:
  - name: Account
    x-displayName: Account Search & Validation
    description: |
      The Account API is used to validate whether a shopper has an existing merchant account using their email address.

  - name: Cart
    x-displayName: Cart Events
    description: |
      Cart events are only needed if you are using Bolt's [Product Page Checkout button](/operations/checkout-settings/buttons/ppc/). This button enables express checkout for shoppers interested in buying only one item (specified on its product page).

  - name: Discounts
    x-displayName: Discount Codes
    description: |
      [Discount codes](/operations/checkout-settings/discounts/) enable merchants to create and run single or multi-discount campaigns. The Discounts feature requires activation before it can be made available to your shoppers. Read our [feature setup guide](/operations/checkout-settings/discounts/discounts/) for more information.

  - name: Order
    x-displayName: Order Events
    description: |
      Order events loop between the Bolt API and your Merchant Callback API while a shopper is inputting their **shipping address**, selecting a **delivery method**, **applying discounts**, and **adding or removing items**. Whenever a shopper changes this information, the order's `total_amount` and `tax_amount` must be recalculated.

      Every order **must** have a [Bolt order token](/api-bolt/#operation/createOrder). Need to set up your first request? See [How to Create a Bolt Order Token](/developers/guides/custom-cart-guides/how-to-integrate/create-bolt-order-token/).

  - name: Products
    x-displayName: Product Catalog
    description: |
      Bolt uses this endpoint to fetch product details, availability, and variant information from a merchant to display in Checkout. You can pass either the `productID` or the `sku`; if both are present, Bolt defaults to `productID`.

  - name: Webhooks
    x-displayName: Webhooks
    description: |
      Webhooks are sent as a **POST request** to a Merchant's server. Webhooks are retried with an exponential backoff until they are either acknowledged or ignored.

      To acknowledge the webhook, respond with `200`. To fail the webhook, respond with `422`. Bolt recommends adding a  webhook response body to both responses.

components:
  parameters:
    bolt_hmac_param:
      in: header
      name: X-Bolt-Hmac-Sha256
      schema:
        type: string
      description: Bolt sends a signed HMAC for hook verification
    identifier:
      name: identifier
      description: |
        A type and value combination that defines the identifier used to detect
        the existence of an account.
      in: query
      required: true
      schema:
        type: object
        required: [identifier_type, identifier_value]
        properties:
          identifier_type:
            type: string
            description: The type of identifier
            enum: [email, email_sha256]
            example: email
          identifier_value:
            type: string
            description: The value of the identifier. The value must be valid for the specified `identifier_type`
            example: alice@example.com
      examples:
        email:
          summary: Detect using an email
          value:
            identifier_type: email
            identifier_value: alice@example.com
        email_sha256:
          summary: Detect using an email's SHA256 hash
          value:
            identifier_type: email_sha256
            identifier_value: ff8d9819fc0e12bf0d24892e45987e249a28dce836a85cad60e28eaaa8c6d976
    transaction_reference_query_param:
      in: path
      name: REFERENCE
      schema:
        type: string
      required: true
      description: This is the Bolt transaction reference. (ex. N7Y3-NFKC-VFRF)
    x_authorization_signature:
      in: header
      name: X-Authorization-Signature
      schema:
        type: string
      required: true
      description: Generated signature after using the signing secret and nonce by the publisher.
    x_publisher_key:
      in: header
      name: X-Publisher-Key
      schema:
        type: string
      required: true
      description: Unique identifier for the publisher.
    x_publishable_key:
      in: header
      name: X-Publishable-Key
      schema:
        type: string
      required: false
      description: A public key identifying the merchant
    x_nonce_param:
      in: header
      name: X-Nonce
      schema:
        type: string
        format: uuid
      required: true
      description: Unique 12-16 digit for every request
    bolt_product_id:
      in: query
      name: bolt_product_id
      schema:
        type: string
      required: false
      description: Bolt's unique identifier for a given product.
    cursor:
      in: query
      name: cursor
      schema:
        type: string
      required: false
      description: The url of the next product variant to load when multiple variants are returned and paginated.
    limit:
      in: query
      name: limit
      schema:
        type: string
      required: false
      description: The maximum number of product variants to that can be returned. Defaults to `100` variants.
    merchant_division_id:
      in: query
      name: merchant_division_id
      schema:
        type: string
      required: true
      description: 'The unique ID for a given division of the merchant''s account (e.g., a storefront or backend division).'
    merchant_product_id:
      in: query
      name: merchant_product_id
      schema:
        type: string
      description: A merchant's unique ID for a given product.
    sku:
      in: query
      name: sku
      schema:
        type: string
      required: false
      description: A product's sku.
    code:
      in: path
      name: code
      schema:
        type: string
      required: true
      description: A temporary authorization code that must be exchanged for an ID token obtained from Bolt's `/oauth/token` endpoint.
    state:
      in: path
      name: state
      schema:
        type: string
      required: true
      description: A randomly generated 8-character string.
    scope:
      in: path
      name: scope
      schema:
        type: string
      required: true
      description: Set to `openid`.
    reference:
      in: path
      name: reference
      schema:
        type: string
      required: true
      description: The order token associated to the shopper logging into a Bolt Account.
    user_email:
      in: query
      name: email
      schema:
        type: string
      required: true
      description: The Bolt user's e-mail address.
    user_phone:
      in: query
      name: phone
      schema:
        type: string
      required: false
      description: The Bolt user's phone number.
  schemas:
    tax_result:
      type: object
      properties:
        items:
          $ref: '#/components/schemas/items'
        rate_subtotal:
          $ref: '#/components/schemas/rate_subtotal'
        rate_shipping:
          $ref: '#/components/schemas/rate_shipping'
        subtotal_amount:
          $ref: '#/components/schemas/amount'
    adjust_transaction_merchant:
      type: object
      required:
        - created_at
        - description
        - processor
        - operational_processors
        - time_zone
      properties:
        created_at:
          $ref: '#/components/schemas/merchant_created_date'
        description:
          $ref: '#/components/schemas/merchant_description'
        processor:
          $ref: '#/components/schemas/transaction_processor'
        operational_processors:
          $ref: '#/components/schemas/transaction_operational_processors'
        public_id:
          $ref: '#/components/schemas/merchant_public_id'
        time_zone:
          $ref: '#/components/schemas/merchant_time_zone'
    indemnification_decision:
      type: string
      description: Determines indemnification coverage.
      enum:
        - unknown
        - indemnified
        - not_indemnified
      example: indemnified
    indemnification_reason:
      type: string
      description: Determines indemnification coverage reason.
      enum:
        - checkout
        - virtual_terminal
        - merchant_back_office
        - merchant_force_approved
        - reversibly_rejected
        - irreversibly_rejected
        - risk_engine_approved
        - analyst_approved
        - auth_verification
        - paypal
        - afterpay
        - direct_payments
        - whitelist
        - external_review
      example: checkout
    card_priority:
      type: string
      description: The priority for the card.
      enum:
        - primary
        - listed
      example: primary
    currency:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/currency_iso'
        currency_symbol:
          $ref: '#/components/schemas/currency_symbol'
    splits:
      type: array
      description: A list of splits. **Nullable** for Transactions Details.
      items:
        type: object
        description: A split of fees by type and amount.
        required:
          - amount
          - type
        properties:
          amount:
            $ref: '#/components/schemas/amounts'
          type:
            type: string
            description: |
              **Nullable** for Transactions Details.
            enum:
              - net
              - processing_fee
              - bolt_fee
              - adjustment
              - float
              - reserve
            example: processing_fee
    amounts:
      type: object
      description: The amount. **Nullable** for Transactions Details.
      required:
        - amount
        - currency
        - currency_symbol
      properties:
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency_iso'
        currency_symbol:
          $ref: '#/components/schemas/currency_symbol'
    adjust_transaction:
      type: object
      description: |
        **Nullable** for Transactions Details.
      properties:
        id:
          $ref: '#/components/schemas/transaction_id'
        type:
          $ref: '#/components/schemas/transaction_type'
        processor:
          $ref: '#/components/schemas/transaction_processor'
        date:
          $ref: '#/components/schemas/transaction_date'
        reference:
          $ref: '#/components/schemas/transaction_reference'
        status:
          $ref: '#/components/schemas/transaction_status'
        from_consumer:
          $ref: '#/components/schemas/from_consumer'
        to_consumer:
          $ref: '#/components/schemas/from_consumer'
        from_credit_card:
          $ref: '#/components/schemas/from_credit_card'
        to_credit_card:
          $ref: '#/components/schemas/from_credit_card'
        amount:
          $ref: '#/components/schemas/amounts'
        authorization:
          $ref: '#/components/schemas/transaction_authorization'
        capture:
          $ref: '#/components/schemas/capture'
        captures:
          $ref: '#/components/schemas/captures'
        credit:
          $ref: '#/components/schemas/credit_status'
        merchant_division:
          $ref: '#/components/schemas/merchant_division'
        merchant:
          $ref: '#/components/schemas/adjust_transaction_merchant'
        transaction_properties:
          $ref: '#/components/schemas/risk_payment_instrument_factors'
        indemnification_decision:
          $ref: '#/components/schemas/indemnification_decision'
        indemnification_reason:
          $ref: '#/components/schemas/indemnification_reason'
        order_decision:
          $ref: '#/components/schemas/order_decision'
        merchant_order_number:
          $ref: '#/components/schemas/merchant_order_number'
        splits:
          $ref: '#/components/schemas/splits'
        review_ticket:
          $ref: '#/components/schemas/review_ticket'
    adjust_transactions:
      type: array
      description: |
        **Nullable** for Transactions Details.
      items:
        $ref: '#/components/schemas/adjust_transaction'
    address:
      type: object
      description: A physical address.
      required: [id, first_name, last_name, street_address1, locality, postal_code, country_code]
      properties:
        id:
          type: string
          format: id
          description: The address's unique identifier.
          readOnly: true
          example: D4g3h5tBuVYK9
        first_name:
          type: string
          description: The first name of the person associated with this address.
          example: Alice
        last_name:
          type: string
          description: The last name of the person associated with this address.
          example: Baker
        company:
          type: string
          description: The company associated with this address.
          example: ACME Corporation
        street_address1:
          type: string
          description: The street address associated with this address.
          example: 535 Mission St, Ste 1401
        street_address2:
          type: string
          description: Any additional, optional, street address information associated with this address.
          example: c/o Shipping Department
        locality:
          type: string
          description: The locality (e.g. city, town, etc...) associated with this address.
          example: San Francisco
        postal_code:
          type: string
          description: The postal code associated with this address.
          example: '94105'
        region:
          type: string
          description: The region or administrative area (e.g. state, province, county, etc...) associated with this address.
          example: CA
        country_code:
          type: string
          description: The country (in its ISO 3166 alpha-2 format) associated with this address.
          enum: [
            AF, AX, AL, DZ, AS, AD, AO, AI, AQ, AG, AR, AM, AW, AU, AT, AZ, BH, BS, BD, BB, BY, BE, BZ, BJ, BM, BT, BO, BQ,
            BA, BW, BV, BR, IO, BN, BG, BF, BI, KH, CM, CA, CV, KY, CF, TD, CL, CN, CX, CC, CO, KM, CG, CD, CK, CR, CI, HR,
            CU, CW, CY, CZ, DK, DJ, DM, DO, EC, EG, SV, GQ, ER, EE, ET, FK, FO, FJ, FI, FR, GF, PF, TF, GA, GM, GE, DE, GH,
            GI, GR, GL, GD, GP, GU, GT, GG, GN, GW, GY, HT, HM, VA, HN, HK, HU, IS, IN, ID, IR, IQ, IE, IM, IL, IT, JM, JP,
            JE, JO, KZ, KE, KI, KP, KR, KW, KG, LA, LV, LB, LS, LR, LY, LI, LT, LU, MO, MK, MG, MW, MY, MV, ML, MT, MH, MQ,
            MR, MU, YT, MX, FM, MD, MC, MN, ME, MS, MA, MZ, MM, NA, NR, NP, NL, NC, NZ, NI, NE, NG, NU, NF, MP, 'NO', OM, PK,
            PW, PS, PA, PG, PY, PE, PH, PN, PL, PT, PR, QA, RE, RO, RU, RW, BL, SH, KN, LC, MF, PM, VC, WS, SM, ST, SA, SN,
            RS, SC, SL, SG, SX, SK, SI, SB, SO, ZA, GS, SS, ES, LK, SD, SR, SJ, SZ, SE, CH, SY, TW, TJ, TZ, TH, TL, TG, TK,
            TO, TT, TN, TR, TM, TC, TV, UG, UA, AE, GB, US, UM, UY, UZ, VU, VE, VN, VG, VI, WF, EH, YE, ZM, ZW,
          ]
          example: US
          x-oapi-codegen-extra-tags:
            validate: country
        email:
          type: string
          format: email
          description: The email address associated with this address.
          example: alice@example.com
        phone:
          type: string
          format: phone
          description: The phone number associated with this address.
          example: '+14155550199'
    address-listing:
      type: object
      description: An address saved on an account, i.e. a physical address plus any additional account-specific metadata.
      allOf:
        - $ref: '#/components/schemas/address'
        - type: object
          properties:
            phone:
              type: string
              format: phone
              description: The phone number associated with this address.
              example: '+14155550199'
              x-oapi-codegen-extra-tags:
                validate: phone=strict
            is_default:
              type: boolean
              description: Whether or not this is the default address saved.
              example: true
    address-reference:
      oneOf:
        - $ref: '#/components/schemas/address-reference-id'
        - $ref: '#/components/schemas/address-reference-explicit'
      discriminator:
        propertyName: .tag
        mapping:
          id: '#/components/schemas/address-reference-id'
          explicit: '#/components/schemas/address-reference-explicit'
    address-reference-explicit:
      allOf:
        - type: object
          required: [.tag]
          properties:
            .tag:
              type: string
              enum: [explicit]
              description: The type of address reference
              example: explicit
        - $ref: '#/components/schemas/address'
    address-reference-id:
      type: object
      required: [.tag, id]
      properties:
        .tag:
          type: string
          enum: [id]
          description: The type of address reference
          example: id
        id:
          type: string
          format: id
          description: The address's ID
          example: D4g3h5tBuVYK9
    address-error:
      type: object
      required: [.tag, message]
      properties:
        .tag:
          type: string
          enum:
            - invalid_region
            - invalid_postal_code
            - missing_input_parameter
            - invalid_input_parameter
          description: The type of error returned
          example: invalid_region
        message:
          type: string
          description: |
            A human-readable error message, which might include information specific to
            the request that was made.
          example: region value BC is not valid for country_code value US
    address_change:
      type: object
      properties:
        ticket_id:
          $ref: '#/components/schemas/address_change_ticket_id'
        from_address:
          $ref: '#/components/schemas/consumer_billing_address'
        to_address:
          $ref: '#/components/schemas/consumer_billing_address'
        status:
          $ref: '#/components/schemas/address_change_status'
        timestamp:
          $ref: '#/components/schemas/address_change_timestamp'
    1005_invalid_merchant_key:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/1005_code'
        message:
          $ref: '#/components/schemas/1005_message'
    capture:
      type: object
      description: Deprecated. Use `captures`.
      required:
        - id
        - status
        - amount
      properties:
        id:
          $ref: '#/components/schemas/capture_id'
        status:
          $ref: '#/components/schemas/capture_status'
        amount:
          $ref: '#/components/schemas/amounts'
        splits:
          $ref: '#/components/schemas/splits'
    captures:
      type: array
      description: All captures associated with the transaction. **Nullable** for Transactions Details.
      items:
        $ref: '#/components/schemas/capture'
    capture_type:
      type: string
      description: The type of capture used for this transaction.
      enum:
        - manual
        - auto
    card_address:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/billing_address_id'
        street_address1:
          $ref: '#/components/schemas/street_address'
        locality:
          $ref: '#/components/schemas/locality'
        region:
          $ref: '#/components/schemas/region'
        postal_code:
          $ref: '#/components/schemas/postal_code'
        country_code:
          $ref: '#/components/schemas/country_code'
        country:
          $ref: '#/components/schemas/country'
        name:
          $ref: '#/components/schemas/name_person'
        first_name:
          $ref: '#/components/schemas/first_name'
        last_name:
          $ref: '#/components/schemas/last_name'
        company:
          $ref: '#/components/schemas/company'
        phone:
          $ref: '#/components/schemas/phone'
        email:
          $ref: '#/components/schemas/email'
    card_gift:
      type: object
      description: A gift card.
      properties:
        card_number:
          $ref: '#/components/schemas/card_number'
        pin:
          $ref: '#/components/schemas/pin'
    cards_gift:
      type: array
      description: A list of gift cards.
      items:
        $ref: '#/components/schemas/card_gift'
    cart:
      type: object
      properties:
        total_amount:
          $ref: '#/components/schemas/total_amount'
        items:
          $ref: '#/components/schemas/items'
        tax_amount:
          $ref: '#/components/schemas/tax_amount'
        billing_address_id:
          $ref: '#/components/schemas/billing_address_id'
        billing_address:
          $ref: '#/components/schemas/shipping_address'
        order_reference:
          $ref: '#/components/schemas/order_reference'
        display_id:
          $ref: '#/components/schemas/display_id'
        metadata:
          type: object
          additionalProperties:
            type: string
    addons_limit:
      type: integer
      format: int64
      description: The maximum number of add-ons for a product that should be returned. Any add-ons beyond the limit will be ignored.
      example: 3
    addons_cart:
      type: object
      required:
        - items
        - currency
        - total_amount
        - display_id
        - order_reference
      properties:
        items:
          $ref: '#/components/schemas/addons_cart_items'
        currency:
          $ref: '#/components/schemas/currency_iso'
        total_amount:
          $ref: '#/components/schemas/cart_total_amount'
        display_id:
          $ref: '#/components/schemas/display_id'
        order_reference:
          $ref: '#/components/schemas/order_reference'
        discounts:
          $ref: '#/components/schemas/addons_cart_discounts'
    addons_cart_items:
      type: array
      description: A list of cart items.
      items:
        $ref: '#/components/schemas/cart_item'
    cart_item:
      type: object
      required:
        - reference
        - name
        - total_amount
        - unit_price
        - quantity
        - sku
      properties:
        reference:
          $ref: '#/components/schemas/reference'
        name:
          $ref: '#/components/schemas/name_item'
        unit_price:
          $ref: '#/components/schemas/item_price'
        total_amount:
          $ref: '#/components/schemas/item_amount'
        quantity:
          $ref: '#/components/schemas/quantity'
        sku:
          $ref: '#/components/schemas/sku'
        description:
          $ref: '#/components/schemas/item_description'
    addons_cart_discounts:
      type: array
      description: A list of cart discounts. (optional)
      items:
        $ref: '#/components/schemas/discount'
    discount:
      type: object
      required:
        - amount
        - code
        - reference
      properties:
        amount:
          $ref: '#/components/schemas/discount_amount'
        code:
          $ref: '#/components/schemas/discount_code'
        reference:
          $ref: '#/components/schemas/discount_reference'
        description:
          $ref: '#/components/schemas/discount_description'
        discount_category:
          $ref: '#/components/schemas/discount_category'
        type:
          $ref: '#/components/schemas/discount_type'
    item_price:
      type: integer
      format: int64
      description: Price per unit in cents.
      example: 5000
    cart_addons:
      type: array
      items:
        $ref: '#/components/schemas/addons'
    addons:
      type: object
      required:
        - name
        - description
        - reference
        - image_url
        - amount
        - currency
      properties:
        name:
          $ref: '#/components/schemas/name_item'
        description:
          $ref: '#/components/schemas/item_description'
        reference:
          $ref: '#/components/schemas/reference'
        image_url:
          $ref: '#/components/schemas/image_url'
        amount:
          $ref: '#/components/schemas/item_amount'
        currency:
          $ref: '#/components/schemas/currency_iso'
        product_page_url:
          $ref: '#/components/schemas/pdp_url'
    pdp_url:
      type: string
      description: The full product page url.
    cart_total_amount:
      type: integer
      format: int64
      description: Cart total amount.
      example: 13000
    discount_amount:
      type: integer
      format: int64
      description: Discount amount.
      example: 2000
    item_amount:
      type: integer
      format: int64
      description: Item total amount.
      example: 15000
    cart_discounts:
      type: object
      properties:
        order_reference:
          $ref: '#/components/schemas/order_reference'
        display_id:
          $ref: '#/components/schemas/display_id'
        currency:
          $ref: '#/components/schemas/currency'
        subtotal_amount:
          $ref: '#/components/schemas/amounts'
        total_amount:
          $ref: '#/components/schemas/amounts'
        tax_amount:
          $ref: '#/components/schemas/amounts'
        shipping_amount:
          $ref: '#/components/schemas/amounts'
        discount_amount:
          $ref: '#/components/schemas/amounts'
        billing_address:
          $ref: '#/components/schemas/shipping_address'
        items:
          $ref: '#/components/schemas/items'
        shipments:
          $ref: '#/components/schemas/cart_shipments'
        discounts:
          $ref: '#/components/schemas/discount_codes'
    cart_limited:
      type: object
      description: Limited cart view.
      properties:
        order_reference:
          $ref: '#/components/schemas/order_reference'
        display_id:
          $ref: '#/components/schemas/display_id'
        billing_address:
          $ref: '#/components/schemas/shipping_address'
        shipments:
          $ref: '#/components/schemas/cart_shipment'
    cart_publisher:
      type: object
      properties:
        Items:
          $ref: '#/components/schemas/publisher_items'
    cart_order:
      type: object
      required:
        - currency
        - subtotal_amount
        - total_amount
      properties:
        order_description:
          type: string
          example: string
        order_reference:
          $ref: '#/components/schemas/order_reference'
        display_id:
          $ref: '#/components/schemas/display_id'
        transaction_reference:
          $ref: '#/components/schemas/transaction_reference'
        cart_url:
          $ref: '#/components/schemas/cart_url'
        merchant_order_url:
          $ref: '#/components/schemas/order_url'
        currency:
          $ref: '#/components/schemas/currency'
        subtotal_amount:
          $ref: '#/components/schemas/amounts'
        total_amount:
          $ref: '#/components/schemas/amounts'
        tax_amount:
          $ref: '#/components/schemas/amounts'
        shipping_amount:
          $ref: '#/components/schemas/amounts'
        discount_amount:
          $ref: '#/components/schemas/amounts'
        billing_address:
          $ref: '#/components/schemas/consumer_billing_address'
        items:
          $ref: '#/components/schemas/items'
        shipments:
          $ref: '#/components/schemas/shipments2'
        in_store_shipments:
          $ref: '#/components/schemas/in_store_shipments'
        discounts:
          $ref: '#/components/schemas/discounts'
        metadata:
          $ref: '#/components/schemas/metadata_component'
    cart_order_generated:
      type: object
      properties:
        order_reference:
          $ref: '#/components/schemas/order_reference'
        display_id:
          $ref: '#/components/schemas/order_display_id'
        total_amount:
          $ref: '#/components/schemas/amounts'
        items:
          $ref: '#/components/schemas/items'
        discounts:
          $ref: '#/components/schemas/discounts'
    cart_shipment:
      type: object
      description: A cart that is being prepared for shipment
      properties:
        shipping_address_id:
          $ref: '#/components/schemas/shipping_address_id'
        shipping_address:
          $ref: '#/components/schemas/shipping_address'
        total_weight:
          type: integer
          description: The total weight.
          example: 55
        shipping_method:
          $ref: '#/components/schemas/shipping_method'
        carrier:
          $ref: '#/components/schemas/carrier'
        service:
          $ref: '#/components/schemas/service'
        expedited:
          $ref: '#/components/schemas/expedited'
        cost:
          $ref: '#/components/schemas/cost'
        tax_amount:
          $ref: '#/components/schemas/tax_amount'
        package_type:
          $ref: '#/components/schemas/package_type'
        package_width:
          $ref: '#/components/schemas/width'
        package_height:
          $ref: '#/components/schemas/height'
        package_depth:
          $ref: '#/components/schemas/depth'
        package_dimension_unit:
          $ref: '#/components/schemas/dimension_unit'
        tax_code:
          $ref: '#/components/schemas/tax_code'
        estimated_delivery_date:
          $ref: '#/components/schemas/estimated_delivery_date'
        type:
          $ref: '#/components/schemas/package_type'
        discount_by_membership:
          $ref: '#/components/schemas/discount_membership'
    cart_shipments:
      type: array
      description: A list of shipments.
      items:
        $ref: '#/components/schemas/cart_shipment'
    cart_shipment_combined:
      type: object
      description: A cart that is being prepared for shipment
      properties:
        items:
          $ref: '#/components/schemas/items'
        currency:
          $ref: '#/components/schemas/currency_iso'
        total_amount:
          $ref: '#/components/schemas/total_amount'
        display_id:
          $ref: '#/components/schemas/display_id'
        order_reference:
          $ref: '#/components/schemas/order_reference'
        metadata:
          $ref: '#/components/schemas/metadata_component'
    cart_transaction_authorize:
      type: object
      properties:
        order_reference:
          $ref: '#/components/schemas/order_reference'
        items:
          $ref: '#/components/schemas/items'
        discounts:
          $ref: '#/components/schemas/discounts_transaction_authorize'
        billing_address:
          $ref: '#/components/schemas/consumer_billing_address'
        shipments:
          $ref: '#/components/schemas/shipments2'
        tax_amount:
          $ref: '#/components/schemas/amount'
        total_amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency_iso'
    cart_transaction_recharge:
      type: object
      properties:
        order_reference:
          $ref: '#/components/schemas/order_reference'
        total_amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency_iso'
    chargeback_details:
      type: object
      properties:
        reason:
          $ref: '#/components/schemas/chargeback_reason'
        reason_code:
          $ref: '#/components/schemas/chargeback_reason_code'
        chargeback_amt:
          $ref: '#/components/schemas/amounts'
        chargeback_fee:
          $ref: '#/components/schemas/amounts'
        net_amt:
          $ref: '#/components/schemas/amounts'
        amt_won:
          $ref: '#/components/schemas/amounts'
        representment_result:
          $ref: '#/components/schemas/chargeback_representment_result'
        representment_reply_by_date:
          $ref: '#/components/schemas/chargeback_representment_reply_by_date'
        chargeback_id:
          $ref: '#/components/schemas/chargeback_id'
        event_views:
          type: array
          items:
            $ref: '#/components/schemas/chargeback_event_view'
    chargeback_event_view:
      type: object
      description: A single chargeback event.
      properties:
        content:
          $ref: '#/components/schemas/chargeback_event_content'
        time:
          $ref: '#/components/schemas/chargeback_event_time'
    collections:
      type: array
      items:
        $ref: '#/components/schemas/collection'
    consumer_billing_address:
      type: object
      required:
        - street_address1
        - locality
        - region
        - postal_code
      properties:
        id:
          $ref: '#/components/schemas/billing_address_id'
        street_address1:
          $ref: '#/components/schemas/street_address'
        street_address2:
          $ref: '#/components/schemas/street_address'
        street_address3:
          $ref: '#/components/schemas/street_address'
        street_address4:
          $ref: '#/components/schemas/street_address'
        locality:
          $ref: '#/components/schemas/locality'
        region:
          $ref: '#/components/schemas/region'
        postal_code:
          $ref: '#/components/schemas/postal_code'
        country_code:
          $ref: '#/components/schemas/country_code'
        country:
          $ref: '#/components/schemas/country'
        name:
          $ref: '#/components/schemas/name_person'
        first_name:
          $ref: '#/components/schemas/first_name'
        last_name:
          $ref: '#/components/schemas/last_name'
        company:
          $ref: '#/components/schemas/company'
        phone_number:
          $ref: '#/components/schemas/phone'
        email_address:
          $ref: '#/components/schemas/email'
    consumer_user_membership:
      type: object
      description: |
        **Nullable** for Transactions Details.
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/consumer_membership_status'
    credit:
      type: object
      properties:
        status:
          type: string
          example: succeeded
    credit-card:
      required: [network, bin, last4, expiration, token]
      type: object
      properties:
        network:
          type: string
          description: The credit card's network.
          enum: [visa, mastercard, amex, discover, jcb, unionpay, alliancedata, citiplcc]
          example: visa
        bin:
          type: string
          description: The Bank Identification Number (BIN). This is typically the first 4 to 6 digits of the account number.
          writeOnly: true
          pattern: '^\d+$'
          example: '411111'
        last4:
          type: string
          description: The account number's last four digits.
          pattern: '^\d{4}$'
          example: '1004'
        expiration:
          type: string
          description: The expiration date, in YYYY-MM format.
          pattern: '^\d{4}-\d{2}$'
          example: '2029-03'
        token:
          type: string
          description: The Bolt token associated with the credit card.
          writeOnly: true
          example: 'a1B2c3D4e5F6G7H8i9J0k1L2m3N4o5P6Q7r8S9t0'
    test-credit-card:
      required: [network, bin, last4, expiration, token]
      type: object
      properties:
        network:
          type: string
          description: The credit card's network.
          enum: [visa, mastercard, amex, discover, jcb, unionpay, alliancedata, citiplcc]
          example: visa
        bin:
          type: string
          description: The Bank Identification Number (BIN). This is typically the first 4 to 6 digits of the account number.
          pattern: '^\d+$'
          example: '411111'
        last4:
          type: string
          description: The account number's last four digits.
          pattern: '^\d{4}$'
          example: '1004'
        expiration:
          type: string
          format: date-time
          description: The token's expiration date. Tokens used past their expiration will be rejected.
          example: 2023-10-31:T06:00:00Z
        token:
          type: string
          description: The Bolt token associated with the credit card.
          example: 'a1B2c3D4e5F6G7H8i9J0k1L2m3N4o5P6Q7r8S9t0'
    credit-card-error:
      type: object
      required: [.tag, message]
      properties:
        .tag:
          type: string
          enum:
            - declined_invalid_amount
            - declined_invalid_cvv
            - declined_invalid_number
            - declined_expired
            - declined_call_issuer
          description: The type of error returned
          example: declined_invalid_cvv
        message:
          type: string
          description: |
            A human-readable error message, which might include information specific to
            the request that was made.
          example: The payment was declined because the CVV is not valid
    credit_card:
      type: object
      description: A credit card.
      properties:
        id:
          $ref: '#/components/schemas/card_id'
        last4:
          $ref: '#/components/schemas/card_last4'
        bin:
          $ref: '#/components/schemas/card_bin'
        expiration:
          $ref: '#/components/schemas/card_expiration'
        display_network:
          $ref: '#/components/schemas/card_network'
        token_type:
          $ref: '#/components/schemas/card_token_type'
        priority:
          $ref: '#/components/schemas/card_priority'
        status:
          $ref: '#/components/schemas/card_status'
    credit_card_user:
      type: object
      description: The credit card user.
      properties:
        id:
          $ref: '#/components/schemas/consumer_id'
        first_name:
          $ref: '#/components/schemas/first_name'
        last_name:
          $ref: '#/components/schemas/last_name'
        phones:
          $ref: '#/components/schemas/phones_with_country_code'
        emails:
          $ref: '#/components/schemas/emails'
    customer_list_status:
      type: object
      properties:
        auto_approved:
          $ref: '#/components/schemas/auto_approved'
        block_listed:
          $ref: '#/components/schemas/block_listed'
    custom_fields:
      type: object
      properties:
        external_id:
          type: string
          description: The external ID for the custom field.
          example: '123456'
        public_id:
          type: string
          description: The internal ID for the custom field.
          example: i-123456
        label:
          type: string
          description: 'The displayed label for the custom field, seen by the shopper.'
          example: Special Field
        field_setup:
          type: string
          example: string
        checkout_setup:
          type: string
          enum:
            - shipping_step
            - delivery_step
            - payment_step
            - account_registration_sso
          example: string
        position:
          type: integer
          example: 1
        required:
          type: boolean
          description: Defines if the field must be completed to check out.
          example: true
        dynamic:
          type: boolean
          description: Defines whether the field is dynamic.
          example: false
        subscribe_to_newsletter:
          type: boolean
          description: Defines whether the shopper is opted into a newsletter or not.
          example: false
    custom_fields2:
      type: array
      items:
        $ref: '#/components/schemas/custom_fields'
    data_error:
      type: object
      description: 'The JSON object with string key, and value any JSON object.'
      properties:
        reason:
          $ref: '#/components/schemas/reason'
    discounts:
      type: array
      description: A list of discounts.
      items:
        type: object
        properties:
          amount:
            $ref: '#/components/schemas/amounts'
          code:
            $ref: '#/components/schemas/discount_code'
          reference:
            $ref: '#/components/schemas/discount_code'
          description:
            $ref: '#/components/schemas/discount_description'
          details_url:
            $ref: '#/components/schemas/discount_uri'
          free_shipping:
            $ref: '#/components/schemas/discount_free_shipping'
          discount_category:
            $ref: '#/components/schemas/discount_category'
    discount_codes:
      type: array
      description: A list of discount codes.
      items:
        $ref: '#/components/schemas/discount_code'
    discount_currency:
      $ref: '#/components/schemas/discount_codes'
    discount_free_shipping:
      type: object
      description: Contains free shipping settings and limitations.
      properties:
        is_free_shipping:
          $ref: '#/components/schemas/is_free_shipping'
        maximum_cost_allowed:
          $ref: '#/components/schemas/maximum_cost_allowed'
    discounts_order_generate:
      type: array
      description: A list of discounts.
      items:
        type: object
        properties:
          amount:
            $ref: '#/components/schemas/amount'
          code:
            $ref: '#/components/schemas/discount_code'
          reference:
            $ref: '#/components/schemas/discount_code'
          description:
            $ref: '#/components/schemas/discount_description'
          details_url:
            $ref: '#/components/schemas/discount_uri'
          free_shipping:
            $ref: '#/components/schemas/discount_free_shipping'
          discount_category:
            $ref: '#/components/schemas/discount_category'
    discounts_transaction_authorize:
      type: array
      description: A list of discounts.
      items:
        type: object
        properties:
          amount:
            $ref: '#/components/schemas/amount'
          code:
            $ref: '#/components/schemas/discount_code'
          reference:
            $ref: '#/components/schemas/discount_code'
          description:
            $ref: '#/components/schemas/discount_description'
          details_url:
            $ref: '#/components/schemas/discount_uri'
          free_shipping:
            $ref: '#/components/schemas/discount_free_shipping'
          discount_category:
            $ref: '#/components/schemas/discount_category'
    emails:
      type: array
      description: A list of email addresses. **Nullable** for Transactions Details.
      items:
        type: object
        description: An object of user email.
        properties:
          id:
            $ref: '#/components/schemas/email_id'
          address:
            $ref: '#/components/schemas/email'
          status:
            $ref: '#/components/schemas/email_status'
          priority:
            $ref: '#/components/schemas/email_priority'
    error:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/code'
        data:
            $ref: '#/components/schemas/reasons'
    errors:
      type: array
      items:
        $ref: '#/components/schemas/error'
    error_base_response:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/event'
        status:
          type: string
          enum:
            - failure
        error:
          $ref: '#/components/schemas/error'
    errors_base_response:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/event'
        status:
          type: string
          enum:
            - failure
        errors:
          type: array
          items:
            $ref: '#/components/schemas/error'
    error_bolt_api:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/code'
        message:
          $ref: '#/components/schemas/message'
    errors_bolt_api_response:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/request_result'
        errors:
          $ref: '#/components/schemas/errors_bolt_api'
    errors_bolt_api:
      type: array
      items:
        $ref: '#/components/schemas/error_bolt_api'
    external_data:
      type: object
      description: 'For Shopify users only; otherwise, is empty.'
      properties:
        shopify:
          $ref: '#/components/schemas/shopify'
    from_consumer:
      type: object
      description: The credit card user. **Nullable** for Transactions Details.
      required:
        - id
        - emails
        - email_verified
        - user_membership
      properties:
        id:
          $ref: '#/components/schemas/consumer_id'
        first_name:
          $ref: '#/components/schemas/first_name'
        last_name:
          $ref: '#/components/schemas/last_name'
        phones:
          $ref: '#/components/schemas/phones_with_country_code'
        emails:
          $ref: '#/components/schemas/emails'
        email_verified:
          $ref: '#/components/schemas/consumer_email_verified'
        user_membership:
          $ref: '#/components/schemas/consumer_user_membership'
        platform_account_status:
          $ref: '#/components/schemas/consumer_platform_account_status'
    from_credit_card:
      type: object
      description: A credit card.
      required:
        - id
        - last4
        - bin
        - expiration
        - network
        - token_type
        - priority
        - display_network
        - icon_asset_path
        - status
      properties:
        id:
          $ref: '#/components/schemas/card_id'
        last4:
          $ref: '#/components/schemas/card_last4'
        bin:
          $ref: '#/components/schemas/card_bin'
        expiration:
          $ref: '#/components/schemas/card_expiration'
        network:
          $ref: '#/components/schemas/card_network'
        token_type:
          $ref: '#/components/schemas/card_token_type'
        priority:
          $ref: '#/components/schemas/card_priority'
        display_network:
          $ref: '#/components/schemas/card_network'
        icon_asset_path:
          $ref: '#/components/schemas/icon_asset_path'
        status:
          $ref: '#/components/schemas/card_status'
        billing_address:
          $ref: '#/components/schemas/consumer_billing_address'
    gift_option_view:
      type: object
      description: Defines which gift options are hidden.
      properties:
        hide_gift_wrap:
          type: boolean
          example: false
        hide_gift_message:
          type: boolean
          example: false
    gift_options:
      type: object
      description: Contains the gift option settings for wrapping and custom messages.
      required:
        - wrap
        - merchant_product_id
      properties:
        wrap:
          $ref: '#/components/schemas/gift_options_wrap'
        message:
          $ref: '#/components/schemas/gift_options_message'
        cost:
          $ref: '#/components/schemas/gift_options_cost'
        merchant_product_id:
          $ref: '#/components/schemas/merchant_product_id'
    hide_apms:
      type: array
      items:
        $ref: '#/components/schemas/hide_apm'
    in_store_shipment:
      type: object
      description: A cart that is being prepared for shipment
      properties:
        id:
          $ref: '#/components/schemas/shipping_address_id'
        shipping_address:
          $ref: '#/components/schemas/consumer_billing_address'
        total_weight:
          $ref: '#/components/schemas/total_weight'
        shipping_method:
          $ref: '#/components/schemas/shipping_method'
        carrier:
          $ref: '#/components/schemas/carrier'
        service:
          $ref: '#/components/schemas/service'
        expedited:
          $ref: '#/components/schemas/expedited'
        cost:
          $ref: '#/components/schemas/amounts'
        tax_amount:
          $ref: '#/components/schemas/amounts'
        reference:
          $ref: '#/components/schemas/reference'
        signature:
          $ref: '#/components/schemas/signature'
        package_type:
          $ref: '#/components/schemas/package_type'
        package_dimension:
          $ref: '#/components/schemas/package_dimension'
        package_weights:
          $ref: '#/components/schemas/package_weights'
        default:
          $ref: '#/components/schemas/default'
        estimated_delivery_date:
          $ref: '#/components/schemas/estimated_delivery_date'
        gift_options:
          $ref: '#/components/schemas/gift_options'
    in_store_shipment2:
      type: object
      description: A cart that is being prepared for shipment
      properties:
        shipment:
          $ref: '#/components/schemas/in_store_shipment'
        address:
          $ref: '#/components/schemas/consumer_billing_address'
        distance:
          type: integer
          example: 1.2
        distance_unit:
          type: string
          example: miles
        store_name:
          type: string
          example: My Store
    in_store_shipments:
      type: array
      items:
        $ref: '#/components/schemas/in_store_shipment2'
    item:
      type: object
      description: An item with properties.
      required:
        - reference
        - name
        - total_amount
        - unit_price
        - quantity
      properties:
        reference:
          $ref: '#/components/schemas/reference'
        name:
          $ref: '#/components/schemas/name_item'
        description:
          $ref: '#/components/schemas/item_description'
        options:
          $ref: '#/components/schemas/options'
        total_amount:
          $ref: '#/components/schemas/total_amount'
        unit_price:
          $ref: '#/components/schemas/unit_price'
        tax_amount:
          $ref: '#/components/schemas/amounts'
        quantity:
          $ref: '#/components/schemas/quantity'
        uom:
          type: string
          example: string
        upc:
          type: string
          example: string
        sku:
          $ref: '#/components/schemas/sku'
        isbn:
          $ref: '#/components/schemas/isbn'
        brand:
          $ref: '#/components/schemas/brand'
        manufacturer:
          $ref: '#/components/schemas/manufacturer'
        category:
          $ref: '#/components/schemas/category'
        collections:
          $ref: '#/components/schemas/collections'
        tags:
          $ref: '#/components/schemas/tag'
        color:
          $ref: '#/components/schemas/color'
        size:
          $ref: '#/components/schemas/size'
        weight:
          $ref: '#/components/schemas/total_weight'
        image_url:
          $ref: '#/components/schemas/image_url'
        details_url:
          type: string
          description: The URL for the item's details.
          example: 'https://boltswagstore.com/inventory/hats/red-hat.png'
        type:
          $ref: '#/components/schemas/type'
        taxable:
          $ref: '#/components/schemas/taxable'
        properties:
          $ref: '#/components/schemas/item_properties'
        item_group:
          $ref: '#/components/schemas/item_group'
        shipment_type:
          $ref: '#/components/schemas/item_shipment_type'
        customizations:
          type: array
          items:
            type: object
            required:
              - name
              - price
              - attributes
            properties:
              name:
                $ref: '#/components/schemas/customizations_name'
              price:
                $ref: '#/components/schemas/amounts'
              attributes:
                $ref: '#/components/schemas/metadata_component'
        bolt_product_id:
          $ref: '#/components/schemas/bolt_product_id'
        gift_options:
          $ref: '#/components/schemas/gift_options'
    items:
      type: array
      description: A list of items.
      items:
        $ref: '#/components/schemas/item'
    item_add:
      type: object
      properties:
        product_id:
          $ref: '#/components/schemas/product_id'
        price:
          $ref: '#/components/schemas/price'
        currency:
          $ref: '#/components/schemas/currency_iso'
        quantity:
          $ref: '#/components/schemas/quantity'
    items_add:
      type: array
      description: A list of items to add to the cart.
      items:
        $ref: '#/components/schemas/item_add'
    item_property:
      type: object
      properties:
        name:
          type: string
          example: a-name
        value:
          type: string
          example: a-value
    item_properties:
      type: array
      items:
        $ref: '#/components/schemas/item_property'
    item_remove:
      type: object
      properties:
        product_id:
          $ref: '#/components/schemas/product_id'
        quantity:
          $ref: '#/components/schemas/quantity'
    items_remove:
      type: array
      description: A list of items to remove from the cart.
      items:
        $ref: '#/components/schemas/item_remove'
    manual_disputes:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency_iso'
        reason:
          type: string
          example: string
        dispute_evidence:
          type: string
          example: Dispute Evidence
        dispute_link:
          type: string
          example: 'https://mystore.com/receipts/234563245'
        delivery_evidence:
          type: string
          example: Delivery Evidence
        delivery_link:
          type: string
          example: 'https://mystore.com/delivery/234563245'
        other_evidence:
          type: string
          example: Other Evidence
        other_link:
          type: string
          example: 'https://mystore.com/other/234563245'
        status:
          type: string
          enum:
            - pending
            - approved
            - denied
          example: pending
    manual_disputes_array:
      type: array
      items:
        $ref: '#/components/schemas/manual_disputes'
    media_audios:
      type: array
      description: List of URLs
      items:
        $ref: '#/components/schemas/product_media_audio'
    media_videos:
      type: array
      description: List of URLs
      items:
        $ref: '#/components/schemas/product_media_video'
    media_urls:
      type: array
      description: List of URLs
      items:
        $ref: '#/components/schemas/product_media_url'
    merchant_division:
      type: object
      required:
        - merchant_id
        - description
        - is_universal_merchant_api
        - is_webhooks_v2
        - shipping_url
        - tax_url
      properties:
        id:
          $ref: '#/components/schemas/merchant_division_id'
        merchant_id:
          $ref: '#/components/schemas/merchant_id'
        public_id:
          $ref: '#/components/schemas/merchant_division_public_id'
        description:
          $ref: '#/components/schemas/merchant_division_description'
        logo:
          $ref: '#/components/schemas/merchant_logo'
        platform:
          $ref: '#/components/schemas/merchant_platform'
        hook_url:
          $ref: '#/components/schemas/merchant_hook_url'
        hook_type:
          $ref: '#/components/schemas/webhooks_type'
        is_universal_merchant_api:
          type: boolean
          description: Defines whether or not the Universal API method is in use. **Nullable** for Transactions Details.
          example: true
        is_webhooks_v2:
          type: boolean
          description: Defines whether or not the second version of Bolt's webhooks is in use. **Nullable** for Transactions Details.
          example: true
        shipping_and_tax_url:
          type: string
          description: The endpoint URL provided by the merchant to Bolt for shipping and tax calculations.
          example: 'https://mystore.com/api/v1/shipping_and_tax'
        shipping_url:
          type: string
          description: The endpoint URL provided by the merchant to Bolt for shipping calculations. **Nullable** for Transactions Details.
          example: 'https://mystore.com/api/v1/shipping'
        tax_url:
          type: string
          description: The endpoint URL provided by the merchant to Bolt for tax calculations. **Nullable** for Transactions Details.
          example: 'https://mystore.com/api/v1/tax'
        create_order_url:
          type: string
          description: The endpoint URL provided by the merchant to Bolt to create orders. **Nullable** for Transactions Details.
          example: 'https://mystore.com/api/v1/create_order'
        universal_merchant_api_url:
          $ref: '#/components/schemas/merchant_universal_merchant_api_url'
        debug_url:
          $ref: '#/components/schemas/merchant_debug_url'
        update_cart_url:
          type: string
          description: The endpoint URL provided by the merchant to Bolt to pass cart updates.
          example: 'https://mystore.com/api/v1/cart_update'
        account_page_url:
          $ref: '#/components/schemas/merchant_account_page_url'
        oauth_redirect_url:
          $ref: '#/components/schemas/merchant_oauth_redirect_url'
        oauth_logout_url:
          $ref: '#/components/schemas/merchant_oauth_logout_url'
        get_account_url:
          $ref: '#/components/schemas/merchant_get_account_url'
        validate_additional_account_data_url:
          $ref: '#/components/schemas/merchant_validate_additional_account_data_url'
        terms_of_service_url:
          $ref: '#/components/schemas/merchant_terms_of_service_url'
        privacy_policy_url:
          $ref: '#/components/schemas/merchant_privacy_policy_url'
        plugin_config_url:
          $ref: '#/components/schemas/merchant_plugin_config_url'
        product_info_url:
          $ref: '#/components/schemas/merchant_product_info_url'
    merchant_logo:
      type: object
      properties:
        domain:
          $ref: '#/components/schemas/merchant_division_domain'
        resource:
          $ref: '#/components/schemas/merchant_division_logo'
    metadata_component:
      type: object
      properties:
        key1:
          type: string
          example: value1
        key2:
          type: string
          example: value2
    order:
      type: object
      properties:
        token:
          $ref: '#/components/schemas/order_token'
        cart:
          $ref: '#/components/schemas/cart_order'
        user_note:
          $ref: '#/components/schemas/user_note'
        external_data:
          $ref: '#/components/schemas/external_data'
        dynamic_content:
          type: object
          description: Contains all dynamic content fields.
          properties:
            shipping_info_notice:
              type: string
              example: A Notice Message
            payment_notice:
              type: string
              example: A Notice Message
            shipping_notice:
              type: string
              example: A Notice Message
            order_notice:
              type: string
              example: A Notice Message
            custom_fields:
              $ref: '#/components/schemas/custom_fields2'
            hide_apm:
              $ref: '#/components/schemas/hide_apms'
            gift_option_view:
              $ref: '#/components/schemas/gift_option_view'
    order_create:
      type: object
      properties:
        cart:
          $ref: '#/components/schemas/order_create_cart'
    order_create_cart:
      type: object
      required:
        - currency
      properties:
        total_amount:
          $ref: '#/components/schemas/total_amount'
        items:
          $ref: '#/components/schemas/items'
        discounts:
          $ref: '#/components/schemas/discounts'
        order_reference:
          $ref: '#/components/schemas/order_reference'
        display_id:
          $ref: '#/components/schemas/display_id'
        cart_url:
          $ref: '#/components/schemas/cart_url'
        currency:
          $ref: '#/components/schemas/currency_iso'
        metadata:
          type: array
          items:
            type: object
            properties:
              key1:
                type: string
                example: value 1
    order_decision:
      type: object
      description: Decision and score for an order.
      properties:
        score:
          $ref: '#/components/schemas/order_decision_score'
        decision_factors:
          $ref: '#/components/schemas/risk_decision_factors'
    order_generate_cart:
      type: object
      description: The cart associated to the order token.
      properties:
        order_reference:
          $ref: '#/components/schemas/order_reference'
        cart_url:
          $ref: '#/components/schemas/cart_url'
        total_amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency_iso'
        items:
          $ref: '#/components/schemas/items'
        discounts:
          $ref: '#/components/schemas/discounts_order_generate'
        metadata:
          $ref: '#/components/schemas/metadata_component'
    order_webhook:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/order_status_type'
        metadata:
          $ref: '#/components/schemas/publisher_order_metadata'
        cart:
          type: object
          properties:
            order_reference:
              $ref: '#/components/schemas/order_reference'
            display_id:
              $ref: '#/components/schemas/display_id'
            total_amount:
              $ref: '#/components/schemas/amounts'
            tax_amount:
              $ref: '#/components/schemas/amounts'
            items:
              $ref: '#/components/schemas/order_publisher_items'
            shipments:
              $ref: '#/components/schemas/order_publisher_cart_shipments'
            metadata:
              type: object
              properties:
                immutable_quote_id:
                  type: integer
                  description: The immutable quote ID.
                  example: '377'
            subtotal_amount:
              $ref: '#/components/schemas/amounts'
            shipping_amount:
              $ref: '#/components/schemas/amounts'
            discount_amount:
              $ref: '#/components/schemas/amounts'
    order_publisher_items:
      type: array
      description: A list of items.
      items:
        $ref: '#/components/schemas/order_publisher_item'
    order_publisher_item:
      type: object
      description: An item with properties.
      properties:
        bolt_product_id:
          $ref: '#/components/schemas/bolt_product_id'
        reference:
          $ref: '#/components/schemas/reference'
        name:
          $ref: '#/components/schemas/name_item'
        total_amount:
          $ref: '#/components/schemas/amounts'
        unit_price:
          $ref: '#/components/schemas/amounts'
        quantity:
          $ref: '#/components/schemas/quantity'
        sku:
          $ref: '#/components/schemas/sku'
        properties:
          $ref: '#/components/schemas/properties'
        image_url:
          $ref: '#/components/schemas/image_url'
        taxable:
          $ref: '#/components/schemas/taxable'
        type:
          $ref: '#/components/schemas/type'
        description:
          $ref: '#/components/schemas/description'
    order_publisher_cart_shipment:
      type: object
      description: A cart that is being prepared for shipment
      properties:
        shipping_address:
          $ref: '#/components/schemas/shipping_address'
        shipping_method:
          $ref: '#/components/schemas/shipping_method'
        reference:
          $ref: '#/components/schemas/reference'
        service:
          $ref: '#/components/schemas/service'
        cost:
          $ref: '#/components/schemas/cost'
        tax_amount:
          $ref: '#/components/schemas/amounts'
    order_publisher_cart_shipments:
      type: array
      description: A list of shipments.
      items:
        $ref: '#/components/schemas/order_publisher_cart_shipment'
    order_publisher_cart_order_shipping_address:
      $ref: '#/components/schemas/order_publisher_cart_shipments'
    package_dimension:
      type: object
      description: 'Contains the package''s width, eight, depth, and unit details.'
      properties:
        width:
          $ref: '#/components/schemas/width'
        height:
          $ref: '#/components/schemas/height'
        depth:
          $ref: '#/components/schemas/depth'
        unit:
          $ref: '#/components/schemas/dimension_unit'
    package_weights:
      type: object
      properties:
        weight:
          $ref: '#/components/schemas/weight'
        unit:
          $ref: '#/components/schemas/weight_unit'
    payment-method:
      oneOf:
        - $ref: '#/components/schemas/payment-method-credit-card'
        - $ref: '#/components/schemas/payment-method-paypal'
        - $ref: '#/components/schemas/payment-method-affirm'
        - $ref: '#/components/schemas/payment-method-afterpay'
        - $ref: '#/components/schemas/payment-method-klarna'
        - $ref: '#/components/schemas/payment-method-klarna-account'
        - $ref: '#/components/schemas/payment-method-klarna-paynow'
      discriminator:
        propertyName: .tag
        mapping:
          credit_card: '#/components/schemas/payment-method-credit-card'
          paypal: '#/components/schemas/payment-method-paypal'
          affirm: '#/components/schemas/payment-method-affirm'
          afterpay: '#/components/schemas/payment-method-afterpay'
          klarna: '#/components/schemas/payment-method-klarna'
          klarna_account: '#/components/schemas/payment-method-klarna-account'
          klarna_paynow: '#/components/schemas/payment-method-klarna-paynow'
    payment-method-extended:
      oneOf:
        - $ref: '#/components/schemas/payment-method-reference'
        - $ref: '#/components/schemas/payment-method-credit-card'
        - $ref: '#/components/schemas/payment-method-paypal'
        - $ref: '#/components/schemas/payment-method-affirm'
        - $ref: '#/components/schemas/payment-method-afterpay'
        - $ref: '#/components/schemas/payment-method-klarna'
        - $ref: '#/components/schemas/payment-method-klarna-account'
        - $ref: '#/components/schemas/payment-method-klarna-paynow'
      discriminator:
        propertyName: .tag
        mapping:
          id: '#/components/schemas/payment-method-reference'
          credit_card: '#/components/schemas/payment-method-credit-card'
          paypal: '#/components/schemas/payment-method-paypal'
          affirm: '#/components/schemas/payment-method-affirm'
          afterpay: '#/components/schemas/payment-method-afterpay'
          klarna: '#/components/schemas/payment-method-klarna'
          klarna_account: '#/components/schemas/payment-method-klarna-account'
          klarna_paynow: '#/components/schemas/payment-method-klarna-paynow'
    payment-method-credit-card:
      allOf:
        - type: object
          required: [.tag, type, billing_address]
          properties:
            .tag:
              type: string
              enum: [credit_card]
              example: credit_card
            id:
              type: string
              format: id
              readOnly: true
              example: X5h6j8uLpVGK
            billing_address:
              $ref: '#/components/schemas/address-reference'
        - $ref: '#/components/schemas/credit-card'
    payment-method-paypal:
      type: object
      required: [.tag, success, cancel]
      properties:
        .tag:
          type: string
          enum: [paypal]
          example: paypal
        success_url:
          type: string
          description: Redirect URL for successful PayPal transaction.
          format: uri
          writeOnly: true
          example: www.example.com/handle_paypal_success
        cancel_url:
          type: string
          description: Redirect URL for canceled PayPal transaction.
          format: uri
          writeOnly: true
          example: www.example.com/handle_paypal_cancel
    payment-method-affirm:
      type: object
      required: [.tag, return_url]
      properties:
        .tag:
          type: string
          enum: [affirm]
          example: affirm
        return_url:
          type: string
          description: Return URL to return to after payment completion in Affirm.
          format: uri
          writeOnly: true
          example: www.example.com/handle_affirm_success
    payment-method-afterpay:
      type: object
      required: [.tag, return_url]
      properties:
        .tag:
          type: string
          enum: [afterpay]
          example: afterpay
        return_url:
          type: string
          description: Return URL to return to after payment completion in Afterpay.
          format: uri
          writeOnly: true
          example: www.example.com/handle_afterpay_success
    payment-method-klarna:
      type: object
      required: [.tag, return_url]
      properties:
        .tag:
          type: string
          enum: [klarna]
          example: klarna
        return_url:
          type: string
          description: Return URL to return to after payment completion in Klarna.
          format: uri
          writeOnly: true
          example: www.example.com/handle_klarna_success
    payment-method-klarna-account:
      type: object
      required: [.tag, return_url]
      properties:
        .tag:
          type: string
          enum: [klarna_account]
          example: klarna_account
        return_url:
          type: string
          description: Return URL to return to after payment completion in Klarna.
          format: uri
          writeOnly: true
          example: www.example.com/handle_klarna_account_success
    payment-method-klarna-paynow:
      type: object
      required: [.tag, return_url]
      properties:
        .tag:
          type: string
          enum: [klarna_paynow]
          example: klarna_paynow
        return_url:
          type: string
          description: Return URL to return to after payment completion in Klarna.
          format: uri
          writeOnly: true
          example: www.example.com/handle_klarna_paynow_success
    payment-method-reference:
      type: object
      required: [.tag, id]
      properties:
        .tag:
          type: string
          enum: [id]
          example: id
        id:
          type: string
          format: id
          description: Payment ID of the saved Bolt Payment method.
          example: X5h6j8uLpVGK
    payment_method:
      type: string
      description: The payment method used for this order.
      enum:
        - payment_card
        - paypal
        - afterpay
        - applepay
        - amazon_pay
        - alliance_data
        - affirm
        - klarna
        - radial_paypal
        - sezzle
    phones:
      type: array
      description: A list of phone numbers.
      items:
        $ref: '#/components/schemas/phones_with_country_code'
    phones_with_country_code:
      type: array
      description: A list of phone numbers.
      items:
        type: object
        description: A phone number with country code.
        properties:
          id:
            $ref: '#/components/schemas/phone_id'
          number:
            $ref: '#/components/schemas/phone'
          country_code:
            $ref: '#/components/schemas/phone_country_code'
          status:
            $ref: '#/components/schemas/phone_status'
          priority:
            $ref: '#/components/schemas/phone_priority'
    pickup_address:
      type: object
      properties:
        street_address1:
          $ref: '#/components/schemas/street_address'
        street_address2:
          $ref: '#/components/schemas/street_address'
        street_address3:
          $ref: '#/components/schemas/street_address'
        street_address4:
          $ref: '#/components/schemas/street_address'
        locality:
          $ref: '#/components/schemas/locality'
        region:
          $ref: '#/components/schemas/region'
        postal_code:
          $ref: '#/components/schemas/postal_code'
        country_code:
          $ref: '#/components/schemas/country_code'
        country:
          $ref: '#/components/schemas/country'
    pickup_option:
      type: object
      description: A pickup option.
      properties:
        reference:
          $ref: '#/components/schemas/reference'
        signature:
          $ref: '#/components/schemas/signature'
        cost:
          $ref: '#/components/schemas/cost'
        tax_amount:
          $ref: '#/components/schemas/tax_amount'
        store_name:
          $ref: '#/components/schemas/name_store'
        pickup_window_open:
          $ref: '#/components/schemas/pickup_window_open'
        pickup_window_close:
          $ref: '#/components/schemas/pickup_window_close'
        address:
          $ref: '#/components/schemas/pickup_address'
        distance:
          $ref: '#/components/schemas/distance'
        distance_unit:
          $ref: '#/components/schemas/distance_unit'
    pickup_options:
      type: array
      description: A list of pickup options.
      items:
        $ref: '#/components/schemas/pickup_option'
    product:
      type: object
      description: A product.
      properties:
        BoltID:
          $ref: '#/components/schemas/bolt_product_id'
        Brand:
          $ref: '#/components/schemas/brand'
        Name:
          $ref: '#/components/schemas/product_name'
        Description:
          $ref: '#/components/schemas/description'
        Multimedia:
          type: object
          description: The media files associated to the product.
          properties:
            ImageURLs:
              $ref: '#/components/schemas/media_urls'
            VideoURLs:
              $ref: '#/components/schemas/media_videos'
            AudioSamples:
              $ref: '#/components/schemas/media_audios'
        Identifiers:
          $ref: '#/components/schemas/product_identifiers'
        Prices:
          $ref: '#/components/schemas/product_prices'
        IsVariantOf:
          $ref: '#/components/schemas/product_variant'
        Availability:
          $ref: '#/components/schemas/availability'
        AvailabilityCount:
          $ref: '#/components/schemas/availability_count'
        Properties:
          $ref: '#/components/schemas/product_properties'
        ItemType:
          $ref: '#/components/schemas/type'
        Taxable:
          $ref: '#/components/schemas/taxable'
    products:
      type: array
      description: The inventory available for a given product.
      items:
        $ref: '#/components/schemas/product'
    product_identifiers:
      type: object
      description: Identifiers for the product.
      properties:
        SKU:
          $ref: '#/components/schemas/sku'
        GTIN:
          $ref: '#/components/schemas/gtin'
        MerchantDivisionID:
          $ref: '#/components/schemas/merchant_division_id'
        MerchantProductID:
          $ref: '#/components/schemas/merchant_product_id'
    product_inventory:
      type: object
      description: The inventory available for a given product.
      properties:
        Current:
          $ref: '#/components/schemas/product'
        Variants:
          $ref: '#/components/schemas/products'
        Parent:
          $ref: '#/components/schemas/product'
        NextCursor:
          $ref: '#/components/schemas/product_next_cursor'
    publisher_item:
      type: object
      description: An item with properties.
      properties:
        BoltProductID:
          $ref: '#/components/schemas/bolt_product_id'
        Quantity:
          $ref: '#/components/schemas/quantity'
        Properties:
          $ref: '#/components/schemas/publisher_properties'
    publisher_items:
      type: array
      description: A list of items.
      items:
        $ref: '#/components/schemas/publisher_item'
    product_metadata:
      type: object
      description: Metadata for the product.
      properties:
        TextLabel:
          $ref: '#/components/schemas/product_property_text_label'
        ImageURL:
          $ref: '#/components/schemas/product_media_url'
        Position:
          $ref: '#/components/schemas/product_property_position'
    publisher_order_metadata:
      type: object
      description: This is a map that can contain several objects indexed by different keys. You can use this to track conversions.
      properties:
        key:
          description: Map Item.
          type: object
          properties:
            property_1:
              type: string
              description: The first property.
            property_2:
              type: string
              description: The second property.
    product_price:
      type: object
      description: The product's price in cents and currency.
      properties:
        UnitPriceInCents:
          $ref: '#/components/schemas/amount'
        Currency:
          $ref: '#/components/schemas/currency_iso'
    product_prices:
      type: array
      description: List of product prices.
      items:
        $ref: '#/components/schemas/product_price'
    product_properties:
      type: array
      description: Properties associated to the product.
      items:
        type: object
        description: Properties associated to the product.
        properties:
          NameID:
            $ref: '#/components/schemas/product_property_name_id'
          Name:
            $ref: '#/components/schemas/product_property_name'
          ValueID:
            $ref: '#/components/schemas/product_property_value_id'
          Value:
            $ref: '#/components/schemas/product_property_value'
          Metadata:
            $ref: '#/components/schemas/product_metadata'
    product_properties_array:
      $ref: '#/components/schemas/product_properties'
    publisher_properties:
      type: object
      description: Properties associated to the item.
      properties:
        NameID:
          $ref: '#/components/schemas/product_name_id'
        ValueID:
          $ref: '#/components/schemas/product_value_id'
    review:
      type: object
      properties:
        source:
          type: string
          example: internal
        decision:
          type: string
          example: decision
        date:
          type: integer
          example: 1485997169003
        risk_model_result:
          $ref: '#/components/schemas/risk_model_result'
    review_ticket:
      type: object
      description: Internal use only.
      properties:
        id:
          $ref: '#/components/schemas/request_id'
        status:
          $ref: '#/components/schemas/request_status'
        request_deadline:
          $ref: '#/components/schemas/request_deadline'
    risk_decision_factors:
      type: array
      description: The top 5 factors of the fraud decision.
      items:
        $ref: '#/components/schemas/risk_decision_factor'
    risk_insights:
      type: object
      description: |
        Displays fraud decisioning insights based on key factors. This information can either be forwarded via a `risk_insights` transaction webhook type or be polled by sending a `GET` request to Bolt's [transactions endpoint](/api-bolt/#operation/transaction-details).
      properties:
        available:
          $ref: '#/components/schemas/risk_insight_availability'
        fraud_probability:
          $ref: '#/components/schemas/risk_fraud_probability'
        decision_factors:
          $ref: '#/components/schemas/risk_decision_factors'
        payment_instrument_factors:
          $ref: '#/components/schemas/risk_payment_instrument_factors'
    refund_transaction_ids:
      type: array
      description: |
        **Nullable** for Transactions Details.
      items:
        $ref: '#/components/schemas/transaction_id'
    refund_transaction:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/transaction_id'
        type:
          $ref: '#/components/schemas/transaction_type'
        processor:
          $ref: '#/components/schemas/transaction_processor'
        date:
          $ref: '#/components/schemas/transaction_date'
        reference:
          $ref: '#/components/schemas/transaction_reference'
        status:
          $ref: '#/components/schemas/transaction_status'
        from_consumer:
          $ref: '#/components/schemas/from_consumer'
        to_consumer:
          $ref: '#/components/schemas/from_consumer'
        from_credit_card:
          $ref: '#/components/schemas/from_credit_card'
        to_credit_card:
          $ref: '#/components/schemas/from_credit_card'
        amount:
          $ref: '#/components/schemas/amounts'
        authorization:
          $ref: '#/components/schemas/transaction_authorization'
        capture:
          $ref: '#/components/schemas/capture'
        captures:
          $ref: '#/components/schemas/captures'
        credit:
          $ref: '#/components/schemas/credit_status'
        merchant_division:
          $ref: '#/components/schemas/merchant_division'
        merchant:
          $ref: '#/components/schemas/adjust_transaction_merchant'
        transaction_properties:
          $ref: '#/components/schemas/transaction_properties'
        indemnification_decision:
          $ref: '#/components/schemas/indemnification_decision'
        indemnification_reason:
          $ref: '#/components/schemas/indemnification_reason'
        last_viewed_utc:
          $ref: '#/components/schemas/last_viewed_utc'
        last4:
          $ref: '#/components/schemas/card_last4'
        risk_insights:
          $ref: '#/components/schemas/risk_insights'
        order_decision:
          $ref: '#/components/schemas/order_decision'
        merchant_order_number:
          $ref: '#/components/schemas/merchant_order_number'
        splits:
          $ref: '#/components/schemas/splits'
        review_ticket:
          $ref: '#/components/schemas/review_ticket'
    refund_transactions:
      type: array
      description: |
        **Nullable** for Transactions Details.
      items:
        $ref: '#/components/schemas/refund_transaction'
    refund_type:
      type: string
      description: The type of refund.
      enum:
        - single_refund
        - multi_refund
    risk_model_contribution:
      type: object
      properties:
        category:
          type: string
          example: blacklist_email_in_blacklist
          description: Internal categories for risk analysis.
        weight:
          type: string
          example: The weight
    risk_model_contributions:
      type: array
      items:
        $ref: '#/components/schemas/risk_model_contribution'
    risk_model_result:
      type: object
      description: Contains the contributing factors Bolt's risk model used to make a decision.
      properties:
        contributions:
          $ref: '#/components/schemas/risk_model_contributions'
    shipment:
      type: object
      description: A cart that is being prepared for shipment
      properties:
        id:
          $ref: '#/components/schemas/shipping_address_id'
        shipping_address:
          $ref: '#/components/schemas/consumer_billing_address'
        total_weight:
          $ref: '#/components/schemas/total_weight'
        shipping_method:
          $ref: '#/components/schemas/shipping_method'
        carrier:
          $ref: '#/components/schemas/carrier'
        service:
          $ref: '#/components/schemas/service'
        expedited:
          $ref: '#/components/schemas/expedited'
        cost:
          $ref: '#/components/schemas/amounts'
        tax_amount:
          $ref: '#/components/schemas/amounts'
        reference:
          $ref: '#/components/schemas/reference'
        signature:
          $ref: '#/components/schemas/signature'
        package_type:
          $ref: '#/components/schemas/package_type'
        package_dimension:
          $ref: '#/components/schemas/package_dimension'
        package_weights:
          $ref: '#/components/schemas/package_weights'
        default:
          $ref: '#/components/schemas/default'
        estimated_delivery_date:
          $ref: '#/components/schemas/estimated_delivery_date'
        gift_options:
          $ref: '#/components/schemas/gift_options'
    shipments:
      type: array
      description: A list of shipments.
      items:
        type: object
        description: A cart that is being prepared for shipment
        properties:
          shipping_address:
            $ref: '#/components/schemas/shipping_address'
          shipping_method:
            $ref: '#/components/schemas/shipping_method'
          reference:
            $ref: '#/components/schemas/reference'
          service:
            $ref: '#/components/schemas/service'
          cost:
            $ref: '#/components/schemas/cost'
          tax_amount:
            $ref: '#/components/schemas/amounts'
    shipments2:
      type: array
      items:
        $ref: '#/components/schemas/shipment'
    shipping_address:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/shipping_address_id'
        street_address1:
          $ref: '#/components/schemas/street_address'
        street_address2:
          $ref: '#/components/schemas/street_address'
        street_address3:
          $ref: '#/components/schemas/street_address'
        street_address4:
          $ref: '#/components/schemas/street_address'
        locality:
          $ref: '#/components/schemas/locality'
        region:
          $ref: '#/components/schemas/region'
        postal_code:
          $ref: '#/components/schemas/postal_code'
        country_code:
          $ref: '#/components/schemas/country_code'
        country:
          $ref: '#/components/schemas/country'
        name:
          $ref: '#/components/schemas/name_person'
        first_name:
          $ref: '#/components/schemas/first_name'
        last_name:
          $ref: '#/components/schemas/last_name'
        company:
          $ref: '#/components/schemas/company'
        phone:
          $ref: '#/components/schemas/phone'
        email:
          $ref: '#/components/schemas/email'
    shipping_option:
      type: object
      description: A shipping option.
      properties:
        service:
          $ref: '#/components/schemas/service'
        description:
          $ref: '#/components/schemas/shipping_option_description'
        cost:
          $ref: '#/components/schemas/cost'
        tax_amount:
          $ref: '#/components/schemas/tax_amount'
        reference:
          $ref: '#/components/schemas/reference'
        signature:
          $ref: '#/components/schemas/signature'
        estimated_delivery_date:
          $ref: '#/components/schemas/estimated_delivery_date'
        tax_code:
          $ref: '#/components/schemas/tax_code'
        discount_by_membership:
          $ref: '#/components/schemas/discount_membership'
        default:
          $ref: '#/components/schemas/shipping_default'
        description_tooltips:
          $ref: '#/components/schemas/shipping_option_description_tooltips'
    shipping_options:
      type: array
      description: A list of shipping options.
      items:
        $ref: '#/components/schemas/shipping_option'
    shipping_options_combined:
      type: array
      description: A list of shipping options.
      items:
        $ref: '#/components/schemas/shipping_option_combined'
    shipping_to_store_option:
      type: object
      description: A shipping option.
      properties:
        service:
          $ref: '#/components/schemas/service'
        reference:
          $ref: '#/components/schemas/reference'
        signature:
          $ref: '#/components/schemas/reference'
        cost:
          $ref: '#/components/schemas/cost'
        tax_amount:
          $ref: '#/components/schemas/tax_amount'
        store_name:
          $ref: '#/components/schemas/name_store'
        address:
          $ref: '#/components/schemas/shipping_address'
        distance:
          $ref: '#/components/schemas/distance'
        distance_unit:
          $ref: '#/components/schemas/distance_unit'
    shipping_to_store_options:
      type: array
      description: A list of ship-to-store options.
      items:
        $ref: '#/components/schemas/shipping_to_store_option'
    shipment_type:
      type: string
      enum:
        - unknown
        - door_delivery
        - ship_to_store
        - in_store_pickup
        - ship_to_home_only
    shipping_option_combined:
      type: object
      description: A shipping option.
      properties:
        service:
          $ref: '#/components/schemas/service'
        cost:
          $ref: '#/components/schemas/cost'
        tax_amount:
          $ref: '#/components/schemas/tax_amount'
        reference:
          $ref: '#/components/schemas/reference'
        signature:
          $ref: '#/components/schemas/signature'
        estimated_delivery_date:
          $ref: '#/components/schemas/estimated_delivery_date'
        tax_code:
          $ref: '#/components/schemas/tax_code'
    shipping_option_description_tooltip:
      type: object
      description: An  <span id=\"1\">optional tooltip</span> for a shipping option that supports a maximum of 60 characters (does not include HTML). This tooltip is displayed beneath the shipping option.
      properties:
        target:
          $ref: '#/components/schemas/shipping_option_description_tooltip_target'
        html_content:
          $ref: '#/components/schemas/shipping_option_description_tooltip_content'
    shipping_option_description_tooltips:
      type: array
      description: A list shipping tooltips.
      items:
        $ref: '#/components/schemas/shipping_option_description_tooltip'
    source_transaction:
      type: object
      description: |
        **Nullable** for Transactions Details.
      properties:
        id:
          $ref: '#/components/schemas/transaction_id'
        type:
          $ref: '#/components/schemas/transaction_type'
        processor:
          $ref: '#/components/schemas/transaction_processor'
        date:
          $ref: '#/components/schemas/transaction_date'
        reference:
          $ref: '#/components/schemas/transaction_reference'
        status:
          $ref: '#/components/schemas/transaction_status'
        from_consumer:
          $ref: '#/components/schemas/from_consumer'
        to_consumer:
          $ref: '#/components/schemas/from_consumer'
        from_credit_card:
          $ref: '#/components/schemas/from_credit_card'
        to_credit_card:
          $ref: '#/components/schemas/from_credit_card'
        amount:
          $ref: '#/components/schemas/amounts'
        authorization:
          $ref: '#/components/schemas/transaction_authorization'
        capture:
          $ref: '#/components/schemas/capture'
        captures:
          $ref: '#/components/schemas/captures'
        credit:
          $ref: '#/components/schemas/credit_status'
        merchant_division:
          $ref: '#/components/schemas/merchant_division'
        merchant:
          $ref: '#/components/schemas/adjust_transaction_merchant'
        transaction_properties:
          $ref: '#/components/schemas/risk_payment_instrument_factors'
        indemnification_decision:
          $ref: '#/components/schemas/indemnification_decision'
        indemnification_reason:
          $ref: '#/components/schemas/indemnification_reason'
        order_decision:
          $ref: '#/components/schemas/order_decision'
        merchant_order_number:
          $ref: '#/components/schemas/merchant_order_number'
        splits:
          $ref: '#/components/schemas/splits'
        review_ticket:
          $ref: '#/components/schemas/review_ticket'
    tags:
      type: array
      description: A list of tags.
      items:
        $ref: '#/components/schemas/tag'
    timeline:
      type: array
      description: timeline of actions on a transaction
      items:
        $ref: '#/components/schemas/timeline_event'
    timeline_consumer:
      type: object
      description: The consumer associated to the note.
      properties:
        id:
          $ref: '#/components/schemas/consumer_id'
        first_name:
          $ref: '#/components/schemas/first_name'
        last_name:
          $ref: '#/components/schemas/last_name'
    timeline_event:
      type: object
      description: One event on the timeline.
      properties:
        date:
          $ref: '#/components/schemas/timeline_date'
        type:
          $ref: '#/components/schemas/timeline_type'
        note:
          $ref: '#/components/schemas/timeline_note'
        amount:
          $ref: '#/components/schemas/amounts'
        transaction:
          $ref: '#/components/schemas/timeline_transaction'
        consumer:
          $ref: '#/components/schemas/timeline_consumer'
        review:
          $ref: '#/components/schemas/review'
        address_change:
          $ref: '#/components/schemas/address_change'
        visibility:
          $ref: '#/components/schemas/timeline_visiblity'
    total_weight:
      type: object
      properties:
        weight:
          $ref: '#/components/schemas/weight'
        unit:
          $ref: '#/components/schemas/weight_unit'
    timeline_transaction:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/transaction_id'
        type:
          $ref: '#/components/schemas/transaction_type'
        processor:
          $ref: '#/components/schemas/transaction_processor'
        date:
          $ref: '#/components/schemas/transaction_date'
        reference:
          $ref: '#/components/schemas/transaction_reference'
        status:
          $ref: '#/components/schemas/transaction_status'
        from_consumer:
          $ref: '#/components/schemas/from_consumer'
        to_consumer:
          $ref: '#/components/schemas/from_consumer'
        from_credit_card:
          $ref: '#/components/schemas/from_credit_card'
        to_credit_card:
          $ref: '#/components/schemas/from_credit_card'
        amount:
          $ref: '#/components/schemas/amounts'
        authorization:
          $ref: '#/components/schemas/transaction_authorization'
        capture:
          $ref: '#/components/schemas/capture'
        captures:
          $ref: '#/components/schemas/captures'
        credit:
          $ref: '#/components/schemas/credit'
        merchant_division:
          $ref: '#/components/schemas/merchant_division'
        merchant:
          $ref: '#/components/schemas/adjust_transaction_merchant'
        transaction_properties:
          $ref: '#/components/schemas/transaction_properties'
        indemnification_decision:
          $ref: '#/components/schemas/indemnification_decision'
        indemnification_reason:
          $ref: '#/components/schemas/indemnification_reason'
        last_viewed_utc:
          $ref: '#/components/schemas/last_viewed_utc'
        last4:
          $ref: '#/components/schemas/card_last4'
        risk_insights:
          $ref: '#/components/schemas/risk_insights'
        order_decision:
          $ref: '#/components/schemas/order_decision'
        merchant_order_number:
          $ref: '#/components/schemas/merchant_order_number'
        splits:
          $ref: '#/components/schemas/splits'
        review_ticket:
          $ref: '#/components/schemas/review_ticket'
    transaction_custom_fields:
      type: object
      properties:
        field:
          $ref: '#/components/schemas/custom_fields'
        response:
          type: string
          example: A response.
    transaction_custom_fields_array:
      type: array
      items:
        $ref: '#/components/schemas/transaction_custom_fields'
    transaction_checkboxes:
      type: array
      $ref: '#/components/schemas/checkbox'
    transaction_recharged:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/transaction_id'
        type:
          $ref: '#/components/schemas/transaction_type'
        processor:
          $ref: '#/components/schemas/transaction_processor'
        date:
          $ref: '#/components/schemas/transaction_date'
        reference:
          $ref: '#/components/schemas/transaction_reference'
        status:
          $ref: '#/components/schemas/transaction_status'
        from_consumer:
          $ref: '#/components/schemas/credit_card_user'
        to_consumer:
          $ref: '#/components/schemas/credit_card_user'
        from_credit_card:
          $ref: '#/components/schemas/credit_card'
        amount:
          $ref: '#/components/schemas/amounts'
        authorization:
          $ref: '#/components/schemas/transaction_authorization'
        merchant_division:
          $ref: '#/components/schemas/merchant_division'
        merchant:
          $ref: '#/components/schemas/adjust_transaction_merchant'
        indemnification_decision:
          $ref: '#/components/schemas/indemnification_decision'
        indemnification_reason:
          $ref: '#/components/schemas/indemnification_reason'
        splits:
          $ref: '#/components/schemas/splits'
    transaction_reviewed:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/transaction_id'
        type:
          $ref: '#/components/schemas/transaction_type'
        processor:
          $ref: '#/components/schemas/transaction_processor'
        date:
          $ref: '#/components/schemas/transaction_date'
        reference:
          $ref: '#/components/schemas/transaction_reference'
        status:
          $ref: '#/components/schemas/transaction_status'
        from_consumer:
          $ref: '#/components/schemas/credit_card_user'
        to_consumer:
          $ref: '#/components/schemas/credit_card_user'
        from_credit_card:
          $ref: '#/components/schemas/credit_card'
        amount:
          $ref: '#/components/schemas/amounts'
        authorization:
          $ref: '#/components/schemas/transaction_authorization'
        captures:
          type: array
          description: A list of captures.
          items:
            type: object
            description: A capture.
            properties:
              id:
                type: string
                description: The capture's unique ID.
                example: afda45gfa3fa2
              amount:
                $ref: '#/components/schemas/amounts'
              status:
                $ref: '#/components/schemas/transaction_authorization_status'
              splits:
                $ref: '#/components/schemas/splits'
        merchant_division:
          $ref: '#/components/schemas/merchant_division'
        merchant:
          $ref: '#/components/schemas/adjust_transaction_merchant'
        indemnification_decision:
          $ref: '#/components/schemas/indemnification_decision'
        indemnification_reason:
          $ref: '#/components/schemas/indemnification_reason'
        risk_insights:
          $ref: '#/components/schemas/risk_insights'
    transaction_authorized:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/transaction_id'
        type:
          $ref: '#/components/schemas/transaction_type'
        processor:
          $ref: '#/components/schemas/transaction_processor'
        date:
          $ref: '#/components/schemas/transaction_date'
        reference:
          $ref: '#/components/schemas/transaction_reference'
        status:
          $ref: '#/components/schemas/transaction_status'
        from_consumer:
          $ref: '#/components/schemas/credit_card_user'
        to_consumer:
          $ref: '#/components/schemas/credit_card_user'
        from_credit_card:
          $ref: '#/components/schemas/credit_card'
        amount:
          $ref: '#/components/schemas/amounts'
        authorization:
          $ref: '#/components/schemas/transaction_authorization'
        merchant_division:
          $ref: '#/components/schemas/merchant_division'
        merchant:
          $ref: '#/components/schemas/adjust_transaction_merchant'
        indemnification_decision:
          $ref: '#/components/schemas/indemnification_decision'
        indemnification_reason:
          $ref: '#/components/schemas/indemnification_reason'
        splits:
          $ref: '#/components/schemas/splits'
    transaction_apms:
      type: array
      description: Token for the alternate payment method.
      properties:
        metadata:
          type: array
          properties:
            apm_token:
              description: Token for the alternate payment method.
              type: string
    transaction_authorization:
      type: object
      required:
        - reason
        - status
      properties:
        auth:
          type: string
          example: auth
        avs_response:
          type: string
          example: avs
        cvv_response:
          type: string
          example: cvv
        metadata:
          type: object
          description: The metadata associated with the authorization.
          properties:
            processor_card_token:
              $ref: '#/components/schemas/processor_card_token'
            processor_shopperReference:
              $ref: '#/components/schemas/processor_shopperReference'
            processor_token_alias:
              $ref: '#/components/schemas/processor_token_alias'
        processor:
          $ref: '#/components/schemas/transaction_processor'
        reason:
          $ref: '#/components/schemas/transaction_authorization_reason'
        status:
          $ref: '#/components/schemas/transaction_authorization_status'
    transaction_from_credit_card:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/card_id'
        last4:
          $ref: '#/components/schemas/card_last4'
        network:
          $ref: '#/components/schemas/card_network'
        display_network:
          $ref: '#/components/schemas/card_network'
    transaction_from_user:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/transaction_id'
        first_name:
          $ref: '#/components/schemas/first_name'
        last_name:
          $ref: '#/components/schemas/last_name'
        phones:
          $ref: '#/components/schemas/phones'
        emails:
          $ref: '#/components/schemas/emails'
    transaction_operational_processor:
      type: object
      required:
        - processor
        - status
      properties:
        processor:
          $ref: '#/components/schemas/transaction_processor'
        status:
          $ref: '#/components/schemas/transaction_processor_status'
    transaction_operational_processors:
      type: array
      description: |
        **Nullable** for Transactions Details.
      items:
        $ref: '#/components/schemas/transaction_operational_processor'
    transaction_properties:
      type: object
      properties:
        avs_result:
          type: string
          example: avs result
        cvv_result:
          type: string
          example: cvv result
    transaction_publisher_from_credit_card:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/card_id'
        last4:
          $ref: '#/components/schemas/card_last4'
        network:
          $ref: '#/components/schemas/card_network'
        display_network:
          $ref: '#/components/schemas/card_network'
    transaction_publisher_refund_transactions:
      type: array
      description: List of transaction IDs.
      items:
        $ref: '#/components/schemas/transaction_id'
    transaction_publisher_items:
      type: array
      description: A list of items.
      items:
        $ref: '#/components/schemas/transaction_publisher_item'
    transaction_publisher_item:
      type: object
      description: An item with properties.
      properties:
        reference:
          $ref: '#/components/schemas/reference'
        name:
          $ref: '#/components/schemas/name_item'
        total_amount:
          $ref: '#/components/schemas/amounts'
        unit_price:
          $ref: '#/components/schemas/amounts'
        quantity:
          $ref: '#/components/schemas/quantity'
        sku:
          $ref: '#/components/schemas/sku'
        properties:
          $ref: '#/components/schemas/properties'
        image_url:
          $ref: '#/components/schemas/image_url'
        taxable:
          $ref: '#/components/schemas/taxable'
        type:
          $ref: '#/components/schemas/type'
        description:
          $ref: '#/components/schemas/description'
    request_result:
      type: object
      description: the result of the request.
      properties:
        success:
          $ref: '#/components/schemas/request_failed'
    user_identity:
      type: object
      properties:
        first_name:
          $ref: '#/components/schemas/first_name'
        last_name:
          $ref: '#/components/schemas/last_name'
    user_identifier:
      type: object
      properties:
        email:
          $ref: '#/components/schemas/email'
        phone:
          $ref: '#/components/schemas/phone'
        email_id:
          $ref: '#/components/schemas/email_id'
        phone_id:
          $ref: '#/components/schemas/phone_id'
    variants:
      type: array
      description: A collection of product variations linked to the current product that can vary in size and color or other properties.
      items:
        $ref: '#/components/schemas/product'
    1005_code:
      type: integer
      format: int64
      description: Invalid merchant key.
      example: 1005
    1005_message:
      type: string
      description: Authentication error. Invalid merchant key.
      example: Authentication error. Invalid merchant key.
    address_change_id:
      type: string
      description: The Unique ID for the change request.
      example: a7sd7f23ghjk5lyt42f
    address_change_status:
      type: string
      description: The status of the request.
      enum:
        - pending
        - cancelled
        - approved
        - rejected
    address_change_ticket_id:
      type: string
      description: The ID of the ticket.
      example: ticket-25
    address_change_ticket_status:
      type: string
      description: The status of the request.
      enum:
        - pending
        - open
        - closed
    address_change_timestamp:
      type: integer
      description: The timestamp of the address change request.
      example: 1615407159447
    create-full-account:
      type: object
      properties:
        account_details:
          $ref: '#/components/schemas/account'
        customer_data_id:
          type: string
          description: A unique identifier for this account on the merchant platform.
          example: "5FEB9028D"
    account:
      type: object
      required: [addresses, payment_methods]
      properties:
        addresses:
          type: array
          description: A list of addresses associated with this account.
          items:
            $ref: '#/components/schemas/address-listing'
        payment_methods:
          type: array
          description: A list of payment methods associated with this account.
          items:
            $ref: '#/components/schemas/payment-method'
        profile:
          $ref: '#/components/schemas/profile'
    account-test-creation-data:
      type: object
      required: [email, email_state, phone, phone_state, otp_code, oauth_code]
      properties:
        email:
          type: string
          format: email
          readOnly: true
          example: alice@example.com
        email_state:
          type: string
          enum: [missing, unverified, verified]
          example: unverified
        phone:
          type: string
          format: phone
          readOnly: true
          example: '+14155550199'
        phone_state:
          type: string
          enum: [missing, unverified, verified]
          example: verified
        is_migrated:
          type: boolean
          writeOnly: true
          example: true
        has_address:
          type: boolean
          writeOnly: true
          example: true
        has_credit_card:
          type: boolean
          writeOnly: true
          example: true
        otp_code:
          type: string
          readOnly: true
          example: '123456'
        oauth_code:
          type: string
          readOnly: true
          example: 7GSjMRSHs6Ak7C_zvVW6P2IhZOHxMK7HZKW1fMX85ms  
    account_login_status:
      type: string
      enum:
        - success
        - failure
      example: success
    amount:
      type: integer
      description: The amount in cents. **Nullable** for Transactions Details.
      example: 754
    auto_approved:
      type: boolean
      description: 'If merchant has whitelisted, is `true`.'
      example: false
    availability:
      type: string
      description: Determines if the product is available.
      enum:
        - out_of_stock
        - in_stock
        - pre_order
      example: in_stock
    availability_count:
      type: integer
      description: How many are in stock.
      example: '19'
    authorization_id:
      type: string
      description: The authorization's id.
      example: T1c3p4yBuVYJ9
    authorization_verification_status:
      type: string
      description: 'Used to track the status of micro-authorizations. **Nullable** for Transactions Details. '
      enum:
        - new
        - verified
        - failed
        - expired
      example: new
    authorization_reason_codes:
      type: string
      description: The code matching the rejection reason.
      example: code-1234
    authorization_reason_description:
      type: string
      description: The explanation of the reason code.
      example: Card reported stolen
    billing_address_id:
      type: string
      description: ID for billing address
      example: address-1
    block_listed:
      type: boolean
      description: 'If merchant has block listed, is `true`.'
      example: false
    bolt_product_id:
      type: string
      description: Unique ID generated for a product via the products endpoint.
      example: e2bb0e7e-5625-536f-8ad7-25a26537ee28
    brand:
      type: string
      description: The name of a brand.
      example: Bolt Swagstore
    can_change_shipping_address:
      type: boolean
      description: Defines whether the merchant can update the shipping address after authorization.
      example: true
    capture_id:
      type: string
      description: The unique ID for the capture. **Nullable** for Transactions Details.
      example: BcDE4fafd2a4
    capture_status:
      type: string
      description: The status of the capture. **Nullable** for Transactions Details.
      enum:
        - succeeded
        - declined
        - error
      example: succeeded
    card_bin:
      type: string
      description: The card's BIN. **Nullable** for Transactions Details.
      example: '402201'
    card_expiration:
      type: integer
      description: The card's expiration. **Nullable** for Transactions Details.
      example: 1654041600000
    card_id:
      type: string
      description: The card's ID. **Nullable** for Transactions Details.
      example: AB3rJKam5DhYE
    card_last4:
      type: string
      description: The card's last 4 digits. **Nullable** for Transactions Details.
      example: '4021'
    card_network:
      type: string
      description: The card's network. **Nullable** for Transactions Details.
      enum:
        - American Express
        - Diners Club
        - Discover
        - JCB
        - MasterCard
        - Union Pay
        - Visa
      example: Visa
    card_number:
      type: string
      description: The card number. **Nullable** for Transactions Details.
      example: "1111222233334444"
    card_status:
      type: string
      description: The card's status. **Nullable** for Transactions Details.
      enum:
        - active
        - created
        - inactive
        - transient
      example: active
    card_token:
      type: string
      description: The token for the card. **Nullable** for Transactions Details.
      example: a2b3dDc4cA5e6fg78Bg9hj0kl
    card_token_type:
      type: string
      description: The card's token type. **Nullable** for Transactions Details.
      enum:
        - vantiv
        - applepay
        - bolt
        - stripe
        - plcc
      example: bolt
    carrier:
      type: string
      description: The name of the carrier selected.
      example: FedEx
    cart_url:
      type: string
      description: The URL for the cart.
      example: 'https://boltswagstore.com/orders/123456765432'
    category:
      type: string
      description: A category.
      example: hats
    chargeback_event_content:
      type: string
      description: The context for the chargeback.
      example: First Chargeback
    chargeback_event_time:
      type: integer
      description: The time this single chargeback event ocurred.
      example: 1485997169003
    chargeback_id:
      type: string
      description: The unique ID of the chargeback.
      example: a3ad4d56fd7
    chargeback_reason_code:
      type: string
      description: 'Bolt''s [standardized reason codes](https://help.bolt.com/operations/disputes/dispute-codes/).'
      enum:
        - authorization_failed
        - cancelled_recurring
        - cardholder_dispute
        - currency_error
        - duplicate
        - fraud_general
        - fraud_no_authorization
        - incorrect_amount
        - late_presentment
        - processing_error
        - processor_general
        - product_defective
        - product_not_received
        - product_returned
        - request_for_information
      example: product_not_received
    chargeback_reason:
      type: string
      description: The reason for the chargeback.
      example: string
    chargeback_representment_reply_by_date:
      type: integer
      description: The date of the chargeback.
      example: 1485997169003
    chargeback_representment_result:
      type: string
      description: The result of the chargeback representment.
      enum:
        - none
        - open
        - lost
        - won
      example: won
    checkbox:
      type: object
      description: A checkbox's custom values.
      properties:
        checkbox_id:
          type: string
          example: 3412414
        text:
          type: string
          example: 'I agree to the terms and conditions'
        value:
          type: boolean
          example: true
        required:
          type: boolean
          example: true
        category:
          type: string
          example: "Other"
        type:
          type: string
          example: "static"
        is_custom_field:
          type: boolean
          example: true
    code:
      type: integer
      format: int64
      description: This is an error code.
      example: 2001005
    color:
      type: string
      description: The color.
      example: Red
    collection:
      type: string
      example: summer
    consumer_email_verified:
      type: boolean
      description: True if Bolt has verified this email in the past.  **Nullable** for Transactions Details.
      example: true
    consumer_id:
      type: string
      description: The card-holder's unique ID. **Nullable** for Transactions Details.
      example: b2vghjk2v4c5fgdh3jak
    consumer_platform_account_status:
      type: integer
      description: Used internally for Bolt. Does not display information externally.
      enum:
        - 1
        - 2
        - 3
    consumer_membership_status:
      type: string
      description: True if user has a membership associated to their Bolt Account. **Nullable** for Transactions Details.
      enum:
        - active
        - cancelled
        - disabled
        - free_trial
    company:
      type: string
      description: The company's name
      example: ACME Corp.
    cost:
      type: integer
      description: The cost in cents.
      example: 770
    country_code:
      type: string
      description: The 2-digit country code.
      example: US
    country:
      type: string
      description: The country's name.
      example: Canada
    credit_status:
      type: object
      properties:
        status:
          type: string
          enum:
            - succeeded
            - declined
            - error
            - pending
          description: This is the status of the refund.
    currency_iso:
      type: string
      description: The 3-digit ISO code for the currency. **Nullable** for Transactions Details.
      example: USD
    currency_symbol:
      type: string
      description: The currency symbol used for the amount. **Nullable** for Transactions Details.
      example: $
    customizations_name:
      type: string
      description: The name of the customization.
      example: Bedazzled
    data:
      type: object
      description: Generic wrapper used by Bolt.
    date:
      type: integer
      description: The date.
      example: '1621887799738'
    default:
      type: boolean
      example: false
    depth:
      type: integer
      description: The depth.
      example: 90
    description:
      type: string
      description: The product's description.
      example: Very beautiful and chic.
    dimension_unit:
      type: string
      description: The unit of measurement for an item's dimensions.
      example: cm
    discount_category:
      type: string
      description: The discount's category.
      enum:
        - coupon
        - gift_card
        - managed_giftcard
        - store_credit
        - automatic_promotion
        - membership_discount
        - unknown
      example: coupon
    discount_code:
      type: string
      description: The discount code input by a shopper.
      example: SUMMERFUN15
    discount_description:
      type: string
      description: The discount code's description.
      example: Take 15% off of your order.
    discount_reference:
      type: string
      description: The discount's reference.
      example: discount-1234
    discount_membership:
      type: boolean
      description: Defines if shopper has a membership discount.
      example: false
    discount_type:
      type: string
      enum:
        - fixed_amount
        - percentage
        - shipping
      description: 'The type of discount (e.g., percentage)'
      example: percentage
    discount_uri:
      type: string
      description: The discount's URI.
      example: 'https://boltswagstore.com/discounts/#12345'
    display_id:
      type: string
      description: The displayed ID.
      example: ID-12345
    distance:
      type: integer
      description: The distance as a number.
      example: 2
    distance_unit:
      type: string
      description: The distance unit.
      example: miles
    email:
      type: string
      description: The person's email address.
      example: my.email@gmail.com
    email_id:
      type: string
      description: This is the ID for the email address associated with the shopper.
      example: '123'
    email_priority:
      type: string
      description: This is the priority of the contact method. This field's contents are not displayed in the transaction details view.
      enum:
        - primary
        - listed
      example: primary
    email_status:
      type: string
      description: This is the status of the contact method.
      enum:
        - active
        - pending
        - inactive
      example: active
    event:
      type: string
      description: The kind of event.
      enum:
        - order.create
        - order.shipping_and_tax
        - cart.create
        - cart.update
        - discounts.code.apply
        - example.see.enums
      example: example.see.enums
    expedited:
      type: boolean
      description: True if shipment is expedited.
      example: false
    estimated_delivery_date:
      type: string
      description: The estimated delivery date.
      example: 08-30-2022
    first_name:
      type: string
      description: The person's first name.
      example: Charlotte
    gift_options_message:
      type: string
      description: Includes the gift message written by the shopper.
      example: 'Happy Anniversary, Smoochy Poo!'
    gift_options_wrap:
      type: boolean
      description: Defines whether gift wrapping was requested.
      example: false
    gift_options_cost:
      type: integer
      description: |
        Defines the price of gift wrapping this item. Required if `wrap` = `true`.
      example: 785
    gtin:
      type: string
      description: The product's GTIN.
      example: AB3rJKam5DhYE
    has_dynamic_price:
      type: boolean
      description: Determines if item has dynamic price.
      example: true
    height:
      type: integer
      description: The height.
      example: 103
    hide_apm:
      type: string
      description: Hides alternative payment methods from checkout.
      enum:
        - amazonpay
        - affirm
        - afterpay
        - paypal
        - klarna
        - radialpaypal
    has_bolt_account:
      type: boolean
      description: Determines if user has a Bolt account using their e-mail address or phone number.
      example: true
    icon_asset_path:
      type: string
      description: The asset link for displayed icons. This link varies depending on payment method used.  **Nullable** for Transactions Details.
      example: img/issuer-logos/visa.png
    image_url:
      type: string
      description: The URL for the item's image.
      example: 'https://boltswagstore.com/inventory/hats/red-hat.png'
    isbn:
      type: string
      description: A 13-digit identifier for a book item.
      example: 12-345-678-90123
    is_free_shipping:
      type: boolean
      example: false
    is_store_location:
      type: boolean
      example: false
      description: If `true`, the address is a store location. If `false`, the address is a shipping address.
    item_description:
      type: string
      description: A description for the item added to the cart/order.
      example: ' Large blue satin hat with initials embroidered.'
    item_group:
      type: string
      description: Enables grouping in the checkout UI.
      example: Ships Immediately
    item_shipment_type:
      type: string
      description: The shipment type selected by the shopper.
      enum:
        - unknown
        - door delivery
        - in_store_pickup
        - ship_to_store
    last_viewed_utc:
      type: integer
      description: The last view time as UTC.
      example: 1485997169003
    last_name:
      type: string
      description: The person's last name.
      example: Charles
    locality:
      type: string
      description: 'A locale such as county, district, etc.'
      example: Wayne County
    loyalty_rewards:
      type: array
      description: A list of rewards.
      items:
        $ref: '#/components/schemas/loyalty_reward'
    loyalty_reward:
      type: object
      description: Information about a loyalty reward. Shoppers earn points for their loyalty and can redeem points for rewards.
      properties:
        amount:
          allOf:
            - description: The reward amount in cents.
            - $ref: '#/components/schemas/amount'
            - example: 1000
        points:
          $ref: '#/components/schemas/points'
        type:
          $ref: '#/components/schemas/rewards_type'
        coupon_code:
          $ref: '#/components/schemas/coupon_code'
        source:
          $ref: '#/components/schemas/loyalty_source'
        description:
          $ref: '#/components/schemas/loyalty_description'
        details:
          $ref: '#/components/schemas/loyalty_details'
    points:
      type: integer
      format: int64
      description: The amount of points used for this reward.
      example: 1000
    rewards_type:
      type: string
      description: The type of reward.
      example: coupon
      enum:
        - coupon
      nullable: true
    coupon_code:
      type: string
      description: If `rewards_type` = `coupon`, the value is the coupon code.
      example: SUMMERSALE10
      nullable: true
    loyalty_source:
      type: string
      description: The loyalty platform tied to this reward.
      example: yotpo
      enum:
        - yotpo
    loyalty_description:
      type: string
      description: Summary of the reward that displays to shoppers in checkout.
      example: Get $10 off your next order!
      nullable: true
    loyalty_details:
      type: string
      description: JSON string of additional information about this reward from the loyalty platform.
      example: "{\"amount\": 10}"
      nullable: true
    manufacturer:
      type: string
      description: The name of a manufacturer.
      example: Bolt Factory
    maximum_cost_allowed:
      type: integer
      example: 100
    metadata:
      type: object
      additionalProperties:
        type: string
      description: You can add your own metadata.
      example: This is metadata.
    message:
      type: string
      description: The error message.
      example: This is an error message.
    merchant_created_date:
      type: integer
      description: The date the merchant account was created.  **Nullable** for Transactions Details.
      example: 1485997169003
    merchant_description:
      type: string
      description: The description of the merchant account. **Nullable** for Transactions Details.
      example: Brand Name Here.
    merchant_division_description:
      type: string
      description: The description of the merchant division. **Nullable** for Transactions Details.
      example: Storefront for employees only.
    merchant_division_domain:
      type: string
      description: The URL of the merchant division.
      example: mystore-staging.boltapp.com
    merchant_division_logo:
      type: string
      description: The logo image file for the merchant division.
      example: division-logo.png
    merchant_division_public_id:
      type: string
      description: The unique public ID for one of the merchant's store division.
      example: 4ab56ad7865ada4ad32
    merchant_id:
      type: string
      description: The unique ID for the merchant's Bolt account. A merchant account contains many merchant divisions. **Nullable** for Transactions Details.
      example: 4ab56ad7865ada4ad32
    merchant_public_id:
      type: string
      description: The unique public ID for the merchant's Bolt account. A merchant account contains many merchant divisions.
      example: zSrbabI3MFe8
    merchant_processor_linked:
      type: boolean
      description: Indicates if the merchant account has set up their processor with Bolt.
      example: true
    merchant_time_zone:
      type: string
      description: The timezone of the merchant. **Nullable** for Transactions Details.
      example: America/Los_Angeles
    merchant_division_id:
      type: string
      description: The unique ID for one of the merchant's store divisions.
      example: 4ab56ad7865ada4ad32
    merchant_product_id:
      type: string
      description: The merchant's unique ID for the product.
      example: '881'
    merchant_account_page_url:
      type: string
      description: The URL provided by the merchant for the account page.
      example: 'https://mystore.com/account'
    merchant_create_order_url:
      type: string
      description: The endpoint URL provided by the merchant to Bolt for order creation.
      example: 'https://mystore.com/api/v1/order_create'
    merchant_debug_url:
      type: string
      description: The endpoint URL provided by the merchant for debugging.
      example: 'https://mystore.com/v1/debug'
    merchant_get_account_url:
      type: string
      description: The endpoint URL provided by the merchant to fetch accounts.
      example: 'https://mystore.com/api/v1/account_get'
    merchant_oauth_logout_url:
      type: string
      description: The endpoint URL provided by the merchant for logging out of OAuth accounts.
      example: 'https://mystore.com/api/v1/oauth_logout'
    merchant_hook_url:
      type: string
      description: The endpoint URL provided by the merchant to send webhooks.
      example: 'https://mystore.com/api/v1/hooks'
    merchant_oauth_redirect_url:
      type: string
      description: The endpoint URL provided by the merchant for OAuth redirects.
      example: 'https://mystore.com/api/v1/oauth_redirect'
    merchant_plugin_config_url:
      type: string
      description: The endpoint URL provided by the merchant for checking plugin configuration details.
      example: 'https://mystore.com/api/v1/plugin_config'
    merchant_privacy_policy_url:
      type: string
      description: The endpoint URL provided by the merchant for providing a unique privacy policy.
      example: 'https://mystore.com/api/v1/privacy'
    merchant_product_info_url:
      type: string
      description: The endpoint URL provided by the merchant for checking product details.
      example: 'https://mystore.com/api/v1/product_details'
    merchant_terms_of_service_url:
      type: string
      description: The endpoint URL provided by the merchant for providing unique terms of service.
      example: 'https://mystore.com/api/v1/terms'
    merchant_universal_merchant_api_url:
      type: string
      description: The endpoint URL provided by the merchant to access their universal API.
      example: 'https://mystore.com/api/bolt_universal'
    merchant_validate_additional_account_data_url:
      type: string
      description: The endpoint URL provided by the merchant for validating additional account data.
      example: 'https://mystore.com/api/v1/account_validate'
    merchant_order_number:
      type: string
      description: The merchant's internal order number for this transaction.
      example: O-1234567
    merchant_platform:
      type: string
      description: The type of platform being used for this merchant division.
      enum:
        - none
        - big_commerce
        - shopify
        - magento
        - magento2
        - woo_commerce
        - drupal
        - volusion
        - prestashop
        - netsuite
        - miva
        - commerce_cloud
      example: big_commerce
    multimedia:
      type: string
      description: Type of media.
      example: Sound
    name_item:
      type: string
      description: The name of an item.
      example: Blue Hat
    name_person:
      type: string
      description: The first and last name together as a string.
      example: Charlotte Charles
    name_store:
      type: string
      description: The name of the store.
      example: 'Bolt Swag Store #47'
    options:
      type: string
      example: string option
    order_decision_score:
      type: integer
      description: The total fraud risk score of the order.
      example: '680'
    order_display_id:
      type: string
      description: The order reference.
      example: order-12345
    order_non_bolt:
      type: boolean
      description: Designates if the order was placed outside of Bolt checkout.
      example: false
    order_url:
      type: string
      example: 'https://mystore.com/orders/2345678'
    order_reference:
      type: string
      description: The order reference.
      example: order-12345
    order_received_url:
      type: string
      description: This is a URL used to redirect the shopper when the order is created (optional).
      example: 'https://***.com/confirmation/O-100104040'
    order_status_type:
      type: string
      description: The type of order webhook.
      enum:
        - error
        - pre_transit
        - in_transit
        - out_for_delivery
        - delivered
        - available_for_pickup
        - return_to_sender
        - shipping_failure
        - cancelled
        - unknown
      example: out_for_delivery
    order_status_details:
      type: string
      description: The details that contextualize the order's status.
      example: The order left the post office at 10am today and is out for delivery by 9pm.
    order_tracking_number:
      type: string
      description: The carrier's tracking number for the shipment.
      example: EZ1000000001
    package_type:
      type: string
      description: The type of package.
      example: A big package.
    phone:
      type: string
      description: A phone number without the country code.
      example: 867-5309
    phone_id:
      type: string
      description: This is the ID for the phone number associated with the shopper.
      example: '123'
    phone_country_code:
      type: string
      description: A phone number's country code.
      example: '1'
    phone_priority:
      type: string
      description: This is the priority of the contact method. This field's contents are not displayed in the transaction details view.
      enum:
        - primary
        - listed
      example: primary
    phone_status:
      type: string
      description: This is the status of the contact method.
      enum:
        - active
        - pending
        - inactive
      example: active
    pickup_window_open:
      type: integer
      description: When a store is available for picking up orders.
      example: 1578904185
    pickup_window_close:
      type: integer
      description: When a store not available for picking up orders.
      example: 1578904185
    pin:
      type: integer
      description: The PIN for the credit card.
      example: 123
    postal_code:
      type: string
      description: The postal code.
      example: '11209'
    previous_transaction_id:
      type: string
      description: The ID of the shopper's last transaction.
      example: af1a32f3aga4f5dfa3
    price:
      type: integer
      description: The price of an item.
      example: 991
    processor_card_token:
      type: string
      description: The token associated with the shopper's credit card.
      example: '8416276679724052'
    processor_shopperReference:
      type: string
      description: The token associated with the shopper.
      example: 05446666484094287
    processor_token_alias:
      type: string
      description: The alias token for the processor used.
      example: ''
    processing_initiator:
      type: string
      description: Defines which payment method was used to initiate the transaction.
      enum:
        - initial_card_on_file
        - initial_recurring
        - stored_cardholder_initiated
        - stored_merchant_initiated
        - following_recurring
        - cardholder_initiated
        - recurring
      example:
        - stored_cardholder_initiated
    product_id:
      type: string
      description: The product's unique id.
      example: hat-123
    product_media_audio:
      type: string
      description: 'The URL for an image, video, or audio clip. For Property URLs, this can be used for color and pattern swatches to represent your product variants.'
      example: https//boltswagstore.com/myjam.mp3
    product_media_url:
      type: string
      description: 'The URL for an image, video, or audio clip. For Property URLs, this can be used for color and pattern swatches to represent your product variants.'
      example: https//boltswagstore.com/image.png
    product_media_video:
      type: string
      description: 'The URL for an image, video, or audio clip. For Property URLs, this can be used for color and pattern swatches to represent your product variants.'
      example: https//boltswagstore.com/jurassic-park.mov
    product_name:
      type: integer
      description: The product's readable name.
      example: Pullover Hoodie-XS-Purple
    product_name_id:
      type: string
      description: The product's unique ID associated to the `product.properties.name_id` from the Get Inventory call.
      example: hat-123
    product_next_cursor:
      type: string
      description: The ID of the next variant to link to when pagination is used.
      example: a456789-abadfa67890ada-abafda67890
    product_property_name_id:
      type: integer
      format: int64
      description: The property type's unique ID.
      example: 158
    product_property_name:
      type: string
      description: The property's readable name.
      example: size
    product_property_value:
      type: string
      description: 'The property''s unique value. (e.g., `S` `M` `L` for size properties; `Red` `Green``Blue` for color properties.)'
      example: XS
    product_property_value_id:
      type: integer
      format: int64
      description: The unique ID of the property's value.
      example: 166
    product_property_position:
      type: integer
      description: 'Used to dictate the order of properties displayed (e.g., least > greatest).'
      example: 1
    product_property_text_label:
      type: string
      description: The text label for the property.
      example: pattern
    product_value:
      type: string
      description: The product's unique value ID associated to the `product.properties.value_id` from the Get Inventory call.
      example: value example
    product_value_id:
      type: integer
      description: The product's unique value ID associated to the `product.properties.value_id` from the Get Inventory call.
      example: 4770234
    product_variant:
      type: string
      description: 'The `BoltProductID` of the parent product. If the product is the parent, this ID is the same.'
      example: mens-shoe-86.
    profile:
      type: object
      required: [first_name, last_name, email]
      properties:
        first_name:
          type: string
          description: The given name of the person associated with this profile.
          example: Alice
        last_name:
          type: string
          description: The last name of the person associated with this profile.
          example: Baker
        email:
          type: string
          format: email
          description: The email address asscoiated with this profile.
          example: alice@example.com
        phone:
          type: string
          format: phone
          description: The phone number associated with this profile.
          example: '+14155550199'
    profile-creation-data:
      allOf:
        - type: object
          required: [create_account]
          properties:
            create_account:
              type: boolean
              description: Whether or not an account should be created.
              example: true
        - $ref: '#/components/schemas/profile'  
    properties:
      type: object
      properties:
        property1:
          type: string
          example: metallic
        property2:
          type: string
          example: rust-resistant
    quantity:
      type: integer
      description: The quantity of this item.
      example: 3
    rate_shipping:
      type: integer
      description: The shipping rate amount in cents.
      example: 234
    rate_subtotal:
      type: integer
      description: The rate subtotal in cents.
      example: 300
    reason:
      type: object
      description: The reason for the error.
      properties:
        reason:
          type: string
          example: 'This product is out of stock.'
    reasons:
      type: array
      items:
        $ref: "#/components/schemas/reason"
    reference:
      type: string
      description: Reference for the object.
      example: '1123'
    region:
      type: string
      description: 'A state, province, or similar region type.'
      example: Quebec
    request_id:
      type: string
      description: The unique ID for the request ticket.
      example: 2d34a56
    request_status:
      type: string
      enum:
        - reviewed
    request_deadline:
      type: integer
      example: 1627955971268
    request_failed:
      type: boolean
      example: false
    request_source:
      type: string
      description: The source of the request.
      example: checkout
    risk_decision_factor:
      type: string
      description: One of the main contributing factors to the fraud decision and score.
      enum:
        - address_details
        - auth_decline_stolen_card
        - card_information
        - cart_details
        - checkout_behavior
        - device_specifications
        - email_details
        - fraudulent_chargeback
        - ip_details
        - phone_details
        - shipping_details
        - too_many_attempts
        - user_history
      example: checkout_behavior
    risk_fraud_probability:
      type: integer
      description: |
        The total [fraud score](/operations/fraud/fraud-review/#fraud-scoring).
      example: 943
    risk_insight_availability:
      type: boolean
      description: Must be set to `true` to receive fraud insights.
      example: true
    risk_payment_instrument_factors:
      type: object
      description: Displays the result of the CVV and AVS checks returned at authorization.
      properties:
        avs:
          type: string
          example: avs result
        cvv:
          type: string
          example: cvv result
    risk_signals:
      type: object
      description: The data used for risk assessment.
      properties:
        ip_address:
          type: string
          example: 147.92.88.21
        time_on_site:
          type: string
          example: 00:08:42
        http_headers:
          type: object
          description: Data about the user's http connection.
          properties:
            accept:
              type: string
              example: application/json
            accept_encoding:
              type: string
              example: gzip, deflate, br
            accept_language:
              type: string
              example: en-US,en;q=0.9
            connection:
              type: string
              example:
            host:
              type: string
              example: api-staging.bolt.com
            referer:
              type: string
              example: https://merchant-staging.bolt.com/
            user_agent:
              type: string
              example: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.51 Safari/537.36
    service:
      type: string
      description: The service name.
      example: Option 1
    shipping_carrier:
      type: string
      description: the name of the carrier used for shipment.
      example: UPS
    shipping_address_id:
      type: string
      description: ID for billing address
      example: addres-1
    shipping_default:
      type: boolean
      description: Defines if option is default or not.
      example: true
    shipping_method:
      type: string
      description: The name of the shipping method.
      example: Unknown
    shipping_option_description:
      type: string
      description: |
        Additional information about the service. Supports a maximum of 60 characters and the use of `<span>`, with IDs to be used as tooltips.
      example: The <span id="1">most</span> popular choice
    shipping_option_description_tooltip_content:
      type: string
      description: |
        The HTML content that the tooltip displays. Supports up to 120 characters and the following HTML elements: `<i>`, `<b>`, `<br/>`, `<ul>`, `<li>`, and `<a href="...">`
      example: Timeline may vary depending on <b>location</b>.
    shipping_option_description_tooltip_target:
      type: integer
      description: The ID of the span used to wrap the description's text. This ID is used to display the tooltip.
      example: 1
    shopify:
      type: string
      description: Data externalized from shopify.
      example: VIP shopper
    signature:
      type: string
      description: The signature.
      example: a1B2s3dC4f5g5D6hj6E7k8F9l0
    size:
      type: string
      description: The size.
      example: XXL
    sku:
      type: string
      description: The SKU identifier for this item or service.
      example: SKU-11021
    source:
      type: string
      description: This is the originating source of the request
      enum:
        - direct_payments
        - virtual terminal
      example: direct_payments
    statements_date:
      type: integer
      description: 'This is the date of the statement, in milliseconds since the Unix epoch time.'
      example: 1586480400000
    statements_file_type:
      type: string
      enum:
        - csv
      description: 'This is the type of the file. Currently, Bolt only supports CSV statements.'
      example: csv
    statements_type:
      type: string
      enum:
        - daily_transaction
        - monthly_transaction
        - daily_funding
      description: |
        The type of statement. The type is prepended with a prefix containing the frequency of the statement. The prefix will be either daily or monthly. Transaction statements will contain all transactional event entries. Funding statements contain only funding transactional event entries.
      example: daily_transaction
    statements_url:
      type: string
      description: |
        This is the pre-signed URL of the requested statement. The URL has an expiration period of 5 minutes.
        Sharing the URL implies sharing the statement and its contents, please be careful.
      example: 'https://bolt-statements-production.s3.us-west-2.amazonaws.com/00_daily_transaction_20200410.csv'
    status:
      type: string
      description: The status.
      enum:
        - success
        - failure
      example: success
    street_address:
      type: string
      description: You can use up to 4 street address fields.
      example: 42 Wallaby Way
    tag:
      type: string
      description: A tag
      example: red
    tax_amount:
      type: integer
      description: Tax amount in cents.
      example: 230
    tax_code:
      type: string
      description: The relevant tax code.
      example: tax-12345
    taxable:
      type: boolean
      description: Determines if item is taxable.
      example: true
    timeline_date:
      type: integer
      format: int64
      description: timeline event view
      example: 1586480400000
    timeline_note:
      type: string
      description: transaction timeline event note
      example: This is a note.
    timeline_type:
      type: string
      description: transaction timeline event type.
      enum:
        - note
        - audit_entry
        - address_change
    timeline_visiblity:
      type: string
      description: Defines who has permission to view the note added to the timeline.
      enum:
        - merchant
        - public
      example: merchant
    order_token:
      type: string
      description: The token for the order.
      example: a2b3dDc4cA5e6fg78Bg9hj0kl
    total_amount:
      type: integer
      description: The total amount.
      example: 9900
    transaction_authorization_reason:
      type: string
      description: The status of the transaction. **Nullable** for Transactions Details.
      enum:
        - none
        - invalid_amount
        - invalid_cvv
        - invalid_cc_number
        - expired
        - risk
        - lost_stolen
        - call_issuer
        - invalid_merchant_for_card
    transaction_authorization_status:
      type: string
      description: The status of the transaction. **Nullable** for Transactions Details.
      enum:
        - succeeded
        - declined
        - error
    transaction_date:
      type: integer
      description: Transaction date. **Nullable** for Transactions Details.
      example: 1615407159447
    transaction_decision:
      type: string
      description: The decision to approve or reject the transaction.
      enum:
        - approve
        - reject
      example: approve
    transaction_id:
      type: string
      description: The transaction's id. **Nullable** for Transactions Details.
      example: T1c3p4yBuVYJ9
    transaction_processor:
      type: string
      description: The processor used. **Nullable** for Transactions Details.
      enum:
        - adyen_gateway
        - adyen_payfac
        - affirm
        - afterpay
        - alliance_data
        - amazon_pay
        - authorize_net
        - braintree
        - cybersource
        - first_data
        - klarna
        - nmi
        - orbital
        - paypal
        - sezzle
        - stripe
        - radial
        - vantiv
      example: adyen_gateway
    transaction_processor_status:
      type: string
      description: The processor's status. Only `primary` and `active` processor are displayed.
      enum:
        - primary
        - active
        - inactive
      example: primary
    transaction_reference:
      type: string
      description: The transaction's Bolt reference ID. **Nullable** for Transactions Details.
      example: LBLJ-TWW7-R9VC
    transaction_status:
      type: string
      description: The status of the transaction. **Nullable** for Transactions Details.
      enum:
        - authorized
        - cancelled
        - completed
        - created
        - failed
        - in_progress
        - pending
        - rejected_irreversible
        - rejected_reversible
      example: cancelled
    transaction_skip_hook_notification:
      type: boolean
      description: Disables the hook notification if `true`.
      example: false
    transaction_type:
      type: string
      description: The type of transaction. **Nullable** for Transactions Details.
      enum:
        - apm_payment
        - apm_refund
        - authorization_verification
        - bank_account_verification
        - cc_payment
        - cc_credit
        - float_transfer
        - funding_transfer
        - funding_withdrawal
        - merchant_credit
        - merchant_debit
        - paypal_payment
        - paypal_refund
        - processing_fee_transfer
        - processing_fee_withdrawal
        - reserve_transfer
        - risk_fee_transfer
        - risk_fee_withdrawal
        - zero_amount
      example: cc_payment
    type:
      type: string
      enum:
        - bundled
        - digital
        - physical
        - unknown
      description: 'Determines if item is a physical, digital, or bundled good, or if the good type is unknown.'
      example: physical
    unit_price:
      type: integer
      description: Price per unit in cents.
      example: 500
    user_note:
      type: string
      description: Notes from the shopper.
      example: This item is a gift.
    webhooks_object:
      type: string
      description: The type of webhook object.
      example: transaction
    webhooks_transaction_auth:
      type: object
      title: auth
      properties:
        type:
          $ref: '#/components/schemas/webhooks_type'
        object:
          type: string
          enum:
            - transaction
          example: transaction
        data:
          type: object
          description: This is a generic wrapper for the merchant's data. Open to see properties.
          properties:
              id:
                $ref: '#/components/schemas/transaction_id'
              type:
                $ref: '#/components/schemas/transaction_type'
              processor:
                $ref: '#/components/schemas/transaction_processor'
              date:
                $ref: '#/components/schemas/transaction_date'
              reference:
                $ref: '#/components/schemas/transaction_reference'
              status:
                $ref: '#/components/schemas/transaction_status'
              from_user:
                $ref: '#/components/schemas/transaction_from_user'
              from_credit_card:
                $ref: '#/components/schemas/transaction_from_credit_card'
              amount:
                $ref: '#/components/schemas/amounts'
              order:
                $ref: '#/components/schemas/order'
              authorization:
                $ref: '#/components/schemas/transaction_authorization'
              captures:
                $ref: '#/components/schemas/captures'
              refund_transactions:
                $ref: '#/components/schemas/refund_transactions'
              risk_signals:
                $ref: '#/components/schemas/risk_signals'
              capture_type:
                $ref: '#/components/schemas/capture_type'
    webhooks_transaction_capture:
      type: object
      title: capture
      properties:
        type:
          $ref: '#/components/schemas/webhooks_type'
        object:
          type: string
          enum:
            - transaction
          example: transaction
        data:
          type: object
          description: This is a generic wrapper for the merchant's data. Open to see properties.
          properties:
            id:
              $ref: '#/components/schemas/transaction_id'
            type:
              $ref: '#/components/schemas/transaction_type'
            processor:
              $ref: '#/components/schemas/transaction_processor'
            date:
              $ref: '#/components/schemas/transaction_date'
            reference:
              $ref: '#/components/schemas/transaction_reference'
            status:
              $ref: '#/components/schemas/transaction_status'
            from_user:
              $ref: '#/components/schemas/transaction_from_user'
            from_credit_card:
              $ref: '#/components/schemas/transaction_from_credit_card'
            amount:
              $ref: '#/components/schemas/amounts'
            order:
              $ref: '#/components/schemas/order'
            authorization:
              $ref: '#/components/schemas/transaction_authorization'
            captures:
              $ref: '#/components/schemas/captures'
            refund_transactions:
              $ref: '#/components/schemas/refund_transactions'
            checkboxes:
              $ref: '#/components/schemas/transaction_checkboxes'
            risk_signals:
              $ref: '#/components/schemas/risk_signals'
            capture_type:
              $ref: '#/components/schemas/capture_type'
    webhooks_transaction_credit:
      type: object
      title: credit
      properties:
        type:
          $ref: '#/components/schemas/webhooks_type'
        object:
          type: string
          enum:
            - transaction
          example: transaction
        data:
          type: object
          description: This is a generic wrapper for the merchant's data. Open to see properties.
          properties:
            id:
              $ref: '#/components/schemas/transaction_id'
            type:
              $ref: '#/components/schemas/transaction_type'
            processor:
              $ref: '#/components/schemas/transaction_processor'
            date:
              $ref: '#/components/schemas/transaction_date'
            reference:
              $ref: '#/components/schemas/transaction_reference'
            status:
              $ref: '#/components/schemas/transaction_status'
            amount:
              $ref: '#/components/schemas/amounts'
            order:
              $ref: '#/components/schemas/order'
            captures:
              $ref: '#/components/schemas/captures'
            refund_transactions:
              $ref: '#/components/schemas/refund_transactions'
            source_transaction:
              $ref: '#/components/schemas/source_transaction'
            risk_signals:
              $ref: '#/components/schemas/risk_signals'
            capture_type:
              $ref: '#/components/schemas/capture_type'
            refund_type:
              $ref: '#/components/schemas/refund_type'
            total_refund_amount:
              $ref: '#/components/schemas/amounts'
            requested_refund_amount:
              $ref: '#/components/schemas/amounts'
    webhooks_transaction_failed_payment:
      type: object
      title: failed_payment
      properties:
        type:
          $ref: '#/components/schemas/webhooks_type'
        object:
          type: string
          enum:
            - transaction
          example: transaction
        data:
          type: object
          description: This is a generic wrapper for the merchant's data. Open to see properties.
          properties:
            id:
              $ref: '#/components/schemas/transaction_id'
            type:
              $ref: '#/components/schemas/transaction_type'
            processor:
              $ref: '#/components/schemas/transaction_processor'
            date:
              $ref: '#/components/schemas/transaction_date'
            reference:
              $ref: '#/components/schemas/transaction_reference'
            status:
              $ref: '#/components/schemas/transaction_status'
            from_user:
              $ref: '#/components/schemas/transaction_from_user'
            from_credit_card:
              $ref: '#/components/schemas/transaction_from_credit_card'
            amount:
              $ref: '#/components/schemas/amounts'
            order:
              $ref: '#/components/schemas/order'
            authorization:
              $ref: '#/components/schemas/transaction_authorization'
            captures:
              $ref: '#/components/schemas/captures'
            refund_transactions:
              $ref: '#/components/schemas/refund_transactions'
            checkboxes:
              $ref: "#/components/schemas/transaction_checkboxes"
            risk_signals:
              $ref: '#/components/schemas/risk_signals'
            capture_type:
              $ref: '#/components/schemas/capture_type'
    webhooks_transaction_newsletter_subscription:
      type: object
      title: newsletter_subscription
      properties:
        type:
          $ref: '#/components/schemas/webhooks_type'
        object:
          type: string
          enum:
            - transaction
          example: transaction
        data:
          type: object
          description: This is a generic wrapper for the merchant's data. Open to see properties.
          properties:
            id:
              $ref: '#/components/schemas/transaction_id'
            type:
              $ref: '#/components/schemas/transaction_type'
            processor:
              $ref: '#/components/schemas/transaction_processor'
            date:
              $ref: '#/components/schemas/transaction_date'
            reference:
              $ref: '#/components/schemas/transaction_reference'
            status:
              $ref: '#/components/schemas/transaction_status'
            from_user:
              $ref: '#/components/schemas/transaction_from_user'
            from_credit_card:
              $ref: '#/components/schemas/transaction_from_credit_card'
            amount:
              $ref: '#/components/schemas/amounts'
            order:
              $ref: '#/components/schemas/order'
            authorization:
              $ref: '#/components/schemas/transaction_authorization'
            captures:
              $ref: '#/components/schemas/captures'
            refund_transactions:
              $ref: '#/components/schemas/refund_transactions'
            checkboxes:
              $ref: "#/components/schemas/transaction_checkboxes"
            risk_signals:
              $ref: '#/components/schemas/risk_signals'
            capture_type:
              $ref: '#/components/schemas/capture_type'
    webhooks_transaction_risk_insights:
      type: object
      title: risk_insights
      properties:
        type:
          $ref: '#/components/schemas/webhooks_type'
        object:
          type: string
          enum:
            - transaction
          example: transaction
        data:
          type: object
          description: This is a generic wrapper for the merchant's data. Open to see properties.
          properties:
            id:
              $ref: '#/components/schemas/transaction_id'
            type:
              $ref: '#/components/schemas/transaction_type'
            processor:
              $ref: '#/components/schemas/transaction_processor'
            date:
              $ref: '#/components/schemas/transaction_date'
            reference:
              $ref: '#/components/schemas/transaction_reference'
            status:
              $ref: '#/components/schemas/transaction_status'
            from_user:
              $ref: '#/components/schemas/transaction_from_user'
            from_credit_card:
              $ref: '#/components/schemas/transaction_from_credit_card'
            amount:
              $ref: '#/components/schemas/amounts'
            order:
              $ref: '#/components/schemas/order'
            authorization:
              $ref: '#/components/schemas/transaction_authorization'
            captures:
              $ref: '#/components/schemas/captures'
            refund_transactions:
              $ref: '#/components/schemas/refund_transactions'
            risk_insights:
              $ref: '#/components/schemas/risk_insights'
            risk_signals:
              $ref: '#/components/schemas/risk_signals'
            capture_type:
              $ref: '#/components/schemas/capture_type'
    webhooks_transaction_payment:
      type: object
      title: payment
      properties:
        type:
          $ref: '#/components/schemas/webhooks_type'
        object:
          type: string
          enum:
            - transaction
          example: transaction
        data:
          type: object
          description: This is a generic wrapper for the merchant's data. Open to see properties.
          properties:
            id:
              $ref: '#/components/schemas/transaction_id'
            type:
              $ref: '#/components/schemas/transaction_type'
            processor:
              $ref: '#/components/schemas/transaction_processor'
            date:
              $ref: '#/components/schemas/transaction_date'
            reference:
              $ref: '#/components/schemas/transaction_reference'
            status:
              $ref: '#/components/schemas/transaction_status'
            from_user:
              $ref: '#/components/schemas/transaction_from_user'
            from_credit_card:
              $ref: '#/components/schemas/transaction_from_credit_card'
            amount:
              $ref: '#/components/schemas/amounts'
            order:
              $ref: '#/components/schemas/order'
            authorization:
              $ref: '#/components/schemas/transaction_authorization'
            captures:
              $ref: '#/components/schemas/captures'
            refund_transactions:
              $ref: '#/components/schemas/refund_transactions'
            risk_signals:
              $ref: '#/components/schemas/risk_signals'
            capture_type:
              $ref: '#/components/schemas/capture_type'
    webhooks_transaction_pending:
      type: object
      title: pending
      properties:
        type:
          $ref: '#/components/schemas/webhooks_type'
        object:
          type: string
          enum:
            - transaction
          example: transaction
        data:
          type: object
          description: This is a generic wrapper for the merchant's data. Open to see properties.
          properties:
            id:
              $ref: '#/components/schemas/transaction_id'
            type:
              $ref: '#/components/schemas/transaction_type'
            processor:
              $ref: '#/components/schemas/transaction_processor'
            date:
              $ref: '#/components/schemas/transaction_date'
            reference:
              $ref: '#/components/schemas/transaction_reference'
            status:
              $ref: '#/components/schemas/transaction_status'
            from_user:
              $ref: '#/components/schemas/transaction_from_user'
            from_credit_card:
              $ref: '#/components/schemas/transaction_from_credit_card'
            amount:
              $ref: '#/components/schemas/amounts'
            order:
              $ref: '#/components/schemas/order'
            authorization:
              $ref: '#/components/schemas/transaction_authorization'
            captures:
              $ref: '#/components/schemas/captures'
            refund_transactions:
              $ref: '#/components/schemas/refund_transactions'
            checkboxes:
              $ref: "#/components/schemas/transaction_checkboxes"
            risk_signals:
              $ref: '#/components/schemas/risk_signals'
            capture_type:
              $ref: '#/components/schemas/capture_type'
    webhooks_transaction_rejected_irreversible:
      type: object
      title: rejected_irreversible
      properties:
        type:
          $ref: '#/components/schemas/webhooks_type'
        object:
          type: string
          enum:
            - transaction
          example: transaction
        data:
          type: object
          description: This is a generic wrapper for the merchant's data. Open to see properties.
          properties:
            id:
              $ref: '#/components/schemas/transaction_id'
            type:
              $ref: '#/components/schemas/transaction_type'
            processor:
              $ref: '#/components/schemas/transaction_processor'
            date:
              $ref: '#/components/schemas/transaction_date'
            reference:
              $ref: '#/components/schemas/transaction_reference'
            status:
              $ref: '#/components/schemas/transaction_status'
            from_user:
              $ref: '#/components/schemas/transaction_from_user'
            from_credit_card:
              $ref: '#/components/schemas/transaction_from_credit_card'
            amount:
              $ref: '#/components/schemas/amounts'
            order:
              $ref: '#/components/schemas/order'
            captures:
              $ref: '#/components/schemas/captures'
            refund_transactions:
              $ref: '#/components/schemas/refund_transactions'
            risk_signals:
              $ref: '#/components/schemas/risk_signals'
            capture_type:
              $ref: '#/components/schemas/capture_type'
    webhooks_transaction_void:
      type: object
      title: void
      properties:
        type:
          $ref: '#/components/schemas/webhooks_type'
        object:
          type: string
          enum:
            - transaction
          example: transaction
        data:
          type: object
          description: This is a generic wrapper for the merchant's data. Open to see properties.
          properties:
            id:
              $ref: '#/components/schemas/transaction_id'
            type:
              $ref: '#/components/schemas/transaction_type'
            processor:
              $ref: '#/components/schemas/transaction_processor'
            date:
              $ref: '#/components/schemas/transaction_date'
            reference:
              $ref: '#/components/schemas/transaction_reference'
            status:
              $ref: '#/components/schemas/transaction_status'
            from_user:
              $ref: '#/components/schemas/transaction_from_user'
            from_credit_card:
              $ref: '#/components/schemas/transaction_from_credit_card'
            amount:
              $ref: '#/components/schemas/amounts'
            order:
              $ref: '#/components/schemas/order'
            authorization:
              $ref: '#/components/schemas/transaction_authorization'
            captures:
              $ref: '#/components/schemas/captures'
            refund_transactions:
              $ref: '#/components/schemas/refund_transactions'
            checkboxes:
              $ref: "#/components/schemas/transaction_checkboxes"
            risk_signals:
              $ref: '#/components/schemas/risk_signals'
            capture_type:
              $ref: '#/components/schemas/capture_type'
    webhooks_type:
      type: string
      description: |
        The type of webhook. For `auth` webhooks, a notification is only triggered if the authorization included a risk review.

        **IMPORTANT:** The One Of buttons above reflect the webhook type and change the schema below (within `data`). Please make sure to select the correct webhook type according to your needs.
      enum:
        - auth
        - capture
        - credit
        - failed_payment
        - newsletter_subscription
        - payment
        - pending
        - rejected_irreversible
        - risk_insights
        - void
      example: pending
    weight:
      type: integer
      description: The weight of an item.
      example: 22
    weight_unit:
      type: string
      description: The unit of measurement for an item's weight.
      example: kg
    width:
      type: integer
      description: The width.
      example: 222
  examples:
    credit-card-with-address-explicit:
      summary: Add a credit card, providing an explicit billing address
      value:
        .tag: credit_card
        type: credit
        network: visa
        bin: '411111'
        last4: '1004'
        expiration: 2025-03
        token: a1B2c3D4e5F6G7H8i9J0k1L2m3N4o5P6Q7r8S9t0
        billing_address:
          .tag: explicit
          first_name: Charlie
          last_name: Dunn
          street_address1: 535 Mission St
          locality: San Francisco
          postal_code: '94105'
          region: CA
          country_code: US
    credit-card-with-address-id:
      summary: |
        Add a credit card, providing a billing address ID corresponding to an existing address
        on the shopper's account
      value:
        .tag: credit_card
        type: credit
        network: visa
        bin: '411111'
        last4: '1004'
        expiration: 2025-03
        token: a1B2c3D4e5F6G7H8i9J0k1L2m3N4o5P6Q7r8S9t0
        billing_address:
          .tag: id
          id: D4g3h5tBuVYK9
    address-all-fields:
      summary: A sample address where all fields, including optional fields, are set
      value:
        # id: D4g3h5tBuVYK9
        first_name: Alice
        last_name: Baker
        company: ACME Corporation
        street_address1: 535 Mission St, Ste 1401
        street_address2: c/o Shipping Department
        locality: San Francisco
        postal_code: '94105'
        region: CA
        country_code: US
        email: alice@example.com
        phone: '+14155550199'
        is_default: true
    address-some-fields:
      summary: A sample address where only required fields are set
      value:
        # id: D4g3h5tBuVYK9
        first_name: Jean
        last_name: Blanc
        street_address1: 77 Rue FrÃ©dÃ©ric Chopin
        locality: Versailles
        postal_code: '78000'
        country_code: FR
    address-reference-explicit:
      summary: |
        A sample address where only required fields are set, and the address is referenced by ID
        in the `billing_address` field of a credit card.
      value:
        .tag: explicit
        first_name: Charlie
        last_name: Dunn
        street_address1: 535 Mission St
        locality: San Francisco
        postal_code: '94105'
        region: CA
        country_code: US
    address-reference-id:
      summary: |
        A sample address where only required fields are set, and the address is referenced by ID
        in the `billing_address` field of a credit card.
      value:
        .tag: id
        id: D4g3h5tBuVYK9    
  requestBodies:
    account_get:
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                description: This is a generic wrapper for the merchant's data. Open to see properties.
                properties:
                  email:
                    $ref: '#/components/schemas/email'
    account_login:
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                description: This is a generic wrapper for the merchant's data. Open to see properties.
    cart_create:
      content:
        application/json:
          schema:
            type: object
            properties:
              event:
                type: string
                enum:
                  - cart.create
              data:
                type: object
                description: This is a generic wrapper for the merchant's data. Open to see properties.
                properties:
                  items:
                    $ref: '#/components/schemas/items'
                  currency:
                    $ref: '#/components/schemas/currency_iso'
                  metadata:
                    type: array
                    items:
                      type: object
                      properties:
                        key1:
                          type: string
                          example: value 1
    cart_update:
      content:
        application/json:
          schema:
            type: object
            properties:
              event:
                type: string
                enum:
                  - cart.update
              data:
                type: object
                description: This is a generic wrapper for the merchant's data. Open to see properties.
                properties:
                  order_reference:
                    $ref: '#/components/schemas/order_reference'
                  add_items:
                    $ref: '#/components/schemas/items_add'
                  remove_items:
                    $ref: '#/components/schemas/items_remove'
                  discount_codes_to_add:
                    $ref: '#/components/schemas/discount_codes'
                  discount_codes_to_remove:
                    $ref: '#/components/schemas/discount_codes'
                  gift_cards_to_add:
                    $ref: '#/components/schemas/cards_gift'
                  gift_cards_to_remove:
                    $ref: '#/components/schemas/cards_gift'
                  loyalty_rewards_to_add:
                    $ref: '#/components/schemas/loyalty_rewards'
                  loyalty_rewards_to_remove:
                    $ref: '#/components/schemas/loyalty_rewards'
                  cart:
                    $ref: '#/components/schemas/cart_limited'
    cart_addons:
      content:
        application/json:
          schema:
            type: object
            properties:
              event:
                type: string
                enum:
                  - cart.addons
              data:
                type: object
                description: This is a generic wrapper for the merchant's data. Open to see properties.
                properties:
                  cart:
                    $ref: '#/components/schemas/addons_cart'
                  addons_limit:
                    $ref: '#/components/schemas/addons_limit'
    discount_check:
      content:
        application/json:
          schema:
            type: object
            properties:
              event:
                type: string
                enum:
                  - discounts.code.apply
              data:
                type: object
                description: This is a generic wrapper for the merchant's data. Open to see properties.
                properties:
                  discount_code:
                    $ref: '#/components/schemas/discount_code'
                  cart:
                    $ref: '#/components/schemas/cart_discounts'
                  customer_name:
                    $ref: '#/components/schemas/name_person'
                  customer_email:
                    $ref: '#/components/schemas/email'
                  customer_phone:
                    $ref: '#/components/schemas/phone'
    order_create:
      $ref: '#/components/requestBodies/cart_create'
    order_shipping_and_tax:
      content:
        application/json:
          schema:
            type: object
            properties:
              event:
                type: string
                enum:
                  - order.shipping_and_tax
              data:
                type: object
                description: This is a generic wrapper for the merchant's data. Open to see properties.
                properties:
                  shipping_address:
                    $ref: '#/components/schemas/shipping_address'
                  cart:
                    $ref: '#/components/schemas/cart_shipment_combined'
                  request_source:
                    $ref: '#/components/schemas/request_source'
                  shipping_option:
                    $ref: '#/components/schemas/shipping_option'
                  pickup_option:
                    $ref: '#/components/schemas/pickup_option'
                  ship_to_store_option:
                    $ref: '#/components/schemas/shipping_to_store_option'
                  metadata:
                    $ref: '#/components/schemas/metadata_component'
    order_shipping:
      content:
        application/json:
          schema:
            type: object
            properties:
              event:
                type: string
                enum:
                  - order.shipping
              data:
                type: object
                description: This is a generic wrapper for the merchant's data. Open to see properties.
                properties:
                  shipping_address:
                    $ref: '#/components/schemas/shipping_address'
                  cart:
                    $ref: '#/components/schemas/cart'
                  request_source:
                    $ref: '#/components/schemas/request_source'
                  shipment_type:
                    $ref: '#/components/schemas/shipment_type'
    order_tax:
      content:
        application/json:
          schema:
            type: object
            properties:
              event:
                type: string
                enum:
                  - order.tax
              data:
                type: object
                description: This is a generic wrapper for the merchant's data. Open to see properties.
                properties:
                  shipping_address:
                    $ref: '#/components/schemas/shipping_address'
                  cart:
                    $ref: '#/components/schemas/cart'
                  request_source:
                    $ref: '#/components/schemas/request_source'
                  shipping_option:
                    $ref: '#/components/schemas/shipping_option'
                  pickup_option:
                    $ref: '#/components/schemas/pickup_option'
                  ship_to_store_option:
                    $ref: '#/components/schemas/shipping_to_store_option'
                  metadata:
                    $ref: '#/components/schemas/metadata_component'
    webhooks_credit_card:
      content:
        application/json:
          schema:
            type: object
            properties:
              type:
                type: string
                enum:
                  - credit_card_deleted
                example: credit_card_deleted
              object:
                type: string
                enum:
                  - credit_card
                example: credit_card
              data:
                type: object
                description: This is a generic wrapper for the merchant's data. Open to see properties.
                properties:
                  user:
                    $ref: '#/components/schemas/credit_card_user'
                  credit_card:
                    $ref: '#/components/schemas/credit_card'
    webhooks_transaction_prev:
      content:
        application/json:
          schema:
            discriminator:
              propertyName: type
              mapping:
                auth: '#/components/schemas/webhooks_transaction_auth'
                capture: '#/components/schemas/webhooks_transaction_capture'
                credit: '#/components/schemas/webhooks_transaction_credit'
                failed_payment: '#/components/schemas/webhooks_transaction_failed_payment'
                newsletter_subscription: '#/components/schemas/webhooks_transaction_newsletter_subscription'
                payment: '#/components/schemas/webhooks_transaction_payment'
                pending: '#/components/schemas/webhooks_transaction_pending'
                rejected_irriversible: '#/components/schemas/webhooks_transaction_rejected_irreversible'
                risk_insights: '#/components/schemas/webhooks_transaction_risk_insights'
                void: '#/components/schemas/webhooks_transaction_void'
            oneOf:
              - $ref: '#/components/schemas/webhooks_transaction_auth'
              - $ref: '#/components/schemas/webhooks_transaction_capture'
              - $ref: '#/components/schemas/webhooks_transaction_credit'
              - $ref: '#/components/schemas/webhooks_transaction_failed_payment'
              - $ref: '#/components/schemas/webhooks_transaction_newsletter_subscription'
              - $ref: '#/components/schemas/webhooks_transaction_payment'
              - $ref: '#/components/schemas/webhooks_transaction_pending'
              - $ref: '#/components/schemas/webhooks_transaction_rejected_irreversible'
              - $ref: '#/components/schemas/webhooks_transaction_risk_insights'
              - $ref: '#/components/schemas/webhooks_transaction_void'
    webhooks_transaction:
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/webhooks_transaction_auth'
              - $ref: '#/components/schemas/webhooks_transaction_capture'
              - $ref: '#/components/schemas/webhooks_transaction_credit'
              - $ref: '#/components/schemas/webhooks_transaction_failed_payment'
              - $ref: '#/components/schemas/webhooks_transaction_newsletter_subscription'
              - $ref: "#/components/schemas/webhooks_transaction_payment"
              - $ref: '#/components/schemas/webhooks_transaction_rejected_irreversible'
              - $ref: '#/components/schemas/webhooks_transaction_risk_insights'
              - $ref: '#/components/schemas/webhooks_transaction_void'
  responses:
    response-payment-method-error:
      description: The payment method is invalid and cannot be added, or some other error has occurred
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/error'
              - $ref: '#/components/schemas/credit-card-error'
          examples:
            missing-input:
              summary: A required field is missing
              value:
                .tag: missing_input_parameter
                message: token is required
            invalid-input:
              summary: A field has a malformed value that does not conform to the schema
              value:
                .tag: invalid_input_parameter
                message: last4 value 104 is invalid
            invalid-credit-card:
              summary: The credit card payment method could not be added because it was declined
              value:
                .tag: declined_invalid_cvv
                message: The payment was declined because the CVV is not valid
    response-address-error:
      description: The address is invalid and cannot be added, or some other error has occurred
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/error'
              - $ref: '#/components/schemas/address-error'
          examples:
            missing-input:
              summary: A required field is missing
              value:
                .tag: missing_input_parameter
                message: country_code is required
            invalid-input:
              summary: A field has a malformed value that does not conform to the schema
              value:
                .tag: invalid_input_parameter
                message: country_code value ZZ is invalid
            invalid-postal-code:
              summary: The postal code is invalid
              value:
                .tag: invalid_postal_code
                message: postal_code value 94404 is not valid for country_code value CA
            invalid-region:
              summary: The region is missing or is invalid
              value:
                .tag: invalid_region
                message: region value BC is not valid for country_code value US
    account_get_error:
      description: Account Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                enum:
                  - failure
              errors:
                $ref: '#/components/schemas/errors'
    account_get:
      description: Account Found Successfully
      content:
        application/json:
          schema:
            type: object
            required:
              - event
              - status
              - data
            properties:
              status:
                $ref: '#/components/schemas/account_login_status'
    account_login_error:
      description: OAuth Login Error Response
      content:
        application/json:
          schema:
            type: object
            required:
              - status
            properties:
              status:
                type: string
                enum:
                  - failure
              errors:
                $ref: '#/components/schemas/errors'
    account_login:
      description: OAuth Login Successful
      content:
        application/json:
          schema:
            type: object
            required:
              - status
            properties:
              status:
                $ref: '#/components/schemas/account_login_status'
    cart_create_error:
      description: Cart Create Error
      content:
        application/json:
          schema:
            type: object
            properties:
              event:
                type: string
                enum:
                  - cart.create
              status:
                type: string
                enum:
                  - failure
              error:
                $ref: '#/components/schemas/error'
    cart_create:
      description: Cart Created Successfully
      content:
        application/json:
          schema:
            type: object
            required:
              - event
              - status
              - data
            properties:
              event:
                type: string
                enum:
                  - cart.create
              status:
                type: string
                enum:
                  - success
              data:
                type: object
                description: This is a generic wrapper for the merchant APIâ€™s request body.
                properties:
                  cart:
                    $ref: '#/components/schemas/order_create_cart'
    cart_update_error:
      description: Cart Update Error
      content:
        application/json:
          schema:
            type: object
            properties:
              event:
                type: string
                enum:
                  - cart.update
              status:
                type: string
                enum:
                  - failure
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/error'
    cart_update:
      description: Cart Updated Successfully
      content:
        application/json:
          schema:
            type: object
            required:
              - event
              - status
              - data
            properties:
              event:
                type: string
                enum:
                  - cart.update
              status:
                type: string
                enum:
                  - success
              data:
                type: object
                description: This is a generic wrapper for the merchant APIâ€™s request body.
                properties:
                  order_create:
                    $ref: '#/components/schemas/order_create'
    cart_addons:
      description: Cart Addons Received Successfully
      content:
        application/json:
          schema:
            type: object
            required:
              - event
              - status
              - data
            properties:
              event:
                type: string
                enum:
                  - cart.addons
              status:
                type: string
                enum:
                  - success
              data:
                type: object
                description: This is a generic wrapper for the merchant APIâ€™s request body.
                properties:
                  addons:
                    $ref: '#/components/schemas/cart_addons'
    cart_addons_error:
      description: Fetching Cart Addons Error
      content:
        application/json:
          schema:
            type: object
            properties:
              event:
                type: string
                enum:
                  - cart.addons
              status:
                type: string
                enum:
                  - failure
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/error'
    discount_check_error:
      description: Discount Application Failed
      content:
        application/json:
          schema:
            type: object
            properties:
              event:
                type: string
                enum:
                  - discounts.code.apply
              status:
                type: string
                enum:
                  - failure
              error:
                $ref: '#/components/schemas/error'
    discount_check:
      description: Discount Applied Successfully
      content:
        application/json:
          schema:
            type: object
            required:
              - event
              - status
              - data
            properties:
              event:
                type: string
                enum:
                  - discounts.code.apply
              status:
                type: string
                enum:
                  - success
              data:
                type: object
                description: This is a generic wrapper for the merchant's data. Open to see properties.
                properties:
                  discount_code:
                    $ref: '#/components/schemas/discount_code'
                  description:
                    $ref: '#/components/schemas/discount_description'
                  discount_type:
                    $ref: '#/components/schemas/discount_type'
                  discount_amount:
                    $ref: '#/components/schemas/amount'
                  category:
                    $ref: '#/components/schemas/category'
    order_create_error:
      $ref: '#/components/responses/cart_create_error'
    order_create:
      $ref: '#/components/responses/cart_create'
    order_shipping_and_tax_error:
      description: Shipping and Tax Calculations Failed
      content:
        application/json:
          schema:
            type: object
            properties:
              event:
                type: string
                enum:
                  - order.order_shipping_and_tax
              status:
                type: string
                enum:
                  - failure
              error:
                $ref: '#/components/schemas/error'
    order_shipping_and_tax:
      description: Shipping and Tax Response
      content:
        application/json:
          schema:
            type: object
            required:
              - event
              - status
              - data
            properties:
              event:
                type: string
                enum:
                  - order.shipping_and_tax
              status:
                type: string
                enum:
                  - success
              data:
                type: object
                description: This is a generic wrapper for the merchant APIâ€™s request body.
                properties:
                  shipping_options:
                    $ref: '#/components/schemas/shipping_options'
                  pickup_options:
                    $ref: '#/components/schemas/pickup_options'
                  ship_to_store_options:
                    $ref: '#/components/schemas/shipping_options'
                  tax_result:
                      $ref: '#/components/schemas/tax_result'
                  metadata:
                    $ref: '#/components/schemas/metadata_component'
    order_shipping_error:
      description: Shipping Error
      content:
        application/json:
          schema:
            type: object
            properties:
              event:
                type: string
                enum:
                  - order.shipping
              status:
                type: string
                enum:
                  - failure
              error:
                $ref: '#/components/schemas/error'
    order_shipping:
      description: Shipping Options Received Successfully
      content:
        application/json:
          schema:
            type: object
            required:
              - event
              - status
              - data
            properties:
              event:
                type: string
                enum:
                  - order.shipping
              status:
                type: string
                enum:
                  - success
              data:
                type: object
                description: This is a generic wrapper for the merchant APIâ€™s request body.
                properties:
                  shipping_options:
                    $ref: '#/components/schemas/shipping_options'
                  pickup_options:
                    $ref: '#/components/schemas/pickup_options'
                  ship_to_store_options:
                    $ref: '#/components/schemas/shipping_to_store_options'
                  is_store_location:
                    $ref: '#/components/schemas/is_store_location'
    order_tax_error:
      description: Tax Error
      content:
        application/json:
          schema:
            type: object
            properties:
              event:
                type: string
                enum:
                  - order.tax
              status:
                type: string
                enum:
                  - failure
              error:
                $ref: '#/components/schemas/error'
    order_tax:
      description: Taxes Calculated Successfully
      content:
        application/json:
          schema:
            type: object
            required:
              - event
              - status
              - data
            properties:
              event:
                type: string
                enum:
                  - order.tax
              status:
                type: string
                enum:
                  - success
              data:
                type: object
                description: This is a generic wrapper for the merchant APIâ€™s request body.
                properties:
                  tax_result:
                    $ref: '#/components/schemas/tax_result'
                  shipping_option:
                    $ref: '#/components/schemas/shipping_option'
                  pickup_option:
                    $ref: '#/components/schemas/pickup_option'
                  ship_to_store_option:
                    $ref: '#/components/schemas/shipping_to_store_option'
                  items:
                    $ref: '#/components/schemas/items'
    webhooks_transaction_error:
      description: Webhooks Transaction Response
      content:
        application/json:
          schema:
            type: object
            required:
              - status
            properties:
              status:
                type: string
                enum:
                  - succeeded
                  - failed
                example: failed
              error:
                $ref: '#/components/schemas/error'
    webhooks_transaction:
      description: Webhooks Transaction Response
      content:
        application/json:
          schema:
            type: object
            required:
              - status
            properties:
              status:
                type: string
                enum:
                  - succeeded
                  - failed
                example: succeeded
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: Admins and Developers can obtain their Bolt API key from the Bolt Merchant Dashboard.

