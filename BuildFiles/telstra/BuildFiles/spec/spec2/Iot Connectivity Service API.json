{
  "openapi": "3.0.0",
  "info": {
    "title": "IoT Connectivity Manager (ICM) Service API",
    "version": "1.0.0",
    "description": "Telstra Internet of Things Connection Manager (ICM) allows you to view and manage your IoT connectivity services at scale and in detail.\n\nSee here for more details [Telstra.com](https://www.telstra.com.au/small-business/internet-of-things/connection-manager)\n\n# How to Access\nTo access this API, you must be an existing user of an ICM account and have at least one active IoT Connectivity service on your account. ICM is available to Small Businesses through any Telstra Business Technology Centre and to Enterprises through your Telstra sales representative. See above link for further information on how to get access to ICM.\n\n# Introduction\nThis API will allow you to interact with the Telstra IoT Connection Manager so that you can get detailed information about the status of your SIMs on Australia’s largest IoT network. You will be able to view current data, voice & SMS usage, what plan you are using and much more.\n\nThere are two options for this API:\n\n   •  You can retrieve a paginated view (25 services per page) of your SIMs based on various filter criteria or;\n\n   •  You can retrieve all the information pertaining to a specific SIM\n\nBoth options will provide the latest information regarding the SIMs in question as a point in time snapshot.\n\n# Getting Started\nBelow are the steps to get started with the Telstra ICM Service API.\n1. Sign into TelstraDev using your existing TelstraID. This must be the same TelstraID that is associated with your ICM account. There is no need to register for a new TelstraDev account, simply use your existing TelstraID to sign in. The ICM Service API should be automatically added to your account.\n2. Copy your Client ID/key and Secret from the “Free Trial” app in your [apps & keys page](https://dev.telstra.net/user/me/apps).\n3. Open your terminal of choice, or download our handy [Postman Collection](https://app.getpostman.com/run-collection/b36f0cf48dc6479fa7f9?action=collection%2Fimport).\n4. Generate an OAuth2 token using your `client key` and `client secret`.\n5. Use the `GET all services` call to query a paginated view of your SIMs: [https://dev.telstra.com/content/telstra-iot-connectivity-service-api#operation/getServices](https://dev.telstra.com/content/telstra-iot-connectivity-service-api#operation/getServices)\n6. Use the `GET single service` call to query information pertaining to a specific SIM: [https://dev.telstra.com/content/telstra-iot-connectivity-service-api#operation/getService](https://dev.telstra.com/content/telstra-iot-connectivity-service-api#operation/getService)\n\nIf you need support at any of these steps, post in our ICM Service API forum: [https://dev.telstra.com/telstradev-forum/icm-service-api-forum](https://dev.telstra.com/telstradev-forum/icm-service-api-forum) or reach out to [telstradev@team.telstra.com](telstradev@team.telstra.com)\n\nFor more details on how to use our API, please see our Help Guide which can be accessed from the ICM Portal > Settings > Help.\n\n## Run in Postman\n<a\nhref=\"https://god.postman.co/run-collection/05ab0da698850474037b?action=collection%2Fimport#?env%5BICM%20Service%20API%20Environment%5D=W3sia2V5IjoiaG9zdCIsInZhbHVlIjoidGFwaS50ZWxzdHJhLmNvbSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiYWNjZXNzX3Rva2VuIiwidmFsdWUiOiIiLCJlbmFibGVkIjp0cnVlfV0=\"><img\nsrc=\"https://run.pstmn.io/button.svg\" alt=\"Run in Postman\"/></a>"
  },
  "servers": [
    {
      "description": "Production OKAPI2",
      "url": "https://tapi.telstra.com"
    }
  ],
  "paths": {
    "/v2/oauth/token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Generate OAuth2 token",
        "description": "To generate an OAuth2 Authentication token, pass through your `Client key` and `Client secret` that you received when you registered for the **API Free Trial** Product.\nThe grant_type should be left as `client_credentials` and the scope as `NSMS`. The token will expire in one hour.\n",
        "operationId": "authToken",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "client_id",
                  "client_secret",
                  "grant_type"
                ],
                "properties": {
                  "client_id": {
                    "type": "string",
                    "description": ""
                  },
                  "client_secret": {
                    "type": "string",
                    "description": ""
                  },
                  "grant_type": {
                    "type": "string",
                    "default": "client_credentials"
                  },
                  "scope": {
                    "type": "string",
                    "description": "NSMS"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "grant_type is incorrect. grant_type should be \"client_credentials\" (without quotes).\nRefer to the sample code for generate authentication token in the link for more details [https://dev.telstra.com/content/telstra-iot-connectivity-service-api#section/Authentication](https://dev.telstra.com/content/telstra-iot-connectivity-service-api#section/Authentication)\n",
            "content": {}
          },
          "401": {
            "description": "Either client_id or client_secret or both are not valid.\n\nEnsure the client_id and client_secret matches with your keys.  Keys can be found under [https://dev.telstra.com/user/me/apps](https://dev.telstra.com/user/me/apps) and ensure there are no white spaces in client_id and client_secret\n",
            "content": {}
          },
          "404": {
            "description": "The requested URI does not exist\n",
            "content": {}
          },
          "503": {
            "description": "The service is currently unavailable.\n\nPlease correct the API endpoint and try again. If the error persists even after re-try, check our [https://dev.telstra.com/api/status](https://dev.telstra.com/api/status) page to ensure the service is up and running.\nIf the service is not up and running check our forum page [https://dev.telstra.com/telstradev-forum/icm-service-api-forum](https://dev.telstra.com/telstradev-forum/icm-service-api-forum) and leave a post to confirm the outage for the Telstradev admin to check the issue.\n",
            "content": {}
          },
          "default": {
            "description": "An internal error occurred when processing the request.\n\nIf the error persists even after re-try, check our [https://dev.telstra.com/api/status](https://dev.telstra.com/api/status) page to ensure the service is up and running. If the service is not up and running check our forum page [https://dev.telstra.com/telstradev-forum/icm-service-api-forum](https://dev.telstra.com/telstradev-forum/icm-service-api-forum) and leave a post to confirm the outage for the Telstradev admin to check the issue.\n",
            "content": {}
          }
        },
        "x-code-samples": [
          {
            "lang": "curl",
            "source": "#!/bin/bash\n# Obtain these keys from the Telstra Developer Portal\nCLIENT_KEY=\"your client key\"\nCLIENT_SECRET=\"your client secret\"\n\ncurl -X POST -H 'Content-Type: application/x-www-form-urlencoded' \\\n-d 'grant_type=client_credentials&client_id=$CLIENT_KEY&client_secret=$CLIENT_SECRET&scope=NSMS' \\\n'https://tapi.telstra.com/v2/oauth/token'  \n"
          }
        ]
      }
    },
    "/v1/iot-connectivity/v2/services": {
      "get": {
        "operationId": "getServices",
        "parameters": [
          {
            "description": "Current page number",
            "in": "query",
            "name": "pageNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Size of the page",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Order Fields By",
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Order Direction",
            "in": "query",
            "name": "orderDirection",
            "schema": {
              "$ref": "#/components/schemas/OrderDirection"
            }
          },
          {
            "description": "Account Number",
            "in": "query",
            "name": "accountNumber",
            "schema": {
              "$ref": "#/components/schemas/Query"
            }
          },
          {
            "description": "imsi filter",
            "explode": true,
            "in": "query",
            "name": "imsi",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "iccid filter",
            "explode": true,
            "in": "query",
            "name": "iccid",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "msisdn filter",
            "explode": true,
            "in": "query",
            "name": "msisdn",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "serialNumber filter",
            "explode": true,
            "in": "query",
            "name": "serialNumber",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "serviceStatus filter",
            "explode": true,
            "in": "query",
            "name": "serviceStatus",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "lastConnected filter",
            "explode": true,
            "in": "query",
            "name": "lastConnected",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "createdAt filter",
            "explode": true,
            "in": "query",
            "name": "createdAt",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "updatedAt filter",
            "explode": true,
            "in": "query",
            "name": "updatedAt",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "imei filter",
            "explode": true,
            "in": "query",
            "name": "imei",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "imeiSv filter",
            "explode": true,
            "in": "query",
            "name": "imeiSv",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "lastBillDate filter",
            "explode": true,
            "in": "query",
            "name": "lastBillDate",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "nextBillDate filter",
            "explode": true,
            "in": "query",
            "name": "nextBillDate",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "totalDataAllocation filter",
            "explode": true,
            "in": "query",
            "name": "totalDataAllocation",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "basePlanCode filter",
            "explode": true,
            "in": "query",
            "name": "basePlanCode",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "basePlanDescription filter",
            "explode": true,
            "in": "query",
            "name": "basePlanDescription",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "basePlanAllocation filter",
            "explode": true,
            "in": "query",
            "name": "basePlanAllocation",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "basePlanCost filter",
            "explode": true,
            "in": "query",
            "name": "basePlanCost",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "bonusPlanCode filter",
            "explode": true,
            "in": "query",
            "name": "bonusPlanCode",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "bonusPlanDescription filter",
            "explode": true,
            "in": "query",
            "name": "bonusPlanDescription",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "bonusPlanAllocation filter",
            "explode": true,
            "in": "query",
            "name": "bonusPlanAllocation",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "bonusPlanCost filter",
            "explode": true,
            "in": "query",
            "name": "bonusPlanCost",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "totalData filter",
            "explode": true,
            "in": "query",
            "name": "totalData",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "uploadData filter",
            "explode": true,
            "in": "query",
            "name": "uploadData",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "downloadData filter",
            "explode": true,
            "in": "query",
            "name": "downloadData",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "dataCallCount filter",
            "explode": true,
            "in": "query",
            "name": "dataCallCount",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "incomingVoiceCallCount filter",
            "explode": true,
            "in": "query",
            "name": "incomingVoiceCallCount",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "incomingVoiceCallDuration filter",
            "explode": true,
            "in": "query",
            "name": "incomingVoiceCallDuration",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "outgoingVoiceCallCount filter",
            "explode": true,
            "in": "query",
            "name": "outgoingVoiceCallCount",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "outgoingVoiceCallDuration filter",
            "explode": true,
            "in": "query",
            "name": "outgoingVoiceCallDuration",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "incomingSmsCount filter",
            "explode": true,
            "in": "query",
            "name": "incomingSmsCount",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "outgoingSmsCount filter",
            "explode": true,
            "in": "query",
            "name": "outgoingSmsCount",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "cellName filter",
            "explode": true,
            "in": "query",
            "name": "cellName",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "cellLatitude filter",
            "explode": true,
            "in": "query",
            "name": "cellLatitude",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "cellLongitude filter",
            "explode": true,
            "in": "query",
            "name": "cellLongitude",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "groups id filter",
            "explode": true,
            "in": "query",
            "name": "groupId",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "groups name filter",
            "explode": true,
            "in": "query",
            "name": "groupName",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "inSession filter",
            "explode": true,
            "in": "query",
            "name": "inSession",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "ipAddress filter",
            "explode": true,
            "in": "query",
            "name": "ipAddress",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "blockStatus filter",
            "explode": true,
            "in": "query",
            "name": "blockStatus",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "planType filter",
            "explode": true,
            "in": "query",
            "name": "planType",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          },
          {
            "description": "sourceSystem filter",
            "explode": true,
            "in": "query",
            "name": "sourceSystem",
            "schema": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GetServiceSimsResponse"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The request was successfully processed"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            },
            "description": "Invalid Input Parameter Provided\n\nThe request is missing Authorization parameters.\nRefer to the sample code for generate authentication token in the link for more details [https://dev.telstra.com/content/telstra-iot-connectivity-service-api#section/Authentication](https://dev.telstra.com/content/telstra-iot-connectivity-service-api#section/Authentication)\n"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            },
            "description": "User has not provided access credentials\n\nTECH-ERR - Either the token has expired or incorrect token was used. <br/><br/>\nOR <br/><br/>\nTECH-ERR - Technical error : Invalid API call as no apiproduct match found. Credit card billing method is not supported. Update billing method to Telstra Account from update billing method page. If you don't have a Telstra Account ending with 0 but ABN is available then you can request for a Telstra Account by filling the details in this link https://dev.telstra.com/content/requesting-telstra-billing-account\nIf problem persists, write a post in ICM Service API forum page [https://dev.telstra.com/telstradev-forum/icm-service-api-forum](https://dev.telstra.com/telstradev-forum/icm-service-api-forum) for the TelstraDev admin to check the issue.\nRefer to the sample code for **generate authentication token** in the link for more details [https://dev.telstra.com/content/telstra-iot-connectivity-service-api#section/Authentication](https://dev.telstra.com/content/telstra-iot-connectivity-service-api#section/Authentication)\n"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            },
            "description": "User lacks roles to access this resource\n\nAuthorization credentials passed and accepted but account does not have permission <br/><br/>\nOR <br/><br/>\nSpikeArrest-The API call rate limit has been exceeded.\nYou will receive a SpikeArrest error in two possible situations:\nA: You have exceeded your free trial quota. If you would like to continue using the ICM Service API, please upgrade to a paid plan by creating a company with Telstra Billing details (not, credit card is no longer accepted for this API product).\nB: Concurrent API Calls are higher than supported, reduce the concurrent calls and try again. If problem persists, contact us at [telstradev@team.telstra.com](telstradev@team.telstra.com).\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            },
            "description": "Requested resource not found\n\nThe URL is incorrect. Correct the URL and try again.\n\nFor Free Trial:\nA Free Trial MSISDN may have been previously provisioned. Free Trial developers can be provisioned with only 1 Free Trial MSISDN.\nUse only the default App \"Free Trial APIs\". If a new app was created, it will throw this error.\nFor paid version:\nIf you are a customer with Telstra account (not credit card), use the keys available under https://dev.telstra.com/user/me/apps under the App name \"Production Keys\".\nExecute `GET all services` call to ensure you get successful response. \n\nIf valid response is not found, Please raise an issue with ICM Support [ICMSupport@team.telstra.com](ICMSupport@team.telstra.com) along with request details and error details.\n"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error\n\nTechnical error: A server error has occurred while processing your request or the endpoints provided does not exist in the API.\n\nIf the error persists even after re-try, check our https://dev.telstra.com/api/status page to ensure the service is up and running. If the service is not up and running check our forum page [https://dev.telstra.com/telstradev-forum/icm-service-api-forum](https://dev.telstra.com/telstradev-forum/icm-service-api-forum) and leave a post to confirm the outage for the Telstradev admin to check the issue.\n"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get Filtered Paginated List Of Services",
        "tags": [
          "Services"
        ]
      }
    },
    "/v1/iot-connectivity/v2/services/{imsi}": {
      "get": {
        "operationId": "getService",
        "parameters": [
          {
            "description": "Sim IMSI",
            "in": "path",
            "name": "imsi",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ServiceSim"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The request was successfully processed"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            },
            "description": "Invalid Input Parameter Provided\n\nThe request is missing Authorization parameters.\nRefer to the sample code for generate authentication token in the link for more details [https://dev.telstra.com/content/telstra-iot-connectivity-service-api#section/Authentication](https://dev.telstra.com/content/telstra-iot-connectivity-service-api#section/Authentication)\n"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            },
            "description": "User has not provided access credentials\n\nTECH-ERR - Either the token has expired or incorrect token was used. <br/><br/>\nOR <br/><br/>\nTECH-ERR - Technical error : Invalid API call as no apiproduct match found. Credit card billing method is not supported. Update billing method to Telstra Account from update billing method page. If you don't have a Telstra Account ending with 0 but ABN is available then you can request for a Telstra Account by filling the details in this link https://dev.telstra.com/content/requesting-telstra-billing-account\nIf problem persists, write a post in ICM Service API forum page [https://dev.telstra.com/telstradev-forum/icm-service-api-forum](https://dev.telstra.com/telstradev-forum/icm-service-api-forum) for the TelstraDev admin to check the issue.\nRefer to the sample code for **generate authentication token** in the link for more details [https://dev.telstra.com/content/telstra-iot-connectivity-service-api#section/Authentication](https://dev.telstra.com/content/telstra-iot-connectivity-service-api#section/Authentication)\n"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            },
            "description": "User lacks roles to access this resource\n\nAuthorization credentials passed and accepted but account does not have permission <br/><br/>\nOR <br/><br/>\nSpikeArrest-The API call rate limit has been exceeded.\nYou will receive a SpikeArrest error in two possible situations:\nA: You have exceeded your free trial quota. If you would like to continue using the ICM Service API, please upgrade to a paid plan by creating a company with Telstra Billing details (not, credit card is no longer accepted for this API product).\nB: Concurrent API Calls are higher than supported, reduce the concurrent calls and try again. If problem persists, contact us at [telstradev@team.telstra.com](telstradev@team.telstra.com).\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            },
            "description": "Requested resource not found\n\nThe URL is incorrect. Correct the URL and try again.\n\nFor Free Trial:\nA Free Trial MSISDN may have been previously provisioned. Free Trial developers can be provisioned with only 1 Free Trial MSISDN.\nUse only the default App \"Free Trial APIs\". If a new app was created, it will throw this error.\nFor paid version:\nIf you are a customer with Telstra account (not credit card), use the keys available under https://dev.telstra.com/user/me/apps under the App name \"Production Keys\".\nExecute `GET single service` call to ensure you get successful response.\n\nIf valid response is not found, Please raise an issue with ICM Support [ICMSupport@team.telstra.com](ICMSupport@team.telstra.com) along with request details and error details.\n"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error\n\nTechnical error: A server error has occurred while processing your request or the endpoints provided does not exist in the API.\n\nIf the error persists even after re-try, check our https://dev.telstra.com/api/status page to ensure the service is up and running. If the service is not up and running check our forum page [https://dev.telstra.com/telstradev-forum/icm-service-api-forum](https://dev.telstra.com/telstradev-forum/icm-service-api-forum) and leave a post to confirm the outage for the Telstradev admin to check the issue.\n"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get Single Service",
        "tags": [
          "Services"
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "Authorization": {
        "description": "Bearer <Access Token>",
        "explode": false,
        "in": "header",
        "name": "authorization",
        "required": true,
        "schema": {
          "format": "string",
          "type": "string"
        },
        "style": "simple"
      }
    },
    "schemas": {
      "BadRequestError": {
        "properties": {
          "status": {
            "enum": [
              400
            ],
            "type": "number"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "NotFoundError": {
        "properties": {
          "status": {
            "enum": [
              404
            ],
            "type": "number"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "InternalServerError": {
        "properties": {
          "status": {
            "enum": [
              500
            ],
            "type": "number"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrderDirection": {
        "enum": [
          "DESC",
          "ASC"
        ],
        "type": "string"
      },
      "Query": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ]
      },
      "QueryFilter": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          {
            "$ref": "#/components/schemas/FilterObject"
          }
        ]
      },
      "FilterObject": {
        "properties": {
          "eq": {
            "$ref": "#/components/schemas/FilterValue"
          },
          "eqOrNull": {
            "$ref": "#/components/schemas/FilterValue"
          },
          "gt": {
            "$ref": "#/components/schemas/FilterValue"
          },
          "gte": {
            "$ref": "#/components/schemas/FilterValue"
          },
          "jq": {
            "$ref": "#/components/schemas/FilterValue"
          },
          "lt": {
            "$ref": "#/components/schemas/FilterValue"
          },
          "lte": {
            "$ref": "#/components/schemas/FilterValue"
          },
          "match": {
            "oneOf": [
              {
                "type": "string"
              }
            ]
          },
          "range": {
            "items": {
              "$ref": "#/components/schemas/FilterValue"
            },
            "maxItems": 2,
            "minItems": 2,
            "type": "array"
          },
          "isNull": {
            "type": "boolean"
          },
          "in": {
            "$ref": "#/components/schemas/FilterValue"
          },
          "neq": {
            "$ref": "#/components/schemas/FilterValue"
          }
        },
        "type": "object"
      },
      "FilterValue": {
        "oneOf": [
          {
            "items": {
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "type": "boolean"
                },
                {
                  "format": "date-time",
                  "type": "string"
                }
              ]
            },
            "type": "array"
          },
          {
            "format": "date-time",
            "type": "string"
          },
          {
            "type": "number"
          },
          {
            "type": "boolean"
          }
        ]
      },
      "OAuthResponse": {
        "title": "OAuthResponse",
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "OAuth access token"
          },
          "token_type": {
            "type": "string",
            "description": "OAuth token type"
          },
          "expires_in": {
            "type": "string",
            "description": "OAuth expiry time in seconds. Tokens expire in one hour."
          }
        }
      },
      "GetServiceSimsResponse": {
        "properties": {
          "sims": {
            "items": {
              "$ref": "#/components/schemas/ServiceSim"
            },
            "type": "array"
          },
          "count": {
            "type": "number"
          }
        },
        "required": [
          "count",
          "sims"
        ],
        "type": "object"
      },
      "ServiceSim": {
        "properties": {
          "imsi": {
            "description": "International Mobile Subscriber Identity",
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "iccid": {
            "type": "string"
          },
          "msisdn": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          },
          "serviceStatus": {
            "$ref": "#/components/schemas/ServiceStatus"
          },
          "lastConnected": {
            "format": "date-time",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "imei": {
            "nullable": true,
            "type": "string"
          },
          "lastBillDate": {
            "format": "date-time",
            "type": "string"
          },
          "nextBillDate": {
            "format": "date-time",
            "type": "string"
          },
          "totalDataAllocation": {
            "type": "string"
          },
          "basePlanCode": {
            "nullable": true,
            "type": "string"
          },
          "basePlanDescription": {
            "nullable": true,
            "type": "string"
          },
          "basePlanAllocation": {
            "nullable": true,
            "type": "string"
          },
          "basePlanCost": {
            "nullable": true,
            "type": "number"
          },
          "bonusPlanCode": {
            "nullable": true,
            "type": "string"
          },
          "bonusPlanDescription": {
            "nullable": true,
            "type": "string"
          },
          "bonusPlanAllocation": {
            "nullable": true,
            "type": "string"
          },
          "bonusPlanCost": {
            "nullable": true,
            "type": "number"
          },
          "planType": {
            "$ref": "#/components/schemas/Tag"
          },
          "totalData": {
            "type": "string"
          },
          "uploadData": {
            "type": "string"
          },
          "downloadData": {
            "type": "string"
          },
          "dataCallCount": {
            "type": "number"
          },
          "incomingVoiceCallCount": {
            "type": "number"
          },
          "incomingVoiceCallDuration": {
            "type": "string"
          },
          "outgoingVoiceCallCount": {
            "type": "number"
          },
          "outgoingVoiceCallDuration": {
            "type": "string"
          },
          "incomingSmsCount": {
            "type": "number"
          },
          "outgoingSmsCount": {
            "type": "number"
          },
          "cellName": {
            "nullable": true,
            "type": "string"
          },
          "cellLatitude": {
            "type": "string"
          },
          "cellLongitude": {
            "type": "string"
          },
          "blockStatus": {
            "$ref": "#/components/schemas/BlockStatus"
          },
          "sourceSystem": {
            "enum": [
              "MICA",
              "B2B"
            ],
            "type": "string"
          }
        },
        "required": [
          "accountNumber",
          "basePlanAllocation",
          "basePlanCode",
          "basePlanCost",
          "basePlanDescription",
          "blockStatus",
          "bonusPlanAllocation",
          "bonusPlanCode",
          "bonusPlanCost",
          "bonusPlanDescription",
          "cellLatitude",
          "cellLongitude",
          "cellName",
          "cidn",
          "createdAt",
          "dataCallCount",
          "deletedAt",
          "downloadData",
          "groups",
          "iccid",
          "imei",
          "imsi",
          "incomingSmsCount",
          "incomingVoiceCallCount",
          "incomingVoiceCallDuration",
          "lastBillDate",
          "lastConnected",
          "msisdn",
          "nextBillDate",
          "outgoingSmsCount",
          "outgoingVoiceCallCount",
          "outgoingVoiceCallDuration",
          "planType",
          "serialNumber",
          "serviceStatus",
          "sourceSystem",
          "totalData",
          "totalDataAllocation",
          "updatedAt",
          "uploadData"
        ],
        "type": "object"
      },
      "UnauthorizedError": {
        "properties": {
          "status": {
            "enum": [
              401
            ],
            "type": "number"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ForbiddenError": {
        "properties": {
          "status": {
            "enum": [
              403
            ],
            "type": "number"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceStatus": {
        "description": "Current service status for a SIM:\n* `AC` - Active\n* `TS` - Temporarily suspended. A suspended SIM will automatically be reactivated in 28 days unless activated manually\n* `TD` - Temporarily disabled\n* `DE` - Deactivated\n",
        "enum": [
          "AC",
          "TS",
          "TD",
          "DE"
        ],
        "type": "string"
      },
      "Tag": {
        "enum": [
          "STANDARD",
          "SHARED"
        ],
        "type": "string"
      },
      "BlockStatus": {
        "enum": [
          "BLOCKED",
          "PENDING_BLOCK",
          "PENDING_UNBLOCK",
          "UNBLOCKED"
        ],
        "type": "string"
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}