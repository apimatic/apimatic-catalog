{"openapi":"3.0.0","info":{"title":"NFT API","version":"1.0.0"},"paths":{"/asset_info/{contractAddress}/{tokenId}":{"get":{"tags":["NFT Assets"],"summary":"NFT information endpoint","description":"This endpoint allows MoonPay to get required information about an NFT. It's used by the widget and MoonPay's server to get the NFT price, availability and more.","parameters":[{"name":"contractAddress","in":"path","description":"The public key address responsible for deploying an NFT contract on the blockchain.","required":true,"schema":{"type":"string","description":"With our NFT lite flow you do not need the actual NFT contract address and a placeholder value is acceptable."}},{"name":"tokenId","in":"path","description":"Token ID of the asset.","required":true,"schema":{"type":"string","description":"If this ID is prefixed with double underscore then it will be treated as a fake token ID. However, a real token ID will need to be provided at a later stage."}},{"name":"listingId","in":"query","description":"ListingId as provided in the widget URL. If not present the parameter will be omitted.","required":false,"schema":{"type":"string"}},{"name":"walletAddress","in":"query","description":"This will represent the buyer's wallet address if provided in the URL and/or provided by the customer in MP flow.","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"tokenId":{"type":"string","description":"Token ID of the asset. If this ID is prefixed with double underscore then it will be treated as a fake token ID. However, a real token ID will need to be provided at a later stage."},"contractAddress":{"type":"string","description":"The public key address responsible for deploying an NFT contract on the blockchain. With our NFT lite flow you do not need the actual NFT contract address and a placeholder value is acceptable."},"name":{"type":"string","description":"NFT name"},"collection":{"type":"string","description":"NFT collection name"},"imageUrl":{"type":"string","description":"Image will be shown in a 1:1 aspect ratio with object-fit cover resizing config. Allowed formats are: png, jpg, jpeg, gif, webp"},"explorerUrl":{"type":"string","description":"Optional URL. If provided, it will render a link in MoonPay widget to access the asset on chain."},"price":{"type":"number","format":"float","description":"NFT price based on the priceCurrencyCode parameter. If ETH then the price should reflect the amount in ETH (0.05). If USDC then the price should reflect the amount in USDC (25)"},"priceCurrencyCode":{"type":"string","description":"The crypto currency code used to price the NFT e.g. ETH, USDC"},"quantity":{"type":"integer","description":"Available amount of the NFT"},"sellerAddress":{"type":"string","description":"Wallet address of the seller. Only required if sellType is secondary. Case sensitivity depends on the network."},"sellType":{"type":"string","description":"Acceptable values are Primary or Secondary."},"flow":{"type":"string","description":"The MoonPay NFT solution being used. Acceptable values are Lite, Direct and Injection."},"network":{"type":"string","description":"The blockchain network being used for the NFT collection. Acceptable values for sandbox and production are: algorand, avalanche_c_chain, binance, binance_smart_chain, bitcoin, bitcoin_cash, cardano, celo, cosmos, dash, deversifi, digibyte, dogecoin, elrond, eosio, ethereum, ethereum_classic, filecoin, flow, hedera, hive, immutable, iota, kava, klaytn, kovan, lbry, litecoin, mobilecoin, nano, near, nem, neo, nimiq, ontology, palm, polkadot, polygon, qtum, ravencoin, rinkeby, ripple, simple_ledger_protocol, solana, sorare, stacks, stellar, terra, tezos, tomochain, tron, vechain, waves, wax, zcash, zilliqa, zksync."}}}}}}}}},"/calldata":{"post":{"tags":["NFT Delivery"],"summary":"Generate calldata to deliver the NFT","description":"This endpoint will be called by MoonPay to generate calldata required to conduct NFT purchase on chain.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"tokenId":{"type":"string"},"contractAddress":{"type":"string"},"metadata":{"type":"string"},"buyerWalletAddress":{"type":"string","description":"Wallet address of the customer. Please note the NFT should still be delivered to MoonPay's SC (msg.sender)"},"quantity":{"type":"number"},"listingId":{"type":"string","description":"Only required if was passed to the widget."}}}}}},"responses":{"200":{"description":"Successfully delivered the NFT.","content":{"application/json":{"schema":{"type":"object","properties":{"calldata":{"type":"string"},"contractAddress":{"type":"string","description":"Address of the contract which we should call with generated calldata."}}}}}}}}},"/lite/deliver_nft/{contractAddress}/{tokenId}":{"post":{"tags":["NFT Delivery"],"summary":"Deliver NFT request","description":"This endpoint will be called by MoonPay to instruct you to deliver the NFT. Once a request is received, proceed to deliver the NFT to the buyerWalletAddress.","parameters":[{"name":"contractAddress","in":"path","description":"The public key address responsible for deploying an NFT contract on the blockchain. Should be identical to the contractAddress used in the asset_info endpoint.","required":true,"schema":{"type":"string"}},{"name":"tokenId","in":"path","description":"Token ID of the asset. If this ID is prefixed with double underscore then it will be treated as a fake token ID. However, a real token ID will need to be provided at a later stage. Should be identical to the tokenId used in the asset_info endpoint.","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"mode":{"type":"string","enum":["test","live"],"description":"Indicates if the NFT delivered is in our test sandbox or live production environments."},"buyerWalletAddress":{"type":"string","description":"The wallet address of the buyer."},"priceCurrencyCode":{"type":"string","description":"The code of the cryptocurrency the customer completed the purchase."},"price":{"type":"number","description":"The amount the NFT was purchased for."},"quantity":{"type":"string","description":"For ERC-721 tokens this will always be 1."},"sellerWalletAddress":{"type":"string","description":"The wallet address of the seller. For Secondary sales only."},"listingId":{"type":"string","description":"Only required if was passed to the widget."}}}}}},"responses":{"200":{"description":"Successfully delivered the NFT.","content":{"application/json":{"schema":{"type":"object","properties":{"transactionId":{"type":"string"}}}}}},"400":{"description":"Delivery could not be initiated. Response may include a reason for our logs."},"403":{"description":"NFT not available for sale. MoonPay will cancel the customer transaction."},"404":{"description":"NFT not found. MoonPay will cancel the customer transaction."},"500":{"description":"Something went wrong. MoonPay will cancel the customer transaction."}}}},"/transaction_status":{"get":{"tags":["NFT Delivery"],"summary":"Transaction Status","description":"This endpoint will be called by MoonPay to retrieve the status of the NFT.","parameters":[{"name":"id","in":"query","description":"Comma separated list of transaction IDs e.g. id=0,1,2,3","required":true,"style":"form","explode":false,"schema":{"type":"array","items":{"type":"string"}}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"array","items":{"type":"array","items":{"properties":{"data":{"type":"object","properties":{"id":{"type":"string","description":"Transaction ID."},"status":{"type":"string","description":"Status of the transaction. Accepted values are completed, failed, pending."},"transactionHash":{"type":"array","items":{"type":"string"},"description":"Transaction hashes from the chain. For use-cases where transaction hashes are not generated, this field is optional."},"statusChangedAt":{"type":"string","format":"date-time","description":"Indicate when the last status change happened. ISO 8601 format."},"failureReason":{"type":"string","description":"Include only if transaction failed. This should explain why transaction failed."},"tokenId":{"type":"array","items":{"type":"string"},"description":"Only applicable if a fake token ID has been provided before. If more than 1 NFTs were created, this should be an array of strings."}},"description":"In your response, the array should be within \"data\": []."}}}}}}}},"404":{"description":"Transaction not found."}}}}},"x-readme":{"explorer-enabled":true,"proxy-enabled":true,"samples-enabled":true}}