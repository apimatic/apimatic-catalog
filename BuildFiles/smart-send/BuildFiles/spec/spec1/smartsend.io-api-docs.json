{
    "openapi": "3.0.0",
    "info": {
        "title": "Smart Send API",
        "description": "This online documentation describes usage of the Smart Send api. We offer plugins for many webshop systems all consuming the API outlined in this documentation. Usage of the API require an active account for the Smart Send system and is subject to usage restrictions such as rate limit as described in the terms and conditions.\n *     Shopify plugin: https://www.smartsend.io/integrations/shopify\n *     WooCommerce plugin: https://www.smartsend.io/integrations/woocommerce\n *     PrestaShop plugin: https://www.smartsend.io/integrations/prestashop\n *     Magento plugin: https://www.smartsend.io/integrations/magento",
        "termsOfService": "https://app.smartsend.io/terms-of-service/",
        "contact": {
            "name": "Support",
            "url": "https://app.smartsend.io/support/",
            "email": "support@smartsend.io"
        },
        "version": "1.0.1"
    },
    "servers": [
        {
            "url": "https://app.smartsend.io/api/",
            "description": "Production"
        }
    ],
    "paths": {
        "/v1/website/{team}/agents/carrier/{carrier}/country/{country}": {
            "get": {
                "tags": [
                    "Agents"
                ],
                "summary": "List carrier agents in country.",
                "description": "This endpoint is used to index all agents for a given carrier in a given country.",
                "operationId": "ListAgentsCarrierCountry",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/team"
                    },
                    {
                        "$ref": "#/components/parameters/carrier"
                    },
                    {
                        "$ref": "#/components/parameters/country"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "Data container",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AgentResource"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/LegthAwarePaginationResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                }
            }
        },
        "/v1/website/{team}/agents/carrier/{carrier}/country/{country}/agentno/{agentNo}": {
            "get": {
                "tags": [
                    "Agents"
                ],
                "summary": "Get specific carrier agent in country.",
                "description": "This endpoint is used to get a single agent for a given carrier in a given country by the carriers own agent number.",
                "operationId": "GetAgentsCarrierCountryAgentno",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/team"
                    },
                    {
                        "$ref": "#/components/parameters/carrier"
                    },
                    {
                        "$ref": "#/components/parameters/country"
                    },
                    {
                        "name": "agentNo",
                        "in": "path",
                        "description": "The carriers own number for the agent",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "2134"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "Data container",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AgentResource"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/LegthAwarePaginationResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                }
            }
        },
        "/v1/website/{team}/agents/carrier/{carrier}/country/{country}/area/latitude/min/{minLatitude}/max/{maxLatitude}/longitude/min/{minLongitude}/max/{maxLongitude}": {
            "get": {
                "tags": [
                    "Agents"
                ],
                "summary": "List agents within a geospatial area.",
                "description": "List carrier agents in country limited by a geospatial area.",
                "operationId": "ListAgentsCarrierCountryGeoArea",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/team"
                    },
                    {
                        "$ref": "#/components/parameters/carrier"
                    },
                    {
                        "$ref": "#/components/parameters/country"
                    },
                    {
                        "name": "minLatitude",
                        "in": "path",
                        "description": "The minimum latitude of the geospatial area",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "55.64698120881716"
                    },
                    {
                        "name": "maxLatitude",
                        "in": "path",
                        "description": "The maximum latitude of the geospatial area",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "55.70887018918949"
                    },
                    {
                        "name": "minLongitude",
                        "in": "path",
                        "description": "The minimum longitude of the geospatial area",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "12.46642666088032"
                    },
                    {
                        "name": "maxLongitude",
                        "in": "path",
                        "description": "The maximum longitude of the geospatial area",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "12.64463856494562"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "Data container",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AgentResource"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/LegthAwarePaginationResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                }
            }
        },
        "/v1/website/{team}/agents/carrier/{carrier}/country/{country}/postalcode/{postalCode}": {
            "get": {
                "tags": [
                    "Agents"
                ],
                "summary": "List carrier agents in postal code.",
                "description": "This endpoint is used to index all agents for a given carrier in a given postal code.",
                "operationId": "ListAgentsCarrierCountryPostalcode",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/team"
                    },
                    {
                        "$ref": "#/components/parameters/carrier"
                    },
                    {
                        "$ref": "#/components/parameters/country"
                    },
                    {
                        "$ref": "#/components/parameters/postalCode"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "Data container",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AgentResource"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/LegthAwarePaginationResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                }
            }
        },
        "/v1/website/{team}/agents/carrier/{carrier}/country/{country}/postalcode/{postalCode}/street/{street}": {
            "get": {
                "tags": [
                    "Agents"
                ],
                "summary": "List carrier agents on given street.",
                "description": "This endpoint is used to index all agents for a given carrier on a specific street.",
                "operationId": "ListAgentsCarrierCountryPostalcodeStreet",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/team"
                    },
                    {
                        "$ref": "#/components/parameters/carrier"
                    },
                    {
                        "$ref": "#/components/parameters/country"
                    },
                    {
                        "$ref": "#/components/parameters/postalCode"
                    },
                    {
                        "$ref": "#/components/parameters/street"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "Data container",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AgentResource"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/LegthAwarePaginationResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                }
            }
        },
        "/v1/website/{team}/agents/closest/carrier/{carrier}/country/{country}/coordinates/latitude/{latitude}/longitude/{longitude}": {
            "get": {
                "tags": [
                    "Closest Agents"
                ],
                "summary": "List closest agents relative to a given geospatial point.",
                "description": "This endpoint is used to list closest agents for a given carrier to an given geospatial point.",
                "operationId": "ListClosestAgentsCarrierCountryGeospatialPoint",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/team"
                    },
                    {
                        "$ref": "#/components/parameters/carrier"
                    },
                    {
                        "$ref": "#/components/parameters/country"
                    },
                    {
                        "name": "latitude",
                        "in": "path",
                        "description": "The latitude of the geospatial point",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "55.64698120881716"
                    },
                    {
                        "name": "longitude",
                        "in": "path",
                        "description": "The longitude of the geospatial point",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "12.46642666088032"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "Data container",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AgentResource"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/LegthAwarePaginationResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                }
            }
        },
        "/v1/website/{team}/agents/closest/carrier/{carrier}/country/{country}/postalcode/{postalCode}": {
            "get": {
                "tags": [
                    "Closest Agents"
                ],
                "summary": "List closest agents relative to a postal code.",
                "description": "This endpoint is used to list closest agents for a given carrier to an address specified by country and postalcode.",
                "operationId": "ListClosestAgentsCarrierCountryPostalcode",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/team"
                    },
                    {
                        "$ref": "#/components/parameters/carrier"
                    },
                    {
                        "$ref": "#/components/parameters/country"
                    },
                    {
                        "$ref": "#/components/parameters/postalCode"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "Data container",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AgentResource"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/LegthAwarePaginationResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        },
        "/v1/website/{team}/agents/closest/carrier/{carrier}/country/{country}/postalcode/{postalCode}/city/{city}": {
            "get": {
                "tags": [
                    "Closest Agents"
                ],
                "summary": "List closest agents relative to a postal code and city.",
                "description": "This endpoint is used to list closest agents for a given carrier to an address specified by country, postalcode and city.",
                "operationId": "ListClosestAgentsCarrierCountryPostalcodeCity",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/team"
                    },
                    {
                        "$ref": "#/components/parameters/carrier"
                    },
                    {
                        "$ref": "#/components/parameters/country"
                    },
                    {
                        "$ref": "#/components/parameters/postalCode"
                    },
                    {
                        "$ref": "#/components/parameters/city"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "Data container",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AgentResource"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/LegthAwarePaginationResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        },
        "/v1/website/{team}/agents/closest/carrier/{carrier}/country/{country}/postalcode/{postalCode}/city/{city}/street/{street}": {
            "get": {
                "tags": [
                    "Closest Agents"
                ],
                "summary": "List closest agents relative to a given address.",
                "description": "This endpoint is used to list closest agents for a given carrier to an address specified by country, postalcode, city and street.",
                "operationId": "ListClosestAgentsCarrierCountryPostalcodeCityStreet",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/team"
                    },
                    {
                        "$ref": "#/components/parameters/carrier"
                    },
                    {
                        "$ref": "#/components/parameters/country"
                    },
                    {
                        "$ref": "#/components/parameters/postalCode"
                    },
                    {
                        "$ref": "#/components/parameters/city"
                    },
                    {
                        "$ref": "#/components/parameters/street"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "Data container",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AgentResource"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/LegthAwarePaginationResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        },
        "/v1/website/{team}/agents/closest/carrier/{carrier}/country/{country}/postalcode/{postalCode}/street/{street}": {
            "get": {
                "tags": [
                    "Closest Agents"
                ],
                "summary": "List closest agents relative to a postal code and street.",
                "description": "This endpoint is used to list closest agents for a given carrier to an address specified by country, postalcode and street.",
                "operationId": "ListClosestAgentsCarrierCountryPostalcodeStreet",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/team"
                    },
                    {
                        "$ref": "#/components/parameters/carrier"
                    },
                    {
                        "$ref": "#/components/parameters/country"
                    },
                    {
                        "$ref": "#/components/parameters/postalCode"
                    },
                    {
                        "$ref": "#/components/parameters/street"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "Data container",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AgentResource"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/LegthAwarePaginationResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        },
        "/v1/website/{team}/info": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get website info.",
                "description": "This endpoint is used to get details about a given website.",
                "operationId": "GetWebsiteInfo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/team"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                }
            }
        },
        "/v1/website/{team}/shipments": {
            "get": {
                "tags": [
                    "Shipments"
                ],
                "summary": "Get a list of a websites shipments",
                "description": "This endpoint is used to index a websites shipments or filter/search based on input",
                "operationId": "ListTeamShipments",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/team"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "Data container",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ShipmentResource"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/LegthAwarePaginationResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "429": {
                        "$ref": "#/components/responses/429"
                    }
                }
            },
            "post": {
                "tags": [
                    "Shipments"
                ],
                "summary": "Store a new shipment",
                "description": "This endpoint is used to create a new shipment",
                "operationId": "StoreTeamShipment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/team"
                    }
                ],
                "requestBody": {
                    "description": "Input data format",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Shipment"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ShipmentResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "429": {
                        "$ref": "#/components/responses/429"
                    }
                }
            }
        },
        "/v1/website/{team}/shipments/{shipment}": {
            "get": {
                "tags": [
                    "Shipments"
                ],
                "summary": "Get a specific shipment",
                "description": "This endpoint is used to fetch a specific shipments",
                "operationId": "GetTeamShipments",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/team"
                    },
                    {
                        "name": "shipment",
                        "in": "path",
                        "description": "Shipment ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "65482561-80dc-42e7-b22a-de1ab6dc483f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "Data container",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ShipmentResource"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/LegthAwarePaginationResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "429": {
                        "$ref": "#/components/responses/429"
                    }
                }
            }
        },
        "/v1/website/{team}/shipments/labels/combine": {
            "post": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Combine labels for multiple shipments",
                "description": "This endpoint is used to combine labels for multiple shipments into one PDF file",
                "operationId": "GetCombinedTeamShipmentLabel",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/team"
                    }
                ],
                "requestBody": {
                    "description": "Input data format",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "shipments"
                                ],
                                "properties": {
                                    "shipments": {
                                        "type": "array",
                                        "items": {
                                            "description": "Shipment",
                                            "required": [
                                                "shipment_id"
                                            ],
                                            "properties": {
                                                "shipment_id": {
                                                    "description": "Unique ID",
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "c5540f2b-3eea-45c4-957a-9d7b53f899e7"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CombinedLabelResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "429": {
                        "$ref": "#/components/responses/429"
                    }
                }
            }
        },
        "/v1/website/{team}/shipments/labels": {
            "post": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Store a new shipment and book a label",
                "description": "This endpoint is used to create a new shipment and book a label in one request",
                "operationId": "StoreTeamShipmentLabel",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/team"
                    }
                ],
                "requestBody": {
                    "description": "Input data format",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Shipment"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LabelResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "429": {
                        "$ref": "#/components/responses/429"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "PaginationResource": {
                "description": "Pagination resource",
                "required": [
                    "current_page",
                    "from",
                    "path",
                    "per_page",
                    "to"
                ],
                "properties": {
                    "current_page": {
                        "description": "The page of the current request",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "description": "Results from number",
                        "type": "integer",
                        "example": "1"
                    },
                    "path": {
                        "description": "Path of the api request used when modifying the pagination parameters",
                        "type": "string",
                        "example": "https://example.com/api/example"
                    },
                    "per_page": {
                        "description": "The number of results per page",
                        "type": "integer",
                        "example": "15"
                    },
                    "to": {
                        "description": "Results to number",
                        "type": "integer",
                        "example": "15"
                    }
                },
                "type": "object"
            },
            "LegthAwarePaginationResource": {
                "description": "Legth Aware Pagination Resource",
                "required": [
                    "last_page",
                    "total"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PaginationResource"
                    },
                    {
                        "properties": {
                            "last_page": {
                                "description": "The last page",
                                "type": "integer",
                                "example": "10"
                            },
                            "total": {
                                "description": "Total number of results",
                                "type": "integer",
                                "example": "140"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "PaginationLinksResource": {
                "description": "Pagination Links resource",
                "required": [
                    "first",
                    "last",
                    "prev",
                    "next"
                ],
                "properties": {
                    "first": {
                        "description": "Link to the first page",
                        "type": "string",
                        "example": "https://app.example.com/api/pets?page=1"
                    },
                    "last": {
                        "description": "Link to the last page",
                        "type": "string",
                        "example": "https://app.example.com/api/pets?page=8"
                    },
                    "prev": {
                        "description": "Link to the previous page",
                        "type": "string",
                        "example": "https://app.example.com/api/pets?page=3"
                    },
                    "next": {
                        "description": "Link to the next page",
                        "type": "string",
                        "example": "https://app.example.com/api/pets?page=5"
                    }
                },
                "type": "object"
            },
            "ShipmentBase": {
                "description": "Base shipment",
                "required": [
                    "type",
                    "internal_id",
                    "internal_reference",
                    "shipping_carrier",
                    "shipping_method"
                ],
                "properties": {
                    "internal_id": {
                        "description": "The database id used by the website for the resource",
                        "type": "string",
                        "example": "1226"
                    },
                    "internal_reference": {
                        "description": "The id that is used to reference the resource externally",
                        "type": "string",
                        "example": "AB-00001445"
                    },
                    "shipping_carrier": {
                        "description": "The carrier code",
                        "type": "string",
                        "enum": [
                            "postnord",
                            "gls",
                            "dao",
                            "bifrost",
                            "bring"
                        ],
                        "example": "postnord"
                    },
                    "shipping_method": {
                        "description": "The code for the shipping method",
                        "type": "string",
                        "example": "collect"
                    },
                    "subtotal_price_excluding_tax": {
                        "description": "The subtotal price excluding tax",
                        "type": "number",
                        "example": "159.2"
                    },
                    "subtotal_price_including_tax": {
                        "description": "The subtotal price including tax",
                        "type": "number",
                        "example": "199"
                    },
                    "shipping_price_excluding_tax": {
                        "description": "The shipping price excluding tax",
                        "type": "number",
                        "example": "20"
                    },
                    "shipping_price_including_tax": {
                        "description": "The shipping price including tax",
                        "type": "number",
                        "example": "25"
                    },
                    "total_price_excluding_tax": {
                        "description": "The total price excluding tax",
                        "type": "number",
                        "example": "179.2"
                    },
                    "total_price_including_tax": {
                        "description": "The total price including tax",
                        "type": "number",
                        "example": "224"
                    },
                    "total_tax_amount": {
                        "description": "The total tax amount",
                        "type": "number",
                        "example": "44.8"
                    },
                    "currency": {
                        "description": "The three letter ISO4217 currency code",
                        "type": "string",
                        "example": "EUR"
                    }
                },
                "type": "object"
            },
            "ReceiverBase": {
                "description": "Base Receiver",
                "required": [
                    "internal_id",
                    "internal_reference",
                    "address_line1",
                    "postal_code",
                    "city",
                    "country",
                    "email"
                ],
                "properties": {
                    "internal_id": {
                        "description": "The database id used by the website for the resource",
                        "type": "string",
                        "example": "U3778"
                    },
                    "internal_reference": {
                        "description": "The id that is used to reference the resource externally",
                        "type": "string",
                        "example": "U-00001675"
                    },
                    "company": {
                        "description": "Company name",
                        "type": "string",
                        "example": "Maersk"
                    },
                    "name_line1": {
                        "description": "First line used to store the name of the receiver",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "name_line2": {
                        "description": "Second line used to store the name of the receiver",
                        "type": "string",
                        "example": "Att. Finance"
                    },
                    "address_line1": {
                        "description": "First line used to store the address",
                        "type": "string",
                        "example": "Esplanaden 50"
                    },
                    "address_line2": {
                        "description": "Second line used to store the address",
                        "type": "string",
                        "example": "2nd floor"
                    },
                    "postal_code": {
                        "description": "Postal code",
                        "type": "string",
                        "example": "1098"
                    },
                    "city": {
                        "description": "City",
                        "type": "string",
                        "example": "Copenhagen"
                    },
                    "state": {
                        "description": "State",
                        "type": "string"
                    },
                    "region": {
                        "description": "Region",
                        "type": "string",
                        "example": "Capital"
                    },
                    "country": {
                        "description": "ISO3166 alpha 2 country code",
                        "type": "string",
                        "example": "DK"
                    },
                    "sms": {
                        "description": "Mobile phone number",
                        "type": "string",
                        "example": "30274735"
                    },
                    "email": {
                        "description": "Email address",
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    }
                },
                "type": "object"
            },
            "SenderBase": {
                "description": "Base Sender",
                "required": [
                    "internal_id",
                    "internal_reference",
                    "company",
                    "address_line1",
                    "postal_code",
                    "city",
                    "country",
                    "email"
                ],
                "properties": {
                    "internal_id": {
                        "description": "The database id used by the website for the resource",
                        "type": "string",
                        "example": "U3778"
                    },
                    "internal_reference": {
                        "description": "The id that is used to reference the resource externally",
                        "type": "string",
                        "example": "U-00001675"
                    },
                    "company": {
                        "description": "Company name",
                        "type": "string",
                        "example": "Maersk"
                    },
                    "name_line1": {
                        "description": "First line used to store the name of the receiver",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "name_line2": {
                        "description": "Second line used to store the name of the receiver",
                        "type": "string",
                        "example": "Att. Finance"
                    },
                    "address_line1": {
                        "description": "First line used to store the address",
                        "type": "string",
                        "example": "Esplanaden 50"
                    },
                    "address_line2": {
                        "description": "Second line used to store the address",
                        "type": "string",
                        "example": "2nd floor"
                    },
                    "postal_code": {
                        "description": "Postal code",
                        "type": "string",
                        "example": "1098"
                    },
                    "city": {
                        "description": "City",
                        "type": "string",
                        "example": "Copenhagen"
                    },
                    "state": {
                        "description": "State",
                        "type": "string"
                    },
                    "region": {
                        "description": "Region",
                        "type": "string",
                        "example": "Capital"
                    },
                    "country": {
                        "description": "ISO3166 alpha 2 country code",
                        "type": "string",
                        "example": "DK"
                    },
                    "sms": {
                        "description": "Mobile phone number",
                        "type": "string",
                        "example": "30274735"
                    },
                    "email": {
                        "description": "Email address",
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    }
                },
                "type": "object"
            },
            "PickupBase": {
                "description": "Base Pickup",
                "required": [
                    "internal_id",
                    "internal_reference",
                    "agent_no"
                ],
                "properties": {
                    "internal_id": {
                        "description": "The database id used by the website for the resource",
                        "type": "string",
                        "example": "U3778"
                    },
                    "internal_reference": {
                        "description": "The id that is used to reference the resource externally",
                        "type": "string",
                        "example": "U-00001675"
                    },
                    "agent_no": {
                        "description": "The carriers own number for the agent",
                        "type": "string",
                        "example": "2134"
                    },
                    "company": {
                        "description": "Company name",
                        "type": "string",
                        "example": "Maersk"
                    },
                    "name_line1": {
                        "description": "First line used to store the name of the receiver",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "name_line2": {
                        "description": "Second line used to store the name of the receiver",
                        "type": "string",
                        "example": "Att. Finance"
                    },
                    "address_line1": {
                        "description": "First line used to store the address",
                        "type": "string",
                        "example": "Esplanaden 50"
                    },
                    "address_line2": {
                        "description": "Second line used to store the address",
                        "type": "string",
                        "example": "2nd floor"
                    },
                    "postal_code": {
                        "description": "Postal code",
                        "type": "string",
                        "example": "1098"
                    },
                    "city": {
                        "description": "City",
                        "type": "string",
                        "example": "Copenhagen"
                    },
                    "state": {
                        "description": "State",
                        "type": "string"
                    },
                    "region": {
                        "description": "Region",
                        "type": "string",
                        "example": "Capital"
                    },
                    "country": {
                        "description": "ISO3166 alpha 2 country code",
                        "type": "string",
                        "example": "DK"
                    },
                    "sms": {
                        "description": "Mobile phone number",
                        "type": "string",
                        "example": "30274735"
                    },
                    "email": {
                        "description": "Email address",
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    }
                },
                "type": "object"
            },
            "ParcelBase": {
                "description": "Base Parcel",
                "required": [
                    "internal_id",
                    "internal_reference"
                ],
                "properties": {
                    "internal_id": {
                        "description": "The database id used by the website for the resource",
                        "type": "string",
                        "example": "1226"
                    },
                    "internal_reference": {
                        "description": "The id that is used to reference the resource externally",
                        "type": "string",
                        "example": "AB-00001445"
                    },
                    "weight": {
                        "description": "Parcel weight in kilograms [kg]",
                        "type": "number",
                        "minimum": "0",
                        "example": "2.35"
                    },
                    "height": {
                        "description": "Parcel height in centimeters [cm]",
                        "type": "number",
                        "minimum": "0",
                        "example": "12.2"
                    },
                    "width": {
                        "description": "Parcel width in centimeters [cm]",
                        "type": "number",
                        "minimum": "0",
                        "example": "15.8"
                    },
                    "length": {
                        "description": "Parcel length in centimeters [cm]",
                        "type": "number",
                        "minimum": "0",
                        "example": "30.5"
                    },
                    "freetext": {
                        "description": "A freetext field which is intended to be printed on the label.",
                        "type": "string",
                        "example": "Leave at doorstep"
                    },
                    "total_price_excluding_tax": {
                        "description": "Total price excluding tax",
                        "type": "number",
                        "minimum": "0",
                        "example": "79.2"
                    },
                    "total_price_including_tax": {
                        "description": "Total price including tax",
                        "type": "number",
                        "minimum": "0",
                        "example": "99"
                    },
                    "total_tax_amount": {
                        "description": "Total tax amount",
                        "type": "number",
                        "minimum": "0",
                        "example": "19.8"
                    }
                },
                "type": "object"
            },
            "ItemBase": {
                "description": "Base Item",
                "required": [
                    "internal_id",
                    "internal_reference",
                    "sku",
                    "name"
                ],
                "properties": {
                    "internal_id": {
                        "description": "The database id used by the website for the resource",
                        "type": "string",
                        "example": "1226"
                    },
                    "internal_reference": {
                        "description": "The id that is used to reference the resource externally",
                        "type": "string",
                        "example": "PRODUCT-1231456"
                    },
                    "sku": {
                        "description": "Item SKU number",
                        "type": "string",
                        "example": "12345678"
                    },
                    "name": {
                        "description": "Item name",
                        "type": "string",
                        "example": "Product A"
                    },
                    "description": {
                        "description": "Item description",
                        "type": "string",
                        "example": "Small Blue Product A"
                    },
                    "hs_code": {
                        "description": "The items HS customs number",
                        "type": "string",
                        "example": "10203040"
                    },
                    "country_of_origin": {
                        "description": "ISO3166 Alpha2 country code",
                        "type": "string",
                        "example": "CN"
                    },
                    "image_url": {
                        "description": "The url of an item image",
                        "type": "string",
                        "format": "url",
                        "example": "https://example.com/catalog/product-a.jpg"
                    },
                    "unit_weight": {
                        "description": "The item unit weight in kilograms [kg]",
                        "type": "number",
                        "example": "1.2"
                    },
                    "unit_price_excluding_tax": {
                        "description": "The item unit price excluding tax",
                        "type": "number",
                        "example": "40.6"
                    },
                    "unit_price_including_tax": {
                        "description": "The item unit price including tax",
                        "type": "number",
                        "example": "50.75"
                    },
                    "quantity": {
                        "description": "The item quantity",
                        "type": "number",
                        "example": "2"
                    },
                    "total_price_excluding_tax": {
                        "description": "The item total price excluding tax",
                        "type": "number",
                        "example": "81.2"
                    },
                    "total_price_including_tax": {
                        "description": "The item total price including tax",
                        "type": "number",
                        "example": "101.5"
                    },
                    "total_tax_amount": {
                        "description": "The item total tax amount",
                        "type": "number",
                        "example": "20.3"
                    }
                },
                "type": "object"
            },
            "Shipment": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ShipmentBase"
                    },
                    {
                        "properties": {
                            "receiver": {
                                "$ref": "#/components/schemas/ReceiverBase"
                            },
                            "sender": {
                                "$ref": "#/components/schemas/SenderBase"
                            },
                            "agent": {
                                "$ref": "#/components/schemas/PickupBase"
                            },
                            "parcels": {
                                "description": "List of parcels",
                                "type": "array",
                                "items": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ParcelBase"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "description": "List of items",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ItemBase"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            },
                            "addons": {
                                "description": "List of addons",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AddonResource"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "Error": {
                "description": "Error response",
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "description": "Description of the message",
                        "type": "string",
                        "example": "Description of the error will be inserted here."
                    }
                },
                "type": "object"
            },
            "DetailedError": {
                "description": "Detailed Error response",
                "required": [
                    "message",
                    "code"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Error"
                    },
                    {
                        "properties": {
                            "id": {
                                "description": "Unique ID of the error",
                                "type": "string",
                                "example": "",
                                "nullable": true
                            },
                            "code": {
                                "description": "Code describing the type of error",
                                "type": "string",
                                "example": "ValidationException"
                            },
                            "errors": {
                                "description": "Object with keys corresponding to the fields and each key containing an array of errors. OpenAPI does not allow for dynamic keys until version 3.1 is released",
                                "type": "object"
                            },
                            "links": {
                                "description": "Object with dynamic keys, each with a URL string value. Dynamic keys are not part of OpenAPI until version 3.1 is released",
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "AddonResource": {
                "description": "Addon Resource",
                "required": [
                    "code"
                ],
                "properties": {
                    "code": {
                        "description": "A code describing the addon",
                        "type": "string",
                        "enum": [
                            "ADHOC_PICKUP",
                            "AGE_CHECK",
                            "ALCOHOL",
                            "BAGONDOOR",
                            "CARRYIN",
                            "CARRYINHEAVY",
                            "CHRISTMASFUND",
                            "CLIMATE_COMPENSATION",
                            "DANGEROUS_GOODS",
                            "DANGEROUS_GOODS_LIMITED_QUANTITY",
                            "DELIVERYCONFIRMATION",
                            "ECONOMY",
                            "EXPRESS",
                            "EXTEND_DELIVERY",
                            "FLEXCHANGE",
                            "FLEXDELIVERY",
                            "HEAVY20KG",
                            "IDCHECK",
                            "INSURANCE",
                            "LABELESS",
                            "LEAVENOPOD",
                            "NOFLEX",
                            "NOTIFICATION",
                            "NOTIFICATION_EMAIL",
                            "NOTIFICATION_SMS",
                            "PNCREDITNOINVOICE",
                            "PRIVATERECEIVER",
                            "QR",
                            "SECONDDELIVERYATTEMPT",
                            "SIGNATURE",
                            "TYRES",
                            "VALUABLES"
                        ]
                    },
                    "value": {
                        "description": "Misc value required for certain addons",
                        "type": "string",
                        "example": "+4530274735"
                    }
                },
                "type": "object"
            },
            "AddressResource": {
                "description": "Address Resource",
                "required": [
                    "address_line1",
                    "postal_code",
                    "city",
                    "country"
                ],
                "properties": {
                    "address_line1": {
                        "description": "First line used to store the address",
                        "type": "string",
                        "example": "Esplanaden 50"
                    },
                    "address_line2": {
                        "description": "Second line used to store the address",
                        "type": "string",
                        "example": "2nd floor"
                    },
                    "postal_code": {
                        "description": "Postal code",
                        "type": "string",
                        "example": "1098"
                    },
                    "city": {
                        "description": "City",
                        "type": "string",
                        "example": "Copenhagen"
                    },
                    "state": {
                        "description": "State",
                        "type": "string"
                    },
                    "region": {
                        "description": "Region",
                        "type": "string",
                        "example": "Capital"
                    },
                    "country": {
                        "description": "ISO3166 alpha 2 country code",
                        "type": "string",
                        "example": "DK"
                    }
                },
                "type": "object"
            },
            "AgentResource": {
                "description": "Agent resource",
                "required": [
                    "id",
                    "agent_no",
                    "carrier",
                    "company",
                    "address_line1",
                    "postal_code",
                    "city",
                    "country"
                ],
                "properties": {
                    "id": {
                        "description": "Unique ID",
                        "type": "string",
                        "format": "uuid",
                        "example": "c5540f2b-3eea-45c4-957a-9d7b53f899e7"
                    },
                    "type": {
                        "description": "The resource type",
                        "type": "string",
                        "enum": [
                            "agent"
                        ],
                        "example": "agent"
                    },
                    "agent_no": {
                        "description": "The carriers own number for the agent",
                        "type": "string",
                        "example": "2134"
                    },
                    "carrier": {
                        "description": "The carrier code",
                        "type": "string",
                        "example": "postnord"
                    },
                    "distance": {
                        "description": "The calculated distance to the agent in kilometers",
                        "type": "number",
                        "minimum": 0,
                        "example": "1.22"
                    },
                    "company": {
                        "description": "The company name",
                        "type": "string",
                        "example": "Kiosk 88"
                    },
                    "name_line1": {
                        "description": "The first name line",
                        "type": "string",
                        "example": "John"
                    },
                    "name_line2": {
                        "description": "The second name line",
                        "type": "string",
                        "example": "Doe"
                    },
                    "address_line1": {
                        "description": "The first address line",
                        "type": "string",
                        "example": "Nordre Frihavnsgade"
                    },
                    "address_line2": {
                        "description": "The second address line",
                        "type": "string",
                        "example": "88"
                    },
                    "postal_code": {
                        "description": "The postal code",
                        "type": "string",
                        "example": "2100"
                    },
                    "city": {
                        "description": "The city",
                        "type": "string",
                        "example": "Copenhagen"
                    },
                    "country": {
                        "description": "ISO3166 Alpha2 country code",
                        "type": "string",
                        "example": "DK"
                    },
                    "coordinates": {
                        "$ref": "#/components/schemas/CoordinatesResource"
                    },
                    "opening_hours": {
                        "description": "Opening hours",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OpeningHourResource"
                        }
                    }
                },
                "type": "object"
            },
            "CombinedLabelParcelResource": {
                "description": "Combined Label Parcel Resource",
                "required": [
                    "parcel_id",
                    "parcel_internal_id",
                    "parcel_internal_reference",
                    "carrier_code",
                    "carrier_name",
                    "tracking_code",
                    "tracking_link"
                ],
                "properties": {
                    "parcel_id": {
                        "description": "Unique ID",
                        "type": "string",
                        "format": "uuid",
                        "example": "c5540f2b-3eea-45c4-957a-9d7b53f899e7"
                    },
                    "parcel_internal_id": {
                        "description": "The database id used by the website for the resource",
                        "type": "string",
                        "example": "88654389"
                    },
                    "parcel_internal_reference": {
                        "description": "The id that is used to reference the resource externally",
                        "type": "string",
                        "example": "223"
                    },
                    "carrier_code": {
                        "description": "The carrier code",
                        "type": "string",
                        "example": "postnord"
                    },
                    "carrier_name": {
                        "description": "The carrier name",
                        "type": "string",
                        "example": "PostNord"
                    },
                    "tracking_code": {
                        "description": "The parcels tracking code as generated by the carrier",
                        "type": "string",
                        "example": "DK123456789"
                    },
                    "tracking_link": {
                        "description": "The parcels tracking link",
                        "type": "string",
                        "format": "url",
                        "example": "https://smartsend.io/tracking/DK123456789"
                    }
                },
                "type": "object"
            },
            "CombinedLabelResource": {
                "description": "Combined Label Resource",
                "required": [
                    "type",
                    "shipments",
                    "pdf"
                ],
                "properties": {
                    "type": {
                        "description": "Description of the resource type",
                        "type": "string",
                        "example": "combined_label"
                    },
                    "shipments": {
                        "description": "List of shipments",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CombinedLabelShipmentResource"
                        }
                    },
                    "pdf": {
                        "required": [
                            "link",
                            "base_64_encoded"
                        ],
                        "properties": {
                            "link": {
                                "description": "Link to the PDF file",
                                "example": "https://example.com/labels/DK123456789.pdf"
                            },
                            "base_64_encoded": {
                                "description": "The base64 encoded PDF file",
                                "example": "<base64-encoded-pdf-here>"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CombinedLabelShipmentResource": {
                "description": "Combined Label Shipment Resource",
                "required": [
                    "shipment_id",
                    "shipment_internal_id",
                    "shipment_internal_reference",
                    "carrier_code",
                    "carrier_name",
                    "parcels"
                ],
                "properties": {
                    "shipment_id": {
                        "description": "Unique ID",
                        "type": "string",
                        "format": "uuid",
                        "example": "c5540f2b-3eea-45c4-957a-9d7b53f899e7"
                    },
                    "shipment_internal_id": {
                        "description": "The database id used by the website for the resource",
                        "type": "string",
                        "example": "870006543"
                    },
                    "shipment_internal_reference": {
                        "description": "The id that is used to reference the resource externally",
                        "type": "string",
                        "example": "123"
                    },
                    "carrier_code": {
                        "description": "The carrier code",
                        "type": "string",
                        "example": "postnord"
                    },
                    "carrier_name": {
                        "description": "The carrier name",
                        "type": "string",
                        "example": "PostNord"
                    },
                    "parcels": {
                        "description": "List of parcels",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CombinedLabelParcelResource"
                        }
                    }
                },
                "type": "object"
            },
            "CoordinatesResource": {
                "description": "Coordinates resource",
                "required": [
                    "latitude",
                    "longitude"
                ],
                "properties": {
                    "latitude": {
                        "description": "The GPS latitude",
                        "type": "number",
                        "example": "55.702632904052734"
                    },
                    "longitude": {
                        "description": "The GPS latitude",
                        "type": "string",
                        "example": "12.58386516571045"
                    }
                },
                "type": "object"
            },
            "ItemResource": {
                "description": "Item Resource",
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Unique ID",
                                "type": "string",
                                "format": "uuid",
                                "example": "c5540f2b-3eea-45c4-957a-9d7b53f899e7"
                            },
                            "type": {
                                "description": "Description of the resource type",
                                "type": "string",
                                "example": "item"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ItemBase"
                    }
                ]
            },
            "LabelParcelResource": {
                "description": "Label Parcel Resource",
                "required": [
                    "parcel_id",
                    "parcel_internal_id",
                    "parcel_internal_reference",
                    "carrier_code",
                    "carrier_name",
                    "tracking_code",
                    "tracking_link"
                ],
                "properties": {
                    "parcel_id": {
                        "description": "Unique ID",
                        "type": "string",
                        "format": "uuid",
                        "example": "c5540f2b-3eea-45c4-957a-9d7b53f899e7"
                    },
                    "parcel_internal_id": {
                        "description": "The database id used by the website for the resource",
                        "type": "string",
                        "example": "1226"
                    },
                    "parcel_internal_reference": {
                        "description": "The id that is used to reference the resource externally",
                        "type": "string",
                        "example": "AB-00001445"
                    },
                    "carrier_code": {
                        "description": "The carrier code",
                        "type": "string",
                        "enum": [
                            "postnord",
                            "gls",
                            "dao",
                            "bifrost",
                            "bring"
                        ],
                        "example": "postnord"
                    },
                    "carrier_name": {
                        "description": "The human readable carrier name",
                        "type": "string",
                        "enum": [
                            "PostNord",
                            "GLS",
                            "DAO",
                            "Bifrost",
                            "Bring"
                        ],
                        "example": "PostNord"
                    },
                    "tracking_code": {
                        "description": "The parcels tracking code as generated by the carrier",
                        "type": "string",
                        "example": "DK123456789"
                    },
                    "tracking_link": {
                        "description": "The parcels tracking link",
                        "type": "string",
                        "format": "url",
                        "example": "https://smartsend.io/tracking/DK123456789"
                    }
                },
                "type": "object"
            },
            "LabelResource": {
                "description": "Label Resource",
                "required": [
                    "shipment_id",
                    "type"
                ],
                "properties": {
                    "shipment_id": {
                        "description": "Unique ID",
                        "type": "string",
                        "format": "uuid",
                        "example": "c5540f2b-3eea-45c4-957a-9d7b53f899e7"
                    },
                    "type": {
                        "description": "Description of the resource type",
                        "type": "string",
                        "example": "label"
                    },
                    "internal_id": {
                        "description": "The database id used by the website for the resource",
                        "type": "string",
                        "example": "1226"
                    },
                    "internal_reference": {
                        "description": "The id that is used to reference the resource externally",
                        "type": "string",
                        "example": "AB-00001445"
                    },
                    "carrier_code": {
                        "description": "The carrier code",
                        "type": "string",
                        "enum": [
                            "postnord",
                            "gls",
                            "dao",
                            "bifrost",
                            "bring"
                        ],
                        "example": "postnord"
                    },
                    "carrier_name": {
                        "description": "The human readable carrier name",
                        "type": "string",
                        "enum": [
                            "PostNord",
                            "GLS",
                            "DAO",
                            "Bifrost",
                            "Bring"
                        ],
                        "example": "PostNord"
                    },
                    "pdf": {
                        "required": [
                            "link",
                            "base_64_encoded"
                        ],
                        "properties": {
                            "link": {
                                "description": "Link to the PDF file",
                                "example": "https://example.com/labels/DK123456789.pdf"
                            },
                            "base_64_encoded": {
                                "description": "The base64 encoded PDF file",
                                "example": "<base64-encoded-pdf-here>"
                            }
                        },
                        "type": "object"
                    },
                    "parcels": {
                        "description": "Parcel container",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LabelParcelResource"
                        }
                    }
                },
                "type": "object"
            },
            "OpeningHourResource": {
                "description": "Opening Hour resource",
                "required": [
                    "day",
                    "opens",
                    "closes"
                ],
                "properties": {
                    "day": {
                        "description": "The weekday",
                        "type": "string",
                        "enum": [
                            "monday",
                            "tuesday",
                            "wednesday",
                            "thursday",
                            "friday",
                            "saturday",
                            "sunday"
                        ]
                    },
                    "opens": {
                        "description": "The time in the format HH:MM:SS also known as partial-time accoridng to RFC 3339, section 5.6.",
                        "type": "string",
                        "example": "07:30:00"
                    },
                    "closes": {
                        "description": "The time in the format HH:MM:SS also known as partial-time accoridng to RFC 3339, section 5.6.",
                        "type": "string",
                        "example": "17:30:00"
                    }
                },
                "type": "object"
            },
            "ParcelResource": {
                "description": "Parcel Resource",
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Unique ID",
                                "type": "string",
                                "format": "uuid",
                                "example": "c5540f2b-3eea-45c4-957a-9d7b53f899e7"
                            },
                            "type": {
                                "description": "Description of the resource type",
                                "type": "string",
                                "example": "parcel"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ParcelBase"
                    },
                    {
                        "properties": {
                            "items": {
                                "description": "List of items",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ItemResource"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "PickupResource": {
                "description": "Pickup Resource",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PickupBase"
                    }
                ]
            },
            "ReceiverResource": {
                "description": "Receiver Resource",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ReceiverBase"
                    }
                ]
            },
            "SenderResource": {
                "description": "Sender Resource",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SenderBase"
                    }
                ]
            },
            "ShipmentResource": {
                "description": "Shipment Resource",
                "required": [
                    "id",
                    "type",
                    "internal_id",
                    "internal_reference",
                    "shipping_carrier",
                    "shipping_method",
                    "receiver",
                    "parcels"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Unique ID",
                                "type": "string",
                                "format": "uuid",
                                "example": "c5540f2b-3eea-45c4-957a-9d7b53f899e7"
                            },
                            "type": {
                                "description": "Description of the resource type",
                                "type": "string",
                                "example": "shipment"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ShipmentBase"
                    },
                    {
                        "properties": {
                            "receiver": {
                                "$ref": "#/components/schemas/ReceiverResource"
                            },
                            "sender": {
                                "$ref": "#/components/schemas/SenderResource"
                            },
                            "agent": {
                                "$ref": "#/components/schemas/PickupResource"
                            },
                            "parcels": {
                                "description": "List of parcels",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ParcelResource"
                                }
                            },
                            "addons": {
                                "description": "List of addons",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AddonResource"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "TeamResource": {
                "description": "Website Resource",
                "required": [
                    "url",
                    "trailing",
                    "subscribed",
                    "owner"
                ],
                "properties": {
                    "url": {
                        "description": "Url of the website",
                        "type": "string",
                        "format": "url",
                        "example": "smartsend.io"
                    },
                    "trailing": {
                        "description": "Whether or not the website is currently trialing the system",
                        "type": "boolean",
                        "example": "true"
                    },
                    "subscribed": {
                        "description": "Whether or not the website has a valid subscription",
                        "type": "boolean",
                        "example": "false"
                    },
                    "owner": {
                        "description": "Owner of the website",
                        "properties": {
                            "name": {
                                "description": "Name of the websites owner",
                                "type": "string",
                                "example": "John Doe"
                            },
                            "email": {
                                "description": "Email of the websites owner",
                                "type": "string",
                                "format": "email",
                                "example": "johndoe@example.com"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "400": {
                "description": "Bad request",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/DetailedError"
                        }
                    }
                }
            },
            "401": {
                "description": "Unauthenticated request. Please provide correct authentication.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/DetailedError"
                        }
                    }
                }
            },
            "403": {
                "description": "Forbidden request. User is authenticated but not authorized to perform the request.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/DetailedError"
                        }
                    }
                }
            },
            "422": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/DetailedError"
                        }
                    }
                }
            },
            "429": {
                "description": "Too Many Requests. Usage is subject to rate limiting and the limit has been reached.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "5xx": {
                "description": "Unexpected error"
            },
            "todo": {
                "description": "This API call has no documentated response (yet)"
            }
        },
        "parameters": {
            "team": {
                "name": "team",
                "in": "path",
                "description": "The domain of the website making the agent lookup request",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "example.com"
            },
            "carrier": {
                "name": "carrier",
                "in": "path",
                "description": "The carrier code",
                "required": true,
                "schema": {
                    "type": "string",
                    "enum": [
                        "postnord",
                        "gls",
                        "dao",
                        "bifrost",
                        "bring"
                    ]
                },
                "example": "postnord"
            },
            "country": {
                "name": "country",
                "in": "path",
                "description": "ISO3166 Alpha2 country code",
                "required": true,
                "schema": {
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2
                },
                "example": "DK"
            },
            "postalCode": {
                "name": "postalCode",
                "in": "path",
                "description": "The postal code",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "2100"
            },
            "city": {
                "name": "city",
                "in": "path",
                "description": "The city code",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "Copenhagen"
            },
            "street": {
                "name": "street",
                "in": "path",
                "description": "The street",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "Nordre Frihavnsgade 88"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "description": "Provide API Token as Bearer authentication"
            },
            "apiTokenQuery": {
                "type": "apiKey",
                "description": "Query API Token",
                "name": "api_token",
                "in": "query"
            }
        }
    },
    "tags": [
        {
            "name": "Account",
            "description": "Get account information",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://smartsend.io/"
            }
        },
        {
            "name": "Agents",
            "description": "Get filtered lists of agents",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://smartsend.io/agents"
            }
        },
        {
            "name": "Closest Agents",
            "description": "Find closest agents",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://smartsend.io/agents"
            }
        },
        {
            "name": "Shipments",
            "description": "Everything about Shipments",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://smartsend.io/shipments"
            }
        },
        {
            "name": "Bookings",
            "description": "Everything about Bookings",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://smartsend.io/bookings"
            }
        }
    ],
    "externalDocs": {
        "description": "Find out more about Smart Send",
        "url": "https://smartsend.io"
    },
    "security": [
        {
            "bearerAuth": [],
            "apiTokenQuery": []
        }
    ]
}