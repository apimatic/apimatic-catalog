{"openapi":"3.0.3","info":{"version":"v1.8.0","title":"P3","contact":{"name":"PayMaya Product Engineering - Payments Services Engineering","email":"p3@paymaya.com","url":"https://enterprise.paymaya.com"},"x-logo":{"url":"https://cdn.paymaya.com/production/devportal/www/images/Logo_Header_v2.png","altText":"PayMaya Developers"},"description":"# Introduction\n\nPayMaya P3 (Payments Processing Platform) is PayMaya's Acquiring Platform for processing payment-related transactions.\n\n# API Overview\n\n## Timeouts\n\nThe following communication timeout settings are recommended:\n\n| Case | Recommended Timeout | Remarks |\n|------|---------------------|---------|\n| Connection Timeout | 10 seconds | Time to wait before client can establish TCP connection with PayMaya P3 |\n| Wait for Response (Read Timeout) | 60 seconds | Time to wait before client gives up on the request going to PayMaya P3 |\n\nIn the case of a Read Timeout, the API client may either:\n* Call `Void Transaction` if the transaction is voidable, or\n* Call `Check Transaction` to know if the transaction proceeded. API client may proceed accordingly depending on the response of `Check Transaction`.\n\n## Idempotency and Retransmissions\n\nP3 `POST` APIs support optional idempotency for retransmissions. Any request with the header `X-Idempotency-Key` will be checked if it is a first transmission or a retransmission (i.e. there exists a similar request with the same `X-Idempotency-Key`).\n* For **first transmissions**, processing proceeds as normal\n* For **retransmissions**, the response of the corresponding first transmission is returned. Retransmission responses are marked with the header `X-Response-Retransmission` set to `true`.\n\nIn the case that a retransmission is sent while a first transmission is still ongoing, a pending response is returned with the HTTP status `202`.\n\n```\n{\n    \"status\": \"ONGOING\",\n    \"message\": \"Transaction had been received and is still ongoing\"\n}\n```\n\nWhen matching retransmissions against first transmissions, the following details must match.\n* requesting party\n* header `Request-Reference-No`\n* request method\n* request URL\n* header `X-Idempotency-Key`\n\nNote that other parts of the request are not inspected. Only the specified details are used for idempotency matching. When the aforementioned details match, the request is considered a retransmission regardless of other details (like request body and etc.).\n\nDetails of first transmissions are kept strictly for 6 hours only for candidate retransmission matching. This feature is intended to be used within short intervals only (generally for retries and retries with backoffs) and thus we recommend to use this only for retransmission intervals guaranteed shorter than 6 hours.\n\n## Including Metadata\n\nThe Authorizations and Payments API supports adding metadata in the headers of the request message.\n\n### Geo-Tagging Requests\n\nTo geo-tag a request, add a `Latitude` header and a `Longitude` header in **decimal degrees (DD)** format.\nFor example, a request sent from the United States Capitol would include the following headers:\n\n```\nLatitude: 38.8897\nLongitude: -77.0089\n```\n\n# Authentication\n\nP3 APIs require key-based authentication. APIs and features accessible to each API consumer are defined by the public and/or secret key that the API consumer will use.    \n\nFor each API call, the API consumer must pass an `Authorization` header (using `Basic` access authentication), with the API key encoded in `Base64` MIME encoding.\n\nExample:\nGiven *secret key* `sk-AAAbA4QasPuGfPAApZWpeh7yT1ZBellDpwKyRk8lBBB`:\n`Authorization: Basic c2stQUFBYkE0UWFzUHVHZlBBQXBaV3BlaDd5VDFaQmVsbERwd0t5Ums4bEJCQg==`\n\n# API Testing Configuration\nThe following accounts / data can be used for testing the API calls documented here.\n\n## Merchants\n\n| Merchant ID     | Merchant Type          | Transaction Privileges\n|-----------------|------------------------|-----------------------------------\n| EFS100000126    | Individual             | E-Commerce, Recurring Transactions\n| EFS100001149    | Individual             | E-Commerce, Card Present\n| EFS100001033    | Payment Facilitator    | E-Commerce, Card Present\n\n## Secret Keys\n\n| Secret Key      | API Privileges\n|-----------------|----------------------\n| `sk-aXQdorOOF0zGMfyVAzTH9CbAFvqq1Oc7PAXcDlrz5zz` | All APIs (Sandbox Access)\n\n## Test Cards\n\n| Card Type | Card Number | Expiry Year | Expiry Month | CSC/CVV | 3-DS Password | Remarks |\n|-----------|-------------|-------------|--------------|---------|---------------|-----------------\n| MasterCard | 2223000010239199 | 2027 | 12 | 111 | N/A | CSC successful |\n| MasterCard | 5457210001000019 | 2027 | 12 | 111 | N/A | CSC successful |\n| MasterCard | 5204730000002662 | 2027 | 12 | 266 | N/A | CSC failed |\n| MasterCard | 5453010000095323 | 2027 | 12 | 323 | secone1 | 3-DS Enabled, Enrolled  |\n| Visa | 4761340000000019 | 2027 | 12 | 946 | N/A | CSC successful |\n| Visa | 4123700000000025 | 2027 | 12 | 260 | N/A | CSC successful  |\n| Visa | 4012001037141112 | 2027 | 12 | 212 | N/A | 3-DS Enabled, Enrolled  |\n| Visa | 4012001038443335 | 2027 | 12 | 774 | N/A | 3-DS Enabled, Cardholder Not Enrolled |\n| JCB | 3562320109617106 | 2027 | 12 | 000 | N/A | CSC successful |\n| JCB | 3572000100200166935 | 2027 | 12 | 000 | N/A | CSC successful |\n| JCB | 3550998345701117 | 2027 | 12 | 000 | secure66 | 3-DS Enabled, Enrolled |\n| JCB | 3550998397311146 | 2027 | 12 | 000 | N/A | ACS Not Registered, DS Registered |\n| Amex | 347104392018406 | 2027 | 12 | 121 | N/A | CSC successful |\n| Amex | 377136034201514 | 2027 | 12 | 121 | N/A | CSC successful |\n| Amex | 377187820777498 | 2027 | 12 | 121 | secure66 | 3-DS Enabled, Enrolled |\n| Amex | 377377998542010 | 2027 | 12 | 121 | N/A | 3-DS Enabled, Cardholder Not Enrolled |\n"},"tags":[{"name":"Payments and Authorizations","description":"## Transaction Models\n\nP3 supports 2 models for payment transactions:\n* **Purchase / Sale**\n* **Authorization + Capture**\n\nThe following shows the differences in the lifecycle of a payment for both models made through P3:\n\n<img src=\"assets/img/txn-models.png\" width=100%/>\n\n## Purchase / Sale\n\nIn **Purchase / Sale** model, successful purchase transactions are automatically included at the end of the day's batch processing for clearing. In the case of cancellation, a purchase transaction may either be voided (if cancelling on the same day of the purchase transaction) or refunded (if cancelling on succeeding days after the purchase transaction).\n\nThe following APIs can be used in this model:\n* `/p3/pay` - Purchase / Sale\n* `/p3/void` - Void Purchase\n* `/p3/refund` - Refund Purchase\n\n## Authorization + Capture\n\nIn **Authorization + Capture** model, payment transactions are done in two parts:\n\n1. Authorization - Authorize and reserve the availability of funds for the transaction. The issuer will only authorize and reserve the funds for the transaction. The cardholder will not be billed until the transaction gets cleared.\n2. Capture - Completes the Authorization transaction, and informs PayMaya that the transaction is ready to be cleared. Captured transactions are included at the end of the day's batch processing for clearing. The cardholder will be billed upon successful clearing of a captured transaction.\n\nThis is useful for merchants that have delayed fulfillment processes and wants to synchronize the lifecycle of the payment with the goods and/or services being offered. For example, a merchant running an e-commerce platform may do an authorization as soon as the customer performs \"checkout\" of the goods, but only capture the payment as soon as availability of the items have been confirmed.\n\nThe following APIs can be used in this model:\n* `/p3/authorize` - Authorization\n* `/p3/capture` - Capture\n* `/p3/void` - Void Authorization or Void Capture\n* `/p3/refund` - Refund Capture\n\n### Authorization Types\n\n* NORMAL\nIndicates a **Normal Authorization transaction**, this authorization request can be captured and cleared for amounts less than or equal to the authorization amount.\n\n* FINAL\nIndicates a **Final Authorization transaction**, this authorization request can be only be captured and cleared for amounts equal to the authorization amount (i.e., partial captures are not supported).\n\n* PREAUTHORIZATION\nIndicates a **Preauthorization transaction**, this authorization request can be captured and cleared for amounts greater than (*not yet supported*), less than, or equal to the authorization amount. On certain conditions, a preauthorization may have longer hold periods than normal authorizations. Please refer to *Authorization Hold Periods* for more details.\n\n### Authorization Hold Periods\n\nA successful **Authorization** is saved (*held*) by P3 until the transaction is not past its hold period. Authorizations past their corresponding hold period that do not have successful captures, or were not voided, will be automatically voided by P3, resulting to the authorization hold being dropped.\n\nThe following table summarizes the authorization hold periods defined by P3 depending on certain conditions:\n\n|Scheme|Normal Authorization Hold Period|Final Authorization Hold Period|Pre-Authorization Hold Period|\n|---------------------------|--------------------------------|---------------------------------------|---------------------------------------\n|MasterCard|6 days|6 days|29 days|\n|Visa|6 days|6 days|6 days / 29 days **<sup>A</sup>**|\n|JCB|6 days|6 days|6 days|\n\n**<sup>A</sup>** - For Visa, pre-authorized transactions can have longer hold periods (29 days) if the following conditions are met:\n* Merchant falls under one of the ff categories:\n* Lodging (e.g. hotels, resorts, lodging reservation systems)\n* Vehicle Rental\n* Cruise Lines\n\nIt is up to the P3 API Client to ensure that authorizations are successfully captured before the hold period expires for the transactions to be included in the settlement for the merchant.\n\n## Cut-off Schedule for Voids and Refunds\n\nPurchases and Captures made through PayMaya P3 can either be voided or refunded.\n\nYou can void purchases and captures done on or before **11:59:59 PM (PH Standard Time)** cut-off of the same day transaction date, otherwise refunding is your option. You can do multiple and partial refunds for a purchase or capture, as long as the total refund amount does not exceed the full amount of the transaction.\n\nSample scenarios:\n\n| Transaction time          | Void cut-off time              | Refund start time\n|---------------------------|--------------------------------|---------------------------------------\n| Feb 13, 2017  10:23 AM    | until Feb 13, 2017 11:59:59 PM | from Feb 14, 2017 12:00:00 AM onwards\n| Feb 13, 2017  09:23 PM    | until Feb 13, 2017 11:59:59 PM | from Feb 14, 2017 12:00:00 AM onwards\n| Feb 13, 2017  11:59 PM    | until Feb 13, 2017 11:59:59 PM | from Feb 14, 2017 12:00:00 AM onwards\n| Feb 14, 2017  12:00 AM    | until Feb 14, 2017 11:59:59 PM | from Feb 15, 2017 12:00:00 AM onwards\n\nAuthorizations made through PayMaya P3 can be voided, but not refunded. Authorizations can be voided as long as the transaction is not past the hold period for P3, and no captures have been made. Refer to **Authorization Hold Periods** for more details.\n\nPayMaya P3 retains transactions only up to a period of **90 days** in its **Sandbox** environment and **390 days** in its **Production** environment.\n\n## 3-D Secure Authentication Support\n\nPayMaya P3 supports authorizations for 3-D Secure authenticated e-commerce transactions. However, as PayMaya P3 is only a payment processor, the service does not handle the actual authentication procedure. The 3rd party API consumer is responsible for performing the 3-D Secure authentication leg, including, but not limited to, integrating with its own or a 3rd party merchant plug-in (MPI). The result of the authentication can then be included to e-commerce Sale/Purchase and/or Authorization requests to complete a 3-D Secure authenticated purchase/authorization.\n"},{"name":"Transaction Retrieval","description":"Use these calls to check results of transactions that the client submitted to P3 for processing.\n\n## Reference Numbers in Parameters\n\nReference Numbers in parameters (`{refNo}`) can be any of the following reference numbers:\n* `*transactionReferenceNo` generated by P3 for successful transactions.\n* `logRef` generated by P3 for failed/declined transactions.\n* `Request-Reference-No` provided by the merchant / payment gateway as part of the request.\n* `merchant.metadata.refNo` (request body) (**OPTIONAL**) - A reference number sent by the merchant involved in the transaction. If the API caller is a merchant, this field can be populated with the same value as the `Request-Reference-No`, or ommitted in favor of the value of `Request-Reference-No`. Payment Gateways can use this field to include the reference number sent by their transacting merchant to identify the transaction.\n* `merchant.paymentFacilitator.subMerchants[0].metadata.refNo` (request body) (**OPTIONAL**) - A reference number sent by the sub-merchant involved in a transaction sent by a payment facilitator."},{"name":"Key Management","description":"Use these calls to manage keys used for various P3 transactions.\n\nOperations involving specifying a master key requires a pre-loaded master key. Contact PayMaya on how to pre-load a master key for operational usage.\n\nTransmitted DES key data that are encrypted under master keys are encrypted using the ANSI X9.17 standard.\n\n## Supported Key Types, Scopes and Encryption Algorithms\n\n### Key Types\n\n| Key Type | Description |\n| ----------------- | ----- |\n| **MASTER** | Master key. Used to encrypt other keys when being sent over via the network. |\n| **PIN** | PIN encryption key. Used to encrypt PIN blocks for transactions with Online PIN as the cardholder verification method.  |\n\n### Key Scopes\n\n| Key Scope | Description |\n| ----------------- | ----- |\n| **GATEWAY** | Keys for use by Payment Gateways.  |\n| **TERMINAL** | Keys for use by Payment Terminals. Directly loaded / injected onto POS terminals.  |\n\n### Encryption Algorithms for Key Usages\n\n| Key Scope | Supported Key Sizes | Description |\n| ----------------- | ----- | ----- |\n| **DES** | `128` (double length), `192` (triple length) | Keys generated to be used for DES/3DES encryption algorithm. |"},{"name":"Bin Management","description":"Use these calls to get the list of BINs supported by P3.\n\nCalls to `/config/cards/bins/{bin}`, `/config/cards/bins` and `/config/cards/bins/delta` currently return only the list of known _BancNet_ BINs supported by P3.\n\nNote, however, that the API client may still attempt to authorize/process transactions with BINs not returned by these calls. "},{"name":"Utilities","description":"Use these calls to perform miscellaneous utility functions within P3's scope."}],"servers":[{"url":"https://pg-sandbox.paymaya.com/p3"},{"url":"https://pg.paymaya.com/p3"}],"paths":{"/pay":{"post":{"tags":["Payments and Authorizations"],"summary":"Pay","description":"Perform a sale / purchase request. A successful sale / purchase request is automatically captured by P3 and processed for clearing and settlement on the next cut-off schedule.\n\nProvide a `payment` object that includes information about the `merchant`, `payer`, and `transaction`. `card` and `paymaya` types are supported for `fundingInstrument`. \n","operationId":"pay","security":[{"secretKey":[]}],"parameters":[{"$ref":"#/components/parameters/Request-Reference-No"},{"$ref":"#/components/parameters/X-Idempotency-Key"},{"$ref":"#/components/parameters/Longitude"},{"$ref":"#/components/parameters/Latitude"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentRequest"}}},"required":true},"responses":{"200":{"description":"Success","headers":{"X-Retransmission":{"$ref":"#/components/headers/X-Retransmission"}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentResponse"}}}},"202":{"description":"In the case that a retransmission is sent while a first transmission is still ongoing, a pending response is returned with the HTTP status `202`","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PendingResponse"}}}},"default":{"$ref":"#/components/responses/DefaultErrorResponse"}}}},"/authorize":{"post":{"tags":["Payments and Authorizations"],"summary":"Authorize","description":"Perform an authorization hold. A successful authorization is held by P3 until a **Capture** call is performed, or the authorization hold expires.\n\nProvide an `authorization` object that includes information about the `authorizationType`, `merchant`, `payer`, and `transaction`. `card` and `paymaya` types are supported for `fundingInstrument`. \n","operationId":"authorize","security":[{"secretKey":[]}],"parameters":[{"$ref":"#/components/parameters/Request-Reference-No"},{"$ref":"#/components/parameters/X-Idempotency-Key"},{"$ref":"#/components/parameters/Longitude"},{"$ref":"#/components/parameters/Latitude"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthorizationRequest"}}},"required":true},"responses":{"200":{"description":"Success","headers":{"X-Retransmission":{"$ref":"#/components/headers/X-Retransmission"}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthorizationResponse"}}}},"202":{"description":"In the case that a retransmission is sent while a first transmission is still ongoing, a pending response is returned with the HTTP status `202`","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PendingResponse"}}}},"default":{"$ref":"#/components/responses/DefaultErrorResponse"}}}},"/capture":{"post":{"tags":["Payments and Authorizations"],"summary":"Capture","description":"Capture a previous successful authorization transaction.\n\nMerchants can perform either full or partial captures.\n\nFor full captures, clients only need to provide the `paymentTransactionReferenceNo` of the authorization transaction being captured. P3 automatically captures the entire value of the transaction.\n\nFor partial captures, clients need to provide `paymentTransactionReferenceNo` and the `amount` to be captured. Clients may continue to send partial capture requests until the entire amount for the transaction has been captured.\n","operationId":"capture","security":[{"secretKey":[]}],"parameters":[{"$ref":"#/components/parameters/Request-Reference-No"},{"$ref":"#/components/parameters/X-Idempotency-Key"},{"$ref":"#/components/parameters/Longitude"},{"$ref":"#/components/parameters/Latitude"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CaptureRequest"}}},"required":true},"responses":{"200":{"description":"Success","headers":{"X-Retransmission":{"$ref":"#/components/headers/X-Retransmission"}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CaptureResponse"}}}},"202":{"description":"In the case that a retransmission is sent while a first transmission is still ongoing, a pending response is returned with the HTTP status `202`","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PendingResponse"}}}},"default":{"$ref":"#/components/responses/DefaultErrorResponse"}}}},"/capture/final":{"post":{"tags":["Payments and Authorizations"],"summary":"Final Capture","description":"Executes a final capture on a successful authorization transaction.\n\nSimilar with a normal capture (POST /capture), merchants can perform either full or partial captures where any remaining uncaptured amount on an authorization is automatically voided if the scheme and issuer supports it, but with the caveat that final captured transactions can no longer be captured again afterwards.\n\nFor full captures, clients only need to provide the paymentTransactionReferenceNo of the authorization transaction being captured. P3 automatically captures the entire value of the transaction.\n\nFor partial captures, clients need to provide paymentTransactionReferenceNo and the amount to be captured.\n","operationId":"finalCapture","security":[{"secretKey":[]}],"parameters":[{"$ref":"#/components/parameters/Request-Reference-No"},{"$ref":"#/components/parameters/X-Idempotency-Key"},{"$ref":"#/components/parameters/Longitude"},{"$ref":"#/components/parameters/Latitude"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CaptureRequest"}}},"required":true},"responses":{"200":{"description":"Success","headers":{"X-Retransmission":{"$ref":"#/components/headers/X-Retransmission"}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CaptureResponse"}}}},"202":{"description":"In the case that a retransmission is sent while a first transmission is still ongoing, a pending response is returned with the HTTP status `202`","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PendingResponse"}}}},"default":{"$ref":"#/components/responses/DefaultErrorResponse"}}}},"/void":{"post":{"tags":["Payments and Authorizations"],"summary":"Void","description":"Void a previous successful transaction. A void can be performed on the following transactions:\n* **Purchase / Sale**\n* **Authorization**\n* **Capture** \n* **Refund**\n","operationId":"void","security":[{"secretKey":[]}],"parameters":[{"$ref":"#/components/parameters/Request-Reference-No"},{"$ref":"#/components/parameters/X-Idempotency-Key"},{"$ref":"#/components/parameters/Longitude"},{"$ref":"#/components/parameters/Latitude"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/VoidRequest"}}},"required":true},"responses":{"200":{"description":"Success","headers":{"X-Retransmission":{"$ref":"#/components/headers/X-Retransmission"}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/VoidResponse"}}}},"202":{"description":"In the case that a retransmission is sent while a first transmission is still ongoing, a pending response is returned with the HTTP status `202`","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PendingResponse"}}}},"default":{"$ref":"#/components/responses/DefaultErrorResponse"}}}},"/refund":{"post":{"tags":["Payments and Authorizations"],"summary":"Refund","description":"Refund a previously captured payment. A refund can be performed on the following transactions:\n* **Purchase / Sale**\n* **Capture**\n","operationId":"refund","security":[{"secretKey":[]}],"parameters":[{"$ref":"#/components/parameters/Request-Reference-No"},{"$ref":"#/components/parameters/X-Idempotency-Key"},{"$ref":"#/components/parameters/Longitude"},{"$ref":"#/components/parameters/Latitude"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RefundRequest"}}},"required":true},"responses":{"200":{"description":"Success","headers":{"X-Retransmission":{"$ref":"#/components/headers/X-Retransmission"}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RefundResponse"}}}},"202":{"description":"In the case that a retransmission is sent while a first transmission is still ongoing, a pending response is returned with the HTTP status `202`","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PendingResponse"}}}},"default":{"$ref":"#/components/responses/DefaultErrorResponse"}}}},"/accounts/balance/inquiry":{"post":{"tags":["Payments and Authorizations"],"summary":"Account Balance Inquiry","description":"Request account balance inquiry\n","operationId":"balinq","security":[{"secretKey":[]}],"parameters":[{"$ref":"#/components/parameters/Request-Reference-No"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BalanceInquiryRequest"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BalanceInquiryResponse"}}}},"202":{"description":"In the case that a retransmission is sent while a first transmission is still ongoing, a pending response is returned with the HTTP status `202`","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PendingResponse"}}}},"default":{"$ref":"#/components/responses/DefaultErrorResponse"}}}},"/transactions/{refNo}":{"get":{"tags":["Transaction Retrieval"],"summary":"Get Transaction","description":"Check the status of a transaction given a reference number.","operationId":"getTransaction","security":[{"secretKey":[]}],"parameters":[{"$ref":"#/components/parameters/TransactionReferenceNumberPath"}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetTransactionResponse"}}}}}},"post":{"tags":["Transaction Retrieval"],"summary":"Update Transaction","description":"This is only available in the sandbox environment.\n\nUpdate parameters of a transaction given a reference number.\n","operationId":"updateTransaction","security":[{"secretKey":[]}],"parameters":[{"$ref":"#/components/parameters/TransactionReferenceNumberPath"}],"responses":{"204":{"description":"No Content"},"default":{"$ref":"#/components/responses/DefaultErrorResponse"}}}},"/transactions":{"get":{"tags":["Transaction Retrieval"],"summary":"List Transaction","description":"List of transactions performed by the client based on the provided query parameters.","operationId":"listTransactions","security":[{"secretKey":[]}],"parameters":[{"$ref":"#/components/parameters/TransactionMID"},{"$ref":"#/components/parameters/TransactionReferenceNumberQuery"},{"$ref":"#/components/parameters/PageNumber"},{"$ref":"#/components/parameters/PageSize"},{"$ref":"#/components/parameters/TransactionFrom"},{"$ref":"#/components/parameters/TransasctionTo"},{"$ref":"#/components/parameters/TransactionSort"},{"$ref":"#/components/parameters/TransactionOrder"}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListTransactionsResponse"}}}},"default":{"$ref":"#/components/responses/DefaultErrorResponse"}}}},"/keys/{keyId}":{"get":{"tags":["Key Management"],"summary":"Get Key Information","description":"Get information about a key.","operationId":"getKey","security":[{"secretKey":[]}],"parameters":[{"$ref":"#/components/parameters/KeyID"},{"$ref":"#/components/parameters/KeyDataVisibilityFlag"}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Key"}}}}}},"delete":{"tags":["Key Management"],"summary":"Delete Key","description":"Delete a key.\n\nWhen this API is successfully invoked, the key references in P3 are deleted. This makes succeeding uses to the same key ID fail due to a non-existent key. The client is advised to use this only if the key is no longer in use.\n\nNote, however, that this operation cannot be applied to master keys (`type`: `MASTER`). If necessary, for deletion of master keys, please contact PayMaya.\n","operationId":"deleteKey","security":[{"secretKey":[]}],"parameters":[{"$ref":"#/components/parameters/KeyID"}],"responses":{"204":{"description":"No Content"},"default":{"$ref":"#/components/responses/DefaultErrorResponse"}}}},"/keys":{"post":{"tags":["Key Management"],"summary":"Create Key","description":"Create a working key with the given parameters.","operationId":"createKey","security":[{"secretKey":[]}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateKeyRequest"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Key"}}}}}},"get":{"tags":["Key Management"],"summary":"List Keys","description":"Get information on all keys associated to a client.","operationId":"listKeys","security":[{"secretKey":[]}],"parameters":[{"$ref":"#/components/parameters/PageNumber"},{"$ref":"#/components/parameters/BINPageSize"}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListKeysResponse"}}}},"default":{"$ref":"#/components/responses/DefaultErrorResponse"}}}},"/config/cards/bins":{"get":{"tags":["Bin Management"],"summary":"List Bins","description":"Get the bin details of all bins with fields matching the provided parameters","operationId":"listBins","security":[{"secretKey":[]}],"parameters":[{"$ref":"#/components/parameters/BINType"},{"$ref":"#/components/parameters/BINNetwork"},{"$ref":"#/components/parameters/BINScheme"},{"$ref":"#/components/parameters/PageNumber"},{"$ref":"#/components/parameters/BINPageSize"}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListBinsResponse"}}}},"default":{"$ref":"#/components/responses/DefaultErrorResponse"}}}},"/config/cards/bins/{bin}":{"get":{"tags":["Bin Management"],"summary":"Get Bin","description":"Get the bin details of a specific bin","operationId":"getBin","security":[{"secretKey":[]}],"parameters":[{"$ref":"#/components/parameters/BIN"}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetBinResponse"}}}},"default":{"$ref":"#/components/responses/DefaultErrorResponse"}}}},"/config/cards/bins/patterns":{"get":{"tags":["Bin Management"],"summary":"List Bin Patterns","description":"Get the bin pattern details of all patterns with fields matching the provided parameters","operationId":"listBinPatterns","security":[{"secretKey":[]}],"parameters":[{"$ref":"#/components/parameters/BINNetwork"},{"$ref":"#/components/parameters/BINScheme"},{"$ref":"#/components/parameters/PageNumber"},{"$ref":"#/components/parameters/BINPageSize"}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListBinPatternsResponse"}}}},"default":{"$ref":"#/components/responses/DefaultErrorResponse"}}}},"/config/cards/bins/delta":{"get":{"tags":["Bin Management"],"summary":"Get Delta","description":"Get the changes to the list of supported bins from the given date up to the current date","operationId":"getBinDelta","security":[{"secretKey":[]}],"parameters":[{"$ref":"#/components/parameters/BINDeltaFrom"},{"$ref":"#/components/parameters/PageNumber"},{"$ref":"#/components/parameters/BINPageSize"}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListBinsResponse"}}}},"default":{"$ref":"#/components/responses/DefaultErrorResponse"}}}},"/util/ping":{"get":{"tags":["Utilities"],"summary":"Service Ping","description":"Perform an authenticated ping / health check via P3. Clients can use this to:\n* Determine status of connectivity with P3\n* Check status and correctness of API keys\n","operationId":"ping","security":[{"secretKey":[]}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Health"}}}}}}}},"components":{"securitySchemes":{"secretKey":{"type":"http","scheme":"basic"}},"schemas":{"Request-Reference-No":{"type":"string","minLength":12,"maxLength":36,"example":"4e4619c7-7524-49f0-a4ec-c9ebd9e2b3fa"},"X-Idempotency-Key":{"type":"string","example":"ec1c9c54-def0-457f-8628-cde6f1603a29"},"Longitude":{"type":"number","example":-77.0089},"Latitude":{"type":"number","example":38.8897},"MerchantMetadata":{"type":"object","properties":{"refNo":{"type":"string","minLength":1,"maxLength":36,"description":"Reference number of the merchant for the transaction.","example":"ORDER-123954"}},"description":"Transaction-specific metadata for the merchant involved"},"BaseMerchant":{"type":"object","properties":{"metadata":{"$ref":"#/components/schemas/MerchantMetadata"}},"description":"Information about the merchant performing the request for the cardholder."},"BaseMerchantWithID":{"allOf":[{"$ref":"#/components/schemas/BaseMerchant"},{"required":["id"],"properties":{"id":{"type":"string","description":"Unique ID issued by PayMaya to the merchant.","example":"EFS100001033"}}}]},"PaymentFacilitatorBase":{"type":"object","required":["subMerchants"],"description":"Information about the Payment Facilitator (if the merchant is a Payment Facilitator) and the sub-merchant performing the transaction."},"SubmerchantBase":{"type":"object","required":["id","name","address"],"properties":{"metadata":{"$ref":"#/components/schemas/MerchantMetadata"},"id":{"type":"string","minLength":1,"maxLength":30,"pattern":"[-a-zA-Z_0-9]+","example":"SUBMER01"},"name":{"type":"string","minLength":1,"maxLength":64,"pattern":"[-' .,a-zA-Z_0-9]+","example":"Leslie's Record Bar"}}},"Address":{"type":"object","properties":{"line1":{"type":"string","minLength":1,"maxLength":64,"pattern":"(?!.*[\\\\[\\\\]{}<>:…!«»‐—?‘’“”;⁄␠·•^¤¢$€£¥₩₪†‡°¡¿¬№%‰‱¶′§~¨_|¦⁂☞∴‽※]|(?=.*--)).*","example":"6F Launchpad Reliance St"},"city":{"type":"string","minLength":1,"maxLength":64,"pattern":"(?!.*[\\\\[\\\\]{}<>:…!«»‐—?‘’“”;⁄␠·*•^¤¢$€£¥₩₪†‡°¡¿¬#№%‰‱¶′§~¨_|¦⁂☞∴‽※@]|(?=.*--)).*","example":"Mandaluyong"},"state":{"type":"string","maxLength":64,"pattern":"(?!.*[\\\\[\\\\]{}<>:…!«»‐—?‘’“”;⁄␠·*•^¤¢$€£¥₩₪†‡°¡¿¬#№%‰‱¶′§~¨_|¦⁂☞∴‽※@]|(?=.*--)).*","example":"Metro Manila"},"postalCode":{"type":"string","minLength":1,"maxLength":10,"pattern":"^[a-zA-Z0-9-_ ]{1,10}$","example":1535,"description":"Postal / ZIP Code"},"alphaCountryCode":{"type":"string","maxLength":3,"pattern":"^[A-Z]{3}$","description":"ISO-3166-1 Alpha-3 Country Code of the address","example":"PHL"}}},"Submerchant":{"allOf":[{"$ref":"#/components/schemas/SubmerchantBase"},{"properties":{"mcc":{"type":"string","minLength":1,"maxLength":15,"pattern":"^[0-9]{1,15}$","example":5999},"address":{"allOf":[{"$ref":"#/components/schemas/Address"},{"required":["city","alphaCountryCode"]}]},"contactNo":{"type":"string","minLength":1,"maxLength":15,"pattern":"^\\\\+?[0-9]{1,15}$","example":9191234567}}}]},"Submerchants":{"type":"array","maxItems":1,"minItems":1,"items":{"$ref":"#/components/schemas/Submerchant"}},"PaymentFacilitator":{"allOf":[{"$ref":"#/components/schemas/PaymentFacilitatorBase"},{"properties":{"subMerchants":{"$ref":"#/components/schemas/Submerchants"}}}]},"MarketplaceBase":{"type":"object","required":["retailer"],"description":"Information about the Marketplace (if the merchant is a Marketplace) and the retailer performing the transaction."},"RetailerBase":{"type":"object","required":["address"],"properties":{"metadata":{"$ref":"#/components/schemas/MerchantMetadata"},"name":{"type":"string","minLength":1,"maxLength":64,"pattern":"[-' .,a-zA-Z_0-9]+","example":"Richard's Market"}}},"Retailer":{"allOf":[{"$ref":"#/components/schemas/RetailerBase"},{"properties":{"address":{"allOf":[{"$ref":"#/components/schemas/Address"},{"required":["alphaCountryCode"]}]}}}]},"Marketplace":{"allOf":[{"$ref":"#/components/schemas/MarketplaceBase"},{"properties":{"retailer":{"$ref":"#/components/schemas/Retailer"}}}]},"OnlineMerchant":{"allOf":[{"$ref":"#/components/schemas/BaseMerchantWithID"},{"properties":{"paymentFacilitator":{"$ref":"#/components/schemas/PaymentFacilitator"},"marketplace":{"$ref":"#/components/schemas/Marketplace"}}}]},"PayerBase":{"type":"object","required":["fundingInstrument"],"description":"Information about the cardholder where the source of funds for the transaction will come from."},"PayerMetadata":{"type":"object","description":"Metadata about the cardholder","properties":{"ipAddress":{"type":"string","format":"ip-address","description":"IP address being used by the cardholder to transact","example":"127.0.0.1"}}},"CardType":{"type":"string","enum":["CREDIT","DEBIT"],"description":"Indicates the type of the card used for the transaction. The following types are supported.\n\n* `CREDIT`\n* `DEBIT`\n\nThe following table summarizes the valid combination of card types vs account types.\n\n| Account Type / Card Type | Debit | Credit |\n| ----------------- | ----- | ------ |\n| Default | ✅ | ✅ |\n| Savings | ✅ | |\n| Current | ✅ | |\n| Credit  | | ✅ |\n"},"AccountType":{"type":"string","enum":["DEFAULT","SAVINGS","CURRENT","CREDIT"],"description":"Indicates the type of the account used for the transaction. The following account types are supported.\n\n* `DEFAULT`\n* `SAVINGS`\n* `CURRENT`\n* `CREDIT`\n\nThe following table summarizes the valid combination of card types vs account types.\n\n| Account Type / Card Type | Debit | Credit |\n| ----------------- | ----- | ------ |\n| Default | ✅ | ✅ |\n| Savings | ✅ | |\n| Current | ✅ | |\n| Credit  | | ✅ |\n\nBy default, this is `DEFAULT`.\n"},"BaseCard":{"type":"object","required":["cardNumber","expiryMonth","expiryYear"],"properties":{"cardNumber":{"type":"string","description":"Personal Account Number (PAN) of the card used by the cardholder","example":4761340000000043},"expiryMonth":{"type":"string","minLength":1,"maxLength":2,"pattern":"0?[1-9]|1[0-2]","description":"Numeric format of the month (MM) when the card was set by the issuer to expire","example":12},"expiryYear":{"type":"string","minLength":4,"maxLength":4,"pattern":"[\\\\d]{4}","description":"Numeric format of the year when (YYYY) the card was set by the issuer to expire","example":2022},"firstName":{"type":"string","description":"First name of the cardholder","example":"SMART E MONEY"},"lastName":{"type":"string","description":"Last name of the cardholder","example":"INC"},"type":{"$ref":"#/components/schemas/CardType"},"account":{"$ref":"#/components/schemas/AccountType"}}},"OnlineCard":{"allOf":[{"$ref":"#/components/schemas/BaseCard"},{"type":"object","properties":{"csc":{"type":"string","minLength":3,"maxLength":4,"pattern":"[\\\\d]{3,4}","description":"Card Security Code (CSC) / Card Verification Value (CVV) of the card","example":40},"billingAddress":{"allOf":[{"$ref":"#/components/schemas/Address"},{"description":"Billing address of the cardholder"}]},"vaulted":{"type":"boolean","description":"Indicates whether or not the card information was previously stored by the API caller, and the stored card information was used in this transaction.\n\nP3 API clients may opt to store the cardholder's credit card information (PAN, expiry date) after 1 transaction for use in future transactions (refered to as ***vaulting***). In this case, the P3 API client is reponsible for looking up the credit card information on their own *vault* (or any logical storage) before performing the authorization via P3 API.\n\nNormally, a vaulted card transaction no longer contains the card security code (CSC). Issuers may decline these transactions more often due to the lack of a secondary authentication mechanism (since both 3-DS and CSC validation are no longer performed). For these transactions, the P3 API client **must** indicate that the credit card information of the transaction came from its storage by setting the flag `payer.fundingInstrument.card.vaulted` to `true`. This allows the issuers to relax their acceptance requirements, since it is assumed that PayMaya and/or the P3 API client has already previously authenticated the cardholder by different means.\n\nRecurring transactions (i.e., `transaction.frequencyIndicator = RECURRING`) are automatically tagged as vaulted transactions, regardless of the value of `payer.fundingInstrument.card.vaulted`, since it is assumed that either the merchant or the payment gateway has stored the card credentials for future use.\n\nBy default, this is `false`.\n","example":false},"tokenId":{"type":"string","minLength":1,"maxLength":36,"pattern":"[a-zA-Z0-9_\\\\-]{1,36}","description":"Gateway-assigned token ID of the card being used to transact","example":"897d5691-7036-443d-8fa5-5a66387a593d"}}}]},"EcomCardFI":{"type":"object","required":["card"],"properties":{"card":{"$ref":"#/components/schemas/OnlineCard"}}},"PayerECWithCard":{"allOf":[{"$ref":"#/components/schemas/PayerBase"},{"properties":{"metadata":{"$ref":"#/components/schemas/PayerMetadata"},"fundingInstrument":{"$ref":"#/components/schemas/EcomCardFI"},"referenceId":{"type":"string","minLength":1,"maxLength":36,"pattern":"[a-zA-Z0-9_\\\\-]{1,36}","description":"Gateway-assigned ID of the cardholder","example":"897d5691-7036-443d-8fa5-5a66387a593d"}}}]},"ThreeDSecureEci":{"type":"string","enum":["00","01","02","05","06","07"],"description":"3-D Secure Electronic Commerce Indicator (ECI). The following indicators are supported.\n\n|Indicator|Description\n|---------|-----------\n|00|(MasterCard) Unauthenticated transaction\n|01|(MasterCard) Merchant or Issuer attempted to authenticate the cardholder, but the authentication was not successful (e.g., card is not 3-DS enrolled)\n|02|(MasterCard) Issuer successfully authenticated the cardholder\n|05|(Visa, JCB) Issuer successfully authenticated the cardholder\n|06|(Visa, JCB) Merchant or Issuer attempted to authenticate the cardholder, but the authentication was not successful (e.g., card is not 3-DS enrolled)\n|07|(Visa, JCB) Unauthenticated transaction\n","example":5},"ThreeDSecureEnrollmentStatus":{"type":"string","enum":["Y","N","U"],"description":"Indicates whether the card is enrolled for 3-D Secure. The following indicators are supported.\n\n|Indicator|Description\n|---------|-----------\n|Y|Yes, card is enrolled\n|N|No, card is NOT enrolled\n|U|Status of card enrollment is unavailable for checking\n\nBy default, this is `U`.\n"},"ThreeDSecureAuthStatus":{"type":"string","enum":["Y","A","N","U"],"description":"Information whether the card authentication was successful or not. The following indicators are supported\n\n|Indicator|Description\n|---------|-----------\n|Y|Cardholder was successfully authenticated\n|A|Authentication was attempted\n|N|Cardholder authentication failed\n|U|Unavailable for checking\n\nBy default, this is `U`.\n"},"ThreeDSecureOptions":{"type":"object","required":["eci","enrolled","authenticationStatus"],"properties":{"xid":{"type":"string","minLength":28,"maxLength":28,"description":"A unique transaction identifier generated by the MPI on behalf of the merchant to identify the 3-DS transaction, in `Base64` encoding.\"","example":"ICAgMDQwOTIwMTkyMTMwMjc0MjM="},"eci":{"$ref":"#/components/schemas/ThreeDSecureEci"},"verificationToken":{"type":"string","minLength":28,"maxLength":28,"description":"Value generated by the card issuer as a token to prove that the cardholder authentication was successful, in `Base64` encoding.","example":"jqEmJkhI2+SDCAAAAAAJBwAAAAA="},"enrolled":{"$ref":"#/components/schemas/ThreeDSecureEnrollmentStatus"},"authenticationStatus":{"$ref":"#/components/schemas/ThreeDSecureAuthStatus"},"dsTransactionId":{"type":"string","description":"Directory Server Transaction ID","example":"c13808a0-341b-47e3-9588-eee4196da4fb"},"messageVersion":{"type":"string","description":"Message version used for transaction authentication.","pattern":"^[0-9]+[.][0-9]+[.][0-9]+$","example":"1.0.0"}},"description":"Used for 3-D Secure (3-DS) Pre-Authenticated purchase transactions. Indicates the 3-D Secure parameters / response data returned by the Merchant Plug-In (MPI). Merchant is required to send this field if a 3-DS authentication attempt was performed before the purchase transaction."},"TransactionOptions":{"type":"object","properties":{"threeDSecure":{"$ref":"#/components/schemas/ThreeDSecureOptions"}},"description":"Additional options for the payment transaction"},"TransactionInitiator":{"type":"string","enum":["CONSUMER","MERCHANT"],"description":"Identifies the initiator of the transaction. The following initiators are supported.\n\n|Initiator|Description\n|---------|-----------\n|CONSUMER|Indicates that the consumer initiated the transaction (e.g., consumer explicitly purchased an item from the merchant)\n|MERCHANT|Indicates that the merchant initiated the transaction (e.g., charging subsequent miscellaneous fees after the original transaction)\n\nRecurring transactions (i.e., `transaction.frequencyIndicator = RECURRING`) are automatically tagged as merchant-initiated transactions, regardless of the value of `transaction.initiator`, since it is assumed that the consumer is no longer presenting the authorization credentials in these types of transactions.\n\nBy default, this is `CONSUMER`.\n"},"TransactionIntent":{"type":"string","enum":["PAYMENT","VAULTING"],"description":"Identifies the intent of the transaction. The following intents are supported.\n\n|Indicator|Description\n|---------|-----------\n|PAYMENT|Indicates that the authorization request is being done to collect payment from the consumer for goods/services rendered.\n|VAULTING|Indicates that the P3 API client intends to store the consumer's credentials after a successful authorization. Normally, authorizations with the `VAULTING` intent are voided/refunded afterwards, as the results are only used for validating the consumer's credentials. This value should be set even if the client intends to collect payment from the authorization request as well, as long as the client intends to store the credentials afterwards.\n\nBy default, this is `PAYMENT`.\n"},"Amount":{"type":"object","properties":{"currency":{"type":"string","example":"PHP"},"value":{"type":"number","example":10.5}}},"TotalAmount":{"type":"object","required":["total"],"properties":{"total":{"$ref":"#/components/schemas/Amount"}}},"TransactionFrequencyIndicator":{"type":"string","enum":["SINGLE - One-time transaction","RECURRING - Recurring transaction"],"description":"Identifies if the transaction is a single payment or recurring. The following indicators are supported.\n\n|Indicator|Description\n|---------|-----------\n|SINGLE|One-time transaction\n|RECURRING|Recurring transaction\n\nA transaction is classified as **recurring** if it meets the following criteria:\n* The merchant needs to charge the consumer on defined intervals / schedule (e.g., every 15th of the month)\n* Merchant has secured approval from the consumer that a recurring charge will be placed on the consumer's mode of payment\n\nRecurring transactions are supported for E-Commerce transactions. In order to perform a recurring transaction:\n* Client should process the initial transaction as it would for a normal single transaction. This includes 3-DS authentication, initial authorization with 3-DS values and card security code (CSC), if any.\n* For recurring transactions after the initial transaction, the client should perform the transaction with the `transaction.frequencyIndicator` in the request set to `RECURRING`. This should no longer include the 3-DS and CSC values.\n\nNote that P3 does not match the recurring transactions with their corresponding original transactions. It is up to the client to ensure that recurring transactions are only performed after a corresponding successful original transaction. Chargebacks may apply for incorrectly processed recurring transactions.\n\n3-D Secure is not supported for Recurring transactions.\n\nBy default, this is `SINGLE`.\n"},"TransactionRecipientAccountNumberType":{"type":"string","enum":["OTHER","ROUTING_TRANSIT_NUMBER_AND_BANK_ACCOUNT","INTERNATIONAL_BANK_ACCOUNT_NUMBER","CARD_ACCOUNT","EMAIL","PHONE_NUMBER","BANK_ACCOUNT_NUMBER","WALLET_ID","SOCIAL_NETWORK_ID"],"description":"Indicates the type of the transaction recipient's account. The following Recipient account number types are supported:\n\n* `OTHER`\n* `ROUTING_TRANSIT_NUMBER_AND_BANK_ACCOUNT` (e.g. “020123456789”)\n* `INTERNATIONAL_BANK_ACCOUNT_NUMBER` (e.g. “GB33BUKB20201555555555”)\n* `CARD_ACCOUNT` (e.g. “5457210001000019”)\n* `EMAIL` (e.g. “john.doe@gmail.com”)\n* `PHONE_NUMBER` (e.g. “639170123456”)\n* `BANK_ACCOUNT_NUMBER` (e.g. “01234567890“)\n* `WALLET_ID` (e.g. “01234567890“)\n* `SOCIAL_NETWORK_ID` (e.g. “some_ID_1234567890”)\n"},"TransactionRecipient":{"type":"object","required":["firstName","lastName","accountNumber","address","accountNumberType"],"properties":{"firstName":{"type":"string","description":"First name of the transaction's recipient","example":"Juan"},"lastName":{"type":"string","description":"Last name of the transaction's recipient","example":"Dela Cruz"},"address":{"allOf":[{"$ref":"#/components/schemas/Address"},{"required":["alphaCountryCode"]}]},"accountNumber":{"type":"string","description":"Account number of intended recipient","maxLength":128,"example":4761340000000043},"accountTargetIdentificationCode":{"type":"string","description":"Account Target Identification Code of the intended recipient. If accountNumberType is BANK_ACCOUNT_NUMBER, this field must be present with the target bank's identification code (BIC).","maxLength":128,"example":null},"accountNumberType":{"$ref":"#/components/schemas/TransactionRecipientAccountNumberType"}},"description":"Used for passing Recipient information. Some fields may be required for specific transactions depending on the scheme."},"Transaction":{"type":"object","properties":{"initiator":{"$ref":"#/components/schemas/TransactionInitiator"},"intent":{"$ref":"#/components/schemas/TransactionIntent"},"amount":{"$ref":"#/components/schemas/TotalAmount"},"frequencyIndicator":{"$ref":"#/components/schemas/TransactionFrequencyIndicator"},"recipient":{"$ref":"#/components/schemas/TransactionRecipient"},"description":{"type":"string","minLength":0,"maxLength":512,"pattern":"[-a-zA-Z_0-9 .,]+","example":"Purchased goods and services"}},"description":"Information about the transaction being performed."},"TransactionTrace":{"type":"object","properties":{"batchNo":{"type":"string","minLength":1,"maxLength":8,"pattern":"[A-Za-z0-9]{1,8}","description":"Batch of authorizations where the transaction is included","example":1},"traceNo":{"type":"string","minLength":1,"maxLength":6,"pattern":"[A-Za-z0-9]{1,6}","description":"terminal-generated number for this transaction","example":1}},"description":"Values supplied by the transaction originator / terminal that can be used for reconciliation of transactions"},"PaymentRequestBase":{"type":"object","required":["merchant","payer","transaction"],"properties":{"transaction":{"$ref":"#/components/schemas/Transaction"},"trace":{"$ref":"#/components/schemas/TransactionTrace"}}},"PaymentRequestECWithCard":{"title":"E-Commerce using Card","allOf":[{"type":"object","properties":{"merchant":{"$ref":"#/components/schemas/OnlineMerchant"},"payer":{"$ref":"#/components/schemas/PayerECWithCard"},"options":{"$ref":"#/components/schemas/TransactionOptions"}}},{"$ref":"#/components/schemas/PaymentRequestBase"}]},"TerminalInputCapability":{"type":"object","properties":{"keyEntry":{"type":"boolean","description":"Indicates whether or not the terminal has a keypad (physical or electronic) to accept manual input of card data (default: false)"},"magstripeReader":{"type":"boolean","description":"Indicates whether or not the terminal supports reading of contact magnetic stripe cards (swipe) (default: false)"},"emvChip":{"type":"boolean","description":"Indicates whether or not the terminal supports reading of contact chip cards (dip) (default: false)"},"contactless":{"type":"boolean","description":"Indicates whether or not the terminal supports reading of contactless chip cards (tap) (default: false)"},"contactlessMagstripe":{"type":"boolean","description":"Indicates whether or not the terminal supports reading of contactless magnetic stripe chip cards (tap) (default: false)"}},"description":"Indicates the capabilities of the terminal that read the card"},"TerminalPanEntryMode":{"type":"string","enum":["00","01","02","05","07","79","80","90","91"],"description":"Indicates how the card's PAN was entered into the terminal at the time of the transaction.  The following modes are supported.\n\n|Mode|Description\n|-----|------------\n|00|PAN Entry Mode is unknown (default)\n|01|Manual Entry\n|02|Magnetic stripe read, but full unaltered contents not provided\n|05|PAN auto entry via chip\n|07|Auto-entry via contactless magnetic chip\n|79|Chip card at chip-capable terminal was unable to process transaction using data on the chip or magnetic stripe on the card - therefore, PAN entry via manual entry\n|80|Chip card at chip-capable terminal was unable to process transaction using data on the chip therefore the terminal defaulted to the magnetic stripe read for the PAN. This is referred to as fallback.\n|90|Magnetic stripe read and full, unaltered contents provided\n|91|Auto-entry via contactless magnetic strip\n"},"TerminalPinEntryMode":{"type":"string","enum":["0","1","2","3","8"],"description":"Indicates the terminal's PIN input capability at the time of the transaction. The following modes are supported\n\n|Mode|Description\n|-----|------------\n|0|Unspecified or Unknown  (default)\n|1|Terminal has PIN entry capability\n|2|Terminal does not have PIN entry capability\n|3|Terminal has mPOS software-based PIN entry capability\n|8|Terminal has PIN entry capability but PIN pad is not currently operative.\n"},"TerminalPosEntryMode":{"type":"object","required":["panEntry"],"properties":{"panEntry":{"$ref":"#/components/schemas/TerminalPanEntryMode"},"pinEntry":{"$ref":"#/components/schemas/TerminalPinEntryMode"}},"description":"Indicates how the card was actually read by the terminal"},"TerminalType":{"type":"string","enum":["POS","MPOS","OFF_THE_SHELF_MPOS","ATM","IN_TRANSIT","IN_FLIGHT"],"description":"Indicates the type of terminal being used for the transaction. The following types are supported.\n\n* `POS`\n* `MPOS`\n* `OFF_THE_SHELF_MPOS`\n* `ATM`\n* `IN_TRANSIT`\n* `IN_FLIGHT`\n"},"Terminal":{"type":"object","required":["id","type"],"properties":{"id":{"type":"string","minLength":1,"maxLength":36,"pattern":"[-a-zA-Z_0-9]+","description":"Unique ID of the terminal."},"inputCapability":{"$ref":"#/components/schemas/TerminalInputCapability"},"posEntryMode":{"$ref":"#/components/schemas/TerminalPosEntryMode"},"onMerchantPremise":{"type":"boolean","description":"Indicates whether or not the terminal is within the merchant's area of control. By default, this is `true`."},"terminalAttended":{"type":"boolean","description":"Indicates whether or not the merchant directly attends to the terminal. By default, this is `true`."},"cardCaptureSupported":{"type":"boolean","description":"Indicates whether or not the terminal has capabilities to capture (store) cards upon directive from the issuer. By default, this is `false`."},"cardholderActivatedTerminal":{"type":"boolean","description":"Indicates whether or not the cardholder activates and initiates transactions on the terminal directly instead of the merchant. By default, this is `false`."},"type":{"$ref":"#/components/schemas/TerminalType"}},"description":"Information about the terminal used to read the contents of a card."},"OfflineMerchant":{"allOf":[{"$ref":"#/components/schemas/BaseMerchantWithID"},{"required":["acquiringTerminal"],"properties":{"acquiringTerminal":{"$ref":"#/components/schemas/Terminal"}}}]},"CardPresentInformation":{"type":"object","properties":{"cardSeqNum":{"type":"string","minLength":3,"maxLength":3,"pattern":"[0-9]{3}+","description":"Sequence number of the card read from the chip. Only present for EMV/chip-based transactions."},"emvIccData":{"type":"string","minLength":1,"maxLength":340,"description":"EMV ICC binary data read from the card, in Base64 encoding.\n\nFor chip-based requests, the `emvIccData` contains the `Base64` encoded value of the binary TLV chip data read from the card.\n\nFor example, for the following TLV data:\n\n`82021C008407A0000000031010950580000000009A031704199C01005F2A0206089F02060000000001009F03060000000000009F1012060A0A03A080000A0200000000006E79F3999F1A0206089F1E0850594D59504F53319F26080E7F58B5275B72B19F2701809F33032020C89F34031E03009F3501219F360200CA9F3704A397A2559F4104000000019F6E0420000000`\n\nThe resulting `emvIccData` should be:\n\n`ggIcAIQHoAAAAAMQEJUFgAAAAACaAxcEGZwBAF8qAgYInwIGAAAAAAEAnwMGAAAAAAAAnxASBgoKA6CAAAoCAAAAAABuefOZnxoCBgifHghQWU1ZUE9TMZ8mCA5/WLUnW3KxnycBgJ8zAyAgyJ80Ax4DAJ81ASGfNgIAyp83BKOXolWfQQQAAAABn24EIAAAAA==`\n"},"track1":{"type":"string","description":"Track 1 (magnetic stripe) data as read from the card. For chip cards, provided by \"Track 1 Equivalent Data\" read from the chip."},"track2":{"type":"string","description":"Track 2 (magnetic stripe) data as read from the card. For chip cards, provided by \"Track 2 Equivalent Data\" read from the chip."}},"description":"Details of the card read by a terminal (for card present transactions)"},"PinInformation":{"type":"object","required":["block","format","keyId"],"properties":{"block":{"type":"string","description":"PIN block encrypted under the PIN encryption key","example":"B0726345EBF1DEB9"},"format":{"type":"string","enum":["ISO-0","ISO-1","ISO-3"],"description":"Format of the PIN block as generated by the terminal\n\n|Format|Description\n|------|-----------\n|ISO-0|ISO 9564-1 & ANSI X9.8 format 0\n|ISO-1|ISO 9564-1 format 1\n|ISO-3|ISO 9564-1 & ANSI X9.8 format 3\n","example":"ISO-0"},"keyId":{"type":"string","description":"Key ID of the encryption key used to encrypt the PIN block","example":"F33900F3-7115-4F1F-ADD2-B5D02E9721E9"}}},"PhysicalCard":{"allOf":[{"$ref":"#/components/schemas/BaseCard"},{"type":"object","required":["cardPresentFields"],"properties":{"cardPresentFields":{"$ref":"#/components/schemas/CardPresentInformation"},"pin":{"$ref":"#/components/schemas/PinInformation"}}}]},"CPFI":{"type":"object","required":["card"],"properties":{"card":{"$ref":"#/components/schemas/PhysicalCard"}}},"PayerCP":{"allOf":[{"$ref":"#/components/schemas/PayerBase"},{"properties":{"fundingInstrument":{"$ref":"#/components/schemas/CPFI"}}}]},"PaymentRequestCP":{"title":"Card Present","allOf":[{"type":"object","properties":{"merchant":{"$ref":"#/components/schemas/OfflineMerchant"},"payer":{"$ref":"#/components/schemas/PayerCP"}}},{"$ref":"#/components/schemas/PaymentRequestBase"}]},"PaymentRequest":{"oneOf":[{"$ref":"#/components/schemas/PaymentRequestECWithCard"},{"$ref":"#/components/schemas/PaymentRequestCP"}]},"ErrorCode":{"type":"string","description":"Identifies actual error that happened into a discrete error known scenario unless otherwise specified (e.g. general error).\n\n## Known Error Codes\n\n### General and Request Validation Error Codes\n\n|Code|Description\n|-----|------------\n|1996|General error\n|1997|API key is incorrect\n\n### P3-Generated Error Codes\n\n|Code|Description\n|-----|------------\n|2501|Merchant ID does not exist\n|2522|Merchant is not configured properly - contact PayMaya\n|2545|TRN does not exist\n|2546|Excessive refund\n|2547|Transaction already voided\n|2548|Transaction already refunded\n|2549|A final capture has already been done for this transaction\n|2552|Invalid RRN\n|2562|Card BIN is invalid and/or unknown\n|2563|Client ID, Merchant ID, and BIN combination does not exist\n|2564|Merchant Slug must be provided\n|2565|Merchant RefNo must be provided\n|2566|Merchant is not a PF, but Payment Facilitator Details were provided\n|2567|Merchant is a PF, but Payment Facilitator Details were not provided\n|2569|Transaction is no longer valid for void\n|2570|Transaction is not yet valid for refund\n|2571|Payment RRN, Merchant ID, and Amount does not exist\n|2572|Account number will not be honored\n|2575|Transaction is not allowed for contactless interface\n|2576|Manual PAN Entry not allowed\n|2577|POS Entry does not match specified Terminal Input Capability\n|2578|MagStripe or Key Entry only terminal is not allowed\n|2581|Invalid funding instrument\n|2592|Transaction cannot be routed\n|2593|Request contains one or more invalid fields\n|2599|Backend encountered timeout while processing the transaction\n|ACQ011|Transaction is not valid for capture\n|ACQ012|Excessive capture\n|ACQ013|Captured authorization transaction cannot be voided\n|ACQ024|Concurrent operations on a transaction is not allowed\n|ACQ025|Merchant configuration is invalid\n|ACQ062|Transaction cannot be routed / processed\n|ACQ065|Key ID Does Not Exist\n|ACQ066|Key ID is not valid for this transaction\n|ACQ067|PIN translation failed\n|ACQ068|PIN block is invalid\n|ACQ069|Key operation failed\n|ACQ070|Key is already expired\n|ACQ073|BIN Does Not Exist/Not Supported\n|ACQ084|Transaction was blocked by the Acquirer\n|ACQ089|General Network Communication Error\n|ACQ090|Acquirer Network Communication Error (type 1)\n|ACQ091|Scheme Network Communication Error (type 1)\n|ACQ092|Scheme Network Communication Error (type 2)\n|ACQ096|General Error\n|ACQ700|Acquirer host synchronization error\n|ACQ791|Acquirer Network Communication Error (type 2)\n\n## Error Codes generated by Acquiring Network and/or Issuer Network\n\n|Code|Description\n|-----|------------\n|2001|Declined - Refer to issuer\n|2003|Invalid merchant\n|2004|Issuer requests to capture card\n|2005|Declined - Do not honor the transaction\n|2006|Issuer generic error\n|2012|Invalid transaction\n|2013|Invalid amount\n|2014|Invalid card number\n|2015|Invalid issuer\n|2030|Message format error\n|2041|Lost card\n|2042|Stolen card\n|2051|Insufficient funds\n|2054|Expired card\n|2055|Invalid PIN\n|2057|Transaction not permitted to issuer\n|2058|Transaction not permitted to acquirer\n|2059|Issuer suspected fraud\n|2061|Withdrawal/Transaction amount limit exceeded\n|2062|Restricted card\n|2063|Security violation\n|2070|Invalid transaction - contact issuer\n|2071|PIN not changed\n|2074|PIN encryption error\n|2075|PIN try limit exceeded\n|2076|Invalid \"To\" account specified\n|2077|Invalid \"From\" account specified\n|2078|Invalid account specified\n|2080|System currently not available\n|2088|PIN unacceptable. Retry PIN verification\n|2089|Card Security Code/Card Verification Value is incorrect\n|2090|Declined for 3DS verification failure\n|2091|Issuer system inoperative\n|2092|Scheme/Issuer routing error\n|2093|Declined - 3DS ECI downgraded by issuer\n|2094|Duplicate transmission detected\n|2096|Issuer system error\n|2098|Issuer encountered timeout\n|2099|Scheme/Issuer declined with a non-generic unmappable error\n|201A|Authentication is required\n|20R0|Cardholder requested a stop payment order for the subscription/vaulted payment\n|20R1|Cardholder requested a stop payment order for all subscription/vaulted payments for this merchant\n|20R3|Cardholder requested a stop payment order for all subscription/vaulted payments\n","example":1996},"Error":{"type":"object","required":["logref","message","links","code"],"properties":{"logref":{"type":"string","description":"Reference number that can be sent to Paymaya for identifying or troubleshooting the error","example":"906c2d36-48a1-40ed-84c0-71a37a35a233"},"message":{"type":"string","description":"Human readable message describing the current error.","example":"[1996] Some error"},"links":{"type":"array","items":{"type":"object"},"description":"Useful links for troubleshooting the error"},"code":{"$ref":"#/components/schemas/ErrorCode"}}},"Errors":{"type":"array","items":{"$ref":"#/components/schemas/Error"}},"Receipt":{"type":"object","required":["receiptNo"],"properties":{"transactionId":{"type":"string","description":"Unique identifier returned by the issuer for this transaction.","example":"01234567ABCD"},"approvalCode":{"type":"string","description":"Approval Code / Authorization Identification Code generated by the issuer to indicate the approval of a transaction","example":119},"batchNo":{"type":"string","minLength":1,"maxLength":8,"pattern":"[a-zA-Z0-9_\\\\-]{1,8}","description":"Value supplied by P3, or the value of `transaction.trace.batchNo` during the request (if supplied), which indicates the batch of transactions that the specific transaction has been grouped with. Merchants may keep track of this value for reconnaissance.","example":20170601},"traceNo":{"type":"string","minLength":1,"maxLength":6,"pattern":"[a-zA-Z0-9_\\\\-]{1,6}","description":"Value of `transaction.trace.traceNo` during the request (if supplied)","example":1},"receiptNo":{"type":"string","minLength":12,"maxLength":12,"pattern":"[a-zA-Z0-9_\\\\-]{12}","description":"A receipt / reference number generated by the acquirer. Can be used by all parties (cardholder, merchant, payment gateway, acquirer, issuer) when looking up a specific transaction record for reconnaisance.","example":805322262599}},"description":"Additional transaction reference numbers generated by either the issuing bank or the acquiring host."},"PaymentResponseBase":{"type":"object","required":["paymentTransactionReferenceNo","status","createdAt","receipt","payer","amount"],"properties":{"paymentTransactionReferenceNo":{"type":"string","description":"Unique reference number for the payment request generated by P3. Merchants should keep track of this value for use in succeeding Void Purchase or Refund Purchase requests.","example":"02c8edb3-301a-4ce6-a8b2-cbcf37dbd5b5"},"status":{"type":"string","description":"**Deprecated**. Indicates the result of the payment. Please rely on the HTTP status code and the transaction reference number instead as the indicator of a successful transaction.","deprecated":true,"example":"SUCCESS"},"createdAt":{"type":"string","format":"date-time","description":"Local time of the host when the transaction was processed."},"receipt":{"$ref":"#/components/schemas/Receipt"},"amount":{"$ref":"#/components/schemas/Amount"},"partial":{"type":"boolean","description":"indicates if the authorized amount for the payment is partial"}}},"PaymentResponseECWithCard":{"title":"E-Commerce using Card","allOf":[{"$ref":"#/components/schemas/PaymentResponseBase"},{"properties":{"payer":{"$ref":"#/components/schemas/PayerECWithCard"}}}]},"TokenNetwork":{"type":"string","enum":["VISA","MASTERCARD"],"description":"Indicates the Network used for tokenizing the funding instrument used by the card holder.\n"},"Token":{"type":"object","required":["value","authenticationVerificationValue","expiryMonth","expiryYear","network"],"properties":{"value":{"type":"string","description":"Network token value representing the card used by the cardholder","example":4761340000000043},"authenticationVerificationValue":{"type":"string","minLength":28,"maxLength":28,"description":"Network-generated value to indicate successful tokenization of the funding instrument used by the cardholder, in `Base64` encoding.","example":"jqEmJkhI2+SDCAAAAAAJBwAAAAA="},"expiryMonth":{"type":"string","minLength":1,"maxLength":2,"pattern":"0?[1-9]|1[0-2]","description":"Numeric format of the month (MM) when the card was set by the issuer to expire","example":12},"expiryYear":{"type":"string","minLength":4,"maxLength":4,"pattern":"[\\\\d]{4}","description":"Numeric format of the year when (YYYY) the card was set by the issuer to expire","example":2022},"network":{"$ref":"#/components/schemas/TokenNetwork"},"firstName":{"type":"string","description":"First name of the cardholder","example":"SMART E MONEY"},"lastName":{"type":"string","description":"Last name of the cardholder","example":"INC"},"billingAddress":{"allOf":[{"$ref":"#/components/schemas/Address"},{"description":"Billing address of the cardholder"}]}}},"EcomTokenFI":{"type":"object","required":["token"],"properties":{"token":{"$ref":"#/components/schemas/Token"}}},"PayerECWithToken":{"allOf":[{"$ref":"#/components/schemas/PayerBase"},{"properties":{"metadata":{"$ref":"#/components/schemas/PayerMetadata"},"fundingInstrument":{"$ref":"#/components/schemas/EcomTokenFI"},"referenceId":{"type":"string","minLength":1,"maxLength":36,"pattern":"[a-zA-Z0-9_\\\\-]{1,36}","description":"Gateway-assigned ID of the cardholder","example":"897d5691-7036-443d-8fa5-5a66387a593d"}}}]},"PaymentResponseECWithToken":{"title":"E-Commerce using Token","allOf":[{"$ref":"#/components/schemas/PaymentResponseBase"},{"properties":{"payer":{"$ref":"#/components/schemas/PayerECWithToken"}}}]},"AuthorizationData":{"type":"object","properties":{"emvIccData":{"type":"string","minLength":1,"maxLength":340,"description":"EMV ICC binary data returned by the Issuer. To be used for post-processing (e.g., Issuer Authentication by EMV EXTERNAL AUTHENTICATE or 2nd GENERATE AC)","example":"ggIcAIQHoAAAAAMQEJUFgAAAAACaAxcEGZwBAF8qAgYInwIGAAAAAAEAnwMGAAAAAAAAnxASBgEKA6CAAAoCAAAAAABuefOZnxoCBgifHghQWU1ZUE9TMZ8mCA5/WLUnW3KxnycBgJ8zAyAgyJ80Ax4DAJ81ASGfNgIAyp83BKOXolWfQQQAAAAB"}}},"PaymentResponseCP":{"title":"Card Present","allOf":[{"$ref":"#/components/schemas/PaymentResponseBase"},{"properties":{"payer":{"$ref":"#/components/schemas/PayerCP"},"authorizationData":{"$ref":"#/components/schemas/AuthorizationData"}}}]},"PaymayaFundSource":{"type":"object","properties":{"fundSourceId":{"type":"string","description":"Fund Source ID associated to the PayMaya account used to initiate the transaction"}},"required":["fundSourceId"]},"PaymayaFI":{"type":"object","required":["paymaya"],"properties":{"paymaya":{"$ref":"#/components/schemas/PaymayaFundSource"}}},"PayerPayMaya":{"allOf":[{"$ref":"#/components/schemas/PayerBase"},{"properties":{"fundingInstrument":{"$ref":"#/components/schemas/PaymayaFI"}}}]},"PaymentResponsePayMaya":{"title":"PayMaya","allOf":[{"$ref":"#/components/schemas/PaymentResponseBase"},{"properties":{"payer":{"$ref":"#/components/schemas/PayerPayMaya"}}}]},"PaymentResponse":{"oneOf":[{"$ref":"#/components/schemas/PaymentResponseECWithCard"},{"$ref":"#/components/schemas/PaymentResponseECWithToken"},{"$ref":"#/components/schemas/PaymentResponseCP"},{"$ref":"#/components/schemas/PaymentResponsePayMaya"}]},"PendingResponse":{"type":"object","required":["message","status"],"properties":{"message":{"type":"string","enum":["Transaction had been received and is still ongoing"],"description":"Human readable message describing the current pending scenario (generally due to idempotency)."},"status":{"type":"string","enum":["ONGOING"],"description":"Status describing the current pending scenario (generally due to idempotency)."}}},"AuthorizationRequestBase":{"allOf":[{"$ref":"#/components/schemas/PaymentRequestBase"},{"required":["authorizationType"],"properties":{"authorizationType":{"type":"string","enum":["NORMAL","FINAL","PREAUTHORIZATION"],"description":"Authorization type that describes the capture limits and hold periods (among others) that is supported by this authorization.\n"},"transaction":{"$ref":"#/components/schemas/Transaction"},"options":{"$ref":"#/components/schemas/TransactionOptions"},"trace":{"$ref":"#/components/schemas/TransactionTrace"}}}]},"AuthorizationRequestECWithCard":{"title":"E-Commerce using Card","allOf":[{"properties":{"merchant":{"$ref":"#/components/schemas/OnlineMerchant"},"payer":{"$ref":"#/components/schemas/PayerECWithCard"}}},{"$ref":"#/components/schemas/AuthorizationRequestBase"}]},"AuthorizationRequestCP":{"title":"Card Present","allOf":[{"properties":{"merchant":{"$ref":"#/components/schemas/OfflineMerchant"},"payer":{"$ref":"#/components/schemas/PayerCP"}}},{"$ref":"#/components/schemas/AuthorizationRequestBase"}]},"AuthorizationRequest":{"oneOf":[{"$ref":"#/components/schemas/AuthorizationRequestECWithCard"},{"$ref":"#/components/schemas/AuthorizationRequestCP"}]},"AuthorizationResponse":{"oneOf":[{"$ref":"#/components/schemas/PaymentResponseECWithCard"},{"$ref":"#/components/schemas/PaymentResponseECWithToken"},{"$ref":"#/components/schemas/PaymentResponseCP"}]},"CaptureRequest":{"type":"object","required":["transactionReferenceNo"],"properties":{"paymentTransactionReferenceNo":{"type":"string","description":"**Deprecated**. Unique reference number generated by P3 from a previous successful Authorization request. Use `transactionReferenceNo` instead.","example":"02c8edb3-301a-4ce6-a8b2-cbcf37dbd5b5"},"transactionReferenceNo":{"type":"string","description":"Unique reference number generated by P3 from a previous original transaction.","example":"69b5e571-7d44-4409-9359-ff93555a65a3"},"merchant":{"$ref":"#/components/schemas/BaseMerchantWithID"},"amount":{"$ref":"#/components/schemas/Amount"},"trace":{"$ref":"#/components/schemas/TransactionTrace"}}},"CaptureResponse":{"type":"object","required":["paymentTransactionReferenceNo","createdAt","receipt","captureTransactionReferenceNo","authorisedAmount","capturedAmount"],"properties":{"paymentTransactionReferenceNo":{"type":"string","description":"Unique reference number for the original authorization request generated by P3.","example":"02c8edb3-301a-4ce6-a8b2-cbcf37dbd5b5"},"status":{"type":"string","description":"**Deprecated**. Indicates the result of the transaction. Please rely on the HTTP status code and the transaction reference number instead as the indicator of a successful transaction.","example":"SUCCESS"},"createdAt":{"type":"string","format":"date-time","description":"Local time of the host when the transaction was processed."},"receipt":{"$ref":"#/components/schemas/Receipt"},"captureTransactionReferenceNo":{"type":"string","description":"Unique reference number for the capture request generated by P3.","example":"69b5e571-7d44-4409-9359-ff93555a65a3"},"authorisedAmount":{"allOf":[{"$ref":"#/components/schemas/Amount"},{"description":"Total amount authorized for the specified authorization transaction."}]},"capturedAmount":{"allOf":[{"$ref":"#/components/schemas/Amount"},{"description":"Total amount already captured for the specified authorization transaction. This already includes amounts previously captured for the specified authorization transaction."}]}}},"TrnVoidRequest":{"title":"Void by Transaction Reference Number","type":"object","required":["transactionReferenceNo"],"properties":{"transactionReferenceNo":{"type":"string","description":"Unique reference number generated by P3 from a previous original transaction.","example":"69b5e571-7d44-4409-9359-ff93555a65a3"},"paymentTransactionReferenceNo":{"type":"string","description":"**Deprecated**. Unique reference number generated by P3 from a previous successful Authorization/Purchase request. Use `transactionReferenceNo` instead.","example":"02c8edb3-301a-4ce6-a8b2-cbcf37dbd5b5","deprecated":true},"merchant":{"$ref":"#/components/schemas/BaseMerchant"}}},"RrnVoidRequest":{"title":"Void by Request Reference Number","type":"object","required":["requestReferenceNo","merchant","amount"],"properties":{"requestReferenceNo":{"type":"string","description":"Unique reference number generated by P3 from a previous original transaction."},"paymentRequestReferenceNo":{"type":"string","description":"**Deprecated**. Reference number (from header `Request-Reference-No`) provided by the merchant in the previous purchase request being voided. Use `requestReferenceNo` instead.","deprecated":true},"merchant":{"$ref":"#/components/schemas/BaseMerchantWithID"},"merchantId":{"type":"string","description":"Unique ID issued by PayMaya to the merchant. Deprecated in favor of `merchant.id`.","deprecated":true},"amount":{"allOf":[{"$ref":"#/components/schemas/Amount"},{"description":"Amount of the previous purchase transaction being voided."}]}}},"ReasonCode":{"type":"string","enum":["00","01","02","03","04"],"description":"Indicates the general category why the void / reversal operation is being performed. The following reason codes are supported.\n\n|Code|Description\n|-----|------------\n|`00`|Transaction voided upon request from the cardholder / customer\n|`01`|Transaction cannot be completed by the merchant (e.g., goods and services are no longer available after the purchase request has been approved)\n|`02`|Transaction voided due to an error encountered by the terminal and/or merchant application/system (e.g., in case of chip card processing, Issuer Authentication Data was rejected by the card)\n|`03`|Transaction voided due to communication failure or system timeout\n|`04`|Transaction voided due to card being pulled out from terminal before transaction completion\n"},"VoidRequest":{"oneOf":[{"$ref":"#/components/schemas/TrnVoidRequest"},{"$ref":"#/components/schemas/RrnVoidRequest"}],"required":["reason","reasonCode"],"properties":{"reason":{"type":"string","pattern":"[-a-zA-Z_0-9 .,]+","maxLength":512,"description":"Short description of the reason why the purchase transaction is being voided.","example":"Requested by Customer"},"reasonCode":{"$ref":"#/components/schemas/ReasonCode"},"trace":{"$ref":"#/components/schemas/TransactionTrace"}}},"VoidResponse":{"type":"object","required":["transactionReferenceNo","createdAt","receipt","voidTransactionReferenceNo","transactionAmount","voidedAmount"],"properties":{"transactionReferenceNo":{"type":"string","description":"Unique reference number for the original request generated by P3.","example":"69b5e571-7d44-4409-9359-ff93555a65a3"},"paymentTransactionReferenceNo":{"type":"string","description":"**Deprecated**. Unique reference number for the original request generated by P3. Please use `transactionReferenceNo` instead.","example":"02c8edb3-301a-4ce6-a8b2-cbcf37dbd5b5"},"status":{"type":"string","description":"**Deprecated**. Indicates the result of the transaction. Please rely on the HTTP status code and the transaction reference number instead as the indicator of a successful transaction.","example":"SUCCESS"},"createdAt":{"type":"string","format":"date-time","description":"Local time of the host when the transaction was processed."},"receipt":{"$ref":"#/components/schemas/Receipt"},"voidTransactionReferenceNo":{"type":"string","description":"Unique reference number for the void request generated by P3.","example":"69b5e571-7d44-4409-9359-ff93555a65a3"},"transactionAmount":{"allOf":[{"$ref":"#/components/schemas/Amount"},{"description":"Amount of the transaction being voided."}]},"voidedAmount":{"allOf":[{"$ref":"#/components/schemas/Amount"},{"description":"Actual amount voided for this transaction."}]}}},"RefundRequest":{"type":"object","required":["transactionReferenceNo","merchant","amount","reason"],"properties":{"transactionReferenceNo":{"type":"string","description":"Unique reference number generated by P3 from a previous purchase or capture transaction.","example":"69b5e571-7d44-4409-9359-ff93555a65a3"},"paymentTransactionReferenceNo":{"type":"string","description":"**Deprecated**. Unique reference number generated by P3 from a previous successful Payment or Capture request. Use `transactionReferenceNo` instead.","example":"02c8edb3-301a-4ce6-a8b2-cbcf37dbd5b5"},"merchant":{"$ref":"#/components/schemas/BaseMerchant"},"amount":{"$ref":"#/components/schemas/Amount"},"reason":{"type":"string","pattern":"[-a-zA-Z_0-9 .,]+","maxLength":512,"description":"Short description of the reason why the transaction is being refunded.","example":"Purchased item is defective"},"trace":{"$ref":"#/components/schemas/TransactionTrace"}}},"RefundResponse":{"type":"object","required":["paymentTransactionReferenceNo","createdAt","receipt","refundTransactionReferenceNo","transactionAmount","refundedAmount"],"properties":{"paymentTransactionReferenceNo":{"type":"string","description":"Unique reference number for the original purhase or capture request generated by P3.","example":"02c8edb3-301a-4ce6-a8b2-cbcf37dbd5b5"},"status":{"type":"string","description":"**Deprecated**. Indicates the result of the transaction. Please rely on the HTTP status code and the transaction reference number instead as the indicator of a successful transaction.","example":"SUCCESS"},"createdAt":{"type":"string","format":"date-time","description":"Local time of the host when the transaction was processed."},"receipt":{"$ref":"#/components/schemas/Receipt"},"refundTransactionReferenceNo":{"type":"string","description":"Unique reference number for the refund request generated by P3.","example":"69b5e571-7d44-4409-9359-ff93555a65a3"},"transactionAmount":{"allOf":[{"$ref":"#/components/schemas/Amount"},{"description":"Amount of the transaction being refunded."}]},"refundedAmount":{"allOf":[{"$ref":"#/components/schemas/Amount"},{"description":"Actual amount refunded for this transaction."}]}}},"BalanceInquiryRequest":{"type":"object","required":["merchant","payer"],"properties":{"merchant":{"$ref":"#/components/schemas/OfflineMerchant"},"payer":{"$ref":"#/components/schemas/PayerCP"},"trace":{"$ref":"#/components/schemas/TransactionTrace"}}},"Balance":{"type":"object","properties":{"current":{"$ref":"#/components/schemas/Amount"},"available":{"$ref":"#/components/schemas/Amount"}}},"BalanceInquiryResponse":{"type":"object","required":["transactionReferenceNo","createdAt","balance","payer","merchant","status","receipt"],"properties":{"transactionReferenceNo":{"type":"string","description":"Unique reference number for the request generated by P3.","example":"02c8edb3-301a-4ce6-a8b2-cbcf37dbd5b5"},"createdAt":{"type":"string","format":"date-time","description":"Local time of the host when the transaction was processed."},"balance":{"$ref":"#/components/schemas/Balance"},"payer":{"$ref":"#/components/schemas/PayerCP"},"merchant":{"$ref":"#/components/schemas/OfflineMerchant"},"status":{"type":"string","description":"**Deprecated**. Indicates the result of the transaction. Please rely on the HTTP status code and the transaction reference number instead as the indicator of a successful transaction.","deprecated":true,"example":"SUCCESS"},"receipt":{"$ref":"#/components/schemas/Receipt"},"authorizationData":{"$ref":"#/components/schemas/AuthorizationData"}}},"NormalizedServiceCode":{"type":"string","enum":["AUTHORIZATION","PAYMENT","CAPTURE","VOID","REFUND","BALINQ","SETTLEMENT"],"description":"Type of transaction. The following types are available.\n\n* `AUTHORIZATION`\n* `PAYMENT`\n* `CAPTURE`\n* `VOID`\n* `REFUND`\n* `BALINQ`\n* `SETTLEMENT`\n"},"GetTransactionResponse":{"type":"object","required":["timestamp","requestReferenceNo","transactionReferenceNo","requestType","transactionType","responseCode","merchant","receipt"],"properties":{"timestamp":{"type":"string","description":"Timestamp when the transaction was performed.","example":"2017-05-31T10:15:28.677Z"},"requestReferenceNo":{"allOf":[{"$ref":"#/components/schemas/Request-Reference-No"},{"description":"Reference number (from header `Request-Reference-No`) provided by the merchant for the transaction being looked-up."}],"example":"A1D099C2-2479-4AAC-9F87-B2A304450PAY"},"transactionReferenceNo":{"type":"string","description":"Reference number provided by P3 for the transaction being looked up.","example":"02c8edb3-301a-4ce6-a8b2-cbcf37dbd5b5"},"requestType":{"$ref":"#/components/schemas/NormalizedServiceCode"},"transactionType":{"type":"string","enum":["EC","CP","MT"],"description":"For purchase transactions, type of the transaction performed"},"originalTransactionReferenceNo":{"type":"string","description":"Reference number provided by p3 for the original transaction tagged by the transaction (e.g. `VOID`, `REFUND`) being looked up.","example":"b78815a9-edce-46e6-b754-e6c94074e82d"},"responseCode":{"$ref":"#/components/schemas/ErrorCode"},"message":{"type":"string","description":"In case of failed transactions, the error message returned by P3 in the decline response","example":"[2593] Another error"},"authorizedAmount":{"allOf":[{"$ref":"#/components/schemas/Amount"},{"description":"The amount authorized for the transaction."}]},"capturedAmount":{"allOf":[{"$ref":"#/components/schemas/Amount"},{"description":"The amount captured for the transaction."}]},"refundedAmount":{"allOf":[{"$ref":"#/components/schemas/Amount"},{"description":"The amount refunded for the transaction."}]},"voidedAmount":{"allOf":[{"$ref":"#/components/schemas/Amount"},{"description":"The amount voided for the transaction."}]},"merchant":{"allOf":[{"$ref":"#/components/schemas/BaseMerchantWithID"},{"properties":{"acquiringTerminal":{"$ref":"#/components/schemas/Terminal"},"paymentFacilitator":{"allOf":[{"$ref":"#/components/schemas/PaymentFacilitatorBase"},{"properties":{"subMerchants":{"type":"array","maxItems":1,"minItems":1,"items":{"$ref":"#/components/schemas/SubmerchantBase"}}}}]}}}]},"receipt":{"$ref":"#/components/schemas/Receipt"}}},"ListTransactionsResponse":{"type":"object","required":["page","size","results"],"properties":{"page":{"type":"integer","minimum":1,"description":"Page number for this batch response"},"size":{"type":"integer","minimum":1,"maximum":500,"description":"Number of transactions contained in this batch response"},"results":{"type":"array","items":{"$ref":"#/components/schemas/GetTransactionResponse"}}}},"KeyType":{"type":"string","description":"Type of the key to be created. The following types are supported.\n\n|Type|Description\n|-----|------------\n|PIN|Master key. Used to encrypt other keys when being sent over via the network.\n|MASTER|PIN encryption key. Used to encrypt PIN blocks for transactions with Online PIN as the cardholder verification method.\n","enum":["PIN","MASTER"]},"KeyScope":{"type":"string","description":"Intended scope / usage of the key to be created (default value: same scope as the master key). The following scopes are supported.\n\n|Scope|Description\n|-----|------------\n|GATEWAY|Key to be used by gateways\n|TERMINAL|Key to be used directly by the terminal\n","enum":["GATEWAY","TERMINAL"]},"KeyParameters":{"type":"object","required":["algorithm","size"],"properties":{"algorithm":{"type":"string","description":"Encrpyption algorithm where the key is intended to be used. The following algorithms are supported.\n\n|Algorithm|Description\n|-----|------------\n|DES|DES key for DES/3DES encryption mode\n","enum":["DES"]},"size":{"type":"integer","description":"Size (in bits) of the key"}},"description":"Specifies the key parameters / properties"},"Key":{"type":"object","required":["id","checkDigit","type","scope","masterKeyId","parameters","validUntil"],"properties":{"id":{"type":"string","description":"Reference ID of the key","example":"E33900F3-7115-4F1F-ADD2-B5D02E9721E8"},"key":{"type":"string","description":"Actual key payload (in hex string format) encrypted under the master key specified by masterKeyId","example":"8B58323E4F00CDEE76956021FE7B9BC3"},"checkDigit":{"type":"string","description":"Key check value","example":"9AC90D"},"type":{"$ref":"#/components/schemas/KeyType"},"scope":{"$ref":"#/components/schemas/KeyScope"},"masterKeyId":{"type":"string","description":"Reference ID of master key used to encrypt this key payload","example":"97C2747B-1C58-4CB1-8F59-A752092C3E89"},"parameters":{"$ref":"#/components/schemas/KeyParameters"},"validUntil":{"type":"string","format":"date-time","description":"Date + Time (with Timezone) until when the key is valid to be used. In ISO-8601 format."}}},"Keys":{"type":"array","items":{"$ref":"#/components/schemas/Key"}},"ListKeysResponse":{"type":"object","required":["page","size","results"],"properties":{"page":{"type":"integer","minimum":1,"description":"Page number for this keys search"},"size":{"type":"integer","minimum":1,"maximum":500,"description":"Number of keys returned for this search"},"results":{"$ref":"#/components/schemas/Keys"}}},"CreateKeyRequest":{"type":"object","required":["type","masterKeyId","scope"],"properties":{"type":{"allOf":[{"$ref":"#/components/schemas/KeyType"},{"description":"Type of the key to be created. This endpoint only supports creation of `PIN` keys."}]},"scope":{"$ref":"#/components/schemas/KeyScope"},"masterKeyId":{"type":"string","description":"Key ID assigned for the master key. Generated key will be encrypted using the derived value of this key.","example":"97C2747B-1C58-4CB1-8F59-A752092C3E89"},"parameters":{"$ref":"#/components/schemas/KeyParameters"},"lifetime":{"type":"integer","minimum":86400,"maximum":2592000,"description":"Intended lifetime of the key, in seconds. By default, this is `604800`."}}},"BinType":{"type":"string","enum":["CREDIT","DEBIT","DEBIT/CREDIT","UNKNOWN"],"description":"Card type supported by BIN or BIN pattern. The following types are supported.\n\n* `CREDIT`\n* `DEBIT`\n* `DEBIT/CREDIT`\n* `UNKNOWN`\n"},"BinScheme":{"type":"string","enum":["BANCNET","MASTERCARD","VISA","JCB"],"description":"Card scheme associated with BIN or BIN pattern. The following schemes are supported.\n\n* `BANCNET`\n* `MASTERCARD`\n* `VISA`\n* `JCB`\n"},"Bin":{"type":"object","required":["bin","type","network","scheme"],"properties":{"bin":{"type":"string","minLength":1,"maxLength":8,"pattern":"[0-9]+","description":"Card Bank Identification Number (BIN)","example":483442},"type":{"$ref":"#/components/schemas/BinType"},"network":{"type":"string","description":"Comma separated scheme networks supported by BIN, ordered by descending priority (Highest priority first). Refer to scheme for supported schemes.","example":"VISA"},"scheme":{"$ref":"#/components/schemas/BinScheme"}}},"Bins":{"type":"array","items":{"$ref":"#/components/schemas/Bin"}},"ListBinsResponse":{"type":"object","required":["page","size","binDetails"],"properties":{"page":{"type":"integer","minimum":1,"description":"Page number for this bins search"},"size":{"type":"integer","minimum":1,"maximum":500,"description":"Number of bins returned for this search"},"binDetails":{"$ref":"#/components/schemas/Bins"}}},"GetBinResponse":{"type":"object","required":["binDetails"],"properties":{"binDetails":{"$ref":"#/components/schemas/Bin"}}},"BinPattern":{"type":"object","required":["pattern","type","network","scheme"],"properties":{"pattern":{"type":"string","minLength":1,"maxLength":50,"description":"Supported pattern (regex) for Card Bank Identification Number (BIN)","example":"/^4.*$/"},"type":{"$ref":"#/components/schemas/BinType"},"network":{"type":"string","description":"Comma separated scheme networks supported by BIN, ordered by descending priority (Highest priority first). Refer to scheme for supported schemes.","example":"MASTERCARD"},"scheme":{"$ref":"#/components/schemas/BinScheme"}}},"BinPatterns":{"type":"array","items":{"$ref":"#/components/schemas/BinPattern"}},"ListBinPatternsResponse":{"type":"object","required":["page","size","patterns"],"properties":{"page":{"type":"integer","minimum":1,"description":"Page number for this batch response"},"size":{"type":"integer","minimum":1,"maximum":500,"description":"Number of BIN records contained in this batch response"},"patterns":{"$ref":"#/components/schemas/BinPatterns"}}},"Health":{"type":"object","required":["status"],"properties":{"status":{"type":"string","enum":["UP","UNKNOWN"],"description":"Indicates status of P3 API\n\n* `UP` - P3 is up, client has been authenticated and access keys have been validated\n* `UNKNOWN` - P3 status is unknown. Contact PayMaya for support.\n"}}}},"parameters":{"Request-Reference-No":{"in":"header","name":"Request-Reference-No","schema":{"$ref":"#/components/schemas/Request-Reference-No"},"required":true,"description":"A reference number sent by the API caller to tag the transaction in P3.\n"},"X-Idempotency-Key":{"in":"header","name":"X-Idempotency-Key","schema":{"$ref":"#/components/schemas/X-Idempotency-Key"},"required":false,"description":"An id that marks the transmission/re-transmission for idempotency checks and identifies this transmission separately from other reference numbers\n"},"Longitude":{"in":"header","name":"Longitude","schema":{"$ref":"#/components/schemas/Longitude"},"required":false,"description":"A geographic coordinate that specifies the east–west position of a point on the Earth's surface\n"},"Latitude":{"in":"header","name":"Latitude","schema":{"$ref":"#/components/schemas/Latitude"},"required":false,"description":"A geographic coordinate that specifies the north-south position of a point on the Earth's surface\n"},"TransactionReferenceNumberPath":{"in":"path","name":"refNo","schema":{"type":"string"},"required":true,"description":"Any reference number as described above referring to the tranaction"},"TransactionMID":{"in":"query","name":"mid","schema":{"type":"string"},"required":false,"description":"Merchant ID of transaction"},"TransactionReferenceNumberQuery":{"in":"query","name":"refNo","schema":{"type":"string"},"required":false,"description":"Reference number of transaction"},"PageNumber":{"in":"query","name":"page","schema":{"type":"integer","default":1},"required":false,"description":"Page / offset to start from"},"PageSize":{"in":"query","name":"size","schema":{"type":"integer","default":10,"maximum":500},"required":false,"description":"Number of items to return per page"},"TransactionFrom":{"in":"query","name":"from","schema":{"type":"string","format":"date-time"},"required":false,"description":"ISO 8601 representation of date/time to start the lookup from"},"TransasctionTo":{"in":"query","name":"to","schema":{"type":"string","format":"date-time"},"required":false,"description":"ISO 8601 representation of date/time until when to lookup transactions"},"TransactionSort":{"in":"query","name":"sort","schema":{"type":"string","enum":["timestamp"],"default":"timestamp"},"required":false,"description":"Defines which data will be used to sort the results"},"TransactionOrder":{"in":"query","name":"order","schema":{"type":"string","enum":["asc","desc"],"default":"desc"},"required":false,"description":"Configure how the results should be sorted\n\n* asc - ascending\n* desc - descending\n"},"KeyID":{"in":"path","name":"keyId","schema":{"type":"string"},"required":true,"description":"Key id to get information from"},"KeyDataVisibilityFlag":{"in":"query","name":"showKeyData","schema":{"type":"boolean","default":false},"required":false,"description":"Returns the key's actual data (in hex string format) in the `key` parameter in the response, where the data is encrypted under the key's reference master key specified in `masterKeyId`.\n\nNote, however, that when the key referenced by `keyId` pertains to master key (`type`: `MASTER`), the key data is **never** returned, regardless of the value of this parameter.\n\nBy default, this is `false`.\n"},"BINPageSize":{"in":"query","name":"size","schema":{"type":"integer","maximum":500},"required":false,"description":"Number of bins to return per page. The default is `5`."},"BINType":{"in":"query","name":"type","schema":{"type":"string","enum":["CREDIT","DEBIT","DEBIT/CREDIT","UNKNOWN"]},"required":false,"description":"Card Type to query"},"BINNetwork":{"in":"query","name":"network","schema":{"type":"string","enum":["BANCNET","MASTERCARD","VISA","JCB"]},"required":false,"description":"Network to query"},"BINScheme":{"in":"query","name":"scheme","schema":{"type":"string","enum":["BANCNET","MASTERCARD","VISA","JCB"]},"required":false,"description":"Scheme to query"},"BIN":{"in":"path","name":"bin","schema":{"type":"string"},"required":true,"description":"BIN to check details"},"BINDeltaFrom":{"in":"query","name":"from","schema":{"type":"string","format":"date-time"},"required":false,"description":"ISO 8601 representation of date/time to start the lookup from. No filter for date, will return all records, same result as `/config/cards/bins`."}},"responses":{"DefaultErrorResponse":{"description":"Error encountered while processing. Please refer to HTTP status code, `message` and `code` in response body for more information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Errors"}}}}},"headers":{"X-Retransmission":{"schema":{"type":"string","enum":["true","false"],"example":"true"}}}},"x-readme":{"explorer-enabled":true,"proxy-enabled":true}}