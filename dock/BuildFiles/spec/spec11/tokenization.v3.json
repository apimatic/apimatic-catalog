{
  "openapi": "3.0.1",
  "info": {
    "version": "3.0",
    "title": "Tokenization API (V3)",
    "description": "You can use the **Tokenization API** to replace sensitive credit and debit card data without the need to expose the cardholder's original account information.\n\nClick [here](../docs/getting-started.md) to get started with this API."
  },
  "servers": [
    {
      "url": "https://api-hub-sbx.devcdt.com.br/tokenization/v3",
      "description": "Staging environment"
    },
    {
      "url": "https://cts.conductor.com.br/tokenization/v3",
      "description": "Production environment"
    }
  ],
  "paths": {
    "/cards/{id}": {
      "get": {
        "tags": [
          "Card"
        ],
        "summary": "Get information for a card",
        "description": "Use this endpoint to enables the issuer to get tokenization informations for a card",
        "operationId": "CardGet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Dock card ID (e.g. 123)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardGetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Not found"
          }
        },
        "servers": [
          {
            "url": "https://api-hub-sbx.devcdt.com.br/tokenization/v3",
            "description": "Staging environment"
          },
          {
            "url": "https://cts.conductor.com.br/tokenization/v3",
            "description": "Production environment"
          }
        ]
      }
    },
    "/push-provisioning/hce/card/{id}": {
      "post": {
        "tags": [
          "Push Provisioning - VISA"
        ],
        "summary": "Generate push provisioning payload by cardID for HCE wallets [Visa only]",
        "description": "Use this endpoint to generate push provisioning payload by cardID for HCE wallets (Android)",
        "operationId": "PushProvisioningCard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Dock card ID (e.g. 123)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VisaPushProvisioningCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisaPushProvisioningResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Not found"
          }
        },
        "servers": [
          {
            "url": "https://api-hub-sbx.devcdt.com.br/tokenization/v3",
            "description": "Staging environment"
          },
          {
            "url": "https://cts.conductor.com.br/tokenization/v3",
            "description": "Production environment"
          }
        ]
      }
    },
    "/push-provisioning/se/activation-data": {
      "post": {
        "tags": [
          "Push Provisioning - VISA"
        ],
        "summary": "Generate activation data for SE wallets [Visa only]",
        "description": "Use this endpoint to generate activation data payload for secure element wallets (Apple)",
        "operationId": "ActivationData",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VisaActivationDataResquest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisaActivationDataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "servers": [
          {
            "url": "https://api-hub-sbx.devcdt.com.br/tokenization/v3",
            "description": "Staging environment"
          },
          {
            "url": "https://cts.conductor.com.br/tokenization/v3",
            "description": "Production environment"
          }
        ]
      }
    },
    "/push-provisioning/se/provisioning-authentication-data/card/{id}": {
      "get": {
        "tags": [
          "Push Provisioning - VISA"
        ],
        "summary": "Generate provisioning authentication data by ID for SE wallets [Visa only]",
        "description": "Use this endpoint to generate provisioning authentication data by ID payload for secure element wallets (Apple)",
        "operationId": "AuthenticationDataCard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Dock card ID (e.g. 123)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisaProvisioningAuthenticationDataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Not found"
          }
        },
        "servers": [
          {
            "url": "https://api-hub-sbx.devcdt.com.br/tokenization/v3",
            "description": "Staging environment"
          },
          {
            "url": "https://cts.conductor.com.br/tokenization/v3",
            "description": "Production environment"
          }
        ]
      }
    },
    "/mastercard/pushProvisioning/card/{card-id}": {
      "get": {
        "tags": [
          "Push Provisioning - MASTER"
        ],
        "summary": "Push Provisioning [ Mastercard ]",
        "description": "Use this endpoint to generate push provisioning payload by `card-id` (Android)",
        "operationId": "get-mastercard-pushProvisioning-card-card-id",
        "parameters": [
          {
            "name": "card-id",
            "in": "path",
            "description": "Dock identification card.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "123"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PushProvisioningResponse"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "Payload": "eyJhbGciOiJBMjU2R0NNS1 ciLCJpdiI6IkkzeNFIn0.37IzQCaJiH1z NlmxM5lV5c_dSQgtZS_huYfJQrUBnqw. QhCJjN2cgM5AfcnX. XzZF9dVQ5hBqLwaeyvOOiB oqbERAn56QqyQr30mKxZIL8JiQ.GS4i3u3 vCAjkLuHIoBpZPQ"
                    }
                  },
                  "Example 2": {
                    "value": {
                      "Payload": {
                        "payload": "eyJhbGciOiJBMjU2R0NNS1 ciLCJpdiI6IkkzeNFIn0.37IzQCaJiH1z NlmxM5lV5c_dSQgtZS_huYfJQrUBnqw. QhCJjN2cgM5AfcnX. XzZF9dVQ5hBqLwaeyvOOiB oqbERAn56QqyQr30mKxZIL8JiQ.GS4i3u3 vCAjkLuHIoBpZPQ"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorResponse": {
                      "type": "object",
                      "description": "Response error object.",
                      "properties": {
                        "status": {
                          "type": "integer",
                          "description": "HTTP Status Code."
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Input parameters validation failed."
                          ],
                          "description": "Error message."
                        },
                        "details": {
                          "type": "array",
                          "description": "Error message details.",
                          "uniqueItems": true,
                          "items": {
                            "type": "object",
                            "properties": {
                              "location": {
                                "type": "string",
                                "description": "Field in error (open field)."
                              },
                              "message": {
                                "type": "string",
                                "description": "Detailed error message (open field).\n\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "errorResponse": {
                        "status": 400,
                        "message": "Input parameters validation failed.",
                        "details": [
                          {
                            "location": "string",
                            "message": "string"
                          }
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "errorResponse": {
                        "status": 0,
                        "message": "Input parameters validation failed.",
                        "details": [
                          {
                            "location": "string",
                            "message": "string"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "servers": [
          {
            "url": "https://api-hub-sbx.devcdt.com.br/tokenization/v3",
            "description": "Staging environment"
          },
          {
            "url": "https://cts.conductor.com.br/tokenization/v3",
            "description": "Production environment"
          }
        ]
      }
    },
    "/mastercard/tav/card/{card-id}": {
      "get": {
        "tags": [
          "Push Provisioning - MASTER"
        ],
        "summary": "Mastercard generate TAV card",
        "description": "Use this endpoint to generate a Token Authentication Value (TAV) signature by `card-id` (Android)",
        "operationId": "get-mastercard-tav-card-idCartao",
        "parameters": [
          {
            "name": "card-id",
            "in": "path",
            "description": "Dock identification card.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "123"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tav": {
                      "type": "string",
                      "description": "Token Authentication Value (TAV).",
                      "example": "ew0KICAgInZlcnNpb24iOiAiMyIsDQogICAic2lnbmF0dXJlQWxnb3JpdGhtIjogIlJTQS1TSEEyNTYiLA0KICAgImRhdGFWYWxpZFVudGlsVGltZXN0YW1wIjogIjIwMTgtMDctMzFUMTYxMDU5WiIsDQogICAiaW5jbHVkZWRGaWVsZHNJbk9yZGVyIjogImRhdGFWYWxpZFVudGlsVGltZXN0YW1wfGFjY291bnROdW1iZXJ8YWNjb3VudEV4cGlyeSIsDQogICAic2lnbmF0dXJlIjogIlhRMDAwKzZndE5rbG5tR2ZjU0p3QWRxaUk1ZzVHTkphZFNxNzNWNzBjYm9BTjJueGJJMDU0MkU1Y2I5eTgvUVdOOXJXY2lwa05ZVUIwZzBSNUZ2M1BPckI4SFNqc3VFS2NuWUdwV3E2eWZnZEU5MTdkYm92UG9Zd3BMencxR1VOUm5YTGpJTGtqMTJ3QUo1TFIwT2xsV0xkUHJSampsNFA3a1BPWno2VnYzZGF4YW0wUXBINWlqTnA3R05IMHdCV1hQc1U5VGtlUWZlUWJmUFVkRHVYTmwwR0F6M1g3UVB2SFcrSHBJNjg2MWJSTWlwNWVJOVRHT0NzQVZCYjBoeGRqVTRmSi9ZUE9DRm41OWdxU0tFcmlpQ2FIcS9EOGxLZHFLMS8wSjlHNDlmd2hQOHJVbE9Gd04xMFBVMHp5M00xUC8rU1pKRW5zOTdmUG5OWFBuY3crQT09Ig0KfQ"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "tav": "ew0KICAgInZlcnNpb24iOiAiMyIsDQogICAic2lnbmF0dXJlQWxnb3JpdGhtIjogIlJTQS1TSEEyNTYiLA0KICAgImRhdGFWYWxpZFVudGlsVGltZXN0YW1wIjogIjIwMTgtMDctMzFUMTYxMDU5WiIsDQogICAiaW5jbHVkZWRGaWVsZHNJbk9yZGVyIjogImRhdGFWYWxpZFVudGlsVGltZXN0YW1wfGFjY291bnROdW1iZXJ8YWNjb3VudEV4cGlyeSIsDQogICAic2lnbmF0dXJlIjogIlhRMDAwKzZndE5rbG5tR2ZjU0p3QWRxaUk1ZzVHTkphZFNxNzNWNzBjYm9BTjJueGJJMDU0MkU1Y2I5eTgvUVdOOXJXY2lwa05ZVUIwZzBSNUZ2M1BPckI4SFNqc3VFS2NuWUdwV3E2eWZnZEU5MTdkYm92UG9Zd3BMencxR1VOUm5YTGpJTGtqMTJ3QUo1TFIwT2xsV0xkUHJSampsNFA3a1BPWno2VnYzZGF4YW0wUXBINWlqTnA3R05IMHdCV1hQc1U5VGtlUWZlUWJmUFVkRHVYTmwwR0F6M1g3UVB2SFcrSHBJNjg2MWJSTWlwNWVJOVRHT0NzQVZCYjBoeGRqVTRmSi9ZUE9DRm41OWdxU0tFcmlpQ2FIcS9EOGxLZHFLMS8wSjlHNDlmd2hQOHJVbE9Gd04xMFBVMHp5M00xUC8rU1pKRW5zOTdmUG5OWFBuY3crQT09Ig0KfQ"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "tav": "ew0KICAgInZlcnNpb24iOiAiMyIsDQogICAic2lnbmF0dXJlQWxnb3JpdGhtIjogIlJTQS1TSEEyNTYiLA0KICAgImRhdGFWYWxpZFVudGlsVGltZXN0YW1wIjogIjIwMTgtMDctMzFUMTYxMDU5WiIsDQogICAiaW5jbHVkZWRGaWVsZHNJbk9yZGVyIjogImRhdGFWYWxpZFVudGlsVGltZXN0YW1wfGFjY291bnROdW1iZXJ8YWNjb3VudEV4cGlyeSIsDQogICAic2lnbmF0dXJlIjogIlhRMDAwKzZndE5rbG5tR2ZjU0p3QWRxaUk1ZzVHTkphZFNxNzNWNzBjYm9BTjJueGJJMDU0MkU1Y2I5eTgvUVdOOXJXY2lwa05ZVUIwZzBSNUZ2M1BPckI4SFNqc3VFS2NuWUdwV3E2eWZnZEU5MTdkYm92UG9Zd3BMencxR1VOUm5YTGpJTGtqMTJ3QUo1TFIwT2xsV0xkUHJSampsNFA3a1BPWno2VnYzZGF4YW0wUXBINWlqTnA3R05IMHdCV1hQc1U5VGtlUWZlUWJmUFVkRHVYTmwwR0F6M1g3UVB2SFcrSHBJNjg2MWJSTWlwNWVJOVRHT0NzQVZCYjBoeGRqVTRmSi9ZUE9DRm41OWdxU0tFcmlpQ2FIcS9EOGxLZHFLMS8wSjlHNDlmd2hQOHJVbE9Gd04xMFBVMHp5M00xUC8rU1pKRW5zOTdmUG5OWFBuY3crQT09Ig0KfQ"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorResponse": {
                      "type": "object",
                      "description": "Response error object.",
                      "properties": {
                        "status": {
                          "type": "integer",
                          "description": "HTTP Status Code."
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Input parameters validation failed."
                          ],
                          "description": "Error message."
                        },
                        "details": {
                          "type": "array",
                          "description": "Error message details.",
                          "uniqueItems": true,
                          "items": {
                            "type": "object",
                            "properties": {
                              "location": {
                                "type": "string",
                                "description": "Field in error (open field)."
                              },
                              "message": {
                                "type": "string",
                                "description": "Detailed error message (open field).\n\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "errorResponse": {
                        "status": 400,
                        "message": "Input parameters validation failed.",
                        "details": [
                          {
                            "location": "string",
                            "message": "string"
                          }
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "errorResponse": {
                        "status": 0,
                        "message": "Input parameters validation failed.",
                        "details": [
                          {
                            "location": "string",
                            "message": "string"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "servers": [
          {
            "url": "https://api-hub-sbx.devcdt.com.br/tokenization/v3",
            "description": "Staging environment"
          },
          {
            "url": "https://cts.conductor.com.br/tokenization/v3",
            "description": "Production environment"
          }
        ]
      }
    },
    "/pans/{pan-reference-id}/tokens/{token-reference-id}/activate": {
      "put": {
        "tags": [
          "Token"
        ],
        "summary": "Token activate",
        "description": "Use this endpoint to enables the issuer to activate a token",
        "operationId": "TokenActivate",
        "parameters": [
          {
            "name": "operationType",
            "in": "query",
            "description": "Operation type. **(conditional  VISA)**<br>Used to specify the device in the operation. (whatsapp)",
            "schema": {
              "type": "string",
              "example": "deviceBinding"
            }
          },
          {
            "name": "pan-reference-id",
            "in": "path",
            "description": "Unique ID for the PAN (e.g. V-3021014476122497969633)",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 48
            }
          },
          {
            "name": "token-reference-id",
            "in": "path",
            "description": "Unique ID for the token (e.g. XBITQE302101551801573060)",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 48
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenLifecycleActivateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenLifecycleActivateResponse200"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenLifecycleActivateResponse400"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenLifecycleActivateResponse404"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-hub-sbx.devcdt.com.br/tokenization/v3",
            "description": "Staging environment"
          },
          {
            "url": "https://cts.conductor.com.br/tokenization/v3",
            "description": "Production environment"
          }
        ]
      }
    },
    "/cards/{card-id}/correlation/{correlation_id}/tokenActivate": {
      "put": {
        "tags": [
          "Token"
        ],
        "summary": "Token activate by correlationID  [Mastercard only]",
        "description": "Use this endpoint to enables the issuer to activate a token by CorrelationID attribute.\n",
        "operationId": "get-api-cards-card-id-correlation-correlation_id-tokenActivate",
        "parameters": [
          {
            "name": "card-id",
            "in": "path",
            "description": "Card unique ID (e.g. 123)",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 16,
              "example": "123"
            }
          },
          {
            "name": "correlation_id",
            "in": "path",
            "description": "Value linking pre-digitization messages generated during provisioning (e.g. ATESHE35468214801573060)",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 48,
              "example": "ATESHE35468214801573060"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Comment related to activation<br/>",
                    "minLength": 4,
                    "maxLength": 500
                  },
                  "reasonCode": {
                    "$ref": "#/components/schemas/ReasonCode"
                  },
                  "audit": {
                    "$ref": "#/components/schemas/AuditDTO"
                  }
                },
                "required": [
                  "comment"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "comment": "string",
                    "reasonCode": "A",
                    "audit": {
                      "userId": "AI145530",
                      "userName": "John Smith",
                      "organization": "Solid Bank Inc",
                      "phone": "5555551234"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenLifecycleActivateResponse200"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenLifecycleActivateResponse400"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenLifecycleActivateResponse404"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-hub-sbx.devcdt.com.br/tokenization/v3",
            "description": "Staging environment"
          },
          {
            "url": "https://cts.conductor.com.br/tokenization/v3",
            "description": "Production environment"
          }
        ]
      }
    },
    "/pans/{pan-reference-id}/tokens/{token-reference-id}/suspend": {
      "put": {
        "tags": [
          "Token"
        ],
        "summary": "Token suspend",
        "description": "Use this endpoint to suspend an active token",
        "operationId": "TokenSuspend",
        "parameters": [
          {
            "name": "pan-reference-id",
            "in": "path",
            "description": "Unique ID for the PAN (e.g. C-3021014476122497969633)<br />",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 48
            }
          },
          {
            "name": "token-reference-id",
            "in": "path",
            "description": "Unique ID for the token (e.g. DNITHE302101551801573060)<br />",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 48
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Comment related to activation<br />",
                    "minLength": 4,
                    "maxLength": 500,
                    "example": "Suspected fraudulent transactions reported"
                  },
                  "reasonCode": {
                    "type": "string",
                    "enum": [
                      "L",
                      "S",
                      "T",
                      "Z"
                    ],
                    "description": "Reason for the activation<br/>\nValid values:<br/>\n\"L\" - Cardholder confirmed token device lost<br/>\n\"S\" - Cardholder confirmed token device stolen<br/>\n\"T\" - Issuer or cardholder confirmed fraudulent token transactions<br/>\n\"Z\" - Other<br/>\n**Note: required only Mastercard operations**",
                    "maxLength": 1,
                    "example": "S"
                  },
                  "audit": {
                    "$ref": "#/components/schemas/AuditDTO"
                  }
                },
                "required": [
                  "comment",
                  "audit"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenLifecycleSuspendResponse200"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenLifecycleSuspendResponse400"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenLifecycleSuspendResponse404"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-hub-sbx.devcdt.com.br/tokenization/v3",
            "description": "Staging environment"
          },
          {
            "url": "https://cts.conductor.com.br/tokenization/v3",
            "description": "Production environment"
          }
        ]
      }
    },
    "/pans/{pan-reference-id}/tokens/{token-reference-id}/unsuspend": {
      "put": {
        "tags": [
          "Token"
        ],
        "summary": "Token unsuspend",
        "description": "Use this endpoint to unsuspend or resume a suspended token and return it to the active state",
        "operationId": "TokenUnsuspend",
        "parameters": [
          {
            "name": "pan-reference-id",
            "in": "path",
            "description": "Unique ID for the PAN (e.g. C-3021014476122497969633)<br />",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 48
            }
          },
          {
            "name": "token-reference-id",
            "in": "path",
            "description": "Unique ID for the token (e.g. DNITHE302101551801573060)<br />",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 48
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenLifecycleUnsuspendRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenLifecycleUnsuspendResponse200"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenLifecycleUnsuspendResponse400"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenLifecycleUnsuspendResponse404"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-hub-sbx.devcdt.com.br/tokenization/v3",
            "description": "Staging environment"
          },
          {
            "url": "https://cts.conductor.com.br/tokenization/v3",
            "description": "Production environment"
          }
        ]
      }
    },
    "/pans/{pan-reference-id}/tokens/{token-reference-id}": {
      "delete": {
        "tags": [
          "Token"
        ],
        "summary": "Delete token",
        "description": "Use this endpoint to delete a token so that it may not initiate any new transactions",
        "operationId": "TokenDelete",
        "parameters": [
          {
            "name": "operationType",
            "in": "query",
            "description": "Operation type. **(conditional  VISA)**<br>Used to specify the device in the operation. (whatsapp)",
            "schema": {
              "type": "string",
              "example": "deviceBinding"
            }
          },
          {
            "name": "pan-reference-id",
            "in": "path",
            "description": "Unique ID for the PAN (e.g. C-3021014476122497969633)",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 48
            }
          },
          {
            "name": "token-reference-id",
            "in": "path",
            "description": "Unique ID for the token (e.g. DNITHE302101551801573060)<br />",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 48
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenDeleteRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "OK - It has no response body for delete."
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenLifecycleDeleteResponse400"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenLifecycleDeleteResponse404"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-hub-sbx.devcdt.com.br/tokenization/v3",
            "description": "Staging environment"
          },
          {
            "url": "https://cts.conductor.com.br/tokenization/v3",
            "description": "Production environment"
          }
        ]
      },
      "get": {
        "tags": [
          "Token"
        ],
        "summary": "Token details",
        "description": "Use this endpoint to enables the issuer to retrieve token details for a particular token",
        "operationId": "TokenGet",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "Audit User Id (e.g. AI145530)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userName",
            "in": "query",
            "description": "Audit User Name (e.g. John Smith)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization",
            "in": "query",
            "description": "Audit Organization (e.g. Solid Bank Inc)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "description": "Audit Phone (e.g. 5555551234)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pan-reference-id",
            "in": "path",
            "description": "Unique ID for the PAN (e.g. C-3021014476122497969633)<br />",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 48
            }
          },
          {
            "name": "token-reference-id",
            "in": "path",
            "description": "Unique ID for the token (e.g. DNITHE302101551801573060)<br />",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 48
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenLifecycleDetailResponse200"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenLifecycleDetailResponse404"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-hub-sbx.devcdt.com.br/tokenization/v3",
            "description": "Staging environment"
          },
          {
            "url": "https://cts.conductor.com.br/tokenization/v3",
            "description": "Production environment"
          }
        ]
      }
    },
    "/pans/{pan-reference-id}/tokens": {
      "get": {
        "tags": [
          "Token"
        ],
        "summary": "Token list",
        "description": "Use this endpoint to enables the issuer to retrieve a list of all tokens for a pan-reference-id",
        "operationId": "TokenList",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "Audit User Id (e.g. AI145530)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "AI145530"
            }
          },
          {
            "name": "userName",
            "in": "query",
            "description": "Audit User Name (e.g. John Smith)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "John Smith"
            }
          },
          {
            "name": "organization",
            "in": "query",
            "description": "Audit Organization (e.g. Solid Bank Inc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Solid Bank Inc"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "description": "Audit Phone (e.g. 5555551234)",
            "schema": {
              "type": "string",
              "example": "5555551234"
            }
          },
          {
            "name": "pan-reference-id",
            "in": "path",
            "description": "Unique ID for the PAN (e.g. C-3021014476122497969633)<br />",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 48
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenLifecycleListResponse200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenLifecycleListResponse400"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenLifecycleListResponse404"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-hub-sbx.devcdt.com.br/tokenization/v3",
            "description": "Staging environment"
          },
          {
            "url": "https://cts.conductor.com.br/tokenization/v3",
            "description": "Production environment"
          }
        ]
      }
    }
  },
  "tags": [
    {
      "name": "pro"
    }
  ],
  "components": {
    "schemas": {
      "CardGetResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "panReferenceID": {
            "type": "string",
            "description": "Unique ID for the PAN",
            "maxLength": 48,
            "example": "V-3021014476122497969633"
          },
          "cardID": {
            "type": "string",
            "description": "Card unique ID ",
            "example": 123
          }
        }
      },
      "VisaPushProvisioningCardRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "billingAddress": {
            "$ref": "#/components/schemas/VisaPushProvisioningBillingAddress"
          },
          "provider": {
            "$ref": "#/components/schemas/VisaPushProvisioningPaymentIntrumentProvider"
          }
        },
        "required": [
          "provider"
        ]
      },
      "VisaPushProvisioningBillingAddress": {
        "type": "object",
        "description": "Billing address",
        "additionalProperties": false,
        "properties": {
          "line1": {
            "type": "string",
            "nullable": true,
            "description": "Street 1 on billing address for the payment instrument<br />",
            "maxLength": 140,
            "default": "teste",
            "example": "Av Center Blvd"
          },
          "line2": {
            "type": "string",
            "nullable": true,
            "description": "Street 2 on billing address for the payment instrument<br />",
            "maxLength": 140,
            "default": "",
            "example": "801Metro Center Blvd"
          },
          "city": {
            "type": "string",
            "nullable": true,
            "description": "The city associated with the enrolled payment instrument<br />",
            "maxLength": 100,
            "default": "",
            "example": "Foster City"
          },
          "state": {
            "type": "string",
            "nullable": true,
            "description": "State or province code<br />",
            "maxLength": 3,
            "default": "",
            "example": "CA"
          },
          "country": {
            "type": "string",
            "nullable": true,
            "description": "Country code<br />",
            "maxLength": 2,
            "default": "",
            "example": "US"
          },
          "postalCode": {
            "type": "string",
            "nullable": true,
            "description": "The postal code associated with the enrolled payment instrument<br />",
            "default": "",
            "example": "94404"
          }
        }
      },
      "VisaPushProvisioningPaymentIntrumentProvider": {
        "type": "object",
        "description": "Payment intrument provider",
        "additionalProperties": false,
        "properties": {
          "intent": {
            "$ref": "#/components/schemas/VisaPushProvisioningIntent"
          },
          "clientWalletProvider": {
            "type": "string",
            "nullable": true,
            "description": "Client wallet provider is the token requestor’s ID(TRID)<br />",
            "maxLength": 50,
            "default": "",
            "example": "40000000047"
          },
          "clientWalletAccountID": {
            "type": "string",
            "nullable": true,
            "description": "Client-provided consumer ID that identifies the Wallet account holder entity<br />",
            "maxLength": 24,
            "default": "",
            "example": "j2-xLSOGutGskD6LRxNuvdC4"
          },
          "clientDeviceID": {
            "type": "string",
            "nullable": true,
            "description": "Stable device identification set by Wallet Provider<br />",
            "maxLength": 24,
            "default": "",
            "example": "ed6abb56323ba656521ac476"
          },
          "clientAppID": {
            "type": "string",
            "nullable": true,
            "description": "Unique identifier for the client application, used to provide some of the encrypted values<br />",
            "maxLength": 36,
            "default": "",
            "example": "MyApp"
          },
          "isIDnV": {
            "type": "string",
            "nullable": true,
            "description": "String field to specify if the Issuer wants ID&V to be performed<br />",
            "maxLength": 48,
            "default": "",
            "example": "false"
          }
        }
      },
      "VisaPushProvisioningIntent": {
        "type": "integer",
        "enum": [
          "PUSH_PROV_MOBILE",
          "PUSH_PROV_ONFILE"
        ],
        "format": "int32"
      },
      "VisaPushProvisioningResponse": {
        "type": "object",
        "description": "Push provisioning response",
        "additionalProperties": false,
        "properties": {
          "Payload": {
            "type": "string",
            "nullable": true,
            "description": "Payload",
            "example": "eyJhbGciOiJBMjU2R0NNS1ciLCJpdiI6IkkzeNFIn0.37IzQCaJiH1zNlmxM5lV5c_dSQgtZS_huYfJQrUBnqw.QhCJjN2cgM5AfcnX.XzZF9dVQ5hBqLwaeyvOOiBoqbERAn56QqyQr30mKxZIL8JiQ.GS4i3u3vCAjkLuHIoBpZPQ"
          }
        }
      },
      "VisaActivationDataResquest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "nonce": {
            "type": "string",
            "description": "Required for issuer mobile banking app initiated provisioning requests to Apple",
            "example": "82B35C6F"
          }
        }
      },
      "VisaActivationDataResponse": {
        "type": "object",
        "description": "Activation data response",
        "additionalProperties": false,
        "properties": {
          "ActivationData": {
            "type": "string",
            "description": "Activation data",
            "example": "TUJQQUMtMS1GSy0xMjM0NTYuMS0tVERFQS04QkYyOTFDOTFGM0VENEVGOTJDMUQ0NUVGRjEyN0MxRjlBQkMxMjM0OEQ="
          }
        }
      },
      "VisaProvisioningAuthenticationDataResponse": {
        "type": "object",
        "description": "Provisioning authentication data response",
        "additionalProperties": false,
        "properties": {
          "ProvisioningAuthenticationData": {
            "type": "string",
            "description": "Provisioning authentication data",
            "example": "TUJQQUQtMS1GSy00MDEyMDAuMS0tVERFQS1GQUYwMjcyQkQ5ODdFNzQwNjg0NTJFQ0RBNzBDQjYxMjRDOUZCQUM5RjdGNUFEMTkyNTAxODZBQkJBRDU4NDI1ODI5M0QwOEExMEJDMkRDRUY0ODE4MUVDRTQxNzMyN0I3OEJEMkQ3RUQ5QkM4MzkwRjZCQTExODE4N0Y4N0JFMw=="
          }
        }
      },
      "PushProvisioningResponse": {
        "type": "object",
        "title": "PushProvisioningResponse",
        "properties": {
          "payload": {
            "type": "string",
            "description": "Payload",
            "example": "eyJhbGciOiJBMjU2R0NNS1 ciLCJpdiI6IkkzeNFIn0.37IzQCaJiH1z NlmxM5lV5c_dSQgtZS_huYfJQrUBnqw. QhCJjN2cgM5AfcnX. XzZF9dVQ5hBqLwaeyvOOiB oqbERAn56QqyQr30mKxZIL8JiQ.GS4i3u3 vCAjkLuHIoBpZPQ"
          }
        }
      },
      "TokenLifecycleActivateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "comment": {
            "type": "string",
            "description": "Comment related to activation<br />",
            "minLength": 4,
            "maxLength": 500,
            "example": "Confirmed cardholder ID"
          },
          "reasonCode": {
            "$ref": "#/components/schemas/ReasonCode"
          },
          "audit": {
            "$ref": "#/components/schemas/AuditDTO"
          },
          "deviceIndex": {
            "type": "integer",
            "nullable": true,
            "description": "The index number from Visa where the deviceID is stored<br />\ntype: integer between 1 and 99, inclusive<br />\n**Note: required only Visa for Device Binding operations**",
            "format": "int32",
            "maximum": 2,
            "example": 1
          },
          "deviceID": {
            "type": "string",
            "nullable": true,
            "description": "For Secure Element (SE) wallet providers,<br />\nthis value is the SE ID in hex binary characters<br />\ntransformed to a 48-character string<br />\nFor Host Card Emulation(HCE) wallet providers,<br /> \nthis field is the device ID as determined by the<br /> \ndigital wallet provider(DWP). All alphanumeric and<br /> \nspecial characters are allowed for HCE DWPs<br />\n**Note: required only Visa for device binding operations**",
            "maxLength": 48,
            "example": "044F4303913980016145016037938029E017669471437BD6"
          }
        },
        "required": [
          "comment",
          "audit"
        ]
      },
      "ReasonCode": {
        "type": "string",
        "enum": [
          "A",
          "C"
        ],
        "description": "The reason for the action<br />\nValid values:<br />\n\"A\" - Cardholder successfully authenticated with an activation method (activation code by text message, email, issuer mobile application etc.) prior to activation<br />\n\"C\" - Cardholder successfully authenticated with a customer service agent prior to activation<br />\n**Note: required only Mastercard operations**",
        "format": "int32",
        "example": "A",
        "x-examples": {}
      },
      "AuditDTO": {
        "type": "object",
        "description": "Audit information",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "string",
            "description": "User ID of the customer service representative who triggered the API request<br />",
            "minLength": 4,
            "maxLength": 50,
            "example": "AI145530"
          },
          "userName": {
            "type": "string",
            "description": "User name of the customer service representative who triggered the API request<br />",
            "minLength": 4,
            "maxLength": 50,
            "example": "John Smith"
          },
          "organization": {
            "type": "string",
            "description": "Name of the issuer to which the customer service representative who triggered the API request belongs<br />",
            "minLength": 4,
            "maxLength": 200,
            "example": "Solid Bank Inc"
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "description": "Phone number of the customer service representative who triggered the API request<br />",
            "minLength": 4,
            "maxLength": 20,
            "example": "5555551234"
          }
        },
        "required": [
          "userId",
          "userName",
          "organization"
        ]
      },
      "TokenLifecycleActivateResponse200": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tokenReferenceID": {
            "type": "string",
            "description": "Unique ID for the token<br />",
            "maxLength": 48,
            "example": "XBITQE302101551801573060"
          },
          "status": {
            "type": "string",
            "description": "The status of the token.<br>",
            "example": "ACTIVE"
          }
        },
        "required": [
          "tokenReferenceID",
          "status"
        ]
      },
      "TokenLifecycleActivateResponse400": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Status code by error<br />",
            "example": "XBITQE302101551801573060"
          },
          "errorSource": {
            "type": "string",
            "description": "Error source indicator.<br>",
            "example": "VISA"
          },
          "visaErrorContent": {
            "type": "object",
            "description": "**(conditional source VISA)** VISA error response, for more details review VISA documentation."
          },
          "details": {
            "type": "object",
            "description": "**(conditional source MASTER)** Master error response, for more details review Master documentation."
          },
          "message": {
            "type": "string",
            "description": "**(conditional source INTERNAL)** Error description"
          }
        },
        "required": [
          "statusCode",
          "errorSource"
        ]
      },
      "TokenLifecycleActivateResponse404": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Status code by error<br />",
            "example": "XBITQE302101551801573060"
          },
          "errorSource": {
            "type": "string",
            "description": "Error source indicator.<br>",
            "example": "INTERNAL"
          },
          "message": {
            "type": "string",
            "description": "Error description<br>"
          }
        },
        "required": [
          "statusCode",
          "errorSource",
          "message"
        ]
      },
      "TokenLifecycleSuspendResponse200": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tokenReferenceID": {
            "type": "string",
            "description": "Unique ID for the token<br />",
            "maxLength": 48,
            "example": "XBITQE302101551801573060"
          },
          "status": {
            "type": "string",
            "description": "The status of the token.<br>",
            "example": "SUSPENDED"
          }
        },
        "required": [
          "tokenReferenceID",
          "status"
        ]
      },
      "TokenLifecycleSuspendResponse400": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Status code by error<br />",
            "example": "XBITQE302101551801573060"
          },
          "errorSource": {
            "type": "string",
            "description": "Error source indicator.<br>",
            "example": "VISA"
          },
          "visaErrorContent": {
            "type": "object",
            "description": "**(conditional source VISA)** VISA error response, for more details review VISA documentation."
          },
          "details": {
            "type": "object",
            "description": "**(conditional source MASTER)** Master error response, for more details review Master documentation."
          },
          "message": {
            "type": "string",
            "description": "**(conditional source INTERNAL)** Error description"
          }
        },
        "required": [
          "statusCode",
          "errorSource"
        ]
      },
      "TokenLifecycleSuspendResponse404": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Status code by error<br />",
            "example": "XBITQE302101551801573060"
          },
          "errorSource": {
            "type": "string",
            "description": "Error source indicator.<br>",
            "example": "INTERNAL"
          },
          "message": {
            "type": "string",
            "description": "Error description<br>"
          }
        },
        "required": [
          "statusCode",
          "errorSource",
          "message"
        ]
      },
      "TokenLifecycleUnsuspendRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "comment": {
            "type": "string",
            "description": "Comment related to unsuspension<br />",
            "minLength": 4,
            "maxLength": 500,
            "example": "Cardholder reported token device found or not stolen"
          },
          "reasonCode": {
            "type": "string",
            "enum": [
              "F",
              "T",
              "Z"
            ],
            "description": "Reason for the activation<br/>\nValid values:<br/>\n\"F\" - Cardholder reported token device found or not stolen<br/>\n\"T\" - Issuer or cardholder confirmed fraudulent token transactions<br/>\n\"Z\" - Other<br/>Note: required only Mastercard operations",
            "maxLength": 1,
            "example": "F"
          },
          "audit": {
            "$ref": "#/components/schemas/AuditDTO"
          }
        },
        "required": [
          "comment",
          "reasonCode",
          "audit"
        ]
      },
      "TokenLifecycleUnsuspendResponse200": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tokenReferenceID": {
            "type": "string",
            "description": "Unique ID for the token<br />",
            "maxLength": 48,
            "example": "XBITQE302101551801573060"
          },
          "status": {
            "type": "string",
            "description": "Token status <br>",
            "example": "ACTIVE"
          }
        },
        "required": [
          "tokenReferenceID",
          "status"
        ]
      },
      "TokenLifecycleUnsuspendResponse400": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Status code by error<br />",
            "example": "XBITQE302101551801573060"
          },
          "errorSource": {
            "type": "string",
            "description": "Error source indicator.<br>",
            "example": "VISA"
          },
          "visaErrorContent": {
            "type": "object",
            "description": "**(conditional source VISA)** VISA error response, for more details review VISA documentation."
          },
          "details": {
            "type": "object",
            "description": "**(conditional source MASTER)** Master error response, for more details review Master documentation."
          },
          "message": {
            "type": "string",
            "description": "**(conditional source INTERNAL)** Error description"
          }
        },
        "required": [
          "statusCode",
          "errorSource"
        ]
      },
      "TokenLifecycleUnsuspendResponse404": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Status code by error<br />",
            "example": "XBITQE302101551801573060"
          },
          "errorSource": {
            "type": "string",
            "description": "Error source indicator.<br>",
            "example": "INTERNAL"
          },
          "message": {
            "type": "string",
            "description": "Error description<br>"
          }
        },
        "required": [
          "statusCode",
          "errorSource",
          "message"
        ]
      },
      "TokenDeleteRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "comment": {
            "type": "string",
            "description": "Comment related to activation<br />",
            "minLength": 4,
            "maxLength": 500,
            "example": "Fraudulent transactions confirmed"
          },
          "reasonCode": {
            "type": "string",
            "enum": [
              "L",
              "S",
              "F",
              "T",
              "C",
              "D",
              "Z"
            ],
            "description": "Reason for the delete<br/>\nValid values:<br/>\n\"L\" - Cardholder confirmed token device lost<br/>\n\"S\" - Cardholder confirmed token device stolen<br/>\n\"F\" - Issuer or cardholder confirmed fraudulent token transactions (Deprecated)<br/>\n\"T\" - Issuer or cardholder confirmed fraudulent token transactions<br/>\n\"C\" - Account closed<br/>\n\"D\" - Issuer consumer deleted<br>\n\"Z\" - Other<br/>\n**Note: required only Mastercard operations**",
            "minLength": 1,
            "maxLength": 1,
            "example": "L"
          },
          "audit": {
            "$ref": "#/components/schemas/AuditDTO"
          },
          "deviceIndex": {
            "type": "integer",
            "description": "The index number from Visa where the deviceID is stored<br />\ntype: integer between 1 and 99, inclusive<br />\nmaxLength: 2<br />\n**Note: required only Visa for device binding operations**<br />",
            "format": "int32",
            "maximum": 2,
            "example": 1
          },
          "deviceID": {
            "type": "string",
            "nullable": true,
            "description": "For Secure Element (SE) wallet providers,<br /> \nthis value is the SE ID in hex binary characters<br /> \ntransformed to a 48-character string<br />\nFor Host Card Emulation(HCE) wallet providers,<br /> \nthis field is the Device ID as determined by the<br /> \ndigital wallet provider(DWP). All alphanumeric and<br /> \nspecial characters are allowed for HCE DWPs<br />\n**Note: required only Visa for Device Binding operations**",
            "example": "044F4303913980016145016037938029E017669471437BD6"
          }
        },
        "required": [
          "comment",
          "audit"
        ]
      },
      "TokenLifecycleDeleteResponse400": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Status code by error<br />",
            "example": "XBITQE302101551801573060"
          },
          "errorSource": {
            "type": "string",
            "description": "Error source indicator.<br>",
            "example": "VISA"
          },
          "visaErrorContent": {
            "type": "object",
            "description": "**(conditional source VISA)** VISA error response, for more details review VISA documentation."
          },
          "details": {
            "type": "object",
            "description": "**(conditional source MASTER)** Master error response, for more details review Master documentation."
          },
          "message": {
            "type": "string",
            "description": "**(conditional source INTERNAL)** Error description"
          }
        },
        "required": [
          "statusCode",
          "errorSource"
        ]
      },
      "TokenLifecycleDeleteResponse404": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Status code by error<br />",
            "example": "XBITQE302101551801573060"
          },
          "errorSource": {
            "type": "string",
            "description": "Error source indicator.<br>",
            "example": "INTERNAL"
          },
          "message": {
            "type": "string",
            "description": "Error description<br>"
          }
        },
        "required": [
          "statusCode",
          "errorSource",
          "message"
        ]
      },
      "TokenLifecycleDetailResponse200": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "panReferenceID": {
            "type": "string",
            "nullable": true,
            "description": "Unique ID for the PAN<br />",
            "example": "C-3021014476122497969633"
          },
          "tokenReferenceID": {
            "type": "string",
            "nullable": true
          },
          "tokenRequestorID": {
            "type": "string",
            "nullable": true,
            "description": "Unique ID to the initiator of the token request<br />",
            "example": "40010030273"
          },
          "clientWalletAccountID": {
            "type": "string",
            "nullable": true,
            "description": "Consumer ID identifying the wallet account-holder entity<br />",
            "example": "26C6C6B982057CD2EF55816CBDF4735E"
          },
          "token": {
            "type": "string",
            "nullable": true,
            "description": "The token associated with the PAN<br />",
            "example": "4081080110000078"
          },
          "tokenType": {
            "$ref": "#/components/schemas/TokenType"
          },
          "tokenStatus": {
            "$ref": "#/components/schemas/TokenStatus"
          },
          "tokenExpirationDate": {
            "type": "string",
            "nullable": true,
            "description": "The date upon which the token is set to expire.<br />",
            "format": "date-time",
            "example": "2023-12-31T00:00:00.0000000"
          },
          "device": {
            "$ref": "#/components/schemas/Device"
          },
          "deviceBindingInfoList": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/VisaDeviceBindingInfo"
            }
          },
          "provisioningStatusDescription": {
            "type": "string",
            "description": "Description of the provisioning status.<br>",
            "maxLength": 256,
            "example": "Provisioning successful"
          }
        }
      },
      "TokenType": {
        "type": "string",
        "enum": [
          "CARD_ON_FILE",
          "SECURE_ELEMENT",
          "CLOUD",
          "ECOMMERCE",
          "STATIC",
          "HCE",
          "QRC",
          "UNKNOWN"
        ],
        "description": "Token type field<br />"
      },
      "TokenStatus": {
        "type": "string",
        "enum": [
          "ACTIVE",
          "INACTIVE",
          "SUSPENDED",
          "DEACTIVATED"
        ],
        "description": "The status of the token.",
        "x-examples": {
          "example-1": "ACTIVE"
        }
      },
      "Device": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "deviceId": {
            "type": "string",
            "nullable": true,
            "description": "For Secure Element (SE) wallet providers,<br />\r\nthis value is the SE ID in hex binary characters <br />\r\ntransformed to a 48-character string<br />\r\nFor Host Card Emulation(HCE) wallet providers,<br /> \r\nthis field is the Device ID as determined by the<br /> \r\ndigital wallet provider(DWP). All alphanumeric and<br /> \r\nspecial characters are allowed for HCE DWPs<br />",
            "example": "044F4303913980016145016037938029E017669471437BD6"
          },
          "deviceName": {
            "type": "string",
            "nullable": true,
            "description": "A readable name for the device. Ideally, the customer enters this name.It can be used to identify the device in customer support calls<br />",
            "example": "aVBob25l"
          },
          "deviceType": {
            "$ref": "#/components/schemas/deviceType"
          },
          "osName": {
            "$ref": "#/components/schemas/OsType"
          },
          "osVersion": {
            "type": "string",
            "nullable": true,
            "description": "Version of the operating system running on the device<br />",
            "example": "13"
          },
          "deviceIndex": {
            "type": "integer",
            "description": "The index number from Visa where the deviceID is stored<br />",
            "format": "int32",
            "example": 1
          }
        }
      },
      "deviceType": {
        "type": "string",
        "nullable": true,
        "enum": [
          "UNKNOWN",
          "MOBILE_PHONE",
          "TABLET",
          "WATCH",
          "MOBILEPHONE_OR_TABLET",
          "PC",
          "HOUSEHOLD_DEVICE",
          "WEARABLE_DEVICE",
          "AUTOMOBILE_DEVICE",
          "PHONE",
          "KEY_FOB",
          "TABLET_OR_EREADER",
          "WATCH_OR_WRISTBAND",
          "CARD",
          "STICKER",
          "DEVICE_PERIPHERAL",
          "TAG",
          "JEWELRY",
          "FASHION_ACCESSORY",
          "GARMENT",
          "DOMESTIC_APPLIANCE",
          "VEHICLE",
          "MEDIA_OR_GAMING_DEVICE",
          "UNDEFINED",
          null
        ],
        "title": "DeviceType",
        "description": "Device type<br>\nValid Type [Visa]:<br>\n- UNKNOWN<br>\n- MOBILE_PHONE<br>\n- TABLET<br>\n- WATCH<br>\n- MOBILEPHONE_OR_TABLET<br>\n- PC<br>\n- HOUSEHOLD_DEVICE<br>\n- WEARABLE_DEVICE<br>\n- AUTOMOBILE_DEVICE<br>\nValid Type [Mastercard]:<br>\n- PHONE<br>\n- TABLET<br>\n- KEY_FOB<br>\n- TABLET_OR_EREADER<br>\n- WATCH<br>\n- WATCH_OR_WRISTBAND<br>\n- CARD<br>\n- STICKER<br>\n- PC<br>\n- DEVICE_PERIPHERAL<br>\n- TAG<br>\n- JEWELRY<br>\n- FASHION_ACCESSORY<br>\n- GARMENT <br>\n- DOMESTIC_APPLIANCE<br>\n- VEHICLE<br>\n- MEDIA_OR_GAMING_DEVICE<br>\n- UNDEFINED<br>",
        "example": "PHONE",
        "x-examples": {
          "Example 1": "string"
        }
      },
      "OsType": {
        "type": "string",
        "enum": [
          "UNKNOWN",
          "OTHER",
          "ANDROID",
          "ANDROID_WEAR",
          "IOS",
          "WINDOWS",
          "BLACKBERRY",
          "TIZEN",
          "EMBEDDED_OS",
          "PAGARE_EMBEDDED_OS"
        ],
        "description": "Type of operating system",
        "example": "ANDROID"
      },
      "VisaDeviceBindingInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "deviceIndex": {
            "type": "integer",
            "description": "Device index",
            "format": "int32",
            "example": 0
          },
          "deviceId": {
            "type": "string",
            "nullable": true,
            "description": "Device unique ID",
            "example": "044F4303913980016145016037938029E017669471437BD6"
          },
          "deviceName": {
            "type": "string",
            "nullable": true,
            "description": "Device name",
            "example": "aVBob25l"
          },
          "deviceStatus": {
            "type": "string",
            "nullable": true,
            "description": "Device status",
            "example": "APPROVED"
          }
        }
      },
      "TokenLifecycleDetailResponse404": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Status code by error<br />",
            "example": "XBITQE302101551801573060"
          },
          "errorSource": {
            "type": "string",
            "description": "Error source indicator.<br>",
            "example": "INTERNAL"
          },
          "message": {
            "type": "string",
            "description": "Error description<br>"
          }
        },
        "required": [
          "statusCode",
          "errorSource",
          "message"
        ]
      },
      "TokenLifecycleListResponse200": {
        "type": "object",
        "description": "Token list response",
        "additionalProperties": false,
        "properties": {
          "panReferenceID": {
            "type": "string",
            "nullable": true,
            "description": "Unique ID for the token<br />",
            "maxLength": 48,
            "example": "XBITQE302101551801573060"
          },
          "tokenReferenceID": {
            "type": "string",
            "nullable": true,
            "description": "Unique ID for the token<br />",
            "maxLength": 48,
            "example": "DNITHE302101551801573060"
          },
          "tokenRequestorID": {
            "type": "string",
            "nullable": true,
            "description": "Unique ID to the initiator of the token request<br />",
            "maxLength": 11,
            "example": "40010030273"
          },
          "correlationID": {
            "type": "string",
            "nullable": true,
            "description": "Provisioning unique identifier<br />",
            "maxLength": 15,
            "example": "D0000055141261"
          },
          "clientWalletAccountID": {
            "type": "string",
            "nullable": true,
            "description": "Consumer ID identifying the wallet account-holder entity<br />",
            "maxLength": 32,
            "example": "26C6C6B982057CD2EF55816CBDF4735E"
          },
          "tokenType": {
            "$ref": "#/components/schemas/TokenType"
          },
          "tokenStatus": {
            "$ref": "#/components/schemas/TokenStatus"
          },
          "provisioningStatusDescription": {
            "type": "string",
            "enum": [
              "Awaiting cardholder acceptance of Terms and Conditions",
              "Token being prepared",
              "Token being delivered to Wallet Provider or device",
              "Awaiting Activation",
              "Provisioning successful",
              "Provisioning failed"
            ],
            "description": "Description of the provisioning status."
          }
        }
      },
      "TokenLifecycleListResponse400": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Status code by error<br />",
            "example": "XBITQE302101551801573060"
          },
          "errorSource": {
            "type": "string",
            "description": "Error source indicator.<br>",
            "example": "VISA"
          },
          "visaErrorContent": {
            "type": "object",
            "description": "**(conditional source VISA)** VISA error response, for more details review VISA documentation."
          },
          "details": {
            "type": "object",
            "description": "**(conditional source MASTER)** Master error response, for more details review Master documentation."
          },
          "message": {
            "type": "string",
            "description": "**(conditional source INTERNAL)** Error description"
          }
        },
        "required": [
          "statusCode",
          "errorSource"
        ]
      },
      "TokenLifecycleListResponse404": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Status code by error<br />",
            "example": "XBITQE302101551801573060"
          },
          "errorSource": {
            "type": "string",
            "description": "Error source indicator.<br>",
            "example": "INTERNAL"
          },
          "message": {
            "type": "string",
            "description": "Error description<br>"
          }
        },
        "required": [
          "statusCode",
          "errorSource",
          "message"
        ]
      }
    }
  },
  "x-internal": false,
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true,
    "samples-enabled": true
  }
}