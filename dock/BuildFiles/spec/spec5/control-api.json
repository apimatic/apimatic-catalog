{
    "swagger": "2.0",
    "x-stoplight": {
        "id": "ihd92pp4odkro"
    },
    "info": {
        "description": "API documentation for Control Service",
        "title": "Control API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "87489168-ad9f-44f9-bffd-b55c89753c00.mock.pstmn.io",
    "basePath": "/",
    "paths": {
        "/channel": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "List all channels types",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Channel"
                ],
                "summary": "List channels",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page of the current result set",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Amount of data that should be returned",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Attribute to order the list (e.g. 'name', 'id DESC')",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/channel.ChannelResponsePage"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/channel/assign-to-card/{card_id}": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "List all channels assign to card",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Channel"
                ],
                "summary": "List all channels by card ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "card id",
                        "name": "card_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/channel.ChannelsAssignToCardResponse"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/channel/{id}": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Find channel type by Id",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Channel"
                ],
                "summary": "Find channel type by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/channel.ChannelTypeResponse"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Update a channel type",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Channel"
                ],
                "summary": "Update a channel type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object for persisting the Channel;",
                        "name": "content",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/channel.ChannelTypePersist"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/channel.ChannelTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/channel/{id}/assign-to-card": {
            "post": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Assign Channels to Card",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Channel"
                ],
                "summary": "Assign channels to card",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object for persisting the Channel to Card;",
                        "name": "content",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/channel.AssignChannelToCardPersist"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/channel.AssignChannelToCardResponse"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/channel/{id}/assign-to-card/{card_id}": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Assign Channels to Card",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Channel"
                ],
                "summary": "Assign channels to card",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "card id",
                        "name": "card_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/channel.AssignChannelToCardResponse"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Update Channels assign to Card",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Channel"
                ],
                "summary": "Assign channels to card",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "card id",
                        "name": "card_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object for persisting the Channel to Card;",
                        "name": "content",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/channel.ChannelDetailPersist"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/channel.AssignChannelToCardResponse"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Delete Channels Assign to Card",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Channel"
                ],
                "summary": "Delete channels assign to card",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "card id",
                        "name": "card_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/countries": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "List all countries",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Countries"
                ],
                "summary": "List countries",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page of the current result set",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Amount of data that should be returned",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Attribute to order the list (e.g. 'name', 'id DESC')",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/country.ResponsePage"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/free-charges": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Displays all free charges registered on the API, based on filters and pagination.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "FreeCharge"
                ],
                "summary": "List free charges",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page of the current result set",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Amount of data that should be returned",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Attribute to order the list (e.g. 'eventType', 'eventType DESC', 'status ASC', 'id DESC, status')",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Entity ID",
                        "name": "entityId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Entity Type",
                        "name": "entityType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Transaction Type ID",
                        "name": "transactionTypeId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/freecharges.ResponsePage"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Save a new free charge",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "FreeCharge"
                ],
                "summary": "Save a new free charge",
                "parameters": [
                    {
                        "description": "Object for persisting the FreeCharge",
                        "name": "content",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/freecharges.FreeChargeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/freecharges.FreeChargeResponse"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/free-charges/{id}": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Find free charge by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "FreeCharge"
                ],
                "summary": "Find free charge by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FreeCharge ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/freecharges.FreeChargeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/free-charges/{id}/": {
            "put": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "Update a free charge",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "FreeCharge"
                ],
                "summary": "Update a free charge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FreeCharge ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object for persisting the FreeCharge",
                        "name": "content",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/freecharges.FreeChargeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/freecharges.FreeChargeResponse"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/spend-controls": {
            "get": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "This method allows find a spend control",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Spend Controls"
                ],
                "summary": "Find a spend control",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page of the current result set",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Amount of data that should be returned",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Attribute to order the list (e.g. 'cardId ASC', 'type DESC')",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Card Identifier",
                        "name": "cardId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "MCC or MCG",
                        "name": "operationType",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "value",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/spendcontrol.SpendControlResponsePage"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "This method allow make a new spend control",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Spend Controls"
                ],
                "summary": "Create a spend control",
                "parameters": [
                    {
                        "description": "Object for persisting the SpendControl",
                        "name": "content",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spendcontrol.Persist"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/spendcontrol.SpendControlResponse"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/spend-controls/{id}": {
            "put": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "This method allows increase or decrease the counter of spend control",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Spend Controls"
                ],
                "summary": "Increase or decrease the counter of spend control",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier for the spend control",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object for updating a spend control",
                        "name": "content",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spendcontrol.SpendControlPut"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "204": {
                        "description": "Not found"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "This method allows delete a spend control",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Spend Controls"
                ],
                "summary": "Delete a spend control",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier for the account",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "204": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "issuerIdAuthentication": []
                    }
                ],
                "description": "This method allows update a spend control",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Spend Controls"
                ],
                "summary": "Update a spend control",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The identifier for the spend control",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object for updating a spend control",
                        "name": "content",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spendcontrol.SpendControlUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "204": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "accumulated.Accumulated": {
            "type": "object",
            "properties": {
                "amount_per_day": {
                    "type": "integer"
                },
                "amount_per_month": {
                    "type": "integer"
                },
                "amount_per_week": {
                    "type": "integer"
                },
                "cardID": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lasted_update_day": {
                    "type": "string"
                },
                "lasted_update_month": {
                    "type": "string"
                },
                "lasted_update_week": {
                    "type": "string"
                },
                "transactionTypeId": {
                    "type": "integer"
                },
                "value_per_day": {
                    "type": "number"
                },
                "value_per_month": {
                    "type": "number"
                },
                "value_per_week": {
                    "type": "number"
                }
            }
        },
        "accumulated.Persist": {
            "type": "object",
            "properties": {
                "cardID": {
                    "type": "string"
                },
                "increase": {
                    "type": "boolean"
                },
                "transactionTypeId": {
                    "type": "integer"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "accumulated.Response": {
            "type": "object",
            "properties": {
                "amountDay": {
                    "type": "number"
                },
                "amountMonth": {
                    "type": "number"
                },
                "amountWeek": {
                    "type": "number"
                },
                "dayCount": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "lastedUpdateDay": {
                    "type": "string"
                },
                "lastedUpdateMonth": {
                    "type": "string"
                },
                "lastedUpdateWeek": {
                    "type": "string"
                },
                "monthCount": {
                    "type": "integer"
                },
                "weekCount": {
                    "type": "integer"
                }
            }
        },
        "accumulator.AccumulatedPersist": {
            "type": "object",
            "properties": {
                "cardID": {
                    "type": "string"
                },
                "increase": {
                    "type": "boolean"
                },
                "transactionTypeId": {
                    "type": "integer"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "accumulator.AccumulatedResponse": {
            "type": "object",
            "properties": {
                "amountDay": {
                    "type": "number"
                },
                "amountMonth": {
                    "type": "number"
                },
                "amountWeek": {
                    "type": "number"
                },
                "dayCount": {
                    "type": "integer"
                },
                "lastedUpdateDay": {
                    "type": "string"
                },
                "lastedUpdateMonth": {
                    "type": "string"
                },
                "lastedUpdateWeek": {
                    "type": "string"
                },
                "monthCount": {
                    "type": "integer"
                },
                "weekCount": {
                    "type": "integer"
                }
            }
        },
        "accumulator.AccumulatorDto": {
            "type": "object",
            "properties": {
                "productId": {
                    "type": "string"
                },
                "transactionTypeId": {
                    "type": "string"
                }
            }
        },
        "accumulator.AccumulatorLimits": {
            "type": "object",
            "required": [
                "productId",
                "transactionTypeId"
            ],
            "properties": {
                "maxAmountDay": {
                    "type": "integer"
                },
                "maxAmountMonth": {
                    "type": "integer"
                },
                "maxAmountWeek": {
                    "type": "integer"
                },
                "maxValueDay": {
                    "type": "number"
                },
                "maxValueMonth": {
                    "type": "number"
                },
                "maxValueWeek": {
                    "type": "number"
                },
                "productId": {
                    "type": "string"
                },
                "transactionTypeId": {
                    "type": "integer"
                }
            }
        },
        "accumulator.AccumulatorPersist": {
            "type": "object",
            "properties": {
                "accumulator_limits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/accumulator.AccumulatorLimits"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "accumulator.AccumulatorResponse": {
            "type": "object",
            "properties": {
                "accumulator_limits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/accumulator.AccumulatorLimits"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "accumulator.Limits": {
            "type": "object",
            "properties": {
                "accumulatorId": {
                    "type": "string"
                },
                "amountPerDay": {
                    "type": "integer"
                },
                "amountPerMonth": {
                    "type": "integer"
                },
                "amountPerWeek": {
                    "type": "integer"
                },
                "productId": {
                    "type": "string"
                },
                "transactionTypeId": {
                    "type": "integer"
                },
                "valuePerDay": {
                    "type": "number"
                },
                "valuePerMonth": {
                    "type": "number"
                },
                "valuePerWeek": {
                    "type": "number"
                }
            }
        },
        "accumulator.OdinAccumulatorLimits": {
            "type": "object",
            "required": [
                "productId",
                "transactionTypeId"
            ],
            "properties": {
                "maxAmountDay": {
                    "type": "number"
                },
                "maxAmountMonth": {
                    "type": "number"
                },
                "maxAmountWeek": {
                    "type": "number"
                },
                "maxValueDay": {
                    "type": "integer"
                },
                "maxValueMonth": {
                    "type": "integer"
                },
                "maxValueWeek": {
                    "type": "integer"
                },
                "productId": {
                    "type": "string"
                },
                "transactionTypeId": {
                    "type": "integer"
                }
            }
        },
        "accumulator.OdinLimitationResponse": {
            "type": "object",
            "properties": {
                "accumulated": {
                    "type": "object",
                    "$ref": "#/definitions/accumulator.AccumulatedResponse"
                },
                "cardID": {
                    "type": "string"
                },
                "event_limits": {
                    "type": "object",
                    "$ref": "#/definitions/accumulator.OdinAccumulatorLimits"
                }
            }
        },
        "channel.AssignChannelToCardPersist": {
            "type": "object",
            "required": [
                "card_id"
            ],
            "properties": {
                "allow": {
                    "type": "boolean"
                },
                "card_id": {
                    "type": "string"
                },
                "limit": {
                    "type": "number"
                }
            }
        },
        "channel.AssignChannelToCardResponse": {
            "type": "object",
            "properties": {
                "allow": {
                    "type": "boolean"
                },
                "card_id": {
                    "type": "string"
                },
                "channel": {
                    "type": "string"
                },
                "channel_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "limit": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "channel.ChannelDetailPersist": {
            "type": "object",
            "properties": {
                "allow": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "number"
                }
            }
        },
        "channel.ChannelResponsePage": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "nextPage": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "prevPage": {
                    "type": "integer"
                },
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/channel.ChannelTypeResponse"
                    }
                },
                "totalPages": {
                    "type": "integer"
                },
                "totalRecords": {
                    "type": "integer"
                }
            }
        },
        "channel.ChannelTypePersist": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "channel.ChannelTypeResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "channel.ChannelsAssignResponse": {
            "type": "object",
            "properties": {
                "allow": {
                    "type": "boolean"
                },
                "channel": {
                    "type": "string"
                },
                "channel_id": {
                    "type": "string"
                },
                "limit": {
                    "type": "number"
                }
            }
        },
        "channel.ChannelsAssignToCardResponse": {
            "type": "object",
            "properties": {
                "card_id": {
                    "type": "string"
                },
                "channelAssign": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/channel.ChannelsAssignResponse"
                    }
                }
            }
        },
        "country.Response": {
            "type": "object",
            "properties": {
                "continent": {
                    "type": "string"
                },
                "continent_id": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "country_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "country.ResponsePage": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "nextPage": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "prevPage": {
                    "type": "integer"
                },
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/country.Response"
                    }
                },
                "totalPages": {
                    "type": "integer"
                },
                "totalRecords": {
                    "type": "integer"
                }
            }
        },
        "freecharges.FreeChargeAccumulatedResponse": {
            "type": "object",
            "properties": {
                "AmountDay": {
                    "type": "integer"
                },
                "AmountMonth": {
                    "type": "integer"
                },
                "AmountWeek": {
                    "type": "integer"
                },
                "freeChargeId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastedUpdateDay": {
                    "type": "string"
                },
                "lastedUpdateMonth": {
                    "type": "string"
                },
                "lastedUpdateWeek": {
                    "type": "string"
                }
            }
        },
        "freecharges.FreeChargeRequest": {
            "type": "object",
            "properties": {
                "amountPerDay": {
                    "type": "integer"
                },
                "amountPerMonth": {
                    "type": "integer"
                },
                "amountPerWeek": {
                    "type": "integer"
                },
                "entityId": {
                    "type": "string"
                },
                "entityType": {
                    "type": "string"
                },
                "transactionTypeId": {
                    "type": "integer"
                }
            }
        },
        "freecharges.FreeChargeResponse": {
            "type": "object",
            "properties": {
                "accumulated": {
                    "type": "object",
                    "$ref": "#/definitions/freecharges.FreeChargeAccumulatedResponse"
                },
                "amountPerDay": {
                    "type": "integer"
                },
                "amountPerMonth": {
                    "type": "integer"
                },
                "amountPerWeek": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "entityId": {
                    "type": "string"
                },
                "entityType": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "transactionTypeId": {
                    "type": "integer"
                }
            }
        },
        "freecharges.FreeChargeUsageIncreaseRequest": {
            "type": "object",
            "required": [
                "accountId",
                "productId",
                "transactionTypeId"
            ],
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "productId": {
                    "type": "string"
                },
                "transactionTypeId": {
                    "type": "integer"
                }
            }
        },
        "freecharges.ResponsePage": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "nextPage": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "prevPage": {
                    "type": "integer"
                },
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/freecharges.FreeChargeResponse"
                    }
                },
                "totalPages": {
                    "type": "integer"
                },
                "totalRecords": {
                    "type": "integer"
                }
            }
        },
        "manager.ManagerHealth": {
            "type": "object",
            "properties": {
                "db": {
                    "type": "object",
                    "$ref": "#/definitions/manager.ManagerHealthDB"
                },
                "diskSpace": {
                    "type": "object",
                    "$ref": "#/definitions/manager.ManagerHealthDiskSpace"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "manager.ManagerHealthDB": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "manager.ManagerHealthDiskSpace": {
            "type": "object",
            "properties": {
                "free": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "threshold": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "manager.ManagerInfoResponse": {
            "type": "object",
            "properties": {
                "app": {
                    "type": "object",
                    "$ref": "#/definitions/manager.ManagerInfoResponseApp"
                },
                "git": {
                    "type": "object",
                    "$ref": "#/definitions/manager.ManagerInfoResponseGitCommit"
                }
            }
        },
        "manager.ManagerInfoResponseApp": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "profile": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "manager.ManagerInfoResponseGitCommit": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "spendcontrol.Persist": {
            "type": "object",
            "required": [
                "type",
                "value"
            ],
            "properties": {
                "cardId": {
                    "type": "string"
                },
                "maxAmountDay": {
                    "type": "integer"
                },
                "maxAmountMonth": {
                    "type": "integer"
                },
                "maxAmountWeek": {
                    "type": "integer"
                },
                "maxValueDay": {
                    "type": "number"
                },
                "maxValueMonth": {
                    "type": "number"
                },
                "maxValueWeek": {
                    "type": "number"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "MCC",
                        "MCG"
                    ]
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "spendcontrol.SpendControlAccumulatedResponse": {
            "type": "object",
            "properties": {
                "AmountDay": {
                    "type": "integer"
                },
                "AmountMonth": {
                    "type": "integer"
                },
                "AmountWeek": {
                    "type": "integer"
                },
                "ValueDay": {
                    "type": "number"
                },
                "ValueMonth": {
                    "type": "number"
                },
                "ValueWeek": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "lastedUpdateDay": {
                    "type": "string"
                },
                "lastedUpdateMonth": {
                    "type": "string"
                },
                "lastedUpdateWeek": {
                    "type": "string"
                },
                "spendControlId": {
                    "type": "string"
                }
            }
        },
        "spendcontrol.SpendControlPut": {
            "type": "object",
            "required": [
                "increaseDecrease",
                "value"
            ],
            "properties": {
                "increaseDecrease": {
                    "type": "string",
                    "enum": [
                        "I",
                        "D"
                    ]
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "spendcontrol.SpendControlResponse": {
            "type": "object",
            "properties": {
                "accumulated": {
                    "type": "object",
                    "$ref": "#/definitions/spendcontrol.SpendControlAccumulatedResponse"
                },
                "cardId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "maxAmountDay": {
                    "type": "integer"
                },
                "maxAmountMonth": {
                    "type": "integer"
                },
                "maxAmountWeek": {
                    "type": "integer"
                },
                "maxValueDay": {
                    "type": "number"
                },
                "maxValueMonth": {
                    "type": "number"
                },
                "maxValueWeek": {
                    "type": "number"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "spendcontrol.SpendControlResponsePage": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "nextPage": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "prevPage": {
                    "type": "integer"
                },
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spendcontrol.SpendControlResponse"
                    }
                },
                "totalPages": {
                    "type": "integer"
                },
                "totalRecords": {
                    "type": "integer"
                }
            }
        },
        "spendcontrol.SpendControlUpdate": {
            "type": "object",
            "properties": {
                "maxAmountDay": {
                    "type": "integer"
                },
                "maxAmountMonth": {
                    "type": "integer"
                },
                "maxAmountWeek": {
                    "type": "integer"
                },
                "maxValueDay": {
                    "type": "number"
                },
                "maxValueMonth": {
                    "type": "number"
                },
                "maxValueWeek": {
                    "type": "number"
                }
            }
        },
        "tenants.TenantPersist": {
            "type": "object",
            "properties": {
                "dialect": {
                    "type": "string"
                },
                "issuer_id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "tenants.TenantResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "dialect": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "issuer_id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "travel.Persist": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "cardId": {
                    "type": "string"
                },
                "continent": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string",
                    "format": "YYYY-MM-DDT00:00:00Z",
                    "example": "2020-03-02T00:00:00Z"
                },
                "startDate": {
                    "type": "string",
                    "format": "YYYY-MM-DDT00:00:00Z",
                    "example": "2020-03-01T00:00:00Z"
                }
            }
        },
        "travel.Response": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "cardId": {
                    "type": "string"
                },
                "continent": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            }
        },
        "travel.ResponsePage": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "nextPage": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "prevPage": {
                    "type": "integer"
                },
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/travel.Response"
                    }
                },
                "totalPages": {
                    "type": "integer"
                },
                "totalRecords": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "issuerIdAuthentication": {
            "type": "apiKey",
            "name": "issuer_id",
            "in": "header"
        }
    }
}