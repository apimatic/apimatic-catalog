openapi: 3.0.0
x-stoplight:
  id: ua10ftmjgvj3e
info:
  title: Paysafe Payments API
  description: |-
    ## INTRODUCTION

    >**IMPORTANT:**  Because the Paysafe Payments API uses its [own unique API keys for request authentication](#get-your-secret-api-key) and provides its own [Test and Production accounts](#testing), you should never click the **SIGN UP** or **LOGIN** buttons at the top right of the Developer Center navigation, as these are used strictly for the other APIs on the Developer Center. Please contact your business relationship manager or reach out to <a href="mailto:integrations@paysafe.com">Paysafe Integrations</a> for API keys and Test/Production accounts.

    ## Overview

    You can easily and securely process payments from your customers using one single API – The **Payments API**.

    The Paysafe Payments API helps you to process payments of your customers using a variety of payment methods and a single API Endpoint.

    Paysafe also enables you to access your transaction analytics and manage accounts with our all-in-one [Business Portal](https://merchant.paysafe.com/portal).

    ## Payment Methods

    Payment Methods represent your customer's payment instruments. They are used to collect payments or store instrument details for future payments. The Payments API currently supports the following payment methods and you can obtain detailed testing information on each payment method by clicking on respective link:

    - [Card](https://developer.paysafe.com/en/api-docs/payments-api/add-payment-methods/cards/about-card-payments/)
      
    - [ApplePay](https://developer.paysafe.com/en/api-docs/payments-api/add-payment-methods/apple-pay/about-apple-pay/)
      
    - [Skrill](https://developer.paysafe.com/en/api-docs/payments-api/add-payment-methods/skrill/)

    - [Neteller](https://developer.paysafe.com/en/api-docs/payments-api/add-payment-methods/neteller/)

    - [Paysafecash](https://developer.paysafe.com/en/api-docs/payments-api/add-payment-methods/paysafecash/)

    - [Paysafecard](https://developer.paysafe.com/en/api-docs/payments-api/add-payment-methods/paysafecard/)

    - [PayPal](https://developer.paysafe.com/en/api-docs/payments-api/add-payment-methods/paypal/)

    - [Pay By Bank](https://prlocal-paysafe-developer-22.eu.paysafecorp.com/en/api-docs/payments-api/add-payment-methods/pay-by-bank/about-pay-by-bank/)

    - [Venmo](https://developer.paysafe.com/en/api-docs/payments-api/add-payment-methods/venmo/about-venmo/)

    - [VIP Preferred](https://developer.paysafe.com/en/api-docs/payments-api/add-payment-methods/vip-preferred/)

    - [Mazooma](https://developer.paysafe.com/en/api-docs/payments-api/add-payment-methods/mazooma/)

    - [MB WAY via Skrill Quick Checkout](https://prlocal-paysafe-developer-22.eu.paysafecorp.com/en/api-docs/payments-api/add-payment-methods/multibanco-via-skrill-quick-checkout/)
    
    - [Multibanco via Skrill Quick Checkout](https://prlocal-paysafe-developer-22.eu.paysafecorp.com/en/api-docs/payments-api/add-payment-methods/multibanco-via-skrill-quick-checkout/)

    - [Play+ (Sightline)](https://developer.paysafe.com/en/api-docs/payments-api/add-payment-methods/play-sightline/)

    - [Interac e-Transfer](https://developer.paysafe.com/en/api-docs/payments-api/add-payment-methods/interac-e-transfer/about-interac-e-transfer/)

    - [Rapid Transfer](https://developer.paysafe.com/en/api-docs/payments-api/add-payment-methods/rapid-transfer-via-skrill-quickcheckout/about-rapid-transfer/)

    - [Skrill 1-Tap](https://developer.paysafe.com/en/api-docs/payments-api/add-payment-methods/skrill-1-tap/)

    - [ACH](https://developer.paysafe.com/en/api-docs/payments-api/add-payment-methods/ach/)

    - [EFT](https://developer.paysafe.com/en/api-docs/payments-api/add-payment-methods/eft/)

    - [BACS](https://developer.paysafe.com/en/api-docs/payments-api/add-payment-methods/bacs/)

    - [SEPA](https://developer.paysafe.com/en/api-docs/payments-api/add-payment-methods/sepa/)

    - [Online Bank Transfer via Safetypay Express]()

    - [PIX via Safetypay Express]()

    - [Khipu via Safetypay Express]()

    - [MACH via Safetypay Express]()

    - [Boleto Bancario via Safetypay Express]()

    - [Safetypay Cash via Safetypay Express]()

     > **Note:** For payment methods using cards, we support 3DS 2.0

    ## Transaction Types Supported

    Payments API supports the following transaction types:

    * [Verify That the Service Is Accessible](operations/verify-that-the-service-is-accessible)

    * [Payment Methods](operations/look-up-payment-methods)

    * [Payment Handles](operations/create-payment-handle)

    * [Verifications](operations/verification)

    * [Payments](operations/process-payment)

    * [Void Authorizations](operations/void-authorization)

    * [Settlements](operations/process-settlement)

    * [Refunds](operations/process-refund)

    * [Standalone Credits](operations/process-standalone-credit)

    * [Original Credits](operations/process-original-credit)

    * [Customers](operations/create-customer)

    * [Customer Addresses](operations/create-address)

    * [Customer Payment Handles](operations/create-payment-handle-for-customer)

    * [Customer Single-Use Tokens](operations/create-single-use-customer-token)

    * [Mandate](operations/create-mandate)

    * [Sightline Registration](operations/create-a-sightline-registration-call)

    * [Vippreferred Registration](operations/create-a-vippreferred-registration-call)

    * [Paysafecash Store Locator](operations/store-locator)
    
    * [Get Balance](operations/get-balance)

    # Before you begin

    ## Get your Secret API Key

    The Payments API uses a distinct API key:<br/>

    * The Secret Key – used for all server-to-server API requests.

    You can retrieve your Secret key for your account via the [Business Portal](https://merchant.paysafe.com/portal/login).


    #### Secret API Key

    You use the Secret API key in all your server-to-server Payments API requests.

    > **Note:** You must Base64 Encode your Secret API key before using it in your API requests.

    To retrieve your Secret API key from the Business Portal:

    1. Go to **Integrate>API Keys**.

    2. Under **Secret Key**, click **Authenticate Now**.
     ![](/fileadmin/openapi-spec/payments-api/images/Secret_key1.PNG)

    3. Enter your Business Portal password and click **Authenticate**.

    4. You can now access your Secret API key. 
     ![](/fileadmin/openapi-spec/payments-api/images/Secret_Key2.PNG)
     
     > **Note:** All your payment methods will use the same API key.

    Your API key will have the following format:

    * Key Username – MerchantXYZKey

    * Password – B-tst1-0-51ed39e4-312d02345d3f123120881dff9bb4020a89e8ac44cdfdcecd702151182fdc952272661d290ab2e5849e31bb03deede7e

    The API key is case-sensitive and sent using HTTP Basic Authentication.
    To use HTTP Basic Authentication, you must send the API key credentials using the Authorization header with every request.

    You must construct the Authorization header as follows:
    1. Combine the Key Username and Key Password into a string separated by a colon, for example, “Key Username:Key Password”.
    2. The resulting string literal is then encoded using Base64.
    3. The authorization method and space (That is, “Basic”) are then put before the encoded string.

    For example, using the above Key Username and Password, the header is formed as follows:

    ```Authorization: Basic TWVyY2hhbnRYWVo6Qi10c3QxLTAtNTFlZDM5ZTQtMzEyZDAyMzQ1ZDNmMTIzMTIwODgxZGZmOWJiNDAyMGE4OWU4YWM0NGNkZmRjZWNkNzAyMTUxMTgyZmRjOTU yMjcyNjYxZDI5MGFiMmU1ODQ5ZTMxYmIwM2RlZWRlN2U=```

    For additional details, please refer [Authentication](https://developer.paysafe.com/en/support/reference-information/authentication/).

    ## Testing

    Test accounts enable you to process API transactions that mirror the functionality of the Production environment.

    Payment transactions processed in the Test environment are executed on a simulator. Depending on the information provided with the transaction request, the simulator returns either a successful (approved) or failed (declined) response.

    With the Payments API, you can:

    * Verify support for all the operation types that you require.

    * Review all common errors as well as unique errors that may occur for each operation.

    * Verify the length and format for all attributes you send.

    For access to Test accounts and credentials, contact your account manager or reach out to <a href="mailto:integrations@paysafe.com">Paysafe Integrations</a>. 
    Your Test account has access to the Test version of the Paysafe [Business Portal](https://merchant.test.paysafe.com/portal#/login), where you can view the status of your Test transactions.

    ###  Test URL

    To test your integration with Paysafe, use the following Test URL:

    `https://api.test.paysafe.com/paymenthub/v1/`

    For example:

    `https://api.test.paysafe.com/paymenthub/v1/payments/{payment_id}`

    ## Going Live

    Once you are satisfied with your integration to the Test environment, you must repeat the configuration changes made to your Test account on your Production account.

    > **Note:** You cannot use your Test credentials to process transaction requests in the Production environment.

    ### Go Live Checklist

    1. You must have a production account and access to Business Portal.

    2. You must have a Secret API Key for the production environment.

    3. You must have Webhooks configured for all the events.

    4. You must use the Production URL for your API calls.

    ### Production URL

    To process live requests with Paysafe, use the following Production URL:

    `https://api.paysafe.com/paymenthub/v1/`

    For example:

    `https://api.paysafe.com/paymenthub/v1/payments/{payment_id}`

    # API

    The Payments API processes payment-related requests across a wide variety of payment methods.
    The API is constructed around REST and has following features:

    * Definite resource-oriented URLs

    * Receives form-encoded request bodies

    * Returns JSON-encoded responses

    * Communicates using standard HTTP response codes, authentication, and verbs.

    * **Message body**: This must contain valid Paysafe JSON objects as required for the type of request. Not all API calls require a message-body; for example, GET requests do not require a body.

    * **Resource ID**: Identifies the unique ID of a resource.
     ![](/fileadmin/openapi-spec/payments-api/images/authentication_example_payments.PNG)

    * **Payment Simulator**: While testing your integration, you can choose whether you want to simulate the actual end customer experience or you want to use a page, which lets you simulate all payment handle statuses. You must use "**Simulator**" in the HTTP header of your request, which has the following possible values:
       * **"INTERNAL" (default)** – which redirects you to the **status** simulator page.
       * **"EXTERNAL"** – which redirects/connects you to the downstream payment method website (For Example: Skrill authentication page)

    ## API Endpoints

    ### Resource Patterns

    |Endpoint URL                                                         |Description                                                |Action |
    |---                                                                  |---                                                        |---    |
    |/monitor                                                             |Verify That the Service Is Accessible                      |GET    |
    |/paymentmethods                                                      |Look Up Payment Methods                                    |GET    |
    |/paymenthandles                                                      |Create a Payment Handle                                    |POST   |
    |/paymenthandles/{paymenthandle_id}                                   |Look Up a Payment Handle by Id                             |GET    |
    |/paymenthandles                                                      |Look Up a Payment Handles Using Merchant Reference Number. |GET    |
    |/singleusepaymenthandles                                             |Create a Single-Use Payment Handle                         |POST   |
    |/verifications                                                       |Verify a Card                                              |POST   |
    |/verifications                                                       |Look Up a Verifications Using Merchant Reference Number.   |GET    |
    |/verifications/{verification_id}                                     |Look Up a Verification                                     |GET    |
    |/payments                                                            |Submit a Payment Request                                   |POST   |
    |/payments                                                            |Look Up a Payments Using Merchant Reference Number.        |GET    |
    |/payments/{payment_id}                                               |Look Up a Payment                                          |GET    |
    |/payments/{payment_id}                                               |Cancel Payments                                            |PUT    |
    |/payments/{payment_id}/voidauths                                     |Void (Reverse) an Authorization                            |POST   |
    |/voidauths/{void_auth_id}                                            |Look Up a Void Authorization                               |GET    |
    |/voidauths                                                           |Look Up a Void Authorizations Using Merchant Reference Number.|GET    |
    |/payments/{payment_id}/settlements                                   |Settle an Authorization                                    |POST   |
    |/settlements/{settlement_id}                                         |Cancel a Settlement                                        |PUT    |
    |/settlements/{settlement_id}                                         |Look Up a Settlement                                       |GET    |
    |/settlements                                                         |Look Up a settlements Using Merchant Reference Number.     |GET    |
    |/payments/{settlement_id}/refunds                                    |Submit a Refund Request                                    |POST   |
    |/refunds/{refund_id}                                                 |Cancel a Refund                                            |PUT    |
    |/refunds/{refund_id}                                                 |Look Up a Refund                                           |GET    |
    |/refunds                                                             |Look Up a Refunds Using Merchant Reference Number.         |GET    |
    |/standalonecredits                                                   |Submit a Standalone Credit Request                         |POST   |
    |/standalonecredits                                                   |Look Up a Standalone Credit Using Merchant Reference Number.|GET    |
    |/standalonecredits/{standalone_credit_id}                            |Cancel a Standalone Credit                                 |PUT    |
    |/standalonecredits/{standalone_credit_id}                            |Look Up a Standalone Credit                                |GET    |
    |/standalonecredits/{standalone_credit_id}                            |Patch Standalone Credit Using Interac e-Transfer Fraud API |PATCH  |
    |/originalcredits                                                     |Submit an Original Credit Request                          |POST   |
    |/originalcredits                                                     |Look Up a Original Credit Using Merchant Reference Number. |GET    |
    |/originalcredits/{original_credit_id}                                |Cancel an Original Credit                                  |PUT    |
    |/originalcredits/{original_credit_id}                                |Look Up an Original Credit                                 |GET    |
    |/customers                                                           |Create a Customer                                          |POST   |
    |/customers                                                           |Look Up a Customer Using Merchant Reference Number.        |GET    |
    |/customers/{customer_id}                                             |Look Up a Customer                                         |GET    |
    |/customers/{customer_id}                                             |Look Up a Customer Including Subcomponents.                |DELETE |
    |/customers/{customer_id}                                             |Update a Customer                                          |PUT    |
    |/customers/{customer_id}                                             |Delete a Customer                                          |DELETE |
    |/customers/{customer_id}/addresses                                   |Create an Address                                          |POST   |
    |/customers/{customer_id}/addresses/{address_id}                      |Look Up an Address                                         |GET    |
    |/customers/{customer_id}/addresses/{address_id}                      |Update an Address                                          |PUT    |
    |/customers/{customer_id}/addresses/{address_id}                      |Delete an Address                                          |DELETE |
    |/customers/{customer_id}/paymenthandles                              |Create a Customer Payment Handle                           |POST   |
    |/customers/{customer_id}/paymenthandles                              |Create a Multi-Use Payment Handle Using a Single-Use Payment Handle Token.|POST   |
    |/customers/{customer_id}/paymenthandles/{paymenthandle_id}           |Look Up a Customer Payment Handle                          |GET    |
    |/customers/{customer_id}/paymenthandles/{paymenthandle_id}           |Update a Customer Payment Handle                           |PUT    |
    |/customers/{customer_id}/paymenthandles/{paymenthandle_id}           |Update a Multi-Use Customer Payment Handle with a Single-Use Payment Handle Token.|PUT    |
    |/customers/{customer_id}/paymenthandles/{paymenthandle_id}           |Delete a Customer Payment Handle                           |DELETE |
    |/customers/{customer_id}/singleusecustomertokens                     |Create a Single-Use Customer Token                         |POST   |
    |/singleusecustomertokens/{singleusecustomertoken_id}                 |Look Up a Single-Use Customer Token                        |GET    |
    |/customers/{customerId}/paymenthandles/{paymentHandleId}/mandates    |Create a Mandate for a Customer                            |POST   |
    |/mandates/{mandate_Id}                                               |Look Up Mandate Status                                     |GET    |
    |/mandates/{mandate_Id}                                               |Cancel a Mandate                                           |PUT    |
    |/sightline/registrations                                             |Create an Partial Registration Call                        |POST   |
    |/sightline/registrations/{registration_id}                           |Look Up a Registration                                     |GET    |
    |/vippreferred/registrations                                          |Create a Partial Registration Call - Redirect Flow         |POST   |
    |/vippreferred/registrations                                          |Create a Partial Registration Call - Direct Integration    |POST   |
    |/vippreferred/registrations/{registration_id}                        |Look Up a Registration                                     |GET    |
    |/registrations/{registration_Id}/achbankaccounts                     |Add an Account                                             |POST   |
    |/registrations/{registration_Id}/achbankaccounts/{achbankaccount_Id} |Look Up a Registration                                     |GET    |
    |/v1/paysafecashstores                                                |Paysafecash Store Locator                                  |GET    |  
    |/v1/balances?paymentType={paymentType}&currencyCode={currencyCode}   |Get Balance                                                |GET    |  


    # Webhooks

    A Webhook is an HTTP callback that is triggered when an event takes place. 
    To configure webhooks, you need to [open a service request](https://merchant.paysafe.com/portal/login) with Paysafe in the Business Portal.

    For more information on Webhooks, click [here](https://developer.paysafe.com/en/api-docs/payments-api/configure-webhooks/).

    > **Note:** To receive webhooks from Paysafe, you must create a callback URL to receive the webhook that is triggered. You are responsible for ensuring its continued availability.

    ## Some Notes on Webhooks

    + When the status of one of your transaction request changes, Paysafe immediately sends a callback to your webhook's endpoint URL to inform you of the status change.

    + To acknowledge the receipt of the webhook, Paysafe expects an HTTP status of 200 OK or 202 ACCEPTED from your endpoint. In case we receive any other HTTP status code, we assume that you have not received the webhook, and we attempt to resend it.

    + If Paysafe does not get an acknowledgment of receipt with an HTTP Status Code of 200 or 202, it makes a maximum of 2 additional attempts (total 3 attempts) to send a callback to that URL.

    + As Paysafe does not have a notification method to alert you when callbacks are not reaching your endpoint URL, you should make sure that there is continued availability of your endpoint.

    + All endpoint URLs should use HTTPS/SSL to ensure security. Please note that only the default **HTTPS port 443** is supported.

    + In case you have received the same notification multiple times for an already processed event, we request you to ignore the duplicate notification. It is recommended to make the notification URL endpoints idempotent.

    # Pagination

    In the case where an API GET request returns multiple results, Paysafe returns the first 10 records by default and uses HATEOAS links to provide page navigation. In addition to the default behavior, it is also possible to control the number of results and starting point by passing in query parameters  as described in this [section](https://developer.paysafe.com/en/support/reference-information/pagination/).

    # Global Invalid Characters

    You must not include any of the characters in this [table](https://developer.paysafe.com/en/support/reference-information/global-invalid-characters/) as values in any of your request parameters. Object. If you do, your request will result in an error.

    # ISO Standards

    ISO standards add value by providing the common business process data semantics to be used in the API based exchanges. This [section](https://developer.paysafe.com/en/support/reference-information/codes/) presents you codes for four areas - Currency, Province, State, and Country.

    Please refer [ISO Standards](https://developer.paysafe.com/en/support/reference-information/codes/) for Global Invalid Characters, Currency Codes, Province Codes, State Codes, Country Codes.



    # Error Summary

    ## Common Errors

    |HTTP Status Code|Error Code|Description|
    |---------|---------|---------------|
    |500|1000|An internal error occurred.|
    |502|1001|An error occurred with the external processing gateway.|
    |500|1002|An internal error occurred.|
    |500|1003|An internal error occurred.|
    |500|1007|An internal error occurred.|
    |500|1008|An internal error occurred.|
    |429|1200|The API call has been denied as it has exceeded the permissible call rate limit.|
    |401|5000|Your merchant account authentication failed. Either your store ID/password is invalid or the IP address from which you are sending the transaction has not been authorized.|
    |400|5001|The submitted currency code is invalid or your account does not support this currency.|
    |400|5003|You submitted an invalid amount with your request.|
    |400|5004|You submitted an invalid account type with your request.|
    |400|5005|You submitted an invalid operation type with your request.|
    |400|5010|The submitted country code is invalid.|
    |400|5016|The merchant account you provided cannot be found.|
    |400|5017|The merchant account you provided is disabled.|
    |402|5021|Your transaction request has been declined.|
    |400|5023|The request is not parseable.|
    |409|5031|The transaction you have submitted has already been processed.|
    |401|5040|Your merchant account is not configured for the transaction you attempted.|
    |400|5042|The merchant reference number is missing or invalid or it exceeds the maximum permissible length.|
    |400|5068|Either you submitted a request that is missing a mandatory field or the value of a field does not match the format expected.|
    |404|5269|The ID(s) specified in the URL do not correspond to the values in the system.|
    |403|5270|The credentials provided with the request do not have permission to access the requested data.|
    |406|5271|You requested a response in the 'Accept' header that is in an unsupported format.|
    |406|5272|The 'Content-Type' you specified in request header was submitted in an unsupported format.|
    |404|5273|Your client reached our application but we were unable to service your request due to an invalid URL.|
    |401|5275|The authentication credentials provided with the request have expired.|
    |401|5276|The authentication credentials provided with the request provided have been disabled.|
    |401|5277|The authentication credentials provided with the request have been locked due to multiple authentication failures.|
    |401|5278|The authentication credentials provided with the request were not accepted for an unknown reason.|
    |401|5279|The authentication credentials are invalid.|
    |401|5280|The required authentication credentials were not provided.|
    |405|5281|The request uses an action (for example, GET, POST, or PUT) that is not supported by the resource.|
    |400|5283|The requested operation can only be executed on a Payment Handle with the status of *PAYABLE*.|
    |400|5501|The profile does not have an active credit card.|
    |400|5502|Either the payment token is invalid or the corresponding profile or bank account is not active.|

    ## Payment Errors

    |HTTP Status Code|Error Code|Description|
    |---------|---------|---------------|
    |400|PAYMENTHUB-1 |The submitted payment type and currency code combination is not supported. |
    |400|3002|You submitted an invalid card number or brand or combination of card number and brand with your request.|
    |400|3004|The zip/postal code must be provided for an AVS check request.|
    |400|3005|You submitted an incorrect CVV value with your request.|
    |400|3006|You submitted an expired credit card number with your request.|
    |402|3007|Your request has failed the AVS check. Note that the amount has still been reserved on the customer's card and will be released in 3–5 business days. Please ensure the billing address is accurate before retrying the transaction.|
    |400|3008|You submitted a card type for which the merchant account is not configured.|
    |402|3009|Your request has been declined by the issuing bank.|
    |402|3011|Your request has been declined by the issuing bank because the card used is a restricted card. Contact the cardholder's credit card company for further investigation.|
    |402|3012|Your request has been declined by the issuing bank because the credit card expiry date submitted is invalid.|
    |402|3013|Your request has been declined by the issuing bank due to problems with the credit card account.|
    |402|3014|Your request has been declined - the issuing bank has returned an unknown response. Contact the card holder's credit card company for further investigation.|
    |402|3015|The bank has requested that you process the transaction manually by calling the cardholder's credit card company.|
    |402|3016|The bank has requested that you retrieve the card from the cardholder – it may be a lost or stolen card.|
    |402|3017|You submitted an invalid credit card number with your request.|
    |402|3018|The bank has requested that you retry the transaction.|
    |402|3019|Your request has failed the CVV check. Please note that the amount may still have been reserved on the customer's card, in which case it will be released in 3–5 business days.|
    |402|3020|The bank has requested that you retry the transaction.|
    |404|3021|The confirmation number included in this request could not be found.|
    |402|3022|The card has been declined due to insufficient funds.|
    |402|3023|Your request has been declined by the issuing bank due to its proprietary card activity regulations.|
    |402|3024|Your request has been declined because the issuing bank does not permit the transaction for this card.|
    |400|3025|The external processing gateway has reported invalid data.|
    |400|3026|The external processing gateway has reported the account type is invalid.|
    |402|3027|The external processing gateway has reported a limit has been exceeded.|
    |502|3028|The external processing gateway has reported a system error.|
    |402|3029|The external processing gateway has rejected the transaction.|
    |402|3030|The external processing gateway has reported the transaction is unauthorized.|
    |400|3031|The confirmation number you submitted with your request references a transaction that is not on hold.|
    |402|3032|Your request has been declined by the issuing bank or external gateway because the card is probably in one of their negative databases.|
    |402|3035|Your request has been declined due to exceeded PIN attempts.|
    |402|3036|Your request has been declined due to an invalid issuer.|
    |402|3037|Your request has been declined because it is invalid.|
    |402|3038|Your request has been declined due to customer cancellation.|
    |402|3039|Your request has been declined due to an invalid authentication value.|
    |402|3040|Your request has been declined because the request type is not permitted on the card.|
    |402|3041|Your request has been declined due to a timeout.|
    |402|3042|Your request has been declined due to a cryptographic error.|
    |402|3044|You have submitted a duplicate request.|
    |402|3045|You submitted an invalid date format for this request.|
    |402|3046|The transaction was declined because the amount was set to zero.|
    |402|3047|The transaction was declined because the amount exceeds the floor limit.|
    |402|3048|The transaction was declined because the amount is less than the floor limit.|
    |402|3049|The bank has requested that you retrieve the card from the cardholder – the credit card has expired.|
    |402|3050|The bank has requested that you retrieve the card from the cardholder – fraudulent activity is suspected.|
    |402|3051|The bank has requested that you retrieve the card from the cardholder – contact the acquirer for more information.|
    |402|3052|The bank has requested that you retrieve the card from the cardholder – the credit card is restricted.|
    |402|3053|The bank has requested that you retrieve the card from the cardholder – please call the acquirer.|
    |402|3054|The transaction was declined due to suspected fraud.|
    |402|3055|This type of transaction is not supported.|
    |402|3056|The original transaction type does not match.|
    |402|3057|Please tell cardholder to call the issuer – do not retry transaction.|
    |402|3091|Your request has been declined due to inability to verify PIN.|
    |402|3092|Your request has been declined due to no financial impact - original transaction already declined.|
    |409|5284|An entity with the specified identifier(s) already exists.|
    |400|5286|Card with the specified identifier(s) does not exist. |
    |404|5288|Card does not belong to consumer. |
    |400|5303|Payment instrument already exists.|
    |400|5304|Expired card. |
    |403|5309|The maximum amount of money allowed for the requested operation is exceeded.|

    ## AVS Errors

    | HTTP Status Code | Error Code | AVS Code | Description                                                                  |
    |------------------|------------|----------|------------------------------------------------------------------------------|
    | 402              | 3007       | A        | Address matches - ZIP Code does not match                                    |
    | 402              | 3007       | B        | Street address match, Postal code in wrong format (international user)       |
    | 402              | 3007       | C        | Street address and postal code in wrong formats                              |
    | 402              | 3007       | D        | Street address and postal code match (international issuer)                  |
    | 402              | 3007       | E        | AVS Error                                                                    |
    | 402              | 3007       | F        | Address does compare and five-digit ZIP code does compare (UK only)          |
    | 402              | 3007       | G        | Service not supported by non-US issuer                                       |
    | 402              | 3007       | H        | Address information not verified by international issuer                     |
    | 402              | 3007       | I        | Street address and postal code match (international issuer)                  |
    | 402              | 3007       | M        | No Match on Address (street) or ZIP                                          |
    | 402              | 3007       | N        | No response sent                                                             |
    | 402              | 3007       | O        | Postal codes match, street address nor verified due to incompatible formats  |
    | 402              | 3007       | P        | Retry, system unavailable or timed out                                       |
    | 402              | 3007       | R        | Service not supported by issuer                                              |
    | 402              | 3007       | S        | Address information is unavailable                                           |
    | 402              | 3007       | U        | 9-digit ZIP matches, Address (street) does not match                         |
    | 402              | 3007       | W        | Exact AVS match                                                              |
    | 402              | 3007       | X        | Address (street) and 5-digit ZIP match                                       |
    | 402              | 3007       | Y        | Address matches - ZIP Code does not match                                    |
    | 403              | 3007       | Z        | 5-digit ZIP matches, address (street) does not match                         |

    ## Void Authorization Errors

    |HTTP Status Code|Error Code|Description|
    |---------|---------|---------------|
    |400|3500|The confirmation number included in this request could not be found.|
    |402|3501|The requested void (Authorization Reversal) amount exceeds the remaining Authorization amount.|
    |402|3502|You cannot process a void (Authorization Reversal) transaction against an Authorization that has been settled.|
    |402|3503|The void (Authorization Reversal) transaction is not supported for the card type used for the Authorization you are attempting to void.|
    |402|3504|The external processing gateway for which your merchant account is configured does not support partial voids (Authorization Reversals).|
    |500|3505|The void (Authorization Reversal) could not be completed.|
    |402|3506|The void (Authorization Reversal) amount exceeds the remaining amount of the Authorization.|

    ## Settlement Errors

    |HTTP Status Code|Error Code|Description|
    |---------|---------|---------------|
    |400|3200|You have submitted an invalidly formatted Authorization ID for this Settlement.|
    |404|3201|The Authorization ID included in this Settlement request could not be found.|
    |402|3202|You have exceeded the maximum number of Settlements allowed.|
    |402|3203|The Authorization is either fully settled or cancelled.|
    |402|3204|The requested Settlement amount exceeds the remaining Authorization amount.|
    |402|3205|The Authorization you are attempting to settle has expired.|
    |402|3206|The external processing gateway has rejected the transaction.|
    |402|3207|Due to issuer policies, this type of transaction is not allowed.|

    ## Refund Errors

    |HTTP Status Code|Error Code|Description|
    |---------|---------|---------------|
    |402|3402|The requested Refund amount exceeds the remaining Settlement amount.|
    |402|3403|You have already processed the maximum number of refunds allowed for this Settlement.|
    |402|3404|The Settlement has already been fully refunded.|
    |402|3405|The Settlement you are attempting to Refund has expired.|
    |402|3406|The Settlement you are attempting to Refund has not been batched yet. There are no settled funds available to Refund.|
    |400|3407|The Settlement referred to by the transaction response ID you provided cannot be found.|
    |400|3408|You have submitted an invalidly formatted response ID for the original Purchase or Settlement.|
    |402|3412|The Refund transaction you attempted was not permitted because your merchant account is in overdraft.|
    |402|3413|The requested Refund amount exceeds the permissible Visa credit ratio.|
    |400|3414|The Refund referred to by the transaction response ID you provided cannot be found.|
    |402|3415|You cannot cancel this transaction as it is no longer in a pending state.|
    |402|3416|The external processing gateway for which your merchant account is configured does not support partial Settlements.|
    |402|3417|There is already another request being processed on the transaction referenced for this request.|
    |402|3418|The external processing gateway for which your merchant account is configured does not support partial Credits.|
    |402|3419|This type of transaction cannot be refunded.|

    ## Customer Vault Errors

    |HTTP Status Code       |Error Code |Description|
    |---                    |---        |---|
    |409                    |7503       |The card number you are trying to add to this profile is already used by this profile.|
    |409                    |7504       |This card has been used for the maximum number of profiles allowed. Please use a different card.|
    |409                    |7505       |The *merchantCustomerId* provided for this profile has already been used for another profile.|
    |409                    |7506       |The bank account you are trying to add to this profile is already in use.|
    |409                    |7507       |The mandate reference you are trying to add to this profile is already in use.|
    |400                    |7508       |You submitted an invalid card number or brand or combination of card number and brand with your request.|
    |409                    |7509       |The bank account has one or more existing mandates so associated banking information cannot be updated.|
    |400                    |7510       |You submitted invalid bank account information for your banking scheme.|
    |404                    |7511       |The address ID provided in your request could not be found.|
    |400                    |7512       |The merchant's Apple Pay configuration could not be found.|
    |400                    |7513       |The Apple Pay token is invalid.|
    |404                    |7514       |The payment token has expired.|
    |409                    |7515       |The card cannot be added to this profile because the profile has reached the maximum number of cards allowed.|
    |400                    |7516       |You need to provide at least one search parameter.|
    |400                    |7517       |You need to provide dates with the format YYYY-MM-DDTHH24:MI:SSZ.|
    |400                    |7518       |The days between the dates specified exceeds the maximum.|
    |400                    |7519       |The pagination limit exceeds the maximum.|
    |409                    |7520       |The bank account cannot be added to this profile because the profile has reached the maximum number of bank accounts allowed.|

    ## Alternate Payments Errors

    |HTTP Status   |Error Code                    |Message                                 |Details|
    |---           |---                           |---                                     |---|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-1  |Transaction cancelled at the gateway    |The transaction was cancelled at the gateway.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-4  |Transaction declined by the gateway     |The transaction declined by the gateway. |
    |402           |ALTERNATE-PAYMENTS-GATEWAY-5  |Incomplete transaction                  |The requested operation can only be executed on a completed transaction.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-6  |Over refund                             |The total refund amount cannot exceed the original payment amount.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-7  |Payment expired                         |The payment has expired.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-8  |Over settlement                         |The total Settlement amount cannot exceed the authorized (payment) amount.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-9  |Risk gateway error                      |A risk issue was reported by the gateway.|
    |502           |ALTERNATE-PAYMENTS-GATEWAY-10 |Payment type temporarily unavailable    |The gateway is temporarily unavailable due to system maintenance activities.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-11 |Over voidauth                           |The void authorization cannot exceed the amount remaining to settle for the corresponding payment.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-12 |Payment already settled                 |The payment is already partially/fully settled.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-13 |Transaction not refundable yet          |The transaction is not refundable yet.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-14 |Partial settlements not possible        |Partial Settlements are not possible with the selected payment method.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-16 |The requested amount exceeds the allowed maximum for the specified payment type. |The requested amount exceeds the allowed maximum for the specified payment type.|
    |504           |ALTERNATE-PAYMENTS-GATEWAY-17 |Your request timed out before it could be completed. |Your request timed out before it could be completed.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-19 |The payment instrument does not have sufficient funds. |The payment instrument does not have sufficient funds.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-20 |The third-party account has not been activated. |The third-party account has not been activated.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-21 |The requested amount is under the allowed minimum amount for the specified payment type. |The requested amount is under the allowed minimum amount for the specified payment type.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-22 |The provided identity details do not match the identity details already present. |The provided identity details do not match the identity details already present.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-23 |The KYC documents provided could not be verified. |The KYC documents provided could not be verified.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-24 |There is an already existing third-party account with the details provided. |There is an already existing third-party account with the details provided.|

    <a name="directdebiterrors" title="Direct Debit Errors"></a>

    ## Direct Debit Errors

    |HTTP Status Code   |Error Code     |Description|
    |---                |---            |---|
    |400                |2004           |The Direct Debit transaction cannot be found.  |
    |400                |2011           |You have submitted a mandate reference that does not exist.|
    |400                |2012           |You have submitted a mandate reference that is not active yet.|
    |400                |2013           |The mandate reference does not have a valid status.|
    |400                |2014           |The mandate reference is already in use for the specified bank account information.|
    |400                |2017           |The payment token bank scheme does not match the merchant account bank scheme.|
    |402                |4002           |The transaction was declined by our Risk Management department.|
    |400                |2019           |The specified bank and account information is currently under INVALID state.|
    |400                |2008           |You have submitted an invalid routing or transit number.|

    <a name="directdebitreturncodes" title="Direct Debit Return Codes"></a>

    ## Direct Debit Return Codes

    Occasionally, a Direct Debit API request will be successful, but can fail at the banking network level, for example, due to insufficient funds or bank account closure. In such cases, the bank scheme provides a Return Code as an explanation. Because Direct Debit requests can take up to 7 days to clear, you cannot be notified of errors such as these via the API response. 
    However, you can use the [Paysafe Merchant Back Office](https://developer.paysafe.com/en/support/reference-information/merchant-back-office/) to run reports to view Return Codes in the case where a Direct Debit request has failed.

    | Code         | Description                                                                                                                                                      | Bank Scheme |
    |--------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------|
    | RT not found |                                                                                                                                                                  | ACH         |
    | CONFIG       | Client configuration problem                                                                                                                                     | ACH         |
    | LIMIT        | The maximum amount per check was exceeded.                                                                                                                       | ACH         |
    | INVACCT      | Invalid account type.                                                                                                                                            | ACH         |
    | INVDIR       | Invalid direction.                                                                                                                                               | ACH         |
    | NOPOP        | Merchant not configured or not allowed to run POP transactions - Electronic Check Conversion.                                                                    | ACH         |
    | PAPER        | Paper draft and can't send paper.                                                                                                                                | ACH         |
    | PARSE        | Parsing problem                                                                                                                                                  | ACH         |
    | THOMSON      | Reject due to Thomson database.                                                                                                                                  | ACH         |
    | UNKMER       | Unknown merchant.                                                                                                                                                | ACH         |
    | DEMO         | Demonstration transaction/ or merchant.                                                                                                                          | ACH         |
    | R90          | Invalid MOD digit                                                                                                                                                | ACH         |
    | R91          | Invalid ABA. Not nine (9) characters or numeric                                                                                                                  | ACH         |
    | R92          | ABA not active                                                                                                                                                   | ACH         |
    | R93          | Invalid Tran Code SEC combo                                                                                                                                      | ACH         |
    | R94          | Invalid amount for pre-note Tran Code                                                                                                                            | ACH         |
    | R95          | Amount is zero (0)                                                                                                                                               | ACH         |
    | R96          | Not a valid Tran code                                                                                                                                            | ACH         |
    | R97          | Not a valid SEC code                                                                                                                                             | ACH         |
    | R98          | Account decryption error                                                                                                                                         | ACH         |
    | R99          | OFAC possible match                                                                                                                                              | ACH         |
    | R37          | Source Document Presented for Payment                                                                                                                            | ACH         |
    | R38          | Stop  Payment on Source Document                                                                                                                                 | ACH         |
    | R39          | Improper Source Document                                                                                                                                         | ACH         |
    | R53          | Item and ACH Entry Presented for Payment                                                                                                                         | ACH         |
    | R75          | Original Return not a Duplicate                                                                                                                                  | ACH         |
    | R76          | No Errors Found                                                                                                                                                  | ACH         |
    | R83          | Foreign Receiving DFI Unable to Settle                                                                                                                           | ACH         |
    | R84          | Entry Not Processed by OGO                                                                                                                                       | ACH         |
    | R01          | Insufficient funds                                                                                                                                               | ACH         |
    | R02          | Account closed                                                                                                                                                   | ACH         |
    | R03          | No account/unable to locate                                                                                                                                      | ACH         |
    | R04          | Invalid account number                                                                                                                                           | ACH         |
    | R05          | Reserved                                                                                                                                                         | ACH         |
    | R06          | Return requested by ODFI                                                                                                                                         | ACH         |
    | R07          | Authorization revoked Note 2                                                                                                                                     | ACH         |
    | R08          | Stop payment                                                                                                                                                     | ACH         |
    | R09          | Uncollected funds                                                                                                                                                | ACH         |
    | R10          | Not authorized Note 2                                                                                                                                            | ACH         |
    | R11          | Check truncation entry return                                                                                                                                    | ACH         |
    | R12          | Branch sold to another DFI                                                                                                                                       | ACH         |
    | R13          | RDFI not qualified to participate/or invalid route                                                                                                               | ACH         |
    | R14          | Payee deceased                                                                                                                                                   | ACH         |
    | R15          | Beneficiary deceased                                                                                                                                             | ACH         |
    | R16          | Account frozen                                                                                                                                                   | ACH         |
    | R17          | File record edit criteria                                                                                                                                        | ACH         |
    | R18          | Improper effective entry date                                                                                                                                    | ACH         |
    | R19          | Amount field error                                                                                                                                               | ACH         |
    | R20          | Non transaction account                                                                                                                                          | ACH         |
    | R21          | Invalid company ident.                                                                                                                                           | ACH         |
    | R22          | Invalid individual ID number                                                                                                                                     | ACH         |
    | R23          | Credit entry refused by receiver                                                                                                                                 | ACH         |
    | R24          | Duplicate entry                                                                                                                                                  | ACH         |
    | R25          | Addenda error                                                                                                                                                    | ACH         |
    | R26          | Mandatory field error                                                                                                                                            | ACH         |
    | R27          | Trace number error                                                                                                                                               | ACH         |
    | R28          | Routing # check digit error                                                                                                                                      | ACH         |
    | R29          | Corp cust. adviser not auth.                                                                                                                                     | ACH         |
    | R30          | RDFI non-part truncation prob                                                                                                                                    | ACH         |
    | R31          | Permissible return entry                                                                                                                                         | ACH         |
    | R32          | RDFI non-settlement                                                                                                                                              | ACH         |
    | R33          | Return of XCK entry                                                                                                                                              | ACH         |
    | R34          | Limited participation DFI                                                                                                                                        | ACH         |
    | R35          | Return of improper debit entry                                                                                                                                   | ACH         |
    | R36          | Return of improper credit entry                                                                                                                                  | ACH         |
    | R40          | Return of ENR entry by Fed. Gov.                                                                                                                                 | ACH         |
    | R41          | Invalid transaction code                                                                                                                                         | ACH         |
    | R42          | Routing #/check digit error                                                                                                                                      | ACH         |
    | R43          | Inv. DFI acct. number                                                                                                                                            | ACH         |
    | R44          | Inv. Individual ED number                                                                                                                                        | ACH         |
    | R45          | Inv. individual name/company name                                                                                                                                | ACH         |
    | R46          | Inv. rep. payee indicator                                                                                                                                        | ACH         |
    | R47          | Duplicate enrollment                                                                                                                                             | ACH         |
    | R50          | State Law affecting RCK acceptance                                                                                                                               | ACH         |
    | R51          | Item is ineligible (RCK)                                                                                                                                         | ACH         |
    | R52          | Stop payment on item (RCK)                                                                                                                                       | ACH         |
    | R61          | Dishonor                                                                                                                                                         | ACH         |
    | R62          | Dishonor                                                                                                                                                         | ACH         |
    | R63          | Dishonor                                                                                                                                                         | ACH         |
    | R64          | Dishonor                                                                                                                                                         | ACH         |
    | R65          | Dishonor                                                                                                                                                         | ACH         |
    | R66          | Dishonor                                                                                                                                                         | ACH         |
    | R67          | Dishonor                                                                                                                                                         | ACH         |
    | R68          | Dishonor                                                                                                                                                         | ACH         |
    | R69          | Dishonor                                                                                                                                                         | ACH         |
    | R70          | Dishonor                                                                                                                                                         | ACH         |
    | R71          | ContestedNote 4                                                                                                                                                  | ACH         |
    | R72          | ContestedNote 4                                                                                                                                                  | ACH         |
    | R73          | ContestedNote 4                                                                                                                                                  | ACH         |
    | R74          | ContestedNote 4                                                                                                                                                  | ACH         |
    | R80          | Cross- border payment coding error                                                                                                                               | ACH         |
    | R81          | Non-participant in cross-border pgm.                                                                                                                             | ACH         |
    | R82          | Invalid foreign RDFI ID                                                                                                                                          | ACH         |
    | YE           | Transaction code unauthorised for originating Account                                                                                                            | BACS        |
    | 0            | Refer to Payer                                                                                                                                                   | BACS        |
    | 1            | Instruction cancelled by payer                                                                                                                                   | BACS        |
    | 2            | Payer Deceased                                                                                                                                                   | BACS        |
    | 3            | Account Transferred                                                                                                                                              | BACS        |
    | 4            | Advance Notice Disputed                                                                                                                                          | BACS        |
    | 5            | No Account                                                                                                                                                       | BACS        |
    | 6            | No Instruction                                                                                                                                                   | BACS        |
    | 7            | Amount Differs                                                                                                                                                   | BACS        |
    | 8            | Amount not yet due                                                                                                                                               | BACS        |
    | 9            | Presentation Overdue                                                                                                                                             | BACS        |
    | A            | Service User Differs                                                                                                                                             | BACS        |
    | B            | Account Closed                                                                                                                                                   | BACS        |
    | E            | Instruction amended                                                                                                                                              | BACS        |
    | AE           | Originating sort code and/or Account number invalid (bank originated)                                                                                            | BACS        |
    | BE           | Originating sort code and/or Account number invalid (customer originated)                                                                                        | BACS        |
    | CE           | Destination sort code and originating sort code and/or Account number invalid (bank originated)                                                                  | BACS        |
    | DE           | Destination sort code and originating sort code and/or Account number invalid (customer originated)                                                              | BACS        |
    | EE           | Destination sort code invalid                                                                                                                                    | BACS        |
    | FE           | Account type and originating sort code and/or Account number invalid (bank originated)                                                                           | BACS        |
    | GE           | Account type and originating sort code and/or Account number invalid (customer originated)                                                                       | BACS        |
    | HE           | Destination sort code and Account type and originating sort code and/or Account number invalid (bank originated)                                                 | BACS        |
    | IE           | Destination sort code and Account type and originating sort code and/or Account number invalid (customer originated)                                             | BACS        |
    | JE           | Destination sort code and Account type invalid                                                                                                                   | BACS        |
    | KE           | Account type invalid                                                                                                                                             | BACS        |
    | LE           | Destination Account number and destination Account name and other fields invalid                                                                                 | BACS        |
    | ME           | Destination Account number and destination Account name invalid                                                                                                  | BACS        |
    | NE           | Contra record was amended                                                                                                                                        | BACS        |
    | OE           | Reference number was invalid                                                                                                                                     | BACS        |
    | PE           | Originating Account does not support the file currency                                                                                                           | BACS        |
    | QE           | Automated reversal due to an error                                                                                                                               | BACS        |
    | RE           | Reversal of another item (same day)                                                                                                                              | BACS        |
    | SE           | Automated recall                                                                                                                                                 | BACS        |
    | TE           | Originating Account invalid and was substituted with the default main Account details, but this Account does not support the file currency (customer originated) | BACS        |
    | UE           | Unpaid direct debit reference was in error (bank originated)                                                                                                     | BACS        |
    | XE           | Originator's service user number invalid (bank originated)                                                                                                       | BACS        |
    | ZE           | Unpaid direct debit reference and other fields were in error (bank originated)                                                                                   | BACS        |
    | 1I           | Amount and / or date of Direct Debit differ from Advance Notice                                                                                                  | BACS        |
    | 2I           | No Advance Notice received by Payer/or the amount quoted is disputed                                                                                             | BACS        |
    | 3I           | DDI cancelled by paying bank                                                                                                                                     | BACS        |
    | 4I           | Payer has cancelled DDI direct with service user                                                                                                                 | BACS        |
    | 5I           | AUDDIS service users only - No Instruction held. Payer disputes having given authority                                                                           | BACS        |
    | 6I           | AUDDIS service users only - Signature on DDI is fraudulent or not in accordance with account authorised signature(s)                                             | BACS        |
    | 7I           | Claim raised at service users request after Direct Debit applied to payers account                                                                               | BACS        |
    | 8I           | Service user name disputed. Payer does not recognise service user collecting Direct Debit                                                                        | BACS        |
    | CC           | Requested by originator                                                                                                                                          | BACS        |
    | 0C           | Invalid details                                                                                                                                                  | BACS        |
    | 2C           | Beneficiary deceased                                                                                                                                             | BACS        |
    | 3C           | Account transferred                                                                                                                                              | BACS        |
    | 5C           | No account                                                                                                                                                       | BACS        |
    | BC           | Account closed                                                                                                                                                   | BACS        |
    | C            | Account transferred to a different branch of bank / building society                                                                                             | BACS        |
    | D            | Advance notice disputed                                                                                                                                          | BACS        |
    | F            | Invalid account type                                                                                                                                             | BACS        |
    | G            | Bank will not accept Direct Debits on account                                                                                                                    | BACS        |
    | H            | Instruction has expired                                                                                                                                          | BACS        |
    | I            | Payer reference is not unique                                                                                                                                    | BACS        |
    | K            | Instruction cancelled by paying bank                                                                                                                             | BACS        |
    | L            | Incorrect payer's account details                                                                                                                                | BACS        |
    | M            | Transaction code / user status incompatible                                                                                                                      | BACS        |
    | N            | Transaction disallowed at payer's branch                                                                                                                         | BACS        |
    | O            | Invalid reference                                                                                                                                                | BACS        |
    | P            | Payer's Name not present                                                                                                                                         | BACS        |
    | Q            | Service user's name blank                                                                                                                                        | BACS        |
    | R            | Instruction re-instated (maximum 2 months from original DDI cancellation date)                                                                                   | BACS        |
    | 900          | Validation Rejection                                                                                                                                             | EFT         |
    | 901          | Not sufficient funds (debits only)                                                                                                                               | EFT         |
    | 902          | Cannot trace                                                                                                                                                     | EFT         |
    | 903          | Payment stopped/recalled                                                                                                                                         | EFT         |
    | 904          | Post dated/stale dated                                                                                                                                           | EFT         |
    | 905          | Account closed                                                                                                                                                   | EFT         |
    | 906          | Account transferred                                                                                                                                              | EFT         |
    | 907          | No chequing privileges                                                                                                                                           | EFT         |
    | 908          | Funds not cleared                                                                                                                                                | EFT         |
    | 909          | Currency/Account Mismatch                                                                                                                                        | EFT         |
    | 910          | Payor/payee deceased                                                                                                                                             | EFT         |
    | 911          | Account frozen                                                                                                                                                   | EFT         |
    | 912          | Invalid/incorrect account number                                                                                                                                 | EFT         |
    | 914          | Incorrect payor/payee name                                                                                                                                       | EFT         |
    | 915          | Refused by payor/payee                                                                                                                                           | EFT         |
    | 916          | Not in accordance with Agreement - Personal                                                                                                                      | EFT         |
    | 917          | Agreement Revoked - Personal                                                                                                                                     | EFT         |
    | 918          | No Pre-Notification - Personal                                                                                                                                   | EFT         |
    | 919          | Not in accordance with Agreement - Business                                                                                                                      | EFT         |
    | 920          | Agreement Revoked - Business                                                                                                                                     | EFT         |
    | 921          | No Pre-Notification - Business                                                                                                                                   | EFT         |
    | 922          | Customer Initiated Return Credit Only                                                                                                                            | EFT         |
    | 990          | Institution in Default                                                                                                                                           | EFT         |
    | 998          | No Return Agreement                                                                                                                                              | EFT         |
    | 4            | TRANSACTION TYPE is invalid or blank. See Appendix 3 for a list of CPA Transaction Types.                                                                        | EFT         |
    | 5            | AMOUNT is blank, or not greater than zero.                                                                                                                       | EFT         |
    | 6            | DUE DATE is invalid or blank.                                                                                                                                    | EFT         |
    | 7            | INSTITUTION (route and/or transit) is not in the correct format, does not exist or is blank.                                                                     | EFT         |
    | 8            | ACCOUNT NUMBER is not a valid format for the specified INSTITUTION.                                                                                              | EFT         |
    | 9            | ITEM TRACE NO. is invalid.                                                                                                                                       | EFT         |
    | 10           | STORED TRANSACTION TYPE is invalid or blank.                                                                                                                     | EFT         |
    | 11           | ORIGINATOR SHORT NAME is blank.                                                                                                                                  | EFT         |
    | 12           | PAYOR/PAYEE NAME is blank.                                                                                                                                       | EFT         |
    | 13           | ORIGINATOR LONG NAME is blank.                                                                                                                                   | EFT         |
    | 14           | Originating Direct Clearer ID is invalid or blank.                                                                                                               | EFT         |
    | 15           | CROSS REFERENCE is blank.                                                                                                                                        | EFT         |
    | 16           | INSTITUTION FOR RETURNS (route and/or transit) is invalid or blank. It should specify your credit union.                                                         | EFT         |
    | 19           | Original item trace number is invalid or blank.                                                                                                                  | EFT         |
    | 21           | DATA ELEMENT ID is invalid or blank.                                                                                                                             | EFT         |
    | E            | Accepted but errors were noted                                                                                                                                   | EFT         |
    | M            | Rejected, message authentication code (MAC) failed                                                                                                               | EFT         |
    | P            | Partially accepted, at least one transaction set was rejected                                                                                                    | EFT         |
    | R            | Rejected                                                                                                                                                         | EFT         |
    | W            | Rejected, assurance failed validity tests                                                                                                                        | EFT         |
    | X            | Rejected, content after decryption could not be analyzed                                                                                                         | EFT         |
    | TR           | Rejected by 824                                                                                                                                                  | EFT         |
    | AC01         | Account identifier incorrect                                                                                                                                     | SEPA        |
    | UPAY         | Undue payment                                                                                                                                                    | SEPA        |
    | AC06         | Account blocked                                                                                                                                                  | SEPA        |
    | AC13         | Invalid debtor account type                                                                                                                                      | SEPA        |
    | AG01         | Direct debit forbidden                                                                                                                                           | SEPA        |
    | AG02         | Invalid bank operation code                                                                                                                                      | SEPA        |
    | AGNT         | Incorrect agent                                                                                                                                                  | SEPA        |
    | AM04         | Insufficient funds                                                                                                                                               | SEPA        |
    | AM05         | Duplication                                                                                                                                                      | SEPA        |
    | BE04         | Missing creditor address                                                                                                                                         | SEPA        |
    | BE05         | Unrecognized creditor                                                                                                                                            | SEPA        |
    | CURR         | Incorrect currency                                                                                                                                               | SEPA        |
    | CUST         | Recall by customer                                                                                                                                               | SEPA        |
    | CUTA         | Recall due to investigation request                                                                                                                              | SEPA        |
    | DT01         | Invalid date                                                                                                                                                     | SEPA        |
    | DUPL         | Duplicate payment                                                                                                                                                | SEPA        |
    | ED05         | Settlement failed                                                                                                                                                | SEPA        |
    | FF01         | Invalid file format                                                                                                                                              | SEPA        |
    | FF05         | Direct debit type incorrect                                                                                                                                      | SEPA        |
    | FRAD         | Fraud                                                                                                                                                            | SEPA        |
    | MD01         | No valid mandate                                                                                                                                                 | SEPA        |
    | MD02         | Mandate data missing or incorrect                                                                                                                                | SEPA        |
    | MD06         | Disputed authorized transaction                                                                                                                                  | SEPA        |
    | MD07         | Debtor deceased                                                                                                                                                  | SEPA        |
    | MS02         | Refusal by debtor                                                                                                                                                | SEPA        |
    | MS03         | Reason not specified                                                                                                                                             | SEPA        |
    | PY01         | Not routable                                                                                                                                                     | SEPA        |
    | RC01         | Bank identifier incorrect                                                                                                                                        | SEPA        |
    | RR01         | Missing debtor account or identification                                                                                                                         | SEPA        |
    | RR02         | Missing debtor name or address                                                                                                                                   | SEPA        |
    | RR03         | Missing creditor name or address                                                                                                                                 | SEPA        |
    | RR04         | Regulatory reason                                                                                                                                                | SEPA        |
    | SL01         | Specific service offered by debtor agent                                                                                                                         | SEPA        |
    | TECH         | Payment in error due to technical problem                                                                                                                        | SEPA        |
    | TM01         | Invalid cut off time                                                                                                                                             | SEPA        |
    | AC04         | Account closed                                                                                                                                                   | SEPA        |
    | TR           | Rejected by 824


    ## Interchecks Error Codes (Existing) 

    |Interchecks Error Code         |Interchecks Error Message                          |Paysafe HTTP Status Code |paysafe Error Code |Paysafe Error Message              |Paysafe Error Details                                                                |
    |-------------------------------|---------------------------------------------------|-------------------------|-------------------|-----------------------------------|-------------------------------------------------------------------------------------|
    |ERR_CARD_INELIGIBLE            |Card ineligible                                    |500                      |1001               |External gateway error             |An external gateway error occurred.                                                  |
    |ERR_CREDIT_CARD_NOT_SUPPORTED  |Credit cards not supported                         |500                      |1001               |External gateway error             |An external gateway error occurred.                                                  |
    |ERR_INVALID_EMAIL              |Invalid email                                      |400                      |5068               |Field error(s)                     |Missing a mandatory field or the value of a field does not match the format expected.|
    |ERR_EMAIL_IN_USE               |The recipient email is assigned to another profile |500                      |1001               |An external gateway error occurred.|
    |ERR_INTERNAL_SERVER_ERROR      |Internal server error                              |500                      |1001               |External gateway error             |An external gateway error occurred.                                                  |
    |ERR_INVALID_CARD_DETAILS       |Invalid card details                               |400                      |5068               |Field error(s)                     |Missing a mandatory field or the value of a field does not match the format expected.|
    |ERR_INVALID_PAYER_ID           |Card ineligible                                    |400                      |5068               |Field error(s)                     |Missing a mandatory field or the value of a field does not match the format expected.|
    |ERR_INVALID_RECIPIENT_EMAIL    |Invalid recipient email                            |400                      |5068               |Field error(s)                     |Missing a mandatory field or the value of a field does not match the format expected.|
    |ERR_INVALID_RECIPIENT_ID       |Invalid recipient ID                               |400                      |5068               |Field error(s)                     |Missing a mandatory field or the value of a field does not match the format expected.|
    |ERR_MISSING_RECIPIENT          |Missing recipient ID or email                      |400                      |5068               |Field error(s)                     |Missing a mandatory field or the value of a field does not match the format expected.|

    ## Interchecks API Error Codes (New)
    To receive new error codes, Operations team needs to enable a flag in smart-router.

    |Interchecks Error Code         |Interchecks Error Message                          |Paysafe HTTP Status Code |Paysafe Error Code |Paysafe Error Message              |
    |-------------------------------|---------------------------------------------------|-------------------------|-------------------|-----------------------------------|
    |403 FORBIDDEN            |403 FORBIDDEN                                    |403                      |5270               |The credentials provided with the request do not have permission to access the requested data
    |	ERR_ACCOUNT_PROVIDER_MISMATCH | Account invalid for provider	|	400	|	5004	|	You submitted an invalid account type with your request
    |	ERR_ACCOUNT_PROVIDER_NOT_ENABLED	|	Payer not enabled for Account Provider	|	400	|	5017	|	The merchant account you provided is disabled.
    |	ERR_CARD_INELIGIBLE	|	Card ineligible	|	402	|	3017	|	Issuing bank has declined the transaction as the credit card number is ineligible
    |	ERR_CREDIT_CARD_NOT_SUPPORTED	|	Credit cards not supported	|	402	|	5021	|	Your transaction request has been declined.
    |	ERR_EMAIL_IN_USE	|	Recipient email is assigned to another profile	|	502	|	1001 |	External Gateway Error
    |	ERR_INTERNAL_SERVER_ERROR	|	Internal server error	|	502	|	1001	|	External Gateway Error 
    |	ERR_INVALID_ACCOUNT_ID	|	Invalid account ID	|	400	|	5004	|You submitted an invalid account ID with your request.
    |	ERR_INVALID_CARD_DETAILS	|	Invalid card details	|	402	|	3017	|	Issuing bank has declined the transaction as the credit card number is incorrectly entered, or does not exist
    |	ERR_INVALID_EMAIL	|	Invalid email	|	400	|	3025	|	The external processing gateway has reported invalid data
    |	ERR_INVALID_PAYER_ID	|	Invalid payer ID	|	400	|	3025	|	The external processing gateway has reported invalid data.
    |	ERR_INVALID_RECIPIENT_EMAIL	|	Invalid recipient email	|	400	|	3025	|	The external processing gateway has reported invalid data
    |	ERR_INVALID_RECIPIENT_ID	|	Invalid recipient ID	|	400	|	3025	|	The external processing gateway has reported invalid data.
    |	ERR_INVALID_RECIPIENT_ID	|	Invalid recipient ID	|	400	|	3025	|	The external processing gateway has reported invalid data.
    |	ERR_MISSING_RECIPIENT	|	Missing recipient ID or email	|	400	|	3025	|	The external processing gateway has reported invalid data
    |	NOT_AUTHORIZED	|	401 UNAUTHORIZED	|	401	|	5000	|	Your merchant account authentication failed. Either your store ID/password is invalid or the IP address from which you are sending the transaction has not been authorized.
    |	ERR_RETRIEVING_CARD_DETAILS	|	Error determining card eligibility	|	502	|	1001	|	External Gateway Error
    |	ERR_INVALID_DATE_FORMAT	|	Invalid Date	|	400	|	3025	|	The external processing gateway has reported invalid data
    |	ERR_INVALID_EXP_DATE	|	Invalid Exp Date	|	400	|	3025	|	The external processing gateway has reported invalid data
    |	ERR_INVALID_CURRENCY_CODE	|	Invalid Currency Code	|	400	|	3025	|	The external processing gateway has reported invalid data.
    |	ERR_INVALID_NAME	|	Invalid or missing name fields	|	400	|	3025	|	The external processing gateway has reported invalid data
    |	ERR_TRANSACTION_FAILURE	|	message pertaining to failure	|	502	|	1001	|	External Gateway Error
    |	ERR_RECIPIENT_NOT_FOUND	|	Recipient email not found	|	404	|	5269	|	The ID(s) specified in the URL do not correspond to the values in the system
    |	ERR_INVALID_PARAMETER	|	Missing or invalid request parameters	|	400	|	3025	|	The external processing gateway has reported invalid data
    |	ERR_INVALID_TRANSACTION_ID	|	Invalid transaction ID	|	400	|	3025	|	The external processing gateway has reported invalid data
    |	ERR_INSUFFICIENT_FUNDS	|	Insufficient funds	|	402	|	5021	|	Your transaction request has been declined. 
    |	ERR_VELOCITY_LIMIT	|	Transaction failed due to velocity controls	|	402	|	3027	|	The external processing gateway has reported a limit has been exceeded.
    |	ERR_ACCOUNT_SHARING_LIMIT_EXCEEDED	|	Account sharing limit exceeded	|	402	|	3027	|	The external processing gateway has reported a limit has been exceeded.
    |	ERR_ACCOUNT_LIMIT_EXCEEDED	|	Activity limit exceeded	|	402	|	3027	|	The external processing gateway has reported a limit has been exceeded.
    |	ERR_BANK_ACCOUNT_VALIDATION	|	Error validating Bank Account	|	502	|	1001	|	External Gateway Error
    |	ERR_ACCOUNT_ALREADY_REGISTERED	|	Account already registered	|	502	|	1001	|	External Gateway Error
    |	ERR_ACCOUNT_NOT_ADDED	|	We were unable to add your account at this time	|	502	|	1001	|	External Gateway Error
    |	ERR_CLIENT_ACCESS_PAYER	|	lient does not have access to payer	|	403	|	5270	|	The credentials provided with the request do not have permission to access the requested data.
    |	ERR_INELIGIBLE_RECIPIENT_ACCOUNT	|	Ineligible account for transaction method	|	502	|	1001	|	External Gateway Error
    |	ERR_INVALID_PAYOUT_METHOD_FOR_ACCOUNT	|	Invalid transaction method for account	|	400	|	3025	|	The external processing gateway has reported invalid data.
    |	ERR_INVALID_RECIPIENT_REFERENCE_ID	|	Recipient reference ID not found	|	400	|	3025	|	The external processing gateway has reported invalid data.
    |	ERR_OFAC_LIST_MATCH	|	Cancelled due to OFAC list match	|	402	|	5021	|	Your transaction request has been declined.
    |	ERR_TOKENIZING_CARD	|	Error validating card details	|	502	|	1001	|	External Gateway Error
    |	ERR_TRANSACTION_METHOD_NOT_AVAILABLE	|	Transaction method not available	|	502	|	1001	|	External Gateway Error
    |	ERR_TRANSACTION_METHOD_NOT_UNIQUE	|	Multiple configurations found for transaction method	|	502	|	1001	|	External Gateway Error
    |	ERR_UNSUPPORTED_CURRENCY_CODE	|	Unsupported Currency Code	|	400	|	5001	|	The submitted currency code is invalid or your account does not support this currency.
    |	ERR_VERIFICATION_NOT_ENABLED	|	Payer not enabled for TIN Verification	|	402	|	5021	|	Your transaction request has been declined.
    |	ERR_ACCOUNT_BALANCE_THRESHOLD	|	Account balance insufficient	|	402	|	5021	|	Your transaction request has been declined.
    |	ERR_ACCOUNT_BALANCE_UNAVAILABLE	|	Account balance unavailable	|	402	|	5021	|	Your transaction request has been declined.
    |	ERR_ACCOUNT_RISK_METRICS_UNAVAILABLE	|	Account risk detail unavailable	|	502	|	1001	|	External Gateway Error
    |	ERR_ACCOUNT_RISK_LEVEL_NOT_CONFIGURED	|	Account risk level not configured	|	502	|	1001	|	External Gateway Error
    |	ERR_ACCOUNT_RISK_THRESHOLD	|	Account risk threshold exceeded	|	402	|	3027	|	The external processing gateway has reported a limit has been exceeded.
    |	ERR_INVALID_ADDRESS_PARAMETERS	|	Invalid address details	|	400	|	3025	|	The external processing gateway has reported invalid data.
    |	ERR_INVALID_COUNTRY	|	Invalid Country	|	400	|	3025	|	The external processing gateway has reported invalid data.

    ## Interchecks Issuer Error Codes (New)

    |	Interchecks Error Code   	 	 |	Interchecks Error Message	|	Paysafe HTTP Status Code	|	Paysafe Error Code	|	Paysafe Error Message	|	Additional Information	|
    |------------------------|-------------|------------|--------|-------------|-------------|  
    |	ERR_OCT_DECLINE |	1:Refer to card issuer	|	402	|	3015	|	The bank has requested that you process the transaction manually by calling the cardholder's credit card company.	|	Issuer has signaled a problem with the card number	|
    |	ERR_OCT_DECLINE	|	2:Refer to card issuer, special condition	|	402	|	3015	|	The bank has requested that you process the transaction manually by calling the cardholder's credit card company.	|	Issuer has signaled a problem with the card number	|
    |	ERR_OCT_DECLINE	|	3:Invalid merchant	|	500	|	1003	|	An internal error occurred.	|	Problem with the merchant configuration	|
    |	ERR_OCT_DECLINE	|	4:Pick up card (no fraud)	|	402	|	3016	|	The bank has requested that you retrieve the card from the cardholder – it may be a lost or stolen card.	|	 Customer’s bank has prevented the authorization of the transaction	|
    |	ERR_OCT_DECLINE	|	5:Do not honor	|	402	|	3009	|	Your request has been declined by the issuing bank.	|	Request is denied by issuing bank	|
    |	ERR_OCT_DECLINE	|	6:Error	|	502	|	3028	|	The external processing gateway has reported a system error.	|	The card-issuing bank detected an error but can’t specify what it is	|
    |	ERR_OCT_DECLINE	|	7:Pick up card, special condition (fraud account)	|	402	|	3054	|	The transaction was declined due to suspected fraud.	|	The issuing bank prevented the transaction because it has flagged this account as fraudulent.	|
    |	ERR_OCT_DECLINE	|	10:Partial approval	|	502	|	3028	|	The external processing gateway has reported a system error.	|	Issue bank will approve only part of the requested transaction, leaving the remainder to be paid with another form of tender	|
    |	ERR_OCT_DECLINE	|	12:Invalid transaction	|	402	|	3037	|	Your request has been declined because it is invalid.	|	The transaction you’re attempting is invalid	|
    |		|		|		|		|		|	This can possibly be when a transaction for the same amount and merchant is attempted multiple times quickly for the same card	|
    |	ERR_OCT_DECLINE	|	13:Invalid amount or currency conversion field overflow	|	402	|	3703	|	Your request has been declined because of invalid format.	|	 Issuer has declined the transaction because of an invalid format or field	|
    |	ERR_OCT_DECLINE	|	14:Invalid account number (no such number)	|	402	|	3017	|	You submitted an invalid credit card number with your request.	|	Issuing bank has declined the transaction as the credit card number is incorrectly entered, or does not exist	|
    |	ERR_OCT_DECLINE	|	15:No such issuer	|	402	|	3036	|	Your request has been declined due to an invalid issuer.	|	Card number was entered incorrectly. (To be more specific, it means the first number is incorrect. Each major credit card provider has its own number that every card they issue must start with.)	|
    |	ERR_OCT_DECLINE	|	19:Re-enter transaction	|	402	|	3029	|	The external processing gateway has rejected the transaction.	|	The transaction has not been processed. No further information is provided from the bank as the reason why this was not processed.	|
    |	ERR_OCT_DECLINE	|	21:No action taken	|	402	|	3017	|	You submitted an invalid credit card number with your request.	|	Issuer has indicated there is a problem with the credit card number	|
    |	ERR_OCT_DECLINE	|	25:Unable to locate record in file	|	402	|	3017	|	You submitted an invalid credit card number with your request.	|	issuer does not recognise the credit card details. 	|
    |	ERR_OCT_DECLINE	|	28:File temporarily not available for update or inquiry	|	502	|	3028	|	The external processing gateway has reported a system error.	|	A temporary error occurred during the authorization process at Issuer	|
    |	ERR_OCT_DECLINE	|	39:No credit account	|	402	|	3017	|	You submitted an invalid credit card number with your request.	|	Bank has declined the transaction as the Card number used is not a credit account	|
    |	ERR_OCT_DECLINE	|	41:Lost card, pick up (fraud account)	|	402	|	3016	|	The bank has requested that you retrieve the card from the cardholder – it may be a lost or stolen card.	|	Issuing bank is preventing authorization of the transaction as the owner of the card has reported it as lost	|
    |	ERR_OCT_DECLINE	|	43:Stolen card, pick up (fraud account)	|	402	|	3016	|	The bank has requested that you retrieve the card from the cardholder – it may be a lost or stolen card.	|	Issuing bank is preventing authorization of the transaction as the owner of the card has reported it as stolen	|
    |	ERR_OCT_DECLINE	|	46:Closed account	|	402	|	3013	|	Your request has been declined by the issuing bank due to problems with the credit card account.	|	The account is closed. Re-validate the account number for accuracy and do not reattempt with the same PAN or token.	|
    |	ERR_OCT_DECLINE	|	51:Not sufficient funds	|	402	|	3010	|	Insufficient funds in the cardholder's account.	|	 Insufficient funds in the cardholder's account.	|
    |	ERR_OCT_DECLINE	|	52:No checking account	|	402	|	3017	|	You submitted an invalid credit card number with your request.	|	The customer’s card issuer has declined the transaction as the credit card number is associated to a check account that does not exist	|
    |	ERR_OCT_DECLINE	|	53:No savings account	|	402	|	3017	|	You submitted an invalid credit card number with your request.	|	The customer’s card issuer has declined the transaction as the credit card number is associated to a saving  account that does not exist	|
    |	ERR_OCT_DECLINE	|	54:Expired card or expiration date is missing	|	400	|	3006	|	You submitted an expired credit card number with your request.	|	The credit card being processed is expired and no longer valid to use.	|
    |	ERR_OCT_DECLINE	|	55:Incorrect PIN or PIN missing	|	402	|	3039	|	Your request has been declined due to an invalid authentication value.	|	Issuer has declined the transaction as the customer has entered an incorrect PIN	|
    |	ERR_OCT_DECLINE	|	57:Transaction not permitted to cardholder	|	402	|	3040	|	Your request has been declined because the request type is not permitted on the card.	|	Customer is attempting a transaction and your customer's card is not configured for that type of transaction.	|
    |	ERR_OCT_DECLINE	|	58:Transaction not allowed at terminal	|	402	|	3029	|	The external processing gateway has rejected the transaction.	|	Merchant account or credit card terminal isn't configured properly	|
    |	ERR_OCT_DECLINE	|	59:Suspected fraud	|	402	|	3054	|	The transaction was declined due to suspected fraud.	|	The transaction is refused because the card issuer suspects this payment to be fraudulent.	|
    |	ERR_OCT_DECLINE	|	61:Exceeds approval amount limit	|	402	|	3027	|	The external processing gateway has reported a limit has been exceeded.	|	Customer has exceeded their card limit	|
    |	ERR_OCT_DECLINE	|	62:Restricted card (card invalid in this region or country)	|	402	|	3011	|	Your request has been declined by the issuing bank because the card used is a restricted card. Contact the cardholder's credit card company for further investigation.	|	The card issuer has restricted where the card can be used. For example, because of embargoes.	|
    |	ERR_OCT_DECLINE	|	63:Security violation (source is not correct issuer)	|	402	|	3019	|	Your request has failed the CVV check. Please note that the amount may still have been reserved on the customer's card, in which case it will be released in 3–5 business days.	|	The card issuer indicated a security issue with this card. The three-digit CVV2 or four-digit CID code on the back of the credit card wasn’t read correctly.	|
    |	ERR_OCT_DECLINE	|	64:Transaction does not fulfill AML requirement	|	402	|	3023	|	Your request has been declined by the issuing bank due to its proprietary card activity regulations.	|	Issue declined the transaction due to AML issue	|
    |	ERR_OCT_DECLINE	|	65:Exceeds withdrawal frequency limit	|	402	|	3027	|	The external processing gateway has reported a limit has been exceeded.	|	The customer has exceeded the number of times they can withdraw from their account in a day	|
    |	ERR_OCT_DECLINE	|	70:PIN data required	|	402	|	3039	|	Your request has been declined due to an invalid authentication value.	|		|
    |	ERR_OCT_DECLINE	|	74:Different value than that used for PIN encryption errors	|	402	|	3039	|	Your request has been declined due to an invalid authentication value.	|		|
    |	ERR_OCT_DECLINE	|	75:Allowable number of PIN entry tries exceeded	|	402	|	3035	|	Your request has been declined due to exceeded PIN attempts.	|		|
    |	ERR_OCT_DECLINE	|	76:Unsolicited reversal	|	402	|	3060	|	Unsolicited reversal	|		|
    |	ERR_OCT_DECLINE	|	78:Blocked, first used — Transaction from new cardholder, and card not properly unblocked	|	402	|	3029	|	The external processing gateway has rejected the transaction.	|		|
    |	ERR_OCT_DECLINE	|	79:Already reversed (by Switch)	|	502	|	1001	|	An error occurred with the external processing gateway.	|		|
    |	ERR_OCT_DECLINE	|	80:No financial impact	|	502	|	1001	|	An error occurred with the external processing gateway.	|		|
    |	ERR_OCT_DECLINE	|	81:Cryptographic error found in PIN	|	402	|	3042	|	Your request has been declined due to a cryptographic error.	|		|
    |	ERR_OCT_DECLINE	|	82:Negative CAM, dCVV, iCVV, or CVV results	|	402	|	3019	|	Your request has failed the CVV check. Please note that the amount may still have been reserved on the customer's card, in which case it will be released in 3–5 business days.	|		|
    |	ERR_OCT_DECLINE	|	86:Cannot verify PIN; for example, no PVV	|	402	|	3039	|	Your request has been declined due to an invalid authentication value.	|	Card cannot be verified. For example, there is no PVV	|
    |	ERR_OCT_DECLINE	|	89:Ineligible to receive financial position information (GIV)	|	502	|	1001	|	An error occurred with the external processing gateway.	|		|
    |	ERR_OCT_DECLINE	|	91:Issuer or switch inoperative and STIP not applicable or not available for this transaction	|	502	|	3028	|	The external processing gateway has reported a system error.	|	The issuing bank down.Issuer or issuer processor cannot authorize, for example because of downtime	|
    |	ERR_OCT_DECLINE	|	92:Financial institution or intermediate network facility cannot be found for routing (receiving institution ID is invalid)	|	502	|	3028	|	The external processing gateway has reported a system error.	|	Destination cannot be found for routing / Unable to route transaction	|
    |	ERR_OCT_DECLINE	|	93:Transaction cannot be completed - violation of law	|	402	|	3023	|	Your request has been declined by the issuing bank due to its proprietary card activity regulations.	|	Transaction cannot be completed; violation of law	|
    |	ERR_OCT_DECLINE	|	1A:Additional customer authentication required	|	402	|	3039	|	Your request has been declined due to an invalid authentication value.	|		|
    |	ERR_OCT_DECLINE	|	6P:Verification data failed	|	502	|	1001	|	An error occurred with the external processing gateway.	|		|
    |	ERR_OCT_DECLINE	|	B1:Surcharge amount not permitted on Visa cards or EBT food stamps (U.S. acquirers only)	|	502	|	1001	|	An error occurred with the external processing gateway.	|		|
    |	ERR_OCT_DECLINE	|	B2:Surcharge amount not supported by debit network issuer	|	502	|	1001	|	An error occurred with the external processing gateway.	|		|
    |	ERR_OCT_DECLINE	|	N0:Force STIP	|	502	|	1001	|	An error occurred with the external processing gateway.	|		|
    |	ERR_OCT_DECLINE	|	N3:Cash service not available	|	502	|	1001	|	An error occurred with the external processing gateway.	|		|
    |	ERR_OCT_DECLINE	|	N4:Cash request exceeds issuer or approved limit	|	502	|	1001	|	An error occurred with the external processing gateway.	|		|
    |	ERR_OCT_DECLINE	|	N5:Ineligible for resubmission	|	502	|	1001	|	An error occurred with the external processing gateway.	|		|
    |	ERR_OCT_DECLINE	|	N7:Decline for CVV2 failure	|	402	|	3019	|	Your request has failed the CVV check. Please note that the amount may still have been reserved on the customer's card, in which case it will be released in 3–5 business days.	|		|
    |	ERR_OCT_DECLINE	|	N8:Transaction amount exceeds preauthorized approval amount	|	402	|	3047	|	The transaction was declined because the amount exceeds the floor limit.	|		|
    |	ERR_OCT_DECLINE	|	P5:Denied PIN unblock—PIN change or unblock request declined by issuer	|	402	|	3039	|	Your request has been declined due to an invalid authentication value.	|		|
    |	ERR_OCT_DECLINE	|	P6:Denied PIN change—requested PIN unsafe	|	402	|	3039	|	Your request has been declined due to an invalid authentication value.	|		|
    |	ERR_OCT_DECLINE	|	Q1:Card Authentication failed	|	402	|	3039	|	Your request has been declined due to an invalid authentication value.	|		|
    |	ERR_OCT_DECLINE	|	R0:Stop Payment Order	|	502	|	1001	|	An error occurred with the external processing gateway.	|		|
    |	ERR_OCT_DECLINE	|	R2:Transaction does not qualify for Visa PIN	|	402	|	3039	|	Your request has been declined due to an invalid authentication value.	|		|
    |	ERR_OCT_DECLINE	|	R3:Revocation of all authorizations order	|	502	|	1001	|	An error occurred with the external processing gateway.	|		|
    |	ERR_OCT_DECLINE	|	R4:Unable to go online; offline-declined	|	502	|	1001	|	An error occurred with the external processing gateway.	|		|
    |	ROW_FOR_FORMATTING	|		|		|		|		|		|

    To check Error Codes on Interchecks portal, please refer [here](https://docs-v2.interchecks.com/docs/instant-deposit-failure-codes)

    ## Standalone Credits Failure Cases

    | HTTP Status  |Amount      | Details                                                                                                                                                              |
    |--------------|------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------|
    | Canceled     | 200        | A transaction can be canceled which could be due to various reasons including, a decline by the acquirer, a low amount at the merchant end, and card scheme failure. |
    | PENDING_KYC  | >5000      | If the transaction amount is greater than the given threshold, the user must complete KYC with respective service providers.                                         |
    | PAID         | 200-5000   | Successful cases.                                                                                                                                                    |
    | FAILED       | 344        | A transaction can fail due to various reasons including, processing errors, low available amount, and network failure.                                               |

    For other scenarios refer to [Interchecks Portal](https://docs-v2.interchecks.com/docs/instant-deposit-failure-codes)

    ## Registration Error Codes

    | HTTP Status | Error Code | Message                                                                                                                                                                                                              | Details                                                                                                                                                                                   |
    |-------------|------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
    | 400         | 5068       | Either you submitted a request that is missing a mandatory field or the value of a field does not match the format expected.                                                                                         | In case there is a new registration of a user, the values of the name are not in the standard format. **Sample Value** - "@ad2" in first name or last name                                |
    | 409         | 5284       | Registration already exists with registration id.                                                                                                                                                                    | In case the same user email is being registered again, this blocks the registration as each user is uniquely identified on basis of name. **Sample Value** - The same email if used again |
    | 400         | 5068       | This allows checking and blocking the registration of random email ids. This is only a simple sample, the actual logic is on basis of various combinations of value checks. **Sample Value** - email starts with 123 |                                                                                                                                                                                           |


    ## Add Card Error Codes

    | HTTP Status | Error Code                    | Message                                                   | Details                               |
    |-------------|-------------------------------|-----------------------------------------------------------|---------------------------------------|
    | 400         | ERR_CARD_INELIGIBLE           | The card is not allowed for transactions via Interchecks. | Sample card number - 1111222233334444 |
    | 400         | ERR_CARD_INELIGIBLE           | The card is not allowed for transactions via Interchecks. | Sample card number - 5555666677778888 |
    | 400         | ERR_CARD_INELIGIBLE           | The card is not allowed for transactions via Interchecks. | Sample card number - 1234567812345678 |
    | 400         | ERR_CARD_INELIGIBLE           | The card is not allowed for transactions via Interchecks. | Sample card number - 8765432187654321 |
    | 400         | ERR_RETRIEVING_CARD_DETAILS   | The system was not able to retrieve card details.         | Sample card number - 4515300011000159 |
    | 400         | ERR_RETRIEVING_CARD_DETAILS   | The system was not able to retrieve card details.         | Sample card number - 5515300011000159 |
    | 400         | ERR_RETRIEVING_CARD_DETAILS   | The system was not able to retrieve card details.         | Sample card number - 6515300011000159 |
    | 400         | ERR_RETRIEVING_CARD_DETAILS   | The system was not able to retrieve card details.         | Sample card number - 7515300011000159 |
    | 400         | ERR_CREDIT_CARD_NOT_SUPPORTED | Credit Cards are not allowed via Interchecks.             | Sample card number - 4515300011000225 |
    | 400         | ERR_CREDIT_CARD_NOT_SUPPORTED | Credit Cards are not allowed via Interchecks.             | Sample card number - 5515300011000225 |
    | 400         | ERR_CREDIT_CARD_NOT_SUPPORTED | Credit Cards are not allowed via Interchecks.             | Sample card number - 6515300011000225 |
    | 400         | ERR_CREDIT_CARD_NOT_SUPPORTED | Credit Cards are not allowed via Interchecks.             | Sample card number - 7515300011000225 |

    ## ForumPay Error Codes

    | HTTP Status | Error Code | Message                | Description                                                                                                                   |
    |-------------|------------|------------------------|-------------------------------------------------------------------------------------------------------------------------------|                                                                                                                         
    | 500         | 1000       | Internal Error         | An internal error occurred.                                                                                                   |
    | 502         | 1001       | External Gateway Error | An external gateway error occurred.                                                                                           |
    | 500         | 1002       | Database Error         | An internal database error occurred.                                                                                          |
    | 400         | 5068       | Field error(s)         | Either you submitted a request that is missing a mandatory field or the value of a field does not match the format expected.  |
     
    ## Additional Details

    **Merchant Advice Codes**

    | HTTP Status | Type    | Code              | Message                                                                                                                    |
    |-------------|------------|----------------|----------------------------------------------------------------------------------------------------------------------------|                                                                                                                         
    | 402         | ADVICE  | ADVICE-01         | Issuer will never approve. Please do not retry.                                                                            |
    | 402         | ADVICE  | ADVICE-02         | Issuer cannot approve at this time. Please do not retry more than 10 times over 30 days.                                   |
    | 402         | ADVICE  | ADVICE-03         | Revalidate payment information. Please do not retry more than 10 times over 30 days.                                       |
    | 402         | ADVICE  | ADVICE-04         | Carholder needs to contact issuer. Please do not retry more than 10 times over 30 days.                                    |
    | 402         | ADVICE  | ADVICE-05         | Token requirements not fulfilled for this token. Obtain a new token. Please do not retry more than 10 times over 30 days.  |
    | 402         | ADVICE  | ADVICE-06         | Undefined response.                                                                                                        |
    | 402         | ADVICE  | ADVICE-07         | Merchant doesn't qualify for Product code. Modify transaction parameters or do not retry.                                  |
    | 402         | ADVICE  | ADVICE-08         | Please retry after 1 hour.                                                                                                 |
    | 402         | ADVICE  | ADVICE-09         | Please retry after 24 hours.                                                                                               |
    | 402         | ADVICE  | ADVICE-10         | Please retry after 48 hours.                                                                                               |
    | 402         | ADVICE  | ADVICE-11         | Please retry after 4 days.                                                                                                 |
    | 402         | ADVICE  | ADVICE-12         | Please retry after 6 days.                                                                                                 |
    | 402         | ADVICE  | ADVICE-13         | Please retry after 8 days.                                                                                                 |
    | 402         | ADVICE  | ADVICE-14         | Please retry after 10 days.|
    | 402         | ADVICE  | ADVICE-42         | Sanctions Scoring Service\: Score Exceeds Applicable Threshold Value|
    
    ## Payment Handle Failed Card-3DS Codes
    
    |	Error Code	|	Description	|	Additional Information	|
    |----|-----------|--------|
    |	5100	|	3DS Enrollment status check failed	|	threedEnrollment status is N 	|
    |	5101	|	3DS Enrollment status check failed	|	threedEnrollment status is U 	|
    |	5102	|	Failed as response from wallet is WALLET_FAILED	|	Response from wallet is WALLET_FAILED (For Embedded Finance Flow. Not for standard card flow)	|
    |	5103	|	3DS service failed	|	Response status from 3dSecureApi is FAILED	|
    |	5104	|	3DS Enrollment status check failed	|	threedEnrollment from 3dSecureApi is N 	|
    |	5105	|	3DS Enrollment status check failed	|	threedEnrollment from 3dSecureApi is U	|
    |	5106	|	Risk rule failed	|	threedsResult from 3dSecureApi is N	|
    |	5107	|	Risk rule failed	|	threedsResult from 3dSecureApi is R	|
    |	5108	|	Risk rule failed	|	threedsResult from 3dSecureApi is U 	|
    |	5109	|	deviceFingerprintingId is null	|	deviceFingerprintingId is null	|
    |	5110	|	deviceFingerprintingId is null	|	deviceFingerprintingId is null	|
    |	5111	|	Risk rule failed	|	signatureStatus is Y and threedResult is N in authentication response	|
    |	5112	|	Risk rule failed	|	threedResult response is U in authentication response	|
    |	5113	|	Risk rule failed	|	threedResult response is E in authentication response	|
    |	5114	|	Risk rule failed	|	signature status is N in authentication response	|
    |	5115	|	Risk rule failed	|	threedResult is N	|
    |	5116	|	Risk rule failed	|	threedResult is U	|
    |	5117	|	Risk rule failed	|	threedResult is R	|
    |	5118	|	state is null	|	state is missing	|
    |	5119	|	holderName is null	|	holderName is missing	|
    |	5120	|	Risk rule failed	|	Third party 3ds service throws error	|
    |	5121	|	Risk rule failed	|	Threeds api failed	|


    **ISO Response Codes**

    | Type          | Code       | Message                                          |
    |---------      |------------|--------------------------------------------------|
    | ISO_RESPONSE  | 00         | APPROVED                                         |
    | ISO_RESPONSE  | 01         | Refer to Issuer                                  |
    | ISO_RESPONSE  | 03         | Invalid Merchant                                 |
    | ISO_RESPONSE  | 04         | Pick up                                          |
    | ISO_RESPONSE  | 05         | Do not honour                                    |
    | ISO_RESPONSE  | 08         | Honour with Identification                       |
    | ISO_RESPONSE  | 10         | Partial Approval                                 |
    | ISO_RESPONSE  | 12         | Invalid Transaction                              |
    | ISO_RESPONSE  | 13         | Invalid Amount                                   |
    | ISO_RESPONSE  | 14         | Invalid PAN                                      |
    | ISO_RESPONSE  | 15         | Invalid issuer|                                  |
    | ISO_RESPONSE  | 30         | Format Error|                                    |
    | ISO_RESPONSE  | 41         | Lost card|                                       |
    | ISO_RESPONSE  | 43         | Stolen card|                                     |
    | ISO_RESPONSE  | 51         | Non-sufficient funds                             |
    | ISO_RESPONSE  | 54         | Expired card                                     |
    | ISO_RESPONSE  | 55         | Bad PIN                                          |
    | ISO_RESPONSE  | 57         | Transaction not allowed                          |
    | ISO_RESPONSE  | 58         | Transaction not permitted                        |
    | ISO_RESPONSE  | 61         | Exceeds withdrawal limit                         |
    | ISO_RESPONSE  | 62         | Restricted Card                                  |
    | ISO_RESPONSE  | 65         | Exceeded frequency limit                         |
    | ISO_RESPONSE  | 70         | Contact Card Issuer                              |
    | ISO_RESPONSE  | 71         | PIN Not Changed                                  |
    | ISO_RESPONSE  | 75         | Exceeded PIN tries                               |
    | ISO_RESPONSE  | 76         | Invalid To Account                               |
    | ISO_RESPONSE  | 77         | Invalid From Account                             |
    | ISO_RESPONSE  | 79         | Life cycle Decline                               |
    | ISO_RESPONSE  | 82         | Policy Decline                                   |
    | ISO_RESPONSE  | 83         | Fraud/Security Decline                           |
    | ISO_RESPONSE  | 84         | Invalid Authorization Life Cycle                 |
    | ISO_RESPONSE  | 85         | No reason to decline a request                   |
    | ISO_RESPONSE  | 86         | Cannot verify PIN                                |
    | ISO_RESPONSE  | 87         | Purchase Amount Only, No cash back allowed       |
    | ISO_RESPONSE  | 88         | Cryptographic Error                              |
    | ISO_RESPONSE  | 89         | PIN unacceptable                                 |
    | ISO_RESPONSE  | 91         | Request Destination not reachable                |
    | ISO_RESPONSE  | 92         | Response Destination not reachable               |
    | ISO_RESPONSE  | 94         | Already Reversed                                 |
    | ISO_RESPONSE  | 96         | Internal Error      

    # Using the Example API Calls (Console Window)

    To configure and test the API examples, first click on one of the API calls in the Endpoints section and then please do follow the steps mentioned below:

    - **Step 1:** Using the Console window in the right-hand pane of the screen, you can update the authentication details under the Auth section in the API Console as shown in the following image.

        - For example, you must update the authentication details to include your username and password under Auth Section and then stoplight will automatically update the **Authorization** header value in the request using the Http Basic Authentication concept as shown below in the Sample Curl request image. To get your API Credentails, please do refer [Get your Secret API Key](#get-your-secret-api-key) section. 

    - **Step 2:** You can update the headers (for example: Content-Type), Path parameters and Query parameters usder the Parameters section in the API console as shown in the following image.

        - For example, for loopup requests you must update the endpoint to include your request Id (for example: paymentHandleId), which you do by updating the respective Id value under Parameters section.

    - **Step 3:** Select the request from the examples drop down as shown in the below image for the payment method you would like to test.

    - **Step 4:** Click on Send API Request button to Send the request to the Paysafe API.

    ![](/fileadmin/openapi-spec/payments-api/images/API_Console_New.PNG)

    ![](/fileadmin/openapi-spec/payments-api/images/API_Response.PNG)

    - **Step 5:** Check the response under the response section as shown below.

    ![](/fileadmin/openapi-spec/payments-api/images/API_Response.PNG)

    # Legal and Community

    <ul>
    <li><a href="https://www.paysafe.com/paysafegroup/privacy-policy/" target="_blank">Privacy Policy</a></li>
    <li><a href="https://developer.paysafe.com/en/support/reference-information/terms-of-use/" target="_blank">Terms of Use</a></li>
    <li><a href="https://www.paysafe.com/paysafegroup/regulatory-disclosures/" target="_blank">Regulatory Disclosures</a></li>
    </ul>
  contact: {}
  version: '1.0'
servers:
  - url: 'https://api.test.paysafe.com/paymenthub'
    variables: {}
paths:
  /v1/monitor:
    get:
      summary: Verify That The Service Is Accessible
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/verifyThatTheServiceIsAccessible'
              examples:
                Verify That The Service Is Accessible:
                  value:
                    status: READY
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
      operationId: verify-that-the-service-is-accessible
      description: Click on **Send API Request** after entering the required data. This calls returns a status of READY if the API is available
      parameters: []
      tags:
        - Verify That the Service Is Accessible
  /v1/paymentmethods:
    get:
      summary: Look Up Payment Methods
      tags:
        - Payment Methods
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lookUpPaymentMethods'
              examples:
                Look Up Payment Methods:
                  value:
                    paymentMethods:
                      - paymentMethod: CARD
                        currencyCode: USD
                        accountId: 1009355920
                      - paymentMethod: PAYSAFECARD
                        currencyCode: USD
                        accountId: 1009355921
      operationId: look-up-payment-methods
      parameters:
        - schema:
            type: string
            example: USD
          in: query
          name: currencyCode
          description: 'This is the currency of the merchant account, e.g., USD or CAD. See [Currency Codes](https://developer.paysafe.com/en/support/reference-information/codes/#currency-codes).'
          required: true
      description: 'Click on **Send API Request** after entering the required data,  to see how to look up the payment methods that are enabled for each of your merchant accounts, by currency.'
  /v1/paymenthandles:
    post:
      summary: Create a Payment Handle
      operationId: create-payment-handle
      tags:
        - Payment Handles
      description: |-
        A Payment Handle represents tokenized information about the payment method that you set up for a customer. Once the Payment Handle is created, you then include the *paymentHandleToken* returned in the Payment Handle request response in a new [Payment](/operations/process-payment) / [Standalone Credit](/operations/process-standalone-credit) / [Original Credit](/operations/process-original-credit) / [Verification](/operations/verification) request.

        >**Note:** A payment Handle can be used in a [Payment](/operations/process-payment) / [standalone Credit](/operations/process-standalone-credit) / [Original Credit](/operations/process-original-credit) / [Verification](/operations/verification) request only if it has the status of **PAYABLE**

        See the examples of how to create a Payment Handle object for the following payment methods:

        - A Payment Handle for a standard credit card authorization

        - A Payment Handle for a credit card that is registered for 3D Secure - the response for this request will contain a redirect to present to the customer so they can validate their 3D Secure credentials

        - A Payment Handle for a ApplePay payment.
        
        - A Payment Handle for a GooglePay payment

        - A Payment Handle for a Neteller payment

        - A Payment Handle for a Paysafecash payment

        - A Payment Handle for a Paysafecard payment

        - A Payment Handle for a Paypal payment

        - A Payment Handle for a Pay by Bank payment

        - A Payment Handle for a Venmo payment

        - A Payment Handle for a VIP Preferred payment

        - A Payment Handle for a Mazooma payment

        - A Payment Handle for a MbWay payment
        
        - A Payment Handle for a Multibanco payment

        - A Payment Handle for a Play+ (Sightline) payment

        - A Payment Handle for a Interac Online payment

        - A Payment Handle for a Interac E-Transfer payment

        - A Payment Handle for a Rapid Transfer payment

        - A Payment Handle for a Skrill 1-Tap payment

        - A Payment Handle for an ACH payment

        - A Payment Handle for an EFT payment

        - A Payment Handle for an Online Bank Transfervia Safetypay Express.

        - A Payment Handle for a PIX via Safetypay Express.

        - A Payment Handle for a Khipu via Safetypay Express.

        - A Payment Handle for a Mach via Safetypay Express.

        - A Payment Handle for a Boleto Bancario via Safetypay Express.

        - A Payment Handle for a SafetypayCash via Safetypay Express.

        >**Note:** Profile object & DOB is mandatory for Paysafe Card Payouts.

        >**Note:** The status of Payment Handles will remain INITIATED for the following cases:

        - When the customer is redirected to a redirect_payment URL until the customer verifies the payment instrument.

        - When the requested amount is more than the maximum amount configured in the Business Portal.

        - When Alternate Payment Methods like Paysafecash, Paysafecards are selected by the customer.

        Click on **Send API Request** after entering the required data, to see how to create a Payment Handle for the supported payment instruments by paysafe.
      parameters:
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
          in: header
          name: Simulator
          description: |-
            **Note:** \
            The simulator is only applicable in the test environment and its default value is set as **INTERNAL**.\
            In the production environment, the simulator value is disregarded, even if provided, and the experience will be the same as if the simulator value were set as **EXTERNAL**.          
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/paymentHandleRequest'
            examples:
              Card:
                value:
                  merchantRefNum: 49115d2d54fba7f6a0e8
                  transactionType: PAYMENT
                  threeDs:
                    merchantUrl: 'https://api.qa.paysafe.com/checkout/v2/index.html#/desktop'
                    deviceChannel: BROWSER
                    messageCategory: PAYMENT
                    transactionIntent: CHECK_ACCEPTANCE
                    authenticationPurpose: PAYMENT_TRANSACTION
                    requestorChallengePreference: NO_PREFERENCE
                    orderItemDetails:
                      preOrderItemAvailabilityDate: '2014-01-26'
                      preOrderPurchaseIndicator: MERCHANDISE_AVAILABLE
                      reorderItemsIndicator: FIRST_TIME_ORDER
                      shippingIndicator: SHIP_TO_BILLING_ADDRESS
                    purchasedGiftCardDetails:
                      amount: 1234
                      count: 2
                      currency: USD
                    userAccountDetails:
                      addCardAttemptsForLastDay: 1
                      changedDate: '2010-01-26'
                      changedRange: DURING_TRANSACTION
                      createdDate: '2010-01-26'
                      createdRange: NO_ACCOUNT
                      passwordChangedDate: '2012-01-26'
                      passwordChangedRange: NO_CHANGE
                      paymentAccountDetails:
                        createdRange: NO_ACCOUNT
                        createdDate: '2010-01-26'
                      shippingDetailsUsage:
                        cardHolderNameMatch: true
                        initialUsageDate: '2014-01-26'
                        initialUsageRange: CURRENT_TRANSACTION
                      suspiciousAccountActivity: true
                      totalPurchasesSixMonthCount: 1
                      transactionCountForPreviousDay: 1
                      transactionCountForPreviousYear: 3
                      userLogin:
                        authenticationMethod: NO_LOGIN
                        data: Some up to 2048 bytes undefined data
                        time: '2014-01-26T10:32:28Z'
                  card:
                    cardNum: '4000000000001026'
                    cardExpiry:
                      month: 10
                      year: 2025
                    cvv: '111'
                    holderName: Dilip
                    issuingCountry: US
                  accountId: '1009688230'
                  paymentType: CARD
                  amount: 500
                  currencyCode: USD
                  billingDetails:
                    nickName: Home
                    street: abcd
                    city: defg
                    state: AL
                    country: US
                    zip: '94404'
                  returnLinks:
                    - rel: default
                      href: 'https://usgaminggamblig.com/payment/return/'
                      method: GET
                    - rel: on_completed
                      href: 'https://usgaminggamblig.com/payment/return/success'
                      method: GET
                    - rel: on_failed
                      href: 'https://usgaminggamblig.com/payment/return/failed'
                      method: GET
              Card - With ThreeDs Exemption:
                value:
                  merchantRefNum: 49115d2d54fba7f6a0e8
                  transactionType: PAYMENT
                  threeDs:
                    merchantUrl: 'https://api.qa.paysafe.com/checkout/v2/index.html#/desktop'
                    deviceChannel: BROWSER
                    messageCategory: PAYMENT
                    transactionIntent: CHECK_ACCEPTANCE
                    authenticationPurpose: PAYMENT_TRANSACTION
                    requestorChallengePreference: NO_PREFERENCE
                    orderItemDetails:
                      preOrderItemAvailabilityDate: '2014-01-26'
                      preOrderPurchaseIndicator: MERCHANDISE_AVAILABLE
                      reorderItemsIndicator: FIRST_TIME_ORDER
                      shippingIndicator: SHIP_TO_BILLING_ADDRESS
                    purchasedGiftCardDetails:
                      amount: 1234
                      count: 2
                      currency: USD
                    userAccountDetails:
                      addCardAttemptsForLastDay: 1
                      changedDate: '2010-01-26'
                      changedRange: DURING_TRANSACTION
                      createdDate: '2010-01-26'
                      createdRange: NO_ACCOUNT
                      passwordChangedDate: '2012-01-26'
                      passwordChangedRange: NO_CHANGE
                      paymentAccountDetails:
                        createdRange: NO_ACCOUNT
                        createdDate: '2010-01-26'
                      shippingDetailsUsage:
                        cardHolderNameMatch: true
                        initialUsageDate: '2014-01-26'
                        initialUsageRange: CURRENT_TRANSACTION
                      suspiciousAccountActivity: true
                      totalPurchasesSixMonthCount: 1
                      transactionCountForPreviousDay: 1
                      transactionCountForPreviousYear: 3
                      userLogin:
                        authenticationMethod: NO_LOGIN
                        data: Some up to 2048 bytes undefined data
                        time: '2014-01-26T10:32:28Z'
                  card:
                    cardNum: '4000000000001026'
                    cardExpiry:
                      month: 10
                      year: 2025
                    cvv: '111'
                    holderName: Dilip
                    issuingCountry: US
                  accountId: '1009688230'
                  paymentType: CARD
                  amount: 500
                  currencyCode: USD
                  billingDetails:
                    nickName: Home
                    street: abcd
                    city: defg
                    state: AL
                    country: US
                    zip: '94404'
                  authentication:
                    exemptionIndicator: LOW_VALUE_EXEMPTION
                  returnLinks:
                    - rel: default
                      href: 'https://usgaminggamblig.com/payment/return/'
                      method: GET
                    - rel: on_completed
                      href: 'https://usgaminggamblig.com/payment/return/success'
                      method: GET
                    - rel: on_failed
                      href: 'https://usgaminggamblig.com/payment/return/failed'
                      method: GET        
              Card - Original Credit Payment Handle:
                value:
                  merchantRefNum: a9b2b8d2b9458c8beeb89dbce669
                  transactionType: ORIGINAL_CREDIT
                  accountId: '1009688230'
                  card:
                    cardNum: '4037112233000001'
                    cardExpiry:
                      month: 10
                      year: 2025
                    cvv: '111'
                    holderName: Dilip
                    issuingCountry: US
                  paymentType: CARD
                  amount: 100
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  billingDetails:
                    nickName: Home
                    street: TEST
                    city: CA
                    state: CA
                    country: US
                    zip: '12345'
                  merchantDescriptor:
                    dynamicDescriptor: OnlineStore
                    phone: '1234567899'
                  returnLinks:
                    - rel: default
                      href: 'https://usgaminggamblig.com/payment/return/'
                      method: GET
                    - rel: on_completed
                      href: 'https://usgaminggamblig.com/payment/return/success'
                      method: GET
                    - rel: on_failed
                      href: 'https://usgaminggamblig.com/payment/return/failed'
                      method: GET
              GooglePay:
                value:
                  merchantRefNum: e93cf2ef-077c-422d-8942-ff92c5cf8103
                  transactionType: PAYMENT
                  amount: 123
                  currencyCode: USD
                  accountId: '1016343990'
                  googlePay:
                    googlePayPaymentToken:
                      apiVersionMinor: 0
                      apiVersion: 2
                      paymentMethodData: 
                        description: 'Test Card: Visa••••1111'
                        info:
                          billingAddress:
                            address1: '1600 Amphitheatre Parkway'
                            address2: ''
                            address3: ''
                            administrativeArea: CA
                            countryCode: US
                            locality: Mountain View
                            name: Card Holder Name
                            postalCode: 94043
                            sortingCode:
                          cardDetails: 1111
                          cardNetwork: VISA
                        tokenizationData:
                          token: 'xxxx'
                          type: PAYMENT_GATEWAY
                        type: CARD
                  paymentType: CARD
                  profile:
                    firstName: Vishnu
                    lastName: Vardhan
                    email: vishnu@paysafe.com
                    phone: '1231231231'
                    dateOfBirth:
                      day: 1
                      month: 7
                      year: 1990
                  returnLinks:
                    - rel: on_completed
                      href: 'https://be74-116-50-59-180.ngrok.io/checkout/v2/pages/redirect-success.html'
                      method: GET
                    - rel: on_failed
                      href: 'https://be74-116-50-59-180.ngrok.io/checkout/v2/pages/redirect-error.html'
                      method: GET
                    - rel: default
                      href: 'https://be74-116-50-59-180.ngrok.io/checkout/v2/pages/redirect-success.html'
                      method: GET
                  dupCheck: false
                  skip3ds: true
                  billingDetails:
                    country: US
                    zip: '30040'
                    state: GA
                    city: Alpharetta
                    street: 19111 Deertrl
              GooglePay Decrypted:
                value:
                  merchantRefNum: e93cf2ef-077c-422d-8942-ff92c5cf8103
                  transactionType: PAYMENT
                  amount: 123
                  currencyCode: USD
                  accountId: '1016343990'
                  googlePay:
                    googlePayPaymentToken:
                      apiVersionMinor: 0
                      apiVersion: 2
                      paymentMethodData:
                        description: 'Test Card: Visa••••1111'
                        info:
                          billingAddress:
                            address1: '1600 Amphitheatre Parkway'
                            address2: ''
                            address3: ''
                            administrativeArea: CA
                            countryCode: US
                            locality: Mountain View
                            name: Card Holder Name
                            postalCode: 94043
                            sortingCode:
                          cardDetails: 1111
                          cardNetwork: VISA
                        tokenizationData:
                          decryptedToken:
                            gatewayMerchantId: '123'
                            messageId: AH2EjtfpyVHaSf7_qPnqJpquG7yOtWsBLCL1YU9yyRicp99lUIODvhhHImop-9b8gkS4-MF7dtRIVim2pn-kRX0CxwsjAatGAii8FAlTTtJfxTYV03y5Cq62-hKiRJ2FWTLj7xPQjwpt
                            messageExpiration: '1702026885917'
                            paymentMethodDetails:
                              authMethod: 'CRYPTOGRAM_3DS'
                              pan: '4111111111111111'
                              expirationMonth: 12
                              expirationYear: 2025
                              cryptogram: 'AAA'
                          type: PAYMENT_GATEWAY
                        type: CARD
                  paymentType: CARD
                  profile:
                    firstName: Vishnu
                    lastName: Vardhan
                    email: vishnu@paysafe.com
                    phone: '1231231231'
                    dateOfBirth:
              Skrill:
                value:
                  merchantRefNum: 78cbda06-f62e-4997-87ec-52a3acacb617
                  transactionType: PAYMENT
                  paymentType: SKRILL
                  amount: 100
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  skrill:
                    language: EN
                    logoUrl: 'http://www.paysafe.com/icon.jpg'
                    recipientDescription: Recipient Description
                    detail1Text: Detail 1 text
                    detail1Description: Detail 1 description
                    descriptor: test descriptor
                  billingDetails:
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
                  merchantDescriptor:
                    dynamicDescriptor: OnlineStore
                    phone: '12345678'
                  profile:
                    firstName: pawan
                    lastName: Kalyan
                    email: test@paysafe.com
                    phone: '1234567890'
                  returnLinks:
                    - rel: default
                      href: 'https://usgaminggamblig.com/payment/return/success'
                    - rel: on_failed
                      href: 'https://usgaminggamblig.com/payment/return/failed'
                    - rel: on_cancelled
                      href: 'https://usgaminggamblig.com/payment/return/cancelled'
              Neteller:
                value:
                  merchantRefNum: 7352ebd9-dd5c-4766-a274-aee1a2351b38
                  transactionType: PAYMENT
                  paymentType: NETELLER
                  amount: 500
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  neteller:
                    consumerId: neteller.account@example.org
                    recipientDescription: logo_url_alt_text
                    logoUrl: 'http://www.paysafe.com/icon.jpg'
                  billingDetails:
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
                  merchantDescriptor:
                    dynamicDescriptor: OnlineStore
                    phone: '12345678'
                  returnLinks:
                    - rel: default
                      href: 'https://usgaminggamblig.com/payment/return/success'
                    - rel: on_failed
                      href: 'https://usgaminggamblig.com/payment/return/failed'
                    - rel: on_cancelled
                      href: 'https://usgaminggamblig.com/payment/return/cancel'
              Paysafecash:
                value:
                  merchantRefNum: a9318b525273ee3cda79a2f947a9
                  transactionType: PAYMENT
                  paysafecash:
                    consumerId: merchantclientid
                    minAgeRestriction: 18
                    kycLevelRestriction: SIMPLE
                    countryRestriction: DE
                  paymentType: PAYSAFECASH
                  amount: 500
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  billingDetails:
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
                  merchantDescriptor:
                    dynamicDescriptor: OnlineStore
                    phone: '12345678'
                  returnLinks:
                    - rel: on_completed
                      href: 'https://usgaminggamblig.com/payment/return/success'
                      method: GET
                    - rel: on_failed
                      href: 'https://usgaminggamblig.com/payment/return/failed'
                      method: GET
                    - rel: default
                      href: 'https://usgaminggamblig.com/payment/'
                      method: GET
              Paysafecard:
                value:
                  merchantRefNum: '1674816477288'
                  transactionType: PAYMENT
                  paysafecard:
                    consumerId: merchantclientid
                    minAgeRestriction: 18
                    kycLevelRestriction: SIMPLE
                    countryRestriction: DE
                  paymentType: PAYSAFECARD
                  amount: 500
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  billingDetails:
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
                  merchantDescriptor:
                    dynamicDescriptor: OnlineStore
                    phone: '12345678'
                  returnLinks:
                    - rel: on_completed
                      href: 'https://usgaminggamblig.com/payment/return/success'
                      method: GET
                    - rel: on_failed
                      href: 'https://usgaminggamblig.com/payment/return/failed'
                      method: GET
                    - rel: default
                      href: 'https://usgaminggamblig.com/payment/'
                      method: GET
              Paypal:
                value:
                  merchantRefNum: a1fbaadf-d93c-4d71-ab5a-75a78dee2996
                  transactionType: PAYMENT
                  paymentType: PAYPAL
                  amount: 500
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  paypal:
                    consumerId: sb-cpfxo1472281@personal.example.com
                    recipientDescription: Paysafe store description for payment
                    language: US
                    shippingPreference: SET_PROVIDED_ADDRESS
                    consumerMessage: Paysafe note to payer for payment
                    orderDescription: Paysafe Order description for payment
                    recipientType: PAYPAL_ID
                  billingDetails:
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
                  shippingDetails:
                    recipientName: John Doe
                    street: 1 Main St
                    city: San Jose
                    state: CA
                    country: US
                    zip: '95131'
                  profile:
                    firstName: John
                    lastName: Doe
                    email: john.doe@paysafe.com
                  merchantDescriptor:
                    dynamicDescriptor: OnlineStore
                    phone: '12345678'
                  returnLinks:
                    - rel: default
                      href: 'https://usgaminggamblig.com/payment/return/success'
                    - rel: on_failed
                      href: 'https://usgaminggamblig.com/payment/return/failed'
                    - rel: on_cancelled
                      href: 'https://usgaminggamblig.com/payment/return/cancelled'
              Pay by Bank - Payments:
                value:
                  accountId: '1023044860'
                  merchantRefNum: 22e10bae-2825-4295-bfe1-405380818394
                  transactionType: PAYMENT
                  paymentType: PAY_BY_BANK
                  amount: 100
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  payByBank:
                    consumerId: qa_perf_test_consumer_0002
                  profile:
                    firstName: Perf 0002
                    lastName: Cons 0002
                    dateOfBirth:
                      day: 2
                      month: 1
                      year: 1977
                    identityDocuments:
                      - type: SOCIAL_SECURITY
                        documentNumber: '989790002'
                    email: perftestconsumer0002@example.com
                    emailVerified: VERIFIED
                    phone: '9897550002'
                    phoneVerified: VERIFIED
                  billingDetails:
                    street1: QA Perf Test Street1 0002
                    city: Perf Test City
                    state: FL
                    country: US
                    zip: '15132'
                  returnLinks:
                    - rel: default
                      href: http://www.amazon.ca
                    - rel: on_failed
                      href: http://www.costco.ca
                    - rel: on_cancelled
                      href: http://www.bestbuy.ca
              Pay by Bank - verification:
                value:
                  merchantRefNum: 3190b7ab-53e8-4acd-942a-bd1822690959
                  transactionType: VERIFICATION
                  paymentType: PAY_BY_BANK
                  amount: 100
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  payByBank:
                    consumerId: TEST0003
                  profile:
                    firstName: Perf 0003
                    lastName: Cons 0003
                    email: perftestconsumer0002@example.com
                    identityDocuments:
                      - type: SOCIAL_SECURITY
                        documentNumber: '98780003'
                  billingDetails:
                    street1: QA Perf Test Street1 0002
                    city: Perf Test City
                    state: FL
                    country: US
                    zip: '15132'
              Pay by Bank - Payments with bankToken:
                value:
                  accountId: '1023044860'
                  merchantRefNum: "8d40f3da-c6a6-4706-96a3-d46539690250"
                  transactionType: PAYMENT
                  paymentType: PAY_BY_BANK
                  amount: 200
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  payByBank:
                    consumerId: SKTEST1
                    registrationId: bc9abaf3-6665-44e0-bbba-23ac876691fc
                    ach:
                      paymentHandleToken: BAxhRF5GgwY4OBFm
                  profile:
                    firstName: Perf 0001
                    lastName: Cons 0001
                    dateOfBirth:
                      day: 1
                      month: 1
                      year: 1977
                    identityDocuments:
                      - type: SOCIAL_SECURITY
                        documentNumber: '989790001'
                    emailVerified: VERIFIED
                    phoneVerified: VERIFIED
                  billingDetails:
                    street1: QA Perf Test Street1 002
                    city: Perf Test City
                    state: FL
                    country: US
                    zip: '15132'
                  returnLinks:
                    - rel: default
                      href: http://www.amazon.ca
                    - rel: on_failed
                      href: http://www.costco.ca
                    - rel: on_cancelled
                      href: http://www.bestbuy.ca
              Pay by Bank - SCT:
                value:
                  merchantRefNum: " b8b166d3-450d-41a5-aa98-8a5cbe0947ce "
                  transactionType: "STANDALONE_CREDIT"
                  paymentType: "PAY_BY_BANK"
                  amount: "100"
                  currencyCode: "USD"
                  customerIp: "172.0.0.1"
                  payByBank: 
                    consumerId: "qa_perf_test_consumer_0001"
                    ach: 
                      paymentHandleToken: "BAonftuNrjpdBcY5"
                  billingDetails: 
                    street1: "QA Perf Test Street1 002"
                    city: "Perf Test City"
                    state: "FL"
                    country: "US"
                    zip: "15132"
              Venmo:
                value:
                  paymentType: VENMO
                  venmo:
                    consumerId: sb-cpfxo1472298@personal.example.com
                  transactionType: PAYMENT
                  amount: 100
                  currencyCode: USD
                  profile:
                    firstName: Sandi
                    lastName: Smith
                    email: sandi.smith@paysafe.com
                    phone: '84632876432'
                    dateOfBirth:
                      day: 23
                      month: 12
                      year: 1990
                  billingDetails:
                    nickName: John Dee
                    street: '100'
                    street2: Queen Street
                    city: Cupertino
                    zip: '14236'
                    country: US
                    state: CA
                  merchantRefNum: '1674816477288'
                  merchantDescriptor:
                    dynamicDescriptor: Test Description
                    phone: '5555345456'
                  shippingDetails:
                    recipientName: Vishnu
                    street: 20735 Stevens Creek Blvd
                    street2: Montessori
                    city: Cupertino
                    zip: '95014'
                    country: US
                    state: CA
                  dupCheck: false
                  deviceFingerprinting:
                    threatMetrixSessionId: e2981cff-2e9b-47c3-811a-ba3c6b89c0b9
                  returnLinks:
                    - rel: on_completed
                      href: 'https://api.test.paysafe.com/checkout/v2/pages/redirect-success.html'
                      method: GET
                    - rel: on_failed
                      href: 'https://api.test.paysafe.com/checkout/v2/pages/redirect-error.html'
                      method: GET
                    - rel: default
                      href: 'https://api.test.paysafe.com/checkout/v2/pages/redirect-success.html'
                      method: GET
                  singleUseCustomerToken: SPNE1qAcPZdblQIw
              VIP Preferred:
                value:
                  merchantRefNum: fb388e627314ed346672
                  transactionType: PAYMENT
                  paymentType: VIPPREFERRED
                  amount: 500
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  vippreferred:
                    consumerId: '139712817'
                  billingDetails:
                    nickName: Home
                    street: street
                    street2: street
                    city: ca
                    state: CA
                    country: US
                    zip: '50087'
                  profile:
                    firstName: Pavan
                    lastName: Kalyan
                    email: test@paysafe.com
                    phone: '1234567890'
                  merchantDescriptor:
                    dynamicDescriptor: OnlineStoreeeeeeeee
                    phone: '1234567899'
                  returnLinks:
                    - rel: default
                      href: 'https://usgaminggamblig.com/payment/return/success'
                      method: GET
                    - rel: on_failed
                      href: 'https://usgaminggamblig.com/payment/return/failed'
                      method: GET
              Mazooma - withoutUPO:
                value:
                  merchantRefNum: 285a1d9f-ab6b-4851-870b-b725148a5162
                  transactionType: PAYMENT
                  paymentType: MAZOOMA
                  amount: '100'
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  mazooma:
                    consumerId: Nitin_04
                  profile:
                    firstName: ALBERTA
                    lastName: BOBBETHCHARLESON
                    email: accountholder0@example.com
                    dateOfBirth:
                      day: '23'
                      month: '12'
                      year: '1990'
                    phone: '1234567890'
                  billingDetails:
                    street1: Queen Street West
                    street2: Queen Street
                    city: Imphal
                    state: NY
                    country: US
                    zip: '14236'
                  merchantDescriptor:
                    dynamicDescriptor: OnlineStore
                    phone: '12345678'
                  returnLinks:
                    - rel: default
                      href: 'http://www.amazon.ca'
                    - rel: on_failed
                      href: 'http://www.costco.ca'
                    - rel: on_cancelled
                      href: 'http://www.bestbuy.ca'
              Mazooma - withUPO:
                value:
                  merchantRefNum: 7e42c33e-af14-460a-89a8-0ee6d5e8958e
                  transactionType: PAYMENT
                  paymentType: MAZOOMA
                  amount: 100
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  mazooma:
                    consumerId: Nitin_04
                    ach:
                      paymentHandleToken: BAitJ4nDIYRfo9um
                  profile:
                    firstName: ALBERTA
                    lastName: BOBBETHCHARLESON
                    email: accountholder0@example.com
                    dateOfBirth:
                      day: '23'
                      month: '12'
                      year: '1990'
                    phone: 1234567890
                  billingDetails:
                    nickName: Home
                    street: Queen Street West
                    street2: Queen Street
                    city: Imphal
                    state: NY
                    country: US
                    zip: '14236'
                  merchantDescriptor:
                    dynamicDescriptor: OnlineStore
                    phone: '12345678'
                  returnLinks:
                    - rel: default
                      href: 'http://www.amazon.ca'
                    - rel: on_failed
                      href: 'http://www.costco.ca'
                    - rel: on_cancelled
                      href: 'http://www.bestbuy.ca'
              MBWAY:
                value:
                  merchantRefNum: c057227d-dce5-4855-8b2e-84e76738fcc4
                  transactionType: PAYMENT
                  paymentType: MBWAY
                  amount: 500
                  currencyCode: EUR
                  profile:
                    firstName: John
                    lastName: Cena
                    phone: '8074683324'
                    email: mohan@paysafe.com
                  returnLinks:
                    rel: default
                    href: http://www.amazon.ca
              MULTIBANCO:
                value:
                  merchantRefNum: d254956e-5700-47ee-87f1-ffe6aff84abd
                  transactionType: PAYMENT
                  paymentType: MULTIBANCO
                  amount: 21000
                  currencyCode: EUR
                  profile:
                    firstName: John
                    lastName: Cena
                    email: nagababu@paysafe.com
                  returnLinks:
                    rel: default
                    href: http://www.amazon.ca
              Sightline:
                value:
                  merchantRefNum: 795094ab100432979bae
                  transactionType: PAYMENT
                  paymentType: SIGHTLINE
                  amount: 1500
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  sightline:
                    consumerId: '187701588'
                    ssn: '187701588'
                  billingDetails:
                    nickName: Home
                    street: TEST
                    street2: TEST
                    city: CA
                    state: CA
                    country: US
                    zip: '12345'
                  profile:
                    firstName: Pavan
                    lastName: Kalyan
                    email: test@paysafe.com
                    phone: '1234567890'
                  merchantDescriptor:
                    dynamicDescriptor: OnlineStoreeeeeeeee
                    phone: '1234567899'
                  returnLinks:
                    - rel: default
                      href: 'https://usgaminggamblig.com/payment/return/success'
                      method: GET
                    - rel: on_failed
                      href: 'https://usgaminggamblig.com/payment/return/failed'
                      method: GET
              Interac E-Transfer:
                value:
                  merchantRefNum: 2c2c31b8-49a4-4386-ae2f-c3a4377f6269
                  transactionType: STANDALONE_CREDIT
                  paymentType: INTERAC_ETRANSFER
                  amount: 500
                  currencyCode: CAD
                  customerIp: 172.0.0.1
                  interacEtransfer:
                    consumerId: madhu@paysafe.com
                    question: what is your name
                    answer: MadhuBaddam
                  profile:
                    firstName: Madhu
                    lastName: Baddam
                    email: madhu.baddam@paysafe.com
                    phone: '12345678'
                  browserDetails:
                    userCookie: testusercoockie
                  deviceDetails:
                    deviceId: testdeviceid
              Rapid Transfer via Skrill Quick Checkout:
                value:
                  merchantRefNum: d5490e30-d9ec-4e0b-9de2-770fd3719cca
                  transactionType: PAYMENT
                  accountId: '1005655930'
                  profile:
                    firstName: John
                    lastName: Doe
                  rapidTransfer:
                    consumerId: csr_fl@sun-fish.com
                    countryCode: IE
                  paymentType: RAPID_TRANSFER
                  amount: 3000
                  currencyCode: EUR
                  customerIp: 73.82.192.17
                  billingDetails:
                    street: '71 Cherry Court '
                    city: Southhampton
                    zip: SO53 5PD
                    country: GB
                  returnLinks:
                    - rel: on_completed
                      href: 'http://www.amazon.ca'
                      method: GET
                    - rel: on_failed
                      href: 'http://www.amazon.ca'
                      method: GET
                    - rel: default
                      href: 'http://www.amazon.ca'
              ACH:
                value:
                  merchantRefNum: '156048571'
                  transactionType: PAYMENT
                  ach:
                    accountHolderName: PT ACH HName
                    accountNumber: '511202'
                    routingNumber: '211589828'
                    accountType: SAVINGS
                    payMethod: WEB
                  paymentType: ACH
                  amount: 500
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  billingDetails:
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
                  profile:
                    firstName: Poke
                    lastName: mon
                    email: Poke.mon@canada.com
                    ssn: '234456789'
                    dateOfBirth:
                      year: 1965
                      month: 10
                      day: 12
                  merchantDescriptor:
                    dynamicDescriptor: OnlineStoreeeeeeeee
                    phone: '1234567899'
                  dupCheck: false
              EFT:
                value:
                  merchantRefNum: '4533863971'
                  transactionType: PAYMENT
                  eft:
                    accountHolderName: XYZ Company
                    accountNumber: '336612'
                    transitNumber: '22446'
                    institutionId: '001'
                    paymentDescriptor: payment dtr
                  paymentType: EFT
                  currencyCode: CAD
                  amount: 500
                  customerIp: 172.0.0.1
                  billingDetails:
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
                  profile:
                    firstName: Poke
                    lastName: mon
                    email: Poke.mon@canada.com
                    ssn: '234456789'
                    dateOfBirth:
                      year: 1965
                      month: 10
                      day: 12
                  merchantDescriptor:
                    dynamicDescriptor: OnlineStoreeeeeeeee
                    phone: '1234567899'
                  dupcheck: true
              Skrill 1-Tap:
                value:
                  merchantRefNum: 6a052cf0-bbde-4560-8eb0-4188f57cf4f9
                  transactionType: PAYMENT
                  paymentType: SKRILL1TAP
                  amount: 100
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  accountId: '1002565790'
                  skrill1tap:
                    consumerId: '1234898'
                    language: EN
                    logoUrl: 'http://www.paysafe.com/icon.jpg'
                    recipientDescription: "Recipient\_Description"
                    detail1Text: "Detail\_1\_text"
                    detail1Description: "Detail\_1\_description"
                    descriptor: "test\_descriptor"
                    maxAmount: 500
                    emailMessage: test
                    emailSubject: test
                  billingDetails:
                    nickName: Home
                    street: "100\_Queen"
                    street2: "Unit\_201"
                    city: Toronto
                    zip: "M5H\_2N2"
                    country: CA
                  merchantDescriptor:
                    dynamicDescriptor: OnlineStore
                    phone: '12345678'
                  profile:
                    firstName: pawan
                    lastName: Kalyan
                    email: test@paysafe.com
                    phone: '1234567890'
                  returnLinks:
                    - rel: default
                      href: 'https://usgaminggamblig.com/payment/return/success'
                    - rel: on_failed
                      href: 'https://usgaminggamblig.com/payment/return/failed'
                    - rel: on_cancelled
                      href: 'https://usgaminggamblig.com/payment/return/cancelled'
                    - rel: on_error
                      href: 'https://usgaminggamblig.com/payment/return/on_error'
                    - rel: on_completed
                      href: 'https://usgaminggamblig.com/payment/return/on_completed'
                    - rel: on_processing
                      href: 'https://usgaminggamblig.com/payment/return/on_processing'
              ApplePay:
                value:
                  merchantRefNum: e93cf2ef-077c-422d-8942-ff92c5cf8103
                  transactionType: PAYMENT
                  amount: 123
                  currencyCode: USD
                  accountId: '1016343990'
                  applePay:
                    label: Pay with Apple
                    requestBillingAddress: true
                    applePayPaymentToken:
                      token:
                        paymentData:
                          data: crc1wsCG/2WWXtXQPoOsgtjJoKQSbwc7L6lHgHmLKg30a9Z6l4Ph/xUoEelUxE4G6UNMuxgEn1FRm1zDOcbFKNksI/Q/Nk75bybUWGAilXZ7VghYRjzjvmKKOHTMVkU8vTn4mbQGrTiyAsVPkCuF5BuuEM0C2QiAhDb5Tz5xyna3dv3hAgTLdyDlbI1vs1hBb2KaDUkF9InzYB5BoExMauqn6/8WR8noi0FUHJYejsAmlLgbXi98OnkFcueQwKgXICQmg6l+NR3H28RZRLTTnP1+gdHk3oMiozLliDwY1cBlPz7EQDT4VWUWRIkhJIiKHLb/p/Wn3S+sjbzruIQ007mVx3BTYwNQM+9W01t940sO8w7pbmhmWOAIvsYq/mft6dEFNIQt3Urr0ieF
                          signature: MIAGCSqGSIb3DQEHAqCAMIACAQExDzANBglghkgBZQMEAgEFADCABgkqhkiG9w0BBwEAAKCAMIID5DCCA4ugAwIBAgIIWdihvKr0480wCgYIKoZIzj0EAwIwejEuMCwGA1UEAwwlQXBwbGUgQXBwbGljYXRpb24gSW50ZWdyYXRpb24gQ0EgLSBHMzEmMCQGA1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMB4XDTIxMDQyMDE5MzcwMFoXDTI2MDQxOTE5MzY1OVowYjEoMCYGA1UEAwwfZWNjLXNtcC1icm9rZXItc2lnbl9VQzQtU0FOREJPWDEUMBIGA1UECwwLaU9TIFN5c3RlbXMxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEgjD9q8Oc914gLFDZm0US5jfiqQHdbLPgsc1LUmeY+M9OvegaJajCHkwz3c6OKpbC9q+hkwNFxOh6RCbOlRsSlaOCAhEwggINMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAUI/JJxE+T5O8n5sT2KGw/orv9LkswRQYIKwYBBQUHAQEEOTA3MDUGCCsGAQUFBzABhilodHRwOi8vb2NzcC5hcHBsZS5jb20vb2NzcDA0LWFwcGxlYWljYTMwMjCCAR0GA1UdIASCARQwggEQMIIBDAYJKoZIhvdjZAUBMIH+MIHDBggrBgEFBQcCAjCBtgyBs1JlbGlhbmNlIG9uIHRoaXMgY2VydGlmaWNhdGUgYnkgYW55IHBhcnR5IGFzc3VtZXMgYWNjZXB0YW5jZSBvZiB0aGUgdGhlbiBhcHBsaWNhYmxlIHN0YW5kYXJkIHRlcm1zIGFuZCBjb25kaXRpb25zIG9mIHVzZSwgY2VydGlmaWNhdGUgcG9saWN5IGFuZCBjZXJ0aWZpY2F0aW9uIHByYWN0aWNlIHN0YXRlbWVudHMuMDYGCCsGAQUFBwIBFipodHRwOi8vd3d3LmFwcGxlLmNvbS9jZXJ0aWZpY2F0ZWF1dGhvcml0eS8wNAYDVR0fBC0wKzApoCegJYYjaHR0cDovL2NybC5hcHBsZS5jb20vYXBwbGVhaWNhMy5jcmwwHQYDVR0OBBYEFAIkMAua7u1GMZekplopnkJxghxFMA4GA1UdDwEB/wQEAwIHgDAPBgkqhkiG92NkBh0EAgUAMAoGCCqGSM49BAMCA0cAMEQCIHShsyTbQklDDdMnTFB0xICNmh9IDjqFxcE2JWYyX7yjAiBpNpBTq/ULWlL59gBNxYqtbFCn1ghoN5DgpzrQHkrZgTCCAu4wggJ1oAMCAQICCEltL786mNqXMAoGCCqGSM49BAMCMGcxGzAZBgNVBAMMEkFwcGxlIFJvb3QgQ0EgLSBHMzEmMCQGA1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMB4XDTE0MDUwNjIzNDYzMFoXDTI5MDUwNjIzNDYzMFowejEuMCwGA1UEAwwlQXBwbGUgQXBwbGljYXRpb24gSW50ZWdyYXRpb24gQ0EgLSBHMzEmMCQGA1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE8BcRhBnXZIXVGl4lgQd26ICi7957rk3gjfxLk+EzVtVmWzWuItCXdg0iTnu6CP12F86Iy3a7ZnC+yOgphP9URaOB9zCB9DBGBggrBgEFBQcBAQQ6MDgwNgYIKwYBBQUHMAGGKmh0dHA6Ly9vY3NwLmFwcGxlLmNvbS9vY3NwMDQtYXBwbGVyb290Y2FnMzAdBgNVHQ4EFgQUI/JJxE+T5O8n5sT2KGw/orv9LkswDwYDVR0TAQH/BAUwAwEB/zAfBgNVHSMEGDAWgBS7sN6hWDOImqSKmd6+veuv2sskqzA3BgNVHR8EMDAuMCygKqAohiZodHRwOi8vY3JsLmFwcGxlLmNvbS9hcHBsZXJvb3RjYWczLmNybDAOBgNVHQ8BAf8EBAMCAQYwEAYKKoZIhvdjZAYCDgQCBQAwCgYIKoZIzj0EAwIDZwAwZAIwOs9yg1EWmbGG+zXDVspiv/QX7dkPdU2ijr7xnIFeQreJ+Jj3m1mfmNVBDY+d6cL+AjAyLdVEIbCjBXdsXfM4O5Bn/Rd8LCFtlk/GcmmCEm9U+Hp9G5nLmwmJIWEGmQ8Jkh0AADGCAYwwggGIAgEBMIGGMHoxLjAsBgNVBAMMJUFwcGxlIEFwcGxpY2F0aW9uIEludGVncmF0aW9uIENBIC0gRzMxJjAkBgNVBAsMHUFwcGxlIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUwIIWdihvKr0480wDQYJYIZIAWUDBAIBBQCggZUwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMjEwOTA5MTUxMDIzWjAqBgkqhkiG9w0BCTQxHTAbMA0GCWCGSAFlAwQCAQUAoQoGCCqGSM49BAMCMC8GCSqGSIb3DQEJBDEiBCALhfgr30p4YER31+Gpjqy12gCF3knS1vKEHAFOr41UWjAKBggqhkjOPQQDAgRHMEUCIClcW39OnFDHNA0Klj+f90ydMz8MUz1jIRCWjZl6G5+6AiEApNrnBuLx9Z004GEuG4LBUp1paIuFYG96rdJXq7L9cjUAAAAAAAA=
                          header:
                            publicKeyHash: jaI8zb3+bTPrkEHLe/edIBuRjWbkRm1YKtUXX/FuIRw=
                            ephemeralPublicKey: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE41aqNv3ogcZU+oMSztrAwyfZJPYZaSLVhObI5FxRwjd609HFwsJ7Fy4lFmSvl4pqwn+gAw5OB8sfpzIfDWuYCQ==
                            transactionId: c852f15513dd58f97b6b4094e3f897087d95d8f1fe08dc00bc39179aae434e31
                          version: EC_v1
                        paymentMethod:
                          displayName: MasterCard 1470
                          network: MasterCard
                          type: credit
                        transactionIdentifier: C852F15513DD58F97B6B4094E3F897087D95D8F1FE08DC00BC39179AAE434E31
                      billingContact:
                        addressLines:
                          - 19111 Deertrl
                        administrativeArea: ''
                        country: USA
                        countryCode: US
                        familyName: Nasov
                        givenName: Nike
                        locality: Cumming
                        phoneticFamilyName: ''
                        phoneticGivenName: ''
                        postalCode: '30004'
                        subAdministrativeArea: GA
                        subLocality: ''
                  paymentType: CARD
                  profile:
                    firstName: Vishnu
                    lastName: Vardhan
                    email: vishnu@paysafe.com
                    phone: '1231231231'
                    dateOfBirth:
                      day: 1
                      month: 7
                      year: 1990
                  returnLinks:
                    - rel: on_completed
                      href: 'https://be74-116-50-59-180.ngrok.io/checkout/v2/pages/redirect-success.html'
                      method: GET
                    - rel: on_failed
                      href: 'https://be74-116-50-59-180.ngrok.io/checkout/v2/pages/redirect-error.html'
                      method: GET
                    - rel: default
                      href: 'https://be74-116-50-59-180.ngrok.io/checkout/v2/pages/redirect-success.html'
                      method: GET
                  dupCheck: false
                  billingDetails:
                    country: US
                    zip: '30040'
                    state: GA
                    city: Alpharetta
                    street: 19111 Deertrl
              ApplePay Decrypted:
                value:
                  merchantRefNum: e93cf2ef-077c-422d-8942-ff92c5cf8103
                  transactionType: PAYMENT
                  amount: 123
                  currencyCode: USD
                  accountId: '1016343990'
                  applePay:
                    label: Pay with Apple
                    requestBillingAddress: true
                    applePayPaymentToken:
                      token:
                        paymentData:
                          decryptedData:
                            applicationPrimaryAccountNumber: '5076020000000006'
                            applicationExpirationDate: '231111'
                            currencyCode: '840'
                            transactionAmount: '1499'
                            cardholderName: John Doe
                            deviceManufacturerIdentifier: OPAY
                            paymentDataType: 3DSecure
                            paymentData:
                              onlinePaymentCryptogram: Axoxoxoxoxo
                              eciIndicator: '7'
                        paymentMethod:
                          displayName: MasterCard 1470
                          network: MasterCard
                          type: credit
                        transactionIdentifier: C852F15513DD58F97B6B4094E3F897087D95D8F1FE08DC00BC39179AAE434E31
                      billingContact:
                        addressLines:
                          - 19111 Deertrl
                        administrativeArea: ''
                        country: USA
                        countryCode: US
                        familyName: Nasov
                        givenName: Nike
                        locality: Cumming
                        phoneticFamilyName: ''
                        phoneticGivenName: ''
                        postalCode: '30004'
                        subAdministrativeArea: GA
                        subLocality: ''
                  paymentType: CARD
                  profile:
                    firstName: Vishnu
                    lastName: Vardhan
                    email: vishnu@paysafe.com
                    phone: '1231231231'
                    dateOfBirth:
                      day: 1
                      month: 7
                      year: 1990
                  returnLinks:
                    - rel: on_completed
                      href: 'https://be74-116-50-59-180.ngrok.io/checkout/v2/pages/redirect-success.html'
                      method: GET
                    - rel: on_failed
                      href: 'https://be74-116-50-59-180.ngrok.io/checkout/v2/pages/redirect-error.html'
                      method: GET
                    - rel: default
                      href: 'https://be74-116-50-59-180.ngrok.io/checkout/v2/pages/redirect-success.html'
                      method: GET
                  dupCheck: false
                  billingDetails:
                    country: US
                    zip: '30040'
                    state: GA
                    city: Alpharetta
                    street: 19111 Deertrl
              Online Bank Transfer via Safetypay - Without Bank code:
                value:
                  amount: 1000
                  currencyCode: BRL
                  dupCheck: true
                  merchantRefNum: 11b93b1f-2c97-401a-8fae-b2cf9c537048
                  transactionType: PAYMENT
                  paymentExpiryMinutes: 15
                  accountId: '1002495210'
                  paymentType: ONLINE_BANK_TRANSFER
                  profile:
                    email: BRTESTQA202_01@gmail.com
                  paymentDetails:
                    countryCode: BR
                  returnLinks:
                    - rel: default
                      href: 'https://www.paysafe.com/en/'
              Online Bank Transfer via Safetypay - With Bank code:
                value:
                  amount: 1000
                  currencyCode: BRL
                  dupCheck: true
                  merchantRefNum: 61896753-3204-491d-8344-61c5480ee3d9
                  transactionType: PAYMENT
                  paymentExpiryMinutes: 15
                  accountId: '1002495210'
                  paymentType: ONLINE_BANK_TRANSFER
                  profile:
                    email: BRTESTQA202_01@gmail.com
                  paymentDetails:
                    countryCode: BR
                    bankNameCodes:
                      - ITAU
                  returnLinks:
                    - rel: default
                      href: 'https://www.paysafe.com/en/'
              PIX via Safetypay:
                value:
                  amount: 500
                  currencyCode: BRL
                  dupCheck: true
                  merchantRefNum: f1e79262-fdee-4e7c-bd5e-006063f07d28
                  transactionType: PAYMENT
                  paymentExpiryMinutes: 15
                  accountId: '1002495220'
                  paymentType: PIX
                  profile:
                    email: BRPIXQA0220_01@gmail.com
                  returnLinks:
                    - rel: default
                      href: 'https://www.paysafe.com/en/'
              Khipu via Safetypay:
                value:
                  amount: 47000
                  currencyCode: CLP
                  dupCheck: true
                  liveMode: true
                  merchantRefNum: eb23d35f-761c-4496-8c01-0cd6a5a5be71
                  transactionType: PAYMENT
                  paymentExpiryMinutes: 15
                  accountId: '1002495260'
                  paymentType: KHIPU
                  profile:
                    email: CLKHIPU0212_01@gmail.com
                  returnLinks:
                    - rel: default
                      href: 'http://www.amazon.ca'
              Mach via Safetypay:
                value:
                  amount: 500
                  currencyCode: CLP
                  dupCheck: true
                  liveMode: true
                  merchantRefNum: 32e74478-37a3-46ac-ba2f-019b8c057432
                  transactionType: PAYMENT
                  paymentExpiryMinutes: 15
                  accountId: '1002495250'
                  paymentType: MACH
                  profile:
                    email: CLMACH0212_01@gmail.com
                  returnLinks:
                    - rel: default
                      href: 'http://www.amazon.ca'
              Boleto Bancario via Safetypay:
                value:
                  amount: 500
                  currencyCode: BRL
                  merchantRefNum: eb3b3cbe-1386-4c38-b967-63a90249e946
                  transactionType: PAYMENT
                  paymentExpiryMinutes: 15
                  accountId: '1002622940'
                  paymentType: BOLETO_BANCARIO
                  profile:
                    email: brlspcash@gmail.com
                  returnLinks:
                    - rel: default
                      href: 'http://www.amazon.ca'
              Safetypay Cash - Without Bank Code:
                value:
                  amount: 500
                  currencyCode: BRL
                  merchantRefNum: 78c09d3e-f6c6-4c03-b8c0-4e21fb08f232
                  transactionType: PAYMENT
                  paymentExpiryMinutes: 20
                  accountId: '1002622950'
                  paymentType: SAFETYPAY_CASH
                  safetypayCash:
                    countryCode: BR
                  profile:
                    email: brlspcash@gmail.com
                  returnLinks:
                    - rel: default
                      href: 'http://www.amazon.ca'
              Safetypay Cash - With Bank Code:
                value:
                  amount: 500
                  currencyCode: BRL
                  merchantRefNum: 78c09d3e-f6c6-4c03-b8c0-4e21fb08f232
                  transactionType: PAYMENT
                  paymentExpiryMinutes: 20
                  accountId: '1002622950'
                  paymentType: SAFETYPAY_CASH
                  safetypayCash:
                    countryCode: BR
                    bankNameCodes:
                      - LOTERICAS
                  profile:
                    email: brlspcash@gmail.com
                  returnLinks:
                    - rel: default
                      href: 'http://www.amazon.ca'
        description: ''
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentHandle'
              examples:
                Card:
                  value:
                    id: b5c30668-5724-4499-9b9a-c326c943d31c
                    accountId: '1009688230'
                    paymentType: CARD
                    paymentHandleToken: SC2INoYvSe2MzQuB
                    merchantRefNum: fc5b62df1202e491475d
                    currencyCode: USD
                    txnTime: '2023-01-27T10:14:26Z'
                    billingDetails:
                      nickName: Home
                      street: TEST
                      city: CA
                      zip: '94404'
                      state: CA
                      country: US
                    customerIp: 10.195.93.117
                    status: PAYABLE
                    amount: 500
                    action: NONE
                    usage: SINGLE_USE
                    timeToLiveSeconds: 299
                    transactionType: PAYMENT
                    executionMode: SYNCHRONOUS
                    card:
                      cardExpiry:
                        month: '10'
                        year: '2025'
                      holderName: Dilip
                      cardType: VI
                      cardBin: '400000'
                      lastDigits: '1026'
                      cardCategory: CREDIT
                      issuingCountry: US
                    returnLinks:
                      - method: GET
                        rel: default
                        href: 'https://usgaminggamblig.com/payment/return/'
                      - method: GET
                        rel: on_completed
                        href: 'https://usgaminggamblig.com/payment/return/success'
                      - method: GET
                        rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                    skip3ds: false
                    threeDs:
                      merchantUrl: 'https://api.qa.paysafe.com/checkout/v2/index.html#/desktop'
                      deviceChannel: BROWSER
                      requestorChallengePreference: NO_PREFERENCE
                      messageCategory: PAYMENT
                      transactionIntent: CHECK_ACCEPTANCE
                      authenticationPurpose: PAYMENT_TRANSACTION
                      orderItemDetails:
                        preOrderItemAvailabilityDate: '2014-01-26'
                        preOrderPurchaseIndicator: MERCHANDISE_AVAILABLE
                        reorderItemsIndicator: FIRST_TIME_ORDER
                        shippingIndicator: SHIP_TO_BILLING_ADDRESS
                      purchasedGiftCardDetails:
                        amount: 1234
                        count: 2
                        currency: USD
                      userAccountDetails:
                        addCardAttemptsForLastDay: 1
                        changedDate: '2010-01-26'
                        changedRange: DURING_TRANSACTION
                        createdDate: '2010-01-26'
                        createdRange: NO_ACCOUNT
                        passwordChangedDate: '2012-01-26'
                        passwordChangedRange: NO_CHANGE
                        suspiciousAccountActivity: true
                        totalPurchasesSixMonthCount: 1
                        transactionCountForPreviousDay: 1
                        transactionCountForPreviousYear: 3
                        shippingDetailsUsage:
                          cardHolderNameMatch: true
                          initialUsageDate: '2014-01-26'
                          initialUsageRange: CURRENT_TRANSACTION
                        userLogin:
                          authenticationMethod: NO_LOGIN
                          data: Some up to 2048 bytes undefined data
                          time: '2014-01-26T10:32:28Z'
                        paymentAccountDetails:
                          createdRange: NO_ACCOUNT
                          createdDate: '2010-01-26'
                Card - With ThreeDs Exemption:
                  value:
                    id: b5c30668-5724-4499-9b9a-c326c943d31c
                    accountId: '1009688230'
                    paymentType: CARD
                    paymentHandleToken: SC2INoYvSe2MzQuB
                    merchantRefNum: fc5b62df1202e491475d
                    currencyCode: USD
                    txnTime: '2023-01-27T10:14:26Z'
                    billingDetails:
                      nickName: Home
                      street: TEST
                      city: CA
                      zip: '94404'
                      state: CA
                      country: US
                    customerIp: 10.195.93.117
                    status: PAYABLE
                    amount: 500
                    action: NONE
                    usage: SINGLE_USE
                    timeToLiveSeconds: 299
                    transactionType: PAYMENT
                    executionMode: SYNCHRONOUS
                    card:
                      cardExpiry:
                        month: '10'
                        year: '2025'
                      holderName: Dilip
                      cardType: VI
                      cardBin: '400000'
                      lastDigits: '1026'
                      cardCategory: CREDIT
                      issuingCountry: US
                    authentication:
                      exemptionIndicator: LOW_VALUE_EXEMPTION  
                    returnLinks:
                      - method: GET
                        rel: default
                        href: 'https://usgaminggamblig.com/payment/return/'
                      - method: GET
                        rel: on_completed
                        href: 'https://usgaminggamblig.com/payment/return/success'
                      - method: GET
                        rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                    skip3ds: false
                    threeDs:
                      merchantUrl: 'https://api.qa.paysafe.com/checkout/v2/index.html#/desktop'
                      deviceChannel: BROWSER
                      requestorChallengePreference: NO_PREFERENCE
                      messageCategory: PAYMENT
                      transactionIntent: CHECK_ACCEPTANCE
                      authenticationPurpose: PAYMENT_TRANSACTION
                      orderItemDetails:
                        preOrderItemAvailabilityDate: '2014-01-26'
                        preOrderPurchaseIndicator: MERCHANDISE_AVAILABLE
                        reorderItemsIndicator: FIRST_TIME_ORDER
                        shippingIndicator: SHIP_TO_BILLING_ADDRESS
                      purchasedGiftCardDetails:
                        amount: 1234
                        count: 2
                        currency: USD
                      userAccountDetails:
                        addCardAttemptsForLastDay: 1
                        changedDate: '2010-01-26'
                        changedRange: DURING_TRANSACTION
                        createdDate: '2010-01-26'
                        createdRange: NO_ACCOUNT
                        passwordChangedDate: '2012-01-26'
                        passwordChangedRange: NO_CHANGE
                        suspiciousAccountActivity: true
                        totalPurchasesSixMonthCount: 1
                        transactionCountForPreviousDay: 1
                        transactionCountForPreviousYear: 3
                        shippingDetailsUsage:
                          cardHolderNameMatch: true
                          initialUsageDate: '2014-01-26'
                          initialUsageRange: CURRENT_TRANSACTION
                        userLogin:
                          authenticationMethod: NO_LOGIN
                          data: Some up to 2048 bytes undefined data
                          time: '2014-01-26T10:32:28Z'
                        paymentAccountDetails:
                          createdRange: NO_ACCOUNT
                          createdDate: '2010-01-26'          
                Card  - Original Credit PH Response:
                  value:
                    id: 16ff3d63-035c-4a7a-9382-9ceadfcbe236
                    accountId: '1009688230'
                    paymentType: CARD
                    paymentHandleToken: SC1IlyfnV8trTIX5
                    merchantRefNum: a9b2b8d2b9458c8beeb89dbce669
                    currencyCode: USD
                    txnTime: '2023-04-14T08:26:26Z'
                    billingDetails:
                      nickName: Home
                      street: TEST
                      city: CA
                      zip: '12345'
                      state: CA
                      country: US
                    customerIp: 172.0.0.1
                    status: PAYABLE
                    amount: 100
                    action: NONE
                    usage: SINGLE_USE
                    timeToLiveSeconds: 299
                    transactionType: ORIGINAL_CREDIT
                    executionMode: SYNCHRONOUS
                    card:
                      cardExpiry:
                        month: '10'
                        year: '2025'
                      holderName: Dilip
                      cardType: VI
                      cardBin: '403711'
                      lastDigits: '0001'
                      cardCategory: CREDIT
                      issuingCountry: US
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStore
                      phone: '1234567899'
                    returnLinks:
                      - method: GET
                        rel: default
                        href: 'https://usgaminggamblig.com/payment/return/'
                      - method: GET
                        rel: on_completed
                        href: 'https://usgaminggamblig.com/payment/return/success'
                      - method: GET
                        rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                    skip3ds: false
                GooglePay:
                  value:
                    id: 46b5f358-e45e-44ad-aa64-bb9d7a36a034
                    accountId: '1009688230'
                    paymentType: CARD
                    paymentHandleToken: GMXdmS7wQqffAYR
                    merchantRefNum: 00d25a13-cd87-4bd3-91e6-455285687bd8
                    currencyCode: USD
                    txnTime: '2023-12-01T09:15:35Z'
                    billingDetails:
                      nickName: Home
                      street: steet1
                      city: Azusa
                      zip: 94404
                      state: CA
                      country: US
                    customerIp: 172.0.0.1
                    status: PAYABLE
                    amount: 100
                    action: REDIRECT
                    usage: SINGLE_USE
                    timeToLiveSeconds: 899
                    transactionType: PAYMENT
                    executionMode: SYNCHRONOUS
                    card:
                      holderName: Sai
                      status: ACTIVE
                      cardType: VI
                      cardBin: '411111'
                      lastDigits: '0001'
                      cardCategory: CREDIT
                      issuingCountry: US
                    googlePay:
                      googlePayPaymentToken:
                        paymentMethodData:
                          description: 'Test Card: Visa••••0011'
                          type: CARD
                          info:
                            cardNetwork: VISA
                            cardDetails: '0001'
                            billingAddress:
                              countryCode: US
                              address1: 1600 Amphitheatre Parkway
                              postalCode: '94043'
                              name: Sai
                              locality: Mountain View
                              administrativeArea: CA
                        ephemeralPublicKey: BOXr2ovw0WkbqqSZmeq2IkQ6BcIBh4fP6jP1m5Y97kKoHBerbHB78JNY8iO4tVO8+qJE256qQrwWEi7VAxX9jGo=
                        tag: rVa4/XRrIM/r3GKjHebi1NDwrve04vHsPsydjGTxrto=
                        paymentMethod: CARD_ON_FILE
                        messageId: AH2EjtfpyVHaSf7_qPnqJpquG7yOtWsBLCL1YU9yyRicp99lUIODvhhHImop-9b8gkS4-MF7dtRIVim2pn-kRX0CxwsjAatGAii8FAlTTtJfxTYV03y5Cq62-hKiRJ2FWTLj7xPQjwpt
                        messageExpiration: '1702026885917'
                    skip3ds: true
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStore
                      phone: '1234567899'
                    returnLinks:
                      - rel: default
                        href: 'https://usgaminggamblig.com/payment/return/'
                      - rel: on_completed
                        href: 'https://usgaminggamblig.com/payment/return/success'
                      - rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                Skrill:
                  value:
                    id: cdd1e763-352f-4905-a93f-1838ea467a1e
                    paymentType: SKRILL
                    paymentHandleToken: PHZUY7WtMfbdsx45
                    merchantRefNum: 4bcdd8f8-a936-458a-bb3d-906d0d15d43f
                    currencyCode: USD
                    txnTime: '2023-01-20T03:21:49Z'
                    billingDetails:
                      street: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                    customerIp: 172.0.0.1
                    status: PAYABLE
                    liveMode: false
                    usage: SINGLE_USE
                    action: NONE
                    executionMode: SYNCHRONOUS
                    amount: 500
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStore
                      phone: '12345678'
                    timeToLiveSeconds: 899
                    gatewayResponse:
                      processor: SKRILL_QCO
                    returnLinks:
                      - rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                      - rel: on_cancelled
                        href: 'https://usgaminggamblig.com/payment/return/cancel'
                      - rel: default
                        href: 'https://usgaminggamblig.com/payment/return/success'
                    transactionType: STANDALONE_CREDIT
                    gatewayReconciliationId: c64e6899-0913-447b-891c-ba50179167f2
                    updatedTime: '2023-01-20T03:21:49Z'
                    statusTime: '2023-01-20T03:21:49Z'
                    skrill:
                      consumerId: greg_neteller@mailinator.com
                      emailSubject: Payout for XYZ
                      emailMessage: Note for email here
                    profile:
                      firstName: pawan
                      lastName: Kalyan
                      email: test@paysafe.com
                      phone: '1234567890'
                Neteller:
                  value:
                    id: 43693f8a-f3d8-4669-9b92-a04c2208afb5
                    paymentType: NETELLER
                    paymentHandleToken: PHvKAbawZ24c8Atc
                    merchantRefNum: 1ebe7b20-8d72-49a4-8f32-759d05022d66
                    currencyCode: USD
                    txnTime: '2023-01-20T03:38:46Z'
                    billingDetails:
                      street: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                    customerIp: 172.0.0.1
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.dev.paysafe.com/alternatepayments/v1/redirect?accountId=1230987645&paymentHandleId=43693f8a-f3d8-4669-9b92-a04c2208afb5&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMjMwOTg3NjQ1IiwicHlkIjoiNDM2OTNmOGEtZjNkOC00NjY5LTliOTItYTA0YzIyMDhhZmI1IiwiZXhwIjoxNjc0MTg3NzI2fQ.gWAmeAsbVmkoaVeIwa5R3XvZ6cUDDFwFEZjp6Am6CD0'
                    liveMode: false
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 500
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStore
                      phone: '12345678'
                    timeToLiveSeconds: 899
                    gatewayResponse:
                      orderId: ORD_0f560bfd-286e-430c-b236-49cbc1e13a5e
                      processor: PAYSAFE_DIGITALWALLET
                      sid: c4a1548163e447a7acada4298c65e9d9
                      totalAmount: '500'
                      currency: USD
                      lang: en
                      status: pending
                    returnLinks:
                      - rel: on_cancelled
                        href: 'https://usgaminggamblig.com/payment/return/cancel'
                      - rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                      - rel: default
                        href: 'https://usgaminggamblig.com/payment/return/success'
                    transactionType: PAYMENT
                    gatewayReconciliationId: 1ebe7b20-8d72-49a4-8f32-759d05022d66
                    updatedTime: '2023-01-20T03:38:46Z'
                    statusTime: '2023-01-20T03:38:46Z'
                    neteller:
                      consumerId: neteller.account@example.org
                      recipientDescription: logo_url_alt_text
                      consumerIdLocked: true
                      logoUrl: 'http://www.paysafe.com/icon.jpg'
                Paysafecash:
                  value:
                    id: d336de7e-b1a3-4fa7-93d4-224b51185122
                    paymentType: PAYSAFECASH
                    paymentHandleToken: PH4lXuM1iYSK64xG
                    merchantRefNum: a9318b525273ee3cda79a2f947a9
                    currencyCode: USD
                    txnTime: '2023-01-20T04:16:36Z'
                    billingDetails:
                      street: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                    customerIp: 172.0.0.1
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.dev.paysafe.com/alternatepayments/v1/redirect?accountId=1004201810&paymentHandleId=d336de7e-b1a3-4fa7-93d4-224b51185122&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDA0MjAxODEwIiwicHlkIjoiZDMzNmRlN2UtYjFhMy00ZmE3LTkzZDQtMjI0YjUxMTg1MTIyIiwiZXhwIjoxNjc0MTg5OTk2fQ.dxooBTfOdZJIoAy5M1_xColsA28GlBXepygjQXg-CLY'
                    liveMode: false
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: ASYNCHRONOUS
                    amount: 500
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStore
                      phone: '12345678'
                    timeToLiveSeconds: 599
                    gatewayResponse:
                      processor: PAYSAFECARD
                      id: 6eac96d8-b42e-4bc2-b0c8-b0cf19318113
                    returnLinks:
                      - rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                      - rel: default
                        href: 'https://usgaminggamblig.com/payment/'
                      - rel: on_completed
                        href: 'https://usgaminggamblig.com/payment/return/success'
                    transactionType: PAYMENT
                    gatewayReconciliationId: 6eac96d8-b42e-4bc2-b0c8-b0cf19318113
                    updatedTime: '2023-01-20T04:16:36Z'
                    statusTime: '2023-01-20T04:16:36Z'
                    paysafecash:
                      consumerId: merchantclientid
                      minAgeRestriction: 18
                      kycLevelRestriction: SIMPLE
                      countryRestriction: DE
                Paysafecard:
                  value:
                    id: 29441aa1-dc3d-43a8-8a6e-6557b1cd17d4
                    paymentType: PAYSAFECARD
                    paymentHandleToken: PHtJCQfFEDJtLUTQ
                    merchantRefNum: 6d94efa4-aff3-4a44-bc4c-3889874b9290
                    currencyCode: USD
                    txnTime: '2023-06-23T11:18:43Z'
                    billingDetails:
                      street: 100Queen
                      street2: Unit201
                      city: Toronto
                      zip: M5H2N2
                      country: CA
                    customerIp: 172.0.0.1
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.qa.paysafe.com/alternatepayments/v1/redirect?accountId=1020576590_USD&paymentHandleId=29441aa1-dc3d-43a8-8a6e-6557b1cd17d4&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDIwNTc2NTkwX1VTRCIsInB5ZCI6IjI5NDQxYWExLWRjM2QtNDNhOC04YTZlLTY1NTdiMWNkMTdkNCIsImV4cCI6MTY4NzUyMDkyNH0.4dnBpyR7Wt6edBIC5pQSoAKjsYLk8FpjfU1-RkdWCjU'
                    liveMode: false
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 500
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStore
                      phone: '12345678'
                    timeToLiveSeconds: 599
                    gatewayResponse:
                      processor: PAYSAFECARD
                      id: a3339473-db83-4b43-9af7-d7eaa3557d8c
                    returnLinks:
                      - rel: on_completed
                        href: 'https://usgaminggamblig.com/payment/return/success'
                      - rel: default
                        href: 'https://usgaminggamblig.com/payment/'
                      - rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                    transactionType: PAYMENT
                    gatewayReconciliationId: a3339473-db83-4b43-9af7-d7eaa3557d8c
                    updatedTime: '2023-06-23T11:18:44Z'
                    statusTime: '2023-06-23T11:18:44Z'
                    paysafecard:
                      consumerId: merchantclientid
                      minAgeRestriction: 18
                      kycLevelRestriction: SIMPLE
                      countryRestriction: DE
                Paypal:
                  value:
                    id: e85f125b-a20b-455e-9657-f4a4c2beae3c
                    paymentType: PAYPAL
                    paymentHandleToken: PHdQkDhZBMbWtPYM
                    merchantRefNum: 526531c4-0c55-4762-bd5f-f9608d00108e
                    currencyCode: USD
                    txnTime: '2023-01-20T04:44:08Z'
                    billingDetails:
                      street: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                    customerIp: 172.0.0.1
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.dev.paysafe.com/alternatepayments/v1/redirect?accountId=1002809650&paymentHandleId=e85f125b-a20b-455e-9657-f4a4c2beae3c&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDAyODA5NjUwIiwicHlkIjoiZTg1ZjEyNWItYTIwYi00NTVlLTk2NTctZjRhNGMyYmVhZTNjIiwiZXhwIjoxNjc0MTkxNjUwfQ.wlcuwbjW0VIUFYFnfBGeGbjEPE0NPxG76QJDDl4bFCU'
                    liveMode: false
                    simulator: EXTERNAL
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 500
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStore
                      phone: '12345678'
                    timeToLiveSeconds: 898
                    gatewayResponse:
                      payPalInvoiceId: ef536397-552a-4d84-9c11-cb62140b9fee
                      processor: PAYPAL
                      id: PAYID-MPFBYGQ10P06468N3869351E
                    returnLinks:
                      - rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                      - rel: default
                        href: 'https://usgaminggamblig.com/payment/return/success'
                      - rel: on_cancelled
                        href: 'https://usgaminggamblig.com/payment/return/cancelled'
                    transactionType: PAYMENT
                    gatewayReconciliationId: ef536397-552a-4d84-9c11-cb62140b9fee
                    updatedTime: '2023-01-20T04:44:10Z'
                    statusTime: '2023-01-20T04:44:10Z'
                    shippingDetails:
                      recipientName: John Doe
                      street: 1 Main St
                      city: San Jose
                      state: CA
                      country: US
                      zip: '95131'
                    paypal:
                      consumerId: sb-cpfxo1472281@personal.example.com
                      consumerMessage: Paysafe note to payer for payment
                      recipientDescription: Paysafe store description for payment
                      language: US
                      shippingPreference: SET_PROVIDED_ADDRESS
                      orderDescription: Paysafe Order description for payment
                    profile:
                      firstName: John
                      lastName: Doe
                      email: john.doe@paysafe.com
                Pay by Bank - Payments:
                  value:
                    id: a013a974-accd-4d13-8f63-44d31fd6d7a7
                    paymentType: PAY_BY_BANK
                    paymentHandleToken: PHnTXfZ11icl9U4k
                    merchantRefNum: 22e10bae-2825-4295-bfe1-405380818394
                    currencyCode: USD
                    txnTime: '2024-03-04T10:55:45Z'
                    billingDetails:
                      street: QA Perf Test Street1 0002
                      city: Perf Test City
                      zip: '15132'
                      state: FL
                      country: US
                    customerIp: 172.0.0.1
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: https://api.qa.paysafe.com/alternatepayments/v1/redirect?accountId=1023044860&paymentHandleId=a013a974-accd-4d13-8f63-44d31fd6d7a7&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDIzMDQ0ODYwIiwicHlkIjoiYTAxM2E5NzQtYWNjZC00ZDEzLThmNjMtNDRkMzFmZDZkN2E3IiwiZXhwIjoxNzA5NTUxNTQ2fQ.BJmdtlUo8s4vwCQoJ9P7UP8HKOE1z3tvhoqd6y0rRS4
                    liveMode: false
                    simulator: INTERNAL
                    action: REDIRECT
                    amount: 100
                    timeToLiveSeconds: 898
                    gatewayResponse:
                      processor: PAY_BY_BANK
                      status: INITIATED
                    returnLinks:
                      - rel: on_failed
                        href: http://www.costco.ca
                      - rel: default
                        href: http://www.amazon.ca
                      - rel: on_cancelled
                        href: http://www.bestbuy.ca
                    transactionType: PAYMENT
                    gatewayReconciliationId: e75dc220-0057-47d9-bed8-d1fb7e84fb63
                    updatedTime: '2024-03-04T10:55:46Z'
                    statusTime: '2024-03-04T10:55:46Z'
                    mobileSdk: false
                    payByBank:
                      consumerId: qa_perf_test_consumer_0002
                    profile:
                      firstName: Perf 0002
                      lastName: Cons 0002
                      email: perftestconsumer0002@example.com
                      dateOfBirth:
                        day: 2
                        month: 1
                        year: 1977
                      phone: '9897550002'
                      identityDocuments:
                        - type: SOCIAL_SECURITY
                          documentNumber: "##########"
                          lastDigits: '0002'
                Pay by Bank - verification:
                  value:
                    id: f24a54f3-b470-4a97-8cc5-2facb0831c80
                    paymentType: PAY_BY_BANK
                    paymentHandleToken: PHaWmEY2auHhpCT2
                    merchantRefNum: 3190b7ab-53e8-4acd-942a-bd1822690959
                    currencyCode: USD
                    txnTime: '2024-03-04T10:49:48Z'
                    billingDetails:
                      street: QA Perf Test Street1 0002
                      city: Perf Test City
                      zip: '15132'
                      state: FL
                      country: US
                    customerIp: 172.0.0.1
                    status: FAILED
                    statusReason: USER_NOT_EXIST
                    liveMode: false
                    amount: 100
                    timeToLiveSeconds: 0
                    gatewayResponse:
                      processor: PAY_BY_BANK
                    transactionType: VERIFICATION
                    gatewayReconciliationId: e132fb5d-b538-4c61-be3e-61a640774e87
                    updatedTime: '2024-03-04T10:49:48Z'
                    statusTime: '2024-03-04T10:49:48Z'
                    mobileSdk: false
                    payByBank:
                      consumerId: TEST0003
                    profile:
                      firstName: Perf 0003
                      lastName: Cons 0003
                      email: perftestconsumer0002@example.com
                      identityDocuments:
                        - type: SOCIAL_SECURITY
                          documentNumber: "##########"
                          lastDigits: '0003'
                Pay by Bank - Payments with bankToken:
                  value:
                    id: f50bc6b4-d940-477a-b595-5e4ebdc4a5b0
                    paymentType: PAY_BY_BANK
                    paymentHandleToken: PHLnRxCJ10cCpRrr
                    merchantRefNum: 8d40f3da-c6a6-4706-96a3-d46539690250
                    currencyCode: USD
                    txnTime: '2024-03-11T14:14:19Z'
                    billingDetails:
                      street: QA Perf Test Street1 0002
                      city: Perf Test City
                      zip: '15132'
                      state: FL
                      country: US
                    customerIp: 172.0.0.1
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: https://api.qa.paysafe.com/alternatepayments/v1/redirect?accountId=1023044860&paymentHandleId=f50bc6b4-d940-477a-b595-5e4ebdc4a5b0&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDIzMDQ0ODYwIiwicHlkIjoiZjUwYmM2YjQtZDk0MC00NzdhLWI1OTUtNWU0ZWJkYzRhNWIwIiwiZXhwIjoxNzEwMTY4MjYxfQ.Ddw45x0NnJ8YAhfz3Xx69RJ_HpAojErOls3XbyrZapw
                    liveMode: false
                    simulator: INTERNAL
                    action: REDIRECT
                    amount: 200
                    timeToLiveSeconds: 898
                    gatewayResponse:
                      processor: PAY_BY_BANK
                      status: INITIATED
                    returnLinks:
                      - rel: on_cancelled
                        href: http://www.bestbuy.ca
                      - rel: on_failed
                        href: http://www.costco.ca
                      - rel: default
                        href: http://www.amazon.ca
                    transactionType: PAYMENT
                    gatewayReconciliationId: 396c2827-b0e1-4398-9519-5438885b12a2
                    updatedTime: '2024-03-11T14:14:21Z'
                    statusTime: '2024-03-11T14:14:21Z'
                    payByBank:
                      consumerId: SKTEST1
                      registrationId: bc9abaf3-6665-44e0-bbba-23ac876691fc
                      ach:
                        paymentHandleToken: BAxhRF5GgwY4OBFm
                        routingNumber: '211589828'
                        accountType: CHECKING
                        lastDigits: '92'
                    profile:
                      firstName: SKTEST
                      lastName: SKTEST
                      email: perftestconsumer0002@example.com
                      dateOfBirth:
                        day: 2
                        month: 1
                        year: 1977
                      phone: '9897550002'
                      identityDocuments:
                        - type: SOCIAL_SECURITY
                          documentNumber: "##########"
                          lastDigits: '8777'
                Pay by Bank - SCT:
                  value:
                    id: "58a80575-d22f-4048-9172-9c1cccafabb4"
                    paymentType: "PAY_BY_BANK"
                    paymentHandleToken: "PHBwCq4aC3AGF34T"
                    merchantRefNum: "b8b166d3-450d-41a5-aa98-8a5cbe0947ce"
                    currencyCode: "USD"
                    txnTime: "2024-03-04T10:41:19Z"
                    billingDetails: 
                      street: "QA Perf Test Street1 002"
                      city: "Perf Test City"
                      zip: "15132"
                      state: "FL"
                      country: "US"
                    customerIp: "172.0.0.1"
                    status: "PAYABLE"
                    liveMode: "false"
                    simulator: "EXTERNAL"
                    action: "NONE"
                    amount: "100"
                    timeToLiveSeconds: "899"
                    gatewayResponse: 
                      processor: "PAY_BY_BANK"
                    transactionType: "STANDALONE_CREDIT"
                    gatewayReconciliationId: "8e584e35-804b-432b-b483-a66d0ee0ef85"
                    updatedTime: "2024-03-04T10:41:19Z"
                    statusTime: "2024-03-04T10:41:19Z"
                    mobileSdk: "false"
                    payByBank: 
                      consumerId: "qa_perf_test_consumer_0001"
                      ach: 
                        paymentHandleToken: "BAonftuNrjpdBcY5"
                        routingNumber: "211589828"
                        accountType: "CHECKING"
                        lastDigits: "92"
                    profile: 
                      firstName: "Perf 0001"
                      lastName: "Cons 0001"
                      email: "perftestconsumer0001@example.com"
                      dateOfBirth: 
                        day: "1"
                        month: "1"
                        year: "1977"
                      phone: "9897550001"
                      identityDocuments: 
                        type: "SOCIAL_SECURITY"
                        documentNumber: "##########"
                        lastDigits: "0001"
                Venmo:
                  value:
                    id: 390302ef-674e-4f2e-9260-32d917cd3aa4
                    paymentType: VENMO
                    paymentHandleToken: PHi8YKjhhS18Fz15
                    merchantRefNum: '1674816477288'
                    currencyCode: USD
                    txnTime: '2023-01-27T10:48:22Z'
                    billingDetails:
                      street: '100'
                      street2: Queen Street
                      city: Cupertino
                      zip: '14236'
                      state: CA
                      country: US
                    customerIp: 115.114.129.142
                    status: PAYABLE
                    liveMode: false
                    simulator: EXTERNAL
                    usage: SINGLE_USE
                    action: NONE
                    executionMode: SYNCHRONOUS
                    amount: 100
                    merchantDescriptor:
                      dynamicDescriptor: Test Description
                      phone: '5555345456'
                    timeToLiveSeconds: 899
                    gatewayResponse:
                      brainTreeCustomerId: '657970850'
                      profile:
                        email: sravanthi449g@gmail.com
                        firstName: Sravanthi
                        lastName: Gaddam
                      userName: '@sravanthigaddam'
                      processor: BRAINTREE
                    returnLinks:
                      - rel: default
                        href: 'https://api.test.paysafe.com/checkout/v2/pages/redirect-success.html'
                      - rel: on_completed
                        href: 'https://api.test.paysafe.com/checkout/v2/pages/redirect-success.html'
                      - rel: on_failed
                        href: 'https://api.test.paysafe.com/checkout/v2/pages/redirect-error.html'
                    transactionType: PAYMENT
                    updatedTime: '2023-01-27T10:48:22Z'
                    statusTime: '2023-01-27T10:48:22Z'
                    shippingDetails:
                      recipientName: Vishnu
                      street: 20735 Stevens Creek Blvd
                      street2: Montessori
                      city: Cupertino
                      state: CA
                      country: US
                      zip: '95014'
                    profile:
                      firstName: Sandi
                      lastName: Smith
                      email: sandi.smith@paysafe.com
                      dateOfBirth:
                        day: 23
                        month: 12
                        year: 1990
                      phone: '84632876432'
                    singleUseCustomerToken: SPNE1qAcPZdblQIw
                    venmo:
                      consumerId: sb-cpfxo1472298@personal.example.com
                Vippreferred:
                  value:
                    id: 07b9438a-6c2e-490f-8a25-482670bceb0a
                    paymentType: VIPPREFERRED
                    paymentHandleToken: SVoLrTdpL5vtqprm
                    merchantRefNum: fb388e627314ed346672
                    currencyCode: USD
                    txnTime: '2023-01-20T04:53:10Z'
                    billingDetails:
                      street: street
                      street2: street
                      city: ca
                      zip: '50087'
                      state: CA
                      country: US
                    customerIp: 172.0.0.1
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.dev.paysafe.com/alternatepayments/v1/redirect?accountId=1001570950&paymentHandleId=07b9438a-6c2e-490f-8a25-482670bceb0a&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDAxNTcwOTUwIiwicHlkIjoiMDdiOTQzOGEtNmMyZS00OTBmLThhMjUtNDgyNjcwYmNlYjBhIiwiZXhwIjoxNjc0MTkyMTkyfQ.JERgDEJoZ20fQnHLjpz5q22mfLyYEzZ4wOkNhBkV30I'
                    liveMode: false
                    simulator: EXTERNAL
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 500
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStoreeeeeeeee
                      phone: '1234567899'
                    timeToLiveSeconds: 899
                    returnLinks:
                      - rel: default
                        href: 'https://usgaminggamblig.com/payment/return/success'
                      - rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                    transactionType: PAYMENT
                    updatedTime: '2023-01-20T04:53:12Z'
                    statusTime: '2023-01-20T04:53:12Z'
                    vippreferred:
                      consumerId: '139712817'
                    profile:
                      firstName: Pavan
                      lastName: Kalyan
                      email: test@paysafe.com
                      phone: '1234567890'
                Mazooma - withoutUPO:
                  value:
                    id: 9ca96ebe-dd36-41be-856a-801adb886fb0
                    paymentType: MAZOOMA
                    paymentHandleToken: PH0gRuaOS9Yr7PNQ
                    merchantRefNum: 285a1d9f-ab6b-4851-870b-b725148a5162
                    currencyCode: USD
                    txnTime: '2023-01-20T05:16:36Z'
                    billingDetails:
                      street: Queen Street West
                      street2: Queen Street
                      city: Imphal
                      zip: '14236'
                      state: NY
                      country: US
                    customerIp: 172.0.0.1
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.qa.paysafe.com/alternatepayments/v1/redirect?accountId=1019780270&paymentHandleId=9ca96ebe-dd36-41be-856a-801adb886fb0&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDE5NzgwMjcwIiwicHlkIjoiOWNhOTZlYmUtZGQzNi00MWJlLTg1NmEtODAxYWRiODg2ZmIwIiwiZXhwIjoxNjc0MTkzNTk4fQ.8aeJAMFAwUdOoeGx7SLf9E3q9Eq5OmP7eULbAm7XXsE'
                    liveMode: false
                    simulator: INTERNAL
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 100
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStore
                      phone: '12345678'
                    timeToLiveSeconds: 899
                    gatewayResponse:
                      txnStatus: REDIRECT
                      orderId: Mbm6IyDef
                      id: d1daa8eb-cfad-4ca8-9dc8-155d797b7ca3
                      internalRequestId: '0'
                      processor: MAZOOMA
                      status: SUCCESS
                    returnLinks:
                      - rel: default
                        href: 'http://www.amazon.ca'
                      - rel: on_failed
                        href: 'http://www.costco.ca'
                      - rel: on_cancelled
                        href: 'http://www.bestbuy.ca'
                    transactionType: PAYMENT
                    gatewayReconciliationId: d1daa8eb-cfad-4ca8-9dc8-155d797b7ca3
                    updatedTime: '2023-01-20T05:16:38Z'
                    statusTime: '2023-01-20T05:16:38Z'
                    mazooma:
                      consumerId: Nitin_04
                      registrationId: 597e32ed-414f-4ac4-bab4-ecc9f59238f7
                    profile:
                      firstName: ALBERTA
                      lastName: BOBBETHCHARLESON
                      email: accountholder0@example.com
                      dateOfBirth:
                        day: 23
                        month: 12
                        year: 1990
                      phone: '1234567890'
                Mazooma - withUPO:
                  value:
                    id: 26359efd-7cfb-4014-a13d-1724e3ff17fa
                    paymentHandleToken: SCO3wKcIyLoQbQvw
                    txnTime: '2023-01-19T10:28:00Z'
                    status: INITIATED
                    liveMode: true
                    usage: SINGLE_USE
                    action: NONE
                    executionMode: SYNCHRONOUS
                    timeToLiveSeconds: 0
                    gatewayResponse:
                      id: string
                      processor: string
                      code: string
                      responseCode: string
                      avsCode: string
                      avsResponse: MATCH
                      balanceResponse: string
                      mid: string
                      terminalId: string
                      batchNumber: string
                      seqNumber: string
                      effectiveDate: string
                      financingType: string
                      plan: string
                      gracePeriod: string
                      term: string
                      responseId: string
                      requestId: string
                      description: string
                      authCode: string
                      txnDateTime: string
                      referenceNbr: string
                      responseReasonCode: string
                      cvvVerification: MATCH
                      cvv2Result: string
                      status: string
                      orderId: string
                      profile:
                        id: string
                        status: string
                        merchantCustomerId: string
                        lastName: Chagalamarri
                        locale: en_US
                        firstName: Venkata Suresh
                        dateOfBirth:
                          day: 6
                          month: 5
                          year: 1998
                        email: paysafe@gmail.com
                        phone: '1234567891'
                        mobile: '9846573804'
                        gender: M
                        nationality: Indian
                        identityDocuments:
                          - identityDocuments:
                              - type: SOCIAL_SECURITY
                                documentNumber: SSN123456
                    gatewayReconciliationId: 8e13f7fe-4fd2-4f58-92da-89fc9c2ec29b
                    updatedTime: '2019-08-24T14:15:22Z'
                    statusTime: '2019-08-24T14:15:22Z'
                    links:
                      rel: redirect_payment
                      href: 'http://api.paysafe.com/card/redirect/372b5ee7-6360-4403-b444-164f8f1d2709'
                      method: GET
                    merchantRefNum: merchantRefNum-101
                    transactionType: PAYMENT
                    accountId: '9876543210'
                    paymentType: CARD
                    amount: 500
                    currencyCode: USD
                    paymentHandleTokenFrom: SCyGZDlUuZ9zxjyd
                    profile:
                      id: string
                      status: string
                      merchantCustomerId: string
                      lastName: Chagalamarri
                      locale: en_US
                      firstName: Venkata Suresh
                      dateOfBirth:
                        day: 6
                        month: 5
                        year: 1998
                      email: paysafe@gmail.com
                      phone: '1234567891'
                      mobile: '9846573804'
                      gender: M
                      nationality: Indian
                      identityDocuments:
                        - identityDocuments:
                            - type: SOCIAL_SECURITY
                              documentNumber: SSN123456
                    billingDetails:
                      id: string
                      status: string
                      nickName: Home
                      street: Street
                      street1: street1
                      street2: street2
                      city: Toronto
                      state: 'ON'
                      country: CA
                      zip: M5H 2N2
                      phone: '8765846321'
                    splitpay:
                      linkedAccount: '123124124'
                      amount: 505
                      percent: 5
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStore
                      phone: 999-8888
                    returnLinks:
                      rel: default
                      href: 'https://US_commerce_site/payment/return/success'
                      method: GET
                    customerIp: 111.111.111.111
                    transactionIntent:
                      transactionIntent: CRYPTO_ON_RAMP
                    singleUseCustomerToken: string
                    threeDs:
                      id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      deviceFingerprintingId: 1f6daee1-750a-4361-a6ce-4fb40ad78c57
                      process: true
                      merchantRefNum: string
                      merchantUrl: 'https://api.qa.paysafe.com/checkout/v2/demo-store/index.html'
                      deviceChannel: BROWSER
                      requestorChallengePreference: NO_PREFERENCE
                      messageCategory: PAYMENT
                      transactionIntent: GOODS_OR_SERVICE_PURCHASE
                      authenticationPurpose: PAYMENT_TRANSACTION
                      billingCycle:
                        endDate: '2019-08-24'
                        frequency: 0
                      orderItemDetails:
                        preOrderItemAvailabilityDate: '2019-08-24'
                        preOrderPurchaseIndicator: MERCHANDISE_AVAILABLE
                        reorderItemsIndicator: FIRST_TIME_ORDER
                        shippingIndicator: SHIP_TO_BILLING_ADDRESS
                      purchasedGiftCardDetails:
                        amount: 0
                        count: 0
                        currency: AED
                      userAccountDetails:
                        addCardAttemptsForLastDay: 0
                        changedDate: '2019-08-24'
                        changedRange: DURING_TRANSACTION
                        createdDate: '2019-08-24'
                        createdRange: NO_ACCOUNT
                        passwordChangedDate: '2019-08-24'
                        passwordChangedRange: NO_CHANGE
                        suspiciousAccountActivity: true
                        totalPurchasesSixMonthCount: 0
                        transactionCountForPreviousDay: 999
                        transactionCountForPreviousYear: 999
                        shippingDetailsUsage:
                          cardHolderNameMatch: true
                          initialUsageDate: '2019-08-24'
                          initialUsageRange: CURRENT_TRANSACTION
                        userLogin: string
                        paymentAccountDetails:
                          createdRange: NO_ACCOUNT
                          createdDate: '2019-08-24'
                        priorThreeDSAuthentication:
                          id: string
                          data: string
                          method: string
                          time: '2019-08-24T14:15:22Z'
                        travelDetails:
                          isAirTravel: true
                          airlineCarrier: string
                          departureDate: '2019-08-24'
                          destination: strin
                          origin: strin
                          passengerFirstName: string
                          passengerLastName: string
                      priorThreeDSAuthentication:
                        id: string
                        data: string
                        method: string
                        time: '2019-08-24T14:15:22Z'
                      shippingDetailsUsage:
                        cardHolderNameMatch: true
                        initialUsageDate: '2019-08-24'
                        initialUsageRange: CURRENT_TRANSACTION
                      suspiciousAccountActivity: true
                      totalPurchasesSixMonthCount: 9999
                      transactionCountForPreviousDay: 999
                      transactionCountForPreviousYear: 999
                      travelDetails:
                        isAirTravel: true
                        airlineCarrier: string
                        departureDate: '2019-08-24'
                        destination: strin
                        origin: strin
                        passengerFirstName: string
                        passengerLastName: string
                      userLogin:
                        authenticationMethod: NO_LOGIN
                        data: string
                        time: '2019-08-24T14:15:22Z'
                      browserDetails:
                        acceptHeader: string
                        colorDepthBits: '1'
                        customerIp: string
                        javascriptEnabled: true
                        javaEnabled: true
                        language: string
                        screenHeight: 999999
                        screenWidth: 999999
                        timezoneOffset: 0
                        userAgent: string
                      cavv: string
                      eci: 0
                      status: COMPLETED
                      threeDResult: 'Y'
                      txnTime: string
                      directoryServerTransactionId: c37c955e-2de1-43fd-8c2a-6abbe48bae67
                      threeDSecureVersion: string
                      acsUrl: string
                      payload: string
                      sdkChallengePayload: string
                      xid: string
                      threeDEnrollment: 'Y'
                      maxAuthorizationsForInstalmentPayment: 1
                      electronicDelivery:
                        email: string
                        isElectronicDelivery: true
                      initialPurchaseTime: string
                      force3DS1: true
                    card:
                      id: string
                      lastDigits: stri
                      cardType: AM
                      cardBin: string
                      cardNum: '4111111111111111'
                      cardExpiry:
                        month: 12
                        year: 2022
                      cvv: '123'
                      holderName: Venkata Suresh
                      nickName: Venky
                MBWAY:
                  value:
                    id: 891e328b-e3b1-4001-bd87-fee9722069ba
                    paymentType: MBWAY
                    paymentHandleToken: PHEJPRvbwXCuVD8r
                    merchantRefNum: 1f94971c-b415-4781-841f-6ab866f26527
                    currencyCode: EUR
                    txnTime: '2023-06-09T10:41:57Z'
                    customerIp: 10.195.93.135
                    status: INITIATED
                    links:
                      rel: redirect_payment
                      href: https://api.qa.paysafe.com/alternatepayments/v1/redirect?accountId=1021949450&paymentHandleId=891e328b-e3b1-4001-bd87-fee9722069ba&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDIxOTQ5NDUwIiwicHlkIjoiODkxZTMyOGItZTNiMS00MDAxLWJkODctZmVlOTcyMjA2OWJhIiwiZXhwIjoxNjg2MzA5MTE4fQ.qqONnyn8Q7enm2Rtm9afiHOSd-LU845wKmQCYJRo6WE
                    liveMode: false
                    simulator: EXTERNAL
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 500
                    timeToLiveSeconds: 899
                    gatewayResponse:
                      processor: SKRILL_QCO
                      sid: 9c3050520e819beeec5110301f90e3f9
                    returnLinks:
                      rel: default
                      href: http://www.amazon.ca
                    transactionType: PAYMENT
                    gatewayReconciliationId: c97fdfdc-a0bd-453b-8316-5a0daee9c60a
                    updatedTime: '2023-06-09T10:41:58Z'
                    statusTime: '2023-06-09T10:41:58Z'
                    profile:
                      firstName: John
                      lastName: Cena
                      email: mohan@paysafe.com
                      phone: '8074683324'
                MULTIBANCO:
                  value:
                    id: e54965d9-6625-49df-afde-478d534624fc
                    paymentType: MULTIBANCO
                    paymentHandleToken: PHl4Ba8c4ENf1dtF
                    merchantRefNum: '0845d0df-c78f-4123-ba94-b386dabbf610'
                    currencyCode: EUR
                    txnTime: '2023-06-19T11:26:40Z'
                    customerIp: 115.114.129.142
                    status: INITIATED
                    links:
                      rel: redirect_payment
                      href: https://api.test.paysafe.com/alternatepayments/v1/redirect?accountId=1002670190&paymentHandleId=e54965d9-6625-49df-afde-478d534624fc&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDAyNjcwMTkwIiwicHlkIjoiZTU0OTY1ZDktNjYyNS00OWRmLWFmZGUtNDc4ZDUzNDYyNGZjIiwiZXhwIjoxNjg3MTc1ODAwfQ.FP5ZIPoTz0xMFIo56t1nxKgyVreSUPGaSIvEzsK0YLA
                    liveMode: false
                    simulator: EXTERNAL
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 21000
                    timeToLiveSeconds: 899
                    gatewayResponse:
                      processor: SKRILL_QCO
                      sid: 0b8a3a67c1ee9bd3293fdbb861282f7b
                    returnLinks:
                      rel: default
                      href: http://www.amazon.ca
                    transactionType: PAYMENT
                    gatewayReconciliationId: 0d1bbdd9-06a6-4ccc-9432-0aa315e73cea
                    updatedTime: '2023-06-19T11:26:40Z'
                    statusTime: '2023-06-19T11:26:40Z'
                    profile:
                      firstName: John
                      lastName: Cena
                      email: nagababu@paysafe.com
                Sightline:
                  value:
                    id: 150d3c8a-9ce0-4b15-bac6-b8facb907fa9
                    paymentType: SIGHTLINE
                    paymentHandleToken: SSNYyqHj9OdBWJiz
                    merchantRefNum: 795094ab100432979bae
                    currencyCode: USD
                    txnTime: '2023-01-20T08:25:39Z'
                    billingDetails:
                      street: TEST
                      street2: TEST
                      city: CA
                      zip: '12345'
                      state: CA
                      country: US
                    customerIp: 172.0.0.1
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.qa.paysafe.com/alternatepayments/v1/redirect?accountId=1010804430&paymentHandleId=150d3c8a-9ce0-4b15-bac6-b8facb907fa9&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDEwODA0NDMwIiwicHlkIjoiMTUwZDNjOGEtOWNlMC00YjE1LWJhYzYtYjhmYWNiOTA3ZmE5IiwiZXhwIjoxNjc0MjA0OTQwfQ.V-b4-cGvTSyJy-t8vz06NMMeXVjV9aMaT23LBlQ5_8I'
                    liveMode: false
                    simulator: INTERNAL
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 1500
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStoreeeeeeeee
                      phone: '1234567899'
                    timeToLiveSeconds: 899
                    returnLinks:
                      - rel: default
                        href: 'https://usgaminggamblig.com/payment/return/success'
                      - rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                    transactionType: PAYMENT
                    updatedTime: '2023-01-20T08:25:40Z'
                    statusTime: '2023-01-20T08:25:40Z'
                    sightline:
                      consumerId: '187701588'
                      last4ssn: '1588'
                      canEditSsn: false
                    balanceCheck: false
                    profile:
                      firstName: Pavan
                      lastName: Kalyan
                      email: test@paysafe.com
                      phone: '1234567890'
                Interac_ETransfer - with question and answer:
                  value:
                    id: ce19f4dd-fdcb-460a-b65d-ff0e0c201aee
                    paymentType: INTERAC_ETRANSFER
                    paymentHandleToken: PHSfD6p5sgupRJEI
                    merchantRefNum: 2c2c31b8-49a4-4386-ae2f-c3a4377f6269
                    currencyCode: CAD
                    txnTime: '2023-01-20T08:52:32Z'
                    customerIp: 172.0.0.1
                    status: PAYABLE
                    liveMode: false
                    simulator: EXTERNAL
                    action: NONE
                    amount: 500
                    timeToLiveSeconds: 899
                    gatewayResponse:
                      id: HX27oxf31usMErBh
                      processor: PEOPLE_TRUST
                      status: ACCEPTED
                    transactionType: STANDALONE_CREDIT
                    gatewayReconciliationId: 1a0d517d-f503-4d76-953c-c41107d4b4b0
                    updatedTime: '2023-01-20T08:52:33Z'
                    statusTime: '2023-01-20T08:52:33Z'
                    browserDetails:
                      userCookie: testusercoockie
                    interacEtransfer:
                      consumerId: madhu@paysafe.com
                      question: what is your name
                      answer: MadhuBaddam
                      maxAmount: 500000
                      transferType: ALIAS_REGULAR
                    profile:
                      firstName: Madhu
                      lastName: Baddam
                      email: madhu.baddam@paysafe.com
                      phone: '12345678'
                Rapid Transfer via Skrill Quick Check out:
                  value:
                    id: fa085e78-0648-4cd5-bac5-ac693792cc5b
                    paymentType: RAPID_TRANSFER
                    paymentHandleToken: PH3oMryVULc5ldL3
                    merchantRefNum: 299cc09b-3703-4635-8e28-8e6a680b0bcc
                    currencyCode: EUR
                    txnTime: '2023-01-20T09:05:20Z'
                    billingDetails:
                      street: '71 Cherry Court '
                      city: Southhampton
                      zip: SO53 5PD
                      country: GB
                    customerIp: 73.82.192.17
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.dev.paysafe.com/alternatepayments/v1/redirect?accountId=1005655930&paymentHandleId=fa085e78-0648-4cd5-bac5-ac693792cc5b&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDA1NjU1OTMwIiwicHlkIjoiZmEwODVlNzgtMDY0OC00Y2Q1LWJhYzUtYWM2OTM3OTJjYzViIiwiZXhwIjoxNjc0MjA3MzIwfQ.r0KYxXWDwIvvDYzJRlzi-oj2jDKJLlPhqAygXey1tRg'
                    liveMode: false
                    simulator: INTERNAL
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 3000
                    timeToLiveSeconds: 899
                    gatewayResponse:
                      processor: SKRILL_QCO
                      sid: 23d60758f0594c32b2ee5c69fda67a51
                    returnLinks:
                      - rel: on_completed
                        href: 'http://www.amazon.ca'
                      - rel: default
                        href: 'http://www.amazon.ca'
                      - rel: on_failed
                        href: 'http://www.amazon.ca'
                    transactionType: PAYMENT
                    gatewayReconciliationId: 817bddf1-13dc-4c24-9d7f-5b70faf5c726
                    updatedTime: '2023-01-20T09:05:20Z'
                    statusTime: '2023-01-20T09:05:20Z'
                    rapidTransfer:
                      consumerId: csr_fl@sun-fish.com
                      countryCode: IE
                    profile:
                      firstName: John
                      lastName: Doe
                ACH:
                  value:
                    id: c0a6f5d8-1bd5-4c9e-b3cd-771e4f7f1844
                    accountId: '1003593810'
                    paymentType: ACH
                    paymentHandleToken: SAUr7JDpDWu4mGFq
                    merchantRefNum: '156048571'
                    currencyCode: USD
                    txnTime: '2023-01-20T09:20:57Z'
                    billingDetails:
                      nickName: Home
                      street: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                    customerIp: 172.0.0.1
                    status: PAYABLE
                    amount: 500
                    action: NONE
                    usage: SINGLE_USE
                    timeToLiveSeconds: 899
                    transactionType: PAYMENT
                    executionMode: SYNCHRONOUS
                    ach:
                      routingNumber: '211589828'
                      accountType: SAVINGS
                      accountHolderName: PT ACH HName
                      lastDigits: '02'
                      payMethod: WEB
                    profile:
                      firstName: Poke
                      lastName: mon
                      email: Poke.mon@canada.com
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStoreeeeeeeee
                      phone: '1234567899'
                EFT:
                  value:
                    id: 4af297df-b266-42c5-803f-68211a828f1c
                    accountId: '1013691440'
                    paymentType: EFT
                    paymentHandleToken: SAFAlxMtcEaJxu5t
                    merchantRefNum: '4533863971'
                    currencyCode: CAD
                    txnTime: '2023-01-20T09:36:49Z'
                    billingDetails:
                      nickName: Home
                      street: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                    customerIp: 172.0.0.1
                    status: PAYABLE
                    amount: 500
                    action: NONE
                    usage: SINGLE_USE
                    timeToLiveSeconds: 899
                    transactionType: PAYMENT
                    executionMode: SYNCHRONOUS
                    eft:
                      transitNumber: '22446'
                      institutionId: '001'
                      paymentDescriptor: payment dtr
                      accountHolderName: XYZ Company
                      lastDigits: '12'
                    profile:
                      firstName: Poke
                      lastName: mon
                      email: Poke.mon@canada.com
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStoreeeeeeeee
                      phone: '1234567899'
                Skrill 1-Tap:
                  value:
                    id: 9681ad1b-3f69-433c-9faf-049fdaa3972e
                    paymentType: SKRILL1TAP
                    paymentHandleToken: PHTRvYPsXhwBg1ER
                    merchantRefNum: 92792e35-a4db-4a70-a71f-9bd62fe44296
                    currencyCode: USD
                    txnTime: '2023-01-31T05:30:13Z'
                    billingDetails:
                      street: "100\_Queen"
                      street2: "Unit\_201"
                      city: Toronto
                      zip: "M5H\_2N2"
                      country: CA
                    customerIp: 172.0.0.1
                    status: PAYABLE
                    liveMode: false
                    simulator: EXTERNAL
                    usage: SINGLE_USE
                    action: NONE
                    executionMode: SYNCHRONOUS
                    amount: 100
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStore
                      phone: '12345678'
                    timeToLiveSeconds: 899
                    gatewayResponse:
                      processor: SKRILL_QCO
                      status: '2'
                      sid: 21f2830f11c37e8adcb096d20b63b644
                    returnLinks:
                      - rel: on_processing
                        href: 'https://usgaminggamblig.com/payment/return/on_processing'
                      - rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                      - rel: on_error
                        href: 'https://usgaminggamblig.com/payment/return/on_error'
                      - rel: on_completed
                        href: 'https://usgaminggamblig.com/payment/return/on_completed'
                      - rel: default
                        href: 'https://usgaminggamblig.com/payment/return/success'
                      - rel: on_cancelled
                        href: 'https://usgaminggamblig.com/payment/return/cancelled'
                    transactionType: PAYMENT
                    gatewayReconciliationId: 3195ccea-9d29-4857-bce1-4e9e8dc0b401
                    updatedTime: '2023-01-31T05:30:14Z'
                    statusTime: '2023-01-31T05:30:14Z'
                    skrill1tap:
                      language: EN
                      logoUrl: 'http://www.paysafe.com/icon.jpg'
                      recipientDescription: "Recipient\_Description"
                      consumerId: '1234898'
                      detail1Description: "Detail\_1\_description"
                      detail1Text: "Detail\_1\_text"
                      maxAmount: 500
                    profile:
                      firstName: pawan
                      lastName: Kalyan
                      email: test@paysafe.com
                      phone: '1234567890'
                ApplePay:
                  value:
                    id: 768fbc6d-c525-436d-adbd-d44b49d2ac4c
                    accountId: '1016343990'
                    paymentType: CARD
                    paymentHandleToken: AO1hJ2w6EELYwB3
                    merchantRefNum: e93cf2ef-077c-422d-8942-ff92c5cf8103
                    currencyCode: USD
                    txnTime: '2023-02-10T09:40:58Z'
                    billingDetails:
                      street: 19111 Deertrl
                      city: Alpharetta
                      zip: '30040'
                      state: GA
                      country: US
                    customerIp: 10.195.88.62
                    status: PAYABLE
                    amount: 123
                    action: NONE
                    usage: SINGLE_USE
                    timeToLiveSeconds: 899
                    transactionType: PAYMENT
                    executionMode: SYNCHRONOUS
                    profile:
                      locale: en
                      firstName: Vishnu
                      lastName: Vardhan
                      email: vishnu@paysafe.com
                      phone: '1231231231'
                      dateOfBirth:
                        year: 1990
                        month: 7
                        day: 1
                    card:
                      status: ACTIVE
                      lastDigits: '2732'
                      cardCategory: CREDIT
                    applePay:
                      applePayPaymentToken:
                        token:
                          paymentData:
                            version: EC_v1
                            data: crc1wsCG/2WWXtXQPoOsgtjJoKQSbwc7L6lHgHmLKg30a9Z6l4Ph/xUoEelUxE4G6UNMuxgEn1FRm1zDOcbFKNksI/Q/Nk75bybUWGAilXZ7VghYRjzjvmKKOHTMVkU8vTn4mbQGrTiyAsVPkCuF5BuuEM0C2QiAhDb5Tz5xyna3dv3hAgTLdyDlbI1vs1hBb2KaDUkF9InzYB5BoExMauqn6/8WR8noi0FUHJYejsAmlLgbXi98OnkFcueQwKgXICQmg6l+NR3H28RZRLTTnP1+gdHk3oMiozLliDwY1cBlPz7EQDT4VWUWRIkhJIiKHLb/p/Wn3S+sjbzruIQ007mVx3BTYwNQM+9W01t940sO8w7pbmhmWOAIvsYq/mft6dEFNIQt3Urr0ieF
                            signature: MIAGCSqGSIb3DQEHAqCAMIACAQExDzANBglghkgBZQMEAgEFADCABgkqhkiG9w0BBwEAAKCAMIID5DCCA4ugAwIBAgIIWdihvKr0480wCgYIKoZIzj0EAwIwejEuMCwGA1UEAwwlQXBwbGUgQXBwbGljYXRpb24gSW50ZWdyYXRpb24gQ0EgLSBHMzEmMCQGA1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMB4XDTIxMDQyMDE5MzcwMFoXDTI2MDQxOTE5MzY1OVowYjEoMCYGA1UEAwwfZWNjLXNtcC1icm9rZXItc2lnbl9VQzQtU0FOREJPWDEUMBIGA1UECwwLaU9TIFN5c3RlbXMxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEgjD9q8Oc914gLFDZm0US5jfiqQHdbLPgsc1LUmeY+M9OvegaJajCHkwz3c6OKpbC9q+hkwNFxOh6RCbOlRsSlaOCAhEwggINMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAUI/JJxE+T5O8n5sT2KGw/orv9LkswRQYIKwYBBQUHAQEEOTA3MDUGCCsGAQUFBzABhilodHRwOi8vb2NzcC5hcHBsZS5jb20vb2NzcDA0LWFwcGxlYWljYTMwMjCCAR0GA1UdIASCARQwggEQMIIBDAYJKoZIhvdjZAUBMIH+MIHDBggrBgEFBQcCAjCBtgyBs1JlbGlhbmNlIG9uIHRoaXMgY2VydGlmaWNhdGUgYnkgYW55IHBhcnR5IGFzc3VtZXMgYWNjZXB0YW5jZSBvZiB0aGUgdGhlbiBhcHBsaWNhYmxlIHN0YW5kYXJkIHRlcm1zIGFuZCBjb25kaXRpb25zIG9mIHVzZSwgY2VydGlmaWNhdGUgcG9saWN5IGFuZCBjZXJ0aWZpY2F0aW9uIHByYWN0aWNlIHN0YXRlbWVudHMuMDYGCCsGAQUFBwIBFipodHRwOi8vd3d3LmFwcGxlLmNvbS9jZXJ0aWZpY2F0ZWF1dGhvcml0eS8wNAYDVR0fBC0wKzApoCegJYYjaHR0cDovL2NybC5hcHBsZS5jb20vYXBwbGVhaWNhMy5jcmwwHQYDVR0OBBYEFAIkMAua7u1GMZekplopnkJxghxFMA4GA1UdDwEB/wQEAwIHgDAPBgkqhkiG92NkBh0EAgUAMAoGCCqGSM49BAMCA0cAMEQCIHShsyTbQklDDdMnTFB0xICNmh9IDjqFxcE2JWYyX7yjAiBpNpBTq/ULWlL59gBNxYqtbFCn1ghoN5DgpzrQHkrZgTCCAu4wggJ1oAMCAQICCEltL786mNqXMAoGCCqGSM49BAMCMGcxGzAZBgNVBAMMEkFwcGxlIFJvb3QgQ0EgLSBHMzEmMCQGA1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMB4XDTE0MDUwNjIzNDYzMFoXDTI5MDUwNjIzNDYzMFowejEuMCwGA1UEAwwlQXBwbGUgQXBwbGljYXRpb24gSW50ZWdyYXRpb24gQ0EgLSBHMzEmMCQGA1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE8BcRhBnXZIXVGl4lgQd26ICi7957rk3gjfxLk+EzVtVmWzWuItCXdg0iTnu6CP12F86Iy3a7ZnC+yOgphP9URaOB9zCB9DBGBggrBgEFBQcBAQQ6MDgwNgYIKwYBBQUHMAGGKmh0dHA6Ly9vY3NwLmFwcGxlLmNvbS9vY3NwMDQtYXBwbGVyb290Y2FnMzAdBgNVHQ4EFgQUI/JJxE+T5O8n5sT2KGw/orv9LkswDwYDVR0TAQH/BAUwAwEB/zAfBgNVHSMEGDAWgBS7sN6hWDOImqSKmd6+veuv2sskqzA3BgNVHR8EMDAuMCygKqAohiZodHRwOi8vY3JsLmFwcGxlLmNvbS9hcHBsZXJvb3RjYWczLmNybDAOBgNVHQ8BAf8EBAMCAQYwEAYKKoZIhvdjZAYCDgQCBQAwCgYIKoZIzj0EAwIDZwAwZAIwOs9yg1EWmbGG+zXDVspiv/QX7dkPdU2ijr7xnIFeQreJ+Jj3m1mfmNVBDY+d6cL+AjAyLdVEIbCjBXdsXfM4O5Bn/Rd8LCFtlk/GcmmCEm9U+Hp9G5nLmwmJIWEGmQ8Jkh0AADGCAYwwggGIAgEBMIGGMHoxLjAsBgNVBAMMJUFwcGxlIEFwcGxpY2F0aW9uIEludGVncmF0aW9uIENBIC0gRzMxJjAkBgNVBAsMHUFwcGxlIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUwIIWdihvKr0480wDQYJYIZIAWUDBAIBBQCggZUwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMjEwOTA5MTUxMDIzWjAqBgkqhkiG9w0BCTQxHTAbMA0GCWCGSAFlAwQCAQUAoQoGCCqGSM49BAMCMC8GCSqGSIb3DQEJBDEiBCALhfgr30p4YER31+Gpjqy12gCF3knS1vKEHAFOr41UWjAKBggqhkjOPQQDAgRHMEUCIClcW39OnFDHNA0Klj+f90ydMz8MUz1jIRCWjZl6G5+6AiEApNrnBuLx9Z004GEuG4LBUp1paIuFYG96rdJXq7L9cjUAAAAAAAA=
                            header:
                              transactionId: c852f15513dd58f97b6b4094e3f897087d95d8f1fe08dc00bc39179aae434e31
                              ephemeralPublicKey: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE41aqNv3ogcZU+oMSztrAwyfZJPYZaSLVhObI5FxRwjd609HFwsJ7Fy4lFmSvl4pqwn+gAw5OB8sfpzIfDWuYCQ==
                              publicKeyHash: jaI8zb3+bTPrkEHLe/edIBuRjWbkRm1YKtUXX/FuIRw=
                          paymentMethod:
                            displayName: MasterCard 1470
                            network: MasterCard
                            type: credit
                          transactionIdentifier: C852F15513DD58F97B6B4094E3F897087D95D8F1FE08DC00BC39179AAE434E31
                        billingContact:
                          addressLines:
                            - 19111 Deertrl
                          administrativeArea: ''
                          country: USA
                          countryCode: US
                          familyName: Nasov
                          givenName: Nike
                          locality: Cumming
                          phoneticFamilyName: ''
                          phoneticGivenName: ''
                          postalCode: '30004'
                          subAdministrativeArea: GA
                          subLocality: ''
                    returnLinks:
                      - method: GET
                        rel: on_completed
                        href: 'https://be74-116-50-59-180.ngrok.io/checkout/v2/pages/redirect-success.html'
                      - method: GET
                        rel: on_failed
                        href: 'https://be74-116-50-59-180.ngrok.io/checkout/v2/pages/redirect-error.html'
                      - method: GET
                        rel: default
                        href: 'https://be74-116-50-59-180.ngrok.io/checkout/v2/pages/redirect-success.html'
                    skip3ds: false
                Online Bank Transfer via Safetypay Express:
                  value:
                    id: 2bb8fa2d-09fb-43b1-aa21-5f8225bb0a0e
                    paymentType: ONLINE_BANK_TRANSFER
                    paymentHandleToken: PHN2Gx7nItmtxmTL
                    merchantRefNum: 0a296dc9-1a2e-443b-bc28-6d18293445c1
                    currencyCode: BRL
                    txnTime: '2023-03-14T04:45:42Z'
                    customerIp: 213.208.158.220
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.test.paysafe.com/alternatepayments/v1/redirect?accountId=1002495210&paymentHandleId=2bb8fa2d-09fb-43b1-aa21-5f8225bb0a0e&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDAyNDk1MjEwIiwicHlkIjoiMmJiOGZhMmQtMDlmYi00M2IxLWFhMjEtNWY4MjI1YmIwYTBlIiwiZXhwIjoxNjc4NzcwOTQ0fQ.rc5KYNx6smoTz4jBsbB6ZcWeIcoyl5eJerj-ovCGfo0'
                    liveMode: false
                    simulator: EXTERNAL
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 1000
                    timeToLiveSeconds: 898
                    gatewayResponse:
                      operationId: '0123073466130230'
                      id: 926ce5b0-7978-4c7e-a3d9-16b2f891b589
                      processor: SAFETYPAY
                    returnLinks:
                      - rel: default
                        href: 'https://www.paysafe.com/en/'
                    transactionType: PAYMENT
                    gatewayReconciliationId: 926ce5b0-7978-4c7e-a3d9-16b2f891b589
                    updatedTime: '2023-03-14T04:45:44Z'
                    statusTime: '2023-03-14T04:45:44Z'
                    paymentExpiryMinutes: 15
                    paymentDetails:
                      countryCode: BR
                    profile:
                      email: BRTESTQA202_01@gmail.com
                PIX via Safetypay Express:
                  value:
                    id: d5b72dc1-4f2d-4dad-8299-ba2733073917
                    paymentType: PIX
                    paymentHandleToken: PHWPYAgGyPEnn56C
                    merchantRefNum: 3f5c68c5-ffa1-4e61-9399-9f17d2a0586f
                    currencyCode: BRL
                    txnTime: '2023-03-14T05:08:43Z'
                    customerIp: 213.208.158.220
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.test.paysafe.com/alternatepayments/v1/redirect?accountId=1002495220&paymentHandleId=d5b72dc1-4f2d-4dad-8299-ba2733073917&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDAyNDk1MjIwIiwicHlkIjoiZDViNzJkYzEtNGYyZC00ZGFkLTgyOTktYmEyNzMzMDczOTE3IiwiZXhwIjoxNjc4NzcyMzI0fQ.F0Vv5w9xKezks7Kj8hJ1aYnInyxWZu2aPa3FhLC7jSA'
                    liveMode: false
                    simulator: EXTERNAL
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 500
                    timeToLiveSeconds: 898
                    gatewayResponse:
                      operationId: '0123073466231331'
                      id: 17050834-913d-48aa-901f-fb5a377d3fde
                      processor: SAFETYPAY
                    returnLinks:
                      - rel: default
                        href: 'https://www.paysafe.com/en/'
                    transactionType: PAYMENT
                    gatewayReconciliationId: 17050834-913d-48aa-901f-fb5a377d3fde
                    updatedTime: '2023-03-14T05:08:44Z'
                    statusTime: '2023-03-14T05:08:44Z'
                    paymentExpiryMinutes: 15
                    profile:
                      email: BRPIXQA0220_01@gmail.com
                Khipu via Safetypay Express:
                  value:
                    id: 285cb0a7-58a4-4889-816f-7f4307901ceb
                    paymentType: KHIPU
                    paymentHandleToken: PHLDYzxhki41lc4H
                    merchantRefNum: b7500fd0-626c-41c6-9149-d1a763eb8b48
                    currencyCode: CLP
                    txnTime: '2023-03-14T05:15:01Z'
                    customerIp: 213.208.158.220
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.test.paysafe.com/alternatepayments/v1/redirect?accountId=1002495260&paymentHandleId=285cb0a7-58a4-4889-816f-7f4307901ceb&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDAyNDk1MjYwIiwicHlkIjoiMjg1Y2IwYTctNThhNC00ODg5LTgxNmYtN2Y0MzA3OTAxY2ViIiwiZXhwIjoxNjc4NzcyNzAyfQ.L6of4dOnuo7wBjxJIizrwzsItCOhRzkXEa1AS2gL7kU'
                    liveMode: false
                    simulator: EXTERNAL
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 47000
                    timeToLiveSeconds: 898
                    gatewayResponse:
                      operationId: '0123073466283383'
                      id: 60edc2f9-5c33-4455-ab8c-edbe009a19fa
                      processor: SAFETYPAY
                    returnLinks:
                      - rel: default
                        href: 'http://www.amazon.ca'
                    transactionType: PAYMENT
                    gatewayReconciliationId: 60edc2f9-5c33-4455-ab8c-edbe009a19fa
                    updatedTime: '2023-03-14T05:15:02Z'
                    statusTime: '2023-03-14T05:15:02Z'
                    paymentExpiryMinutes: 15
                    profile:
                      email: CLKHIPU0212_01@gmail.com
                Mach via Safetypay Express:
                  value:
                    id: 8fc01ce1-469e-423d-b232-d915fd0c0158
                    paymentType: MACH
                    paymentHandleToken: PHivZQUor3tAMihh
                    merchantRefNum: 7f9ecf57-f82a-47cd-89cd-d67369b53b9b
                    currencyCode: CLP
                    txnTime: '2023-03-14T05:18:09Z'
                    customerIp: 213.208.158.220
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.test.paysafe.com/alternatepayments/v1/redirect?accountId=1002495250&paymentHandleId=8fc01ce1-469e-423d-b232-d915fd0c0158&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDAyNDk1MjUwIiwicHlkIjoiOGZjMDFjZTEtNDY5ZS00MjNkLWIyMzItZDkxNWZkMGMwMTU4IiwiZXhwIjoxNjc4NzcyODkxfQ.ojD3jqncSz372DTaaA9tCow6LQmY3bTese0To5_vf5M'
                    liveMode: false
                    simulator: EXTERNAL
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 500
                    timeToLiveSeconds: 898
                    gatewayResponse:
                      operationId: '0123073466297397'
                      id: b0c70d4c-3f90-4fd9-be0e-393fcac48528
                      processor: SAFETYPAY
                    returnLinks:
                      - rel: default
                        href: 'http://www.amazon.ca'
                    transactionType: PAYMENT
                    gatewayReconciliationId: b0c70d4c-3f90-4fd9-be0e-393fcac48528
                    updatedTime: '2023-03-14T05:18:11Z'
                    statusTime: '2023-03-14T05:18:11Z'
                    paymentExpiryMinutes: 15
                    profile:
                      email: CLMACH0212_01@gmail.com
                Boleto Bancario via Safetypay Express:
                  value:
                    id: be8b6064-2bf2-4e4b-88e8-ed1b6a37e1fd
                    paymentType: BOLETO_BANCARIO
                    paymentHandleToken: PHxTXOEU9AAOErZc
                    merchantRefNum: 6708dd07-088d-4e63-a928-f2971ed07962
                    currencyCode: BRL
                    txnTime: '2023-03-14T05:22:09Z'
                    customerIp: 213.208.158.220
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.test.paysafe.com/alternatepayments/v1/redirect?accountId=1002622940&paymentHandleId=be8b6064-2bf2-4e4b-88e8-ed1b6a37e1fd&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDAyNjIyOTQwIiwicHlkIjoiYmU4YjYwNjQtMmJmMi00ZTRiLTg4ZTgtZWQxYjZhMzdlMWZkIiwiZXhwIjoxNjc4NzczMTMwfQ.4dVPogQVZR62bhFCeNe5Gu-yRBiGxRKmkfUsgyrWU1k'
                    liveMode: false
                    simulator: EXTERNAL
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 500
                    timeToLiveSeconds: 898
                    gatewayResponse:
                      operationId: '0123073466306406'
                      id: 8cf7e476-e5c8-4fa3-bb8e-c1048ae61f36
                      processor: SAFETYPAY
                    returnLinks:
                      - rel: default
                        href: 'http://www.amazon.ca'
                      - rel: on_failed
                        href: 'http://www.costco.ca'
                      - rel: on_cancelled
                        href: 'http://www.bestbuy.ca'
                    transactionType: PAYMENT
                    gatewayReconciliationId: 8cf7e476-e5c8-4fa3-bb8e-c1048ae61f36
                    updatedTime: '2023-03-14T05:22:10Z'
                    statusTime: '2023-03-14T05:22:10Z'
                    paymentExpiryMinutes: 15
                    profile:
                      email: brlspcash@gmail.com
                Safetypaycash via Safetypay Express:
                  value:
                    id: 42517a01-94a7-484d-9040-5a09c0898101
                    paymentType: SAFETYPAY_CASH
                    paymentHandleToken: PH72waPqDtaxmRzj
                    merchantRefNum: 57e8b2d3-ad2c-4a79-ae1f-7e7752cbe8d0
                    currencyCode: BRL
                    txnTime: '2023-03-14T05:24:56Z'
                    customerIp: 213.208.158.220
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.test.paysafe.com/alternatepayments/v1/redirect?accountId=1002622950&paymentHandleId=42517a01-94a7-484d-9040-5a09c0898101&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDAyNjIyOTUwIiwicHlkIjoiNDI1MTdhMDEtOTRhNy00ODRkLTkwNDAtNWEwOWMwODk4MTAxIiwiZXhwIjoxNjc4NzczMjk4fQ.zcnmnkOHeEVYzmqTr-X94XY-p5WJX8ZsRS-k114i1oU'
                    liveMode: false
                    simulator: EXTERNAL
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 500
                    timeToLiveSeconds: 898
                    gatewayResponse:
                      operationId: '0123073466308408'
                      id: 7401a4ac-9737-4c9b-bd7a-3a95bceecccd
                      processor: SAFETYPAY
                    returnLinks:
                      - rel: default
                        href: 'http://www.amazon.ca'
                    transactionType: PAYMENT
                    gatewayReconciliationId: 7401a4ac-9737-4c9b-bd7a-3a95bceecccd
                    updatedTime: '2023-03-14T05:24:58Z'
                    statusTime: '2023-03-14T05:24:58Z'
                    safetypayCash:
                      countryCode: BR
                    profile:
                      email: brlspcash@gmail.com
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
    get:
      summary: Get Payment Handle Using Merchant Reference Number
      operationId: get-payment-handle-using-merchant-reference-number
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentHandleListWithOptionalApplePayOrNetworkToken'
              examples:
                Look Up Payment Handle Using Merchant Reference Number:
                  value:
                    meta:
                      numberOfRecords: 1
                      limit: 10
                      page: 1
                    paymentHandles:
                      - id: 64b614b8-753d-4404-b491-2dd8b817c40b
                        paymentType: SKRILL
                        paymentHandleToken: PHsLl14Tfi4l22gs
                        merchantRefNum: ' merchantRefNum-321'
                        currencyCode: USD
                        dupCheck: true
                        txnTime: '2019-06-24T14:18:33.000+0000'
                        billingDetails:
                          street: 100 Queen
                          street2: Unit 201
                          city: Toronto
                          zip: M5H 2N2
                          country: CA
                        customerIp: 172.0.0.1
                        status: INITIATED
                        links:
                          - rel: redirect_payment
                            href: 'https://api.qa.paysafe.com/alternatepayments/v1/redirect?accountId=1010608990&paymentHandleId=64b614b8-753d-4404-b491-2dd8b817c40b&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDEwNjA4OTkwIiwicHlkIjoiNjRiNjE0YjgtNzUzZC00NDA0LWI0OTEtMmRkOGI4MTdjNDBiIiwiZXhwIjoxNTYxMzg3NzEzfQ.LGZ8K3yYqR0_J7iNicVCfcmZFIo8xkiX0hg4WpnHm_c'
                        liveMode: true
                        usage: SINGLE_USE
                        action: REDIRECT
                        executionMode: SYNCHRONOUS
                        amount: 100
                        merchantDescriptor:
                          dynamicDescriptor: OnlineStore
                          phone: '12345678'
                        timeToLiveSeconds: 899
                        gatewayResponse:
                          sid: 9e55a0ac44474c2d9f3813d7f65b07c4
                          processor: SKRILL_QCO
                        returnLinks:
                          - rel: on_completed
                            href: 'https://usgaminggamblig/payment/return/success'
                            method: GET
                          - rel: on_failed
                            href: 'https://usgaminggamblig/payment/return/failed'
                            method: GET
                        transactionType: PAYMENT
                        updatedTime: '2019-06-24T14:18:33Z'
                        statusTime: '2019-06-24T14:18:33Z'
      parameters:
        - schema:
            type: string
            example: 64b614b8-753d-4404-b491-2dd8b817c40b
          in: query
          name: merchantRefNum
          description: 'This is the merchantRefNum used in the [original Payment Handle creation request](/operations/create-payment-handle).'
          required: true
        - schema:
            type: number
            default: 10
            maximum: 50
            example: 32
          in: query
          name: limit
          description: This is the total number of records to return.
        - schema:
            type: number
            default: 0
            example: 0
          in: query
          name: offset
          description: 'This is the starting position, where 0 is the first record.'
        - schema:
            type: string
            format: date
            example: '2022-11-18'
          in: query
          name: startDate
          description: This is the start date in UTC.  Default = 30 days before the endDate.
        - schema:
            type: string
            format: date
            example: '2022-12-19'
          in: query
          name: endDate
          description: ' This is the end date in UTC. Default = current date and time.'
      description: 'Click on **Send API Request** after entering the required data, to see how to lookup a Payment Handle using the merchant reference number used in the [original request.](/operations/create-payment-handle)'
      tags:
        - Payment Handles
  /v1/singleusepaymenthandles:
    post:
      summary: Create a Single-Use Payment Handle
      operationId: create-single-use-payment-handle
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentHandleWithOptionalNetworkTokenOrApplePay'
              examples:
                Card:
                  value:
                    id: b5c30668-5724-4499-9b9a-c326c943d31c
                    accountId: '1009688230'
                    paymentType: CARD
                    paymentHandleToken: SC2INoYvSe2MzQuB
                    merchantRefNum: fc5b62df1202e491475d
                    currencyCode: USD
                    txnTime: '2023-01-27T10:14:26Z'
                    billingDetails:
                      nickName: Home
                      street: TEST
                      city: CA
                      zip: '94404'
                      state: CA
                      country: US
                    customerIp: 10.195.93.117
                    status: PAYABLE
                    amount: 500
                    action: NONE
                    usage: SINGLE_USE
                    timeToLiveSeconds: 299
                    transactionType: PAYMENT
                    executionMode: SYNCHRONOUS
                    card:
                      cardExpiry:
                        month: '10'
                        year: '2025'
                      holderName: Dilip
                      cardType: VI
                      cardBin: '400000'
                      lastDigits: '1026'
                      cardCategory: CREDIT
                      issuingCountry: US
                    returnLinks:
                      - method: GET
                        rel: default
                        href: 'https://usgaminggamblig.com/payment/return/'
                      - method: GET
                        rel: on_completed
                        href: 'https://usgaminggamblig.com/payment/return/success'
                      - method: GET
                        rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                    skip3ds: false
                    threeDs:
                      merchantUrl: 'https://api.qa.paysafe.com/checkout/v2/index.html#/desktop'
                      deviceChannel: BROWSER
                      requestorChallengePreference: NO_PREFERENCE
                      messageCategory: PAYMENT
                      transactionIntent: CHECK_ACCEPTANCE
                      authenticationPurpose: PAYMENT_TRANSACTION
                      orderItemDetails:
                        preOrderItemAvailabilityDate: '2014-01-26'
                        preOrderPurchaseIndicator: MERCHANDISE_AVAILABLE
                        reorderItemsIndicator: FIRST_TIME_ORDER
                        shippingIndicator: SHIP_TO_BILLING_ADDRESS
                      purchasedGiftCardDetails:
                        amount: 1234
                        count: 2
                        currency: USD
                      userAccountDetails:
                        addCardAttemptsForLastDay: 1
                        changedDate: '2010-01-26'
                        changedRange: DURING_TRANSACTION
                        createdDate: '2010-01-26'
                        createdRange: NO_ACCOUNT
                        passwordChangedDate: '2012-01-26'
                        passwordChangedRange: NO_CHANGE
                        suspiciousAccountActivity: true
                        totalPurchasesSixMonthCount: 1
                        transactionCountForPreviousDay: 1
                        transactionCountForPreviousYear: 3
                        shippingDetailsUsage:
                          cardHolderNameMatch: true
                          initialUsageDate: '2014-01-26'
                          initialUsageRange: CURRENT_TRANSACTION
                        userLogin:
                          authenticationMethod: NO_LOGIN
                          data: Some up to 2048 bytes undefined data
                          time: '2014-01-26T10:32:28Z'
                        paymentAccountDetails:
                          createdRange: NO_ACCOUNT
                          createdDate: '2010-01-26'
                Card - With ThreeDs Exemption:
                  value:
                    id: b5c30668-5724-4499-9b9a-c326c943d31c
                    accountId: '1009688230'
                    paymentType: CARD
                    paymentHandleToken: SC2INoYvSe2MzQuB
                    merchantRefNum: fc5b62df1202e491475d
                    currencyCode: USD
                    txnTime: '2023-01-27T10:14:26Z'
                    billingDetails:
                      nickName: Home
                      street: TEST
                      city: CA
                      zip: '94404'
                      state: CA
                      country: US
                    customerIp: 10.195.93.117
                    status: PAYABLE
                    amount: 500
                    action: NONE
                    usage: SINGLE_USE
                    timeToLiveSeconds: 299
                    transactionType: PAYMENT
                    executionMode: SYNCHRONOUS
                    card:
                      cardExpiry:
                        month: '10'
                        year: '2025'
                      holderName: Dilip
                      cardType: VI
                      cardBin: '400000'
                      lastDigits: '1026'
                      cardCategory: CREDIT
                      issuingCountry: US
                    returnLinks:
                      - method: GET
                        rel: default
                        href: 'https://usgaminggamblig.com/payment/return/'
                      - method: GET
                        rel: on_completed
                        href: 'https://usgaminggamblig.com/payment/return/success'
                      - method: GET
                        rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                    skip3ds: false
                    authentication:
                      exemptionIndicator: LOW_VALUE_EXEMPTION
                    threeDs:
                      merchantUrl: 'https://api.qa.paysafe.com/checkout/v2/index.html#/desktop'
                      deviceChannel: BROWSER
                      requestorChallengePreference: NO_PREFERENCE
                      messageCategory: PAYMENT
                      transactionIntent: CHECK_ACCEPTANCE
                      authenticationPurpose: PAYMENT_TRANSACTION
                      orderItemDetails:
                        preOrderItemAvailabilityDate: '2014-01-26'
                        preOrderPurchaseIndicator: MERCHANDISE_AVAILABLE
                        reorderItemsIndicator: FIRST_TIME_ORDER
                        shippingIndicator: SHIP_TO_BILLING_ADDRESS
                      purchasedGiftCardDetails:
                        amount: 1234
                        count: 2
                        currency: USD
                      userAccountDetails:
                        addCardAttemptsForLastDay: 1
                        changedDate: '2010-01-26'
                        changedRange: DURING_TRANSACTION
                        createdDate: '2010-01-26'
                        createdRange: NO_ACCOUNT
                        passwordChangedDate: '2012-01-26'
                        passwordChangedRange: NO_CHANGE
                        suspiciousAccountActivity: true
                        totalPurchasesSixMonthCount: 1
                        transactionCountForPreviousDay: 1
                        transactionCountForPreviousYear: 3
                        shippingDetailsUsage:
                          cardHolderNameMatch: true
                          initialUsageDate: '2014-01-26'
                          initialUsageRange: CURRENT_TRANSACTION
                        userLogin:
                          authenticationMethod: NO_LOGIN
                          data: Some up to 2048 bytes undefined data
                          time: '2014-01-26T10:32:28Z'
                        paymentAccountDetails:
                          createdRange: NO_ACCOUNT
                          createdDate: '2010-01-26'
                GooglePay:
                  value:
                    id: 46b5f358-e45e-44ad-aa64-bb9d7a36a034
                    accountId: '1009688230'
                    paymentType: CARD
                    paymentHandleToken: GMXdmS7wQqffAYR
                    merchantRefNum: 00d25a13-cd87-4bd3-91e6-455285687bd8
                    currencyCode: USD
                    txnTime: '2023-12-01T09:15:35Z'
                    billingDetails:
                      nickName: Home
                      street: steet1
                      city: Azusa
                      zip: 94404
                      state: CA
                      country: US
                    customerIp: 172.0.0.1
                    status: PAYABLE
                    amount: 100
                    action: REDIRECT
                    usage: SINGLE_USE
                    timeToLiveSeconds: 899
                    transactionType: PAYMENT
                    executionMode: SYNCHRONOUS
                    card:
                      holderName: Sai
                      status: ACTIVE
                      cardType: VI
                      cardBin: '411111'
                      lastDigits: '0001'
                      cardCategory: CREDIT
                    googlePay:
                      googlePayPaymentToken:
                        paymentMethodData:
                          description: 'Test Card: Visa••••0011'
                          type: CARD
                          info:
                            cardNetwork: VISA
                            cardDetails: '0001'
                            billingAddress:
                              countryCode: US
                              address1: 1600 Amphitheatre Parkway
                              postalCode: '94043'
                              name: Sai
                              locality: Mountain View
                              administrativeArea: CA
                        ephemeralPublicKey: BOXr2ovw0WkbqqSZmeq2IkQ6BcIBh4fP6jP1m5Y97kKoHBerbHB78JNY8iO4tVO8+qJE256qQrwWEi7VAxX9jGo=
                        tag: rVa4/XRrIM/r3GKjHebi1NDwrve04vHsPsydjGTxrto=
                        paymentMethod: CARD_ON_FILE
                        messageId: AH2EjtfpyVHaSf7_qPnqJpquG7yOtWsBLCL1YU9yyRicp99lUIODvhhHImop-9b8gkS4-MF7dtRIVim2pn-kRX0CxwsjAatGAii8FAlTTtJfxTYV03y5Cq62-hKiRJ2FWTLj7xPQjwpt
                        messageExpiration: '1702026885917'
                    skip3ds: true
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStore
                      phone: '1234567899'
                    returnLinks:
                      - rel: default
                        href: 'https://usgaminggamblig.com/payment/return/'
                      - rel: on_completed
                        href: 'https://usgaminggamblig.com/payment/return/success'
                      - rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                Skrill:
                  value:
                    id: cdd1e763-352f-4905-a93f-1838ea467a1e
                    paymentType: SKRILL
                    paymentHandleToken: PHZUY7WtMfbdsx45
                    merchantRefNum: 4bcdd8f8-a936-458a-bb3d-906d0d15d43f
                    currencyCode: USD
                    txnTime: '2023-01-20T03:21:49Z'
                    billingDetails:
                      street: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                    customerIp: 172.0.0.1
                    status: PAYABLE
                    liveMode: false
                    usage: SINGLE_USE
                    action: NONE
                    executionMode: SYNCHRONOUS
                    amount: 500
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStore
                      phone: '12345678'
                    timeToLiveSeconds: 899
                    gatewayResponse:
                      processor: SKRILL_QCO
                    returnLinks:
                      - rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                      - rel: on_cancelled
                        href: 'https://usgaminggamblig.com/payment/return/cancel'
                      - rel: default
                        href: 'https://usgaminggamblig.com/payment/return/success'
                    transactionType: STANDALONE_CREDIT
                    gatewayReconciliationId: c64e6899-0913-447b-891c-ba50179167f2
                    updatedTime: '2023-01-20T03:21:49Z'
                    statusTime: '2023-01-20T03:21:49Z'
                    skrill:
                      consumerId: greg_neteller@mailinator.com
                      emailSubject: Payout for XYZ
                      emailMessage: Note for email here
                    profile:
                      firstName: pawan
                      lastName: Kalyan
                      email: test@paysafe.com
                      phone: '1234567890'
                Neteller:
                  value:
                    id: 43693f8a-f3d8-4669-9b92-a04c2208afb5
                    paymentType: NETELLER
                    paymentHandleToken: PHvKAbawZ24c8Atc
                    merchantRefNum: 1ebe7b20-8d72-49a4-8f32-759d05022d66
                    currencyCode: USD
                    txnTime: '2023-01-20T03:38:46Z'
                    billingDetails:
                      street: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                    customerIp: 172.0.0.1
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.dev.paysafe.com/alternatepayments/v1/redirect?accountId=1230987645&paymentHandleId=43693f8a-f3d8-4669-9b92-a04c2208afb5&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMjMwOTg3NjQ1IiwicHlkIjoiNDM2OTNmOGEtZjNkOC00NjY5LTliOTItYTA0YzIyMDhhZmI1IiwiZXhwIjoxNjc0MTg3NzI2fQ.gWAmeAsbVmkoaVeIwa5R3XvZ6cUDDFwFEZjp6Am6CD0'
                    liveMode: false
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 500
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStore
                      phone: '12345678'
                    timeToLiveSeconds: 899
                    gatewayResponse:
                      orderId: ORD_0f560bfd-286e-430c-b236-49cbc1e13a5e
                      processor: PAYSAFE_DIGITALWALLET
                      sid: c4a1548163e447a7acada4298c65e9d9
                      totalAmount: '500'
                      currency: USD
                      lang: en
                      status: pending
                    returnLinks:
                      - rel: on_cancelled
                        href: 'https://usgaminggamblig.com/payment/return/cancel'
                      - rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                      - rel: default
                        href: 'https://usgaminggamblig.com/payment/return/success'
                    transactionType: PAYMENT
                    gatewayReconciliationId: 1ebe7b20-8d72-49a4-8f32-759d05022d66
                    updatedTime: '2023-01-20T03:38:46Z'
                    statusTime: '2023-01-20T03:38:46Z'
                    neteller:
                      consumerId: neteller.account@example.org
                      recipientDescription: logo_url_alt_text
                      consumerIdLocked: true
                      logoUrl: 'http://www.paysafe.com/icon.jpg'
                Paysafecash:
                  value:
                    id: d336de7e-b1a3-4fa7-93d4-224b51185122
                    paymentType: PAYSAFECASH
                    paymentHandleToken: PH4lXuM1iYSK64xG
                    merchantRefNum: a9318b525273ee3cda79a2f947a9
                    currencyCode: USD
                    txnTime: '2023-01-20T04:16:36Z'
                    billingDetails:
                      street: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                    customerIp: 172.0.0.1
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.dev.paysafe.com/alternatepayments/v1/redirect?accountId=1004201810&paymentHandleId=d336de7e-b1a3-4fa7-93d4-224b51185122&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDA0MjAxODEwIiwicHlkIjoiZDMzNmRlN2UtYjFhMy00ZmE3LTkzZDQtMjI0YjUxMTg1MTIyIiwiZXhwIjoxNjc0MTg5OTk2fQ.dxooBTfOdZJIoAy5M1_xColsA28GlBXepygjQXg-CLY'
                    liveMode: false
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: ASYNCHRONOUS
                    amount: 500
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStore
                      phone: '12345678'
                    timeToLiveSeconds: 599
                    gatewayResponse:
                      processor: PAYSAFECARD
                      id: 6eac96d8-b42e-4bc2-b0c8-b0cf19318113
                    returnLinks:
                      - rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                      - rel: default
                        href: 'https://usgaminggamblig.com/payment/'
                      - rel: on_completed
                        href: 'https://usgaminggamblig.com/payment/return/success'
                    transactionType: PAYMENT
                    gatewayReconciliationId: 6eac96d8-b42e-4bc2-b0c8-b0cf19318113
                    updatedTime: '2023-01-20T04:16:36Z'
                    statusTime: '2023-01-20T04:16:36Z'
                    paysafecash:
                      consumerId: merchantclientid
                      minAgeRestriction: 18
                      kycLevelRestriction: SIMPLE
                      countryRestriction: DE
                Paysafecard:
                  value:
                    id: 26359efd-7cfb-4014-a13d-1724e3ff17fa
                    paymentHandleToken: SCO3wKcIyLoQbQvw
                    txnTime: '2023-01-19T10:28:00Z'
                    status: INITIATED
                    liveMode: true
                    usage: SINGLE_USE
                    action: NONE
                    executionMode: SYNCHRONOUS
                    timeToLiveSeconds: 0
                    gatewayResponse:
                      id: string
                      processor: string
                      code: string
                      responseCode: string
                      avsCode: string
                      avsResponse: MATCH
                      balanceResponse: string
                      mid: string
                      terminalId: string
                      batchNumber: string
                      seqNumber: string
                      effectiveDate: string
                      financingType: string
                      plan: string
                      gracePeriod: string
                      term: string
                      responseId: string
                      requestId: string
                      description: string
                      authCode: string
                      txnDateTime: string
                      referenceNbr: string
                      responseReasonCode: string
                      cvvVerification: MATCH
                      cvv2Result: string
                      status: string
                      orderId: string
                      profile:
                        id: string
                        status: string
                        merchantCustomerId: string
                        lastName: Chagalamarri
                        locale: en_US
                        firstName: Venkata Suresh
                        dateOfBirth:
                          day: 6
                          month: 5
                          year: 1998
                        email: paysafe@gmail.com
                        phone: '1234567891'
                        mobile: '9846573804'
                        gender: M
                        nationality: Indian
                        identityDocuments:
                          - identityDocuments:
                              - type: SOCIAL_SECURITY
                                documentNumber: SSN123456
                    gatewayReconciliationId: 8e13f7fe-4fd2-4f58-92da-89fc9c2ec29b
                    updatedTime: '2019-08-24T14:15:22Z'
                    statusTime: '2019-08-24T14:15:22Z'
                    links:
                      rel: redirect_payment
                      href: 'http://api.paysafe.com/card/redirect/372b5ee7-6360-4403-b444-164f8f1d2709'
                      method: GET
                    merchantRefNum: merchantRefNum-101
                    transactionType: PAYMENT
                    accountId: '9876543210'
                    paymentType: CARD
                    amount: 500
                    currencyCode: USD
                    paymentHandleTokenFrom: SCyGZDlUuZ9zxjyd
                    profile:
                      id: string
                      status: string
                      merchantCustomerId: string
                      lastName: Chagalamarri
                      locale: en_US
                      firstName: Venkata Suresh
                      dateOfBirth:
                        day: 6
                        month: 5
                        year: 1998
                      email: paysafe@gmail.com
                      phone: '1234567891'
                      mobile: '9846573804'
                      gender: M
                      nationality: Indian
                      identityDocuments:
                        - identityDocuments:
                            - type: SOCIAL_SECURITY
                              documentNumber: SSN123456
                    billingDetails:
                      id: string
                      status: string
                      nickName: Home
                      street: Street
                      street1: street1
                      street2: street2
                      city: Toronto
                      state: 'ON'
                      country: CA
                      zip: M5H 2N2
                      phone: '8765846321'
                    splitpay:
                      linkedAccount: '123124124'
                      amount: 505
                      percent: 5
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStore
                      phone: 999-8888
                    returnLinks:
                      rel: default
                      href: 'https://US_commerce_site/payment/return/success'
                      method: GET
                    customerIp: 111.111.111.111
                    transactionIntent:
                      transactionIntent: CRYPTO_ON_RAMP
                    singleUseCustomerToken: string
                    threeDs:
                      id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      deviceFingerprintingId: 1f6daee1-750a-4361-a6ce-4fb40ad78c57
                      process: true
                      merchantRefNum: string
                      merchantUrl: 'https://api.qa.paysafe.com/checkout/v2/demo-store/index.html'
                      deviceChannel: BROWSER
                      requestorChallengePreference: NO_PREFERENCE
                      messageCategory: PAYMENT
                      transactionIntent: GOODS_OR_SERVICE_PURCHASE
                      authenticationPurpose: PAYMENT_TRANSACTION
                      billingCycle:
                        endDate: '2019-08-24'
                        frequency: 0
                      orderItemDetails:
                        preOrderItemAvailabilityDate: '2019-08-24'
                        preOrderPurchaseIndicator: MERCHANDISE_AVAILABLE
                        reorderItemsIndicator: FIRST_TIME_ORDER
                        shippingIndicator: SHIP_TO_BILLING_ADDRESS
                      purchasedGiftCardDetails:
                        amount: 0
                        count: 0
                        currency: AED
                      userAccountDetails:
                        addCardAttemptsForLastDay: 0
                        changedDate: '2019-08-24'
                        changedRange: DURING_TRANSACTION
                        createdDate: '2019-08-24'
                        createdRange: NO_ACCOUNT
                        passwordChangedDate: '2019-08-24'
                        passwordChangedRange: NO_CHANGE
                        suspiciousAccountActivity: true
                        totalPurchasesSixMonthCount: 0
                        transactionCountForPreviousDay: 999
                        transactionCountForPreviousYear: 999
                        shippingDetailsUsage:
                          cardHolderNameMatch: true
                          initialUsageDate: '2019-08-24'
                          initialUsageRange: CURRENT_TRANSACTION
                        userLogin: string
                        paymentAccountDetails:
                          createdRange: NO_ACCOUNT
                          createdDate: '2019-08-24'
                        priorThreeDSAuthentication:
                          id: string
                          data: string
                          method: string
                          time: '2019-08-24T14:15:22Z'
                        travelDetails:
                          isAirTravel: true
                          airlineCarrier: string
                          departureDate: '2019-08-24'
                          destination: strin
                          origin: strin
                          passengerFirstName: string
                          passengerLastName: string
                      priorThreeDSAuthentication:
                        id: string
                        data: string
                        method: string
                        time: '2019-08-24T14:15:22Z'
                      shippingDetailsUsage:
                        cardHolderNameMatch: true
                        initialUsageDate: '2019-08-24'
                        initialUsageRange: CURRENT_TRANSACTION
                      suspiciousAccountActivity: true
                      totalPurchasesSixMonthCount: 9999
                      transactionCountForPreviousDay: 999
                      transactionCountForPreviousYear: 999
                      travelDetails:
                        isAirTravel: true
                        airlineCarrier: string
                        departureDate: '2019-08-24'
                        destination: strin
                        origin: strin
                        passengerFirstName: string
                        passengerLastName: string
                      userLogin:
                        authenticationMethod: NO_LOGIN
                        data: string
                        time: '2019-08-24T14:15:22Z'
                      browserDetails:
                        acceptHeader: string
                        colorDepthBits: '1'
                        customerIp: string
                        javascriptEnabled: true
                        javaEnabled: true
                        language: string
                        screenHeight: 999999
                        screenWidth: 999999
                        timezoneOffset: 0
                        userAgent: string
                      cavv: string
                      eci: 0
                      status: COMPLETED
                      threeDResult: 'Y'
                      txnTime: string
                      directoryServerTransactionId: c37c955e-2de1-43fd-8c2a-6abbe48bae67
                      threeDSecureVersion: string
                      acsUrl: string
                      payload: string
                      sdkChallengePayload: string
                      xid: string
                      threeDEnrollment: 'Y'
                      maxAuthorizationsForInstalmentPayment: 1
                      electronicDelivery:
                        email: string
                        isElectronicDelivery: true
                      initialPurchaseTime: string
                      force3DS1: true
                    card:
                      id: string
                      lastDigits: stri
                      cardType: AM
                      cardBin: string
                      cardNum: '4111111111111111'
                      cardExpiry:
                        month: 12
                        year: 2022
                      cvv: '123'
                      holderName: Venkata Suresh
                      nickName: Venky
                Paypal:
                  value:
                    id: e85f125b-a20b-455e-9657-f4a4c2beae3c
                    paymentType: PAYPAL
                    paymentHandleToken: PHdQkDhZBMbWtPYM
                    merchantRefNum: 526531c4-0c55-4762-bd5f-f9608d00108e
                    currencyCode: USD
                    txnTime: '2023-01-20T04:44:08Z'
                    billingDetails:
                      street: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                    customerIp: 172.0.0.1
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.dev.paysafe.com/alternatepayments/v1/redirect?accountId=1002809650&paymentHandleId=e85f125b-a20b-455e-9657-f4a4c2beae3c&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDAyODA5NjUwIiwicHlkIjoiZTg1ZjEyNWItYTIwYi00NTVlLTk2NTctZjRhNGMyYmVhZTNjIiwiZXhwIjoxNjc0MTkxNjUwfQ.wlcuwbjW0VIUFYFnfBGeGbjEPE0NPxG76QJDDl4bFCU'
                    liveMode: false
                    simulator: EXTERNAL
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 500
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStore
                      phone: '12345678'
                    timeToLiveSeconds: 898
                    gatewayResponse:
                      payPalInvoiceId: ef536397-552a-4d84-9c11-cb62140b9fee
                      processor: PAYPAL
                      id: PAYID-MPFBYGQ10P06468N3869351E
                    returnLinks:
                      - rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                      - rel: default
                        href: 'https://usgaminggamblig.com/payment/return/success'
                      - rel: on_cancelled
                        href: 'https://usgaminggamblig.com/payment/return/cancelled'
                    transactionType: PAYMENT
                    gatewayReconciliationId: ef536397-552a-4d84-9c11-cb62140b9fee
                    updatedTime: '2023-01-20T04:44:10Z'
                    statusTime: '2023-01-20T04:44:10Z'
                    shippingDetails:
                      recipientName: John Doe
                      street: 1 Main St
                      city: San Jose
                      state: CA
                      country: US
                      zip: '95131'
                    paypal:
                      consumerId: sb-cpfxo1472281@personal.example.com
                      consumerMessage: Paysafe note to payer for payment
                      recipientDescription: Paysafe store description for payment
                      language: US
                      shippingPreference: SET_PROVIDED_ADDRESS
                      orderDescription: Paysafe Order description for payment
                    profile:
                      firstName: John
                      lastName: Doe
                      email: john.doe@paysafe.com
                Pay by Bank:
                  value:
                    id: 58a80575-d22f-4048-9172-9c1cccafabb4
                    paymentType: PAY_BY_BANK
                    paymentHandleToken: PHBwCq4aC3AGF34T
                    merchantRefNum: b8b166d3-450d-41a5-aa98-8a5cbe0947ce
                    currencyCode: USD
                    txnTime: '2024-03-04T10:41:19Z'
                    billingDetails:
                      street: QA Perf Test Street1 002
                      city: Perf Test City
                      zip: '15132'
                      state: FL
                      country: US
                    customerIp: 172.0.0.1
                    status: PAYABLE
                    liveMode: false
                    simulator: EXTERNAL
                    action: NONE
                    amount: 100
                    timeToLiveSeconds: 899
                    gatewayResponse:
                      processor: PAY_BY_BANK
                    transactionType: STANDALONE_CREDIT
                    gatewayReconciliationId: 8e584e35-804b-432b-b483-a66d0ee0ef85
                    updatedTime: '2024-03-04T10:41:19Z'
                    statusTime: '2024-03-04T10:41:19Z'
                    mobileSdk: false
                    payByBank:
                      consumerId: qa_perf_test_consumer_0001
                      registrationId: c140fbcf-2d8c-4962-9f8f-a19d15e34319
                      ach:
                        paymentHandleToken: BAonftuNrjpdBcY5
                        routingNumber: '211589828'
                        accountType: CHECKING
                        lastDigits: '92'
                    profile:
                      firstName: Perf 0001
                      lastName: Cons 0001
                      email: perftestconsumer0001@example.com
                      dateOfBirth:
                        day: 1
                        month: 1
                        year: 1977
                      phone: '9897550001'
                      identityDocuments:
                        - type: SOCIAL_SECURITY
                          documentNumber: "##########"
                          lastDigits: '0001'
                Venmo:
                  value:
                    id: 390302ef-674e-4f2e-9260-32d917cd3aa4
                    paymentType: VENMO
                    paymentHandleToken: PHi8YKjhhS18Fz15
                    merchantRefNum: '1674816477288'
                    currencyCode: USD
                    txnTime: '2023-01-27T10:48:22Z'
                    billingDetails:
                      street: '100'
                      street2: Queen Street
                      city: Cupertino
                      zip: '14236'
                      state: CA
                      country: US
                    customerIp: 115.114.129.142
                    status: PAYABLE
                    liveMode: false
                    simulator: EXTERNAL
                    usage: SINGLE_USE
                    action: NONE
                    executionMode: SYNCHRONOUS
                    amount: 100
                    merchantDescriptor:
                      dynamicDescriptor: Test Description
                      phone: '5555345456'
                    timeToLiveSeconds: 899
                    gatewayResponse:
                      brainTreeCustomerId: '657970850'
                      profile:
                        email: sravanthi449g@gmail.com
                        firstName: Sravanthi
                        lastName: Gaddam
                      userName: '@sravanthigaddam'
                      processor: BRAINTREE
                    returnLinks:
                      - rel: default
                        href: 'https://api.test.paysafe.com/checkout/v2/pages/redirect-success.html'
                      - rel: on_completed
                        href: 'https://api.test.paysafe.com/checkout/v2/pages/redirect-success.html'
                      - rel: on_failed
                        href: 'https://api.test.paysafe.com/checkout/v2/pages/redirect-error.html'
                    transactionType: PAYMENT
                    updatedTime: '2023-01-27T10:48:22Z'
                    statusTime: '2023-01-27T10:48:22Z'
                    shippingDetails:
                      recipientName: Vishnu
                      street: 20735 Stevens Creek Blvd
                      street2: Montessori
                      city: Cupertino
                      state: CA
                      country: US
                      zip: '95014'
                    profile:
                      firstName: Sandi
                      lastName: Smith
                      email: sandi.smith@paysafe.com
                      dateOfBirth:
                        day: 23
                        month: 12
                        year: 1990
                      phone: '84632876432'
                    singleUseCustomerToken: SPNE1qAcPZdblQIw
                    venmo:
                      consumerId: sb-cpfxo1472298@personal.example.com
                Vippreferred:
                  value:
                    id: 07b9438a-6c2e-490f-8a25-482670bceb0a
                    paymentType: VIPPREFERRED
                    paymentHandleToken: SVoLrTdpL5vtqprm
                    merchantRefNum: fb388e627314ed346672
                    currencyCode: USD
                    txnTime: '2023-01-20T04:53:10Z'
                    billingDetails:
                      street: street
                      street2: street
                      city: ca
                      zip: '50087'
                      state: CA
                      country: US
                    customerIp: 172.0.0.1
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.dev.paysafe.com/alternatepayments/v1/redirect?accountId=1001570950&paymentHandleId=07b9438a-6c2e-490f-8a25-482670bceb0a&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDAxNTcwOTUwIiwicHlkIjoiMDdiOTQzOGEtNmMyZS00OTBmLThhMjUtNDgyNjcwYmNlYjBhIiwiZXhwIjoxNjc0MTkyMTkyfQ.JERgDEJoZ20fQnHLjpz5q22mfLyYEzZ4wOkNhBkV30I'
                    liveMode: false
                    simulator: EXTERNAL
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 500
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStoreeeeeeeee
                      phone: '1234567899'
                    timeToLiveSeconds: 899
                    returnLinks:
                      - rel: default
                        href: 'https://usgaminggamblig.com/payment/return/success'
                      - rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                    transactionType: PAYMENT
                    updatedTime: '2023-01-20T04:53:12Z'
                    statusTime: '2023-01-20T04:53:12Z'
                    vippreferred:
                      consumerId: '139712817'
                    profile:
                      firstName: Pavan
                      lastName: Kalyan
                      email: test@paysafe.com
                      phone: '1234567890'
                Mazooma - withoutUPO:
                  value:
                    id: 9ca96ebe-dd36-41be-856a-801adb886fb0
                    paymentType: MAZOOMA
                    paymentHandleToken: PH0gRuaOS9Yr7PNQ
                    merchantRefNum: 285a1d9f-ab6b-4851-870b-b725148a5162
                    currencyCode: USD
                    txnTime: '2023-01-20T05:16:36Z'
                    billingDetails:
                      street: Queen Street West
                      street2: Queen Street
                      city: Imphal
                      zip: '14236'
                      state: NY
                      country: US
                    customerIp: 172.0.0.1
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.qa.paysafe.com/alternatepayments/v1/redirect?accountId=1019780270&paymentHandleId=9ca96ebe-dd36-41be-856a-801adb886fb0&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDE5NzgwMjcwIiwicHlkIjoiOWNhOTZlYmUtZGQzNi00MWJlLTg1NmEtODAxYWRiODg2ZmIwIiwiZXhwIjoxNjc0MTkzNTk4fQ.8aeJAMFAwUdOoeGx7SLf9E3q9Eq5OmP7eULbAm7XXsE'
                    liveMode: false
                    simulator: INTERNAL
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 100
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStore
                      phone: '12345678'
                    timeToLiveSeconds: 899
                    gatewayResponse:
                      txnStatus: REDIRECT
                      orderId: Mbm6IyDef
                      id: d1daa8eb-cfad-4ca8-9dc8-155d797b7ca3
                      internalRequestId: '0'
                      processor: MAZOOMA
                      status: SUCCESS
                    returnLinks:
                      - rel: default
                        href: 'http://www.amazon.ca'
                      - rel: on_failed
                        href: 'http://www.costco.ca'
                      - rel: on_cancelled
                        href: 'http://www.bestbuy.ca'
                    transactionType: PAYMENT
                    gatewayReconciliationId: d1daa8eb-cfad-4ca8-9dc8-155d797b7ca3
                    updatedTime: '2023-01-20T05:16:38Z'
                    statusTime: '2023-01-20T05:16:38Z'
                    mazooma:
                      consumerId: Nitin_04
                      registrationId: 597e32ed-414f-4ac4-bab4-ecc9f59238f7
                    profile:
                      firstName: ALBERTA
                      lastName: BOBBETHCHARLESON
                      email: accountholder0@example.com
                      dateOfBirth:
                        day: 23
                        month: 12
                        year: 1990
                      phone: '1234567890'
                Mazooma - withUPO:
                  value:
                    id: 26359efd-7cfb-4014-a13d-1724e3ff17fa
                    paymentHandleToken: SCO3wKcIyLoQbQvw
                    txnTime: '2023-01-19T10:28:00Z'
                    status: INITIATED
                    liveMode: true
                    usage: SINGLE_USE
                    action: NONE
                    executionMode: SYNCHRONOUS
                    timeToLiveSeconds: 0
                    gatewayResponse:
                      id: string
                      processor: string
                      code: string
                      responseCode: string
                      avsCode: string
                      avsResponse: MATCH
                      balanceResponse: string
                      mid: string
                      terminalId: string
                      batchNumber: string
                      seqNumber: string
                      effectiveDate: string
                      financingType: string
                      plan: string
                      gracePeriod: string
                      term: string
                      responseId: string
                      requestId: string
                      description: string
                      authCode: string
                      txnDateTime: string
                      referenceNbr: string
                      responseReasonCode: string
                      cvvVerification: MATCH
                      cvv2Result: string
                      status: string
                      orderId: string
                      profile:
                        id: string
                        status: string
                        merchantCustomerId: string
                        lastName: Chagalamarri
                        locale: en_US
                        firstName: Venkata Suresh
                        dateOfBirth:
                          day: 6
                          month: 5
                          year: 1998
                        email: paysafe@gmail.com
                        phone: '1234567891'
                        mobile: '9846573804'
                        gender: M
                        nationality: Indian
                        identityDocuments:
                          - identityDocuments:
                              - type: SOCIAL_SECURITY
                                documentNumber: SSN123456
                    gatewayReconciliationId: 8e13f7fe-4fd2-4f58-92da-89fc9c2ec29b
                    updatedTime: '2019-08-24T14:15:22Z'
                    statusTime: '2019-08-24T14:15:22Z'
                    links:
                      rel: redirect_payment
                      href: 'http://api.paysafe.com/card/redirect/372b5ee7-6360-4403-b444-164f8f1d2709'
                      method: GET
                    merchantRefNum: merchantRefNum-101
                    transactionType: PAYMENT
                    accountId: '9876543210'
                    paymentType: CARD
                    amount: 500
                    currencyCode: USD
                    paymentHandleTokenFrom: SCyGZDlUuZ9zxjyd
                    profile:
                      id: string
                      status: string
                      merchantCustomerId: string
                      lastName: Chagalamarri
                      locale: en_US
                      firstName: Venkata Suresh
                      dateOfBirth:
                        day: 6
                        month: 5
                        year: 1998
                      email: paysafe@gmail.com
                      phone: '1234567891'
                      mobile: '9846573804'
                      gender: M
                      nationality: Indian
                      identityDocuments:
                        - identityDocuments:
                            - type: SOCIAL_SECURITY
                              documentNumber: SSN123456
                    billingDetails:
                      id: string
                      status: string
                      nickName: Home
                      street: Street
                      street1: street1
                      street2: street2
                      city: Toronto
                      state: 'ON'
                      country: CA
                      zip: M5H 2N2
                      phone: '8765846321'
                    splitpay:
                      linkedAccount: '123124124'
                      amount: 505
                      percent: 5
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStore
                      phone: 999-8888
                    returnLinks:
                      rel: default
                      href: 'https://US_commerce_site/payment/return/success'
                      method: GET
                    customerIp: 111.111.111.111
                    transactionIntent:
                      transactionIntent: CRYPTO_ON_RAMP
                    singleUseCustomerToken: string
                    threeDs:
                      id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      deviceFingerprintingId: 1f6daee1-750a-4361-a6ce-4fb40ad78c57
                      process: true
                      merchantRefNum: string
                      merchantUrl: 'https://api.qa.paysafe.com/checkout/v2/demo-store/index.html'
                      deviceChannel: BROWSER
                      requestorChallengePreference: NO_PREFERENCE
                      messageCategory: PAYMENT
                      transactionIntent: GOODS_OR_SERVICE_PURCHASE
                      authenticationPurpose: PAYMENT_TRANSACTION
                      billingCycle:
                        endDate: '2019-08-24'
                        frequency: 0
                      orderItemDetails:
                        preOrderItemAvailabilityDate: '2019-08-24'
                        preOrderPurchaseIndicator: MERCHANDISE_AVAILABLE
                        reorderItemsIndicator: FIRST_TIME_ORDER
                        shippingIndicator: SHIP_TO_BILLING_ADDRESS
                      purchasedGiftCardDetails:
                        amount: 0
                        count: 0
                        currency: AED
                      userAccountDetails:
                        addCardAttemptsForLastDay: 0
                        changedDate: '2019-08-24'
                        changedRange: DURING_TRANSACTION
                        createdDate: '2019-08-24'
                        createdRange: NO_ACCOUNT
                        passwordChangedDate: '2019-08-24'
                        passwordChangedRange: NO_CHANGE
                        suspiciousAccountActivity: true
                        totalPurchasesSixMonthCount: 0
                        transactionCountForPreviousDay: 999
                        transactionCountForPreviousYear: 999
                        shippingDetailsUsage:
                          cardHolderNameMatch: true
                          initialUsageDate: '2019-08-24'
                          initialUsageRange: CURRENT_TRANSACTION
                        userLogin: string
                        paymentAccountDetails:
                          createdRange: NO_ACCOUNT
                          createdDate: '2019-08-24'
                        priorThreeDSAuthentication:
                          id: string
                          data: string
                          method: string
                          time: '2019-08-24T14:15:22Z'
                        travelDetails:
                          isAirTravel: true
                          airlineCarrier: string
                          departureDate: '2019-08-24'
                          destination: strin
                          origin: strin
                          passengerFirstName: string
                          passengerLastName: string
                      priorThreeDSAuthentication:
                        id: string
                        data: string
                        method: string
                        time: '2019-08-24T14:15:22Z'
                      shippingDetailsUsage:
                        cardHolderNameMatch: true
                        initialUsageDate: '2019-08-24'
                        initialUsageRange: CURRENT_TRANSACTION
                      suspiciousAccountActivity: true
                      totalPurchasesSixMonthCount: 9999
                      transactionCountForPreviousDay: 999
                      transactionCountForPreviousYear: 999
                      travelDetails:
                        isAirTravel: true
                        airlineCarrier: string
                        departureDate: '2019-08-24'
                        destination: strin
                        origin: strin
                        passengerFirstName: string
                        passengerLastName: string
                      userLogin:
                        authenticationMethod: NO_LOGIN
                        data: string
                        time: '2019-08-24T14:15:22Z'
                      browserDetails:
                        acceptHeader: string
                        colorDepthBits: '1'
                        customerIp: string
                        javascriptEnabled: true
                        javaEnabled: true
                        language: string
                        screenHeight: 999999
                        screenWidth: 999999
                        timezoneOffset: 0
                        userAgent: string
                      cavv: string
                      eci: 0
                      status: COMPLETED
                      threeDResult: 'Y'
                      txnTime: string
                      directoryServerTransactionId: c37c955e-2de1-43fd-8c2a-6abbe48bae67
                      threeDSecureVersion: string
                      acsUrl: string
                      payload: string
                      sdkChallengePayload: string
                      xid: string
                      threeDEnrollment: 'Y'
                      maxAuthorizationsForInstalmentPayment: 1
                      electronicDelivery:
                        email: string
                        isElectronicDelivery: true
                      initialPurchaseTime: string
                      force3DS1: true
                    card:
                      id: string
                      lastDigits: stri
                      cardType: AM
                      cardBin: string
                      cardNum: '4111111111111111'
                      cardExpiry:
                        month: 12
                        year: 2022
                      cvv: '123'
                      holderName: Venkata Suresh
                      nickName: Venky
                Sightline:
                  value:
                    id: 150d3c8a-9ce0-4b15-bac6-b8facb907fa9
                    paymentType: SIGHTLINE
                    paymentHandleToken: SSNYyqHj9OdBWJiz
                    merchantRefNum: 795094ab100432979bae
                    currencyCode: USD
                    txnTime: '2023-01-20T08:25:39Z'
                    billingDetails:
                      street: TEST
                      street2: TEST
                      city: CA
                      zip: '12345'
                      state: CA
                      country: US
                    customerIp: 172.0.0.1
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.qa.paysafe.com/alternatepayments/v1/redirect?accountId=1010804430&paymentHandleId=150d3c8a-9ce0-4b15-bac6-b8facb907fa9&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDEwODA0NDMwIiwicHlkIjoiMTUwZDNjOGEtOWNlMC00YjE1LWJhYzYtYjhmYWNiOTA3ZmE5IiwiZXhwIjoxNjc0MjA0OTQwfQ.V-b4-cGvTSyJy-t8vz06NMMeXVjV9aMaT23LBlQ5_8I'
                    liveMode: false
                    simulator: INTERNAL
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 1500
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStoreeeeeeeee
                      phone: '1234567899'
                    timeToLiveSeconds: 899
                    returnLinks:
                      - rel: default
                        href: 'https://usgaminggamblig.com/payment/return/success'
                      - rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                    transactionType: PAYMENT
                    updatedTime: '2023-01-20T08:25:40Z'
                    statusTime: '2023-01-20T08:25:40Z'
                    sightline:
                      consumerId: '187701588'
                      last4ssn: '1588'
                      canEditSsn: false
                    balanceCheck: false
                    profile:
                      firstName: Pavan
                      lastName: Kalyan
                      email: test@paysafe.com
                      phone: '1234567890'
                Interac_ETransfer - with question and answer:
                  value:
                    id: ce19f4dd-fdcb-460a-b65d-ff0e0c201aee
                    paymentType: INTERAC_ETRANSFER
                    paymentHandleToken: PHSfD6p5sgupRJEI
                    merchantRefNum: 2c2c31b8-49a4-4386-ae2f-c3a4377f6269
                    currencyCode: CAD
                    txnTime: '2023-01-20T08:52:32Z'
                    customerIp: 172.0.0.1
                    status: PAYABLE
                    liveMode: false
                    simulator: EXTERNAL
                    action: NONE
                    amount: 500
                    timeToLiveSeconds: 899
                    gatewayResponse:
                      id: HX27oxf31usMErBh
                      processor: PEOPLE_TRUST
                      status: ACCEPTED
                    transactionType: STANDALONE_CREDIT
                    gatewayReconciliationId: 1a0d517d-f503-4d76-953c-c41107d4b4b0
                    updatedTime: '2023-01-20T08:52:33Z'
                    statusTime: '2023-01-20T08:52:33Z'
                    browserDetails:
                      userCookie: testusercoockie
                    interacEtransfer:
                      consumerId: madhu@paysafe.com
                      question: what is your name
                      answer: MadhuBaddam
                      maxAmount: 500000
                      transferType: ALIAS_REGULAR
                    profile:
                      firstName: Madhu
                      lastName: Baddam
                      email: madhu.baddam@paysafe.com
                      phone: '12345678'
                Rapid Transfer via Skrill Quick Check out:
                  value:
                    id: fa085e78-0648-4cd5-bac5-ac693792cc5b
                    paymentType: RAPID_TRANSFER
                    paymentHandleToken: PH3oMryVULc5ldL3
                    merchantRefNum: 299cc09b-3703-4635-8e28-8e6a680b0bcc
                    currencyCode: EUR
                    txnTime: '2023-01-20T09:05:20Z'
                    billingDetails:
                      street: '71 Cherry Court '
                      city: Southhampton
                      zip: SO53 5PD
                      country: GB
                    customerIp: 73.82.192.17
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.dev.paysafe.com/alternatepayments/v1/redirect?accountId=1005655930&paymentHandleId=fa085e78-0648-4cd5-bac5-ac693792cc5b&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDA1NjU1OTMwIiwicHlkIjoiZmEwODVlNzgtMDY0OC00Y2Q1LWJhYzUtYWM2OTM3OTJjYzViIiwiZXhwIjoxNjc0MjA3MzIwfQ.r0KYxXWDwIvvDYzJRlzi-oj2jDKJLlPhqAygXey1tRg'
                    liveMode: false
                    simulator: INTERNAL
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 3000
                    timeToLiveSeconds: 899
                    gatewayResponse:
                      processor: SKRILL_QCO
                      sid: 23d60758f0594c32b2ee5c69fda67a51
                    returnLinks:
                      - rel: on_completed
                        href: 'http://www.amazon.ca'
                      - rel: default
                        href: 'http://www.amazon.ca'
                      - rel: on_failed
                        href: 'http://www.amazon.ca'
                    transactionType: PAYMENT
                    gatewayReconciliationId: 817bddf1-13dc-4c24-9d7f-5b70faf5c726
                    updatedTime: '2023-01-20T09:05:20Z'
                    statusTime: '2023-01-20T09:05:20Z'
                    rapidTransfer:
                      consumerId: csr_fl@sun-fish.com
                      countryCode: IE
                    profile:
                      firstName: John
                      lastName: Doe
                ACH:
                  value:
                    id: c0a6f5d8-1bd5-4c9e-b3cd-771e4f7f1844
                    accountId: '1003593810'
                    paymentType: ACH
                    paymentHandleToken: SAUr7JDpDWu4mGFq
                    merchantRefNum: '156048571'
                    currencyCode: USD
                    txnTime: '2023-01-20T09:20:57Z'
                    billingDetails:
                      nickName: Home
                      street: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                    customerIp: 172.0.0.1
                    status: PAYABLE
                    amount: 500
                    action: NONE
                    usage: SINGLE_USE
                    timeToLiveSeconds: 899
                    transactionType: PAYMENT
                    executionMode: SYNCHRONOUS
                    ach:
                      routingNumber: '211589828'
                      accountType: SAVINGS
                      accountHolderName: PT ACH HName
                      lastDigits: '02'
                      payMethod: WEB
                    profile:
                      firstName: Poke
                      lastName: mon
                      email: Poke.mon@canada.com
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStoreeeeeeeee
                      phone: '1234567899'
                EFT:
                  value:
                    id: 4af297df-b266-42c5-803f-68211a828f1c
                    accountId: '1013691440'
                    paymentType: EFT
                    paymentHandleToken: SAFAlxMtcEaJxu5t
                    merchantRefNum: '4533863971'
                    currencyCode: CAD
                    txnTime: '2023-01-20T09:36:49Z'
                    billingDetails:
                      nickName: Home
                      street: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                    customerIp: 172.0.0.1
                    status: PAYABLE
                    amount: 500
                    action: NONE
                    usage: SINGLE_USE
                    timeToLiveSeconds: 899
                    transactionType: PAYMENT
                    executionMode: SYNCHRONOUS
                    eft:
                      transitNumber: '22446'
                      institutionId: '001'
                      paymentDescriptor: payment dtr
                      accountHolderName: XYZ Company
                      lastDigits: '12'
                    profile:
                      firstName: Poke
                      lastName: mon
                      email: Poke.mon@canada.com
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStoreeeeeeeee
                      phone: '1234567899'
                Skrill 1-Tap:
                  value:
                    id: 9681ad1b-3f69-433c-9faf-049fdaa3972e
                    paymentType: SKRILL1TAP
                    paymentHandleToken: PHTRvYPsXhwBg1ER
                    merchantRefNum: 92792e35-a4db-4a70-a71f-9bd62fe44296
                    currencyCode: USD
                    txnTime: '2023-01-31T05:30:13Z'
                    billingDetails:
                      street: "100\_Queen"
                      street2: "Unit\_201"
                      city: Toronto
                      zip: "M5H\_2N2"
                      country: CA
                    customerIp: 172.0.0.1
                    status: PAYABLE
                    liveMode: false
                    simulator: EXTERNAL
                    usage: SINGLE_USE
                    action: NONE
                    executionMode: SYNCHRONOUS
                    amount: 100
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStore
                      phone: '12345678'
                    timeToLiveSeconds: 899
                    gatewayResponse:
                      processor: SKRILL_QCO
                      status: '2'
                      sid: 21f2830f11c37e8adcb096d20b63b644
                    returnLinks:
                      - rel: on_processing
                        href: 'https://usgaminggamblig.com/payment/return/on_processing'
                      - rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                      - rel: on_error
                        href: 'https://usgaminggamblig.com/payment/return/on_error'
                      - rel: on_completed
                        href: 'https://usgaminggamblig.com/payment/return/on_completed'
                      - rel: default
                        href: 'https://usgaminggamblig.com/payment/return/success'
                      - rel: on_cancelled
                        href: 'https://usgaminggamblig.com/payment/return/cancelled'
                    transactionType: PAYMENT
                    gatewayReconciliationId: 3195ccea-9d29-4857-bce1-4e9e8dc0b401
                    updatedTime: '2023-01-31T05:30:14Z'
                    statusTime: '2023-01-31T05:30:14Z'
                    skrill1tap:
                      language: EN
                      logoUrl: 'http://www.paysafe.com/icon.jpg'
                      recipientDescription: "Recipient\_Description"
                      consumerId: '1234898'
                      detail1Description: "Detail\_1\_description"
                      detail1Text: "Detail\_1\_text"
                      maxAmount: 500
                    profile:
                      firstName: pawan
                      lastName: Kalyan
                      email: test@paysafe.com
                      phone: '1234567890'
                ApplePay:
                  value:
                    id: 768fbc6d-c525-436d-adbd-d44b49d2ac4c
                    accountId: '1016343990'
                    paymentType: CARD
                    paymentHandleToken: AO1hJ2w6EELYwB3
                    merchantRefNum: e93cf2ef-077c-422d-8942-ff92c5cf8103
                    currencyCode: USD
                    txnTime: '2023-02-10T09:40:58Z'
                    billingDetails:
                      street: 19111 Deertrl
                      city: Alpharetta
                      zip: '30040'
                      state: GA
                      country: US
                    customerIp: 10.195.88.62
                    status: PAYABLE
                    amount: 123
                    action: NONE
                    usage: SINGLE_USE
                    timeToLiveSeconds: 899
                    transactionType: PAYMENT
                    executionMode: SYNCHRONOUS
                    profile:
                      locale: en
                      firstName: Vishnu
                      lastName: Vardhan
                      email: vishnu@paysafe.com
                      phone: '1231231231'
                      dateOfBirth:
                        year: 1990
                        month: 7
                        day: 1
                    card:
                      status: ACTIVE
                      lastDigits: '2732'
                      cardCategory: CREDIT
                    applePay:
                      applePayPaymentToken:
                        token:
                          paymentData:
                            version: EC_v1
                            data: crc1wsCG/2WWXtXQPoOsgtjJoKQSbwc7L6lHgHmLKg30a9Z6l4Ph/xUoEelUxE4G6UNMuxgEn1FRm1zDOcbFKNksI/Q/Nk75bybUWGAilXZ7VghYRjzjvmKKOHTMVkU8vTn4mbQGrTiyAsVPkCuF5BuuEM0C2QiAhDb5Tz5xyna3dv3hAgTLdyDlbI1vs1hBb2KaDUkF9InzYB5BoExMauqn6/8WR8noi0FUHJYejsAmlLgbXi98OnkFcueQwKgXICQmg6l+NR3H28RZRLTTnP1+gdHk3oMiozLliDwY1cBlPz7EQDT4VWUWRIkhJIiKHLb/p/Wn3S+sjbzruIQ007mVx3BTYwNQM+9W01t940sO8w7pbmhmWOAIvsYq/mft6dEFNIQt3Urr0ieF
                            signature: MIAGCSqGSIb3DQEHAqCAMIACAQExDzANBglghkgBZQMEAgEFADCABgkqhkiG9w0BBwEAAKCAMIID5DCCA4ugAwIBAgIIWdihvKr0480wCgYIKoZIzj0EAwIwejEuMCwGA1UEAwwlQXBwbGUgQXBwbGljYXRpb24gSW50ZWdyYXRpb24gQ0EgLSBHMzEmMCQGA1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMB4XDTIxMDQyMDE5MzcwMFoXDTI2MDQxOTE5MzY1OVowYjEoMCYGA1UEAwwfZWNjLXNtcC1icm9rZXItc2lnbl9VQzQtU0FOREJPWDEUMBIGA1UECwwLaU9TIFN5c3RlbXMxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEgjD9q8Oc914gLFDZm0US5jfiqQHdbLPgsc1LUmeY+M9OvegaJajCHkwz3c6OKpbC9q+hkwNFxOh6RCbOlRsSlaOCAhEwggINMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAUI/JJxE+T5O8n5sT2KGw/orv9LkswRQYIKwYBBQUHAQEEOTA3MDUGCCsGAQUFBzABhilodHRwOi8vb2NzcC5hcHBsZS5jb20vb2NzcDA0LWFwcGxlYWljYTMwMjCCAR0GA1UdIASCARQwggEQMIIBDAYJKoZIhvdjZAUBMIH+MIHDBggrBgEFBQcCAjCBtgyBs1JlbGlhbmNlIG9uIHRoaXMgY2VydGlmaWNhdGUgYnkgYW55IHBhcnR5IGFzc3VtZXMgYWNjZXB0YW5jZSBvZiB0aGUgdGhlbiBhcHBsaWNhYmxlIHN0YW5kYXJkIHRlcm1zIGFuZCBjb25kaXRpb25zIG9mIHVzZSwgY2VydGlmaWNhdGUgcG9saWN5IGFuZCBjZXJ0aWZpY2F0aW9uIHByYWN0aWNlIHN0YXRlbWVudHMuMDYGCCsGAQUFBwIBFipodHRwOi8vd3d3LmFwcGxlLmNvbS9jZXJ0aWZpY2F0ZWF1dGhvcml0eS8wNAYDVR0fBC0wKzApoCegJYYjaHR0cDovL2NybC5hcHBsZS5jb20vYXBwbGVhaWNhMy5jcmwwHQYDVR0OBBYEFAIkMAua7u1GMZekplopnkJxghxFMA4GA1UdDwEB/wQEAwIHgDAPBgkqhkiG92NkBh0EAgUAMAoGCCqGSM49BAMCA0cAMEQCIHShsyTbQklDDdMnTFB0xICNmh9IDjqFxcE2JWYyX7yjAiBpNpBTq/ULWlL59gBNxYqtbFCn1ghoN5DgpzrQHkrZgTCCAu4wggJ1oAMCAQICCEltL786mNqXMAoGCCqGSM49BAMCMGcxGzAZBgNVBAMMEkFwcGxlIFJvb3QgQ0EgLSBHMzEmMCQGA1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMB4XDTE0MDUwNjIzNDYzMFoXDTI5MDUwNjIzNDYzMFowejEuMCwGA1UEAwwlQXBwbGUgQXBwbGljYXRpb24gSW50ZWdyYXRpb24gQ0EgLSBHMzEmMCQGA1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE8BcRhBnXZIXVGl4lgQd26ICi7957rk3gjfxLk+EzVtVmWzWuItCXdg0iTnu6CP12F86Iy3a7ZnC+yOgphP9URaOB9zCB9DBGBggrBgEFBQcBAQQ6MDgwNgYIKwYBBQUHMAGGKmh0dHA6Ly9vY3NwLmFwcGxlLmNvbS9vY3NwMDQtYXBwbGVyb290Y2FnMzAdBgNVHQ4EFgQUI/JJxE+T5O8n5sT2KGw/orv9LkswDwYDVR0TAQH/BAUwAwEB/zAfBgNVHSMEGDAWgBS7sN6hWDOImqSKmd6+veuv2sskqzA3BgNVHR8EMDAuMCygKqAohiZodHRwOi8vY3JsLmFwcGxlLmNvbS9hcHBsZXJvb3RjYWczLmNybDAOBgNVHQ8BAf8EBAMCAQYwEAYKKoZIhvdjZAYCDgQCBQAwCgYIKoZIzj0EAwIDZwAwZAIwOs9yg1EWmbGG+zXDVspiv/QX7dkPdU2ijr7xnIFeQreJ+Jj3m1mfmNVBDY+d6cL+AjAyLdVEIbCjBXdsXfM4O5Bn/Rd8LCFtlk/GcmmCEm9U+Hp9G5nLmwmJIWEGmQ8Jkh0AADGCAYwwggGIAgEBMIGGMHoxLjAsBgNVBAMMJUFwcGxlIEFwcGxpY2F0aW9uIEludGVncmF0aW9uIENBIC0gRzMxJjAkBgNVBAsMHUFwcGxlIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUwIIWdihvKr0480wDQYJYIZIAWUDBAIBBQCggZUwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMjEwOTA5MTUxMDIzWjAqBgkqhkiG9w0BCTQxHTAbMA0GCWCGSAFlAwQCAQUAoQoGCCqGSM49BAMCMC8GCSqGSIb3DQEJBDEiBCALhfgr30p4YER31+Gpjqy12gCF3knS1vKEHAFOr41UWjAKBggqhkjOPQQDAgRHMEUCIClcW39OnFDHNA0Klj+f90ydMz8MUz1jIRCWjZl6G5+6AiEApNrnBuLx9Z004GEuG4LBUp1paIuFYG96rdJXq7L9cjUAAAAAAAA=
                            header:
                              transactionId: c852f15513dd58f97b6b4094e3f897087d95d8f1fe08dc00bc39179aae434e31
                              ephemeralPublicKey: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE41aqNv3ogcZU+oMSztrAwyfZJPYZaSLVhObI5FxRwjd609HFwsJ7Fy4lFmSvl4pqwn+gAw5OB8sfpzIfDWuYCQ==
                              publicKeyHash: jaI8zb3+bTPrkEHLe/edIBuRjWbkRm1YKtUXX/FuIRw=
                          paymentMethod:
                            displayName: MasterCard 1470
                            network: MasterCard
                            type: credit
                          transactionIdentifier: C852F15513DD58F97B6B4094E3F897087D95D8F1FE08DC00BC39179AAE434E31
                        billingContact:
                          addressLines:
                            - 19111 Deertrl
                          administrativeArea: ''
                          country: USA
                          countryCode: US
                          familyName: Nasov
                          givenName: Nike
                          locality: Cumming
                          phoneticFamilyName: ''
                          phoneticGivenName: ''
                          postalCode: '30004'
                          subAdministrativeArea: GA
                          subLocality: ''
                    returnLinks:
                      - method: GET
                        rel: on_completed
                        href: 'https://be74-116-50-59-180.ngrok.io/checkout/v2/pages/redirect-success.html'
                      - method: GET
                        rel: on_failed
                        href: 'https://be74-116-50-59-180.ngrok.io/checkout/v2/pages/redirect-error.html'
                      - method: GET
                        rel: default
                        href: 'https://be74-116-50-59-180.ngrok.io/checkout/v2/pages/redirect-success.html'
                    skip3ds: false
                Online Bank Transfer via Safetypay Express:
                  value:
                    id: 2bb8fa2d-09fb-43b1-aa21-5f8225bb0a0e
                    paymentType: ONLINE_BANK_TRANSFER
                    paymentHandleToken: PHN2Gx7nItmtxmTL
                    merchantRefNum: 0a296dc9-1a2e-443b-bc28-6d18293445c1
                    currencyCode: BRL
                    txnTime: '2023-03-14T04:45:42Z'
                    customerIp: 213.208.158.220
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.test.paysafe.com/alternatepayments/v1/redirect?accountId=1002495210&paymentHandleId=2bb8fa2d-09fb-43b1-aa21-5f8225bb0a0e&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDAyNDk1MjEwIiwicHlkIjoiMmJiOGZhMmQtMDlmYi00M2IxLWFhMjEtNWY4MjI1YmIwYTBlIiwiZXhwIjoxNjc4NzcwOTQ0fQ.rc5KYNx6smoTz4jBsbB6ZcWeIcoyl5eJerj-ovCGfo0'
                    liveMode: false
                    simulator: EXTERNAL
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 1000
                    timeToLiveSeconds: 898
                    gatewayResponse:
                      operationId: '0123073466130230'
                      id: 926ce5b0-7978-4c7e-a3d9-16b2f891b589
                      processor: SAFETYPAY
                    returnLinks:
                      - rel: default
                        href: 'https://www.paysafe.com/en/'
                    transactionType: PAYMENT
                    gatewayReconciliationId: 926ce5b0-7978-4c7e-a3d9-16b2f891b589
                    updatedTime: '2023-03-14T04:45:44Z'
                    statusTime: '2023-03-14T04:45:44Z'
                    paymentExpiryMinutes: 15
                    paymentDetails:
                      countryCode: BR
                    profile:
                      email: BRTESTQA202_01@gmail.com
                PIX via Safetypay Express:
                  value:
                    id: d5b72dc1-4f2d-4dad-8299-ba2733073917
                    paymentType: PIX
                    paymentHandleToken: PHWPYAgGyPEnn56C
                    merchantRefNum: 3f5c68c5-ffa1-4e61-9399-9f17d2a0586f
                    currencyCode: BRL
                    txnTime: '2023-03-14T05:08:43Z'
                    customerIp: 213.208.158.220
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.test.paysafe.com/alternatepayments/v1/redirect?accountId=1002495220&paymentHandleId=d5b72dc1-4f2d-4dad-8299-ba2733073917&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDAyNDk1MjIwIiwicHlkIjoiZDViNzJkYzEtNGYyZC00ZGFkLTgyOTktYmEyNzMzMDczOTE3IiwiZXhwIjoxNjc4NzcyMzI0fQ.F0Vv5w9xKezks7Kj8hJ1aYnInyxWZu2aPa3FhLC7jSA'
                    liveMode: false
                    simulator: EXTERNAL
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 500
                    timeToLiveSeconds: 898
                    gatewayResponse:
                      operationId: '0123073466231331'
                      id: 17050834-913d-48aa-901f-fb5a377d3fde
                      processor: SAFETYPAY
                    returnLinks:
                      - rel: default
                        href: 'https://www.paysafe.com/en/'
                    transactionType: PAYMENT
                    gatewayReconciliationId: 17050834-913d-48aa-901f-fb5a377d3fde
                    updatedTime: '2023-03-14T05:08:44Z'
                    statusTime: '2023-03-14T05:08:44Z'
                    paymentExpiryMinutes: 15
                    profile:
                      email: BRPIXQA0220_01@gmail.com
                Khipu via Safetypay Express:
                  value:
                    id: 285cb0a7-58a4-4889-816f-7f4307901ceb
                    paymentType: KHIPU
                    paymentHandleToken: PHLDYzxhki41lc4H
                    merchantRefNum: b7500fd0-626c-41c6-9149-d1a763eb8b48
                    currencyCode: CLP
                    txnTime: '2023-03-14T05:15:01Z'
                    customerIp: 213.208.158.220
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.test.paysafe.com/alternatepayments/v1/redirect?accountId=1002495260&paymentHandleId=285cb0a7-58a4-4889-816f-7f4307901ceb&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDAyNDk1MjYwIiwicHlkIjoiMjg1Y2IwYTctNThhNC00ODg5LTgxNmYtN2Y0MzA3OTAxY2ViIiwiZXhwIjoxNjc4NzcyNzAyfQ.L6of4dOnuo7wBjxJIizrwzsItCOhRzkXEa1AS2gL7kU'
                    liveMode: false
                    simulator: EXTERNAL
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 47000
                    timeToLiveSeconds: 898
                    gatewayResponse:
                      operationId: '0123073466283383'
                      id: 60edc2f9-5c33-4455-ab8c-edbe009a19fa
                      processor: SAFETYPAY
                    returnLinks:
                      - rel: default
                        href: 'http://www.amazon.ca'
                    transactionType: PAYMENT
                    gatewayReconciliationId: 60edc2f9-5c33-4455-ab8c-edbe009a19fa
                    updatedTime: '2023-03-14T05:15:02Z'
                    statusTime: '2023-03-14T05:15:02Z'
                    paymentExpiryMinutes: 15
                    profile:
                      email: CLKHIPU0212_01@gmail.com
                Mach via Safetypay Express:
                  value:
                    id: 8fc01ce1-469e-423d-b232-d915fd0c0158
                    paymentType: MACH
                    paymentHandleToken: PHivZQUor3tAMihh
                    merchantRefNum: 7f9ecf57-f82a-47cd-89cd-d67369b53b9b
                    currencyCode: CLP
                    txnTime: '2023-03-14T05:18:09Z'
                    customerIp: 213.208.158.220
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.test.paysafe.com/alternatepayments/v1/redirect?accountId=1002495250&paymentHandleId=8fc01ce1-469e-423d-b232-d915fd0c0158&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDAyNDk1MjUwIiwicHlkIjoiOGZjMDFjZTEtNDY5ZS00MjNkLWIyMzItZDkxNWZkMGMwMTU4IiwiZXhwIjoxNjc4NzcyODkxfQ.ojD3jqncSz372DTaaA9tCow6LQmY3bTese0To5_vf5M'
                    liveMode: false
                    simulator: EXTERNAL
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 500
                    timeToLiveSeconds: 898
                    gatewayResponse:
                      operationId: '0123073466297397'
                      id: b0c70d4c-3f90-4fd9-be0e-393fcac48528
                      processor: SAFETYPAY
                    returnLinks:
                      - rel: default
                        href: 'http://www.amazon.ca'
                    transactionType: PAYMENT
                    gatewayReconciliationId: b0c70d4c-3f90-4fd9-be0e-393fcac48528
                    updatedTime: '2023-03-14T05:18:11Z'
                    statusTime: '2023-03-14T05:18:11Z'
                    paymentExpiryMinutes: 15
                    profile:
                      email: CLMACH0212_01@gmail.com
                Boleto Bancario via Safetypay Express:
                  value:
                    id: be8b6064-2bf2-4e4b-88e8-ed1b6a37e1fd
                    paymentType: BOLETO_BANCARIO
                    paymentHandleToken: PHxTXOEU9AAOErZc
                    merchantRefNum: 6708dd07-088d-4e63-a928-f2971ed07962
                    currencyCode: BRL
                    txnTime: '2023-03-14T05:22:09Z'
                    customerIp: 213.208.158.220
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.test.paysafe.com/alternatepayments/v1/redirect?accountId=1002622940&paymentHandleId=be8b6064-2bf2-4e4b-88e8-ed1b6a37e1fd&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDAyNjIyOTQwIiwicHlkIjoiYmU4YjYwNjQtMmJmMi00ZTRiLTg4ZTgtZWQxYjZhMzdlMWZkIiwiZXhwIjoxNjc4NzczMTMwfQ.4dVPogQVZR62bhFCeNe5Gu-yRBiGxRKmkfUsgyrWU1k'
                    liveMode: false
                    simulator: EXTERNAL
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 500
                    timeToLiveSeconds: 898
                    gatewayResponse:
                      operationId: '0123073466306406'
                      id: 8cf7e476-e5c8-4fa3-bb8e-c1048ae61f36
                      processor: SAFETYPAY
                    returnLinks:
                      - rel: default
                        href: 'http://www.amazon.ca'
                      - rel: on_failed
                        href: 'http://www.costco.ca'
                      - rel: on_cancelled
                        href: 'http://www.bestbuy.ca'
                    transactionType: PAYMENT
                    gatewayReconciliationId: 8cf7e476-e5c8-4fa3-bb8e-c1048ae61f36
                    updatedTime: '2023-03-14T05:22:10Z'
                    statusTime: '2023-03-14T05:22:10Z'
                    paymentExpiryMinutes: 15
                    profile:
                      email: brlspcash@gmail.com
                Safetypay Cash via Safetypay Express:
                  value:
                    id: 42517a01-94a7-484d-9040-5a09c0898101
                    paymentType: SAFETYPAY_CASH
                    paymentHandleToken: PH72waPqDtaxmRzj
                    merchantRefNum: 57e8b2d3-ad2c-4a79-ae1f-7e7752cbe8d0
                    currencyCode: BRL
                    txnTime: '2023-03-14T05:24:56Z'
                    customerIp: 213.208.158.220
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.test.paysafe.com/alternatepayments/v1/redirect?accountId=1002622950&paymentHandleId=42517a01-94a7-484d-9040-5a09c0898101&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDAyNjIyOTUwIiwicHlkIjoiNDI1MTdhMDEtOTRhNy00ODRkLTkwNDAtNWEwOWMwODk4MTAxIiwiZXhwIjoxNjc4NzczMjk4fQ.zcnmnkOHeEVYzmqTr-X94XY-p5WJX8ZsRS-k114i1oU'
                    liveMode: false
                    simulator: EXTERNAL
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 500
                    timeToLiveSeconds: 898
                    gatewayResponse:
                      operationId: '0123073466308408'
                      id: 7401a4ac-9737-4c9b-bd7a-3a95bceecccd
                      processor: SAFETYPAY
                    returnLinks:
                      - rel: default
                        href: 'http://www.amazon.ca'
                    transactionType: PAYMENT
                    gatewayReconciliationId: 7401a4ac-9737-4c9b-bd7a-3a95bceecccd
                    updatedTime: '2023-03-14T05:24:58Z'
                    statusTime: '2023-03-14T05:24:58Z'
                    safetypayCash:
                      countryCode: BR
                    profile:
                      email: brlspcash@gmail.com
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
      parameters:
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
            default: EXTERNAL
          in: header
          name: Simulator
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/paymentHandleRequest'
            examples:
              Card:
                value:
                  merchantRefNum: 49115d2d54fba7f6a0e8
                  transactionType: PAYMENT
                  threeDs:
                    merchantUrl: 'https://api.qa.paysafe.com/checkout/v2/index.html#/desktop'
                    deviceChannel: BROWSER
                    messageCategory: PAYMENT
                    transactionIntent: CHECK_ACCEPTANCE
                    authenticationPurpose: PAYMENT_TRANSACTION
                    requestorChallengePreference: NO_PREFERENCE
                    orderItemDetails:
                      preOrderItemAvailabilityDate: '2014-01-26'
                      preOrderPurchaseIndicator: MERCHANDISE_AVAILABLE
                      reorderItemsIndicator: FIRST_TIME_ORDER
                      shippingIndicator: SHIP_TO_BILLING_ADDRESS
                    purchasedGiftCardDetails:
                      amount: 1234
                      count: 2
                      currency: USD
                    userAccountDetails:
                      addCardAttemptsForLastDay: 1
                      changedDate: '2010-01-26'
                      changedRange: DURING_TRANSACTION
                      createdDate: '2010-01-26'
                      createdRange: NO_ACCOUNT
                      passwordChangedDate: '2012-01-26'
                      passwordChangedRange: NO_CHANGE
                      paymentAccountDetails:
                        createdRange: NO_ACCOUNT
                        createdDate: '2010-01-26'
                      shippingDetailsUsage:
                        cardHolderNameMatch: true
                        initialUsageDate: '2014-01-26'
                        initialUsageRange: CURRENT_TRANSACTION
                      suspiciousAccountActivity: true
                      totalPurchasesSixMonthCount: 1
                      transactionCountForPreviousDay: 1
                      transactionCountForPreviousYear: 3
                      userLogin:
                        authenticationMethod: NO_LOGIN
                        data: Some up to 2048 bytes undefined data
                        time: '2014-01-26T10:32:28Z'
                  card:
                    cardNum: '4000000000001026'
                    cardExpiry:
                      month: 10
                      year: 2025
                    cvv: '111'
                    holderName: Dilip
                    issuingCountry: US
                  accountId: '1009688230'
                  paymentType: CARD
                  amount: 500
                  currencyCode: USD
                  billingDetails:
                    nickName: Home
                    street: abcd
                    city: defg
                    state: AL
                    country: US
                    zip: '94404'
                  returnLinks:
                    - rel: default
                      href: 'https://usgaminggamblig.com/payment/return/'
                      method: GET
                    - rel: on_completed
                      href: 'https://usgaminggamblig.com/payment/return/success'
                      method: GET
                    - rel: on_failed
                      href: 'https://usgaminggamblig.com/payment/return/failed'
                      method: GET
              Card - With ThreeDs Exemption:
                value:
                  merchantRefNum: 49115d2d54fba7f6a0e8
                  transactionType: PAYMENT
                  threeDs:
                    merchantUrl: 'https://api.qa.paysafe.com/checkout/v2/index.html#/desktop'
                    deviceChannel: BROWSER
                    messageCategory: PAYMENT
                    transactionIntent: CHECK_ACCEPTANCE
                    authenticationPurpose: PAYMENT_TRANSACTION
                    requestorChallengePreference: NO_PREFERENCE
                    orderItemDetails:
                      preOrderItemAvailabilityDate: '2014-01-26'
                      preOrderPurchaseIndicator: MERCHANDISE_AVAILABLE
                      reorderItemsIndicator: FIRST_TIME_ORDER
                      shippingIndicator: SHIP_TO_BILLING_ADDRESS
                    purchasedGiftCardDetails:
                      amount: 1234
                      count: 2
                      currency: USD
                    userAccountDetails:
                      addCardAttemptsForLastDay: 1
                      changedDate: '2010-01-26'
                      changedRange: DURING_TRANSACTION
                      createdDate: '2010-01-26'
                      createdRange: NO_ACCOUNT
                      passwordChangedDate: '2012-01-26'
                      passwordChangedRange: NO_CHANGE
                      paymentAccountDetails:
                        createdRange: NO_ACCOUNT
                        createdDate: '2010-01-26'
                      shippingDetailsUsage:
                        cardHolderNameMatch: true
                        initialUsageDate: '2014-01-26'
                        initialUsageRange: CURRENT_TRANSACTION
                      suspiciousAccountActivity: true
                      totalPurchasesSixMonthCount: 1
                      transactionCountForPreviousDay: 1
                      transactionCountForPreviousYear: 3
                      userLogin:
                        authenticationMethod: NO_LOGIN
                        data: Some up to 2048 bytes undefined data
                        time: '2014-01-26T10:32:28Z'
                  card:
                    cardNum: '4000000000001026'
                    cardExpiry:
                      month: 10
                      year: 2025
                    cvv: '111'
                    holderName: Dilip
                    issuingCountry: US
                  accountId: '1009688230'
                  paymentType: CARD
                  amount: 500
                  currencyCode: USD
                  billingDetails:
                    nickName: Home
                    street: abcd
                    city: defg
                    state: AL
                    country: US
                    zip: '94404'
                  authentication:
                    exemptionIndicator: LOW_VALUE_EXEMPTION  
                  returnLinks:
                    - rel: default
                      href: 'https://usgaminggamblig.com/payment/return/'
                      method: GET
                    - rel: on_completed
                      href: 'https://usgaminggamblig.com/payment/return/success'
                      method: GET
                    - rel: on_failed
                      href: 'https://usgaminggamblig.com/payment/return/failed'
                      method: GET
              GooglePay:
                value:
                  merchantRefNum: e93cf2ef-077c-422d-8942-ff92c5cf8103
                  transactionType: PAYMENT
                  amount: 123
                  currencyCode: USD
                  accountId: '1016343990'
                  googlePay:
                    googlePayPaymentToken:
                      apiVersionMinor: 0
                      apiVersion: 2
                      paymentMethodData:
                        description: 'Test Card: Visa••••1111'
                        info:
                          billingAddress:
                            address1: '1600 Amphitheatre Parkway'
                            address2: ''
                            address3: ''
                            administrativeArea: CA
                            countryCode: US
                            locality: Mountain View
                            name: Card Holder Name
                            postalCode: 94043
                            sortingCode:
                          cardDetails: 1111
                          cardNetwork: VISA
                        tokenizationData:
                          token: 'xxxx'
                          type: PAYMENT_GATEWAY
                        type: CARD
                  paymentType: CARD
                  profile:
                    firstName: Vishnu
                    lastName: Vardhan
                    email: vishnu@paysafe.com
                    phone: '1231231231'
                    dateOfBirth:
                      day: 1
                      month: 7
                      year: 1990
                  returnLinks:
                    - rel: on_completed
                      href: 'https://be74-116-50-59-180.ngrok.io/checkout/v2/pages/redirect-success.html'
                      method: GET
                    - rel: on_failed
                      href: 'https://be74-116-50-59-180.ngrok.io/checkout/v2/pages/redirect-error.html'
                      method: GET
                    - rel: default
                      href: 'https://be74-116-50-59-180.ngrok.io/checkout/v2/pages/redirect-success.html'
                      method: GET
                  dupCheck: false
                  skip3ds: true
                  billingDetails:
                    country: US
                    zip: '30040'
                    state: GA
                    city: Alpharetta
                    street: 19111 Deertrl
              Skrill:
                value:
                  merchantRefNum: 78cbda06-f62e-4997-87ec-52a3acacb617
                  transactionType: PAYMENT
                  paymentType: SKRILL
                  amount: 100
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  skrill:
                    language: EN
                    logoUrl: 'http://www.paysafe.com/icon.jpg'
                    recipientDescription: Recipient Description
                    detail1Text: Detail 1 text
                    detail1Description: Detail 1 description
                    descriptor: test descriptor
                  billingDetails:
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
                  merchantDescriptor:
                    dynamicDescriptor: OnlineStore
                    phone: '12345678'
                  profile:
                    firstName: pawan
                    lastName: Kalyan
                    email: test@paysafe.com
                    phone: '1234567890'
                  returnLinks:
                    - rel: default
                      href: 'https://usgaminggamblig.com/payment/return/success'
                    - rel: on_failed
                      href: 'https://usgaminggamblig.com/payment/return/failed'
                    - rel: on_cancelled
                      href: 'https://usgaminggamblig.com/payment/return/cancelled'
              Neteller:
                value:
                  merchantRefNum: 7352ebd9-dd5c-4766-a274-aee1a2351b38
                  transactionType: PAYMENT
                  paymentType: NETELLER
                  amount: 500
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  neteller:
                    consumerId: neteller.account@example.org
                    recipientDescription: logo_url_alt_text
                    logoUrl: 'http://www.paysafe.com/icon.jpg'
                  billingDetails:
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
                  merchantDescriptor:
                    dynamicDescriptor: OnlineStore
                    phone: '12345678'
                  returnLinks:
                    - rel: default
                      href: 'https://usgaminggamblig.com/payment/return/success'
                    - rel: on_failed
                      href: 'https://usgaminggamblig.com/payment/return/failed'
                    - rel: on_cancelled
                      href: 'https://usgaminggamblig.com/payment/return/cancel'
              Paysafecash:
                value:
                  merchantRefNum: a9318b525273ee3cda79a2f947a9
                  transactionType: PAYMENT
                  paysafecash:
                    consumerId: merchantclientid
                    minAgeRestriction: 18
                    kycLevelRestriction: SIMPLE
                    countryRestriction: DE
                  paymentType: PAYSAFECASH
                  amount: 500
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  billingDetails:
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
                  merchantDescriptor:
                    dynamicDescriptor: OnlineStore
                    phone: '12345678'
                  returnLinks:
                    - rel: on_completed
                      href: 'https://usgaminggamblig.com/payment/return/success'
                      method: GET
                    - rel: on_failed
                      href: 'https://usgaminggamblig.com/payment/return/failed'
                      method: GET
                    - rel: default
                      href: 'https://usgaminggamblig.com/payment/'
                      method: GET
              Paysafecard:
                value:
                  merchantRefNum: '1674816477288'
                  transactionType: PAYMENT
                  paysafecard:
                    consumerId: merchantclientid
                    minAgeRestriction: 18
                    kycLevelRestriction: SIMPLE
                    countryRestriction: DE
                  paymentType: PAYSAFECARD
                  amount: 500
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  billingDetails:
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
                  merchantDescriptor:
                    dynamicDescriptor: OnlineStore
                    phone: '12345678'
                  returnLinks:
                    - rel: on_completed
                      href: 'https://usgaminggamblig.com/payment/return/success'
                      method: GET
                    - rel: on_failed
                      href: 'https://usgaminggamblig.com/payment/return/failed'
                      method: GET
                    - rel: default
                      href: 'https://usgaminggamblig.com/payment/'
                      method: GET
              Paypal:
                value:
                  merchantRefNum: a1fbaadf-d93c-4d71-ab5a-75a78dee2996
                  transactionType: PAYMENT
                  paymentType: PAYPAL
                  amount: 500
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  paypal:
                    consumerId: sb-cpfxo1472281@personal.example.com
                    recipientDescription: Paysafe store description for payment
                    language: US
                    shippingPreference: SET_PROVIDED_ADDRESS
                    consumerMessage: Paysafe note to payer for payment
                    orderDescription: Paysafe Order description for payment
                    recipientType: PAYPAL_ID
                  billingDetails:
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
                  shippingDetails:
                    recipientName: John Doe
                    street: 1 Main St
                    city: San Jose
                    state: CA
                    country: US
                    zip: '95131'
                  profile:
                    firstName: John
                    lastName: Doe
                    email: john.doe@paysafe.com
                  merchantDescriptor:
                    dynamicDescriptor: OnlineStore
                    phone: '12345678'
                  returnLinks:
                    - rel: default
                      href: 'https://usgaminggamblig.com/payment/return/success'
                    - rel: on_failed
                      href: 'https://usgaminggamblig.com/payment/return/failed'
                    - rel: on_cancelled
                      href: 'https://usgaminggamblig.com/payment/return/cancelled'
              Pay by Bank:
                value:
                  merchantRefNum: " b8b166d3-450d-41a5-aa98-8a5cbe0947ce "
                  transactionType: STANDALONE_CREDIT
                  paymentType: PAY_BY_BANK
                  amount: 100
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  payByBank:
                    consumerId: qa_perf_test_consumer_0001
                    registrationId: c140fbcf-2d8c-4962-9f8f-a19d15e34319
                    ach:
                      paymentHandleToken: BAonftuNrjpdBcY5
                  billingDetails:
                    street1: QA Perf Test Street1 002
                    city: Perf Test City
                    state: FL
                    country: US
                    zip: '15132'
              Venmo:
                value:
                  paymentType: VENMO
                  venmo:
                    consumerId: sb-cpfxo1472298@personal.example.com
                  transactionType: PAYMENT
                  amount: 100
                  currencyCode: USD
                  profile:
                    firstName: Sandi
                    lastName: Smith
                    email: sandi.smith@paysafe.com
                    phone: '84632876432'
                    dateOfBirth:
                      day: 23
                      month: 12
                      year: 1990
                  billingDetails:
                    nickName: John Dee
                    street: '100'
                    street2: Queen Street
                    city: Cupertino
                    zip: '14236'
                    country: US
                    state: CA
                  merchantRefNum: '1674816477288'
                  merchantDescriptor:
                    dynamicDescriptor: Test Description
                    phone: '5555345456'
                  shippingDetails:
                    recipientName: Vishnu
                    street: 20735 Stevens Creek Blvd
                    street2: Montessori
                    city: Cupertino
                    zip: '95014'
                    country: US
                    state: CA
                  dupCheck: false
                  deviceFingerprinting:
                    threatMetrixSessionId: e2981cff-2e9b-47c3-811a-ba3c6b89c0b9
                  returnLinks:
                    - rel: on_completed
                      href: 'https://api.test.paysafe.com/checkout/v2/pages/redirect-success.html'
                      method: GET
                    - rel: on_failed
                      href: 'https://api.test.paysafe.com/checkout/v2/pages/redirect-error.html'
                      method: GET
                    - rel: default
                      href: 'https://api.test.paysafe.com/checkout/v2/pages/redirect-success.html'
                      method: GET
                  singleUseCustomerToken: SPNE1qAcPZdblQIw
              VIP Preferred:
                value:
                  merchantRefNum: fb388e627314ed346672
                  transactionType: PAYMENT
                  paymentType: VIPPREFERRED
                  amount: 500
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  vippreferred:
                    consumerId: '139712817'
                  billingDetails:
                    nickName: Home
                    street: street
                    street2: street
                    city: ca
                    state: CA
                    country: US
                    zip: '50087'
                  profile:
                    firstName: Pavan
                    lastName: Kalyan
                    email: test@paysafe.com
                    phone: '1234567890'
                  merchantDescriptor:
                    dynamicDescriptor: OnlineStoreeeeeeeee
                    phone: '1234567899'
                  returnLinks:
                    - rel: default
                      href: 'https://usgaminggamblig.com/payment/return/success'
                      method: GET
                    - rel: on_failed
                      href: 'https://usgaminggamblig.com/payment/return/failed'
                      method: GET
              Mazooma - withoutUPO:
                value:
                  merchantRefNum: 285a1d9f-ab6b-4851-870b-b725148a5162
                  transactionType: PAYMENT
                  paymentType: MAZOOMA
                  amount: '100'
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  mazooma:
                    consumerId: Nitin_04
                  profile:
                    firstName: ALBERTA
                    lastName: BOBBETHCHARLESON
                    email: accountholder0@example.com
                    dateOfBirth:
                      day: '23'
                      month: '12'
                      year: '1990'
                    phone: '1234567890'
                  billingDetails:
                    street1: Queen Street West
                    street2: Queen Street
                    city: Imphal
                    state: NY
                    country: US
                    zip: '14236'
                  merchantDescriptor:
                    dynamicDescriptor: OnlineStore
                    phone: '12345678'
                  returnLinks:
                    - rel: default
                      href: 'http://www.amazon.ca'
                    - rel: on_failed
                      href: 'http://www.costco.ca'
                    - rel: on_cancelled
                      href: 'http://www.bestbuy.ca'
              Mazooma - withUPO:
                value:
                  merchantRefNum: 7e42c33e-af14-460a-89a8-0ee6d5e8958e
                  transactionType: PAYMENT
                  paymentType: MAZOOMA
                  amount: 100
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  mazooma:
                    consumerId: Nitin_04
                    ach:
                      paymentHandleToken: BAitJ4nDIYRfo9um
                  profile:
                    firstName: ALBERTA
                    lastName: BOBBETHCHARLESON
                    email: accountholder0@example.com
                    dateOfBirth:
                      day: '23'
                      month: '12'
                      year: '1990'
                    phone: 1234567890
                  billingDetails:
                    nickName: Home
                    street: Queen Street West
                    street2: Queen Street
                    city: Imphal
                    state: NY
                    country: US
                    zip: '14236'
                  merchantDescriptor:
                    dynamicDescriptor: OnlineStore
                    phone: '12345678'
                  returnLinks:
                    - rel: default
                      href: 'http://www.amazon.ca'
                    - rel: on_failed
                      href: 'http://www.costco.ca'
                    - rel: on_cancelled
                      href: 'http://www.bestbuy.ca'
              Sightline:
                value:
                  merchantRefNum: 795094ab100432979bae
                  transactionType: PAYMENT
                  paymentType: SIGHTLINE
                  amount: 1500
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  sightline:
                    consumerId: '187701588'
                    ssn: '187701588'
                  billingDetails:
                    nickName: Home
                    street: TEST
                    street2: TEST
                    city: CA
                    state: CA
                    country: US
                    zip: '12345'
                  profile:
                    firstName: Pavan
                    lastName: Kalyan
                    email: test@paysafe.com
                    phone: '1234567890'
                  merchantDescriptor:
                    dynamicDescriptor: OnlineStoreeeeeeeee
                    phone: '1234567899'
                  returnLinks:
                    - rel: default
                      href: 'https://usgaminggamblig.com/payment/return/success'
                      method: GET
                    - rel: on_failed
                      href: 'https://usgaminggamblig.com/payment/return/failed'
                      method: GET
              Interac E-Transfer:
                value:
                  merchantRefNum: 2c2c31b8-49a4-4386-ae2f-c3a4377f6269
                  transactionType: STANDALONE_CREDIT
                  paymentType: INTERAC_ETRANSFER
                  amount: 500
                  currencyCode: CAD
                  customerIp: 172.0.0.1
                  interacEtransfer:
                    consumerId: madhu@paysafe.com
                    question: what is your name
                    answer: MadhuBaddam
                  profile:
                    firstName: Madhu
                    lastName: Baddam
                    email: madhu.baddam@paysafe.com
                    phone: '12345678'
                  browserDetails:
                    userCookie: testusercoockie
                  deviceDetails:
                    deviceId: testdeviceid
              Rapid Transfer via Skrill Quick Checkout:
                value:
                  merchantRefNum: d5490e30-d9ec-4e0b-9de2-770fd3719cca
                  transactionType: PAYMENT
                  accountId: '1005655930'
                  profile:
                    firstName: John
                    lastName: Doe
                  rapidTransfer:
                    consumerId: csr_fl@sun-fish.com
                    countryCode: IE
                  paymentType: RAPID_TRANSFER
                  amount: 3000
                  currencyCode: EUR
                  customerIp: 73.82.192.17
                  billingDetails:
                    street: '71 Cherry Court '
                    city: Southhampton
                    zip: SO53 5PD
                    country: GB
                  returnLinks:
                    - rel: on_completed
                      href: 'http://www.amazon.ca'
                      method: GET
                    - rel: on_failed
                      href: 'http://www.amazon.ca'
                      method: GET
                    - rel: default
                      href: 'http://www.amazon.ca'
              ACH:
                value:
                  merchantRefNum: '156048571'
                  transactionType: PAYMENT
                  ach:
                    accountHolderName: PT ACH HName
                    accountNumber: '511202'
                    routingNumber: '211589828'
                    accountType: SAVINGS
                    payMethod: WEB
                  paymentType: ACH
                  amount: 500
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  billingDetails:
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
                  profile:
                    firstName: Poke
                    lastName: mon
                    email: Poke.mon@canada.com
                    ssn: '234456789'
                    dateOfBirth:
                      year: 1965
                      month: 10
                      day: 12
                  merchantDescriptor:
                    dynamicDescriptor: OnlineStoreeeeeeeee
                    phone: '1234567899'
                  dupCheck: false
              EFT:
                value:
                  merchantRefNum: '4533863971'
                  transactionType: PAYMENT
                  eft:
                    accountHolderName: XYZ Company
                    accountNumber: '336612'
                    transitNumber: '22446'
                    institutionId: '001'
                    paymentDescriptor: payment dtr
                  paymentType: EFT
                  currencyCode: CAD
                  amount: 500
                  customerIp: 172.0.0.1
                  billingDetails:
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
                  profile:
                    firstName: Poke
                    lastName: mon
                    email: Poke.mon@canada.com
                    ssn: '234456789'
                    dateOfBirth:
                      year: 1965
                      month: 10
                      day: 12
                  merchantDescriptor:
                    dynamicDescriptor: OnlineStoreeeeeeeee
                    phone: '1234567899'
                  dupcheck: true
              Skrill 1-Tap:
                value:
                  merchantRefNum: 6a052cf0-bbde-4560-8eb0-4188f57cf4f9
                  transactionType: PAYMENT
                  paymentType: SKRILL1TAP
                  amount: 100
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  accountId: '1002565790'
                  skrill1tap:
                    consumerId: '1234898'
                    language: EN
                    logoUrl: 'http://www.paysafe.com/icon.jpg'
                    recipientDescription: "Recipient\_Description"
                    detail1Text: "Detail\_1\_text"
                    detail1Description: "Detail\_1\_description"
                    descriptor: "test\_descriptor"
                    maxAmount: 500
                    emailMessage: test
                    emailSubject: test
                  billingDetails:
                    nickName: Home
                    street: "100\_Queen"
                    street2: "Unit\_201"
                    city: Toronto
                    zip: "M5H\_2N2"
                    country: CA
                  merchantDescriptor:
                    dynamicDescriptor: OnlineStore
                    phone: '12345678'
                  profile:
                    firstName: pawan
                    lastName: Kalyan
                    email: test@paysafe.com
                    phone: '1234567890'
                  returnLinks:
                    - rel: default
                      href: 'https://usgaminggamblig.com/payment/return/success'
                    - rel: on_failed
                      href: 'https://usgaminggamblig.com/payment/return/failed'
                    - rel: on_cancelled
                      href: 'https://usgaminggamblig.com/payment/return/cancelled'
                    - rel: on_error
                      href: 'https://usgaminggamblig.com/payment/return/on_error'
                    - rel: on_completed
                      href: 'https://usgaminggamblig.com/payment/return/on_completed'
                    - rel: on_processing
                      href: 'https://usgaminggamblig.com/payment/return/on_processing'
              ApplePay:
                value:
                  merchantRefNum: e93cf2ef-077c-422d-8942-ff92c5cf8103
                  transactionType: PAYMENT
                  amount: 123
                  currencyCode: USD
                  accountId: '1016343990'
                  applePay:
                    label: Pay with Apple
                    requestBillingAddress: true
                    applePayPaymentToken:
                      token:
                        paymentData:
                          data: crc1wsCG/2WWXtXQPoOsgtjJoKQSbwc7L6lHgHmLKg30a9Z6l4Ph/xUoEelUxE4G6UNMuxgEn1FRm1zDOcbFKNksI/Q/Nk75bybUWGAilXZ7VghYRjzjvmKKOHTMVkU8vTn4mbQGrTiyAsVPkCuF5BuuEM0C2QiAhDb5Tz5xyna3dv3hAgTLdyDlbI1vs1hBb2KaDUkF9InzYB5BoExMauqn6/8WR8noi0FUHJYejsAmlLgbXi98OnkFcueQwKgXICQmg6l+NR3H28RZRLTTnP1+gdHk3oMiozLliDwY1cBlPz7EQDT4VWUWRIkhJIiKHLb/p/Wn3S+sjbzruIQ007mVx3BTYwNQM+9W01t940sO8w7pbmhmWOAIvsYq/mft6dEFNIQt3Urr0ieF
                          signature: MIAGCSqGSIb3DQEHAqCAMIACAQExDzANBglghkgBZQMEAgEFADCABgkqhkiG9w0BBwEAAKCAMIID5DCCA4ugAwIBAgIIWdihvKr0480wCgYIKoZIzj0EAwIwejEuMCwGA1UEAwwlQXBwbGUgQXBwbGljYXRpb24gSW50ZWdyYXRpb24gQ0EgLSBHMzEmMCQGA1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMB4XDTIxMDQyMDE5MzcwMFoXDTI2MDQxOTE5MzY1OVowYjEoMCYGA1UEAwwfZWNjLXNtcC1icm9rZXItc2lnbl9VQzQtU0FOREJPWDEUMBIGA1UECwwLaU9TIFN5c3RlbXMxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEgjD9q8Oc914gLFDZm0US5jfiqQHdbLPgsc1LUmeY+M9OvegaJajCHkwz3c6OKpbC9q+hkwNFxOh6RCbOlRsSlaOCAhEwggINMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAUI/JJxE+T5O8n5sT2KGw/orv9LkswRQYIKwYBBQUHAQEEOTA3MDUGCCsGAQUFBzABhilodHRwOi8vb2NzcC5hcHBsZS5jb20vb2NzcDA0LWFwcGxlYWljYTMwMjCCAR0GA1UdIASCARQwggEQMIIBDAYJKoZIhvdjZAUBMIH+MIHDBggrBgEFBQcCAjCBtgyBs1JlbGlhbmNlIG9uIHRoaXMgY2VydGlmaWNhdGUgYnkgYW55IHBhcnR5IGFzc3VtZXMgYWNjZXB0YW5jZSBvZiB0aGUgdGhlbiBhcHBsaWNhYmxlIHN0YW5kYXJkIHRlcm1zIGFuZCBjb25kaXRpb25zIG9mIHVzZSwgY2VydGlmaWNhdGUgcG9saWN5IGFuZCBjZXJ0aWZpY2F0aW9uIHByYWN0aWNlIHN0YXRlbWVudHMuMDYGCCsGAQUFBwIBFipodHRwOi8vd3d3LmFwcGxlLmNvbS9jZXJ0aWZpY2F0ZWF1dGhvcml0eS8wNAYDVR0fBC0wKzApoCegJYYjaHR0cDovL2NybC5hcHBsZS5jb20vYXBwbGVhaWNhMy5jcmwwHQYDVR0OBBYEFAIkMAua7u1GMZekplopnkJxghxFMA4GA1UdDwEB/wQEAwIHgDAPBgkqhkiG92NkBh0EAgUAMAoGCCqGSM49BAMCA0cAMEQCIHShsyTbQklDDdMnTFB0xICNmh9IDjqFxcE2JWYyX7yjAiBpNpBTq/ULWlL59gBNxYqtbFCn1ghoN5DgpzrQHkrZgTCCAu4wggJ1oAMCAQICCEltL786mNqXMAoGCCqGSM49BAMCMGcxGzAZBgNVBAMMEkFwcGxlIFJvb3QgQ0EgLSBHMzEmMCQGA1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMB4XDTE0MDUwNjIzNDYzMFoXDTI5MDUwNjIzNDYzMFowejEuMCwGA1UEAwwlQXBwbGUgQXBwbGljYXRpb24gSW50ZWdyYXRpb24gQ0EgLSBHMzEmMCQGA1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE8BcRhBnXZIXVGl4lgQd26ICi7957rk3gjfxLk+EzVtVmWzWuItCXdg0iTnu6CP12F86Iy3a7ZnC+yOgphP9URaOB9zCB9DBGBggrBgEFBQcBAQQ6MDgwNgYIKwYBBQUHMAGGKmh0dHA6Ly9vY3NwLmFwcGxlLmNvbS9vY3NwMDQtYXBwbGVyb290Y2FnMzAdBgNVHQ4EFgQUI/JJxE+T5O8n5sT2KGw/orv9LkswDwYDVR0TAQH/BAUwAwEB/zAfBgNVHSMEGDAWgBS7sN6hWDOImqSKmd6+veuv2sskqzA3BgNVHR8EMDAuMCygKqAohiZodHRwOi8vY3JsLmFwcGxlLmNvbS9hcHBsZXJvb3RjYWczLmNybDAOBgNVHQ8BAf8EBAMCAQYwEAYKKoZIhvdjZAYCDgQCBQAwCgYIKoZIzj0EAwIDZwAwZAIwOs9yg1EWmbGG+zXDVspiv/QX7dkPdU2ijr7xnIFeQreJ+Jj3m1mfmNVBDY+d6cL+AjAyLdVEIbCjBXdsXfM4O5Bn/Rd8LCFtlk/GcmmCEm9U+Hp9G5nLmwmJIWEGmQ8Jkh0AADGCAYwwggGIAgEBMIGGMHoxLjAsBgNVBAMMJUFwcGxlIEFwcGxpY2F0aW9uIEludGVncmF0aW9uIENBIC0gRzMxJjAkBgNVBAsMHUFwcGxlIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUwIIWdihvKr0480wDQYJYIZIAWUDBAIBBQCggZUwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMjEwOTA5MTUxMDIzWjAqBgkqhkiG9w0BCTQxHTAbMA0GCWCGSAFlAwQCAQUAoQoGCCqGSM49BAMCMC8GCSqGSIb3DQEJBDEiBCALhfgr30p4YER31+Gpjqy12gCF3knS1vKEHAFOr41UWjAKBggqhkjOPQQDAgRHMEUCIClcW39OnFDHNA0Klj+f90ydMz8MUz1jIRCWjZl6G5+6AiEApNrnBuLx9Z004GEuG4LBUp1paIuFYG96rdJXq7L9cjUAAAAAAAA=
                          header:
                            publicKeyHash: jaI8zb3+bTPrkEHLe/edIBuRjWbkRm1YKtUXX/FuIRw=
                            ephemeralPublicKey: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE41aqNv3ogcZU+oMSztrAwyfZJPYZaSLVhObI5FxRwjd609HFwsJ7Fy4lFmSvl4pqwn+gAw5OB8sfpzIfDWuYCQ==
                            transactionId: c852f15513dd58f97b6b4094e3f897087d95d8f1fe08dc00bc39179aae434e31
                          version: EC_v1
                        paymentMethod:
                          displayName: MasterCard 1470
                          network: MasterCard
                          type: credit
                        transactionIdentifier: C852F15513DD58F97B6B4094E3F897087D95D8F1FE08DC00BC39179AAE434E31
                      billingContact:
                        addressLines:
                          - 19111 Deertrl
                        administrativeArea: ''
                        country: USA
                        countryCode: US
                        familyName: Nasov
                        givenName: Nike
                        locality: Cumming
                        phoneticFamilyName: ''
                        phoneticGivenName: ''
                        postalCode: '30004'
                        subAdministrativeArea: GA
                        subLocality: ''
                  paymentType: CARD
                  profile:
                    firstName: Vishnu
                    lastName: Vardhan
                    email: vishnu@paysafe.com
                    phone: '1231231231'
                    dateOfBirth:
                      day: 1
                      month: 7
                      year: 1990
                  returnLinks:
                    - rel: on_completed
                      href: 'https://be74-116-50-59-180.ngrok.io/checkout/v2/pages/redirect-success.html'
                      method: GET
                    - rel: on_failed
                      href: 'https://be74-116-50-59-180.ngrok.io/checkout/v2/pages/redirect-error.html'
                      method: GET
                    - rel: default
                      href: 'https://be74-116-50-59-180.ngrok.io/checkout/v2/pages/redirect-success.html'
                      method: GET
                  dupCheck: false
                  billingDetails:
                    country: US
                    zip: '30040'
                    state: GA
                    city: Alpharetta
                    street: 19111 Deertrl
              Apple Pay Decrypted:
                value:
                  merchantRefNum: e93cf2ef-077c-422d-8942-ff92c5cf8103
                  transactionType: PAYMENT
                  amount: 123
                  currencyCode: USD
                  accountId: '1016343990'
                  applePay:
                    label: Pay with Apple
                    requestBillingAddress: true
                    applePayPaymentToken:
                      token:
                        paymentData:
                          decryptedData:
                            applicationPrimaryAccountNumber: '5076020000000006'
                            applicationExpirationDate: '231111'
                            currencyCode: '840'
                            transactionAmount: '1499'
                            cardholderName: John Doe
                            deviceManufacturerIdentifier: OPAY
                            paymentDataType: 3DSecure
                            paymentData:
                              onlinePaymentCryptogram: Axoxoxoxoxo
                              eciIndicator: '7'
                        billingContact:
                          addressLines:
                            - 19111 Deertrl
                          administrativeArea: ''
                          country: USA
                          countryCode: US
                          familyName: Nasov
                          givenName: Nike
                          locality: Cumming
                          phoneticFamilyName: ''
                          phoneticGivenName: ''
                          postalCode: '30004'
                          subAdministrativeArea: GA
                          subLocality: ''
                    paymentType: CARD
                    profile:
                      firstName: Vishnu
                      lastName: Vardhan
                      email: vishnu@paysafe.com
                      phone: '1231231231'
                      dateOfBirth:
                        day: 1
                        month: 7
                        year: 1990
                    returnLinks:
                      - rel: on_completed
                        href: 'https://be74-116-50-59-180.ngrok.io/checkout/v2/pages/redirect-success.html'
                        method: GET
                      - rel: on_failed
                        href: 'https://be74-116-50-59-180.ngrok.io/checkout/v2/pages/redirect-error.html'
                        method: GET
                      - rel: default
                        href: 'https://be74-116-50-59-180.ngrok.io/checkout/v2/pages/redirect-success.html'
                        method: GET
                    dupCheck: false
                    billingDetails:
                      country: US
                      zip: '30040'
                      state: GA
                      city: Alpharetta
                      street: 19111 Deertrl
              Online Bank Transfer via Safetypay Express - Without Bank Code:
                value:
                  amount: 1000
                  currencyCode: BRL
                  dupCheck: true
                  merchantRefNum: 11b93b1f-2c97-401a-8fae-b2cf9c537048
                  transactionType: PAYMENT
                  paymentExpiryMinutes: 15
                  accountId: '1002495210'
                  paymentType: ONLINE_BANK_TRANSFER
                  profile:
                    email: BRTESTQA202_01@gmail.com
                  paymentDetails:
                    countryCode: BR
                  returnLinks:
                    - rel: default
                      href: 'https://www.paysafe.com/en/'
              Online Bank Transfer via Safetypay Express - With Bank Code:
                value:
                  amount: 1000
                  currencyCode: BRL
                  dupCheck: true
                  merchantRefNum: 61896753-3204-491d-8344-61c5480ee3d9
                  transactionType: PAYMENT
                  paymentExpiryMinutes: 15
                  accountId: '1002495210'
                  paymentType: ONLINE_BANK_TRANSFER
                  profile:
                    email: BRTESTQA202_01@gmail.com
                  paymentDetails:
                    countryCode: BR
                    bankNameCodes:
                      - ITAU
                  returnLinks:
                    - rel: default
                      href: 'https://www.paysafe.com/en/'
              PIX via Safetypay Express:
                value:
                  amount: 500
                  currencyCode: BRL
                  dupCheck: true
                  merchantRefNum: f1e79262-fdee-4e7c-bd5e-006063f07d28
                  transactionType: PAYMENT
                  paymentExpiryMinutes: 15
                  accountId: '1002495220'
                  paymentType: PIX
                  profile:
                    email: BRPIXQA0220_01@gmail.com
                  returnLinks:
                    - rel: default
                      href: 'https://www.paysafe.com/en/'
              Khipu via Safetypay Express:
                value:
                  amount: 47000
                  currencyCode: CLP
                  dupCheck: true
                  liveMode: true
                  merchantRefNum: eb23d35f-761c-4496-8c01-0cd6a5a5be71
                  transactionType: PAYMENT
                  paymentExpiryMinutes: 15
                  accountId: '1002495260'
                  paymentType: KHIPU
                  profile:
                    email: CLKHIPU0212_01@gmail.com
                  returnLinks:
                    - rel: default
                      href: 'http://www.amazon.ca'
              Mach via Safetypay Express:
                value:
                  amount: 500
                  currencyCode: CLP
                  dupCheck: true
                  liveMode: true
                  merchantRefNum: 32e74478-37a3-46ac-ba2f-019b8c057432
                  transactionType: PAYMENT
                  paymentExpiryMinutes: 15
                  accountId: '1002495250'
                  paymentType: MACH
                  profile:
                    email: CLMACH0212_01@gmail.com
                  returnLinks:
                    - rel: default
                      href: 'http://www.amazon.ca'
              Boleto Bancario via Safetypay Express:
                value:
                  amount: 500
                  currencyCode: BRL
                  merchantRefNum: eb3b3cbe-1386-4c38-b967-63a90249e946
                  transactionType: PAYMENT
                  paymentExpiryMinutes: 15
                  accountId: '1002622940'
                  paymentType: BOLETO_BANCARIO
                  profile:
                    email: brlspcash@gmail.com
                  returnLinks:
                    - rel: default
                      href: 'http://www.amazon.ca'
                    - rel: on_failed
                      href: 'http://www.costco.ca'
                    - rel: on_cancelled
                      href: 'http://www.bestbuy.ca'
              Safetypay Cash via Safetypay Express - Without Bank Code:
                value:
                  amount: 500
                  currencyCode: BRL
                  merchantRefNum: 78c09d3e-f6c6-4c03-b8c0-4e21fb08f232
                  transactionType: PAYMENT
                  paymentExpiryMinutes: 20
                  accountId: '1002622950'
                  paymentType: SAFETYPAY_CASH
                  safetypayCash:
                    countryCode: BR
                  profile:
                    email: brlspcash@gmail.com
                  returnLinks:
                    - rel: default
                      href: 'http://www.amazon.ca'
              Safetypay Cash via Safetypay Express - With Bank Code:
                value:
                  amount: 500
                  currencyCode: BRL
                  merchantRefNum: 78c09d3e-f6c6-4c03-b8c0-4e21fb08f232
                  transactionType: PAYMENT
                  paymentExpiryMinutes: 20
                  accountId: '1002622950'
                  paymentType: SAFETYPAY_CASH
                  safetypayCash:
                    countryCode: BR
                    bankNameCodes:
                      - LOTERICAS
                  profile:
                    email: brlspcash@gmail.com
                  returnLinks:
                    - rel: default
                      href: 'http://www.amazon.ca'
      description: |-
        A Payment Handle represents tokenized information about the payment method that you set up for a customer. Once the Payment Handle is created, you then include the *paymentHandleToken* returned in the Payment Handle request response in a new [Payment](/operations/process-payment) / [Standalone Credit](/operations/process-standalone-credit) / [Original Credit](/operations/process-original-credit) / [Verification](/operations/verification) request.

        >**Note:** A payment Handle can be used in a [Payment](/operations/process-payment) / [standalone Credit](/operations/process-standalone-credit) / [Original Credit](/operations/process-original-credit) / [Verification](/operations/verification) request only if it has the status of **PAYABLE**

        See the examples of how to create a Payment Handle object for the following payment methods:

        - A Payment Handle for a standard credit card authorization

        - A Payment Handle for a credit card that is registered for 3D Secure - the response for this request will contain a redirect to present to the customer so they can validate their 3D Secure credentials

        - A Payment Handle for a ApplePay payment
        
        - A Payment Handle for a GooglePay payment

        - A Payment Handle for a Neteller payment

        - A Payment Handle for a Paysafecash payment

        - A Payment Handle for a Paysafecard payment

        - A Payment Handle for a Paypal payment

        - A Payment Handle for a Venmo payment

        - A Payment Handle for a VIP Preferred payment

        - A Payment Handle for a Mazooma payment

        - A Payment Handle for a Play+ (Sightline) payment

        - A Payment Handle for a Interac Online payment

        - A Payment Handle for a Interac E-Transfer payment

        - A Payment Handle for a Rapid Transfer payment

        - A Payment Handle for a Skrill 1-Tap payment

        - A Payment Handle for an ACH payment

        - A Payment Handle for an EFT payment

        - A Payment Handle for an Online Bank Transfer via Safetypay Express.

        - A Payment Handle for a PIX via Safetypay Express.

        - A Payment Handle for a Khipu via Safetypay Express.

        - A Payment Handle for a Mach via Safetypay Express.

        - A Payment Handle for a Boleto Bancario via Safetypay Express.

        - A Payment Handle for a Safetypay Cash via Safetypay Express.

        >**Note:** Profile object & DOB is mandatory for Paysafe Card Payouts.

        >**Note:** The status of Payment Handles will remain INITIATED for the following cases:

        - When the customer is redirected to a redirect_payment URL until the customer verifies the payment instrument.

        - When the requested amount is more than the maximum amount configured in the Business Portal.

        - When Alternate Payment Methods like Paysafecash, Paysafecards are selected by the customer.

        Click on **Send API Request** after entering the required data, to see how to create a Payment Handle for the supported payment instruments by paysafe.
      tags:
        - Payment Handles
  /v1/singleusepaymenthandles/search:
    post:
      summary: Search for SafetyPay Payment Handle
      operationId: search-for-payment-handle
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentHandle'
              examples:
                LookUp a Payment Handle:
                  value:
                    id: f9dd30a4-7ec3-4fec-a21c-7d3f9e38fe61
                    paymentType: PIX
                    paymentHandleToken: PHyV9s8Frm3irEO9
                    merchantRefNum: '1653044860375'
                    currencyCode: BRL
                    txnTime: '2023-01-20T12:19:01Z'
                    billingDetails:
                      street: '100'
                      street2: Queen Street
                      city: Cupertino
                      zip: '14236'
                      state: NY
                      country: BR
                    customerIp: 10.195.92.26
                    status: PAYABLE
                    links:
                      - rel: redirect_payment
                        href: 'https://api.qa.paysafe.com/alternatepayments/v1/redirect?accountId=1020474950&paymentHandleId=f9dd30a4-7ec3-4fec-a21c-7d3f9e38fe61&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDIwNDc0OTUwIiwicHlkIjoiZjlkZDMwYTQtN2VjMy00ZmVjLWEyMWMtN2QzZjllMzhmZTYxIiwiZXhwIjoxNjc0MjE4OTQyfQ.yiXNJ_lvLlETh1SpcaoxDdlPcHq8r0v_eIj5Jzv_0R4'
                    liveMode: false
                    simulator: INTERNAL
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 123
                    merchantDescriptor:
                      dynamicDescriptor: Test Description
                      phone: '5555345456'
                    timeToLiveSeconds: 316
                    gatewayResponse:
                      operationId: '1615075000887649'
                      id: f3fd07c2-97a4-4e43-b190-199b90b161b3
                      processor: SAFETYPAY
                      transactionId: '373011'
                    returnLinks:
                      - rel: on_completed
                        href: 'https://api.dev.paysafe.com/checkout/v2/pages/redirect-success.html'
                      - rel: default
                        href: 'https://api.dev.paysafe.com/checkout/v2/pages/redirect-success.html'
                      - rel: on_failed
                        href: 'https://api.dev.paysafe.com/checkout/v2/pages/redirect-error.html'
                    transactionType: PAYMENT
                    gatewayReconciliationId: f3fd07c2-97a4-4e43-b190-199b90b161b3
                    updatedTime: '2023-01-20T12:21:00Z'
                    statusTime: '2023-01-20T12:21:00Z'
                    shippingDetails:
                      recipientName: Vishnu
                      street: 20735 Stevens Creek Blvd
                      street2: Montessori
                      city: Cupertino
                      state: CA
                      country: US
                      zip: '95014'
                    pix:
                      fundingInstructions:
                        - bankName: Scotiabank Perú
                          expirationTime: '2023-01-20T13:49:02Z'
                          displayOptions:
                            - name: TransactionID
                              value: '721170'
                              displayLabel: Código de pago
                            - name: AgreementCode
                              value: SafetyPay
                              displayLabel: Pago de servicios
                          steps:
                            - number: 1
                              instruction: Log on to online banking for Scotiabank as usual.
                            - number: 2
                              instruction: 'Select the “Payments”, then the option “Other Institutions” and institution type choose “other”. Then click on “Search”.'
                            - number: 3
                              instruction: In the list choose SafetyPay and type of currency to pay for your purchase. Entry the "number of transactions" that gave the merchant. Confirm the purchase amount and select your payment account.
                            - number: 4
                              instruction: Confirm the transaction with the number that gives your Token key and you are done!.
                        - bankName: Scotiabank Perú
                          expirationTime: '2023-01-20T13:49:02Z'
                          displayOptions:
                            - name: TransactionID
                              value: '721170'
                              displayLabel: Código de pago
                            - name: AgreementCode
                              value: SafetyPay
                              displayLabel: Pago de servicios
                          steps:
                            - number: 1
                              instruction: Log on to online banking for Scotiabank as usual.
                            - number: 2
                              instruction: 'Select the “Payments”, then the option “Other Institutions” and institution type choose “other”. Then click on “Search”.'
                            - number: 3
                              instruction: In the list choose SafetyPay and type of currency to pay for your purchase. Entry the "number of transactions" that gave the merchant. Confirm the purchase amount and select your payment account.
                            - number: 4
                              instruction: Confirm the transaction with the number that gives your Token key and you are done!.
                    profile:
                      firstName: ALBERTA
                      lastName: BOBBETHCHARLESON
                      email: accountholder0@example.com
                      dateOfBirth:
                        day: 23
                        month: 12
                        year: 1990
                      phone: '1234567890'
                      identityDocuments:
                        - type: BUSINESS_TAX_IDENTIFICATION
                          documentNumber: '28693915000149'
      parameters:
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
            default: EXTERNAL
          in: header
          name: Simulator
      description: |-
        Click on **Send API Request** after entering the required data, to look-up an SafetyPay PaymentHandle Search.

        >**Note:** You can use this api to look up an payment handle that was created for the following payment methods *Pagoefectivo, PIX, SPEI, MACH, Boleto, SafetyPayBankTransfer, SafetyPayCash and Khipu*.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/searchPaymentHandle'
            examples:
              Look Up a Payment Handle:
                value:
                  paymentHandleToken: PHyV9s8Frm3irEO9
      tags:
        - Payment Handles
      x-internal: true
  '/v1/paymenthandles/{paymentHandleId}':
    get:
      summary: Get Payment Handle
      tags:
        - Payment Handles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentHandleWithOptionalNetworkTokenOrApplePay'
              examples:
                Look Up a Payment Handle Using Id:
                  value:
                    id: 64b614b8-753d-4404-b491-2dd8b817c40b
                    paymentType: SKRILL
                    paymentHandleToken: PHsLl14Tfi4l22gs
                    merchantRefNum: ' merchantRefNum-321'
                    currencyCode: USD
                    dupCheck: true
                    txnTime: '2019-06-24T14:18:33.000+0000'
                    billingDetails:
                      street: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                    customerIp: 172.0.0.1
                    status: INITIATED
                    links:
                      - rel: redirect_payment
                        href: 'https://api.qa.paysafe.com/alternatepayments/v1/redirect?accountId=1010608990&paymentHandleId=64b614b8-753d-4404-b491-2dd8b817c40b&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDEwNjA4OTkwIiwicHlkIjoiNjRiNjE0YjgtNzUzZC00NDA0LWI0OTEtMmRkOGI4MTdjNDBiIiwiZXhwIjoxNTYxMzg3NzEzfQ.LGZ8K3yYqR0_J7iNicVCfcmZFIo8xkiX0hg4WpnHm_c'
                    liveMode: true
                    usage: SINGLE_USE
                    action: REDIRECT
                    executionMode: SYNCHRONOUS
                    amount: 100
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStore
                      phone: '12345678'
                    timeToLiveSeconds: 899
                    gatewayResponse:
                      sid: 9e55a0ac44474c2d9f3813d7f65b07c4
                      processor: SKRILL_QCO
                    authentication:
                      exemptionIndicator: LOW_VALUE_EXEMPTION
                    returnLinks:
                      - rel: on_completed
                        href: 'https://usgaminggamblig/payment/return/success'
                        method: GET
                      - rel: on_failed
                        href: 'https://usgaminggamblig/payment/return/failed'
                        method: GET
                    transactionType: PAYMENT
                    updatedTime: '2019-06-24T14:18:33Z'
                    statusTime: '2019-06-24T14:18:33Z'
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
      operationId: get-payment-handle
      description: 'Click on **Send API Request**, after entering the required data in the request, tosee how to look up a Payment Handle using the ID returned in the response of the [original request](/operations/create-payment-handle). '
      parameters: []
    parameters:
      - schema:
          type: string
          example: 26359efd-7cfb-4014-a13d-1724e3ff17fa
        name: paymentHandleId
        in: path
        required: true
        description: 'This is the Payment Handle ID returned in the response to the [Payment Handle creation request](/operations/create-payment-handle).'
  /v1/verifications:
    post:
      summary: Verification
      operationId: verification
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/verification'
              examples:
                Card:
                  value:
                    id: 1871638c-0be8-42b8-b5c3-224f8d52ef20
                    paymentType: CARD
                    paymentHandleToken: SCTGXiTclLWRk5Pt
                    merchantRefNum: 2ca14f87ff6f60976d18
                    currencyCode: USD
                    txnTime: '2023-01-20T06:03:14Z'
                    billingDetails:
                      street: TEST
                      city: CA
                      zip: '12345'
                      state: CA
                      country: US
                    customerIp: 172.10.12.64
                    status: COMPLETED
                    description: Winning payment from Loto 649
                    gatewayResponse:
                      authCode: XXXXXX
                      cvvVerification: NOT_PROCESSED
                      nameVerification: MATCH
                      firstNameVerification: MATCH
                      lastNameVerification: MATCH
                      serializable: true
                    card:
                      cardExpiry:
                        month: '10'
                        year: '2025'
                      holderName: Dilip
                      cardType: VI
                      cardBin: '453091'
                      lastDigits: '2345'
                      cardCategory: CREDIT
                      issuingCountry: US
                    profile:
                      locale: en_US
                      firstName: John
                      lastName: Smith
                      email: john.smith@somedomain.com
                      phone: 713-444-5555
                      dateOfBirth:
                        day: 6
                        month: 5
                        year: 1998
                    authentication:
                      id: 5d4db3bc-34c9-417f-a051-0d992ad9284e
                      eci: 5
                      cavv: AAABBhkXYgAAAAACBxdiENhf7A+=
                      xid: aWg4N1ZZOE53TkFrazJuMmkyRDA=
                      status: 'COMPLETED '
                      merchantRefNum: merchantABC-123-authentications
                      threeDEnrollment: 'Y'
                      threeDResult: 'Y'
                      signatureStatus: 'Y'
                      exemptionIndicator: 'LOW_VALUE_EXEMPTION'
                    paymentFacilitator:
                      subMerchant:
                        id: '123456789'
                        name: PayFacSubMerchant
                        phone: '478234562331'
                        email: payfac@mail.com
                        url: www.payfac.com
                        address:
                          street: 100 Queen Street West
                          city: London
                          country: GB
                          zip: M5H 2N2 
                Interac_ETransfer:
                  value:
                    id: 3d19c3c4-5d68-40c3-8bcf-8691635b7a84
                    paymentType: INTERAC_ETRANSFER
                    paymentHandleToken: PHDY4m35v7a1AzF8
                    merchantRefNum: 6a02ad39-e34a-4243-a044-c716c9ca7dea
                    currencyCode: CAD
                    txnTime: '2023-01-20T08:48:19Z'
                    billingDetails:
                      street1: 100 Queen Street West
                      street2: stree 2
                      city: Toronto
                      zip: M5H 2N2
                      state: CA
                      country: NL
                    status: COMPLETED
                    amount: 543
                    updatedTime: '2023-01-20T08:48:19Z'
                    statusTime: '2023-01-20T08:48:19Z'
                    liveMode: false
                    simulator: EXTERNAL
                    gatewayResponse:
                      processor: PEOPLE_TRUST
                    interacEtransfer:
                      consumerId: madhu@paysafe.com
                      maxAmount: 500000
                      transferType: ALIAS_REGULAR
                    profile:
                      firstName: Madhu
                      lastName: Baddam
                      email: madhu.baddam@paysafe.com
                Mazooma:
                  value:
                    id: 20796421-04b2-46c9-a273-6a9604cc964f
                    paymentType: MAZOOMA
                    merchantRefNum: SriTest-1674192083
                    currencyCode: USD
                    txnTime: '2023-01-20T05:22:07Z'
                    billingDetails:
                      street1: Queen Street West
                      street2: Queen Street
                      city: Imphal
                      zip: '14236'
                      state: NY
                      country: US
                    status: COMPLETED
                    amount: 100
                    updatedTime: '2023-01-20T05:22:08Z'
                    statusTime: '2023-01-20T05:22:08Z'
                    liveMode: false
                    simulator: INTERNAL
                    gatewayResponse:
                      processor: MAZOOMA
                    mazooma:
                      consumerId: Nitin_04
                      achBankAccounts:
                        - id: 8181d9d2-5035-4f23-8e24-4cf5c5548d15
                          lastDigits: '99'
                          bankName: CHASE
                          paymentToken: BAitJ4nDIYRfo9um
                          allowedTypes:
                            - PAYMENT
                            - STANDALONE_CREDIT
                      registrationId: 597e32ed-414f-4ac4-bab4-ecc9f59238f7
                    profile:
                      firstName: ALBERTA
                      lastName: BOBBETHCHARLESON
                      email: accountholder0@example.com
                      dateOfBirth:
                        day: 23
                        month: 12
                        year: 1990
                      phone: '1234567890'
                Sightline:
                  value:
                    id: 25f6dadf-176a-415f-95c9-6ff39ff697ba
                    txnTime: '2018-12-11T16:33:49Z'
                    paymentType: CARD
                    status: RECEIVED
                    currencyCode: CAD
                    riskReasonCode:
                      - 1001
                    gatewayResponse:
                      id: string
                      processor: string
                      code: string
                      responseCode: string
                      avsCode: string
                      avsResponse: MATCH
                      balanceResponse: string
                      mid: string
                      terminalId: string
                      batchNumber: string
                      seqNumber: string
                      effectiveDate: string
                      financingType: string
                      plan: string
                      gracePeriod: string
                      term: string
                      responseId: string
                      requestId: string
                      description: string
                      authCode: string
                      txnDateTime: string
                      referenceNbr: string
                      responseReasonCode: string
                      cvvVerification: MATCH
                      cvv2Result: string
                      status: string
                      orderId: string
                      profile:
                        id: string
                        status: string
                        merchantCustomerId: string
                        lastName: Chagalamarri
                        locale: en_US
                        firstName: Venkata Suresh
                        dateOfBirth:
                          day: 6
                          month: 5
                          year: 1998
                        email: paysafe@gmail.com
                        phone: '1234567891'
                        mobile: '9846573804'
                        gender: M
                        nationality: Indian
                        identityDocuments:
                          - identityDocuments:
                              - type: SOCIAL_SECURITY
                                documentNumber: SSN123456
                    error:
                      code: '5068'
                      message: Field error(s)
                      details:
                        - Either you submitted a request that is missing a mandatory field or the value of a field does not match the format expected.
                      fieldErrors:
                        - field: country
                          error: must not be null
                    merchantRefNum: P1234
                    paymentHandleToken: 842778a0-03a2-11e9-8eb2-f2801f1b9fd1
                    customerIp: 111.111.111.111
                    dupCheck: true
                    description: Consumer Card Verification
                Pay by Bank:
                  value:
                    id: d0da26c1-0473-4dc4-b638-982bc57619b5
                    paymentType: PAY_BY_BANK
                    merchantRefNum: 511905d9-90d2-46d8-b016-a1466896fd02
                    currencyCode: USD
                    txnTime: '2024-03-04T10:38:18Z'
                    status: COMPLETED
                    amount: 100
                    updatedTime: '2024-03-04T10:38:18Z'
                    statusTime: '2024-03-04T10:38:18Z'
                    liveMode: false
                    gatewayResponse:
                      processor: PAY_BY_BANK
                    payByBank:
                      consumerId: qa_perf_test_consumer_0001
                      achBankAccounts: []
                    profile:
                      firstName: Perf 0001
                      lastName: Cons 0001
                VIP Preferred:
                  value:
                    id: d4dfa6b2-5279-4691-8ff4-667203faeba0
                    paymentType: VIPPREFERRED
                    paymentHandleToken: SVyTBCXUeu85kkqY
                    merchantRefNum: d719491b-a55b-4620-aa0f-411699fb7180
                    currencyCode: USD
                    txnTime: '2023-01-27T08:01:07Z'
                    billingDetails:
                      street1: street
                      city: ca
                      zip: '50087'
                      state: CA
                      country: US
                    status: COMPLETED
                    amount: 1000
                    updatedTime: '2023-01-27T08:01:08Z'
                    statusTime: '2023-01-27T08:01:08Z'
                    liveMode: false
                    simulator: EXTERNAL
                    gatewayResponse:
                      processor: VIPPREFERRED
                      availableBalance: '4500.00'
                    vippreferred:
                      consumerId: '181775340'
                      achBankAccounts:
                        - id: 134183f4-84b6-4d38-b13a-37e900759f87
                          bankName: U.S. Bank National Association
                          registrationId: 6324d6c9-cc9e-47c5-a4bb-7e582f0b0809
                          routingNumber: '123103729'
                          lastDigits: '40'
                          paymentHandleToken: BAD1FYgozuAkIped
                    profile:
                      firstName: Pavan
                      lastName: Kalyan
                      email: test@paysafe.com
                      phone: '1234567890'
                Skrill:
                  value:
                    id: c6ebb717-579a-4e73-ae50-325e632a6688
                    paymentType: SKRILL
                    paymentHandleToken: PHLX3xArZrKNKkde
                    merchantRefNum: 4b54f974-3894-4ad4-88e9-a6783d84e071
                    currencyCode: USD
                    txnTime: '2023-01-12T12:36:53Z'
                    billingDetails:
                      street1: 777 Queen Street West
                      street2: stree 2
                      city: Toronto
                      zip: '1510'
                      state: CA
                      country: GB
                    status: COMPLETED
                    updatedTime: '2023-01-12T12:36:54Z'
                    statusTime: '2023-01-12T12:36:54Z'
                    liveMode: false
                    simulator: EXTERNAL
                    gatewayResponse:
                      zipVerification: MATCH
                      lastNameVerification: MATCH
                      countryVerification: MATCH
                      verificationLevel: '11'
                      streetVerification: NO_MATCH
                      dateOfBirthVerification: MATCH
                      firstNameVerification: MATCH
                    profile:
                      firstName: Elvis
                      lastName: GBP Two
                      email: elvisstoyanov.gbp2@sun-fish.com
                      dateOfBirth:
                        day: 1
                        month: 1
                        year: 1918
                Neteller:
                  value:
                    id: 7fd8bee5-ee0c-4c33-bf4a-3cb24883be10
                    paymentType: NETELLER
                    paymentHandleToken: PHf8kkmYW6oqqrpo
                    merchantRefNum: 4e5d60af-cb17-491d-8ada-6d4c44edb64a
                    currencyCode: USD
                    txnTime: '2023-01-13T11:06:58Z'
                    billingDetails:
                      street1: steet
                      city: ca
                      zip: '1234'
                      state: CA
                      country: BG
                    status: COMPLETED
                    amount: 100
                    updatedTime: '2023-01-13T11:06:59Z'
                    statusTime: '2023-01-13T11:06:59Z'
                    liveMode: false
                    simulator: EXTERNAL
                    gatewayResponse:
                      zipVerification: MATCH
                      lastNameVerification: NO_MATCH
                      consumerIdVerification: MATCH
                      countryVerification: MATCH
                      verificationLevel: '10'
                      streetVerification: NO_MATCH
                      processor: PAYSAFE_DIGITALWALLET
                      firstNameVerification: NO_MATCH
                    profile:
                      firstName: John
                      lastName: Smith
                      email: john.smith@somedomain.com
                      phone: 713-444-5555
      description: |-
        Verification allows merchants to validate a credit card without charging any amount on the card.

        **VIP Preferred**

          - Verification allows merchants to validate user's registration status.

          - If user is registered, then verification allows merchants to get bankToken associated with each bank account present in user's VIPP account. This bankToken is used when merchants want to initiate Payment/Withdrawal using direct APIs.

        **Skrill / Neteller**
              - User registration status is validated and all the parameters provided in the request are validated if the account is present.
          
        **Mazooma**
             - Verification allows merchants to get bankToken associated with each bank account present in user's Mazooma account. This bankToken is used when merchants want to initiate Payment using APIs.
             
        **Card**
             - Verification allows to verify the card is valid or not.
           
        **Interac E-Transfer**
             - Verrification is used to check whether user is registered for auto deposit or not.
        
        **Pay by Bank**
             - Verifications inform if the consumer is new to Pay by Bank or a returning one. If the user is registered, then verification allows merchants to get token associated with each bank account linked to user’s registration. This token is used when merchants want to initiate Payment/Withdrawal using direct APIs. 


           Click on **Send API Request** after entering the required data, to see how to submit a Verification request using Payment Handle Token.
             
      parameters:
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
            default: EXTERNAL
          in: header
          name: Simulator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/verificationRequest'
            examples:
              Card:
                value:
                  paymentHandleToken: SCTGXiTclLWRk5Pt
                  merchantRefNum: 2ca14f87ff6f60976d18
                  customerIp: 172.10.12.64
                  dupCheck: false
                  description: Winning payment from Loto 649
                  paymentFacilitator:
                    subMerchant:
                      id: '123456789'
                      name: PayFacSubMerchant
                      phone: '478234562331'
                      email: payfac@mail.com
                      url: www.payfac.com
                      address:
                        street: 100 Queen Street West
                        city: London
                        country: GB
                        zip: M5H 2N2 
              Interac_ETransfer:
                value:
                  paymentHandleToken: PHDY4m35v7a1AzF8
                  merchantRefNum: 6a02ad39-e34a-4243-a044-c716c9ca7dea
                  amount: '543'
              Mazooma:
                value:
                  paymentHandleToken: PHXrIX7Ttjh4d2g2
                  merchantRefNum: SriTest-1674192083
                  amount: 100
                  customerIp: 172.10.12.64
                  dupCheck: false
                  description: Winning payment from Loto 649
              Sightline:
                value:
                  amount: 1500
                  merchantRefNum: 2e14593b-b3da-4229-a726-2d8d3162a72b
                  paymentHandleToken: SVyTBCXUeu85kkqY
                  customerIp: 172.0.0.1
                  dupCheck: true
                  description: Winning payment from Loto 649
              Pay by Bank:
                value:
                  merchantRefNum: 511905d9-90d2-46d8-b016-a1466896fd02
                  amount: '100'
                  currencyCode: USD
                  dupCheck: true
                  paymentHandleToken: PHMcTZJHAUYXgKqm
                  customerIp: 127.0.0.1
                  description: Magazine subscription
              VIP Preferred:
                value:
                  amount: 1000
                  merchantRefNum: d719491b-a55b-4620-aa0f-411699fb7180
                  currencyCode: USD
                  paymentHandleToken: SVyTBCXUeu85kkqY
                  customerIp: 172.0.0.1
                  description: Winning payment from Loto 649
              Skrill:
                value:
                  merchantRefNum: 4b54f974-3894-4ad4-88e9-a6783d84e071
                  dupCheck: true
                  currencyCode: USD
                  paymentHandleToken: ' PHLX3xArZrKNKkde'
              Neteller:
                value:
                  merchantRefNum: 4e5d60af-cb17-491d-8ada-6d4c44edb64a
                  amount: 100
                  currencyCode: USD
                  dupCheck: true
                  settleWithAuth: true
                  paymentHandleToken: ' PHf8kkmYW6oqqrpo'
                  customerIp: 172.0.0.1
                  description: Magazine subscription
        description: ''
      tags:
        - Verifications
    get:
      summary: Get Verification Using Merchant Reference Number
      operationId: get-verification-using-merchant-reference-number
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/verificationList'
              examples:
                Example 1:
                  value:
                    meta:
                      numberOfRecords: 1
                      limit: 10
                      page: 1
                    verifications:
                      - id: 71aea8ae-e801-4df3-9436-c5a61c88d3ad
                        paymentHandleToken: SCUgzJL5jlRIKCiX
                        merchantRefNum: '2009581773001912343'
                        customerIp: 10.10.12.64
                        currencyCode: USD
                        paymentType: CARD
                        description: Verify card for payment request
                        txnTime: '2018-12-11T16:33:49Z'
                        gatewayResponse:
                          authCode: XXXXXX
                          avsResponse: MATCH
                          cvvVerification: NOT_PROCESSED
                          nameVerification: MATCH
                          firstNameVerification: MATCH
                          lastNameVerification: MATCH
                        status: COMPLETED
                        profile:
                          firstName: John
                          lastName: Smith
                          email: john.smith@somedomain.com
                          phone: 713-444-5555
                          dateOfBirth:
                            day: 6
                            month: 5
                            year: 1998
                        authentication:
                          id: 5d4db3bc-34c9-417f-a051-0d992ad9284e
                          eci: 5
                          cavv: AAABBhkXYgAAAAACBxdiENhf7A+=
                          xid: aWg4N1ZZOE53TkFrazJuMmkyRDA=
                          status: 'COMPLETED '
                          merchantRefNum: merchantABC-123-authentications
                          threeDEnrollment: 'Y'
                          threeDResult: 'Y'
                          signatureStatus: 'Y'
                          exemptionIndicator: 'LOW_VALUE_EXEMPTION'
                        paymentFacilitator:
                          subMerchant:
                            id: '123456789'
                            name: PayFacSubMerchant
                            phone: '478234562331'
                            email: payfac@mail.com
                            url: www.payfac.com
                            address:
                              street: 100 Queen Street West
                              city: London
                              country: GB
                              zip: M5H 2N2 
      description: 'Click on **Send API Request** after entering the required data, to see how to look up a Verification request using the merchant reference number used in the [original request](/operations/verification).'
      parameters:
        - schema:
            type: string
            example: '20095817730019123'
          in: query
          name: merchantRefNum
          description: 'This is the merchantRefNum used in the [Verification](/operations/verification) request.'
          required: true
        - schema:
            type: number
            default: 10
            maximum: 50
          in: query
          name: limit
          description: 'This is the total number of records to return. '
        - schema:
            type: number
            default: 0
            example: 0
          in: query
          name: offset
          description: 'This is the starting position, where 0 is the first record.'
        - schema:
            type: string
            format: date
            example: '2022-11-18'
          in: query
          name: startDate
          description: ' This is the start date in UTC. Default = 30 days before the endDate.'
        - schema:
            type: string
            format: date
            example: '2022-12-19'
          in: query
          name: endDate
          description: This is the end date in UTC. Default = current date and time.
      tags:
        - Verifications
  '/v1/verifications/{verificationId}':
    parameters:
      - schema:
          type: string
        name: verificationId
        in: path
        required: true
        description: 'This is the ID returned in the response of the [Verification](/operations/verification) request.'
    get:
      summary: Get Verification
      tags:
        - Verifications
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/verification'
              examples:
                Example 1:
                  value:
                    id: 71aea8ae-e801-4df3-9436-c5a61c88d3ad
                    paymentHandleToken: SCUgzJL5jlRIKCiX
                    merchantRefNum: '20095817730019123'
                    customerIp: 10.10.12.64
                    currencyCode: USD
                    paymentType: CARD
                    description: Verify card for payment request
                    txnTime: '2018-12-11T16:33:49Z'
                    gatewayResponse:
                      authCode: XXXXXX
                      avsResponse: MATCH
                      cvvVerification: NOT_PROCESSED
                      nameVerification: MATCH
                    status: COMPLETED
                    profile:
                      locale: en_US
                      firstName: John
                      lastName: Smith
                      email: john.smith@somedomain.com
                      phone: 713-444-5555
                      dateOfBirth:
                        day: 6
                        month: 5
                        year: 1998
                    authentication:
                      id: 5d4db3bc-34c9-417f-a051-0d992ad9284e
                      eci: 5
                      cavv: AAABBhkXYgAAAAACBxdiENhf7A+=
                      xid: aWg4N1ZZOE53TkFrazJuMmkyRDA=
                      status: 'COMPLETED '
                      merchantRefNum: merchantABC-123-authentications
                      threeDEnrollment: 'Y'
                      threeDResult: 'Y'
                      signatureStatus: 'Y'
                      exemptionIndicator: 'LOW_VALUE_EXEMPTION'
                    paymentFacilitator:
                      subMerchant:
                        id: '123456789'
                        name: PayFacSubMerchant
                        phone: '478234562331'
                        email: payfac@mail.com
                        url: www.payfac.com
                        address:
                          street: 100 Queen Street West
                          city: London
                          country: GB
                          zip: M5H 2N2 
      operationId: get-verification
      description: 'Click on **Send API Request** after entering the required data, to see how to lookup a Verification request using the ID returned in the response to the [original request](/operations/verification).'
      parameters: []
  /v1/payments:
    post:
      summary: Process Payment
      operationId: process-payment
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payment'
              examples:
                Card - without Settlement:
                  value:
                    id: 612d8958-6a3e-4d70-b432-aac1f38de671
                    paymentType: CARD
                    paymentHandleToken: SCPJ4dAVEe8fyoIE
                    merchantRefNum: 54a9c50c5f2707c813e5
                    currencyCode: USD
                    settleWithAuth: false
                    txnTime: '2023-01-20T05:42:10Z'
                    billingDetails:
                      nickName: Home
                      street: TEST
                      city: CA
                      zip: '94404'
                      state: CA
                      country: US
                    customerIp: 172.0.0.1
                    status: COMPLETED
                    amount: 500
                    preAuth: false
                    description: Magazine subscription
                    availableToSettle: 500
                    gatewayResponse:
                      code: VPS
                      responseCode: '00'
                      avsCode: X
                      authCode: '108173'
                      avsResponse: MATCH
                      cvvVerification: MATCH
                      serializable: true
                    merchantDescriptor:
                      dynamicDescriptor: '100,test'
                      phone: '1000000000'
                    card:
                      cardExpiry:
                        month: '10'
                        year: '2025'
                      holderName: Dilip
                      cardType: VI
                      cardBin: '400000'
                      lastDigits: '1026'
                      cardCategory: CREDIT
                      issuingCountry: US
                Card - with Settlement:
                  value:
                    id: 398e086d-f47b-4b3f-8a18-621e7ed35378
                    paymentType: CARD
                    paymentHandleToken: SC2INoYvSe2MzQuB
                    merchantRefNum: fc5b62df1202e491475d
                    currencyCode: USD
                    settleWithAuth: true
                    txnTime: '2023-01-27T10:15:29Z'
                    billingDetails:
                      nickName: Home
                      street: TEST
                      city: CA
                      zip: '94404'
                      state: CA
                      country: US
                    customerIp: 172.0.0.1
                    status: COMPLETED
                    amount: 500
                    preAuth: false
                    description: Magazine subscription
                    availableToSettle: 0
                    gatewayResponse:
                      code: VPS
                      responseCode: '00'
                      avsCode: X
                      authCode: '130416'
                      avsResponse: MATCH
                      cvvVerification: MATCH
                      serializable: true
                    merchantDescriptor:
                      dynamicDescriptor: '100,test'
                      phone: '1000000000'
                    settlements:
                      - merchantRefNum: fc5b62df1202e491475d
                        amount: 500
                        id: 398e086d-f47b-4b3f-8a18-621e7ed35378
                        availableToRefund: 500
                        txnTime: 1674814529000
                        status: PENDING
                    card:
                      cardExpiry:
                        month: '10'
                        year: '2025'
                      holderName: Dilip
                      cardType: VI
                      cardBin: '400000'
                      lastDigits: '1026'
                      cardCategory: CREDIT
                      issuingCountry: US
                Card - with Payment Facilitator details:
                  value:
                    id: 398e086d-f47b-4b3f-8a18-621e7ed35378
                    paymentType: CARD
                    paymentHandleToken: SC2INoYvSe2MzQuB
                    merchantRefNum: fc5b62df1202e491475d
                    currencyCode: USD
                    settleWithAuth: true
                    txnTime: '2023-01-27T10:15:29Z'
                    billingDetails:
                      nickName: Home
                      street: TEST
                      city: CA
                      zip: '94404'
                      state: CA
                      country: US
                    customerIp: 172.0.0.1
                    status: COMPLETED
                    amount: 500
                    preAuth: false
                    description: Magazine subscription
                    availableToSettle: 0
                    gatewayResponse:
                      code: VPS
                      responseCode: '00'
                      avsCode: X
                      authCode: '130416'
                      avsResponse: MATCH
                      cvvVerification: MATCH
                      serializable: true
                    merchantDescriptor:
                      dynamicDescriptor: '100,test'
                      phone: '1000000000'
                    settlements:
                      - merchantRefNum: fc5b62df1202e491475d
                        amount: 500
                        id: 398e086d-f47b-4b3f-8a18-621e7ed35378
                        availableToRefund: 500
                        txnTime: 1674814529000
                        status: PENDING
                    card:
                      cardExpiry:
                        month: '10'
                        year: '2025'
                      holderName: Dilip
                      cardType: VI
                      cardBin: '400000'
                      lastDigits: '1026'
                      cardCategory: CREDIT
                      issuingCountry: US
                    paymentFacilitator:
                      subMerchant:
                        id: '123456789'
                        name: PayFacSubMerchant
                        phone: '478234562331'
                        email: payfac@mail.com
                        url: www.payfac.com
                        address:
                          street: 100 Queen Street West
                          city: London
                          country: GB
                          zip: M5H 2N2 
                Card - with Airline Travel Details for Airline Merchants:
                  value:
                    id: 398e086d-f47b-4b3f-8a18-621e7ed35378
                    paymentType: CARD
                    paymentHandleToken: SC2INoYvSe2MzQuB
                    merchantRefNum: fc5b62df1202e491475d
                    currencyCode: USD
                    settleWithAuth: true
                    txnTime: '2023-01-27T10:15:29Z'
                    billingDetails:
                      nickName: Home
                      street: TEST
                      city: CA
                      zip: '94404'
                      state: CA
                      country: US
                    customerIp: 172.0.0.1
                    status: COMPLETED
                    amount: 500
                    preAuth: false
                    description: Magazine subscription
                    availableToSettle: 0
                    gatewayResponse:
                      code: VPS
                      responseCode: '00'
                      avsCode: X
                      authCode: '130416'
                      avsResponse: MATCH
                      cvvVerification: MATCH
                      serializable: true
                    merchantDescriptor:
                      dynamicDescriptor: '100,test'
                      phone: '1000000000'
                    settlements:
                      - merchantRefNum: fc5b62df1202e491475d
                        amount: 500
                        id: 398e086d-f47b-4b3f-8a18-621e7ed35378
                        availableToRefund: 500
                        txnTime: 1674814529000
                        status: PENDING
                    card:
                      cardExpiry:
                        month: '10'
                        year: '2025'
                      holderName: Dilip
                      cardType: VI
                      cardBin: '400000'
                      lastDigits: '1026'
                      cardCategory: CREDIT
                      issuingCountry: US
                    airlineTravelDetails:
                      passengerName: "John\_Smith"
                      departureDate: '2023-05-25'
                      origin: YUL
                      computerizedReservationSystem: BLAN
                      customerReferenceNumber: '123456'
                      passengerNameRecord: passNamRec
                      additionalBookingReference: additionalBookingRef
                      totalFare: 1000
                      totalFee: 100
                      totalTaxes: 10
                      ticket:
                        ticketNumber: 198J8928
                        isRestrictedTicket: false
                        cityOfTicketIssuing: Porto
                        ticketDeliveryMethod: E_TICKET
                        isAgencyCard: true
                        ticketIssueDate: '2022-05-27'
                        ticketPrice: 10
                        numberOfPax: 5
                      passengers:
                        passenger1:
                          ticketNumber: '56827'
                          firstName: firstName
                          lastName: lastName
                          phoneNumber: '7181855783'
                          passengerCode: INF
                          gender: M
                        passenger2:
                          ticketNumber: '56827'
                          firstName: firstName
                          lastName: lastName
                          phoneNumber: '7181855783'
                          passengerCode: INF
                          gender: M
                      travelAgency:
                        code: AGCODE
                        name: "Agency\_name"
                        agencyAddress:
                          street: street
                          zip: ZIP12
                          country: GB
                      tripLegs:
                        leg1:
                          serviceClass: F
                          isStopOverAllowed: false
                          destination: CDG
                          fareBasis: VMAY
                          departureDate: '2023-05-25'
                          serviceClassFee: 10
                          departureAirport: SOF
                          departureTime: '2022-01-26T11:32:29Z'
                          arrivalTime: '2022-01-28T11:32:29Z'
                          conjunctionTicket: T124
                          couponNumber: COUPON123
                          notation: sample
                          taxes: '10'
                          flight:
                            carrierCode: TS
                            flightNumber: '937'
                            airlineName: BulgariaAir
                            airlineIcaoCode: DLH
                Card - With ThreeDs Exemption:
                  value:
                    id: b5c30668-5724-4499-9b9a-c326c943d31c
                    accountId: '1009688230'
                    paymentType: CARD
                    paymentHandleToken: GFrIHR722N98kXzO
                    merchantRefNum: SCmGpxFlIO9OSDGAxyj5
                    currencyCode: USD
                    txnTime: '2023-01-27T10:14:26Z'
                    billingDetails:
                      nickName: Home
                      street: TEST
                      city: CA
                      zip: '94404'
                      state: CA
                      country: US
                    customerIp: 10.195.93.117
                    status: PAYABLE
                    amount: 50
                    action: NONE
                    usage: SINGLE_USE
                    timeToLiveSeconds: 299
                    transactionType: PAYMENT
                    executionMode: SYNCHRONOUS
                    card:
                      cardExpiry:
                        month: '10'
                        year: '2025'
                      holderName: Dilip
                      cardType: VI
                      cardBin: '400000'
                      lastDigits: '1026'
                      cardCategory: CREDIT
                      issuingCountry: US
                    authentication:
                      exemptionIndicator: LOW_VALUE_EXEMPTION  
                    returnLinks:
                      - method: GET
                        rel: default
                        href: 'https://usgaminggamblig.com/payment/return/'
                      - method: GET
                        rel: on_completed
                        href: 'https://usgaminggamblig.com/payment/return/success'
                      - method: GET
                        rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                    skip3ds: false
                Card - with Acquirer Data:
                  value:
                    id: 612d8958-6a3e-4d70-b432-aac1f38de671
                    paymentType: CARD
                    paymentHandleToken: SCPJ4dAVEe8fyoIE
                    merchantRefNum: 54a9c50c5f2707c813e5
                    currencyCode: USD
                    settleWithAuth: false
                    txnTime: '2023-01-20T05:42:10Z'
                    billingDetails:
                      nickName: Home
                      street: TEST
                      city: CA
                      zip: '94404'
                      state: CA
                      country: US
                    customerIp: 172.0.0.1
                    status: COMPLETED
                    amount: 500
                    preAuth: false
                    description: Magazine subscription
                    availableToSettle: 500
                    gatewayResponse:
                      code: VPS
                      responseCode: '00'
                      avsCode: X
                      authCode: '108173'
                      avsResponse: MATCH
                      cvvVerification: MATCH
                      serializable: true
                    merchantDescriptor:
                      dynamicDescriptor: '100,test'
                      phone: '1000000000'
                    card:
                      cardExpiry:
                        month: '10'
                        year: '2025'
                      holderName: Dilip
                      cardType: VI
                      cardBin: '400000'
                      lastDigits: '1026'
                      cardCategory: CREDIT
                      issuingCountry: US
                    acquirerData:
                      code: 'VAN'
                      discretionaryData:
                        field1: 'TXN101212'
                        field2: '999888'
                        field3: '123456'
                Skrill:
                  value:
                    id: a6e7ac6e-e161-49a5-be7a-7b39d36797a4
                    paymentType: SKRILL
                    paymentHandleToken: PHVwMqBOgsMsX0LF
                    merchantRefNum: 21c970d3-8667-4d8b-9610-5de52817842e
                    currencyCode: USD
                    settleWithAuth: true
                    dupCheck: true
                    txnTime: '2023-01-20T13:29:13Z'
                    billingDetails:
                      street1: 00534 Fay Field
                      street2: unit100
                      city: Fairfield
                      zip: M5H 2N2
                      state: Melbourne
                      country: CA
                    customerIp: 172.0.0.1
                    status: COMPLETED
                    gatewayReconciliationId: 0c0f5a0a-6499-4f5e-84cd-0c631ca3e0c8
                    amount: 100
                    availableToRefund: 100
                    consumerIp: 172.0.0.1
                    liveMode: false
                    simulator: INTERNAL
                    updatedTime: '2023-01-20T13:30:00Z'
                    statusTime: '2023-01-20T13:30:00Z'
                    gatewayResponse:
                      transaction_id: 0c0f5a0a-6499-4f5e-84cd-0c631ca3e0c8
                      amount: '1.0'
                      mb_transaction_id: '961744289'
                      pay_from_email: fake@email.com
                      pay_to_email: elvisstoyanov.qco@sun-fish.com
                      currency: USD
                      merchant_id: '982842053'
                      id: '961744289'
                      processor: SKRILL_QCO
                      status: '2'
                      sid: 0d97567cc6c34f1cbbf81cef76c2461c
                    availableToSettle: 0
                    skrill:
                      language: EN
                      logoUrl: 'http://www.paysafe.com/icon.jpg'
                      recipientDescription: Recipient Description
                      detail1Description: Detail 1 description
                      detail1Text: Detail 1 text
                    profile:
                      firstName: Adah
                      lastName: Brown
                      email: test@paysafe.com
                      phone: '1234567890'
                    settlements:
                      - amount: 100
                        txnTime: '2023-01-20T13:29:13.000+0000'
                        availableToRefund: 100
                        merchantRefNum: 21c970d3-8667-4d8b-9610-5de52817842e
                        id: a6e7ac6e-e161-49a5-be7a-7b39d36797a4
                        status: COMPLETED
                Neteller:
                  value:
                    id: 76accf4f-3237-4cad-9ae7-2374643af15d
                    paymentType: NETELLER
                    paymentHandleToken: PHvKAbawZ24c8Atc
                    merchantRefNum: 1ebe7b20-8d72-49a4-8f32-759d05022d66
                    currencyCode: USD
                    settleWithAuth: true
                    dupCheck: true
                    txnTime: '2023-01-20T03:38:46Z'
                    billingDetails:
                      street1: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                    customerIp: 172.0.0.1
                    status: COMPLETED
                    gatewayReconciliationId: 1ebe7b20-8d72-49a4-8f32-759d05022d66
                    amount: 500
                    consumerIp: 172.0.0.1
                    liveMode: false
                    updatedTime: '2023-01-20T03:44:24Z'
                    statusTime: '2023-01-20T03:44:24Z'
                    gatewayResponse:
                      billingDetails:
                        country: CA
                      orderId: ORD_0f560bfd-286e-430c-b236-49cbc1e13a5e
                      profile:
                        firstName: Internal Simulator
                        lastName: Test user
                        email: fake@email.com
                      verificationLevel: '10'
                      processor: PAYSAFE_DIGITALWALLET
                      transactionId: '6016589356'
                      transactionType: MEMBER_TO_MERCHANT
                      totalAmount: '500'
                      customerId: '309408020'
                      currency: USD
                      id: '6016589356'
                      lang: en
                      status: paid
                    availableToSettle: 0
                    neteller:
                      consumerId: neteller.account@example.org
                      consumerIdLocked: true
                    settlements:
                      - amount: 500
                        txnTime: '2023-01-20T03:38:46.000+0000'
                        merchantRefNum: 1ebe7b20-8d72-49a4-8f32-759d05022d66
                        id: 76accf4f-3237-4cad-9ae7-2374643af15d
                        status: COMPLETED
                'Paysafecash - without settlement ':
                  value:
                    id: a858ef7a-912a-45ec-a057-e62bf735da56
                    paymentType: PAYSAFECASH
                    paymentHandleToken: PH4lXuM1iYSK64xG
                    merchantRefNum: a9318b525273ee3cda79a2f947a9
                    currencyCode: USD
                    settleWithAuth: false
                    dupCheck: true
                    txnTime: '2023-01-20T04:16:36Z'
                    billingDetails:
                      street1: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                    customerIp: 172.0.0.1
                    status: COMPLETED
                    gatewayReconciliationId: 6eac96d8-b42e-4bc2-b0c8-b0cf19318113
                    amount: 500
                    availableToRefund: 0
                    consumerIp: 172.0.0.1
                    liveMode: false
                    updatedTime: '2023-01-20T04:17:24Z'
                    statusTime: '2023-01-20T04:17:24Z'
                    gatewayResponse:
                      processor: PAYSAFECARD
                      id: 6eac96d8-b42e-4bc2-b0c8-b0cf19318113
                      profile:
                        firstName: Max Michael
                        lastName: Musterman
                        dateOfBirth:
                          day: 28
                          month: 9
                          year: 1990
                    availableToSettle: 500
                    paysafecash:
                      consumerId: merchantclientid
                      minAgeRestriction: 18
                      kycLevelRestriction: SIMPLE
                      countryRestriction: D
                Paysafecash - with settlement:
                  value:
                    id: eeb912c6-fe13-439c-b7c3-3c9e33cf4d5c
                    paymentType: PAYSAFECASH
                    paymentHandleToken: PHAPtQZ3k0Cul0Rn
                    merchantRefNum: dbe6ecdc2de4876497fbd3001abf
                    currencyCode: USD
                    settleWithAuth: true
                    dupCheck: true
                    txnTime: '2023-01-20T04:23:10Z'
                    billingDetails:
                      street1: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                    customerIp: 172.0.0.1
                    status: COMPLETED
                    gatewayReconciliationId: 909f12df-449a-48e8-ab41-8a82ba823f0b
                    amount: 500
                    availableToRefund: 500
                    consumerIp: 172.0.0.1
                    liveMode: false
                    updatedTime: '2023-01-20T04:23:53Z'
                    statusTime: '2023-01-20T04:23:53Z'
                    gatewayResponse:
                      processor: PAYSAFECARD
                      id: 909f12df-449a-48e8-ab41-8a82ba823f0b
                      profile:
                        firstName: Max Michael
                        lastName: Musterman
                        dateOfBirth:
                          day: 28
                          month: 9
                          year: 1990
                    availableToSettle: 0
                    paysafecash:
                      consumerId: merchantclientid
                      minAgeRestriction: 18
                      kycLevelRestriction: SIMPLE
                      countryRestriction: DE
                    settlements:
                      - amount: 500
                        txnTime: '2023-01-20T04:23:10.000+0000'
                        availableToRefund: 500
                        merchantRefNum: dbe6ecdc2de4876497fbd3001abf
                        id: eeb912c6-fe13-439c-b7c3-3c9e33cf4d5c
                        status: COMPLETED
                Paysafecard - without settlement:
                  value:
                    id: ba78d811-05e9-45fd-81ed-e5795b123f0f
                    paymentType: PAYSAFECARD
                    paymentHandleToken: PHEOr9igVFLjOHuz
                    merchantRefNum: dc48762fb7c30c2ae975754348e8
                    currencyCode: USD
                    settleWithAuth: false
                    dupCheck: true
                    txnTime: '2023-01-20T04:30:02Z'
                    billingDetails:
                      street1: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                    customerIp: 172.0.0.1
                    status: COMPLETED
                    gatewayReconciliationId: adcf19cf-39c5-4eb4-a65d-7f50cd1aebd6
                    amount: 500
                    availableToRefund: 0
                    consumerIp: 172.0.0.1
                    liveMode: false
                    updatedTime: '2023-01-20T04:33:17Z'
                    statusTime: '2023-01-20T04:33:17Z'
                    gatewayResponse:
                      processor: PAYSAFECARD
                      id: adcf19cf-39c5-4eb4-a65d-7f50cd1aebd6
                      profile:
                        firstName: Max Michael
                        lastName: Musterman
                        dateOfBirth:
                          day: 28
                          month: 9
                          year: 1990
                    availableToSettle: 500
                    paysafecard:
                      consumerId: merchantclientid
                      minAgeRestriction: 18
                      kycLevelRestriction: SIMPLE
                      countryRestriction: DE
                Paysafecard - with settlement:
                  value:
                    id: 3a0350fe-3757-42ee-9be9-9fbeb26605a0
                    paymentType: PAYSAFECARD
                    paymentHandleToken: PH7WOpUPbmAEoQwm
                    merchantRefNum: 79bafd7ab61f0db6f0eb52ae41f2
                    currencyCode: USD
                    settleWithAuth: true
                    dupCheck: true
                    txnTime: '2023-01-20T04:37:48Z'
                    billingDetails:
                      street1: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                    customerIp: 172.0.0.1
                    status: COMPLETED
                    gatewayReconciliationId: 5edcb56c-e9d8-458a-a7eb-84320b92e996
                    amount: 500
                    availableToRefund: 500
                    consumerIp: 172.0.0.1
                    liveMode: false
                    updatedTime: '2023-01-20T04:38:34Z'
                    statusTime: '2023-01-20T04:38:34Z'
                    gatewayResponse:
                      processor: PAYSAFECARD
                      id: 5edcb56c-e9d8-458a-a7eb-84320b92e996
                      profile:
                        firstName: Max Michael
                        lastName: Musterman
                        dateOfBirth:
                          day: 28
                          month: 9
                          year: 1990
                    availableToSettle: 0
                    paysafecard:
                      consumerId: merchantclientid
                      minAgeRestriction: 18
                      kycLevelRestriction: SIMPLE
                      countryRestriction: DE
                    settlements:
                      - amount: 500
                        txnTime: '2023-01-20T04:37:48.000+0000'
                        availableToRefund: 500
                        merchantRefNum: 79bafd7ab61f0db6f0eb52ae41f2
                        id: 3a0350fe-3757-42ee-9be9-9fbeb26605a0
                        status: COMPLETED
                PaysafeCard with Paid with wallet account:
                  value:
                    id: 3946cb51-9a7d-406e-b546-17c97d94ee2d
                    paymentType: PAYSAFECARD
                    paymentHandleToken: PHlO4bOFGsNX5X1N
                    merchantRefNum: 123eb3cd-847b-4c2b-9d8c-7786c5dea18e
                    currencyCode: EUR
                    settleWithAuth: false
                    dupCheck: true
                    txnTime: '2023-03-17T10:47:08Z'
                    billingDetails:
                      street1: 100Queen
                      street2: Unit201
                      city: Toronto
                      zip: M5H2N2
                      country: CA
                    customerIp: 172.0.0.1
                    status: COMPLETED
                    gatewayReconciliationId: pay_1020009410_9QDoaAb53xJYymobWDtatr0n3KUphzAD_EUR
                    amount: 1
                    availableToRefund: 0
                    consumerIp: 172.0.0.1
                    liveMode: false
                    simulator: EXTERNAL
                    updatedTime: '2023-03-17T10:47:39Z'
                    statusTime: '2023-03-17T10:47:39Z'
                    gatewayResponse:
                      id: pay_1020009410_9QDoaAb53xJYymobWDtatr0n3KUphzAD_EUR
                      pscId: 184746891465
                      processor: PAYSAFECARD
                      profile:
                        firstName: Test
                        lastName: SquvmeUPmFYBvAvokItGtfaamD
                        dateOfBirth:
                          day: 15
                          month: 9
                          '': 1992
                    availableToSettle: 1
                    paysafecard:
                      consumerId: ABCD1
                PaysafeCard with Paid without wallet account:
                  value:
                    id: 3946cb51-9a7d-406e-b546-17c97d94ee2d
                    paymentType: PAYSAFECARD
                    paymentHandleToken: PHlO4bOFGsNX5X1N
                    merchantRefNum: 123eb3cd-847b-4c2b-9d8c-7786c5dea18e
                    currencyCode: EUR
                    settleWithAuth: false
                    dupCheck: true
                    txnTime: '2023-03-17T10:47:08Z'
                    billingDetails:
                      street1: 100Queen
                      street2: Unit201
                      city: Toronto
                      zip: M5H2N2
                      country: CA
                    customerIp: 172.0.0.1
                    status: COMPLETED
                    gatewayReconciliationId: pay_1020009410_9QDoaAb53xJYymobWDtatr0n3KUphzAD_EUR
                    amount: 1
                    availableToRefund: 0
                    consumerIp: 172.0.0.1
                    liveMode: false
                    simulator: EXTERNAL
                    updatedTime: '2023-03-17T10:47:39Z'
                    statusTime: '2023-03-17T10:47:39Z'
                    gatewayResponse:
                      id: pay_1020009410_9QDoaAb53xJYymobWDtatr0n3KUphzAD_EUR
                      processor: PAYSAFECARD
                    availableToSettle: 1
                    paysafecard:
                      consumerId: ABCD1
                Paypal:
                  value:
                    id: 598b97c3-5668-4553-a294-1c8a6e051dda
                    paymentType: PAYPAL
                    paymentHandleToken: PHlMZJ8aYyDPSMES
                    merchantRefNum: f906289a-252d-4a24-96ac-33f632fdbd24
                    currencyCode: USD
                    settleWithAuth: true
                    dupCheck: true
                    txnTime: '2023-01-20T05:01:55Z'
                    billingDetails:
                      street1: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                    customerIp: 172.0.0.1
                    status: COMPLETED
                    gatewayReconciliationId: 81edf83e-b093-45f0-b2dd-db236ef34527
                    amount: 500
                    availableToRefund: 500
                    consumerIp: 172.0.0.1
                    liveMode: false
                    simulator: EXTERNAL
                    updatedTime: '2023-01-20T05:05:12Z'
                    statusTime: '2023-01-20T05:05:12Z'
                    gatewayResponse:
                      payPalSaleId: 0EK70473DT4044641
                      payPalInvoiceId: ccb4884b-e8b2-4645-9314-287d4f1173d4
                      shippingDetails:
                        recipientName: John Doe
                        street: 1 Main St
                        city: San Jose
                        state: CA
                        country: US
                        zip: '95131'
                      profile:
                        firstName: John
                        lastName: Doe
                        email: sb-cpfxo1472281@personal.example.com
                      payerId: FPBRYAHSQGY52
                      id: PAYID-MPFCARA52L28895HH237250E
                      processor: PAYPAL
                    availableToSettle: 0
                    shippingDetails:
                      recipientName: John Doe
                      street: 1 Main St
                      city: San Jose
                      state: CA
                      country: US
                      zip: '95131'
                    paypal:
                      consumerId: sb-cpfxo1472281@personal.example.com
                      consumerMessage: Paysafe note to payer for payment
                      recipientDescription: Paysafe store description for payment
                      language: US
                      shippingPreference: SET_PROVIDED_ADDRESS
                      orderDescription: Paysafe Order description for payment
                    profile:
                      firstName: John
                      lastName: Doe
                      email: john.doe@paysafe.com
                    settlements:
                      - amount: 500
                        txnTime: '2023-01-20T05:01:55.000+0000'
                        availableToRefund: 500
                        merchantRefNum: f906289a-252d-4a24-96ac-33f632fdbd24
                        id: 598b97c3-5668-4553-a294-1c8a6e051dda
                        status: COMPLETED
                Pay by Bank:
                  value:
                    id: 22babc63-8711-4bd0-b3cf-1c9f4d2f82d6
                    paymentType: PAY_BY_BANK
                    paymentHandleToken: PHhOFAkKoFkoSaAP
                    merchantRefNum: 4bb4fdc8-4166-457a-ba18-141094b36e4f
                    currencyCode: USD
                    settleWithAuth: true
                    dupCheck: true
                    txnTime: '2024-03-04T10:38:46Z'
                    billingDetails:
                      street1: QA Perf Test Street1 002
                      city: Perf Test City
                      zip: '15132'
                      state: FL
                      country: US
                    customerIp: 172.0.0.1
                    status: COMPLETED
                    gatewayReconciliationId: c719a143-ac22-4c21-8531-b7bcb049808c
                    amount: 100
                    consumerIp: 172.0.0.1
                    liveMode: false
                    simulator: INTERNAL
                    updatedTime: '2024-03-04T10:40:31Z'
                    statusTime: '2024-03-04T10:40:31Z'
                    gatewayResponse:
                      processor: PAY_BY_BANK
                      id: 2f84e9cb-c56b-4c6b-ab6c-ce2f827bdf7f
                      status: COMPLETED
                    availableToSettle: 0
                    payByBank:
                      consumerId: qa_perf_test_consumer_0001
                      registrationId: c140fbcf-2d8c-4962-9f8f-a19d15e34319
                      ach:
                        paymentHandleToken: BAonftuNrjpdBcY5
                        routingNumber: '211589828'
                        accountType: CHECKING
                        lastDigits: '92'
                    profile:
                      firstName: Perf 0001
                      lastName: Cons 0001
                      email: perftestconsumer0001@example.com
                      dateOfBirth:
                        day: 1
                        month: 1
                        year: 1977
                      phone: '9897550001'
                    settlements:
                      amount: 100
                      txnTime: '2024-03-04T10:38:46.000+0000'
                      merchantRefNum: 4bb4fdc8-4166-457a-ba18-141094b36e4f
                      id: 22babc63-8711-4bd0-b3cf-1c9f4d2f82d6
                      status: COMPLETED
                Venmo:
                  value:
                    id: 81a996ec-1057-438e-b682-3b0a6f93d6ee
                    paymentType: VENMO
                    paymentHandleToken: PHi8YKjhhS18Fz15
                    merchantRefNum: '1674816477288'
                    currencyCode: USD
                    settleWithAuth: true
                    dupCheck: false
                    txnTime: '2023-01-27T10:48:22Z'
                    billingDetails:
                      street1: '100'
                      street2: Queen Street
                      city: Cupertino
                      zip: '14236'
                      state: CA
                      country: US
                    customerIp: 115.114.129.142
                    status: COMPLETED
                    gatewayReconciliationId: cd91c15f-246c-458b-95ab-2329fbfc996e
                    amount: 100
                    availableToRefund: 100
                    consumerIp: 115.114.129.142
                    liveMode: false
                    simulator: EXTERNAL
                    updatedTime: '2023-01-27T10:48:23Z'
                    statusTime: '2023-01-27T10:48:23Z'
                    gatewayResponse:
                      id: 4g865s6a
                      userName: venmojoe
                      processor: BRAINTREE
                      profile:
                        firstName: Sravanthi
                        lastName: Gaddam
                        email: sravanthi449g@gmail.com
                        cellphone: '14044964766'
                    availableToSettle: 0
                    shippingDetails:
                      recipientName: Vishnu
                      street: 20735 Stevens Creek Blvd
                      street2: Montessori
                      city: Cupertino
                      state: CA
                      country: US
                      zip: '95014'
                    profile:
                      firstName: Sandi
                      lastName: Smith
                      email: sandi.smith@paysafe.com
                      dateOfBirth:
                        day: 23
                        month: 12
                        year: 1990
                      phone: '84632876432'
                    venmo:
                      consumerId: sb-cpfxo1472298@personal.example.com
                    settlements:
                      amount: 100
                      txnTime: '2023-01-27T10:48:22.000+0000'
                      availableToRefund: 100
                      merchantRefNum: '1674816477288'
                      id: 81a996ec-1057-438e-b682-3b0a6f93d6ee
                      status: COMPLETED
                VIP Preferred:
                  value:
                    id: ce266e37-51a5-4026-909c-f095db62eba6
                    paymentType: VIPPREFERRED
                    paymentHandleToken: SVjLhze4VxKpStDQ
                    merchantRefNum: '1674815731395'
                    currencyCode: USD
                    settleWithAuth: true
                    dupCheck: false
                    txnTime: '2023-01-27T10:35:46Z'
                    billingDetails:
                      street1: '100'
                      street2: Queen Street
                      city: Cupertino
                      zip: '14236'
                      state: CA
                      country: US
                    customerIp: 115.114.129.142
                    status: COMPLETED
                    gatewayReconciliationId: ce31ee70-3de8-406d-a20d-f658b41e3dd0
                    registrationId: dca6f899-e311-4feb-aa51-8a4aae63e3e1
                    amount: 100
                    consumerIp: 115.114.129.142
                    liveMode: false
                    simulator: EXTERNAL
                    updatedTime: '2023-01-27T10:36:14Z'
                    statusTime: '2023-01-27T10:36:14Z'
                    gatewayResponse:
                      transactionType: '0'
                      paymentProcessorTransactionId: GIOQPCTXVG35IPSJOYTF
                      amount: '1.00'
                      authNumber: '988366'
                      id: GIOQPCTXVG35IPSJOYTF
                      transactionTime: '20230127053614'
                      transactionName: CHKECHECK
                      processor: VIPPREFERRED
                      transactionId: GIOQPCTXVG35IPSJOYTF
                      cardNumber: '****0131'
                      customerName: TARAS SOKIL
                      responseCode: '00'
                    availableToSettle: 0
                    shippingDetails:
                      recipientName: Vishnu
                      street: 20735 Stevens Creek Blvd
                      street2: Montessori
                      city: Cupertino
                      state: CA
                      country: US
                      zip: '95014'
                    vippreferred:
                      ach:
                        registrationId: dca6f899-e311-4feb-aa51-8a4aae63e3e1
                        routingNumber: '011401533'
                        lastDigits: '00'
                    profile:
                      firstName: Sandi
                      lastName: Smith
                      email: sandi.smith@paysafe.com
                      dateOfBirth:
                        day: 23
                        month: 12
                        year: 1990
                      phone: '84632876432'
                    settlements:
                      amount: 100
                      txnTime: '2023-01-27T10:35:46.000+0000'
                      merchantRefNum: '1674815731395'
                      id: ce266e37-51a5-4026-909c-f095db62eba6
                      status: COMPLETED
                Mazooma:
                  value:
                    id: 7bc8693e-e6a9-404e-93ec-ad8d5720a36c
                    paymentType: MAZOOMA
                    paymentHandleToken: PH0gRuaOS9Yr7PNQ
                    merchantRefNum: 285a1d9f-ab6b-4851-870b-b725148a5162
                    currencyCode: USD
                    settleWithAuth: true
                    dupCheck: true
                    txnTime: '2023-01-20T05:16:36Z'
                    billingDetails:
                      street1: Queen Street West
                      street2: Queen Street
                      city: Imphal
                      zip: '14236'
                      state: NY
                      country: US
                    customerIp: 172.0.0.1
                    status: COMPLETED
                    gatewayReconciliationId: d1daa8eb-cfad-4ca8-9dc8-155d797b7ca3
                    amount: 100
                    consumerIp: 172.0.0.1
                    liveMode: false
                    simulator: INTERNAL
                    updatedTime: '2023-01-20T05:19:54Z'
                    statusTime: '2023-01-20T05:19:54Z'
                    gatewayResponse:
                      orderId: Mbm6IyDef
                      id: d1daa8eb-cfad-4ca8-9dc8-155d797b7ca3
                      internalRequestId: '0'
                      processor: MAZOOMA
                      status: SUCCESS
                    availableToSettle: 0
                    mazooma:
                      consumerId: Nitin_04
                      registrationId: 597e32ed-414f-4ac4-bab4-ecc9f59238f7
                    profile:
                      firstName: ALBERTA
                      lastName: BOBBETHCHARLESON
                      email: accountholder0@example.com
                      dateOfBirth:
                        day: 23
                        month: 12
                        year: 1990
                      phone: '1234567890'
                    settlements:
                      - amount: 100
                        txnTime: '2023-01-20T05:16:36.000+0000'
                        merchantRefNum: 285a1d9f-ab6b-4851-870b-b725148a5162
                        id: 7bc8693e-e6a9-404e-93ec-ad8d5720a36c
                        status: COMPLETED
                MBWAY:
                  value:
                    id: 5c4da34a-64b2-4f4f-a52f-08d1d8211a52
                    paymentType: MBWAY
                    paymentHandleToken: PHEJPRvbwXCuVD8r
                    merchantRefNum: '1686307451'
                    currencyCode: EUR
                    settleWithAuth: true
                    dupCheck: true
                    txnTime: '2023-06-09T10:41:57Z'
                    customerIp: 10.195.93.135
                    status: COMPLETED
                    gatewayReconciliationId: c97fdfdc-a0bd-453b-8316-5a0daee9c60a
                    amount: 500
                    availableToRefund: 500
                    consumerIp: 10.195.93.135
                    liveMode: false
                    simulator: EXTERNAL
                    updatedTime: '2023-06-09T10:44:12Z'
                    statusTime: '2023-06-09T10:44:12Z'
                    gatewayResponse:
                      transaction_id: c97fdfdc-a0bd-453b-8316-5a0daee9c60a
                      amount: '5.00'
                      mb_transaction_id: '326349844'
                      pay_from_email: mohan@paysafe.com
                      pay_to_email: elvisstoyanov.qco@sun-fish.com
                      currency: EUR
                      merchant_id: '298847640'
                      id: '326349844'
                      processor: SKRILL_QCO
                      status: '2'
                      sid: 9c3050520e819beeec5110301f90e3f9
                    availableToSettle: 0
                    profile:
                      firstName: John
                      lastName: Cena
                      email: mohan@paysafe.com
                      phone: '8074683324'
                    settlements:
                      amount: 500
                      txnTime: '2023-06-09T10:41:57.000+0000'
                      availableToRefund: 500
                      merchantRefNum: '1686307451'
                      id: 5c4da34a-64b2-4f4f-a52f-08d1d8211a52
                      status: COMPLETED
                MULTIBANCO:
                  value:
                    id: af355323-e87a-4b58-8cc0-f7c110c56351
                    paymentType: MULTIBANCO
                    paymentHandleToken: PHl4Ba8c4ENf1dtF
                    merchantRefNum: '1687174126'
                    currencyCode: EUR
                    settleWithAuth: true
                    dupCheck: true
                    txnTime: '2023-06-19T11:26:40Z'
                    customerIp: 115.114.129.142
                    status: COMPLETED
                    gatewayReconciliationId: 0d1bbdd9-06a6-4ccc-9432-0aa315e73cea
                    amount: 21000
                    availableToRefund: 21000
                    consumerIp: 115.114.129.142
                    liveMode: false
                    simulator: EXTERNAL
                    updatedTime: '2023-06-19T11:28:46Z'
                    statusTime: '2023-06-19T11:28:46Z'
                    gatewayResponse:
                      transaction_id: 0d1bbdd9-06a6-4ccc-9432-0aa315e73cea
                      amount: '210.00'
                      mb_transaction_id: '4857014753'
                      pay_from_email: nagababu@paysafe.com
                      pay_to_email: monika-testmerchant@paysafe.com
                      currency: EUR
                      merchant_id: '202454978'
                      id: '4857014753'
                      processor: SKRILL_QCO
                      status: '2'
                      sid: 0b8a3a67c1ee9bd3293fdbb861282f7b
                    availableToSettle: 0
                    profile:
                      firstName: John
                      lastName: Cena
                      email: nagababu@paysafe.com
                    settlements:
                      amount: 21000
                      txnTime: '2023-06-19T11:26:40.000+0000'
                      availableToRefund: 21000
                      merchantRefNum: '1687174126'
                      id: af355323-e87a-4b58-8cc0-f7c110c56351
                      status: COMPLETED
                Interac:
                  value:
                    id: e19992aa-0143-498e-bee9-46c7b0070cc6
                    paymentType: INTERAC
                    paymentHandleToken: PHAgzseGYTndRXhF
                    merchantRefNum: df00c90a-a6d4-42ab-ae3b-7edd932ed263
                    currencyCode: CAD
                    settleWithAuth: true
                    dupCheck: true
                    txnTime: '2023-01-20T08:31:16Z'
                    billingDetails:
                      street1: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                    customerIp: 172.0.0.1
                    status: COMPLETED
                    gatewayReconciliationId: AIAAAAAAAAAAAAAC4Y5Q
                    amount: 100
                    availableToRefund: 100
                    consumerIp: 172.0.0.1
                    liveMode: false
                    simulator: INTERNAL
                    updatedTime: '2023-01-20T08:34:51Z'
                    statusTime: '2023-01-20T08:34:51Z'
                    gatewayResponse:
                      iDebitInvoice: AIAAAAAAAAAAAAAC4Y5Q
                      processor: INTERAC
                    availableToSettle: 0
                    settlements:
                      - amount: 100
                        txnTime: '2023-01-20T08:31:16.000+0000'
                        availableToRefund: 100
                        merchantRefNum: df00c90a-a6d4-42ab-ae3b-7edd932ed263
                        id: e19992aa-0143-498e-bee9-46c7b0070cc6
                        status: COMPLETED
                Interac_ETransfer:
                  value:
                    id: 5d27c515-a298-4713-bd77-8c4af539a909
                    paymentType: INTERAC_ETRANSFER
                    paymentHandleToken: PHmg1E8UFKJSrCFq
                    merchantRefNum: 01e4606d-93c3-44a1-85f9-710684fb7148
                    currencyCode: CAD
                    settleWithAuth: true
                    dupCheck: true
                    txnTime: '2023-01-27T11:42:12Z'
                    billingDetails:
                      street1: 100 Queen
                      street2: Unit 201
                      city: Melbourne
                      zip: '3000'
                      state: Victoria
                      country: AU
                    customerIp: 172.0.0.1
                    status: PROCESSING
                    amount: 125
                    availableToRefund: 0
                    consumerIp: 172.0.0.1
                    liveMode: false
                    simulator: INTERNAL
                    updatedTime: '2023-01-27T11:44:17Z'
                    statusTime: '2023-01-27T11:44:17Z'
                    gatewayResponse:
                      processor: PEOPLE_TRUST
                      requestRefId: V7cLfO383woBLhbm
                      status: AVAILABLE
                    availableToSettle: 0
                    interacEtransfer:
                      consumerId: madhu.baddam@paysafe.com
                      type: EMAIL
                    profile:
                      firstName: Madhu
                      lastName: Baddam
                      email: madhu@paysafe.com
                    settlements:
                      - amount: 125
                        txnTime: '2023-01-27T11:42:12.000+0000'
                        availableToRefund: 0
                        merchantRefNum: 01e4606d-93c3-44a1-85f9-710684fb7148
                        id: 5d27c515-a298-4713-bd77-8c4af539a909
                        status: PROCESSING
                'Rapid Transfer via Skirll Quick checkout ':
                  value:
                    id: 2a63d1e3-59d5-402c-9aab-74635a2cb238
                    paymentType: RAPID_TRANSFER
                    paymentHandleToken: PH3oMryVULc5ldL3
                    merchantRefNum: 299cc09b-3703-4635-8e28-8e6a680b0bcc
                    currencyCode: EUR
                    settleWithAuth: true
                    dupCheck: true
                    txnTime: '2023-01-20T09:05:20Z'
                    billingDetails:
                      street1: '71 Cherry Court '
                      city: Southhampton
                      zip: SO53 5PD
                      country: GB
                    customerIp: 73.82.192.17
                    status: COMPLETED
                    gatewayReconciliationId: 817bddf1-13dc-4c24-9d7f-5b70faf5c726
                    amount: 3000
                    consumerIp: 73.82.192.17
                    liveMode: false
                    simulator: INTERNAL
                    updatedTime: '2023-01-20T09:09:06Z'
                    statusTime: '2023-01-20T09:09:06Z'
                    gatewayResponse:
                      transaction_id: 817bddf1-13dc-4c24-9d7f-5b70faf5c726
                      amount: '30.0'
                      mb_transaction_id: '-611645480'
                      pay_from_email: fake@email.com
                      pay_to_email: demoqco@sun-fish.com
                      currency: EUR
                      merchant_id: '-1787135502'
                      id: '-611645480'
                      processor: SKRILL_QCO
                      status: '2'
                      sid: 23d60758f0594c32b2ee5c69fda67a51
                    availableToSettle: 0
                    rapidTransfer:
                      consumerId: csr_fl@sun-fish.com
                      countryCode: IE
                    profile:
                      firstName: John
                      lastName: Doe
                    settlements:
                      - amount: 3000
                        txnTime: '2023-01-20T09:05:20.000+0000'
                        merchantRefNum: 299cc09b-3703-4635-8e28-8e6a680b0bcc
                        id: 2a63d1e3-59d5-402c-9aab-74635a2cb238
                        status: COMPLETED
                ACH:
                  value:
                    id: 59661c0a-9380-4287-933a-0e305945b263
                    accountId: '1003593810'
                    paymentType: ACH
                    paymentHandleToken: DXAM3WtBKVMQyLE
                    merchantRefNum: '167625194625055'
                    currencyCode: USD
                    settleWithAuth: true
                    dupCheck: true
                    txnTime: '2023-01-20T09:31:04Z'
                    billingDetails:
                      nickName: Home
                      street: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      state: 'ON'
                      country: CA
                      id: 099b2d9f-9add-4225-8f7c-61ea295d2be4
                    customerIp: 172.0.0.1
                    status: COMPLETED
                    amount: 500
                    ach:
                      lastDigits: '85'
                      accountHolderName: TESTINGC01
                      accountType: SAVINGS
                      payMethod: WEB
                      routingNumber: '211589828'
                    description: Magazine subscription
                    settlements:
                      - id: 59661c0a-9380-4287-933a-0e305945b263
                        amount: 500
                        status: PENDING
                        cleared: false
                EFT:
                  value:
                    id: f6e912d7-3b04-4729-a624-1f3e2d18d6e6
                    accountId: '1013691440'
                    paymentType: EFT
                    paymentHandleToken: SAFAlxMtcEaJxu5t
                    merchantRefNum: '4533863971'
                    currencyCode: CAD
                    settleWithAuth: true
                    dupCheck: true
                    txnTime: '2023-01-20T09:40:17Z'
                    billingDetails:
                      nickName: Home
                      street: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                    customerIp: 172.0.0.1
                    status: COMPLETED
                    amount: 500
                    eft:
                      lastDigits: '12'
                      accountHolderName: XYZ Company
                      institutionId: '001'
                      transitNumber: '22446'
                    description: Magazine subscription
                    customerProfile:
                      firstName: Poke
                      lastName: mon
                      email: Poke.mon@canada.com
                    settlements:
                      - id: f6e912d7-3b04-4729-a624-1f3e2d18d6e6
                        amount: 500
                        status: PENDING
                        cleared: false
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStoreeeeeeeee
                      phone: '1234567899'
                SEPA:
                  value:
                    id: 283dc271-fd50-411d-825f-db1bc0dfb655
                    accountId: '1002604580'
                    paymentType: SEPA
                    paymentHandleToken: DdpqgUQS9jqskBm
                    merchantRefNum: '89974956093183410'
                    currencyCode: EUR
                    settleWithAuth: true
                    dupCheck: true
                    txnTime: '2023-01-30T08:45:14Z'
                    billingDetails:
                      nickName: Home
                      street: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                      id: 26f1a762-38ed-4dc2-bbe8-f5d2792a28c4
                    customerIp: 172.0.0.1
                    status: COMPLETED
                    amount: 500
                    sepa:
                      lastDigits: '80'
                      accountHolderName: John Doe
                      bic: EWGULRT1
                      nickName: Sally's Barclays Account
                    description: Magazine subscription
                    settlements:
                      - id: 283dc271-fd50-411d-825f-db1bc0dfb655
                        amount: 500
                        status: PENDING
                        cleared: false
                    mandateId: 33d640b9-b6da-4aa5-94d4-829411069f75
                BACS:
                  value:
                    id: 05c20c21-2866-42d9-ad8c-88dbedf6ba2a
                    accountId: '1013621510'
                    paymentType: BACS
                    paymentHandleToken: DApo0n1hMEcnWaM
                    merchantRefNum: '138163592891626050'
                    currencyCode: GBP
                    settleWithAuth: true
                    dupCheck: true
                    txnTime: '2023-01-30T09:46:22Z'
                    billingDetails:
                      nickName: Home
                      street: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                      id: 2c494075-0c71-4d07-b5f2-679ffaa1f8da
                    customerIp: 172.0.0.1
                    status: COMPLETED
                    amount: 500
                    bacs:
                      lastDigits: '72'
                      accountHolderName: Sally Barnes
                      sortCode: '086081'
                      nickName: Sally's Barclays Account
                    description: Magazine subscription
                    settlements:
                      - id: 05c20c21-2866-42d9-ad8c-88dbedf6ba2a
                        amount: 500
                        status: PENDING
                        cleared: false
                    mandateId: 3ee0feba-24a5-493a-9e25-6fa0860f851a
                Skrill 1-Tap:
                  value:
                    id: 4ca89f4f-9918-47da-8d69-0a09312245e3
                    paymentType: SKRILL1TAP
                    paymentHandleToken: PHTRvYPsXhwBg1ER
                    merchantRefNum: 6dbe2657-93a4-4d1f-be06-8217095556fd
                    currencyCode: USD
                    settleWithAuth: true
                    dupCheck: true
                    txnTime: '2023-01-31T05:30:13Z'
                    billingDetails:
                      street1: "100\_Queen"
                      street2: "Unit\_201"
                      city: Toronto
                      zip: "M5H\_2N2"
                      country: CA
                    customerIp: 172.0.0.1
                    status: COMPLETED
                    gatewayReconciliationId: 3195ccea-9d29-4857-bce1-4e9e8dc0b401
                    amount: 100
                    availableToRefund: 100
                    consumerIp: 172.0.0.1
                    liveMode: false
                    simulator: EXTERNAL
                    updatedTime: '2023-01-31T05:32:51Z'
                    statusTime: '2023-01-31T05:32:51Z'
                    gatewayResponse:
                      status_msg: processed
                      currency: EUR
                      amount: '0.92'
                      id: '4626910989'
                      processor: SKRILL_QCO
                      status: '2'
                    availableToSettle: 0
                    profile:
                      firstName: pawan
                      lastName: Kalyan
                      email: test@paysafe.com
                      phone: '1234567890'
                    settlements:
                      amount: 100
                      txnTime: '2023-01-31T05:30:13.000+0000'
                      availableToRefund: 100
                      merchantRefNum: 6dbe2657-93a4-4d1f-be06-8217095556fd
                      id: 4ca89f4f-9918-47da-8d69-0a09312245e3
                      status: COMPLETED
                PIX via Safetypay Express:
                  value:
                    id: c0b0a8cf-c706-4da8-8980-442a08dfdea2
                    paymentType: PIX
                    paymentHandleToken: PHWPYAgGyPEnn56C
                    merchantRefNum: 6b7dbb44-7bb1-4584-9707-a32f9be5bae5
                    currencyCode: BRL
                    settleWithAuth: true
                    dupCheck: true
                    txnTime: '2023-03-14T05:11:55Z'
                    customerIp: 213.208.158.220
                    status: PROCESSING
                    gatewayReconciliationId: d5685b03-9107-48dc-91b2-deba355ed8c3
                    amount: 500
                    availableToRefund: 0
                    consumerIp: 213.208.158.220
                    liveMode: false
                    simulator: EXTERNAL
                    updatedTime: '2023-03-14T05:12:07Z'
                    statusTime: '2023-03-14T05:12:07Z'
                    gatewayResponse:
                      operationId: '0123073466280380'
                      id: d5685b03-9107-48dc-91b2-deba355ed8c3
                      processor: SAFETYPAY
                      status: '101'
                    availableToSettle: 0
                    profile:
                      email: BRPIXQA0220_01@gmail.com
                    settlements:
                      amount: 500
                      txnTime: '2023-03-14T05:11:55.000+0000'
                      availableToRefund: 0
                      merchantRefNum: 6b7dbb44-7bb1-4584-9707-a32f9be5bae5
                      id: c0b0a8cf-c706-4da8-8980-442a08dfdea2
                      status: PROCESSING
                Khipu via Safetypay Express:
                  value:
                    id: 3e7f67e6-8927-4aea-93ec-a159b194ac40
                    paymentType: KHIPU
                    paymentHandleToken: PHLDYzxhki41lc4H
                    merchantRefNum: 0d6002cf-532d-4221-a230-b4227db3dc0a
                    currencyCode: CLP
                    settleWithAuth: true
                    dupCheck: true
                    txnTime: '2023-03-14T05:15:01Z'
                    customerIp: 213.208.158.220
                    status: PROCESSING
                    gatewayReconciliationId: 60edc2f9-5c33-4455-ab8c-edbe009a19fa
                    amount: 47000
                    availableToRefund: 0
                    consumerIp: 213.208.158.220
                    liveMode: false
                    simulator: EXTERNAL
                    updatedTime: '2023-03-14T05:17:10Z'
                    statusTime: '2023-03-14T05:17:10Z'
                    gatewayResponse:
                      operationId: '0123073466283383'
                      id: 60edc2f9-5c33-4455-ab8c-edbe009a19fa
                      processor: SAFETYPAY
                      status: '101'
                    availableToSettle: 0
                    profile:
                      email: CLKHIPU0212_01@gmail.com
                    settlements:
                      amount: 47000
                      txnTime: '2023-03-14T05:15:01.000+0000'
                      availableToRefund: 0
                      merchantRefNum: 0d6002cf-532d-4221-a230-b4227db3dc0a
                      id: 3e7f67e6-8927-4aea-93ec-a159b194ac40
                      status: PROCESSING
                Mach via Safetypay Express:
                  value:
                    id: bed02d59-6723-44fe-9149-9b0cb98245fd
                    paymentType: MACH
                    paymentHandleToken: PHivZQUor3tAMihh
                    merchantRefNum: 01440e1d-325f-4f84-a539-85b3e918e78e
                    currencyCode: CLP
                    settleWithAuth: true
                    dupCheck: true
                    txnTime: '2023-03-14T05:18:09Z'
                    customerIp: 213.208.158.220
                    status: PROCESSING
                    gatewayReconciliationId: b0c70d4c-3f90-4fd9-be0e-393fcac48528
                    amount: 500
                    availableToRefund: 0
                    consumerIp: 213.208.158.220
                    liveMode: false
                    simulator: EXTERNAL
                    updatedTime: '2023-03-14T05:19:30Z'
                    statusTime: '2023-03-14T05:19:30Z'
                    gatewayResponse:
                      operationId: '0123073466297397'
                      id: b0c70d4c-3f90-4fd9-be0e-393fcac48528
                      processor: SAFETYPAY
                      status: '101'
                    availableToSettle: 0
                    profile:
                      email: CLMACH0212_01@gmail.com
                    settlements:
                      amount: 500
                      txnTime: '2023-03-14T05:18:09.000+0000'
                      availableToRefund: 0
                      merchantRefNum: 01440e1d-325f-4f84-a539-85b3e918e78e
                      id: bed02d59-6723-44fe-9149-9b0cb98245fd
                      status: PROCESSING
                Boleto Bancario via Safetypay Express:
                  value:
                    id: 7d6d80d3-c56d-4dad-bd9c-0b5f88ddb169
                    paymentType: BOLETO_BANCARIO
                    paymentHandleToken: PHxTXOEU9AAOErZc
                    merchantRefNum: 3a0a62ed-78d3-44ac-8596-d009e51e7f92
                    currencyCode: BRL
                    settleWithAuth: true
                    dupCheck: true
                    txnTime: '2023-03-14T05:22:09Z'
                    customerIp: 213.208.158.220
                    status: PROCESSING
                    gatewayReconciliationId: 8cf7e476-e5c8-4fa3-bb8e-c1048ae61f36
                    amount: 500
                    availableToRefund: 0
                    consumerIp: 213.208.158.220
                    liveMode: false
                    simulator: EXTERNAL
                    updatedTime: '2023-03-14T05:23:18Z'
                    statusTime: '2023-03-14T05:23:18Z'
                    gatewayResponse:
                      operationId: '0123073466306406'
                      id: 8cf7e476-e5c8-4fa3-bb8e-c1048ae61f36
                      processor: SAFETYPAY
                      status: '101'
                    availableToSettle: 0
                    profile:
                      email: brlspcash@gmail.com
                    settlements:
                      amount: 500
                      txnTime: '2023-03-14T05:22:09.000+0000'
                      availableToRefund: 0
                      merchantRefNum: 3a0a62ed-78d3-44ac-8596-d009e51e7f92
                      id: 7d6d80d3-c56d-4dad-bd9c-0b5f88ddb169
                      status: PROCESSING
                Safetypay Cash via Safetypay Express:
                  value:
                    id: f6f69572-90da-4e41-bdd6-de7e3f7787d3
                    paymentType: SAFETYPAY_CASH
                    paymentHandleToken: PH72waPqDtaxmRzj
                    merchantRefNum: 1b9d0b1c-ce9a-44e6-9c2e-ef668f40f6b3
                    currencyCode: BRL
                    settleWithAuth: true
                    dupCheck: true
                    txnTime: '2023-03-14T05:24:56Z'
                    customerIp: 213.208.158.220
                    status: PROCESSING
                    gatewayReconciliationId: 7401a4ac-9737-4c9b-bd7a-3a95bceecccd
                    amount: 500
                    availableToRefund: 0
                    consumerIp: 213.208.158.220
                    liveMode: false
                    simulator: EXTERNAL
                    updatedTime: '2023-03-14T05:25:56Z'
                    statusTime: '2023-03-14T05:25:56Z'
                    gatewayResponse:
                      operationId: '0123073466308408'
                      id: 7401a4ac-9737-4c9b-bd7a-3a95bceecccd
                      processor: SAFETYPAY
                      status: '101'
                    availableToSettle: 0
                    profile:
                      email: brlspcash@gmail.com
                    settlements:
                      amount: 500
                      txnTime: '2023-03-14T05:24:56.000+0000'
                      availableToRefund: 0
                      merchantRefNum: 1b9d0b1c-ce9a-44e6-9c2e-ef668f40f6b3
                      id: f6f69572-90da-4e41-bdd6-de7e3f7787d3
                      status: PROCESSING
                Online Bank Transfer via Safetypay Express:
                  value:
                    id: dcf27a44-0380-49ba-a65e-5319925a4838
                    paymentType: ONLINE_BANK_TRANSFER
                    paymentHandleToken: PHN2Gx7nItmtxmTL
                    merchantRefNum: 43af49ee-5a87-41d2-b09f-ed9300ede621
                    currencyCode: BRL
                    settleWithAuth: true
                    dupCheck: true
                    txnTime: '2023-03-14T05:05:21Z'
                    customerIp: 213.208.158.220
                    status: PROCESSING
                    gatewayReconciliationId: b839e5a6-0879-498a-bb09-a28764dc6be4
                    amount: 1000
                    availableToRefund: 0
                    consumerIp: 213.208.158.220
                    liveMode: false
                    simulator: EXTERNAL
                    updatedTime: '2023-03-14T05:05:42Z'
                    statusTime: '2023-03-14T05:05:42Z'
                    gatewayResponse:
                      operationId: '0123073466165265'
                      id: b839e5a6-0879-498a-bb09-a28764dc6be4
                      processor: SAFETYPAY
                      status: '101'
                    availableToSettle: 0
                    profile:
                      email: BRTESTQA202_01@gmail.com
                    settlements:
                      amount: 1000
                      txnTime: '2023-03-14T05:05:21.000+0000'
                      availableToRefund: 0
                      merchantRefNum: 43af49ee-5a87-41d2-b09f-ed9300ede621
                      id: dcf27a44-0380-49ba-a65e-5319925a4838
                      status: PROCESSING
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
      description: |-
        Payment requests allow you to process a payment using the *paymentHandleToken* that you have previously created using [Create a Payment Handle](/operations/create-payment-handle) for the payment instrument you want to use.

        - A Payment request that will have to be settled later.

        - A Payment request that authorizes and settles the Payment in a single request by setting the *settleWithAuth* parameter to true.

        - A Payment request using multi-use payment handle token for BACS & SEPA.

        - A Payment request with airline travel details for AIRLINE merchants only by setting the settleWithAuth parameter to true. If settleWithAuth parameter to false then airline travel details are ignored.

        - A Payment request with airline travel details for AIRLINE merchants only by setting the settleWithAuth parameter to false. Since settleWithAuth parameter is set to false, you will pass airline travel details in settlement call.

        >For additional information on authorization request, see the [Card API](https://developer.paysafe.com/en/cards-api/#/operations/authorization).<br><br>

        >Once the status of MANDATE is ACTIVE after 7 days, payment status will become COMPLETED and a webhook notification will be sent to merchant. Merchant will receive webhooks for the mandate status changes as well. After setting payment status to COMPLETED, settlement resource will be created in PENDING and respective webhook notification will be sent to merchant. Settlement will batched for the next batch. After settlement gets batched, it will be set to COMPLETED and respective webhook will be sent to merchant.

        Click on **Send API Request** after entering the required data, to see how to Process a Payment using the *paymentHandleToken* that you have previously created using [Create a Payment Handle](/operations/create-payment-handle) for the payment instrument you want to use.
      parameters:
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
            default: EXTERNAL
          in: header
          name: Simulator
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/paymentRequest'
            examples:
              Card - without Settlement:
                value:
                  merchantRefNum: 54a9c50c5f2707c813e5
                  amount: 500
                  currencyCode: USD
                  dupCheck: false
                  settleWithAuth: false
                  paymentHandleToken: SCPJ4dAVEe8fyoIE
                  customerIp: 172.0.0.1
                  description: Magazine subscription
                  keywords:
                    - SILVER
              Card - with Settlement:
                value:
                  merchantRefNum: fc5b62df1202e491475d
                  amount: 500
                  currencyCode: USD
                  dupCheck: false
                  settleWithAuth: true
                  paymentHandleToken: SC2INoYvSe2MzQuB
                  customerIp: 172.0.0.1
                  description: Magazine subscription
                  keywords:
                    - SILVER
              Card - with Payment Facilitator details:
                value:
                  merchantRefNum: fc5b62df1202e491475d
                  amount: 500
                  currencyCode: USD
                  dupCheck: false
                  settleWithAuth: true
                  paymentHandleToken: SC2INoYvSe2MzQuB
                  customerIp: 172.0.0.1
                  description: Magazine subscription
                  keywords:
                    - SILVER
                  paymentFacilitator:
                    subMerchant:
                      id: '123456789'
                      name: PayFacSubMerchant
                      phone: '478234562331'
                      email: payfac@mail.com
                      url: www.payfac.com
                      address:
                        street: 100 Queen Street West
                        city: London
                        country: GB
                        zip: M5H 2N2 
              Card - with Airline Travel Details for Airline Merchants:
                value:
                  merchantRefNum: febf0cc749a6c9d243c9
                  amount: 500
                  currencyCode: USD
                  dupCheck: true
                  settleWithAuth: true
                  paymentHandleToken: SCbuMkPGvBGSTCt3
                  customerIp: 172.0.0.1
                  description: "Magazine\_subscription"
                  airlineTravelDetails:
                    passengerName: "John\_Smith"
                    departureDate: '2023-05-25'
                    origin: YUL
                    computerizedReservationSystem: BLAN
                    customerReferenceNumber: '123456'
                    passengerNameRecord: passNamRec
                    additionalBookingReference: additionalBookingRef
                    totalFare: 1000
                    totalFee: 100
                    totalTaxes: 10
                    ticket:
                      ticketNumber: 198J8928
                      isRestrictedTicket: false
                      cityOfTicketIssuing: Porto
                      ticketDeliveryMethod: E_TICKET
                      isAgencyCard: true
                      ticketIssueDate: '2022-05-27'
                      ticketPrice: 10
                      numberOfPax: 5
                    passengers:
                      passenger1:
                        ticketNumber: '56827'
                        firstName: firstName
                        lastName: lastName
                        phoneNumber: '7181855783'
                        passengerCode: INF
                        gender: M
                      passenger2:
                        ticketNumber: '56827'
                        firstName: firstName
                        lastName: lastName
                        phoneNumber: '7181855783'
                        passengerCode: INF
                        gender: M
                    travelAgency:
                      code: AGCODE
                      name: "Agency\_name"
                      agencyAddress:
                        street: street
                        zip: ZIP12
                        country: GB
                    tripLegs:
                      leg1:
                        serviceClass: F
                        isStopOverAllowed: false
                        destination: CDG
                        fareBasis: VMAY
                        departureDate: '2023-05-25'
                        serviceClassFee: 10
                        departureAirport: SOF
                        departureTime: '2022-01-26T11:32:29Z'
                        arrivalTime: '2022-01-28T11:32:29Z'
                        conjunctionTicket: T124
                        couponNumber: COUPON123
                        notation: sample
                        taxes: '10'
                        flight:
                          carrierCode: TS
                          flightNumber: '937'
                          airlineName: BulgariaAir
                          airlineIcaoCode: DLH
              Card - With ThreeDs Exemption:
                value:
                  merchantRefNum: SCmGpxFlIO9OSDGAxyj5
                  amount: 50
                  currencyCode: USD
                  dupCheck: true
                  settleWithAuth: true
                  paymentHandleToken: GFrIHR722N98kXzO
                  customerIp: 172.0.0.1
                  description: Magazine subscription
              Card - with Acquirer Data:
                value:
                  merchantRefNum: 54a9c50c5f2707c813e5
                  amount: 500
                  currencyCode: USD
                  dupCheck: false
                  settleWithAuth: false
                  paymentHandleToken: SCPJ4dAVEe8fyoIE
                  customerIp: 172.0.0.1
                  description: Magazine subscription
                  keywords:
                    - SILVER
                  acquirerData:
                    code: 'VAN'
                    discretionaryData:
                      field1: 'TXN101212'
                      field2: '999888'
                      field3: '123456'
              Skrill:
                value:
                  merchantRefNum: 21c970d3-8667-4d8b-9610-5de52817842e
                  amount: 100
                  currencyCode: USD
                  dupCheck: true
                  settleWithAuth: true
                  paymentHandleToken: PHVwMqBOgsMsX0LF
                  customerIp: 172.0.0.1
                  description: Magazine subscription
              Neteller:
                value:
                  merchantRefNum: 1ebe7b20-8d72-49a4-8f32-759d05022d66
                  amount: 500
                  currencyCode: USD
                  dupCheck: true
                  settleWithAuth: true
                  paymentHandleToken: PHvKAbawZ24c8Atc
                  customerIp: 172.0.0.1
                  description: Magazine subscription
              Paysafecash - without settlement:
                value:
                  merchantRefNum: a9318b525273ee3cda79a2f947a9
                  amount: 500
                  currencyCode: USD
                  dupCheck: true
                  settleWithAuth: false
                  paymentHandleToken: PH4lXuM1iYSK64xG
                  customerIp: 172.0.0.1
                  description: Magazine subscription
              Paysafecash - with settlement:
                value:
                  merchantRefNum: dbe6ecdc2de4876497fbd3001abf
                  amount: 500
                  currencyCode: USD
                  dupCheck: true
                  settleWithAuth: true
                  paymentHandleToken: PHAPtQZ3k0Cul0Rn
                  customerIp: 172.0.0.1
                  description: Magazine subscription
              Paysafecard - without settlement:
                value:
                  merchantRefNum: dc48762fb7c30c2ae975754348e8
                  amount: 500
                  currencyCode: USD
                  dupCheck: true
                  settleWithAuth: false
                  paymentHandleToken: PHEOr9igVFLjOHuz
                  customerIp: 172.0.0.1
                  description: Magazine subscription
              Paysafecard - with settlement:
                value:
                  merchantRefNum: 79bafd7ab61f0db6f0eb52ae41f2
                  amount: 500
                  currencyCode: USD
                  dupCheck: true
                  settleWithAuth: true
                  paymentHandleToken: PH7WOpUPbmAEoQwm
                  customerIp: 172.0.0.1
                  description: Magazine subscription
              Paypal:
                value:
                  merchantRefNum: f906289a-252d-4a24-96ac-33f632fdbd24
                  amount: 500
                  currencyCode: USD
                  dupCheck: true
                  paymentHandleToken: PHlMZJ8aYyDPSMES
                  customerIp: 172.0.0.1
                  description: Magazine subscription
              Pay by Bank:
                value:
                  merchantRefNum: 4bb4fdc8-4166-457a-ba18-141094b36e4f
                  paymentType: PAY_BY_BANK
                  amount: '100'
                  currencyCode: USD
                  dupCheck: true
                  settleWithAuth: true
                  paymentHandleToken: PHhOFAkKoFkoSaAP
                  customerIp: 127.0.0.1
                  description: Magazine subscription
              Venmo:
                value:
                  merchantRefNum: '1674816477288'
                  amount: 100
                  currencyCode: USD
                  dupCheck: false
                  settleWithAuth: true
                  paymentHandleToken: PHi8YKjhhS18Fz15
                  customerIp: 172.0.0.1
                  description: Casino game purchase
              VIP Preferred:
                value:
                  merchantRefNum: '1674815731395'
                  amount: 100
                  currencyCode: USD
                  dupCheck: false
                  settleWithAuth: true
                  paymentHandleToken: SVjLhze4VxKpStDQ
                  customerIp: 172.0.0.1
                  description: Casino game purchase
              Mazooma:
                value:
                  merchantRefNum: 285a1d9f-ab6b-4851-870b-b725148a5162
                  amount: '100'
                  currencyCode: USD
                  dupCheck: true
                  settleWithAuth: true
                  paymentHandleToken: PH0gRuaOS9Yr7PNQ
                  customerIp: 172.0.0.1
                  description: Magazine subscription
              MBWAY:
                value:
                  amount: 500
                  merchantRefNum: '1686307378'
                  paymentHandleToken: PHEJPRvbwXCuVD8r
              MULTIBANCO:
                value:
                  amount: 21000
                  merchantRefNum: '1687174097'
                  paymentHandleToken: PHl4Ba8c4ENf1dtF
              Interac_ETransfer:
                value:
                  merchantRefNum: 01e4606d-93c3-44a1-85f9-710684fb7148
                  amount: '125'
                  currencyCode: CAD
                  settleWithAuth: true
                  paymentHandleToken: PHmg1E8UFKJSrCFq
              'Rapid Transfer via Skrill Quick Checkout ':
                value:
                  amount: 3000
                  merchantRefNum: 299cc09b-3703-4635-8e28-8e6a680b0bcc
                  dupCheck: true
                  paymentType: RAPID_TRANSFER
                  currencyCode: EUR
                  paymentHandleToken: PH3oMryVULc5ldL3
              ACH:
                value:
                  merchantRefNum: '167625194625055'
                  amount: 500
                  currencyCode: USD
                  dupCheck: true
                  settleWithAuth: true
                  paymentHandleToken: DXAM3WtBKVMQyLE
                  customerIp: 172.0.0.1
                  description: Magazine subscription
              EFT:
                value:
                  merchantRefNum: '4533863971'
                  amount: 500
                  currencyCode: CAD
                  dupCheck: true
                  settleWithAuth: true
                  paymentHandleToken: SAFAlxMtcEaJxu5t
                  customerIp: 172.0.0.1
                  description: Magazine subscription
              SEPA:
                value:
                  merchantRefNum: '89974956093183410'
                  amount: 500
                  currencyCode: EUR
                  dupCheck: true
                  settleWithAuth: true
                  payOnActiveMandate: false
                  paymentHandleToken: DdpqgUQS9jqskBm
                  customerIp: 172.0.0.1
                  description: Magazine subscription
                  accountId: '1002604580'
              BACS:
                value:
                  merchantRefNum: '138163592891626050'
                  amount: 500
                  currencyCode: GBP
                  dupCheck: true
                  settleWithAuth: true
                  payOnActiveMandate: false
                  paymentHandleToken: DApo0n1hMEcnWaM
                  customerIp: 172.0.0.1
                  description: Magazine subscription
                  merchantCustomerId: '123'
                  mandateId: 3ee0feba-24a5-493a-9e25-6fa0860f851a
              Skrill 1-Tap:
                value:
                  merchantRefNum: bf464cc0-7d6c-4795-9a08-baab12d7427e
                  amount: 100
                  currencyCode: USD
                  dupCheck: true
                  settleWithAuth: true
                  paymentHandleToken: PH7pUpLkvGfDpLGJ
                  customerIp: 172.0.0.1
                  description: Magazine subscription
              Online Bank Transfer via Safetypay Express:
                value:
                  id: dcf27a44-0380-49ba-a65e-5319925a4838
                  paymentType: ONLINE_BANK_TRANSFER
                  paymentHandleToken: PHN2Gx7nItmtxmTL
                  merchantRefNum: 43af49ee-5a87-41d2-b09f-ed9300ede621
                  currencyCode: BRL
                  settleWithAuth: true
                  dupCheck: true
                  txnTime: '2023-03-14T05:05:21Z'
                  customerIp: 213.208.158.220
                  status: PROCESSING
                  gatewayReconciliationId: b839e5a6-0879-498a-bb09-a28764dc6be4
                  amount: 1000
                  availableToRefund: 0
                  consumerIp: 213.208.158.220
                  liveMode: false
                  simulator: EXTERNAL
                  updatedTime: '2023-03-14T05:05:42Z'
                  statusTime: '2023-03-14T05:05:42Z'
                  gatewayResponse:
                    operationId: '0123073466165265'
                    id: b839e5a6-0879-498a-bb09-a28764dc6be4
                    processor: SAFETYPAY
                    status: '101'
                  availableToSettle: 0
                  profile:
                    email: BRTESTQA202_01@gmail.com
                  settlements:
                    amount: 1000
                    txnTime: '2023-03-14T05:05:21.000+0000'
                    availableToRefund: 0
                    merchantRefNum: 43af49ee-5a87-41d2-b09f-ed9300ede621
                    id: dcf27a44-0380-49ba-a65e-5319925a4838
                    status: PROCESSING
              PIX via Safetypay Express:
                value:
                  merchantRefNum: 915c1a0f-9380-40e6-b1a2-adc968b11efc
                  amount: 500
                  currencyCode: BRL
                  dupCheck: true
                  settleWithAuth: true
                  paymentHandleToken: PHWPYAgGyPEnn56C
              Khipu via Safetypay Express:
                value:
                  merchantRefNum: 40005e73-71e0-433a-8817-7604dfce884d
                  amount: 47000
                  currencyCode: CLP
                  dupCheck: true
                  settleWithAuth: true
                  paymentHandleToken: PHLDYzxhki41lc4H
              Mach via Safetypay Express:
                value:
                  merchantRefNum: 32a2cb08-9167-403c-a5e3-e850cb97a462
                  amount: 500
                  currencyCode: CLP
                  dupCheck: true
                  settleWithAuth: true
                  paymentHandleToken: PHivZQUor3tAMihh
              Boleto Bancario via Safetypay Express:
                value:
                  merchantRefNum: 4e3147e3-2bc0-4b9c-a43c-acf8d8b0e121
                  amount: 500
                  currencyCode: BRL
                  dupCheck: true
                  settleWithAuth: true
                  paymentHandleToken: PHxTXOEU9AAOErZc
              Safetypay Cash via Safetypay Express:
                value:
                  merchantRefNum: daf6947b-3ee1-421a-bea8-dc5bcd45b678
                  amount: 500
                  currencyCode: BRL
                  dupCheck: true
                  settleWithAuth: true
                  paymentHandleToken: PH72waPqDtaxmRzj
              Card - with Cruise line Transaction:
                value:
                  merchantRefNum: febf0cc749a6c9d243c9
                  amount: 500
                  currencyCode: USD
                  dupCheck: true
                  settleWithAuth: true
                  paymentHandleToken: SCbuMkPGvBGSTCt3
                  customerIp: 172.0.0.1
                  description: "Magazine\_subscription"
                  cruiselineTravelDetails:
                    cruiseShipName: Cruise Ship
                    passengerName: John Doe
                    departureDate: '2023-12-15'
                    returnDate: '2023-12-20'
                    country: US
                    state: CA
                    originCity: Barbados
                    roomRate: '1200'
                    travelPackageApplication: CAR_RENTAL_RESERVATION
                    ticket:
                      ticketNumber: '1234567891011'
                      isRestrictedTicket: true
                    passengers:
                      passenger1:
                        ticketNumber: string
                        firstName: string
                        lastName: string
                        phoneNumber: string
                        passengerCode: string
                        gender: M
                      passenger2:
                        ticketNumber: string
                        firstName: string
                        lastName: string
                        phoneNumber: string
                        passengerCode: string
                        gender: M
                      passenger3:
                        ticketNumber: string
                        firstName: string
                        lastName: string
                        phoneNumber: string
                        passengerCode: string
                        gender: M
                      passenger4:
                        ticketNumber: string
                        firstName: string
                        lastName: string
                        phoneNumber: string
                        passengerCode: string
                        gender: M
                      passenger5:
                        ticketNumber: string
                        firstName: string
                        lastName: string
                        phoneNumber: string
                        passengerCode: string
                        gender: M
                      passenger6:
                        ticketNumber: string
                        firstName: string
                        lastName: string
                        phoneNumber: string
                        passengerCode: string
                        gender: M
                    tripLegs:
                      leg1:
                        fare: 1200
                        serviceClass: F
                        departureCity: BDS
                        destinationCity: BDS
                        departureDate: '2022-12-20'
                      leg2:
                        fare: 1200
                        serviceClass: F
                        departureCity: BDS
                        destinationCity: BDS
                        departureDate: '2022-12-20'
                      leg3:
                        fare: 1200
                        serviceClass: F
                        departureCity: BDS
                        destinationCity: BDS
                        departureDate: '2022-12-20'
                      leg4:
                        fare: 1200
                        serviceClass: F
                        departureCity: BDS
                        destinationCity: BDS
                        departureDate: '2022-12-20'
              Card - with Lodging details Transaction:
                value:
                  merchantRefNum: febf0cc749a6c9d243c9
                  amount: 500
                  currencyCode: USD
                  dupCheck: true
                  settleWithAuth: true
                  paymentHandleToken: SCbuMkPGvBGSTCt3
                  customerIp: 172.0.0.1
                  description: Hotel
                  lodgingDetails:
                    hotelFolioNumber: Customer Folio Number
                    checkInDate: '2023-12-15'
                    checkOutDate: '2023-12-20'
                    customerServicePhone: '8311234567'
                    propertyLocalPhone: '8311234567'
                    extraCharges:
                      - RESTAURANT
                    roomRate: 200
                    programCode: LODGING
                    numberOfNights: 5
                    isFireSafetyActCompliant: true
              Card - with Car Rental details Transaction:
                value:
                  merchantRefNum: febf0cc749a6c9d243c9
                  amount: 500
                  currencyCode: USD
                  dupCheck: true
                  settleWithAuth: true
                  paymentHandleToken: SCbuMkPGvBGSTCt3
                  customerIp: 172.0.0.1
                  description: Car
                  carRentalDetails:
                    rentalAgreementNumber: '123456789'
                    renterName: Renter Name
                    noShow: true
                    extraCharges:
                      - GASOLINE
                    customerServicePhone: '8311234567'
                    returnDetails:
                      date: '2023-12-20'
                      location: Location
                      country: US
                      city: New York
                      state: NWY
                    pickupDetails:
                      date: '2023-12-20'
                      location: Rental Agency
                      country: US
                      city: New York
                      state: NWY
                    vehicleClass: REGULAR
        description: ''
      tags:
        - Payments
    get:
      summary: Get Payments Using Merchant Reference Number
      operationId: get-payment-using-merchant-reference-number
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentList'
              examples:
                Example 1:
                  value:
                    meta:
                      numberOfRecords: 1
                      limit: 10
                      page: 1
                    payments:
                      - id: 8190c675-6d68-4cd7-a29c-55b406addaeb
                        amount: 1900
                        merchantRefNum: merchantRefNum-145
                        settleWithAuth: false
                        paymentHandleToken: SChfCGCURe5NiLIv
                        authCode: '107212'
                        txnTime: '2018-12-14T15:12:18Z'
                        customerIp: 10.10.12.64
                        description: Magazine subscription
                        currencyCode: GBP
                        paymentType: CARD
                        status: COMPLETED
                        avsResponse: MATCH
                        cvvVerification: MATCH
                        availableToSettle: 40
                        paymentFacilitator:
                          subMerchant:
                            id: '123456789'
                            name: PayFacSubMerchant
                            phone: '478234562331'
                            email: payfac@mail.com
                            url: www.payfac.com
                            address:
                              street: 100 Queen Street West
                              city: London
                              country: GB
                              zip: M5H 2N2 
      description: 'Click on **Send API Request** after entering the required data,  to see how to look up a Payment using the merchant reference number used in the [original request](/operations/process-payment).'
      parameters:
        - schema:
            type: string
            example: merchantRefNum-145
          in: query
          description: 'This is the merchant reference number created by the merchant and submitted as part of the [Payments request](/operations/process-payment).'
          name: merchantRefNum
          required: true
        - schema:
            type: number
            default: 10
            maximum: 50
            example: 32
          in: query
          name: limit
          description: This is the total number of records to return.
        - schema:
            type: number
            default: 0
            example: 0
          in: query
          name: offset
          description: 'This is the starting position, where 0 is the first record.'
        - schema:
            type: string
            format: date
            example: '2022-11-18'
          in: query
          name: startDate
          description: This is the start date in UTC.  Default = 30 days before the endDate.
        - schema:
            type: string
            format: date
            example: '2022-12-19'
          in: query
          name: endDate
          description: ' This is the end date in UTC. Default = current date and time.'
      tags:
        - Payments
  '/v1/payments/{paymentId}':
    parameters:
      - schema:
          type: string
          example: 3aeb9c63-6386-46a3-9f8e-f452e722228a
        name: paymentId
        in: path
        required: true
        description: 'This is the ID returned in the response of the [Payments](/operations/process-payment) request.'
    get:
      summary: Get Payments
      tags:
        - Payments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payment'
              examples:
                Example 1:
                  value:
                    id: 3aeb9c63-6386-46a3-9f8e-f452e722228a
                    amount: 1900
                    merchantRefNum: merchantRefNum-108
                    settleWithAuth: false
                    paymentHandleToken: SCZJg09GWSv36NLB
                    txnTime: '2018-12-14T15:12:18Z'
                    customerIp: 10.10.12.64
                    dupCheck: true
                    description: Magazine subscription
                    currencyCode: GBP
                    paymentType: CARD
                    status: COMPLETED
                    availableToSettle: 1900
                    gatewayResponse:
                      authCode: '135880'
                      avsResponse: MATCH
                      cvvVerification: MATCH
                    authentication:
                      exemptionIndicator: LOW_VALUE_EXEMPTION
                    paymentFacilitator:
                      subMerchant:
                        id: '123456789'
                        name: PayFacSubMerchant
                        phone: '478234562331'
                        email: payfac@mail.com
                        url: www.payfac.com
                        address:
                          street: 100 Queen Street West
                          city: London
                          country: GB
                          zip: M5H 2N2
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
      operationId: get-payments
      description: 'Click on **Send API Request** after entering the required data, to look up a Payment using the ID returned in the response of the [original request](/operations/process-payment).'
      parameters: []
    put:
      summary: Cancel Payment
      operationId: cancel-payments
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cancelResponse'
              examples:
                Cancel Payment:
                  value:
                    id: 920e9e36-4234-40e6-8c94-43296eb60fe2
                    txnTime: '2023-01-10T12:57:22Z'
                    status: CANCELLED
      tags:
        - Payments
      description: |-
        Click on **Send API Request** after entering the required data, to o cancel a barcode/payment. You must include the status parameter set to CANCELLED in body.

        >**Note:** This is applicable to Paysafecash payment method. You can cancel a barcode/payment only if the Payment is in PROCESSING.
      parameters:
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
            default: EXTERNAL
          in: header
          name: Simulator
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cancelRequest'
            examples:
              Example 1:
                value:
                  status: CANCELLED
        description: Cancel Payment
  '/v1/payments/{paymentId}/voidauths':
    parameters:
      - schema:
          type: string
        name: paymentId
        in: path
        required: true
        description: 'This is the ID returned in the response of the [Payments](/operations/process-payment) request'
    post:
      summary: Void Authorization
      operationId: void-authorization
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/voidAuthorizations'
              examples:
                Card:
                  value:
                    id: 9b84f316-e120-4948-97f6-c97d5a305eb3
                    merchantRefNum: a85c6ed15955adeed35e
                    txnTime: '2023-01-20T05:51:42Z'
                    status: COMPLETED
                    amount: 500
      description: |-
        A Void Authorization request allows you to void (or cancel) an authorization request, provided the authorization has not yet been settled. An authorization is part of a [payment request](/operations/process-payment). This is only applicable when *settleWithAuth* is set to *false* in the payment request. If *settleWithAuth* is set to *true* in the payment request, then the authorization and settlement are completed in the same request, in that case you would not be able to process a Void Authorization.

        Click on **Send API Request** after entering the required data, to see how to submit a Void Authorization request. You can void an Authorization **only if** it has not yet been settled.
      parameters:
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
            default: EXTERNAL
          in: header
          name: Simulator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/voidAuthorizationsRequest'
            examples:
              Card:
                value:
                  amount: 500
                  merchantRefNum: a85c6ed15955adeed35e
      tags:
        - Void Authorizations
  '/v1/voidauths/{voidAuthId}':
    get:
      summary: Get Void Authorization
      tags:
        - Void Authorizations
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/voidAuthorizations'
              examples:
                Look Up Void Authorization:
                  value:
                    id: 9b84f316-e120-4948-97f6-c97d5a305eb3
                    merchantRefNum: a85c6ed15955adeed35e
                    txnTime: '2023-01-20T05:51:42Z'
                    status: COMPLETED
                    amount: 500
      operationId: get-void-authorization
      description: 'Click on **Send API Request** after entering the required data, to see how to lookup a Void Authorization using the ID returned in the response to the [original request](/operations/void-authorization).'
      parameters: []
    parameters:
      - schema:
          type: string
        name: voidAuthId
        in: path
        required: true
        description: 'This is the ID returned in the response of the [Void Authorization](/operations/void-authorization) request.'
  /v1/voidauths:
    get:
      summary: Get Void Authorization Using Merchant Reference Number
      tags:
        - Void Authorizations
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/voidAuthorizationsList'
              examples:
                Look Up Void Authorization Using Merchant Reference Number:
                  value:
                    meta:
                      numberOfRecords: 1
                      limit: 10
                      page: 1
                    voidAuths:
                      - id: 9b84f316-e120-4948-97f6-c97d5a305eb3
                        merchantRefNum: a85c6ed15955adeed35e
                        amount: 500
                        txnTime: '2023-01-20T05:51:42Z'
                        status: COMPLETED
      operationId: get-void-authorization-using-merchant-reference-number
      parameters:
        - schema:
            type: string
            example: '1391581772002515624'
          in: query
          name: merchantRefNum
          description: 'This is the merchant reference number created by the merchant and submitted as part of the [Void Authorization request](/operations/void-authorization).'
          required: true
        - schema:
            type: number
            default: 10
            maximum: 50
            example: 32
          in: query
          name: limit
          description: This is the total number of records to return.
        - schema:
            type: number
            default: 0
            example: 0
          in: query
          name: offset
          description: 'This is the starting position, where 0 is the first record.'
        - schema:
            type: string
            format: date
            example: '2022-11-18'
          in: query
          name: startDate
          description: This is the start date in UTC.  Default = 30 days before the endDate.
        - schema:
            type: string
            format: date
            example: '2022-12-19'
          in: query
          name: endDate
          description: ' This is the end date in UTC. Default = current date and time.'
      description: 'Click on **Send API Request** after entering the required data, to see how to lookup a Void Authorization using the merchant reference number used in the [original request](/operations/void-authorization).'
  '/v1/payments/{paymentId}/settlements':
    parameters:
      - schema:
          type: string
        name: paymentId
        in: path
        required: true
        description: 'This is the ID returned in the response of the [Payments](/operations/process-payment) request'
    post:
      summary: Process Settlement
      operationId: process-settlement
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settlement'
              examples:
                Card:
                  value:
                    id: 9b84dedd-2a92-47bf-a8ee-131e2d898105
                    merchantRefNum: 54a9c50c5f2707c813e5
                    txnTime: '2023-01-20T05:44:18Z'
                    status: PENDING
                    amount: 500
                    availableToRefund: 500
                Paysafecard:
                  value:
                    id: 5a65736a-ce72-4733-8f65-b54a4a1d3059
                    paymentType: PAYSAFECARD
                    merchantRefNum: dc48762fb7c30c2ae975754348e8
                    currencyCode: USD
                    txnTime: '2023-01-20T04:35:19Z'
                    status: COMPLETED
                    gatewayReconciliationId: adcf19cf-39c5-4eb4-a65d-7f50cd1aebd6
                    amount: 500
                    liveMode: false
                    updatedTime: '2023-01-20T04:35:19Z'
                    statusTime: '2023-01-20T04:35:19Z'
                    availableToRefund: 500
                    gatewayResponse:
                      id: adcf19cf-39c5-4eb4-a65d-7f50cd1aebd6
                      processor: PAYSAFECARD
                Paysafecash:
                  value:
                    id: 8d951743-78e5-4fa5-aa15-2c42f0c05228
                    paymentType: PAYSAFECASH
                    merchantRefNum: a9318b525273ee3cda79a2f947a9
                    currencyCode: USD
                    txnTime: '2023-01-20T04:20:31Z'
                    status: COMPLETED
                    gatewayReconciliationId: 6eac96d8-b42e-4bc2-b0c8-b0cf19318113
                    amount: 500
                    liveMode: false
                    updatedTime: '2023-01-20T04:20:31Z'
                    statusTime: '2023-01-20T04:20:31Z'
                    availableToRefund: 500
                    gatewayResponse:
                      id: 6eac96d8-b42e-4bc2-b0c8-b0cf19318113
                      processor: PAYSAFECASH
                Paypal:
                  value:
                    id: 700b4a1b-866c-4ef6-a1fb-8975ab4da107
                    paymentType: PAYPAL
                    merchantRefNum: 39d0f412-e1f7-4550-a637-3d4d66f3e8db
                    currencyCode: USD
                    txnTime: '2023-01-27T09:00:10Z'
                    status: COMPLETED
                    gatewayReconciliationId: d92d95ae-e38f-461a-9793-6d6a2019adf2
                    amount: 500
                    simulator: INTERNAL
                    liveMode: false
                    updatedTime: '2023-01-27T09:00:10Z'
                    statusTime: '2023-01-27T09:00:10Z'
                    availableToRefund: 500
                    gatewayResponse:
                      id: KSUZBTPELURRUO3BL
                      processor: PAYPAL
      parameters:
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
            default: EXTERNAL
          in: header
          name: Simulator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settlementRequest'
            examples:
              card:
                value:
                  merchantRefNum: 54a9c50c5f2707c813e5
                  dupCheck: true
                  amount: '500'
              Paysafecard:
                value:
                  merchantRefNum: dc48762fb7c30c2ae975754348e8
                  dupCheck: true
                  amount: '500'
              Paysafecash:
                value:
                  merchantRefNum: a9318b525273ee3cda79a2f947a9
                  dupCheck: true
                  amount: '500'
              Paypal:
                value:
                  merchantRefNum: 39d0f412-e1f7-4550-a637-3d4d66f3e8db
                  dupCheck: true
                  amount: '500'
        description: ''
      description: |-
        A Settlement request allows you to settle a previous authorization that was not settled in the original Purchase request (i.e., where *settleWithAuth* was set to *false*).
        - A regular Settlement, where the initial request was an Authorization that is to be settled.

        - A Settlement that is split into multiple merchant accounts. This is applicable for those merchants whose accounts are configured to do so.

        - A Settlement for the authorization with the full airline travel details for the AIRLINE Merchants

        Click on **Send API Request** after entering the required data, to see how to process a Settlement request.
      tags:
        - Settlements
  '/v1/settlements/{settlementId}':
    parameters:
      - schema:
          type: string
          example: 8d951743-78e5-4fa5-aa15-2c42f0c05228
        name: settlementId
        in: path
        required: true
        description: ' This is the ID returned in the response of the [Settlement](/operations/process-settlement) request.'
    get:
      summary: Get Settlements
      tags:
        - Settlements
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settlement'
              examples:
                Look Up Settlement:
                  value:
                    id: 8d951743-78e5-4fa5-aa15-2c42f0c05228
                    paymentType: PAYSAFECASH
                    merchantRefNum: a9318b525273ee3cda79a2f947a9
                    currencyCode: USD
                    txnTime: '2023-01-20T04:20:31Z'
                    status: COMPLETED
                    gatewayReconciliationId: 6eac96d8-b42e-4bc2-b0c8-b0cf19318113
                    amount: 500
                    liveMode: false
                    updatedTime: '2023-01-20T04:20:31Z'
                    statusTime: '2023-01-20T04:20:31Z'
                    availableToRefund: 500
                    gatewayResponse:
                      id: 6eac96d8-b42e-4bc2-b0c8-b0cf19318113
                      processor: PAYSAFECASH
      operationId: get-settlements
      description: 'Click on **Send API Request** after entering the required data, to see how to lookup a Settlement using the ID returned in the response to the [original request](/operations/process-settlement).'
      parameters: []
    put:
      summary: Cancel Settlement
      operationId: cancel-settlement
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cancelResponse'
              examples:
                Cancel a Settlement:
                  value:
                    id: ea49ab6c-cf9b-4efd-bde8-2fa3bb5ccd85
                    txnTime: '2018-12-11T16:33:49Z'
                    status: CANCELLED
      description: |-
        Click on **Send API Request** after entering the required data, to see how to cancel a Settlement. You must include the status parameter set to *CANCELLED*.

        >**Note:** You can cancel a Settlement only if the payment type is CARD and the status is PENDING.
      parameters:
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
            default: EXTERNAL
          in: header
          name: Simulator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cancelRequest'
            examples:
              Cancel a Settlement:
                value:
                  status: CANCELLED
      tags:
        - Settlements
  /v1/settlements:
    get:
      summary: Get Settlements Using Merchant Reference Number
      tags:
        - Settlements
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settlementList'
              examples:
                Look Up Settlement Using Merchant Reference Number:
                  value:
                    meta:
                      numberOfRecords: 1
                      limit: 10
                      page: 1
                    settlements:
                      - id: 8d951743-78e5-4fa5-aa15-2c42f0c05228
                        paymentType: PAYSAFECASH
                        merchantRefNum: a9318b525273ee3cda79a2f947a9
                        currencyCode: USD
                        txnTime: '2023-01-20T04:20:31Z'
                        status: COMPLETED
                        gatewayReconciliationId: 6eac96d8-b42e-4bc2-b0c8-b0cf19318113
                        amount: 500
                        liveMode: false
                        updatedTime: '2023-01-20T04:20:31Z'
                        statusTime: '2023-01-20T04:20:31Z'
                        availableToRefund: 500
                        gatewayResponse:
                          id: 6eac96d8-b42e-4bc2-b0c8-b0cf19318113
                          processor: PAYSAFECASH
      operationId: get-settlements-using-merchant-reference-number
      parameters:
        - schema:
            type: string
            example: merchantRefNum-144
          in: query
          name: merchantRefNum
          required: true
          description: 'This is the merchant reference number created by the merchant and submitted as part of the [Process Settlement request](/operations/process-settlement)..'
        - schema:
            type: number
            default: 10
            maximum: 50
          in: query
          name: limit
          description: This is the total number of records to return.
        - schema:
            type: number
            default: 0
            example: 0
          in: query
          name: offset
          description: 'This is the starting position, where 0 is the first record.'
        - schema:
            type: string
            format: date
            example: '2022-11-18'
          in: query
          name: startDate
          description: This is the start date in UTC. Default = 30 days before the endDate.
        - schema:
            type: string
            format: date
          in: query
          name: endDate
          description: This is the end date in UTC. Default = current date and time.
      description: 'Click on **Send API Request** after entering the required data, to see how to lookup a Settlement using the merchant reference number used in the [original request](/operations/process-settlement).'
  '/v1/settlements/{settlementId}/refunds':
    parameters:
      - schema:
          type: string
        name: settlementId
        in: path
        required: true
        description: ' This is the ID returned in the response to the [Settlement](/operations/process-settlement) request or to the Payment request where the authorization was settled in the same request. '
    post:
      summary: Process Refund
      operationId: process-refund
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/refunds'
              examples:
                Paysafecash:
                  value:
                    id: 0549c2df-f995-43e9-ad1d-64cecfd2bc37
                    paymentType: PAYSAFECASH
                    merchantRefNum: a9318b525273ee3cda79a2f947a9
                    currencyCode: USD
                    txnTime: '2023-01-20T04:21:44Z'
                    status: COMPLETED
                    gatewayReconciliationId: b222abd6-1008-4723-83f5-615751778d16
                    amount: 500
                    updatedTime: '2023-01-20T04:21:45Z'
                    statusTime: '2023-01-20T04:21:45Z'
                    liveMode: false
                    gatewayResponse:
                      id: b222abd6-1008-4723-83f5-615751778d16
                      processor: PAYSAFECARD
                    source: SingleAPI
                Paysafecard:
                  value:
                    id: 8ee3e52f-df4d-4667-87b3-3158437aea62
                    paymentType: PAYSAFECARD
                    merchantRefNum: dc48762fb7c30c2ae975754348e8
                    currencyCode: USD
                    txnTime: '2023-01-20T04:36:38Z'
                    status: COMPLETED
                    gatewayReconciliationId: f72a7e27-b6a0-4bb6-8964-702082c99125
                    amount: 500
                    updatedTime: '2023-01-20T04:36:39Z'
                    statusTime: '2023-01-20T04:36:39Z'
                    liveMode: false
                    gatewayResponse:
                      id: f72a7e27-b6a0-4bb6-8964-702082c99125
                      processor: PAYSAFECARD
                    source: SingleAPI
                Rapid Transfer via Skrill Quick Checkout:
                  value:
                    id: 7b0e2672-6409-4b23-82ca-87640f569990
                    paymentType: RAPID_TRANSFER
                    merchantRefNum: 299cc09b-3703-4635-8e28-8e6a680b0bcc
                    currencyCode: EUR
                    txnTime: '2023-01-20T09:11:35Z'
                    status: COMPLETED
                    gatewayReconciliationId: '458526105'
                    amount: 200
                    updatedTime: '2023-01-20T09:11:35Z'
                    statusTime: '2023-01-20T09:11:35Z'
                    liveMode: false
                    simulator: INTERNAL
                    gatewayResponse:
                      id: '458526105'
                      status: '2'
                      merchant_id: '-1787135502'
                      processor: SKRILL_QCO
                    source: SingleAPI
                Skrill:
                  value:
                    id: 66b821c9-0228-43b2-acd9-57fcf181c9e8
                    paymentType: SKRILL
                    merchantRefNum: 21c970d3-8667-4d8b-9610-5de52817842e1
                    currencyCode: USD
                    txnTime: '2023-01-20T13:30:53Z'
                    status: COMPLETED
                    gatewayReconciliationId: '-387409531'
                    amount: 100
                    updatedTime: '2023-01-20T13:30:53Z'
                    statusTime: '2023-01-20T13:30:53Z'
                    liveMode: false
                    simulator: INTERNAL
                    gatewayResponse:
                      id: '-387409531'
                      status: '2'
                      merchant_id: '982842053'
                      processor: SKRILL_QCO
                    source: SingleAPI
                Process a Refund with Split Payouts:
                  value:
                    id: c7ef07b2-0069-4f58-b9e2-0f4cdbc6c725
                    merchantRefNum: merchantRefNum-118
                    amount: 190
                    txnTime: '2018-12-11T16:33:49Z'
                    status: PENDING
                    splitpay:
                      - linkedAccount: '123124124'
                        amount: 500
                Skrill 1-Tap:
                  value:
                    id: 9a7d668f-de25-4521-9e38-8c01a8ae2096
                    paymentType: SKRILL1TAP
                    merchantRefNum: de07a03e-8ef6-42ea-8ade-d131a79b15de
                    currencyCode: USD
                    txnTime: '2023-01-31T05:36:10Z'
                    status: COMPLETED
                    gatewayReconciliationId: '4626912960'
                    amount: 50
                    updatedTime: '2023-01-31T05:36:11Z'
                    statusTime: '2023-01-31T05:36:11Z'
                    liveMode: false
                    simulator: EXTERNAL
                    gatewayResponse:
                      id: '4626912960'
                      status: '2'
                      merchant_id: '48091998'
                      processor: SKRILL_QCO
                    source: SingleAPI
                Card:
                  value:
                    id: eb4a057a-dd8a-40d7-9585-25be080bfed3
                    merchantRefNum: 92cf2183-2298-44a6-99d4-5af6d727cea3
                    txnTime: '2023-02-01T16:11:45Z'
                    status: PENDING
                    amount: 1116
                Trustly via Skrill QCO:
                  value:
                    id: ae0dbd76-1405-4078-9fdb-12a74b49a315
                    paymentType: TRUSTLY
                    merchantRefNum: 026e4856-2e9d-4bc5-975f-b80d08ddf353
                    currencyCode: EUR
                    txnTime: '2023-03-27T11:11:53Z'
                    status: COMPLETED
                    gatewayReconciliationId: '-591646041'
                    amount: 100
                    updatedTime: '2023-03-27T11:11:53Z'
                    statusTime: '2023-03-27T11:11:53Z'
                    liveMode: false
                    simulator: INTERNAL
                    gatewayResponse:
                      id: '-591646041'
                      status: '2'
                      merchant_id: '982842053'
                      processor: SKRILL_QCO
                      source: SingleAPI
                MBWAY:
                  value:
                    id: 28d955ca-3067-4a4b-bde8-1322a7234707
                    paymentType: MBWAY
                    merchantRefNum: '1686307992'
                    currencyCode: EUR
                    txnTime: '2023-06-09T10:53:12Z'
                    status: COMPLETED
                    gatewayReconciliationId: '4841419552'
                    amount: 550
                    updatedTime: '2023-06-09T10:53:12Z'
                    statusTime: '2023-06-09T10:53:12Z'
                    liveMode: false
                    simulator: EXTERNAL
                    gatewayResponse:
                      id: '4841419552'
                      status: '2'
                      merchant_id: '202454978'
                      processor: SKRILL_QCO
                    source: SingleAPI
                MULTIBANCO:
                  value:
                    id: c1635200-6fd7-4da3-a089-593ead3ab403
                    paymentType: MULTIBANCO
                    merchantRefNum: '1687174163'
                    currencyCode: EUR
                    txnTime: '2023-06-19T11:29:23Z'
                    status: COMPLETED
                    gatewayReconciliationId: '4857016162'
                    amount: 2421
                    updatedTime: '2023-06-19T11:29:24Z'
                    statusTime: '2023-06-19T11:29:24Z'
                    liveMode: false
                    simulator: EXTERNAL
                    gatewayResponse:
                      id: '4857016162'
                      status: '2'
                      merchant_id: '202454978'
                      processor: SKRILL_QCO
                    source: SingleAPI
      parameters:
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
            default: EXTERNAL
          in: header
          name: Simulator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/refundsRequest'
            examples:
              Paysafecash:
                value:
                  merchantRefNum: a9318b525273ee3cda79a2f947a9
                  amount: 500
                  dupCheck: true
              Paysafecard:
                value:
                  merchantRefNum: dc48762fb7c30c2ae975754348e8
                  amount: 500
                  dupCheck: true
              Rapid Transfer via Skrill Quick Checkout:
                value:
                  merchantRefNum: 299cc09b-3703-4635-8e28-8e6a680b0bcc
                  amount: 200
                  dupCheck: true
              Skrill:
                value:
                  merchantRefNum: 21c970d3-8667-4d8b-9610-5de52817842e1
                  amount: 100
                  dupCheck: true
              Process a Refund with Split Payouts:
                value:
                  merchantRefNum: merchantRefNum-118
                  amount: 190
                  dupCheck: true
                  splitpay:
                    - linkedAccount: '123124124'
                      amount: 500
              Skrill 1-Tap:
                value:
                  merchantRefNum: de07a03e-8ef6-42ea-8ade-d131a79b15de
                  amount: 50
                  dupCheck: true
              Card:
                value:
                  merchantRefNum: 92cf2183-2298-44a6-99d4-5af6d727cea3
                  amount: 1116
                  dupCheck: false
              Trustly via Skrill QCO:
                value:
                  merchantRefNum: '{{merchantrefnum}}'
                  amount: 100
                  dupCheck: true
              MBWAY:
                value:
                  amount: 50
                  merchantRefNum: '1686307506'
              MULTIBANCO:
                value:
                  amount: 2421
                  merchantRefNum: '1687174150'
      tags:
        - Refunds
      description: |-
        Click on **Send API Request** after entering the required data, to see how to process a Refund request.

           - A regular Refund.
           
           - A Refund that is split into multiple merchant accounts. This is applicable for those merchants whose accounts are configured to do so.
  '/v1/refunds/{refundId}':
    parameters:
      - schema:
          type: string
          example: 0549c2df-f995-43e9-ad1d-64cecfd2bc37
        name: refundId
        in: path
        required: true
        description: 'This is the ID returned in the response to the [Refund](/operations/process-refund) request'
    get:
      summary: Get Refund
      tags:
        - Refunds
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/refunds'
              examples:
                Look Up Refund:
                  value:
                    id: 0549c2df-f995-43e9-ad1d-64cecfd2bc37
                    paymentType: PAYSAFECASH
                    merchantRefNum: a9318b525273ee3cda79a2f947a9
                    currencyCode: USD
                    txnTime: '2023-01-20T04:21:44Z'
                    status: COMPLETED
                    gatewayReconciliationId: b222abd6-1008-4723-83f5-615751778d16
                    amount: 500
                    updatedTime: '2023-01-20T04:21:45Z'
                    statusTime: '2023-01-20T04:21:45Z'
                    liveMode: false
                    gatewayResponse:
                      id: b222abd6-1008-4723-83f5-615751778d16
                      processor: PAYSAFECARD
                    source: SingleAPI
      operationId: get-refund
      parameters: []
      description: 'Click on **Send API Request** after entering the required data, to look up a Refund using the ID returned in the response of the [original request](/operations/process-refund).'
    put:
      summary: Cancel Refund
      operationId: cancel-refund
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cancelResponse'
              examples:
                Cancel a Refund:
                  value:
                    id: c7ef07b2-0069-4f58-b9e2-0f4cdbc6c725
                    txnTime: '2018-12-10T11:19:51Z'
                    status: CANCELLED
      tags:
        - Refunds
      parameters:
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
            default: EXTERNAL
          in: header
          name: Simulator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cancelRequest'
            examples:
              Cancel a Refund:
                value:
                  status: CANCELLED
      description: |-
        Click on **Send API Request** after entering the required data, to cancel a Refund. You must include the status parameter set to *CANCELLED*.

        >**Note:** You can cancel a Refund only if the payment type is CARD and the status is PENDING.
  /v1/refunds:
    get:
      summary: Get Refunds Using Merchant Reference Number
      tags:
        - Refunds
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/refundList'
              examples:
                Look Up Refund Using Merchant Reference Number:
                  value:
                    meta:
                      numberOfRecords: 1
                      limit: 10
                      page: 1
                    refunds:
                      - id: 0549c2df-f995-43e9-ad1d-64cecfd2bc37
                        paymentType: PAYSAFECASH
                        merchantRefNum: a9318b525273ee3cda79a2f947a9
                        currencyCode: USD
                        txnTime: '2023-01-20T04:21:44Z'
                        status: COMPLETED
                        gatewayReconciliationId: b222abd6-1008-4723-83f5-615751778d16
                        amount: 500
                        updatedTime: '2023-01-20T04:21:45Z'
                        statusTime: '2023-01-20T04:21:45Z'
                        liveMode: false
                        gatewayResponse:
                          id: b222abd6-1008-4723-83f5-615751778d16
                          processor: PAYSAFECARD
                        source: SingleAPI
      operationId: get-refunds-using-merchant-reference-number
      parameters:
        - schema:
            type: string
            example: merchantRefNum-118
          in: query
          name: merchantRefNum
          description: 'This is the merchant reference number created by the merchant and submitted as part of the [Process Refund](/operations/process-refund) request.'
          required: true
        - schema:
            type: number
            default: 10
            maximum: 50
          in: query
          name: limit
          description: This is the total number of records to return.
        - schema:
            type: number
            default: 0
            example: 0
          in: query
          name: offset
          description: 'This is the starting position, where 0 is the first record.'
        - schema:
            type: string
            format: date
            example: '2022-11-18'
          in: query
          name: startDate
          description: This is the start date in UTC. Default = 30 days before the endDate.
        - schema:
            type: string
            format: date
            example: '2022-12-19'
          in: query
          name: endDate
          description: This is the end date in UTC. Default = current date and time.
      description: 'Click on **Send API Request** after entering the required data, to look up a Refund using the merchant reference number used in the [original request](/operations/process-refund).'
  /v1/standalonecredits:
    post:
      summary: Process Standalone Credit
      operationId: process-standalone-credit
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/standaloneCredit'
              examples:
                Card:
                  value:
                    id: eddbec36-6fc7-48fb-a694-dfc5b314ec0d
                    paymentType: CARD
                    paymentHandleToken: SCQp7CmWCSRFmvzv
                    merchantRefNum: 32be35aac78dbfe252a2
                    currencyCode: USD
                    txnTime: '2023-01-20T05:59:13Z'
                    billingDetails:
                      street: TEST
                      city: CA
                      zip: '12345'
                      state: CA
                      country: US
                    customerIp: 204.91.0.12
                    status: PENDING
                    amount: 500
                    description: Winning payment from Loto 649
                    card:
                      cardExpiry:
                        month: '10'
                        year: '2025'
                      holderName: Dilip
                      cardType: MC
                      cardBin: '510040'
                      lastDigits: '0000'
                      cardCategory: DEBIT
                      issuingCountry: US
                      paymentFacilitator:
                        subMerchant:
                          id: '123456789'
                          name: PayFacSubMerchant
                          phone: '478234562331'
                          email: payfac@mail.com
                          url: www.payfac.com
                          address:
                            street: 100 Queen Street West
                            city: London
                            country: GB
                            zip: M5H 2N2
                      merchantDescriptor:
                        dynamicDescriptor: 'OnlineStore'
                Card - Process Standalone with Dynamic Descriptor:
                  value:
                    id: eddbec36-6fc7-48fb-a694-dfc5b314ec0d
                    paymentType: CARD
                    paymentHandleToken: SCQp7CmWCSRFmvzv
                    merchantRefNum: 32be35aac78dbfe252a2
                    currencyCode: USD
                    txnTime: '2023-01-20T05:59:13Z'
                    billingDetails:
                      street: TEST
                      city: CA
                      zip: '12345'
                      state: CA
                      country: US
                    customerIp: 204.91.0.12
                    status: PENDING
                    amount: 500
                    description: Winning payment from Loto 649
                    card:
                      cardExpiry:
                        month: '10'
                        year: '2025'
                      holderName: Dilip
                      cardType: MC
                      cardBin: '510040'
                      lastDigits: '0000'
                      cardCategory: DEBIT
                      issuingCountry: US
                      paymentFacilitator:
                        subMerchant:
                          id: '123456789'
                          name: PayFacSubMerchant
                          phone: '478234562331'
                          email: payfac@mail.com
                          url: www.payfac.com
                          address:
                            street: 100 Queen Street West
                            city: London
                            country: GB
                            zip: M5H 2N2
                      merchantDescriptor:
                        dynamicDescriptor: 'PetShop'                        
                Skrill:
                  value:
                    id: c480cca3-cf11-42e0-a2d6-7a241176bab6
                    paymentType: SKRILL
                    paymentHandleToken: PHZUY7WtMfbdsx45
                    merchantRefNum: 4bcdd8f8-a936-458a-bb3d-906d0d15d43f
                    currencyCode: USD
                    dupCheck: true
                    txnTime: '2023-01-20T03:23:23Z'
                    billingDetails:
                      street1: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                    customerIp: 204.91.0.12
                    status: COMPLETED
                    gatewayReconciliationId: AEAAAAFEMQ
                    amount: 500
                    returnLinks:
                      - rel: default
                        href: 'https://usgaminggamblig.com/payment/return/success'
                      - rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                      - rel: on_cancelled
                        href: 'https://usgaminggamblig.com/payment/return/cancel'
                    liveMode: false
                    updatedTime: '2023-01-20T03:23:25Z'
                    statusTime: '2023-01-20T03:23:25Z'
                    gatewayResponse:
                      status_msg: processed
                      id: '1681766026'
                      processor: SKRILL_QCO
                      sid: 033015b42b9e4893a5a44094466f7032
                      status: '2'
                    skrill:
                      consumerId: greg_neteller@mailinator.com
                      emailSubject: Payout for XYZ
                      emailMessage: Note for email here
                    profile:
                      firstName: pawan
                      lastName: Kalyan
                      email: test@paysafe.com
                      phone: '1234567890'
                Neteller:
                  value:
                    id: 97b178bc-f059-4319-a000-a1f4cba5ccfb
                    paymentType: NETELLER
                    paymentHandleToken: PHF60R0xCCCXn2Rm
                    merchantRefNum: 37e4b746-68ae-4837-a99d-d4a0bcf71ede
                    currencyCode: USD
                    dupCheck: true
                    txnTime: '2023-01-20T03:37:13Z'
                    billingDetails:
                      street1: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                    customerIp: 204.91.0.12
                    status: PENDING
                    gatewayReconciliationId: 37e4b746-68ae-4837-a99d-d4a0bcf71ede
                    amount: 500
                    returnLinks:
                      - rel: default
                        href: 'https://usgaminggamblig.com/payment/return/success'
                      - rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                      - rel: on_cancelled
                        href: 'https://usgaminggamblig.com/payment/return/cancel'
                    liveMode: false
                    updatedTime: '2023-01-20T03:37:15Z'
                    statusTime: '2023-01-20T03:37:15Z'
                    gatewayResponse:
                      transactionType: MERCHANT_TO_MEMBER
                      amount: '500'
                      status_msg: scheduled
                      currency: USD
                      id: '1347650286'
                      processor: PAYSAFE_DIGITALWALLET
                      status: pending
                    neteller:
                      consumerId: neteller.account@example.org
                Paypal:
                  value:
                    id: d6e29914-3e4b-4954-8317-af07229c16e6
                    paymentType: PAYPAL
                    paymentHandleToken: PHjMAHYRCILzMgOa
                    merchantRefNum: f9a868aa-8b04-45fa-ad76-94c14b54cea3
                    currencyCode: USD
                    dupCheck: true
                    txnTime: '2023-01-20T05:08:37Z'
                    billingDetails:
                      street1: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                    customerIp: 204.91.0.12
                    status: PROCESSING
                    amount: 100
                    returnLinks:
                      - rel: on_cancelled
                        href: 'https://usgaminggamblig.com/payment/return/cancelled'
                      - rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                      - rel: default
                        href: 'https://usgaminggamblig.com/payment/return/success'
                    liveMode: false
                    simulator: EXTERNAL
                    updatedTime: '2023-01-20T05:08:37Z'
                    statusTime: '2023-01-20T05:08:37Z'
                    paypal:
                      recipientType: PAYPAL_ID
                      consumerId: LK9HZ65GCHVSH
                      consumerMessage: Paysafe consumer message for sct
                    profile:
                      firstName: John
                      lastName: Doe
                      email: john.doe@paysafe.com
                Pay by Bank:
                  value:
                    id: 0c29c606-f458-44a9-b347-7ede454b02af
                    paymentType: PAY_BY_BANK
                    paymentHandleToken: PHBwCq4aC3AGF34T
                    merchantRefNum: ec49cd76-7a20-4422-8603-2a4e5bbf4aaf
                    currencyCode: USD
                    dupCheck: true
                    txnTime: '2024-03-04T10:41:54Z'
                    billingDetails:
                      street1: QA Perf Test Street1 002
                      city: Perf Test City
                      zip: '15132'
                      state: FL
                      country: US
                    customerIp: 127.0.0.1
                    status: COMPLETED
                    gatewayReconciliationId: dfc71780-2373-4b83-82b0-a5d47822dcdc
                    amount: 100
                    liveMode: false
                    simulator: EXTERNAL
                    updatedTime: '2024-03-04T10:41:55Z'
                    statusTime: '2024-03-04T10:41:55Z'
                    gatewayResponse:
                      processor: PAY_BY_BANK
                      id: 3049b5d1-2784-4a5c-873d-29b5ca6fdaa8
                      status: COMPLETED
                    payByBank:
                      consumerId: qa_perf_test_consumer_0001
                      registrationId: c140fbcf-2d8c-4962-9f8f-a19d15e34319
                      ach:
                        paymentHandleToken: BAonftuNrjpdBcY5
                        routingNumber: '211589828'
                        accountType: CHECKING
                        lastDigits: '92'
                    profile:
                      firstName: Perf 0001
                      lastName: Cons 0001
                      email: perftestconsumer0001@example.com
                      dateOfBirth:
                        day: 1
                        month: 1
                        year: 1977
                      phone: '9897550001'
                Venmo:
                  value:
                    id: 8ba337c8-e00f-4e0f-a48d-cc3bb1e6d0ef
                    paymentType: VENMO
                    paymentHandleToken: PHfmNDxrvSooawrX
                    merchantRefNum: '1674816698889'
                    currencyCode: USD
                    dupCheck: true
                    txnTime: '2023-01-27T10:52:24Z'
                    billingDetails:
                      street1: '100'
                      street2: Queen Street
                      city: Cupertino
                      zip: '14236'
                      state: CA
                      country: US
                    customerIp: 172.0.0.1
                    status: PROCESSING
                    amount: 100
                    returnLinks:
                      - rel: on_failed
                        href: 'https://api.test.paysafe.com/checkout/v2/pages/redirect-error.html'
                      - rel: on_completed
                        href: 'https://api.test.paysafe.com/checkout/v2/pages/redirect-success.html'
                      - rel: default
                        href: 'https://api.test.paysafe.com/checkout/v2/pages/redirect-success.html'
                    liveMode: false
                    simulator: EXTERNAL
                    updatedTime: '2023-01-27T10:52:24Z'
                    statusTime: '2023-01-27T10:52:24Z'
                    source: SingleAPI
                    profile:
                      firstName: Sandi
                      lastName: Smith
                      email: sandi.smith@paysafe.com
                      dateOfBirth:
                        day: 23
                        month: 12
                        year: 1990
                      phone: '84632876432'
                    venmo:
                      recipientType: USER_ID
                      consumerId: sb-cpfxo1472298@personal.example.com
                VIP Preferred:
                  value:
                    id: 54bff285-2599-408e-9ee1-8f1684527f61
                    paymentType: VIPPREFERRED
                    paymentHandleToken: SVnQUrrDfdbFOa2m
                    merchantRefNum: '1674815926768'
                    currencyCode: USD
                    dupCheck: true
                    txnTime: '2023-01-27T10:39:45Z'
                    billingDetails:
                      street1: '100'
                      street2: Queen Street
                      city: Cupertino
                      zip: '14236'
                      state: CA
                      country: US
                    customerIp: 172.0.0.1
                    status: COMPLETED
                    gatewayReconciliationId: cf4e10a6-03c1-4121-9f1f-4125ff7372f7
                    amount: 10000
                    returnLinks:
                      - rel: on_completed
                        href: 'https://api.test.paysafe.com/checkout/v2/pages/redirect-success.html'
                      - rel: default
                        href: 'https://api.test.paysafe.com/checkout/v2/pages/redirect-success.html'
                      - rel: on_failed
                        href: 'https://api.test.paysafe.com/checkout/v2/pages/redirect-error.html'
                    registrationId: dca6f899-e311-4feb-aa51-8a4aae63e3e1
                    liveMode: false
                    simulator: EXTERNAL
                    updatedTime: '2023-01-27T10:39:46Z'
                    statusTime: '2023-01-27T10:39:46Z'
                    gatewayResponse:
                      paymentProcessorTransactionId: YIWTAECYONVRFBTZ8WJ2
                      amount: 10000
                      id: YIWTAECYONVRFBTZ8WJ2
                      transactionName: CHKDISBURS
                      transactionTime: 1674815985631
                      processor: VIPPREFERRED
                      transactionId: YIWTAECYONVRFBTZ8WJ2
                      responseCode: '00'
                    source: SingleAPI
                    vippreferred:
                      paymentHandleToken: BAyiskFZ2zL3KFzd
                      ach:
                        bankName: 'Rbs Citizens, Na'
                        routingNumber: '011401533'
                        lastDigits: '00'
                        paymentToken: BAyiskFZ2zL3KFzd
                        paymentHandleToken: BAyiskFZ2zL3KFzd
                    profile:
                      firstName: Sandi
                      lastName: Smith
                      email: sandi.smith@paysafe.com
                      dateOfBirth:
                        day: 23
                        month: 12
                        year: 1990
                      phone: '84632876432'
                Mazooma:
                  value:
                    id: e95993a0-9850-4703-b8d5-3cb3bff21c4a
                    paymentType: MAZOOMA
                    paymentHandleToken: PHZc4MnuRMe50G6C
                    merchantRefNum: mer_ref_1674192267
                    currencyCode: USD
                    dupCheck: true
                    txnTime: '2023-01-20T05:25:54Z'
                    billingDetails:
                      street1: Queen Street West
                      street2: Queen Street
                      city: Imphal
                      zip: '14236'
                      state: NY
                      country: US
                    customerIp: 172.0.0.1
                    status: PROCESSING
                    gatewayReconciliationId: 3786a2db-2d1f-4698-9d2f-231a5df08134
                    amount: 100
                    returnLinks:
                      - rel: on_cancelled
                        href: 'http://www.bestbuy.ca'
                      - rel: on_failed
                        href: 'http://www.costco.ca'
                      - rel: default
                        href: 'http://www.amazon.ca'
                    liveMode: false
                    simulator: INTERNAL
                    updatedTime: '2023-01-20T05:25:54Z'
                    statusTime: '2023-01-20T05:25:54Z'
                    gatewayResponse:
                      transactionStatus: PENDING
                      id: 3786a2db-2d1f-4698-9d2f-231a5df08134
                      externalTransactionId: '6792168481664811'
                      processor: MAZOOMA
                      transactionId: '638062898009827556'
                      status: SUCCESS
                    mazooma:
                      consumerId: Nitin_04
                      registrationId: 597e32ed-414f-4ac4-bab4-ecc9f59238f7
                      ach:
                        paymentHandleToken: BAitJ4nDIYRfo9um
                    profile:
                      firstName: ALBERTA
                      lastName: BOBBETHCHARLESON
                      email: accountholder0@example.com
                      dateOfBirth:
                        day: 23
                        month: 12
                        year: 1990
                      phone: '1234567890'
                Interac_ETransfer:
                  value:
                    id: 61624021-9616-418e-a9fb-80913e3a24db
                    paymentType: INTERAC_ETRANSFER
                    paymentHandleToken: PHSfD6p5sgupRJEI
                    merchantRefNum: 2c2c31b8-49a4-4386-ae2f-c3a4377f6269
                    currencyCode: CAD
                    dupCheck: true
                    txnTime: '2023-01-20T08:56:29Z'
                    customerIp: 172.0.0.1
                    status: PROCESSING
                    gatewayReconciliationId: 2b15e7f0-3984-4355-b38f-2ee9977eb2bb
                    amount: 500
                    liveMode: false
                    simulator: EXTERNAL
                    updatedTime: '2023-01-20T08:56:29Z'
                    statusTime: '2023-01-20T08:56:29Z'
                    gatewayResponse:
                      id: HX27oxf31usMErBh
                      processor: PEOPLE_TRUST
                      status: AVAILABLE
                    interacEtransfer:
                      consumerId: madhu@paysafe.com
                      question: what is your name
                      answer: MadhuBaddam
                      maxAmount: 500000
                      transferType: ALIAS_REGULAR
                    profile:
                      firstName: Madhu
                      lastName: Baddam
                      email: madhu.baddam@paysafe.com
                      phone: '12345678'
                Play+ (Sightline):
                  value:
                    id: 99d2a8a3-52ab-419d-813e-925fec435687
                    paymentType: SIGHTLINE
                    paymentHandleToken: SScpBPxwqiGpTxrc
                    merchantRefNum: '1674816233671'
                    currencyCode: USD
                    dupCheck: true
                    txnTime: '2023-01-27T10:44:37Z'
                    billingDetails:
                      street1: '100'
                      street2: Queen Street
                      city: Cupertino
                      zip: '14236'
                      state: CA
                      country: US
                    customerIp: 172.0.0.1
                    status: COMPLETED
                    gatewayReconciliationId: 223b950c-095c-47fd-89f0-0e8fbe06dba3
                    amount: 100
                    returnLinks:
                      - rel: on_completed
                        href: 'https://api.test.paysafe.com/checkout/v2/pages/redirect-success.html'
                      - rel: default
                        href: 'https://api.test.paysafe.com/checkout/v2/pages/redirect-success.html'
                      - rel: on_failed
                        href: 'https://api.test.paysafe.com/checkout/v2/pages/redirect-error.html'
                    liveMode: false
                    simulator: EXTERNAL
                    updatedTime: '2023-01-27T10:44:37Z'
                    statusTime: '2023-01-27T10:44:37Z'
                    gatewayResponse:
                      paymentProcessorTransactionId: 3608d260-b2dc-4545-8018-3a8328269933
                      lcpTransactionId: e641a905-22e7-4aaf-8c06-8da791d0e938
                      balance: '13261.8700'
                      authorizationCode: 3608d260-b2dc-4545-8018-3a8328269933
                      merchantTransactionId: 3ZncOwzZZImhZHSccvvq6Je4W
                      id: 3608d260-b2dc-4545-8018-3a8328269933
                      processor: SIGHTLINE
                      lcpEncodedTransactionId: vfXfMk9@*%N!z9zOjNzP
                    source: SingleAPI
                    sightline:
                      consumerId: '123450000'
                    profile:
                      firstName: Sandi
                      lastName: Smith
                      email: sandi.smith@paysafe.com
                      dateOfBirth:
                        day: 23
                        month: 12
                        year: 1990
                      phone: '84632876432'
                Rapid Transfer via Skrill Quick Checkout:
                  value:
                    id: ffd50111-beff-4c48-8f1b-d8af566d7b13
                    paymentType: RAPID_TRANSFER
                    paymentHandleToken: PHTVQtYrjpGFKqV9
                    merchantRefNum: 76361b60-31da-48af-b090-dac8fe74e1dd
                    currencyCode: EUR
                    dupCheck: true
                    txnTime: '2023-01-27T12:20:43Z'
                    billingDetails:
                      street1: '71 Cherry Court '
                      city: Southhampton
                      zip: SO53 5PD
                      country: GB
                    customerIp: 172.0.0.1
                    status: PENDING
                    gatewayReconciliationId: AIAAAAIKLA
                    amount: 3000
                    returnLinks:
                      - rel: on_completed
                        href: 'http://www.amazon.ca'
                      - rel: default
                        href: 'http://www.amazon.ca'
                      - rel: on_failed
                        href: 'http://www.amazon.ca'
                    liveMode: false
                    simulator: INTERNAL
                    updatedTime: '2023-01-27T12:20:43Z'
                    statusTime: '2023-01-27T12:20:43Z'
                    gatewayResponse:
                      status_msg: scheduled
                      id: '-1509325279'
                      processor: SKRILL_QCO
                      sid: 43757b6805694089a0e2cbce1217fa76
                      status: '1'
                    rapidTransfer:
                      consumerId: csr_fl@sun-fish.com
                      emailSubject: Test
                      emailMessage: priyanshukumar0309@gmail.com
                      paymentId: ca1a0023-00e9-4f4c-b4a4-14f2b5d98ea3
                    profile:
                      firstName: John
                      lastName: Doe
                ACH:
                  value:
                    id: f353e5eb-f6b7-4b65-9a7c-ab0afe20dc6c
                    accountId: '1001723570'
                    paymentType: ACH
                    paymentHandleToken: SAAcQpyQ4DQ6M4uy
                    merchantRefNum: '1674816924342'
                    currencyCode: USD
                    settleWithAuth: true
                    dupCheck: true
                    txnTime: '2023-01-27T10:56:03Z'
                    billingDetails:
                      nickName: John Dee
                      street: '100'
                      street2: Queen Street
                      city: Cupertino
                      zip: '14236'
                      state: NY
                      country: US
                      id: 28740f84-0379-4949-8643-45ed29f03cd9
                    customerIp: 172.0.0.1
                    status: PENDING
                    amount: 100
                    ach:
                      lastDigits: '12'
                      accountHolderName: Test User Two
                      accountType: SAVINGS
                      payMethod: WEB
                      routingNumber: '061000052'
                    profile:
                      firstName: Sandi
                      lastName: Smith
                      email: sandi.smith@paysafe.com
                      phone: '84632876432'
                    description: winning payment from iGaming Website
                    merchantDescriptor:
                      dynamicDescriptor: Test Description
                      phone: '5555345456'
                EFT:
                  value:
                    id: ec881dbc-8b69-4d72-baf1-da577714d071
                    accountId: '1013691440'
                    paymentType: EFT
                    paymentHandleToken: SAx0ySGk2hCoBufh
                    merchantRefNum: '2963717926'
                    currencyCode: CAD
                    settleWithAuth: true
                    dupCheck: true
                    txnTime: '2023-01-20T09:42:18Z'
                    billingDetails:
                      nickName: Home
                      street: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                    customerIp: 172.0.0.1
                    status: PENDING
                    amount: 500
                    eft:
                      lastDigits: '12'
                      accountHolderName: XYZ Company
                      institutionId: '001'
                      transitNumber: '22446'
                    profile:
                      firstName: Poke
                      lastName: mon
                      email: Poke.mon@canada.com
                    description: Magazine subscription
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStoreeeeeeeee
                      phone: '1234567899'
                BACS:
                  value:
                    id: 8d3bfefe-b5fc-4001-80db-0e1c75112d74
                    accountId: '1013621510'
                    paymentType: BACS
                    paymentHandleToken: DpwQntsh7obAEb7
                    merchantRefNum: '94011229973510960000'
                    currencyCode: GBP
                    settleWithAuth: true
                    dupCheck: true
                    txnTime: '2023-01-30T09:48:27Z'
                    billingDetails:
                      nickName: Home
                      street: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                      id: f865e417-04d9-4194-b3d1-a9c93df87eab
                    customerIp: 172.0.0.1
                    status: PENDING
                    amount: 500
                    bacs:
                      lastDigits: '72'
                      accountHolderName: Sally Barnes
                      sortCode: '086081'
                      nickName: Sally's Barclays Account
                    description: Magazine subscription
                Skrill 1-Tap:
                  value:
                    id: 49861719-511a-4242-b165-367855c06516
                    paymentType: SKRILL1TAP
                    paymentHandleToken: PHTR7EY3FXiYmg9B
                    merchantRefNum: 51cf0d6e-cea9-4774-9a90-7da08ed016cc
                    currencyCode: USD
                    dupCheck: true
                    txnTime: '2023-02-02T07:11:48Z'
                    billingDetails:
                      street1: 100 Queen
                      street2: Unit 201
                      city: Toronto
                      zip: M5H 2N2
                      country: CA
                    customerIp: 204.91.0.12
                    status: PENDING
                    gatewayReconciliationId: AQAAAAP334
                    amount: 500
                    liveMode: false
                    updatedTime: '2023-02-02T07:11:48Z'
                    statusTime: '2023-02-02T07:11:48Z'
                    gatewayResponse:
                      status_msg: scheduled
                      id: '177117253'
                      processor: SKRILL_QCO
                      sid: 1a160c69ec6b4afda75ce19185b01da4
                      status: '1'
                    profile:
                      firstName: pawan
                      lastName: Kalyan
                      email: test@paysafe.com
                      phone: '1234567890'
      description: |
        Standalone Credits allow merchants to issue credits to cardholders without requiring a previous Payment/Settlement.

        Click on **Send API Request** after entering the required data, to see how to process a Standalone Credit request.

        >**Note:** If your merchant category code (MCC) is listed to [process Original Credits](/operations/process-original-credit), you must not use Standalone Credits
      tags:
        - Standalone Credits
      parameters:
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
            default: EXTERNAL
          in: header
          name: Simulator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/standaloneCreditRequest'
            examples:
              Card:
                value:
                  amount: 500
                  merchantRefNum: 32be35aac78dbfe252a2
                  currencyCode: USD
                  accountId: '1020939450'
                  paymentHandleToken: SCQp7CmWCSRFmvzv
                  customerIp: 204.91.0.12
                  description: Winning payment from Loto 649
                  paymentFacilitator:
                    subMerchant:
                      id: '123456789'
                      name: PayFacSubMerchant
                      phone: '478234562331'
                      email: payfac@mail.com
                      url: www.payfac.com
                      address:
                        street: 100 Queen Street West
                        city: London
                        country: GB
                        zip: M5H 2N2 
              Card - Process Standalone with Dynamic Descriptor:
                value:
                  amount: 500
                  merchantRefNum: 32be35aac78dbfe252a2
                  currencyCode: USD
                  accountId: '1020939450'
                  paymentHandleToken: SCQp7CmWCSRFmvzv
                  customerIp: 204.91.0.12
                  description: Winning payment from Loto 649
                  paymentFacilitator:
                    subMerchant:
                      id: '123456789'
                      name: PayFacSubMerchant
                      phone: '478234562331'
                      email: payfac@mail.com
                      url: www.payfac.com
                      address:
                        street: 100 Queen Street West
                        city: London
                        country: GB
                        zip: M5H 2N2
                  merchantDescriptor:
                    dynamicDescriptor: 'PetShop'                             
              Skrill:
                value:
                  amount: 500
                  merchantRefNum: 4bcdd8f8-a936-458a-bb3d-906d0d15d43f
                  currencyCode: USD
                  paymentHandleToken: PHZUY7WtMfbdsx45
                  customerIp: 204.91.0.12
                  description: Winning payment from Loto 649
              Neteller:
                value:
                  amount: 500
                  merchantRefNum: 37e4b746-68ae-4837-a99d-d4a0bcf71ede
                  currencyCode: USD
                  paymentHandleToken: PHF60R0xCCCXn2Rm
                  customerIp: 204.91.0.12
                  description: Winning payment from Loto 649
              Paypal:
                value:
                  amount: 100
                  merchantRefNum: f9a868aa-8b04-45fa-ad76-94c14b54cea3
                  currencyCode: USD
                  paymentHandleToken: PHjMAHYRCILzMgOa
                  customerIp: 204.91.0.12
                  description: Winning payment from Loto 649
              Pay by Bank:
                value:
                  merchantRefNum: " ec49cd76-7a20-4422-8603-2a4e5bbf4aaf"
                  paymentType: PAY_BY_BANK
                  amount: '100'
                  currencyCode: USD
                  dupCheck: true
                  paymentHandleToken: PHBwCq4aC3AGF34T
                  customerIp: 127.0.0.1
                  description: Magazine subscription
              Venmo:
                value:
                  merchantRefNum: '1674816698889'
                  amount: 100
                  currencyCode: USD
                  paymentHandleToken: PHfmNDxrvSooawrX
                  customerIp: 172.0.0.1
                  description: winning payment from iGaming Website
              VIP Preferred:
                value:
                  merchantRefNum: '1674815926768'
                  amount: 10000
                  currencyCode: USD
                  paymentHandleToken: SVnQUrrDfdbFOa2m
                  customerIp: 172.0.0.1
                  description: winning payment from iGaming Website
              Mazooma:
                value:
                  merchantRefNum: mer_ref_1674192267
                  amount: 100
                  currencyCode: USD
                  dupCheck: true
                  settleWithAuth: true
                  paymentHandleToken: PHZc4MnuRMe50G6C
                  customerIp: 172.0.0.1
                  description: Magazine subscription
              Play+ (Sightline):
                value:
                  merchantRefNum: '1674816233671'
                  amount: 100
                  currencyCode: USD
                  paymentHandleToken: SScpBPxwqiGpTxrc
                  customerIp: 172.0.0.1
                  description: winning payment from iGaming Website
              Interac_ETransfer:
                value:
                  merchantRefNum: 2c2c31b8-49a4-4386-ae2f-c3a4377f6269
                  amount: 500
                  currencyCode: CAD
                  paymentHandleToken: PHSfD6p5sgupRJEI
                  customerIp: 172.0.0.1
                  description: Magazine subscription
              Rapid Transfer via Skrill Quick Checkout:
                value:
                  merchantRefNum: 76361b60-31da-48af-b090-dac8fe74e1dd
                  amount: 3000
                  currencyCode: EUR
                  dupCheck: true
                  paymentHandleToken: PHTVQtYrjpGFKqV9
                  customerIp: 172.0.0.1
                  description: Magazine subscription
              ACH:
                value:
                  merchantRefNum: '1674816924342'
                  amount: 100
                  currencyCode: USD
                  paymentHandleToken: SAAcQpyQ4DQ6M4uy
                  customerIp: 172.0.0.1
                  description: winning payment from iGaming Website
              EFT:
                value:
                  merchantRefNum: '2963717926'
                  amount: 500
                  currencyCode: CAD
                  dupCheck: true
                  settleWithAuth: true
                  paymentHandleToken: SAx0ySGk2hCoBufh
                  customerIp: 172.0.0.1
                  description: Magazine subscription
              BACS:
                value:
                  merchantRefNum: '94011229973510960000'
                  amount: 500
                  currencyCode: GBP
                  dupCheck: true
                  settleWithAuth: true
                  paymentHandleToken: DpwQntsh7obAEb7
                  customerIp: 172.0.0.1
                  description: Magazine subscription
                  merchantCustomerId: '12313132131'
              Skrill 1-Tap:
                value:
                  amount: 500
                  merchantRefNum: 51cf0d6e-cea9-4774-9a90-7da08ed016cc
                  currencyCode: USD
                  paymentHandleToken: PHTR7EY3FXiYmg9B
                  customerIp: 204.91.0.12
                  description: Winning payment from Loto 649
        description: ''
    get:
      summary: Get Standalone Credit Using Merchant Reference Number
      operationId: get-standalone-credit-using-merchant-reference-number
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/standaloneCreditList'
              examples:
                Look Up a Standalone Credit Using Merchant Reference Number:
                  value:
                    meta:
                      numberOfRecords: 1
                      limit: 10
                      page: 1
                    standaloneCredits:
                      - id: eddbec36-6fc7-48fb-a694-dfc5b314ec0d
                        amount: 500
                        merchantRefNum: 32be35aac78dbfe252a2
                        customerIp: 204.91.0.12
                        txnTime: '2023-01-20T05:59:13Z'
                        currencyCode: USD
                        status: PENDING
                        description: Winning payment from Loto 649
                        paymentType: CARD
                        card:
                          cardExpiry:
                            month: '10'
                            year: '2025'
                          cardType: MC
                          lastDigits: '0000'
                          issuingCountry: US
                        billingDetails:
                          street: TEST
                          city: CA
                          country: US
                          state: CA
                          zip: '12345'
                        paymentFacilitator:
                          subMerchant:
                            id: '123456789'
                            name: PayFacSubMerchant
                            phone: '478234562331'
                            email: payfac@mail.com
                            url: www.payfac.com
                            address:
                              street: 100 Queen Street West
                              city: London
                              country: GB
                              zip: M5H 2N2 
                        merchantDescriptor:
                          dynamicDescriptor: 'OnlineStore' 
      description: 'Click on **Send API Request** after entering the required data, to see how to lookup a Standalone Credit using the merchant reference number used in the [original request](/operations/process-standalone-credit).'
      parameters:
        - schema:
            type: string
            example: SCT-PHHsBbgRx0OdZm2Q
          in: query
          name: merchantRefNum
          description: 'This is the merchant reference number created by the merchant and submitted as part of the [Process Standalone Credit](/operations/process-standalone-credit) request.'
          required: true
        - schema:
            type: number
            maximum: 50
            default: 10
          in: query
          name: limit
          description: This is the total number of records to return.
        - schema:
            type: number
            default: 0
            example: 0
          in: query
          name: offset
          description: 'This is the starting position, where 0 is the first record.'
        - schema:
            type: string
            format: date
            example: '2022-11-18'
          in: query
          name: startDate
          description: This is the start date in UTC. Default = 30 days before the endDate.
        - schema:
            type: string
            format: date
            example: '2022-12-19'
          in: query
          name: endDate
          description: This is the end date in UTC. Default = current date and time.
      tags:
        - Standalone Credits
  '/v1/standalonecredits/{standaloneCreditId}':
    parameters:
      - schema:
          type: string
        name: standaloneCreditId
        in: path
        required: true
        description: 'This is the ID returned in the response to the [Standalone Credit](/operations/process-standalone-credit) request'
    get:
      summary: Get Standalone Credit
      tags:
        - Standalone Credits
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/standaloneCredit'
              examples:
                Look Up a Standalone Credit Using Id:
                  value:
                    id: eddbec36-6fc7-48fb-a694-dfc5b314ec0d
                    paymentType: CARD
                    merchantRefNum: 32be35aac78dbfe252a2
                    currencyCode: USD
                    txnTime: '2023-01-20T05:59:13Z'
                    billingDetails:
                      street: TEST
                      city: CA
                      zip: '12345'
                      state: CA
                      country: US
                    customerIp: 204.91.0.12
                    status: PENDING
                    amount: 500
                    description: Winning payment from Loto 649
                    card:
                      cardExpiry:
                        month: '10'
                        year: '2025'
                      cardType: MC
                      lastDigits: '0000'
                    paymentFacilitator:
                      subMerchant:
                        id: '123456789'
                        name: PayFacSubMerchant
                        phone: '478234562331'
                        email: payfac@mail.com
                        url: www.payfac.com
                        address:
                          street: 100 Queen Street West
                          city: London
                          country: GB
                          zip: M5H 2N2
                    merchantDescriptor:
                      dynamicDescriptor: 'OnlineStore' 
      operationId: get-standalone-credit
      description: 'Click on **Send API Request** after entering the required data, to look up a Standalone Credit using the ID returned in the response of the [original request](/operations/process-standalone-credit).'
      parameters: []
    put:
      summary: Cancel Standalone Credit
      operationId: cancel-standalone-credit
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cancelResponse'
              examples:
                Cancel a Standalone Credit:
                  value:
                    id: string
                    txnTime: '2019-08-24T14:15:22Z'
                    status: CANCELLED
      description: |-
        Click on **Send API Request** after entering the required data, to cancel a Standalone Credit. You must include the status parameter set to *CANCELLED*.

        >**Note:** You can cancel a Standalone Credit only if the payment type is CARD and the status is PENDING.
      parameters:
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
            default: EXTERNAL
          in: header
          name: Simulator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cancelRequest'
            examples:
              Cancel a Standalone Credit:
                value:
                  status: CANCELLED
      tags:
        - Standalone Credits
    patch:
      summary: Patch Standalone Credit Using Interac e-Transfer Fraud API
      operationId: patch-v1-standalonecredits-standalone_credit_id
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/standaloneCredit'
              examples:
                Standalone Credit Using Interac e-Transfer Fraud API:
                  value:
                    id: a2afe762-2421-4d57-9c5e-17b06bfb2af6
                    paymentType: INTERAC_ETRANSFER
                    paymentHandleToken: PHd60LCJQPyqUM7N
                    merchantRefNum: 7830cff4-6ce0-4994-9be2-65a36710d8f7
                    currencyCode: CAD
                    txnTime: '2022-10-26T08:40:10Z'
                    customerIp: 172.0.0.1
                    status: FAILED
                    gatewayReconciliationId: b9fd71e7-f8d4-442b-be4e-e2c7990b8015
                    amount: 121
                    liveMode: false
                    simulator: EXTERNAL
                    updatedTime: '2022-10-26T08:40:17Z'
                    statusTime: '2022-10-26T08:40:17Z'
                    gatewayResponse:
                      id: fg27oxf2w6mAgWyX
                      processor: PEOPLE_TRUST
                      status: ACCEPTED
                    interacEtransfer:
                      consumerId: madhuauto@paysafe.com
                      question: what is your name
                      answer: MadhuBaddam
                      maxAmount: 500000
                      fraudStatus: CONFIRM_FRAUD
                      fraudType: FRAUD_BUSINESS
                      comments: Valid Txn
                      transferType: ALIAS_REGULAR
                    profile:
                      firstName: Madhu
                      lastName: Baddam
                      email: madhu.baddam@paysafe.com
                      phone: '12345678'
                    paymentFacilitator:
                      subMerchant:
                        id: '123456789'
                        name: PayFacSubMerchant
                        phone: '478234562331'
                        email: payfac@mail.com
                        url: www.payfac.com
                        address:
                          street: 100 Queen Street West
                          city: London
                          country: GB
                          zip: M5H 2N2 

      description: |-
        We might receive fraud_result as BLOCK as part of PeopleTrust/Standalone Interac's Credit call response.  By such response Peopletrust suspects the transaction to be fraudulent.

        For this transaction we get Standalonecredit response status as HELD and gatewayresponse as ACCEPTED which means transaction is on HOLD.

        In order to release the HOLD on SCT:

          - Merchant has to make a fraud status update call and gateway service will call peopletrust to update and release the hold on that transaction.

          - The HOLD will be released only if the fraud status update call is requested withfraudstatus as CONFIRM_LEGITIMATE or PRESUME_LEGITIMATE.

          - Any other fraud status will result in payment reversal.

        >**Note:** To Simulate Fraud transactions send "dynamicDescriptor" value as "BLOCK" in the request as below.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/standaloneCreditUpdateRequest'
            examples:
              Standalone Credit Using Interac e-Transfer Fraud API:
                value:
                  interacEtransfer:
                    consumerId: '123456'
                    fraudStatus: CONFIRM_FRAUD
                    fraudType: FRAUD_BUSINESS
                    comments: Valid Txn
      parameters:
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
            default: EXTERNAL
          in: header
          name: Simulator
      tags:
        - Standalone Credits
  /v1/originalcredits:
    post:
      summary: Process Original Credit
      operationId: process-original-credit
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/originalCredits'
              examples:
                Card - Process an Original Credit:
                  value:
                    id: 60e333a7-9b51-4859-bdb6-0c96d6c148ed
                    paymentType: CARD
                    paymentHandleToken: SCO3wKcIyLoQbQvw
                    merchantRefNum: ee9010926e3edd01a799
                    currencyCode: USD
                    txnTime: '2023-04-14T08:03:34Z'
                    billingDetails:
                      street: TEST
                      city: CA
                      zip: '50005'
                      state: CA
                      country: US
                    customerIp: 204.91.0.12
                    status: PENDING
                    amount: 500
                    description: "Winning\_payment\_from\_Loto\_649"
                    card:
                      cardExpiry:
                        month: '10'
                        year: '2025'
                      holderName: Dilip
                      cardType: VI
                      cardBin: '403711'
                      lastDigits: '0001'
                      cardCategory: CREDIT
                      issuingCountry: US
                    paymentFacilitator:
                      subMerchant:
                        id: '123456789'
                        name: PayFacSubMerchant
                        phone: '478234562331'
                        email: payfac@mail.com
                        url: www.payfac.com
                        address:
                          street: 100 Queen Street West
                          city: London
                          country: GB
                          zip: M5H 2N2 
                    merchantDescriptor:
                        dynamicDescriptor: 'OnlineStore' 
                Card - Process an Original Credit with Dynamic Descriptor:
                  value:
                    id: 60e333a7-9b51-4859-bdb6-0c96d6c148ed
                    paymentType: CARD
                    paymentHandleToken: SCO3wKcIyLoQbQvw
                    merchantRefNum: ee9010926e3edd01a799
                    currencyCode: USD
                    txnTime: '2023-04-14T08:03:34Z'
                    billingDetails:
                      street: TEST
                      city: CA
                      zip: '50005'
                      state: CA
                      country: US
                    customerIp: 204.91.0.12
                    status: PENDING
                    amount: 500
                    description: "Winning\_payment\_from\_Loto\_649"
                    card:
                      cardExpiry:
                        month: '10'
                        year: '2025'
                      holderName: Dilip
                      cardType: VI
                      cardBin: '403711'
                      lastDigits: '0001'
                      cardCategory: CREDIT
                      issuingCountry: US
                    paymentFacilitator:
                      subMerchant:
                        id: '123456789'
                        name: PayFacSubMerchant
                        phone: '478234562331'
                        email: payfac@mail.com
                        url: www.payfac.com
                        address:
                          street: 100 Queen Street West
                          city: London
                          country: GB
                          zip: M5H 2N2 
                    merchantDescriptor:
                        dynamicDescriptor: 'PetShop'                                 
      description: |-
        Original Credits allow merchants with specific merchant category codes (MCCs) to issue winnings as credits to cardholders, without requiring a previous Payment/Settlement.

        >**Note:** Acquirers and processors do not necessarily support all available MCCs; before integrating, you should contact [Integration Support](https://developer.paysafe.com/en/support/#c10641) for details.

        Worldpay Inc. (formerly Vantiv) supports Original Credit transactions with the following MCCs:

        - 5816

        - 7800

        - 7801

        - 7802

        - 7994

        Original Credit transfers are supported for non-Worldpay Inc. merchants with the following MCCs:

        - 7994

        - 7995

        Click on **Send API Request** after entering the required data, to see how to process an Original Credit request.

        >**Note:** Either of the paymentHandleToken or card information need to be passed in the original credit request.
      parameters:
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
            default: EXTERNAL
          in: header
          name: Simulator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/originalCreditsRequest'
            examples:
              Card - Process an Original Credit:
                value:
                  amount: 100
                  merchantRefNum: 05e19427-a3d1-46f7-8b2e-bdf8ced0341e
                  currencyCode: USD
                  paymentHandleToken: SCO3wKcIyLoQbQvw
                  customerIp: 204.91.0.12
                  description: Winning payment from Loto 649
                  paymentFacilitator:
                    subMerchant:
                      id: '123456789'
                      name: PayFacSubMerchant
                      phone: '478234562331'
                      email: payfac@mail.com
                      url: www.payfac.com
                      address:
                        street: 100 Queen Street West
                        city: London
                        country: GB
                        zip: M5H 2N2 
              Card - Process an Original Credit with Dynamic Descriptor:
                value:
                  amount: 100
                  merchantRefNum: 05e19427-a3d1-46f7-8b2e-bdf8ced0341e
                  currencyCode: USD
                  paymentHandleToken: SCO3wKcIyLoQbQvw
                  customerIp: 204.91.0.12
                  description: Winning payment from Loto 649
                  paymentFacilitator:
                    subMerchant:
                      id: '123456789'
                      name: PayFacSubMerchant
                      phone: '478234562331'
                      email: payfac@mail.com
                      url: www.payfac.com
                      address:
                        street: 100 Queen Street West
                        city: London
                        country: GB
                        zip: M5H 2N2 
                    merchantDescriptor: 
                      dynamicDescriptor: "PetShop"                            
        description: Process an Original Credit Using a Payment Handle Token
      tags:
        - Original Credits
    get:
      summary: Get Original Credit Using Merchant Reference Number
      operationId: get-v1-originalcredits
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/originalCreditsList'
              examples:
                Look Up Original Credit Using Merchant Reference Number:
                  value:
                    meta:
                      numberOfRecords: 1
                      limit: 10
                      page: 1
                    originalCredits:
                      - id: e075f2ae-dfc4-4f6d-8d89-61158367b6a6
                        amount: 40
                        merchantRefNum: merchantRefNum-151
                        txnTime: '2018-12-11T16:33:49Z'
                        paymentHandleToken: SC9mbfZSITB5OwDJ
                        customerIp: 204.91.0.12
                        currencyCode: GBP
                        paymentType: CARD
                        status: INITIATED
                        description: Winning payment from Loto 649
                        paymentFacilitator:
                          subMerchant:
                            id: '123456789'
                            name: PayFacSubMerchant
                            phone: '478234562331'
                            email: payfac@mail.com
                            url: www.payfac.com
                            address:
                              street: 100 Queen Street West
                              city: London
                              country: GB
                              zip: M5H 2N2
                        merchantDescriptor:
                            dynamicDescriptor: 'OnlineStore'       
      parameters:
        - schema:
            type: string
            example: merchantRefNum
          in: query
          name: merchantRefNum
          description: 'This is the merchant reference number created by the merchant and submitted as part of the [Process Original Credit](/operations/process-original-credit) request.'
          required: true
        - schema:
            type: number
            default: 10
            maximum: 50
          in: query
          name: limit
          description: This is the total number of records to return.
        - schema:
            type: number
            default: 0
            example: 0
          in: query
          name: offset
          description: 'This is the starting position, where 0 is the first record.'
        - schema:
            type: string
            format: date
            example: '2022-11-18'
          in: query
          name: startDate
          description: This is the start date in UTC. Default = 30 days before the endDate.
        - schema:
            type: string
            example: '2022-12-19'
            format: date
          in: query
          name: endDate
          description: This is the end date in UTC. Default = current date and time.
      description: 'Click on **Send API Request** after entering the required data, to see how to lookup an Original Credit using the merchant reference number used in the [original request](/operations/process-original-credit).'
      tags:
        - Original Credits
  '/v1/originalcredits/{originalCreditId}':
    parameters:
      - schema:
          type: string
        name: originalCreditId
        in: path
        required: true
        description: 'This is the ID returned in the response to the [Original Credit](/operations/process-original-credit) request.'
    get:
      summary: Get Original Credit
      tags:
        - Original Credits
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/originalCredits'
              examples:
                Look Up Original Credit:
                  value:
                    id: e075f2ae-dfc4-4f6d-8d89-61158367b6a6
                    amount: 40
                    merchantRefNum: merchantRefNum-151
                    txnTime: '2018-12-11T16:33:49Z'
                    paymentHandleToken: SC9mbfZSITB5OwDJ
                    customerIp: 204.91.0.12
                    currencyCode: GBP
                    paymentType: CARD
                    status: INITIATED
                    description: Winning payment from Loto 649
                    paymentFacilitator:
                      subMerchant:
                        id: '123456789'
                        name: PayFacSubMerchant
                        phone: '478234562331'
                        email: payfac@mail.com
                        url: www.payfac.com
                        address:
                          street: 100 Queen Street West
                          city: London
                          country: GB
                          zip: M5H 2N2
                    merchantDescriptor:
                      dynamicDescriptor: 'OnlineStore'  
      operationId: get-original-credit
      parameters: []
      description: 'Click on **Send API Request** after entering the required data, to see how to lookup an Original Credit using the ID returned in the response to the [original request](/operations/process-original-credit).'
    put:
      summary: Cancel Original Credit
      operationId: cancel-original-credit
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cancelResponse'
              examples:
                Cancel an Original Credit:
                  value:
                    id: string
                    txnTime: '2019-08-24T14:15:22Z'
                    status: CANCELLED
      parameters:
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
            default: EXTERNAL
          in: header
          name: Simulator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cancelRequest'
            examples:
              Cancel an Original Credit:
                value:
                  status: CANCELLED
      description: |-
        Click on **Send API Request** after entering the required data, to see how to cancel an Original Credit. You must include the status parameter set to *CANCELLED*.

        >**Note:** You can cancel an Original Credit only if it has the payment type CARD and the status is PENDING.
      tags:
        - Original Credits
  /v1/customers:
    post:
      summary: Create a Customer
      operationId: create-customer
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customerResponse'
              examples:
                Create a Customer:
                  value:
                    id: 070fa349-5031-4e83-82ba-0797c7170b9d
                    status: ACTIVE
                    merchantCustomerId: '546456451'
                    locale: en_US
                    firstName: John
                    middleName: James
                    lastName: Smith
                    dateOfBirth:
                      day: 24
                      month: 10
                      year: 1981
                    gender: M
                    email: john.smith@email.com
                    phone: 777-444-8888
                    cellPhone: 777-555-8888
                    nationality: Canadian
                    ip: 192.0.126.111
                    paymentToken: PPlfJ2gmQoYAQ1d
                Create a Customer Using a Single-Use Payment Handle Token:
                  value:
                    id: d60fc496-9023-4641-890e-e05c852d2ac4
                    status: ACTIVE
                    merchantCustomerId: f8303a052
                    accountId: 1009688230
                    locale: en_US
                    firstName: John
                    middleName: James
                    lastName: Smith
                    dateOfBirth:
                      day: 24
                      month: 10
                      year: 1981
                    gender: M
                    email: john.smith@email.com
                    phone: 777-444-8888
                    cellPhone: 777-555-8888
                    nationality: Canadian
                    ip: 192.0.126.111
                    paymentToken: PNWaCnbFb7Y5zUk
                    addresses:
                      - id: c8af2f97-7d89-413c-80d9-7f3a0c8f5da6
                        nickName: Home
                        street2: Unit 201
                        city: Toronto
                        country: CA
                        zip: M5H 2N2
                        status: ACTIVE
                        street: 100 Queen
                    paymentHandleTokenFrom: SCAXH2IawyUMX9BG
                    paymentHandles:
                      - id: e6ad67f5-16f1-4be6-8944-0b897e3b1380
                        merchantRefNum: bb898a885b23c1604f4b
                        status: INITIATED
                        usage: MULTI_USE
                        paymentType: CARD
                        executionMode: SYNCHRONOUS
                        paymentHandleToken: CPFjDfDKp7SMuhL
                        card:
                          lastDigits: '2345'
                          cardExpiry:
                            month: '10'
                            year: '2025'
                          cardBin: '453091'
                          cardType: VI
                          holderName: Dilip
                          status: ACTIVE
                          cardCategory: CREDIT
                          issuingCountry: US
                        billingDetailsId: c8af2f97-7d89-413c-80d9-7f3a0c8f5da6
      description: |-
        **Create a Customer**

        Click on **Send API Request** after entering the required data, to see how to create a customer.

        >**Note:** You can create a customer and store his/her credit card information to the customer profile by [adding a Customer Payment Handle](/operations/create-payment-handle-for-customer).



        **Create a Customer Using a Single-Use Payment Handle Token**

        Click on **Send API Request** after entering the required data, to see how to create a customer using a Single-Use Payment Handle Token.

        >**Note:** If the single-use Payment Handle Token you use for this request has profile-related information associated with it (for example, *firstName, lastName, email,* etc.), then if you include those same fields in this request, your values included here will override the values from the Payment Handle Token.
      parameters:
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
            default: EXTERNAL
          in: header
          name: Simulator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customerRequest'
            examples:
              Create a Customer:
                value:
                  merchantCustomerId: '546456451'
                  locale: en_US
                  firstName: John
                  middleName: James
                  lastName: Smith
                  dateOfBirth:
                    year: 1981
                    month: 10
                    day: 24
                  email: john.smith@email.com
                  phone: 777-444-8888
                  ip: 192.0.126.111
                  gender: M
                  nationality: Canadian
                  cellPhone: 777-555-8888
              Create a Customer Using a Single-Use Payment Handle Token:
                value:
                  merchantCustomerId: f8303a052
                  locale: en_US
                  firstName: John
                  middleName: James
                  lastName: Smith
                  dateOfBirth:
                    year: 1981
                    month: 10
                    day: 24
                  email: john.smith@email.com
                  phone: 777-444-8888
                  ip: 192.0.126.111
                  gender: M
                  nationality: Canadian
                  cellPhone: 777-555-8888
                  paymentHandleTokenFrom: SCAXH2IawyUMX9BG
                  accountId: 1009688230
      tags:
        - Customers
    get:
      summary: Get Customer Using Merchant Customer Id
      operationId: get-customer-using-merchant-customer-id
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customerResponse'
              examples:
                Get Customer using Merchant Customer Id:
                  value:
                    id: aa5a13f2-8ab6-4378-9f04-e2bccd9c70af
                    status: ACTIVE
                    merchantCustomerId: '546456451'
                    locale: en_US
                    firstName: John
                    middleName: James
                    lastName: Smith
                    dateOfBirth:
                      day: 24
                      month: 10
                      year: 1981
                    gender: M
                    email: john.smith@email.com
                    phone: 777-444-8888
                    cellPhone: 777-555-8888
                    nationality: Canadian
                    ip: 192.0.126.111
                    paymentToken: P85BZm7DjSsYkrt
                Get Customer Using Merchant Customer Id Including Subcomponents:
                  value:
                    id: d60fc496-9023-4641-890e-e05c852d2ac4
                    status: ACTIVE
                    merchantCustomerId: f8303a052
                    locale: en_US
                    firstName: John
                    middleName: James
                    lastName: Smith
                    dateOfBirth:
                      day: 24
                      month: 10
                      year: 1981
                    gender: M
                    email: john.smith@email.com
                    phone: 777-444-8888
                    cellPhone: 777-555-8888
                    nationality: Canadian
                    ip: 192.0.126.111
                    paymentToken: PNWaCnbFb7Y5zUk
                    addresses:
                      - id: c8af2f97-7d89-413c-80d9-7f3a0c8f5da6
                        nickName: Home
                        street2: Unit 201
                        city: Toronto
                        country: CA
                        zip: M5H 2N2
                        status: ACTIVE
                        street: 100 Queen
                    paymentHandles:
                      - id: e6ad67f5-16f1-4be6-8944-0b897e3b1380
                        merchantRefNum: bb898a885b23c1604f4b
                        status: INITIATED
                        usage: MULTI_USE
                        paymentType: CARD
                        action: NONE
                        executionMode: SYNCHRONOUS
                        paymentHandleToken: CPFjDfDKp7SMuhL
                        creationTime: '2023-01-20T07:10:36Z'
                        card:
                          lastDigits: '2345'
                          cardExpiry:
                            month: '10'
                            year: '2025'
                          cardBin: '453091'
                          cardType: VI
                          holderName: Dilip
                          status: ACTIVE
                          cardCategory: CREDIT
                          issuingCountry: US
                        billingDetailsId: c8af2f97-7d89-413c-80d9-7f3a0c8f5da6
                        customerId: d60fc496-9023-4641-890e-e05c852d2ac4
      parameters:
        - schema:
            type: string
            example: f8303a052
          in: query
          name: merchantCustomerId
          description: 'This is a customer ID that the merchant provided with the [customer creation request](/operations/create-customer) for their own internal customer identification.'
          required: true
        - schema:
            type: string
            example: 'addresses,paymenthandles'
          in: query
          name: fields
          description: This is a comma-separated list of sub-components.
      description: |-
        **Get customer profile by Customer Id Including Subcomponents.**

        Click on **Send API Request** after entering the required data, to see how to lookup a Customer along with its associated sub-components using the Id returned in the response to the [original request](/operations/create-customer) along with a query paramter *fields* whose value is a one or more comma-separated values from the below mentioned list:

          - paymenthandles

          - addresses
      tags:
        - Customers
  '/v1/customers/{customerId}':
    parameters:
      - schema:
          type: string
          example: d60fc496-9023-4641-890e-e05c852d2ac4
        name: customerId
        in: path
        required: true
        description: 'This is the unique Id returned in the response to the [Create a Customer](/operations/create-customer) request.'
    get:
      summary: Get customer profile by Customer Id.
      tags:
        - Customers
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customerResponse'
              examples:
                Get Customer:
                  value:
                    id: d60fc496-9023-4641-890e-e05c852d2ac4
                    status: ACTIVE
                    merchantCustomerId: f8303a052
                    locale: en_US
                    firstName: John
                    middleName: James
                    lastName: Smith
                    dateOfBirth:
                      day: 24
                      month: 10
                      year: 1981
                    gender: M
                    email: john.smith@email.com
                    phone: 777-444-8888
                    cellPhone: 777-555-8888
                    nationality: Canadian
                    ip: 192.0.126.111
                    paymentToken: PNWaCnbFb7Y5zUk
                Get Customer Including Subcomponents:
                  value:
                    id: d60fc496-9023-4641-890e-e05c852d2ac4
                    status: ACTIVE
                    merchantCustomerId: f8303a052
                    locale: en_US
                    firstName: John
                    middleName: James
                    lastName: Smith
                    dateOfBirth:
                      day: 24
                      month: 10
                      year: 1981
                    gender: M
                    email: john.smith@email.com
                    phone: 777-444-8888
                    cellPhone: 777-555-8888
                    nationality: Canadian
                    ip: 192.0.126.111
                    paymentToken: PNWaCnbFb7Y5zUk
                    addresses:
                      - id: c8af2f97-7d89-413c-80d9-7f3a0c8f5da6
                        nickName: Home
                        street2: Unit 201
                        city: Toronto
                        country: CA
                        zip: M5H 2N2
                        status: ACTIVE
                        street: 100 Queen
                    paymentHandles:
                      - id: e6ad67f5-16f1-4be6-8944-0b897e3b1380
                        merchantRefNum: bb898a885b23c1604f4b
                        status: INITIATED
                        usage: MULTI_USE
                        paymentType: CARD
                        action: NONE
                        executionMode: SYNCHRONOUS
                        paymentHandleToken: CPFjDfDKp7SMuhL
                        creationTime: '2023-01-20T07:10:36Z'
                        card:
                          lastDigits: '2345'
                          cardExpiry:
                            month: '10'
                            year: '2025'
                          cardBin: '453091'
                          cardType: VI
                          holderName: Dilip
                          status: ACTIVE
                          cardCategory: CREDIT
                          issuingCountry: US
                        billingDetailsId: c8af2f97-7d89-413c-80d9-7f3a0c8f5da6
                        customerId: d60fc496-9023-4641-890e-e05c852d2ac4
      operationId: get-customer
      description: |-
        **Get customer profile by Customer Id Including Subcomponents.**

        Click on **Send API Request** after entering the required data, to see how to lookup a Customer along with its associated sub-components using the Id returned in the response to the [original request](/operations/create-customer) along with a query paramter *fields* whose value is a one or more comma-separated values from the below mentioned list:

          - paymenthandles

          - addresses
      parameters:
        - schema:
            type: string
            example: 'addresses,paymenthandles'
          in: query
          name: fields
          description: This is a comma-separated list of sub-components.
    put:
      summary: Update a Customer
      operationId: put-v1-customers-customer_id
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customerResponse'
              examples:
                Update a Customer:
                  value:
                    id: d60fc496-9023-4641-890e-e05c852d2ac4
                    status: ACTIVE
                    merchantCustomerId: f8303a052
                    locale: en_US
                    firstName: Suresh
                    middleName: Venkata
                    lastName: Chagalamarri
                    dateOfBirth:
                      day: 6
                      month: 5
                      year: 1998
                    gender: M
                    email: paysafe@gmail.com
                    phone: 777-444-8888
                    cellPhone: 777-555-8888
                    nationality: Indian
                    ip: 192.0.126.111
                    paymentToken: PNWaCnbFb7Y5zUk
      description: |
        Click on **Send API Request** after entering the required data, to see how update a Customer using the ID returned in the response to the [original request](/operations/create-customer).

        >**Note:** You must provide all of the elements of the customer when you are updating it, including the elements that are not changing. Elements that are part of an existing customer but that are not included in the update request will be set to null in the resulting customer.
      parameters:
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
            default: EXTERNAL
          in: header
          name: Simulator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customerRequest'
            examples:
              Update a Customer:
                value:
                  merchantCustomerId: f8303a052
                  locale: en_US
                  firstName: Suresh
                  middleName: Venkata
                  lastName: Chagalamarri
                  gender: M
                  dateOfBirth:
                    day: 6
                    month: 5
                    year: 1998
                  email: paysafe@gmail.com
                  phone: 777-444-8888
                  cellPhone: 777-555-8888
                  nationality: Indian
                  ip: 192.0.126.111
      tags:
        - Customers
    delete:
      summary: Delete a Customer
      operationId: delete-customer
      responses:
        '200':
          description: OK
          headers: {}
      description: 'Click on **Send API Request** after entering the required data, to see how delete a Customer.'
      tags:
        - Customers
      parameters: []
  '/v1/customers/{customerId}/paymenthandles':
    parameters:
      - schema:
          type: string
        name: customerId
        in: path
        required: true
        description: 'This is the unique Id returned in the response to the [Create a Customer](/operations/create-customer) request.'
    post:
      summary: Create a Payment Handle For a Customer
      operationId: create-payment-handle-for-customer
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customerPaymentHandle'
              examples:
                Card Payment - Payment Handle Response:
                  value:
                    id: 02858471-6083-49ef-afee-015e4cc5135a
                    merchantRefNum: wed18012023Test
                    status: PAYABLE
                    usage: MULTI_USE
                    paymentType: CARD
                    action: NONE
                    paymentHandleToken: CPSql8EPmo45jNB
                    card:
                      lastDigits: '0000'
                      cardExpiry:
                        month: '10'
                        year: '2025'
                      cardBin: '403711'
                      holderName: Dilip
                      cardCategory: CREDIT
                      issuingCountry: US
                    billingDetailsId: 24ce6840-6d41-4cfa-b27d-cc3e26124236
                    customerId: af363924-bd85-4996-8b77-d78fd696b32b
                ACH:
                  value:
                    id: b399cbee-c58e-424d-92e4-57de91131195
                    merchantRefNum: '167625194625055'
                    status: PAYABLE
                    usage: MULTI_USE
                    paymentType: ACH
                    action: NONE
                    executionMode: SYNCHRONOUS
                    paymentHandleToken: DXAM3WtBKVMQyLE
                    ach:
                      lastDigits: '02'
                      accountHolderName: PT ACH HName
                      accountType: SAVINGS
                      routingNumber: '211589828'
                    billingDetailsId: 099b2d9f-9add-4225-8f7c-61ea295d2be4
                    customerId: 5829a4a6-fb12-4dbe-b010-93657bb25660
                BACS:
                  value:
                    id: 6cb7c05c-8536-4e69-b8d7-7936e72d88e2
                    status: PAYABLE
                    usage: MULTI_USE
                    paymentType: BACS
                    action: NONE
                    executionMode: ASYNCHRONOUS
                    paymentHandleToken: DpwQntsh7obAEb7
                    bacs:
                      lastDigits: '72'
                      accountHolderName: Sally Barnes
                      nickName: Sally's Barclays Account
                      sortCode: '086081'
                    billingDetailsId: f865e417-04d9-4194-b3d1-a9c93df87eab
                    customerId: ea8d02ca-145a-45d3-a2d0-969c314bc81a
                SEPA:
                  value:
                    id: 1ca15b77-3256-48ed-bdf2-e23a70ea9b9c
                    status: PAYABLE
                    usage: MULTI_USE
                    paymentType: SEPA
                    action: NONE
                    executionMode: SYNCHRONOUS
                    paymentHandleToken: DdpqgUQS9jqskBm
                    sepa:
                      lastDigits: '80'
                      accountHolderName: John Doe
                      bic: EWGULRT1
                      nickName: Sally's Barclays Account
                    billingDetailsId: 26f1a762-38ed-4dc2-bbe8-f5d2792a28c4
                    customerId: 993c7c95-7fc9-4f83-839d-668595a25fc5
                EFT:
                  value:
                    id: 8640a692-556e-4e31-b10b-d01256328421
                    merchantRefNum: '42206439877181100'
                    status: PAYABLE
                    usage: MULTI_USE
                    paymentType: EFT
                    action: NONE
                    executionMode: SYNCHRONOUS
                    accountId: '1013691440'
                    paymentHandleToken: DSR5qCCJZElTvxe
                    eft:
                      lastDigits: '12'
                      accountHolderName: XYZ Company
                      paymentDescriptor: payment dtr
                      institutionId: '001'
                      transitNumber: '22446'
                    billingDetailsId: b7be6f48-143d-4be0-95aa-8e8539f17ccc
                    customerId: e10bd22b-056f-4997-a4f3-3c4d2032baa4
                Create a Multi-Use Payment Handle Using Single-Use Payment Handle Token:
                  value:
                    id: 8640a692-556e-4e31-b10b-d01256328421
                    merchantRefNum: '42206439877181100'
                    status: PAYABLE
                    usage: MULTI_USE
                    paymentType: EFT
                    action: NONE
                    executionMode: SYNCHRONOUS
                    accountId: '1013691440'
                    paymentHandleToken: DSR5qCCJZElTvxe
                    eft:
                      lastDigits: '12'
                      accountHolderName: XYZ Company
                      paymentDescriptor: payment dtr
                      institutionId: '001'
                      transitNumber: '22446'
                    paymentHandleTokenFrom: SAOMuI4DuXuLXulf
                    billingDetailsId: b7be6f48-143d-4be0-95aa-8e8539f17ccc
                    customerId: e10bd22b-056f-4997-a4f3-3c4d2032baa4
      parameters:
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
            default: EXTERNAL
          in: header
          name: Simulator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customerPaymentHandleRequest'
            examples:
              Card:
                value:
                  merchantRefNum: wed18012023Test
                  card:
                    cardNum: '4037111111000000'
                    cardExpiry:
                      month: 10
                      year: 2025
                    cvv: '111'
                    holderName: Dilip
                    issuingCountry: US
                  paymentType: CARD
                  amount: 900
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  billingDetails:
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
                  merchantDescriptor:
                    dynamicDescriptor: OnlineStore
                    phone: '12345678'
              Single-Use Payment Handle Token:
                value:
                  paymentHandleTokenFrom: SAOMuI4DuXuLXulf
              ACH:
                value:
                  merchantRefNum: '167625194625055'
                  paymentType: ACH
                  currencyCode: USD
                  customerIp: 10.10.12.64
                  ach:
                    accountHolderName: PT ACH HName
                    accountNumber: '511202'
                    routingNumber: '211589828'
                    accountType: SAVINGS
                    payMethod: WEB
                  billingDetailsId: 099b2d9f-9add-4225-8f7c-61ea295d2be4
              EFT:
                value:
                  merchantRefNum: '42206439877181100'
                  paymentType: EFT
                  currencyCode: CAD
                  customerIp: 10.10.12.64
                  eft:
                    accountHolderName: XYZ Company
                    accountNumber: '{{accountNumber}}'
                    transitNumber: '22446'
                    institutionId: '001'
                    paymentDescriptor: payment dtr
                  billingDetailsId: b7be6f48-143d-4be0-95aa-8e8539f17ccc
              BACS:
                value:
                  paymentType: BACS
                  bacs:
                    nickName: Sally's Barclays Account
                    accountHolderName: Sally Barnes
                    accountNumber: '51120172'
                    sortCode: '086081'
                    bankName: Lloyds
                  billingDetails:
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
              SEPA:
                value:
                  paymentType: SEPA
                  sepa:
                    nickName: Sally's Barclays Account
                    accountHolderName: John Doe
                    bic: '{{$randomBankAccountBic}}'
                    iban: '{{$randomBankAccountIban}}'
                  billingDetails:
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
      description: |-
        **Create a Payment Handle For a Customer**

        Click on **Send API Request** after entering the required data, to see examples of how to create a Payment Handle for a [Customer you have already created](/operations/create-customer):

          - A Payment Handle for a CARD payment
          
          - A Payment Handle for a EFT payment
          
          - A Payment Handle for a ACH payment

          - A Payment Handle for a BACS payment

          - A Payment Handle for a SEPA payment

          - A Payment Handle for a BACS payment with existing bank and new Mandate

          - A Payment Handle for a SEPA payment with existing bank and new Mandate

        >**Note:** Note: Currently, only CARD, ACH, EFT, BACS and SEPA are supported as a *paymentType* parameter.

        - For card processing, the *paymentHandleToken* returned in the response can be used for [payment requests in the Payments API](/operations/process-payment), once it has the status of PAYABLE. To modify its status to PAYABLE, include this *paymentHandleToken* as the value for the *paymentHandleTokenFrom* parameter in a request to [create a regular Payment Handle](/operations/create-payment-handle).

        - That response in turn contains a paymentHandleToken with a status of PAYABLE, with the usage parameter set to SINGLE_USE. Once you use this single-use *paymentHandleToken* in a [successful payment request](/operations/process-payment), then the status of the Customer *paymentHandleToken* created here will change to PAYABLE.

        - For ACH, EFT, BACS and SEPA processing, the *paymentHandleToken* returned in the response has the status of PAYABLE and can be used for [payment requests in the Payments API](/operations/process-payment) directly.

        >**Note:** Although the *billingDetails* parameter is optional, it is recommended that you include it when you create the customer Payment Handle because a Payment request that uses the *paymentHandleToken* in the response will fail AVS checks unless there is a billing address associated with it. If you do not include it when creating the customer Payment Handle, you should then [update the Payment Handle](/operations/update-customer-payment-handle) with the *billingDetailsId* before using it for transaction requests.

        **Create a Multi-Use Payment Handle Using a Single-Use Payment Handle Token**

        Click on **Send API Request** after entering the required data, to save a payment instrument that was created using a regular [single-use Payment Handle Token](/operations/create-single-use-payment-handle) to a customer. The single-use Payment Handle Token must still be valid – i.e., the timeToLiveSeconds has not expired.

        >**Note:**  Currently, single-use Payment Handle tokens that have CARD, ACH and EFT as the *paymentType* are supported.
      tags:
        - Customer Payment Handles
  '/v1/customers/{customerId}/paymenthandles/{paymenthandleId}':
    parameters:
      - schema:
          type: string
        name: customerId
        in: path
        required: true
        description: 'This is the unique Id returned in the response to the [Create a Customer](/operations/create-customer) request.'
      - schema:
          type: string
        name: paymenthandleId
        in: path
        required: true
        description: 'This is the unique Id returned in the response to the [Create a Payment Handle for a Customer](/operations/create-payment-handle-for-customer) request.'
    get:
      summary: Get Customer Payment Handle
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customerPaymentHandleNetworkToken'
              examples:
                Look Up a Customer Payment Handle:
                  value:
                    id: c672fd10-962e-4f57-a1f2-1c3105ffe5d3
                    paymentType: BACS
                    paymentHandleToken: DsOYXhRmFcOCSF2
                    merchantRefNum: '167625194625055'
                    status: PAYABLE
                    masterMerchantId: '6932900'
                    usage: MULTI_USE
                    action: NONE
                    executionMode: ASYNCHRONOUS
                    creationTime: '2023-01-27T13:09:38Z'
                    bacs:
                      lastDigits: '72'
                      accountHolderName: Sally Barnes
                      nickName: Sally's Barclays Account
                      sortCode: '086081'
                    mandates:
                      - id: 6c44d842-5720-4155-beb2-f8704a9daf0f
                        reference: DOCNIG2336
                        status: PENDING
                    billingDetailsId: a85cb1b2-d3b5-44e0-9c1a-4760fb7deceb
                    customerId: 7ab149cc-a65c-4a28-b81a-0a271fa568a1
      operationId: get-customer-payment-handle
      description: 'Click on **Send API Request** after entering the required data, tto see how to look up a Customer Payment Handle using the ID returned in the response to the [original request](/operations/create-payment-handle-for-customer).'
      parameters: []
      tags:
        - Customer Payment Handles
    put:
      summary: Update a Customer Payment Handle
      operationId: update-customer-payment-handle
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customerPaymentHandle'
              examples:
                Update a Payment Handle for a Customer:
                  value:
                    id: 218d68c7-77c8-4d37-9d06-0a4bb5272adb
                    merchantRefNum: ad9c23c2-509b-43ae-bf5d-64554c9fc378
                    status: INITIATED
                    usage: MULTI_USE
                    paymentType: CARD
                    action: NONE
                    paymentHandleToken: Cy4WEGJ9IWIkcUn
                    billingDetailsId: 786cf0cd-4296-43ce-8a57-5f4675e3fafd
                    card:
                      lastDigits: '2222'
                      cardExpiry:
                        month: '12'
                        year: '2021'
                      issuingCountry: US
                    merchantDescriptor:
                      dynamicDescriptor: Casino slots payin
                      phone: '189134336'
                Update a Multi-Use Customer Payment Handle with a Single-Use Payment Handle:
                  value:
                    id: string
                    paymentHandleToken: string
                    status: RECEIVED
                    action: NONE
                    usage: SINGLE_USE
                    executionMode: SYNCHRONOUS
                    timeToLiveSeconds: 0
                    gatewayResponse:
                      id: string
                      processor: string
                      status: string
                      code: string
                      responseCode: string
                      avsResponse: MATCH
                      avsCode: string
                      balanceResponse: string
                      mid: string
                      terminalId: string
                      batchNumber: string
                      seqNumber: string
                      effectiveDate: string
                      financingType: string
                      plan: string
                      gracePeriod: string
                      term: string
                      responseId: string
                      requestId: string
                      description: string
                      authCode: string
                      txnDateTime: string
                      referenceNbr: string
                      responseReasonCode: string
                      cvvVerification: MATCH
                      cvv2Result: string
                      orderId: string
                      profile:
                        locale: en_US
                        firstName: string
                        lastName: string
                        email: string
                        phone: string
                        dateOfBirth:
                          day: 6
                          month: 5
                          year: 1998
                        identityDocuments:
                          - identityDocuments:
                              - type: SOCIAL_SECURITY
                                documentNumber: SSN123456
                        merchantCustomerId: string
                    links:
                      rel: redirect_payment
                      href: 'http://api.paysafe.com/card/redirect/372b5ee7-6360-4403-b444-164f8f1d2709'
                      method: GET
                    txnTime: '2019-08-24T14:15:22Z'
                    updatedTime: '2019-08-24T14:15:22Z'
                    statusTime: '2019-08-24T14:15:22Z'
                    meta:
                      numberOfRecords: 1
                      limit: 10
                      page: 1
                    statusReason: AUTH_VOIDED
                    customerId: string
                    error:
                      code: '5270'
                      message: The credentials provided with the request do not have permission to access the data requested.
                      details:
                        - 'access to {stpAccount:1001076700} denied.'
                      fieldErrors:
                        - field: street
                          error: Unexpected characters
                    merchantRefNum: string
                    transactionType: PAYMENT
                    paymentType: ACH
                    amount: 500
                    currencyCode: str
                    customerIp: string
                    billingDetails:
                      id: string
                      nickName: string
                      street: string
                      street1: string
                      street2: Unit 201
                      city: Toronto
                      state: 'ON'
                      zip: M5H 2N2
                      country: CA
                    profile:
                      locale: en_US
                      firstName: string
                      lastName: string
                      email: string
                      phone: string
                      dateOfBirth:
                        day: 6
                        month: 5
                        year: 1998
                      identityDocuments:
                        - identityDocuments:
                            - type: SOCIAL_SECURITY
                              documentNumber: SSN123456
                      merchantCustomerId: string
                    merchantDescriptor:
                      dynamicDescriptor: OnlineStore
                      phone: 999-8888
                    accountId: string
                    paymentHandleTokenFrom: string
                    customerOperation: ADD
                    singleUseCustomerToken: string
                    shippingDetails:
                      recipientName: Vishnu
                      street: 20735 Stevens Creek Blvd
                      street2: Montessori
                      city: Cupertino
                      zip: '95014'
                      country: US
                      state: CA
                    returnLinks:
                      rel: default
                      href: 'https://US_commerce_site/payment/return/success'
                      method: GET
                    dupCheck: false
                    ach:
                      accountHolderName: XYZ Company
                      payMethod: WEB
                      accountType: SAVINGS
                      accountNumber: '988772192'
                      routingNumber: '211589828'
                      lastDigits: '92'
      description: |-
        **Update a Customer Payment Handle**

        Click on **Send API Request** after entering the required data, to see how update a Customer Payment Handle using the ID returned in the response to the [original request](/operations/create-payment-handle-for-customer).

        >**Note:** You must provide all of the elements of the Payment Handle when you are updating it, including the elements that are not changing. Elements that are part of an existing Payment Handle but that are not included in the update request will be set to null in the resulting Payment Handle, with the exception of the *cardNum* element.

        **Update a Multi-Use Customer Payment Handle with a Single-Use Payment Handle Token**

        Click on **Send API Request** after entering the required data, to update a Customer Payment Handle using the ID returned in te response of the [original request](/operations/create-payment-handle-for-customer).

        >**Note:** You must provide all of the elements of the payment handle while creating single use payment handle when you are updating multi-use payment handle with it, including the elements that are not changing. Elements that are part of an existing payment handle but that are not included in the update request will be set to null in the resulting Payment Handle, with the exception of the *cardNum* element.

        >**Note:** If you want to update the payment information in a Customer Payment Handle, you must [create a new single-use Payment Handle]/operations/create-single-use-payment-handle) containing the new payment information and use the *paymentHandleToken* returned in that response as the value for the *paymentHandleTokenFrom* parameter in this request.
      parameters:
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
            default: EXTERNAL
          in: header
          name: Simulator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customerPaymentHandleRequest'
            examples:
              Update a Payment Handle for a Customer:
                value:
                  merchantRefNum: xzcxzcwqeqwewewqer
                  paymentType: CARD
                  currencyCode: GBP
                  customerIp: 10.10.12.64
                  billingDetails:
                    street: Andhra bank lane
                    street2: Manikonda
                    city: Hyderabad
                    state: TS
                    country: IN
                    zip: '500089'
                  card:
                    cardNum: '4222222222222'
                    lastDigits: '2222'
                    cardExpiry:
                      month: '12'
                      year: '2021'
                    cvv: '111'
                    issuingCountry: US
                  merchantDescriptor:
                    dynamicDescriptor: Casino slots payin
                    phone: '189134336'
              Update a Multi-Use Customer Payment Handle with a Single-Use Payment Handle:
                value:
                  paymentHandleTokenFrom: SC7nLsLzHWVqI62i
      tags:
        - Customer Payment Handles
    delete:
      summary: Delete Customer Payment Handle
      operationId: delete-customer-payment-handle
      responses:
        '200':
          description: OK
          headers: {}
      description: 'Click on **Send API Request** after entering the required data, to see how delete a Customer Payment Handle.'
      parameters: []
      tags:
        - Customer Payment Handles
  '/v1/customers/{customerId}/addresses':
    parameters:
      - schema:
          type: string
        name: customerId
        in: path
        required: true
        description: 'This is the unique Id returned in the response to the [Create a Customer](/operations/create-customer) request.'
    post:
      summary: Create an Address
      operationId: create-address
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addresses'
              examples:
                Create an Address:
                  value:
                    id: 921cd968-6882-422c-ae4f-a10ddbae95ff
                    nickName: Home
                    street: N.G.O's Colony
                    street2: Besdie Sri Ramakrishna P.G College
                    city: Nandyal
                    state: 'ON'
                    country: CA
                    zip: '518502'
                    phone: 647-788-3901
                    status: ACTIVE
                    defaultShippingAddressIndicator: false
      description: 'Click on **Send API Request** after entering the required data, to see how to add an address to [Customer you have already created](/operations/create-customer).'
      parameters:
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
            default: EXTERNAL
          in: header
          name: Simulator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addresses'
            examples:
              Create an Address:
                value:
                  nickName: Home
                  street: N.G.O's Colony
                  street2: Besdie Sri Ramakrishna P.G College
                  city: Nandyal
                  zip: '518502'
                  country: CA
                  state: 'ON'
                  phone: 647-788-3901
                  defaultShippingAddressIndicator: true
      tags:
        - Customer Addresses
  '/v1/customers/{customerId}/addresses/{addressId}':
    parameters:
      - schema:
          type: string
          example: 89d4682c-755c-451b-8098-fcf23ac97be4
        name: customerId
        in: path
        required: true
        description: 'This is the unique Id returned in the response to the [Create a Customer](/operations/create-customer) request.'
      - schema:
          type: string
          example: 921cd968-6882-422c-ae4f-a10ddbae95ff
        name: addressId
        in: path
        required: true
        description: 'This is the unique Id returned in the response to the [Create an Address](/operations/create-address) request.'
    get:
      summary: Get Address
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addresses'
              examples:
                Get Address:
                  value:
                    id: 921cd968-6882-422c-ae4f-a10ddbae95ff
                    nickName: Home
                    street: N.G.O's Colony
                    street2: Besdie Sri Ramakrishna P.G College
                    city: Nandyal
                    state: 'ON'
                    country: CA
                    zip: '518502'
                    phone: 647-788-3901
                    status: ACTIVE
                    defaultShippingAddressIndicator: false
      operationId: get-address
      description: 'Click on **Send API Request** after entering the required data, to see how to lookup an Address using the ID returned in the response to the [original request](/operations/create-address).'
      parameters: []
      tags:
        - Customer Addresses
    put:
      summary: Update an Address
      operationId: update-an-address
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addresses'
              examples:
                Update an Address:
                  value:
                    id: 921cd968-6882-422c-ae4f-a10ddbae95ff
                    nickName: Office
                    street: 101 Queen
                    street2: Unit 202
                    city: Toronto0
                    state: NY
                    country: US
                    zip: M5H 2N2
                    phone: 903-788-3901
                    status: ACTIVE
                    defaultShippingAddressIndicator: false
      description: |-
        Click on **Send API Request** after entering the required data, to see how update an Address using the ID returned in the response to the [original request](/operations/create-address).

        >**Note:** You must provide all of the elements of the address when you are updating it, including the elements that are not changing. Elements that are part of an existing address but that are not included in the update request will be set to null in the resulting address.
      parameters:
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
            default: EXTERNAL
          in: header
          name: Simulator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addresses'
            examples:
              Update an Address:
                value:
                  nickName: Office
                  street: 101 Queen
                  street2: Unit 202
                  city: Toronto0
                  zip: M5H 2N2
                  country: US
                  state: NY
                  phone: 903-788-3901
                  defaultShippingAddressIndicator: false
      tags:
        - Customer Addresses
    delete:
      summary: Delete an Address
      operationId: delete-an-address
      responses:
        '200':
          description: OK
          headers: {}
      description: 'Click on **Send API Request** after entering the required data, to see how delete an Address.'
      parameters: []
      tags:
        - Customer Addresses
  '/v1/customers/{customerId}/singleusecustomertokens':
    parameters:
      - schema:
          type: string
        name: customerId
        in: path
        required: true
        description: 'This is the unique Id returned in the response to the [Create a Customer](/operations/create-customer) request.'
    post:
      summary: Create a Single-Use Customer Token
      operationId: create-single-use-customer-token
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleUseCustomerNetworkToken'
              examples:
                Create a Single-Use Customer Token:
                  value:
                    id: 46776add-2e89-4ec1-96ac-845d017b4ad8
                    timeToLiveSeconds: 899
                    status: ACTIVE
                    singleUseCustomerToken: SPfslSE3qEuSCdYF
                    paymentTypes:
                      - CARD
                    locale: en_US
                    firstName: John
                    middleName: James
                    lastName: Smith
                    dateOfBirth:
                      day: 24
                      month: 10
                      year: 1981
                    email: john.smith@email.com
                    phone: 777-444-8888
                    ip: 192.0.126.111
                    nationality: Canadian
                    addresses:
                      - id: c8af2f97-7d89-413c-80d9-7f3a0c8f5da6
                        nickName: Home
                        street2: Unit 201
                        city: Toronto
                        country: CA
                        zip: M5H 2N2
                        status: ACTIVE
                        street: 100 Queen
                    paymentHandles:
                      - id: e6ad67f5-16f1-4be6-8944-0b897e3b1380
                        status: INITIATED
                        usage: MULTI_USE
                        paymentType: CARD
                        paymentHandleToken: CPFjDfDKp7SMuhL
                        card:
                          lastDigits: '2345'
                          cardExpiry:
                            month: '10'
                            year: '2025'
                          cardBin: '453091'
                          cardType: VI
                          holderName: Dilip
                          status: ACTIVE
                          cardCategory: CREDIT
                          networkToken:
                            bin: '489537'
                            lastDigits: '0000'
                            status: 'ACTIVE'
                            expiry:
                              month: '10'
                              year: '2025'
                            cardArt:
                              cardArtUrl: 'https://s3.ca-central-1.amazonaws.com/808046016961-aws-ies-ca-central-1-dev-paysafe-hosted/networktoken/card-art/visa/22af01f2bdf445e497895d502dd1f1ae.png'
                              isCobranded: false
                        billingDetailsId: c8af2f97-7d89-413c-80d9-7f3a0c8f5da6
                        customerId: d60fc496-9023-4641-890e-e05c852d2ac4
                    customerId: 28511b97-6473-4110-92f7-69bbd3412bd0
      parameters:
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
            default: EXTERNAL
          in: header
          name: Simulator
      description: |-
        Click on **Send API Request** after entering the required data, to create a single-use token for a [Customer you have already created](/operations/create-customer).

        The *singleUseCustomerToken* returned in the response is then used in the PaymentsCheckout SDK (for the singleUseCustomerToken parameter) when you want to use saved cards and addresses. Any addresses and/or payment details that have been saved for this *customer_id* would then be displayed in the Payments Checkout.

        >**Note:** The customer_id used in this request must be taken from a [Customer created using a single-use Payment Handle Token](/operations/create-single-use-payment-handle).
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/singleUseCustomerTokenRequest'
            examples:
              Create a Single-Use Customer Token:
                value:
                  merchantRefNum: Ref123
                  paymentType:
                    - CARD
      tags:
        - Customer Single-Use Tokens
  '/v1/singleusecustomertokens/{singleusecustomertokenId}':
    parameters:
      - schema:
          type: string
        name: singleusecustomertokenId
        in: path
        required: true
        description: 'This is the Single-Use Customer Token ID returned in the response of the [Single-Use Customer Token](/operations/create-single-use-customer-token) creation request.'
    get:
      summary: Get Single-Use Customer Token
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleUseCustomerNetworkToken'
              examples:
                Look Up a Single-Use Customer Token.:
                  value:
                    id: 46776add-2e89-4ec1-96ac-845d017b4ad8
                    timeToLiveSeconds: 899
                    status: ACTIVE
                    singleUseCustomerToken: SPfslSE3qEuSCdYF
                    paymentTypes:
                      - CARD
                    locale: en_US
                    firstName: John
                    middleName: James
                    lastName: Smith
                    dateOfBirth:
                      day: 24
                      month: 10
                      year: 1981
                    ip: 192.0.126.111
                    nationality: Canadian
                    addresses:
                      - id: c8af2f97-7d89-413c-80d9-7f3a0c8f5da6
                        nickName: Home
                        street2: Unit 201
                        city: Toronto
                        country: CA
                        zip: M5H 2N2
                        status: ACTIVE
                        street: 100 Queen
                    paymentHandles:
                      - id: e6ad67f5-16f1-4be6-8944-0b897e3b1380
                        status: INITIATED
                        usage: MULTI_USE
                        paymentType: CARD
                        paymentHandleToken: CPFjDfDKp7SMuhL
                        creationTime: 2023-12-21T13:18:15Z
                        expirationTime: 2023-12-21T13:33:14Z
                        card:
                          lastDigits: '2345'
                          cardExpiry:
                            month: '10'
                            year: '2025'
                          cardBin: '453091'
                          cardType: VI
                          holderName: Dilip
                          status: ACTIVE
                          cardCategory: CREDIT
                          networkToken:
                            bin: '489537'
                            lastDigits: '0000'
                            status: 'ACTIVE'
                            expiry:
                              month: '10'
                              year: '2025'
                            cardArt:
                              cardArtUrl: 'https://s3.ca-central-1.amazonaws.com/808046016961-aws-ies-ca-central-1-dev-paysafe-hosted/networktoken/card-art/visa/22af01f2bdf445e497895d502dd1f1ae.png'
                              isCobranded: false
                        billingDetailsId: c8af2f97-7d89-413c-80d9-7f3a0c8f5da6
                        customerId: d60fc496-9023-4641-890e-e05c852d2ac4
                    customerId: 28511b97-6473-4110-92f7-69bbd3412bd0
      operationId: get-single-use-customer-token
      description: |-
        Click on **Send API Request** after entering the required data, to see how to look up a Single-Use Customer Token using the ID returned in the response to the [original request](/operations/create-single-use-customer-token).

        Use the *singleUseCustomerToken* returned in the response in the Payments Checkout SDK when you want to use saved cards and addresses, provided the timeToLiveSeconds has not expired.
      parameters: []
      tags:
        - Customer Single-Use Tokens
  '/v1/customers/{customerId}/paymenthandles/{paymentHandleId}/mandates':
    parameters:
      - schema:
          type: string
        name: customerId
        in: path
        required: true
        description: 'This is the [ID of the customer](/operations/create-customer) for which you are creating the single-use token.'
      - schema:
          type: string
        name: paymentHandleId
        in: path
        required: true
        description: 'This is the Payment Handle ID returned in the response to the [Customer Payment Handle creation request](/operations/create-payment-handle-for-customer).'
    post:
      summary: Create a Mandate for a Customer
      operationId: create-mandate
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mandate'
              examples:
                BACS:
                  value:
                    id: fb24c07e-7a7d-4334-b3b1-c32af1541aa7
                    reference: GTWYRM6230
                    status: PENDING
                SEPA:
                  value:
                    id: 33d640b9-b6da-4aa5-94d4-829411069f75
                    reference: JZWNP1263
                    status: ACTIVE
      parameters:
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
            default: EXTERNAL
          in: header
          name: Simulator
      description: |-
        A Mandate is an authorisation for payments to be collected from a customer in the future. This is an legal agreement between the customer and merchant that informs users that they are agreeing to have their bank account debited periodically and also provides them with full details of their refund rights.

        **Setting Up A Mandate**

          In order to set up a Mandate a form must be completed in one of three ways:

          - Paper: A hand completed paper form is the most traditional way of completing the action.

          - Telephone: Customers can phone their Direct Debit provider and details can be collated in that manner, if customers prefer to have an actual conversation.

          - Online: Using bank-approved payment pages, Service Users can collect customer detail in what is a more private, non-rushed manner.

        Click on **Send API Request** after entering the required data, to see examples ofhow to create a Mandate for a [Customer you have already created](/operations/create-customer)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mandate'
            examples:
              BACS:
                value:
                  reference: GTWYRM6230
              SEPA:
                value:
                  reference: JZWNP1263
      tags:
        - Mandate
  '/v1/customers/{customerId}/paymenthandles/{paymentHandleId}/mandates/{mandateId}':
    parameters:
      - schema:
          type: string
        name: mandateId
        in: path
        required: true
        description: 'This is the Mandate Id returned in the response to the [Create a Mandate for a Customer request](/operations/create-mandate).'
      - schema:
          type: string
        name: customerId
        in: path
        required: true
        description: 'This is the [ID of the customer](/operations/create-customer) for which you are creating the single-use token.'
      - schema:
          type: string
        name: paymentHandleId
        in: path
        required: true
        description: 'This is the Payment Handle ID returned in the response to the [Customer Payment Handle creation request](/operations/create-payment-handle-for-customer).'
    get:
      summary: Look Up Mandate Status
      tags:
        - Mandate
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mandate'
              examples:
                Look Up Mandate Status:
                  value:
                    id: fb24c07e-7a7d-4334-b3b1-c32af1541aa7
                    reference: GTWYRM6230
                    status: PENDING
      operationId: look-up-mandate-status
      description: 'Click on **Send API Request** after entering the required data, to see the status of the mandate.'
      parameters: []
    put:
      summary: Cancel a Mandate
      operationId: cancel-mandate
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mandate'
              examples:
                BACS - Cancel a Mandate:
                  value:
                    id: fb24c07e-7a7d-4334-b3b1-c32af1541aa7
                    reference: GTWYRM6230
                    status: CANCELLED
                    statusReason: MERCHANT_CANCELLED
      description: |-
        Merchant can cancel a mandate by using PUT call. The respective payment handle will also becomes CANCELLED with statusReasonCode as MANDATE_CANCELLED. Webhooks notification for payment handle will be sent to merchant.

        Click **Send API Request** above to see how to cancel a Mandate.
      parameters:
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
            default: EXTERNAL
          in: header
          name: Simulator
      tags:
        - Mandate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cancelRequest'
            examples:
              BACS - Cancel a Mandate:
                value:
                  status: CANCELLED
        description: Cancel a Mandate
  /v1/sightline/registrations:
    post:
      summary: Create a Partial Registration Call
      operationId: create-a-sightline-registration-call
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sightlineRegistration'
              examples:
                Sightline Partial Registration without SSN:
                  value:
                    id: e362f536-16d3-4f56-acc2-37f04e130c69
                    merchantRefNum: c035d2af-9398-4997-b516-459486655550
                    txnTime: '2023-06-05T10:12:58Z'
                    billingDetails:
                      street: '100'
                      street2: Montessori
                      city: Cupertino
                      zip: '95014'
                      state: CA
                      country: US
                    status: INITIATED
                    links:
                      - rel: redirect_registration
                        href: 'https://api.test.paysafe.com/alternatepayments/v1/sightline/hostedsession?sessionId=e5c13f8a-ce6a-42a9-8849-7c81d1b6a919&jwt=eyJhbGciOiJIUzI1NiJ9.eyJoc2QiOiJlNWMxM2Y4YS1jZTZhLTQyYTktODg0OS03YzgxZDFiNmE5MTkiLCJleHAiOjE2ODU5NjA4NzksInBtbCI6IjM0ODg2MCJ9.95bLtLwKYfBlwYUkkmx6Bh1crHYkoLqFh8Z_1DEc0QE'
                    liveMode: false
                    returnLinks:
                      - rel: default
                        href: 'https://usgaminggamblig.com/payment/return/default'
                      - rel: on_completed
                        href: 'https://usgaminggamblig.com/payment/return/completed'
                      - rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                    verificationQuestions: {}
                    profile:
                      firstName: John
                      lastName: Smith
                      email: john.smith@paysafe.com
                      dateOfBirth:
                        day: 15
                        month: 4
                        year: 1970
                      phone: '5555345456'
                      cellphone: '2121212121'
                      locale: en-US
                    sightline:
                      consumerId: '131219476'
                    source: SingleAPI
                Sightline Partial Registration with SSN details:
                  value:
                    id: 4a4299b9-b47f-4e27-b307-ae235e191e12
                    merchantRefNum: cbcd718b-558f-41ca-8450-f13ec00985af
                    txnTime: '2023-06-05T10:14:57Z'
                    billingDetails:
                      street: '100'
                      street2: Montessori
                      city: Cupertino
                      zip: '95014'
                      state: CA
                      country: US
                    status: INITIATED
                    links:
                      - rel: redirect_registration
                        href: 'https://api.test.paysafe.com/alternatepayments/v1/sightline/hostedsession?sessionId=aa54bd5a-677d-4d1d-bc85-3bab296f8887&jwt=eyJhbGciOiJIUzI1NiJ9.eyJoc2QiOiJhYTU0YmQ1YS02NzdkLTRkMWQtYmM4NS0zYmFiMjk2Zjg4ODciLCJleHAiOjE2ODU5NjA5OTcsInBtbCI6IjM0ODg2MCJ9.8394ZI2sEqqRMQ3Xdl4hI0gZmsu7OiM_yflsMnz0US4'
                    liveMode: false
                    returnLinks:
                      - rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                      - rel: default
                        href: 'https://usgaminggamblig.com/payment/return/success'
                      - rel: on_completed
                        href: 'https://usgaminggamblig.com/payment/return/cancelled'
                    verificationQuestions: {}
                    profile:
                      firstName: John
                      lastName: Smith
                      email: john.smith@paysafe.com
                      dateOfBirth:
                        day: 15
                        month: 4
                        year: 1970
                      phone: '5555345456'
                      locale: en-US
                      identityDocuments:
                        - type: SOCIAL_SECURITY
                          documentNumber: '#####9476'
                    sightline:
                      consumerId: '131219476'
                      last4ssn: '9476'
                      lastDigits: '9476'
                    source: SingleAPI
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
      description: |-
        If a customer is not registered, then you can use the APIs mentioned in this section to create a registration flow.

        Click on **Send API Request** after entering the require data, to register a new customer in the Sightline payment method.
      parameters:
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
            default: EXTERNAL
          in: header
          name: Simulator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sightlineRegistrationRequest'
            examples:
              Sightline Partial Registration without SSN:
                value:
                  merchantRefNum: c035d2af-9398-4997-b516-459486655550
                  paymentType: SIGHTLINE
                  profile:
                    firstName: John
                    lastName: Smith
                    locale: en-US
                    email: john.smith@paysafe.com
                    dateOfBirth:
                      day: 15
                      month: 4
                      year: 1970
                    phone: '5555345456'
                    cellphone: '2121212121'
                  billingDetails:
                    street: '100'
                    street2: Montessori
                    city: Cupertino
                    zip: '95014'
                    country: US
                    state: CA
                    street1: '111'
                  sightline:
                    consumerId: '131219476'
                  returnLinks:
                    - rel: default
                      href: 'https://usgaminggamblig.com/payment/return/default'
                    - rel: on_failed
                      href: 'https://usgaminggamblig.com/payment/return/failed'
                    - rel: on_completed
                      href: 'https://usgaminggamblig.com/payment/return/completed'
              Sightline Partial Registration with SSN details:
                value:
                  merchantRefNum: cbcd718b-558f-41ca-8450-f13ec00985af
                  paymentType: SIGHTLINE
                  profile:
                    firstName: John
                    lastName: Smith
                    locale: en-US
                    email: john.smith@paysafe.com
                    dateOfBirth:
                      day: 15
                      month: 4
                      year: 1970
                    phone: '5555345456'
                  billingDetails:
                    street: '100'
                    street2: Montessori
                    city: Cupertino
                    zip: '95014'
                    country: US
                    state: CA
                    street1: '111'
                  sightline:
                    consumerId: '131219476'
                    ssn: '131219476'
                  returnLinks:
                    - rel: default
                      href: 'https://usgaminggamblig.com/payment/return/success'
                    - rel: on_failed
                      href: 'https://usgaminggamblig.com/payment/return/failed'
                    - rel: on_completed
                      href: 'https://usgaminggamblig.com/payment/return/cancelled'
      tags:
        - Sightline Registration
    parameters: []
  '/v1/registration/{registrationId}':
    parameters:
      - schema:
          type: string
        name: registrationId
        in: path
        required: true
        description: 'This is the unique Id returned in the response to the [Sightline Registration](/operations/create-a-sightline-registration-call) request.'
    get:
      summary: Get Registration By Id
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sightlineRegistration'
              examples:
                Get Registration by ID:
                  value:
                    merchantRefNum: 4e1d42ac6b44bac126cc
                    dupCheck: false
                    paymentType: SIGHTLINE
                    profile:
                      firstName: Pavan
                      lastName: Kalyan
                      locale: en_US
                      email: test@paysafe.com
                      dateOfBirth:
                        day: 6
                        month: 5
                        year: 1998
                      phone: '1234567890'
                      cellphone: '1234567890'
                      identityDocuments:
                        - type: SOCIAL_SECURITY
                    billingDetails:
                      street1: abcd
                      street2: abcd
                      zip: '32456'
                      state: AL
                      city: defg
                      country: US
                    sightline:
                      sessionId: 5a047e3a-2bea-4ad5-a569-89c754e8e480
      operationId: get-registration-by-id
      description: 'Click on **Send API Request** after entering the require data, to get the customer''s registration status by using ID returned in the partial registration call.'
      parameters: []
      tags:
        - Sightline Registration
  /v1/vippreferred/registrations:
    post:
      summary: Create a Registration Call
      operationId: create-a-vippreferred-registration-call
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vippreferredRegistration'
              examples:
                Create a Partial Registration Call - Redirect Flow:
                  value:
                    id: 6324d6c9-cc9e-47c5-a4bb-7e582f0b0809
                    merchantRefNum: cefa75308b000d6e12a0
                    txnTime: '2023-01-27T07:54:17Z'
                    billingDetails:
                      street: 'street,street'
                      city: ca
                      zip: '50087'
                      state: CA
                      country: US
                    status: INITIATED
                    links:
                      - rel: redirect_registration
                        href: 'https://api.dev.paysafe.com/alternatepayments/v1/vippreferred/hostedsession?sessionId=3cd8b368-17fc-4ce4-ac37-05cbfcc06e0f&jwt=eyJhbGciOiJIUzI1NiJ9.eyJoc2QiOiIzY2Q4YjM2OC0xN2ZjLTRjZTQtYWMzNy0wNWNiZmNjMDZlMGYiLCJleHAiOjE2NzQ4MDc4NTcsInBtbCI6IjMwNTA2MCJ9.6YUypLUQ9HTanv0NNX9_QbKX-d7rDjlfvG5t2EiZcTE'
                    liveMode: false
                    returnLinks:
                      - rel: default
                        href: 'https://usgaminggamblig.com/payment/return/success'
                      - rel: on_completed
                        href: 'https://usgaminggamblig.com/payment/return/completed'
                      - rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                      - rel: on_cancelled
                        href: 'https://usgaminggamblig.com/payment/return/cancelled'
                    enablePlaid: false
                    vippreferred:
                      ach:
                        routingNumber: '123103729'
                        accountNumber: '###'
                        lastDigits: '40'
                      achBankAccounts:
                        - id: 4e51b4a1-1dac-44e4-b37d-b1dcc493bcff
                          routingNumber: '123103729'
                          accountNumber: '###'
                          lastDigits: '40'
                    profile:
                      firstName: Sandi
                      lastName: Smith
                      email: sandi.smith@paysafe.com
                      dateOfBirth:
                        day: 15
                        month: 4
                        year: 1970
                      phone: '84632876432'
                      cellphone: '2121212121'
                      locale: en_US
                      identityDocuments:
                        - type: DRIVING_LICENSE
                          countryOfIssue: US
                          issuingCountry: US
                          issuingCountrySubdvision: IL
                          expiryDate:
                            day: 11
                            month: 11
                            year: 2031
                        - type: SOCIAL_SECURITY
                Create a Registration Call - Direct Integration:
                  value:
                    id: ac02be45-7ae5-40b5-a9ec-234086b2640e
                    merchantRefNum: f8ca8b342e561ccaf185
                    txnTime: '2021-09-27T05:14:08Z'
                    billingDetails:
                      street: 'Queen Street West,Queen Street'
                      city: Livingston
                      zip: '07039'
                      state: NJ
                      country: US
                    status: COMPLETED
                    liveMode: false
                    gatewayResponse:
                      name: John Smith
                      id: 161CF26193434D74BE7D1001D
                      processor: VIPPREFERRED
                      transactionId: 161CF26193434D74BE7D1001D
                      responseCode: '00'
                    vippreferred:
                      lastDigits: '0150'
                      cardLimit: 450000
                      balance: 450000
                      achBankAccounts:
                        - id: 4fc8df40-033b-47cd-952b-bffcb52374bc
                          bankName: Paysafe Test Bank
                          registrationId: ac02be45-7ae5-40b5-a9ec-234086b2640e
                          routingNumber: '123103729'
                          accountNumber: '###'
                          paymentToken: BAxdQf1eUonA5adC
                          paymentHandleToken: BAxdQf1eUonA5adC
                    profile:
                      firstName: John
                      lastName: Smith
                      email: john.smith@paysafe.com
                      dateOfBirth:
                        day: 15
                        month: 4
                        year: 1970
                      phone: '84632876432'
                      cellphone: '2121212121'
                      locale: en_US
                      identityDocuments:
                        - type: SOCIAL_SECURITY
                          countryOfIssue: US
                          issuingCountry: US
                          issuingCountrySubdvision: CA
                          issueDate:
                            day: 25
                            month: 12
                            year: 2017
                        - type: DRIVING_LICENSE
                          countryOfIssue: US
                          issuingCountry: US
                          issuingCountrySubdvision: IL
                          issueDate:
                            day: 11
                            month: 11
                            year: 2011
      description: |-
        **Create a Paritial Registration Call - Redirect Flow**

        - Click on **Send API Request** after entering the required data, and select the example **Create a Partial Registration Call - Redirect Flow** to see how to register a new customer using the VIP Preferred payment method.

        **Create a Registration Call - Direct Integration**

        - Click on **Send API Request** after entering the required data, and select the example **Create a Registration Call - Direct Integration** to enroll a new customer using the VIP Preferred payment method.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vippreferredRegistrationRequest'
            examples:
              Create a Partial Registration Call - Redirect Flow:
                value:
                  merchantRefNum: cefa75308b000d6e12a0
                  paymentType: VIPPREFERRED
                  profile:
                    firstName: Sandi
                    lastName: Smith
                    locale: en_US
                    email: sandi.smith@paysafe.com
                    dateOfBirth:
                      day: 15
                      month: 4
                      year: 1970
                    phone: '84632876432'
                    cellphone: '2121212121'
                    identityDocuments:
                      - type: SOCIAL_SECURITY
                        documentNumber: '181775340'
                      - type: DRIVING_LICENSE
                        documentNumber: DL181775340
                        issuingCountry: US
                        issuingCountrySubdvision: IL
                        expiryDate:
                          year: 2031
                          month: 11
                          day: 11
                  billingDetails:
                    street1: street
                    street2: street
                    city: ca
                    state: CA
                    country: US
                    zip: '50087'
                  vippreferred:
                    ach:
                      routingNumber: '123103729'
                      accountNumber: '7751181775340'
                  returnLinks:
                    - rel: default
                      href: 'https://usgaminggamblig.com/payment/return/success'
                    - rel: on_failed
                      href: 'https://usgaminggamblig.com/payment/return/failed'
                    - rel: on_completed
                      href: 'https://usgaminggamblig.com/payment/return/completed'
                    - rel: on_cancelled
                      href: 'https://usgaminggamblig.com/payment/return/cancelled'
              Create a Registration Call - Direct Integration:
                value:
                  merchantRefNum: 576d95e8-a8e6-48b5-a8a8-11ae8352071q
                  paymentType: VIPPREFERRED
                  profile:
                    firstName: John
                    lastName: Smith
                    locale: en_US
                    email: john.smith@paysafe.com
                    dateOfBirth:
                      day: 15
                      month: 4
                      year: 1970
                    phone: '84632876432'
                    cellphone: '2121212121'
                    identityDocuments:
                      - type: SOCIAL_SECURITY
                        documentNumber: '153179819'
                        issuingCountry: US
                        issuingCountrySubdvision: CA
                        issueDate:
                          year: 2017
                          month: 12
                          day: 25
                      - type: DRIVING_LICENSE
                        documentNumber: DL153179819
                        issuingCountry: US
                        issuingCountrySubdvision: IL
                        issueDate:
                          year: 2011
                          month: 11
                          day: 11
                  billingDetails:
                    street1: Queen Street West
                    street2: Queen Street West
                    city: Livingston
                    state: NJ
                    country: US
                    zip: '07039'
                  vippreferred:
                    ach:
                      routingNumber: '123103729'
                      accountNumber: '7751153179819'
      parameters:
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
            default: EXTERNAL
          in: header
          name: Simulator
      tags:
        - Vippreferred Registration
    parameters: []
  '/v1/vippreferred/registrations/{registrationId}':
    parameters:
      - schema:
          type: string
        name: registrationId
        in: path
        required: true
        description: 'This is the unique Id returned in the response to the [Vippreferred Registration](/operations/create-a-vippreferred-registration-call) request.'
    get:
      summary: Get Registration by Id
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vippreferredRegistration'
              examples:
                Look Up Vippreferred Registration by Id:
                  value:
                    id: 6324d6c9-cc9e-47c5-a4bb-7e582f0b0809
                    merchantRefNum: cefa75308b000d6e12a0
                    txnTime: '2023-01-27T07:54:17Z'
                    billingDetails:
                      street: 'street,street'
                      city: ca
                      zip: '50087'
                      state: CA
                      country: US
                    status: INITIATED
                    links:
                      - rel: redirect_registration
                        href: 'https://api.dev.paysafe.com/alternatepayments/v1/vippreferred/hostedsession?sessionId=3cd8b368-17fc-4ce4-ac37-05cbfcc06e0f&jwt=eyJhbGciOiJIUzI1NiJ9.eyJoc2QiOiIzY2Q4YjM2OC0xN2ZjLTRjZTQtYWMzNy0wNWNiZmNjMDZlMGYiLCJleHAiOjE2NzQ4MDc4NTcsInBtbCI6IjMwNTA2MCJ9.6YUypLUQ9HTanv0NNX9_QbKX-d7rDjlfvG5t2EiZcTE'
                    liveMode: false
                    returnLinks:
                      - rel: default
                        href: 'https://usgaminggamblig.com/payment/return/success'
                      - rel: on_completed
                        href: 'https://usgaminggamblig.com/payment/return/completed'
                      - rel: on_failed
                        href: 'https://usgaminggamblig.com/payment/return/failed'
                      - rel: on_cancelled
                        href: 'https://usgaminggamblig.com/payment/return/cancelled'
                    enablePlaid: false
                    vippreferred:
                      ach:
                        routingNumber: '123103729'
                        accountNumber: '###'
                        lastDigits: '40'
                      achBankAccounts:
                        - id: 4e51b4a1-1dac-44e4-b37d-b1dcc493bcff
                          routingNumber: '123103729'
                          accountNumber: '###'
                          lastDigits: '40'
                    profile:
                      firstName: Sandi
                      lastName: Smith
                      email: sandi.smith@paysafe.com
                      dateOfBirth:
                        day: 15
                        month: 4
                        year: 1970
                      phone: '84632876432'
                      cellphone: '2121212121'
                      locale: en_US
                      identityDocuments:
                        - type: DRIVING_LICENSE
                          countryOfIssue: US
                          issuingCountry: US
                          issuingCountrySubdvision: IL
                          expiryDate:
                            day: 11
                            month: 11
                            year: 2031
                        - type: SOCIAL_SECURITY
      operationId: get-vippreferred-registration-by-id
      parameters: []
      description: 'Click on **Send API Request** after entering the required data, to get the customer''s registration status by using ID returned in the partial registration call.'
      tags:
        - Vippreferred Registration
  '/v1/registrations/{registrationId}/achbankaccounts':
    parameters:
      - schema:
          type: string
        name: registrationId
        in: path
        required: true
        description: 'This is the unique Id returned in the response to the [Vippreferred Registration](/operations/create-a-vippreferred-registration-call) request.'
    post:
      summary: Add an Account
      operationId: add-an-account
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/achBankAccount'
              examples:
                Add an Account:
                  value:
                    id: 4fc8df40-033b-47cd-952b-bffcb52374bc
                    bankName: Paysafe Test Bank
                    registrationId: ac02be45-7ae5-40b5-a9ec-234086b2640e
                    routingNumber: '123103729'
                    accountNumber: '12345678'
                    lastDigits: '78'
                    paymentToken: BAxdQf1eUonA5adC
                    paymentHandleToken: BAxdQf1eUonA5adC
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
      description: 'Click on **Send API Request** after entering the required data, to add an account in the VIP preferred payment method.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/achBankAccount'
            examples:
              Add an Account:
                value:
                  id: f67021ef-6323-4724-b048-3d54fccd1c47
                  bankName: sample bank name
                  routingNumber: '12345678'
                  lastDigits: '56'
      parameters:
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
        - schema:
            type: string
            enum:
              - EXTERNAL
              - INTERNAL
            default: EXTERNAL
          in: header
          name: Simulator
      tags:
        - Vippreferred Registration
  '/v1/registrations/{registrationId}/achbankaccounts/{achbankaccountId}':
    parameters:
      - schema:
          type: string
        name: registrationId
        in: path
        required: true
        description: 'This is the unique Id returned in the response to the [Vippreferred Registration](/operations/create-a-vippreferred-registration-call) request.'
      - schema:
          type: string
        name: achbankaccountId
        in: path
        required: true
        description: 'This is the unique Id returned in the response to the [Add an Account](/operations/add-an-account) request.'
    delete:
      summary: Remove and Account
      operationId: remove-an-account
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/achBankAccount'
              examples:
                Remove an account:
                  value:
                    id: f67021ef-6323-4724-b048-3d54fccd1c47
                    bankName: sample bank name
                    routingNumber: '12345678'
                    lastDigits: '56'
      parameters: []
      tags:
        - Vippreferred Registration
      description: 'Click on **Send API Request** after entering the required data, to remove an account in the VIP preferred payment method.'
  /v1/paysafecashstores:
    get:
      summary: Store Locator
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storeDetails'
              examples:
                Paysafecash Store Locator:
                  value:
                    stores:
                      - address:
                          street: 23 Route De Paris
                          city: Champlost
                          zip: '89210'
                          country: FRA
                        specialImage: null
                        distributorId: '86'
                        latitude: '48.856614'
                        productLogo: 'https://www.paysafecash.com/fileadmin/posicon/marker/default.png'
                        media: EVoucher
                        cheatSheetUrl: null
                        directload: 'false'
                        recommended: 'false'
                        posId: '6638426'
                        cheatSheetText: null
                        posTypeLogo: null
                        name: Bon Accueil (Au)
                        distanceFromOrigin: '3.0'
                        specialText: null
                        productType: mdirectload
                        longitude: '2.3522219'
                        storeFeedbacks: null
                      - address:
                          street: Place De L'Hôtel De Ville
                          city: Porto-Vecchio
                          zip: '20137'
                          country: FRA
                        specialImage: null
                        distributorId: '86'
                        latitude: '48.8567682'
                        productLogo: 'https://www.paysafecash.com/fileadmin/posicon/marker/default.png'
                        media: EVoucher
                        cheatSheetUrl: null
                        directload: 'false'
                        recommended: 'false'
                        posId: '6639318'
                        cheatSheetText: null
                        posTypeLogo: null
                        name: Tabac
                        distanceFromOrigin: '85.0'
                        specialText: null
                        productType: mdirectload
                        longitude: '2.3510678'
                        storeFeedbacks: null
      operationId: store-locator
      description: 'Click on **Send API Request** after entering the required data,  to get Paysafecash store list.Note: This is applicable to Paysafecash payment method.'
      parameters:
        - schema:
            type: number
            example: 48.856614
          in: query
          name: lat
          description: Latitudinal search position.
          required: true
        - schema:
            type: number
            example: 2.3522219
          in: query
          name: long
          description: Longitudinal search position.
          required: true
        - schema:
            type: number
            example: 10
          in: query
          name: radius
          description: Radius in Meters around lat/long to search for stores.
          required: true
        - schema:
            type: number
            example: 1000
          in: query
          name: limit
          description: Number of results to return. Maximum number of results allowed is 1000
        - schema:
            type: number
            example: 1000000
          in: query
          name: offset
          description: 'Start position in the search results, used for pagination. Maximum offset number allowed is 1000000'
        - schema:
            type: string
            example: ASC
          in: query
          name: sortOrder
          description: 'Sort order. Possible values: ASC and DSC.'
        - schema:
            type: string
            example: IN
          in: query
          name: moneyFlowDirection
          description: 'Filter to be applied to the stores. Available values: IN is to be used for Paysafecash cashin and OUT for Paysafecash cashout.'
          required: true
        - schema:
            type: string
            example: 71aea8ae-e801-4df3-9436-c5a61c88d3ad
          in: query
          name: accountId
          description: Paysafe Account Id.
          required: true
      tags:
        - Paysafecash Store Locator
  /v1/balances?paymentType={paymentType}&currencyCode={currencyCode}:
    get:
      summary: Get Balance
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/balances'
              examples:
                Get Balances:
                  value:
                    - currencyCode: EUR
                      paymentType: SKRILL
                      balance: 123.12
                      gatewayResponse: 
                          gatewayAccountId: 139735755
                          processor: SKRILL_QCO
                    - currencyCode: EUR
                      paymentType: SKRILL
                      balance: 99508.71
                      gatewayResponse: 
                          gatewayAccountId: 139735756
                          processor: SKRILL_QCO
                          
      operationId: get-balance
      description: 'To get balance list for the selected payment method, enter the required data and click on  **Send API Request**.

      
                    **Note**: This is applicable to Paysafecard, Neteller and Skrill payment methods.'
      parameters:
        - schema:
            type: string
            example: PAYSAFECARD/SKRILL/NETELLER
          in: query
          name: paymentType
          description: Payment Type.
          required: true
        - schema:
            type: string
            example: EUR
          in: query
          name: currencyCode
          description: Currency code.
          required: true
        - schema:
            type: string
            example: 12345612
          in: query
          name: accountId
          description: Paysafe Account Id.
          required: false
      tags:
        - Get balance
components:
  schemas:
    accordD:
      title: accordD
      type: object
      x-stoplight:
        id: aaf37c2b8395f
      description: |-
        These are parameters for financing plans supported for certain merchant configurations.
        Include this element only when instructed to do so by your account manager.

        **Note:** Not all processing gateways support this parameter. Contact your account manager for more information.
      properties:
        financingType:
          type: string
          enum:
            - DEFERRED_PAYMENT
            - EQUAL_PAYMENT
          description: |-
            This is the type of financing offered.

            - DEFERRED_PAYMENT – Deferred payment financing.
            - EQUAL_PAYMENT – Equal payment financing
        plan:
          type: string
          description: This is the plan number for this financing transaction.
          example: '124'
          maxLength: 3
        gracePeriod:
          type: number
          description: 'This is the grace period, in months, associated with deferred payment transactions.'
          example: 12
          maximum: 99
        term:
          type: number
          description: 'This is the number of payments, in months, for equal payment transactions.'
          example: 12
          maximum: 99
    ach:
      title: ach
      x-stoplight:
        id: lst6xl0xrt99m
      type: object
      description: Details of the ach account to be used for the transaction.
      properties:
        accountHolderName:
          type: string
          description: This is the name of the customer or company.
          maxLength: 22
          example: XYZ Company
        payMethod:
          type: string
          enum:
            - WEB
            - TEL
            - PPD
            - CCD
          description: |-
            This is the payment type. Possible values are:

            - WEB - Website originated debit (Personal bank accounts only).

            - TEL - elephone-Initiated Entry (Personal bank accounts only).

            - PPD - Personal account debit (Personal bank accounts only).

            - CCD - Business account debit (Business bank accounts only).
          readOnly: true
        accountType:
          type: string
          enum:
            - SAVINGS
            - CHECKING
            - LOAN
          description: This is the bank account type.
          readOnly: true
        accountNumber:
          type: string
          minLength: 4
          maxLength: 17
          description: This is the bank account number.
          example: '988772192'
          readOnly: true
        routingNumber:
          type: string
          maxLength: 9
          example: '211589828'
          description: 'For USD accounts, this is the 9-digit routing number of the bank.'
          minLength: 9
        lastDigits:
          type: string
          maxLength: 2
          description: This is returned in response. It contains only last 2 digits of bank account.
          example: '92'
          minLength: 2
          readOnly: true
      required:
        - accountHolderName
        - accountNumber
        - routingNumber
    achBankAccount:
      title: achBankAccount
      type: object
      x-stoplight:
        id: bf3bbbca1f303
      description: This are the bank details which requires in case of enrollment/payments/payouts
      properties:
        id:
          type: string
          format: uuid
          description: The id of this bank resource.
          example: 4fc8df40-033b-47cd-952b-bffcb52374bc
          readOnly: true
        bankName:
          type: string
          description: The customers bank account name.
          example: Paysafe Test Bank
        registrationId:
          type: string
          format: uuid
          description: The corresponding registrationId associated with this bank account.
          example: ac02be45-7ae5-40b5-a9ec-234086b2640e
          readOnly: true
        routingNumber:
          type: string
          minLength: 8
          maxLength: 9
          description: The routing number of the bank.
          example: '123103729'
        accountNumber:
          type: string
          description: The customers bank account number.
          example: '12345678'
        lastDigits:
          type: string
          description: The last digits of bank account number.
          example: '78'
          readOnly: true
        paymentToken:
          type: string
          description: The unique token associated with this bank account
          example: BAxdQf1eUonA5adC
        paymentHandleToken:
          type: string
          description: The unique token associated with this bank account.
          example: BAxdQf1eUonA5adC
      x-internal: true
    achObject:
      title: ach
      x-stoplight:
        id: oa6fpqeipmrj6
      type: object
      properties:
        ach:
          $ref: '#/components/schemas/ach'
      x-internal: true
    acquirerData:
      type: object
      x-stoplight:
        id: cp3b5inydmbtv
      properties:
        code:
          type: string
          description: This is the code for your card acquirer.
          enum:
            - VAN
        discretionaryData:
          $ref: '#/components/schemas/discretionaryData'
      x-examples:
        Example:
          code: VAN
          discretionaryData:
            field1: CustomField1
            field2: CustomField2
            field3: CustomField3
      description: 'Acquirer data is additional information about your card acquirer, applicable **only when** you are using Worldpay (VAN) as your acquirer for authorizations. Contact your account manager for more information.'
      required:
        - code
    addressRequest:
      title: addressRequest
      x-stoplight:
        id: t9wgl5mb7kh0e
      type: object
      x-internal: true
      properties:
        nickName:
          type: string
          description: 'This is an alias defined by the customer for this address (e.g., "home address").'
          maxLength: 50
        street:
          type: string
          maxLength: 50
          description: |-
            This is the first line of the customer''s street address. 

            **Note:** This is required only when the address is to be used in association with a bank account.
        street2:
          type: string
          maxLength: 50
          description: 'This is the second line of the customer''s street address, if required.'
        city:
          type: string
          description: |-
            This is the city where the address is located. 

            **Note:** This is required only when the address is to be used in association with a bank account.
          example: Toronto
          maxLength: 40
        state:
          type: string
          maxLength: 40
          description: |-
            This is the state/province/region in which the customer lives.

            For Canada see [Province Codes](https://developer.paysafe.com/en/support/reference-information/codes/#province-codes). 

            For the United States see [State Codes](https://developer.paysafe.com/en/support/reference-information/codes/#state-codes). 

            Other countries have no restrictions.
        country:
          type: string
          description: 'This is the country where the address is located. See [Country Codes](https://developer.paysafe.com/en/support/reference-information/codes/#country-codes).'
          maxLength: 2
          minLength: 2
        zip:
          type: string
          description: 'This is the zip, postal, or post code of the customer''s address.'
          maxLength: 10
          example: M5H 2N2
        phone:
          type: string
          description: This is the customer's phone number.
          maxLength: 40
          example: 647-788-3901
        defaultShippingAddressIndicator:
          type: boolean
          description: Flag to mark this address as the default shipping address.
      required:
        - street
        - city
        - country
        - zip
      x-examples: {}
      description: ''
    addresses:
      allOf:
        - properties:
            id:
              type: string
              description: 'This is the ID of request, returned in the response.'
              maxLength: 36
              readOnly: true
            status:
              type: string
              description: This is the status of the address.
              enum:
                - ACTIVE
                - INITIAL
              readOnly: true
            nickName:
              type: string
              description: 'This is an alias defined by the customer for this address (e.g., "home address").'
              maxLength: 50
            street:
              type: string
              maxLength: 50
              description: |-
                This is the first line of the customer''s street address. 

                **Note:** This is required only when the address is to be used in association with a bank account.
            street2:
              type: string
              maxLength: 50
              description: 'This is the second line of the customer''s street address, if required.'
            city:
              type: string
              description: |-
                This is the city where the address is located. 

                **Note:** This is required only when the address is to be used in association with a bank account.
              example: Toronto
              maxLength: 40
            state:
              type: string
              maxLength: 40
              description: |-
                This is the state/province/region in which the customer lives.

                For Canada see [Province Codes](https://developer.paysafe.com/en/support/reference-information/codes/#province-codes). 

                For the United States see [State Codes](https://developer.paysafe.com/en/support/reference-information/codes/#state-codes). 

                Other countries have no restrictions.
            country:
              type: string
              description: 'This is the country where the address is located. See [Country Codes](https://developer.paysafe.com/en/support/reference-information/codes/#country-codes).'
              maxLength: 2
              minLength: 2
            zip:
              type: string
              description: 'This is the zip, postal, or post code of the customer''s address.'
              maxLength: 10
              example: M5H 2N2
            phone:
              type: string
              description: This is the customer's phone number.
              maxLength: 40
              example: 647-788-3901
            defaultShippingAddressIndicator:
              type: boolean
              description: Flag to mark this address as the default shipping address.
      type: object
      title: addresses
      description: These are the address details associated with the customer.
      x-examples:
        Example:
          id: 921cd968-6882-422c-ae4f-a10ddbae95ff
          nickName: Home
          street: N.G.O's Colony
          street2: Besdie Sri Ramakrishna P.G College
          city: Nandyal
          state: 'ON'
          country: CA
          zip: '518502'
          phone: 647-788-3901
          status: ACTIVE
          defaultShippingAddressIndicator: false
    airlineTravelDetails:
      title: airlineTravelDetails
      x-stoplight:
        id: ry9iju629b50a
      type: object
      description: |-
        Contains information about your airline travel.

        >**Note:** This object is only for Airline Merchants.

        >**Note:** This field has to be passed only in case of card transactions.
      x-examples:
        Example 1:
          airlineTravelDetails:
            passengerNameRecord: ABCDE12345
            passengerName: Joe Smith
            departureDate: '2021-01-26'
            origin: SXF
            computerizedReservationSystem: DATS
            ticket:
              ticketNumber: 1234567891011
              isRestrictedTicket: false
            customerReferenceNumber: 10987654321
            travelAgency:
              name: MY AGENT
              code: MYAGENT3
            tripLegs:
              leg1:
                flight:
                  carrierCode: LH
                  flightNumber: '0799'
                serviceClass: F
                isStopOverAllowed: 'true'
                destination: ISL
                fareBasis: VMAY
                departureDate: '2021-01-26'
              leg2:
                flight:
                  carrierCode: TK
                  flightNumber: '1385'
                serviceClass: F
                isStopOverAllowed: 'true'
                destination: SOF
                fareBasis: VMAY
                departureDate: '2021-01-26'
      properties:
        passengerNameRecord:
          type: string
          maxLength: 10
          description: The airline company uses the passengerNameRecord as a reservation number.
          example: ABCDE12345
        passengerName:
          type: string
          maxLength: 20
          description: Name of the passenger to whom the ticket was issued.
          example: Venkata Suresh
        departureDate:
          type: string
          format: date
          description: 'Date of passenger’s departure. Date format = YYYY-MM-DD, ISO 8601 expected. For example 2022-12-20.'
          example: '2022-12-20'
        origin:
          type: string
          minLength: 3
          maxLength: 3
          description: 'Departure Airport Code: IATA Airport Code.'
          example: SXF
        computerizedReservationSystem:
          type: string
          enum:
            - STRT
            - PARS
            - DATS
            - SABR
            - DALA
            - BLAN
            - DERD
            - TUID
          description: |-
            Indicates the computerized reservation system used to make the reservation and purchase the ticket. For tickets purchased in Germany, this field should one of these codes:

            - STRT - Start

            - PARS - TWA

            - DATS - Delta

            - SABR - Sabre

            - DALA - Covia-Apollo

            - BLAN - Dr. Blank

            - DERD - DER

            - TUID - TUI

            >**Note:** Required only if the ticket is purchased in Germany. Otherwise it can be omitted.
          example: DATS
        additionalBookingReference:
          type: string
          maxLength: 50
          description: 'BookingReference field. Typically used for the PNR, but should allow an airline to specify any other reference if they feel fit.'
        totalFare:
          type: number
          description: 'Total fare for all legs on the ticket, excluding taxes and fees. If multiple tickets are purchased, this is the total fare for all tickets'
        totalFee:
          type: number
          description: 'Total fee for all legs on the ticket. If multiple tickets are purchased, this is the total fee for all tickets.'
        totalTaxes:
          type: number
          description: 'Total taxes for all legs on the ticket. If multiple tickets are purchased, this is the total taxes for all tickets.'
        ticket:
          $ref: '#/components/schemas/ticket'
        passengers:
          $ref: '#/components/schemas/passengers'
        customerReferenceNumber:
          type: string
          maxLength: 20
          description: Contains the code that the cardholder supplied to the card acceptor.
          example: '10987654321'
        travelAgency:
          $ref: '#/components/schemas/travelAgency'
        tripLegs:
          $ref: '#/components/schemas/tripLegs'
      required:
        - passengerName
        - departureDate
        - origin
    applePay:
      title: applePay
      x-stoplight:
        id: idkq059omubd3
      type: object
      description: Details of ApplePay Payment token returned by Apple Pay/Paysafe Js SDK.
      x-examples:
        Encrypted Apple Pay payload:
          label: PaywithApple
          requestBillingAddress: true
          applePayPaymentToken:
            token:
              paymentData:
                data: crc1wsCG/2WWXtXQPoOsgtjJoKQSbwc7L6lHgHmLKg30a9Z6l4Ph/xUoEelUxE4G6UNMuxgEn1FRm1zDOcbFKNksI/Q/Nk75bybUWGAilXZ7VghYRjzjvmKKOHTMVkU8vTn4mbQGrTiyAsVPkCuF5BuuEM0C2QiAhDb5Tz5xyna3dv3hAgTLdyDlbI1vs1hBb2KaDUkF9InzYB5BoExMauqn6/8WR8noi0FUHJYejsAmlLgbXi98OnkFcueQwKgXICQmg6l+NR3H28RZRLTTnP1+gdHk3oMiozLliDwY1cBlPz7EQDT4VWUWRIkhJIiKHLb/p/Wn3S+sjbzruIQ007mVx3BTYwNQM+9W01t940sO8w7pbmhmWOAIvsYq/mft6dEFNIQt3Urr0ieF
                signature: MIAGCSqGSIb3DQEHAqCAMIACAQExDzANBglghkgBZQMEAgEFADCABgkqhkiG9w0BBwEAAKCAMIID5DCCA4ugAwIBAgIIWdihvKr0480wCgYIKoZIzj0EAwIwejEuMCwGA1UEAwwlQXBwbGUgQXBwbGljYXRpb24gSW50ZWdyYXRpb24gQ0EgLSBHMzEmMCQGA1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMB4XDTIxMDQyMDE5MzcwMFoXDTI2MDQxOTE5MzY1OVowYjEoMCYGA1UEAwwfZWNjLXNtcC1icm9rZXItc2lnbl9VQzQtU0FOREJPWDEUMBIGA1UECwwLaU9TIFN5c3RlbXMxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEgjD9q8Oc914gLFDZm0US5jfiqQHdbLPgsc1LUmeY+M9OvegaJajCHkwz3c6OKpbC9q+hkwNFxOh6RCbOlRsSlaOCAhEwggINMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAUI/JJxE+T5O8n5sT2KGw/orv9LkswRQYIKwYBBQUHAQEEOTA3MDUGCCsGAQUFBzABhilodHRwOi8vb2NzcC5hcHBsZS5jb20vb2NzcDA0LWFwcGxlYWljYTMwMjCCAR0GA1UdIASCARQwggEQMIIBDAYJKoZIhvdjZAUBMIH+MIHDBggrBgEFBQcCAjCBtgyBs1JlbGlhbmNlIG9uIHRoaXMgY2VydGlmaWNhdGUgYnkgYW55IHBhcnR5IGFzc3VtZXMgYWNjZXB0YW5jZSBvZiB0aGUgdGhlbiBhcHBsaWNhYmxlIHN0YW5kYXJkIHRlcm1zIGFuZCBjb25kaXRpb25zIG9mIHVzZSwgY2VydGlmaWNhdGUgcG9saWN5IGFuZCBjZXJ0aWZpY2F0aW9uIHByYWN0aWNlIHN0YXRlbWVudHMuMDYGCCsGAQUFBwIBFipodHRwOi8vd3d3LmFwcGxlLmNvbS9jZXJ0aWZpY2F0ZWF1dGhvcml0eS8wNAYDVR0fBC0wKzApoCegJYYjaHR0cDovL2NybC5hcHBsZS5jb20vYXBwbGVhaWNhMy5jcmwwHQYDVR0OBBYEFAIkMAua7u1GMZekplopnkJxghxFMA4GA1UdDwEB/wQEAwIHgDAPBgkqhkiG92NkBh0EAgUAMAoGCCqGSM49BAMCA0cAMEQCIHShsyTbQklDDdMnTFB0xICNmh9IDjqFxcE2JWYyX7yjAiBpNpBTq/ULWlL59gBNxYqtbFCn1ghoN5DgpzrQHkrZgTCCAu4wggJ1oAMCAQICCEltL786mNqXMAoGCCqGSM49BAMCMGcxGzAZBgNVBAMMEkFwcGxlIFJvb3QgQ0EgLSBHMzEmMCQGA1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMB4XDTE0MDUwNjIzNDYzMFoXDTI5MDUwNjIzNDYzMFowejEuMCwGA1UEAwwlQXBwbGUgQXBwbGljYXRpb24gSW50ZWdyYXRpb24gQ0EgLSBHMzEmMCQGA1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE8BcRhBnXZIXVGl4lgQd26ICi7957rk3gjfxLk+EzVtVmWzWuItCXdg0iTnu6CP12F86Iy3a7ZnC+yOgphP9URaOB9zCB9DBGBggrBgEFBQcBAQQ6MDgwNgYIKwYBBQUHMAGGKmh0dHA6Ly9vY3NwLmFwcGxlLmNvbS9vY3NwMDQtYXBwbGVyb290Y2FnMzAdBgNVHQ4EFgQUI/JJxE+T5O8n5sT2KGw/orv9LkswDwYDVR0TAQH/BAUwAwEB/zAfBgNVHSMEGDAWgBS7sN6hWDOImqSKmd6+veuv2sskqzA3BgNVHR8EMDAuMCygKqAohiZodHRwOi8vY3JsLmFwcGxlLmNvbS9hcHBsZXJvb3RjYWczLmNybDAOBgNVHQ8BAf8EBAMCAQYwEAYKKoZIhvdjZAYCDgQCBQAwCgYIKoZIzj0EAwIDZwAwZAIwOs9yg1EWmbGG+zXDVspiv/QX7dkPdU2ijr7xnIFeQreJ+Jj3m1mfmNVBDY+d6cL+AjAyLdVEIbCjBXdsXfM4O5Bn/Rd8LCFtlk/GcmmCEm9U+Hp9G5nLmwmJIWEGmQ8Jkh0AADGCAYwwggGIAgEBMIGGMHoxLjAsBgNVBAMMJUFwcGxlIEFwcGxpY2F0aW9uIEludGVncmF0aW9uIENBIC0gRzMxJjAkBgNVBAsMHUFwcGxlIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUwIIWdihvKr0480wDQYJYIZIAWUDBAIBBQCggZUwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMjEwOTA5MTUxMDIzWjAqBgkqhkiG9w0BCTQxHTAbMA0GCWCGSAFlAwQCAQUAoQoGCCqGSM49BAMCMC8GCSqGSIb3DQEJBDEiBCALhfgr30p4YER31+Gpjqy12gCF3knS1vKEHAFOr41UWjAKBggqhkjOPQQDAgRHMEUCIClcW39OnFDHNA0Klj+f90ydMz8MUz1jIRCWjZl6G5+6AiEApNrnBuLx9Z004GEuG4LBUp1paIuFYG96rdJXq7L9cjUAAAAAAAA=
                header:
                  publicKeyHash: jaI8zb3+bTPrkEHLe/edIBuRjWbkRm1YKtUXX/FuIRw=
                  ephemeralPublicKey: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE41aqNv3ogcZU+oMSztrAwyfZJPYZaSLVhObI5FxRwjd609HFwsJ7Fy4lFmSvl4pqwn+gAw5OB8sfpzIfDWuYCQ==
                  transactionId: c852f15513dd58f97b6b4094e3f897087d95d8f1fe08dc00bc39179aae434e31
                version: EC_v1
              paymentMethod:
                displayName: MasterCard1470
                network: MasterCard
                type: credit
              transactionIdentifier: C852F15513DD58F97B6B4094E3F897087D95D8F1FE08DC00BC39179AAE434E31
            billingContact:
              addressLines:
                - 19111Deertrl
              administrativeArea: ''
              country: USA
              countryCode: US
              familyName: Nasov
              givenName: Nike
              locality: Cumming
              phoneticFamilyName: ''
              phoneticGivenName: ''
              postalCode: '30004'
              subAdministrativeArea: GA
              subLocality: ''
        Decrypted ApplePay Payload:
          label: string
          requestBillingAddress: false
          applePayPaymentToken:
            token:
              paymentData:
                decryptedData:
                  applicationPrimaryAccountNumber: string
                  applicationExpirationDate: string
                  currencyCode: string
                  transactionAmount: string
                  cardholderName: string
                  deviceManufacturerIdentifier: string
                  paymentDataType: string
                  paymentData:
                    onlinePaymentCryptogram: string
                    eciIndicator: string
              paymentMethod:
                displayName: string
                network: string
                type: string
              transactionIdentifier: string
            billingContact:
              addressLines:
                - string
              administrativeArea: string
              country: string
              countryCode: string
              familyName: string
              givenName: string
              locality: string
              phoneticFamilyName: string
              phoneticGivenName: string
              postalCode: string
              subAdministrativeArea: string
              subLocality: string
      properties:
        label:
          type: string
          description: Label displayed immediately after the "Pay" button on the Apple Pay payment window.
        requestBillingAddress:
          type: boolean
          default: false
          description: 'Boolean flag to indicate whether user should provide billing details or not  '
        applePayPaymentToken:
          type: object
          properties:
            token:
              type: object
              description: This object contains the user's payment credentials.
              properties:
                paymentData:
                  oneOf:
                    - $ref: '#/components/schemas/applePayToken'
                    - $ref: '#/components/schemas/applePayDecryptedToken'
                paymentMethod:
                  type: object
                  description: Payment method parameter of Apple Pay Token
                  properties:
                    displayName:
                      type: string
                      description: Display name property of Apple Pay Payment Method
                    network:
                      type: string
                      description: Network property of Apple Pay Payment Method
                    type:
                      type: string
                      description: Type property of Apple Pay Payment Method
                transactionIdentifier:
                  type: string
                  description: Transaction identifier parameter of Apple Pay Token
            billingContact:
              type: object
              description: The billing contact selected by the user for this transaction.
              properties:
                addressLines:
                  type: array
                  description: The street portion of the address for the contact.
                  items:
                    type: string
                administrativeArea:
                  type: string
                  description: The state for the contact.
                country:
                  type: string
                  description: The name of the country or region for the contact.
                countryCode:
                  type: string
                  description: The contact’s two-letter ISO 3166 country code.
                familyName:
                  type: string
                  description: The contact’s family name.
                givenName:
                  type: string
                  description: The contact’s given name.
                locality:
                  type: string
                  description: The city for the contact.
                phoneticFamilyName:
                  type: string
                  description: The phonetic spelling of the contact's family name.
                phoneticGivenName:
                  type: string
                  description: The phonetic spelling of the contact's given name.
                postalCode:
                  type: string
                  description: 'The zip code or postal code, where applicable, for the contact.'
                subAdministrativeArea:
                  type: string
                  description: The subadministrative area (such as a county or other region) in a postal address.
                subLocality:
                  type: string
                  description: |
                    Additional information associated with the location, typically defined at the city or town level (such as district or neighborhood), in a postal address.
    applePayDecryptedToken:
      title: applePayDecryptedToken
      type: object
      description: Details of ApplePay Payment token returned by Apple Pay/Paysafe Js SDK.
      properties:
        decryptedData:
          type: object
          properties:
            applicationPrimaryAccountNumber:
              type: string
              description: The DPAN of the ApplePay card.
              example: '5076020000000006'
            applicationExpirationDate:
              type: string
              description: The expiration date.
              example: '231111'
            currencyCode:
              type: string
              description: The currency code.
              example: '840'
            transactionAmount:
              type: string
              description: The transaction amount.
              example: '1499'
            cardholderName:
              type: string
              description: The cardholder's name.
              example: John Doe
            deviceManufacturerIdentifier:
              type: string
              description: The device manufacturer identifier.
              example: OPAY
            paymentDataType:
              type: string
              description: The payment data type.
              example: 3DSecure
            paymentData:
              type: object
              properties:
                onlinePaymentCryptogram:
                  type: string
                  example: PAYMENT_CRYPTOGRAM
                  description: The cryptogram for this payment.
                eciIndicator:
                  type: string
                  example: '7'
                  description: The ECI indicator.
      x-stoplight:
        id: 9a81e5558c738
      x-internal: true
    applePayToken:
      title: applePayToken
      type: object
      description: Details of ApplePay Payment token returned by Apple Pay/Paysafe Js SDK.
      properties:
        version:
          type: string
          description: Version parameter of Apple Pay Token
        data:
          type: string
          description: Apple Pay data hash of customer card
        signature:
          type: string
          description: Apple pay signature data
        header:
          type: object
          description: Header parameter of Apple Pay Token
          properties:
            transactionId:
              type: string
            ephemeralPublicKey:
              type: string
            publicKeyHash:
              type: string
      x-internal: true
      x-stoplight:
        id: 895224ec4356d
    applePayTokenDetails:
      title: applePayTokenDetails
      type: object
      description: When tokenType=APPLE_PAY. Apple Pay token information. Returned when the stored payment method is an Apple Pay token.
      properties:
        bin:
          type: string
          description: The first 6 digits of the Apple Pay's DPAN (Device Primary Account Number) - Bank Identification Number (BIN)
          maxLength: 6
          example: '411111'
          readOnly: true
        lastDigits:
          type: string
          description: This is the last digits of the Apple Pay's token.
          readOnly: true
        expiry:
          description: This is the expiry date of the DPAN (the token).
          $ref: '#/components/schemas/tokenExpiry'
        status:
          type: string
          enum:
            - ACTIVE
            - EXPIRED
            - DISABLED
          example: ACTIVE
          description: This is the status of the token.
          readOnly: true
      x-stoplight:
        id: 9dd8b05d04aea
    cardApplePayTokenDetails:
      type: object
      x-internal: true
      x-stoplight:
        id: 07291cd7fbf90
      properties:
        tokenType:
          type: string
          enum:
            - APPLE_PAY
        applePay:
          $ref: '#/components/schemas/applePayTokenDetails'
      title: Card with ApplePay Token
    applePayObject:
      title: applePay
      x-stoplight:
        id: d6dtn663chg6w
      type: object
      properties:
        applePay:
          $ref: '#/components/schemas/applePay'
      x-internal: true
    auths:
      title: auths
      x-stoplight:
        id: f96z77073nhfu
      type: object
      properties:
        fundingTransaction:
          $ref: '#/components/schemas/fundingTransaction'
      description: |-
        **Note:**

        - Not all processing gateways support this parameter.

        - To use the fundingTransaction object your account must be configured by Paysafe.

        - If you want to support funding transactions for additional MCCs, please contact Paysafe's operational support.
      x-internal: true
    authentication:
      title: authentication
      type: object
      description: 3D Secure authentication details.
      properties:
        id:
          type: string
          description: 'This is the ID of authentication, returned in the response.'
          example: 5d4db3bc-34c9-417f-a051-0d992ad9284e
          readOnly: true
        eci:
          type: number
          example: 5
          description: |-
            This is the E-Commerce Indicator (ECI). This value will be returned only on payer authentication transactions, or for enrollments where the issuer is non-participating and the card scheme supports it. This value must be appended to the authorization request, where it enables the interchange benefits granted to merchants processing payer Authentication transactions.

            **Visa**

            - 5 – Identifies a successfully authenticated transaction.

            - 6 – Identifies an attempts authenticated transaction.

            - 7 – Identifies a non-authenticated transaction.

            **Mastercard**

            - 1 - Identifies a non-authenticated transaction.

            - 2 - Identifies a successfully authenticated transaction.
          readOnly: true
        cavv:
          type: string
          description: |-
            This is the Cardholder Authentication Verification Value, indicating that the transaction has been 
            authenticated. This value should be appended to the authorization request signifying that the 
            transaction has been successfully authenticated.
          example: AAABBhkXYgAAAAACBxdiENhf7A+=
          maxLength: 80
          readOnly: true
        xid:
          type: string
          description: This is the transaction identifier returned by the card issuer.
          example: aWg4N1ZZOE53TkFrazJuMmkyRDA=
          maxLength: 40
          readOnly: true
        status:
          type: string
          enum:
            - 'COMPLETED '
            - FAILED
          description: |-
            This is the status of the Enrollment Lookup request. Possible values are:

            - COMPLETED - The transaction has been completed.

            - FAILED - The authentication request failed. Check the error code for details.
          readOnly: true
        merchantRefNum:
          type: string
          description: |-
            This is the merchant reference number created by 
            the merchant and submitted as part of the request. It must be unique for each request.
          example: merchantABC-123-authentications
          maxLength: 255
          readOnly: true
        threeDEnrollment:
          type: string
          description: |-
            This indicates whether or not the cardholder is enrolled in 3D Secure. Possible values are:

            - Y – Cardholder authentication available.

            - N – Cardholder not enrolled in authentication.

            - U – Cardholder authentication unavailable
          enum:
            - 'Y'
            - 'N'
            - U
          readOnly: true
        threeDResult:
          type: string
          description: |-
            This indicates the outcome of the Authentication.

            - Y – The cardholder successfully authenticated with their card issuer.

            - A – The cardholder authentication was attempted.

            - N – The cardholder failed to successfully authenticate with their card issuer.

            - U – Authentication with the card issuer was unavailable.

            - E – An error occurred during authentication.
          enum:
            - 'Y'
            - A
            - 'N'
            - U
            - E
          readOnly: true
        signatureStatus:
          type: string
          enum:
            - 'Y'
            - 'N'
          description: |-
            This is the 3D Secure signature verification result value.
            - Y – All transaction and signature checks satisfied.

            - N – At least one transaction or signature check failed.
          readOnly: true
        exemptionIndicator: 
          type: string
          enum:
            - LOW_VALUE_EXEMPTION
            - TRA_EXEMPTION 
          description: |- 
            This exemption gives the customer the option to bypass the Strong Customer Authentication. Note: This exists only for 3D Secure 2.
            
            - LOW_VALUE_EXEMPTION - This exemption is valid only for transactions lower or equal to 30 euro, not exceeding five transactions in a row or 100 euro total amount transactions with no SCA (Strong Customer Authentication)
            
            - TRA_EXEMPTION - The exemption applies specifically to transactions that are 100 euros or lower. However, there could be additional criteria that need to be considered. Please reach out to your account manager for further details.
          read-only: true   
          example: TRA_EXEMPTION
        error:
          $ref: '#/components/schemas/error'
      x-stoplight:
        id: db125d3423294
      x-examples:
        Example 1:
          id: 5d4db3bc-34c9-417f-a051-0d992ad9284e
          eci: 5
          cavv: AAABBhkXYgAAAAACBxdiENhf7A+=
          xid: aWg4N1ZZOE53TkFrazJuMmkyRDA=
          status: 'COMPLETED '
          merchantRefNum: merchantABC-123-authentications
          threeDEnrollment: 'Y'
          threeDResult: 'Y'
          signatureStatus: 'Y'
          exemptionIndicator: 'LOW_VALUE_EXEMPTION'
    bacs:
      title: bacs
      type: object
      description: Details of the bacs account to be used for the transaction.
      x-stoplight:
        id: be287b131ce4b
      properties:
        nickName:
          type: string
          description: This is an alias for this bank account.
          example: Sally's Barclays Account
          maxLength: 50
        accountHolderName:
          type: string
          description: This is the name of the customer or company that owns the bank account.
          example: XYZ Company
          maxLength: 18
        accountNumber:
          type: string
          description: This is the bank account number.
          example: '98877219'
          maxLength: 8
        sortCode:
          type: string
          description: This is the 6-digit sort code that identifies the financial institution and branch of the customer’s bank.
          example: '321654'
          maxLength: 6
        mandate:
          $ref: '#/components/schemas/mandate'
        lastDigits:
          type: string
          description: |-
            These are the last two digits of the account 
            number.
          example: '11'
          maxLength: 2
          readOnly: true
      required:
        - accountHolderName
        - accountNumber
        - sortCode
        - mandate
    bacsObject:
      title: bacs
      x-stoplight:
        id: dan3i5pwkpyai
      type: object
      x-internal: true
      properties:
        bacs:
          $ref: '#/components/schemas/bacs'
        mandates:
          type: array
          items:
            $ref: '#/components/schemas/mandate'
    billingDetails:
      title: billingDetails
      type: object
      x-examples:
        Example 1:
          street1: 100 Queen
          street2: Unit 201
          city: Toronto
          state: 'ON'
          country: CA
          zip: M5H 2N2
      description: |
        Customer's billing details.

        >**Note:** For single-use Payment Handles, this address information will be ignored if the paymentHandleTokenFrom parameter is included in the Payment Handle creation request and there is already address information associated with that customer.
      x-stoplight:
        id: a5a665e99ebc8
      properties:
        id:
          type: string
          maxLength: 36
          description: 'This is the ID of the billing address, returned in the response.'
          readOnly: true
        status:
          type: string
          description: This is the status of the address.
          readOnly: true
        nickName:
          type: string
          maxLength: 50
          description: |-
            This is the nickname the merchant has for the 
            billing address.
          example: Home
        street:
          type: string
          maxLength: 50
          description: This is the first line of the customer's street address.
          example: Street
        street1:
          type: string
          description: |-
            This is the first line of the street address.

            **Note:** Mandatory for VIPPreferred
          maxLength: 50
          example: street1
        street2:
          type: string
          description: 'This is the second line of the street address, if required (e.g., apartment number).'
          maxLength: 50
          example: street2
        city:
          type: string
          description: This is the city where the address is located.
          example: Toronto
          maxLength: 40
        state:
          type: string
          description: |-
            This is the state/province/region in which the 
            customer lives. 

            - For Canada see [Province Codes](https://developer.paysafe.com/en/support/reference-information/codes/#province-codes)

            - For the United States see [State Code](https://developer.paysafe.com/en/support/reference-information/codes/#state-codes)

            - Other countries have no restrictions.
            
            - For 3DS flow: If billingDetails is provided and country is US or CA, then state is mandatory.
          example: 'ON'
          maxLength: 40
          minLength: 2
        country:
          type: string
          description: |-
            This is the country where the address is located. 
            See [Country Codes](https://developer.paysafe.com/en/support/reference-information/codes/#country-codes).
          example: CA
          maxLength: 2
          minLength: 2
        zip:
          type: string
          description: |-
            This is the zip, postal, or post code of the 
            customer's address.
          example: M5H 2N2
          maxLength: 10
        phone:
          type: string
          maxLength: 40
          description: This is the customer's telephone number.
          example: '8765846321'
      required:
        - street
        - city
        - country
        - zip
    billingCycle:
      title: billingCycle
      x-stoplight:
        id: t9ek6bgbn9rx7
      type: object
      properties:
        endDate:
          type: string
          format: date
          description: 'This is the date after which no further authorizations will be performed. The ISO 8601 date format is expected, i.e., YYYY-MM-DD.'
        frequency:
          type: number
          description: This is the minimum number of days between authorizations.
      description: |-
        Details of the billing cycle information for recurring payments.

        >**Note:** This object is required if authenticationPurpose = INSTALMENT_TRANSACTION or RECURRING_TRANSACTION.
    browserDetails:
      title: browserDetails
      x-stoplight:
        id: sqcg6z5qxlanc
      type: object
      properties:
        acceptHeader:
          type: string
          description: 'This is the exact content of the HTTP accept header as sent to the 3DS Requestor from the cardholder’s browser. '
          maxLength: 2048
        colorDepthBits:
          type: string
          enum:
            - '1'
            - '4'
            - '5'
            - '15'
            - '16'
            - '24'
            - '32'
            - '48'
          description: 'This is the bit depth of the color palette for displaying images, in bits per pixel.'
        customerIp:
          type: string
          description: This is the customer's IP address. Valid Ip address format are IPv4 / IPv6.
        javaEnabled:
          type: boolean
          description: This indicates whether the cardholder's browser is able to execute Java.
        javascriptEnabled:
          type: boolean
          description: This indicates whether the cardholder's browser is able to execute JavaScript.
        language:
          type: string
          maxLength: 8
          description: This is the language in the browser.
        screenHeight:
          type: number
          maximum: 999999
          description: This is the total height of the cardholder’s screen in pixels.
        screenWidth:
          type: number
          description: This is the total width of the cardholder’s screen in pixels.
          maximum: 999999
        timezoneOffset:
          type: number
          description: This is the time-zone offset in minutes between UTC and the local time of the cardholder's browser.
          maximum: 99999
        userAgent:
          type: string
          description: 'This is the User-Agent header from the customer''s browser. For example:Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36'
          maxLength: 256
      required:
        - acceptHeader
        - colorDepthBits
        - customerIp
        - javaEnabled
        - javascriptEnabled
        - language
        - screenHeight
        - screenWidth
        - timezoneOffset
        - userAgent
      x-examples:
        Example:
          acceptHeader: '*/*'
          colorDepthBits: '24'
          customerIp: 207.48.141.20
          javascriptEnabled: true
          javaEnabled: true
          language: en-US
          screenHeight: 768
          screenWidth: 1024
          timezoneOffset: 240
          userAgent: Mozilla/4.0 (compatible; Win32; WinHttp.WinHttpRequest.5)
      description: |-
        These are the browser details.

        >**Note:** This object is not required if the Paysafe SDK is used for device fingerprinting.
    boletoBancario:
      title: boletoBancario via Safetypay Express
      x-stoplight:
        id: ynxeww66m7ut9
      type: object
      description: These are the details of the Boleto Bancario account used for the request.
      x-internal: true
      x-examples:
        BoletoBancario:
          consumerId: merchantclientid
          minAgeRestriction: 18
          kycLevelRestriction: SIMPLE
          countryRestriction: DE
          expirationTime: '10'
      properties:
        paymentExpiryInMinutes:
          type: number
          description: It is the transaction expiry in minutes at Safetypay.
    card:
      title: card
      type: object
      description: 'Card details to be used for the transaction '
      x-examples:
        Example 1:
          cardNum: '4111111111111111'
          cardExpiry:
            month: 12
            year: 2022
          cvv: '024'
          holderName: Suresh's card
          cardType: AM
          lastDigits: '1111'
          nickName: string
          issuingCountry: US
          cardBin: '411111'
          status: ACTIVE
      oneOf:
        - type: object
          description: No value when card has no token.
        - $ref: '#/components/schemas/cardApplePayTokenDetails'
      properties:
        cardNum:
          type: string
          description: This is the card number used for the request.
          minLength: 8
          maxLength: 20
          example: '4111111111111111'
        cardExpiry:
          $ref: '#/components/schemas/cardExpiry'
        cvv:
          type: string
          pattern: '^([0-9]{3,4})$'
          minLength: 3
          maxLength: 4
          description: This is the 3- or 4-digit security code that appears on the card following the card number.
        holderName:
          type: string
          description: |-
            This is the name of the card holder.
            
            - For 3DS2, Holder name must contain only Latin characters (English Alphabet), Space, Apostrophe('), Dot(.) or Hyphen(-).
          maxLength: 50
          example: Suresh
          readOnly: true
        cardType:
          type: string
          enum:
            - AM
            - DI
            - JC
            - MC
            - MD
            - SO
            - VI
            - VD
            - VE
          description: |-
            This is type of card used for the request.

              - AM – American Express

              - DI – Discover

              - JC – JCB

              - MC – Mastercard

              - MD – Maestro

              - SO – Solo

              - VI – Visa

              - VD – Visa Debit

              - VE – Visa Electron
        lastDigits:
          type: string
          description: These are the last four digits of the card used for the request.
          readOnly: true
        nickName:
          type: string
          description: This is the nickname the merchant has for the card holder.
        cardBin:
          type: string
          description: 'These are the first 6 digits of the card Bank Identification Number (BIN), for example: the first 6 digits of the card number.'
          maxLength: 6
          example: '411111'
          readOnly: true
        issuingCountry:
          type: string
          description: This is the card issuing country.
          example: US
        status:
          type: string
          enum:
            - ACTIVE
            - SUSPENDED
          example: ACTIVE
          description: '**Optional**: Is present only if the card is part of a Customer.'
          readOnly: true
      required:
        - cardNum
    cardBaseFieldsWithOptionalNetworkTokenOrApplePay:
      title: Card 
      type: object
      anyOf:
        - $ref: '#/components/schemas/cardFieldPlaceholder'
        - $ref: '#/components/schemas/cardApplePayTokenDetails'
        - $ref: '#/components/schemas/networkTokenFields'
      properties:
        lastDigits:
          type: string
          description: These are the last four digits of the card used for the request.
          readOnly: true
        cardExpiry:
          $ref: '#/components/schemas/cardExpiry'
        cardBin:
          type: string
          description: 'These are the first 6 digits of the card Bank Identification Number (BIN), for example: the first 6 digits of the card number.'
          maxLength: 6
          example: '411111'
          readOnly: true
        cardType:
          type: string
          enum:
            - AM
            - DI
            - JC
            - MC
            - MD
            - SO
            - VI
            - VD
            - VE
          description: |-
            This is type of card used for the request.

              - AM – American Express

              - DI – Discover

              - JC – JCB

              - MC – Mastercard

              - MD – Maestro

              - SO – Solo

              - VI – Visa

              - VD – Visa Debit

              - VE – Visa Electron
        holderName:
          type: string
          description: |-
            This is the name of the card holder.
            
            - For 3DS2, Holder name must contain only Latin characters (English Alphabet), Space, Apostrophe('), Dot(.) or Hyphen(-).
          maxLength: 50
          example: Suresh
          readOnly: true
        status:
          type: string
          enum:
            - ACTIVE
            - SUSPENDED
          example: ACTIVE
          description: '**Optional**: Is present only if the card is stored for the Customer.'
          readOnly: true
        cardCategory:
          type: string
          enum:
            - CREDIT
            - DEBIT
          description: 'The type of card being used. CREDIT or DEBIT'
    cardFieldPlaceholder:
      title: Card
    cardObject:
      title: card
      x-stoplight:
        id: 19soodx90lymv
      type: object
      x-internal: true
      properties:
        card:
          $ref: '#/components/schemas/card'
        splitpay:
          $ref: '#/components/schemas/splitpay'
        threeDs:
          $ref: '#/components/schemas/threeDs'
        authentication:
          description: 3D Secure authentication details.
          properties:
            exemptionIndicator:
              $ref: '#/components/schemas/authentication/properties/exemptionIndicator'
        paymentHandleTokenFrom:
          type: string
          description: 'This is an existing [Customer Payment Handle](/operations/create-payment-handle-for-customer), from which the payment instrument and profile details are retrieved. If this parameter is included you can omit the billingDetails object.'
        transactionIntent:
          $ref: '#/components/schemas/transactionIntent'
    cardObjectForCustomer:
      title: card
      x-stoplight:
        id: 19soodx90lymv
      type: object
      x-internal: true
      properties:
        card:
          $ref: '#/components/schemas/card'
        paymentHandleTokenFrom:
          type: string
          description: 'This is an existing [Customer Payment Handle](/operations/create-payment-handle-for-customer), from which the payment instrument and profile details are retrieved. If this parameter is included you can omit the billingDetails object.'
    cardExpiry:
      title: cardExpiry
      type: object
      description: This is the card's expiry date.
      x-stoplight:
        id: cf9568d0c798d
      properties:
        month:
          type: number
          example: 12
          description: This is the card expiry month.
          maximum: 12
        year:
          type: number
          example: 2022
          description: ' This is the card expiry year.'
          maximum: 9999
      required:
        - month
        - year
    tokenExpiry:
      title: tokenExpiry
      type: object
      description: This is the token's expiry date.
      x-stoplight:
        id: 09a1f1f709252
      properties:
        month:
          type: number
          example: 12
          description: This is the token expiry month.
          maximum: 12
        year:
          type: number
          example: 2023
          description: ' This is the token expiry year.'
          maximum: 9999
      required:
        - month
        - year
    cardTypeConfig:
      title: cardTypeConfig
      x-stoplight:
        id: csw6o5fll1bym
      type: object
      description: |
        Map of cardBrand and card type for CardType config.

        Possible Values for the CardBrand are:
          - VI - Visa

          - MC - MasterCard

          - DI - Discover

          - AM - American Express

          - DC - Diners Club

          - VE - Visa Electron

          - MD - Maestro
          
        Possible values for the CardType are:

          - CREDIT
          
          - DEBIT
          
          - BOTH
          
          - PREPAID
          
          - DEFERREDDEBIT
          
      properties:
        VI:
          type: string
          enum:
            - CREDIT
            - DEBIT
            - BOTH
            - PREPAID
            - DEFERREDDEBIT
        MC:
          type: string
          enum:
            - CREDIT
            - DEBIT
            - BOTH
            - PREPAID
            - DEFERREDDEBIT
        DI:
          type: string
          enum:
            - CREDIT
            - DEBIT
            - BOTH
            - PREPAID
            - DEFERREDDEBIT
        AM:
          type: string
          enum:
            - CREDIT
            - DEBIT
            - BOTH
            - PREPAID
            - DEFERREDDEBI
        DC:
          type: string
          enum:
            - CREDIT
            - DEBIT
            - BOTH
            - PREPAID
            - DEFERREDDEBIT
        VE:
          type: string
          enum:
            - CREDIT
            - DEBIT
            - BOTH
            - PREPAID
            - DEFERREDDEBIT
        MD:
          type: string
          enum:
            - CREDIT
            - DEBIT
            - BOTH
            - PREPAID
            - DEFERREDDEBIT
      x-internal: true
    cancelRequest:
      title: cancelRequest
      x-stoplight:
        id: 6i69kpnpauzzf
      type: object
      x-internal: true
      description: These are the internal details of the cancel request.
      properties:
        status:
          type: string
          example: CANCELLED
          enum:
            - CANCELLED
          description: 'This is the status of the cancel request. '
    cancelResponse:
      allOf:
        - type: object
          properties:
            id:
              type: string
              description: 'This is the ID returned in the response. This ID can be used for future associated requests, for example, to look up the Payment.'
              readOnly: true
            txnTime:
              type: string
              format: date-time
              description: This is the date and time the transaction was processed.
        - $ref: '#/components/schemas/cancelRequest'
      title: cancelResponse
      x-internal: true
    carRentalDetails:
      title: carRentalDetails
      type: object
      description: |-
        Contains information about your car rental.

        >**Note:** This object is only for Car rental Merchants.

        >**Note:** This field has to be passed only in case of card transactions.
      x-examples:
        Example 1:
          rentalAgreementNumber: '123456789'
          renterName: Renter Name
          rentalDays: 7
          noShow: false
          extraCharges:
            - GASOLINE
            - MILEAGE
            - LATE_RETURN
            - ONE_WAY_SERVICE_FEE
            - DRIVING_VIOLATION
          customerServicePhone: '8311234567'
          returnDetails:
            date: '2023-12-20'
            location: Location
            country: US
            city: New York
            state: NWY
          pickupDetails:
            date: '2023-12-20'
            location: Rental Agency
            country: US
            city: New York
            state: NWY
          vehicleClass: MINI
      x-stoplight:
        id: 7704cb82f5e4c
      properties:
        rentalAgreementNumber:
          type: string
          description: |-
            The rental agreement number for the car rental.

            * Required during settlement
          maxLength: 9
          example: '123456789'
        renterName:
          type: string
          description: |-
            The name of the person renting the car.

            * Required during settlement request with Mastercard or Amex for integration with TSYS processor
          example: Renter Name
          maxLength: 20
        rentalDays:
          type: number
          minimum: 1
          maximum: 99
          example: 11
          description: |
            The total number of days the car is rented for.

            * Required during authorization request for integration with TSYS processor.
        noShow:
          type: boolean
          description: |-
            Indicates if the customer didn't check in for their booking. Possible values:

            - true - the customer didn't check in
            - false - the customer checked in
          x-stoplight:
            id: vbvp1urfzqyym
        extraCharges:
          type: array
          description: Indicates if the reservation includes additional ancillary charges.
          items:
            type: string
            enum:
              - GASOLINE
              - MILEAGE
              - LATE_RETURN
              - ONE_WAY_SERVICE_FEE
              - DRIVING_VIOLATION
        customerServicePhone:
          type: string
          description: |-
            The customer service phone number of the car rental company. Allowed numeric characters only.

            * Required during settlement request for integration with TSYS processor
          maxLength: 10
          example: '8311234567'
        returnDetails:
          $ref: '#/components/schemas/carRentalReturnDetails'
        pickupDetails:
          $ref: '#/components/schemas/carRentalPickupDetails'
        vehicleClass:
          type: string
          enum:
            - MINI
            - SUBCOMPACT
            - ECONOMY
            - COMPACT
            - MIDSIZE
            - INTERMEDIATE
            - STANDARD
            - FULL_SIZE
            - LUXURY
            - PREMIUM
            - MINIVAN
            - VAN_12_PASSENGERS
            - MOVING_VAN
            - VAN_15_PASSENGERS
            - CARGO_VAN
            - TRUCK_12_FOOT
            - TRUCK_20_FOOT
            - TRUCK_24_FOOT
            - TRUCK_26_FOOT
            - MOPED
            - STRETCH
            - REGULAR
            - UNIQUE
            - EXOTIC
            - SMALL_OR_MEDIUM_TRUCK
            - LARGE_TRUCK
            - SMALL_SUV
            - MEDIUM_SUV
            - LARGE_SUV
            - EXOTIC_SUV
            - FOUR_WHEEL_DRIVE
            - SPECIAL
            - MISCELLANEOUS
          description: |-
            A code that corresponds to the classification 
            of the rental vehicle (e.g., midsize, luxury, cargo van, etc.).
            
            * Required during settlement request with Amex for integration with TSYS processor
          example: REGULAR
    carRentalPickupDetails:
      title: carRentalPickupDetails
      type: object
      description: |-
        Contains pickup details information for car rental

        **Note** This object is only for Car Rental Merchants
      x-examples:
        Example 1:
          date: '2023-12-20'
          time: '2024-07-04T05:50:37Z'
          location: Rental Agency
          country: US
          city: New York
          state: NWY
      x-stoplight:
        id: d6503244462ef
      properties:
        date:
          type: string
          description: |-
            The local date when the vehicle was rented and/or picked up. Date format = YYYY-MM-DD, ISO 8601 expected.

            * Required during authorization request with Visa for integration with TSYS processor 
            * Required during settlement request for integration with TSYS processor
          format: date
          example: '2023-12-20'
        time:
          type: string
          format: date-time
          example: '2024-07-04T05:50:37Z'
          description: |-
            The local date and time when the vehicle was rented and/or picked up. Date format = YYYY-MM-DDTHH:MM:SSZ, ISO 8601 expected.

            * Required during settlement request with Amex for integration with TSYS processor.
        location:
          type: string
          description: |-
            This field contains the name of the business location where the rented vehicle was picked up. In most cases, this is the rental agency's business name that appears on the storefront and/or customer receipts, commonly referred to as the DBA (Doing Business As) name. However, if the vehicle was picked up at another location (e.g., a hotel, auto dealership, repair shop, etc.), the name of that location should be used.

            If the name is more than 38 characters, use proper and meaningful abbreviation, when possible. Do not truncate.

            * Required during settlement request with Amex for integration with TSYS processor
          maxLength: 38
          example: Rental Agency
        country:
          type: string
          maxLength: 2
          minLength: 2
          example: US
          description: |-
            The country of the location where the vehicle was rented and/or picked up.

            * Required during settlement request with Amex for integration with TSYS processor
        city:
          type: string
          maxLength: 18
          example: New York
          description: |-
            The name of the city, town, or village where the vehicle was rented and/or picked up.

            * Required during settlement request with Amex for integration with TSYS processor
        state:
          type: string
          maxLength: 3
          example: NWY
          description: |-
            The region code that corresponds to the state, province, or other country subdivision where the vehicle was rented and/or picked up.

            See [Province Codes](https://developer.paysafe.com/en/support/reference-information/codes/#province-codes) or [State Codes](https://developer.paysafe.com/en/support/reference-information/codes/#state-codes) for Canada or the United States.

            * Required during settlement request with Amex for integration with TSYS processor
          minLength: 2
    carRentalReturnDetails:
      title: carRentalReturnDetails
      type: object
      description: |-
        Contains return details information for car rental

        **Note** This object is only for Car Rental Merchants
      x-examples:
        Example 1:
          date: '2023-12-20'
          time: '2024-07-04T05:50:37Z'
          location: Location
          country: US
          city: New York
          state: NWY
      x-stoplight:
        id: 433498c6bfb15
      properties:
        date:
          type: string
          description: |-
            The last date to return the car by. Date format = YYYY-MM-DD, ISO 8601 expected.

            _UTC Date Format_

            * Required during authorization request with Visa for integration with TSYS processor
            * Required during settlement request for integration with TSYS processor
          format: date
          example: '2023-12-20'
        time:
          type: string
          format: date-time
          example: '2024-07-04T05:50:37Z'
          description: |-
            The local date and time when the vehicle was rented and/or picked up. Date format = YYYY-MM-DDTHH:MM:SSZ, ISO 8601 expected.

            * Required during settlement request with Amex for integration with TSYS processor.
        location:
          type: string
          description: |-
            The agency code, phone number, or address abbreviation.

            * Required during settlement request with Mastercard for integration with TSYS processor
          maxLength: 10
          example: Location
          x-stoplight:
            id: h3ax2s57z1zgg
        country:
          type: string
          description: |-
            The country of the location where the vehicle must be returned.

            * Required during settlement request with Mastercard or Amex for integration with TSYS processor
          example: US
          maxLength: 2
          minLength: 2
        city:
          type: string
          description: |-
            The name of the city, town, or village where the vehicle must be returned.

            * Required during settlement request with Mastercard or Amex for integration with TSYS processor
          maxLength: 18
          example: New York
        state:
          type: string
          description: |-
            The region code that corresponds to the state, province, or other country subdivision where the vehicle must be returned.

            See [Province Codes](https://developer.paysafe.com/en/support/reference-information/codes/#province-codes) or [State Codes](https://developer.paysafe.com/en/support/reference-information/codes/#state-codes) for Canada or the United States.

            * Required during settlement request with Amex for integration with TSYS processor
          maxLength: 3
          example: NWY
          minLength: 2
    cruiselineTravelDetails:
      title: cruiselineTravelDetails
      type: object
      description: |-
        Contains information about your cruise line travel.

        >**Note:** This object is only for Cruise line Merchants.

        >**Note:** This field has to be passed only in case of card transactions.
      x-examples:
        Example 1:
          cruiselineTravelDetails:
            cruiseShipName: Cruise Ship
            passengerName: Joe Smith
            departureDate: '2023-12-15'
            returnDate: '2023-12-20'
            country: US
            state: CA
            originCity: Barbados
            roomRate: 1200
            travelPackageApplication: CAR_RENTAL_RESERVATION
            ticket:
              ticketNumber: 1234567891011
              isRestrictedTicket: false
            passengers:
              passenger1:
                ticketNumber: 12J12J1
                firstName: Joe
                lastName: Smith
                phoneNumber: '8888994222'
                passengerCode: INF
                gender: M
            tripLegs:
              leg1:
                serviceClass: F
                departureCity: BDS
                destinationCity: DOM
                fare: 10
                departureDate: '2023-12-15'
              leg2:
                serviceClass: F
                departureCity: DOM
                destinationCity: BDS
                fare: 10
                departureDate: '2023-12-18'
      x-stoplight:
        id: 8b81c43c6bb37
      properties:
        cruiseShipName:
          type: string
          maxLength: 20
          description: |-
            The ship name booked for the cruise.

            * Required during settlement request with AMEX for integration with TSYS processor
          example: Cruise Ship
        passengerName:
          type: string
          maxLength: 20
          description: |-
            Name of the passenger to whom the ticket was issued.
            * Required during authorization request with AMEX for integration with TSYS processor
            * Required during settlement request with Visa or Mastercard for integration with TSYS processor
          example: John Doe
        departureDate:
          type: string
          format: date
          description: |-
            Date of passenger’s departure. Date format = YYYY-MM-DD, ISO 8601 expected.
            * Required during authorization request with AMEX for integration with TSYS processor
            * Required during settlement request for integration with TSYS processor
            _UTC Date Format_
          example: '2023-12-15'
        returnDate:
          type: string
          format: date
          example: '2023-12-20'
          description: |-
            Date of passenger’s return. Date format = YYYY-MM-DD, ISO 8601 expected.
            * Required during settlement request with AMEX for integration with TSYS processor
            _UTC Date Format_
        country:
          type: string
          description: |-
            This field contains the country code of the cruise location.

            See [Country Codes](https://developer.paysafe.com/en/support/reference-information/codes/#country-codes).

            * Required during settlement request with AMEX for integration with TSYS processor
          minLength: 2
          maxLength: 2
          example: US
        state:
          type: string
          description: |-
            The region code that corresponds to the state, province, or other country subdivision of the cruise location.

            See [Province Codes](https://developer.paysafe.com/en/support/reference-information/codes/#province-codes) or [State Codes](https://developer.paysafe.com/en/support/reference-information/codes/#state-codes) for Canada or the United States.

            * Required during settlement request with AMEX for integration with TSYS processor
          maxLength: 3
          example: CA
          minLength: 2
        originCity:
          type: string
          description: |-
            Departure City where the trip originates.

            * Required for AMEX in case of integration with TSYS processor
          example: Barbados
          maxLength: 18
        roomRate:
          type: number
          description: |-
            Total cost of the cruise. For onboard purchases or transactions occurring during cruise travel, this field must be zero filled.

            * Required during settlement request with AMEX for integration with TSYS processor
          example: '1200'
          maximum: 999999999999
        travelPackageApplication:
          type: string
          description: |-
            Indicates if the package includes car rental, airline flight, both or neither.

            - CAR_RENTAL_RESERVATION - Car rental reservation included
            - AIRLINE_RESERVATION - Airline flight reservation included
            - CAR_RENTAL_AND_AIRLINE_RESERVATION - Both car rental and airline flight reservations included
            - UNKNOWN - Unknown

            * Required during settlement request with AMEX for integration with TSYS processor
          example: CAR_RENTAL_RESERVATION
          enum:
            - CAR_RENTAL_RESERVATION
            - AIRLINE_RESERVATION
            - CAR_RENTAL_AND_AIRLINE_RESERVATION
            - UNKNOWN
        ticket:
          $ref: '#/components/schemas/cruiselineTicket'
        passengers:
          $ref: '#/components/schemas/cruiselinePassengers'
        tripLegs:
          $ref: '#/components/schemas/cruiselineTripLegs'
    cruiselineLeg:
      title: cruiselineLeg
      type: object
      description: |-
        Contains detailed itinerary information for one of the cruise line trip legs

        **Note** This object is only for Cruise line Merchants
      x-stoplight:
        id: b2be6b017f0a3
      x-examples:
        Example 1:
          serviceClass: F
          departureCity: BDS
          destinationCity: DOM
          fare: 10
          departureDate: '2023-12-15'
      properties:
        fare:
          type: number
          description: |-
            Indicates the total fare applied to a specific leg.
            * Required during settlement request for integration with TSYS processor
          example: 1200
          maximum: 999999999999
        serviceClass:
          type: string
          minLength: 1
          maxLength: 1
          description: |-
            Indicates service class (first class, business
            class, etc.). 
            Example values (not limited to):
            - `F` - first class
            - `J` - business class
            - `W` - premium economy class
            - `Y` - economy class,
            * Required during settlement request for integration with TSYS processor
          example: F
        departureCity:
          type: string
          maxLength: 3
          description: |-
            Departure City where the trip originates.

            [UN/LOCODE](https://unece.org/trade/cefact/unlocode-code-list-country-and-territory) expected.

            * Required during settlement request for integration with TSYS processor
          example: BDS
          minLength: 3
        destinationCity:
          type: string
          maxLength: 3
          description: |-
            Destination City where the trip ends.

            [UN/LOCODE](https://unece.org/trade/cefact/unlocode-code-list-country-and-territory) expected.

            * Required during authorization request with AMEX for integration with TSYS processor
            * Required during settlement request with Visa or Mastercard for integration with TSYS processor
          example: BDS
          minLength: 3
        departureDate:
          type: string
          format: date
          description: 'Date of passenger’s departure for this leg. Date format = YYYY-MM-DD, ISO 8601 expected. For example, 2014-01-26'
          example: '2022-12-20'
    cruiselinePassenger:
      title: cruiselinePassenger
      type: object
      x-examples:
        Example 1:
          ticketNumber: '56827'
          firstName: Venkata Suresh
          lastName: Chagalamarri
          phoneNumber: '7181855783'
          passengerCode: INF
          gender: M
      x-stoplight:
        id: 980651439a77f
      description: |-
        [Cruise line passenger](/schemas/cruiselinePassenger)

        **Note** This object is only for Cruise line Merchants
      properties:
        ticketNumber:
          type: string
          description: 'Identifies the ticket for this passenger only. '
          maxLength: 15
        firstName:
          type: string
          maxLength: 80
          description: Passenger's first name.
        lastName:
          type: string
          description: Passenger's last name.
          maxLength: 80
        phoneNumber:
          type: string
          maxLength: 40
          description: Passenger's phone number.
        passengerCode:
          type: string
          description: "Code that identifies a type of passenger. For example 'INF' which indicates a child traveling on parent's lap.\t"
          maxLength: 10
        gender:
          type: string
          description: |-
            Passenger gender.
            Options: [M – Male, F – Female, O – Other, N – Not Specified]
          enum:
            - M
            - F
            - O
            - 'N'
    cruiselinePassengers:
      title: cruiselinePassengers
      type: object
      x-examples:
        Example 1:
          passengers:
            passenger1:
              ticketNumber: '56827'
              firstName: Venkata Suresh
              lastName: Chagalamarri
              phoneNumber: '7181855783'
              passengerCode: INF
              gender: M
            passenger2:
              ticketNumber: '56828'
              firstName: Venkata Naresh
              lastName: Chagalamarri
              phoneNumber: '7181855783'
              passengerCode: INF
              gender: M
            passenger3:
              ticketNumber: '56829'
              firstName: Venkata Rajitha
              lastName: Chagalamarri
              phoneNumber: '7181855783'
              passengerCode: INF
              gender: F
      x-stoplight:
        id: 9e1c15df2e8e8
      properties:
        passenger1:
          $ref: '#/components/schemas/cruiselinePassenger'
        passenger2:
          $ref: '#/components/schemas/cruiselinePassenger'
        passenger3:
          $ref: '#/components/schemas/cruiselinePassenger'
        passenger4:
          $ref: '#/components/schemas/cruiselinePassenger'
        passenger5:
          $ref: '#/components/schemas/cruiselinePassenger'
        passenger6:
          $ref: '#/components/schemas/cruiselinePassenger'
        passenger7:
          $ref: '#/components/schemas/cruiselinePassenger'
        passenger8:
          $ref: '#/components/schemas/cruiselinePassenger'
        passenger9:
          $ref: '#/components/schemas/cruiselinePassenger'
        passenger10:
          $ref: '#/components/schemas/cruiselinePassenger'
      description: |-
        A grouping of up to ten [cruise line passengers](/schemas/cruiselinePassengers).

        **Note** This object is only for Cruise line Merchants
    cruiselineTripLegs:
      title: cruiselineTripLegs
      type: object
      description: |-
        A grouping of up to four [cruise line legs](/schemas/cruiselineTripLegs). Each leg provides detailed itinerary data.

        **Note** This object is only for Cruise line Merchants
      x-examples:
        tripLegs:
          tripLegs:
            leg1:
              serviceClass: F
              departureCity: BDS
              destinationCity: DOM
              fare: 10
              departureDate: '2023-12-15'
            leg2:
              serviceClass: F
              departureCity: DOM
              destinationCity: BDS
              fare: 10
              departureDate: '2023-12-18'
      x-stoplight:
        id: 3bdeec5fec03b
      properties:
        leg1:
          $ref: '#/components/schemas/cruiselineLeg'
        leg2:
          $ref: '#/components/schemas/cruiselineLeg'
        leg3:
          $ref: '#/components/schemas/cruiselineLeg'
        leg4:
          $ref: '#/components/schemas/cruiselineLeg'
    cruiselineTicket:
      title: cruiselineTicket
      type: object
      description: |-
        Information about the [Cruise line Ticket](/schemas/cruiselineTicket) Number and if the ticket is restricted.
        * Required during settlement

        **Note** This object is only for Cruise line Merchants
      x-stoplight:
        id: 371818f0c2ffe
      properties:
        ticketNumber:
          type: string
          maxLength: 15
          example: '1234567891011'
          description: |-
            Cruise ticket number
            * Required during settlement
        isRestrictedTicket:
          type: boolean
          description: |-
            Indicates whether this ticket is non-refundable. This entry should be supplied on CPS/Passenger Transport 1 or 2 transactions if the ticket was purchased as a non-refundable ticket. Valid values are:

            - false - No restriction (default)

            - true - Restricted (non-refundable) ticket'

            * Required during settlement request for integration with TSYS processor
    customerRequest:
      title: customerRequest
      x-stoplight:
        id: 41zz078xq7q6b
      type: object
      x-internal: true
      properties:
        merchantCustomerId:
          type: string
          maxLength: 100
          description: This is a customer ID that the merchant provides with the request for their own internal customer identification. This value must be unique for each customer belonging to a merchant.
          example: mycustomer10
        locale:
          type: string
          enum:
            - en_US
            - fr_CA
            - en_GB
          description: This indicates the language of the customer.
          example: en_US
        firstName:
          type: string
          maxLength: 80
          description: This is the customer’s first name.
          example: Suresh
        middleName:
          type: string
          maxLength: 80
          description: This is the customer’s middle name.
          example: Venkata
        lastName:
          type: string
          maxLength: 80
          description: This is the customer’s last name.
          example: Chagalamarri
        gender:
          type: string
          enum:
            - M
            - F
          description: |-
            This is the customer’s gender. Possible values are:

            - M - Male

            - F - Female 
          example: M
        dateOfBirth:
          $ref: '#/components/schemas/dateOfBirth'
        email:
          type: string
          maxLength: 255
          description: This is the customer's email address.
          example: paysafe@gmail.com
        phone:
          type: string
          maxLength: 40
          description: This is the customer's phone number.
          example: 777-444-8888
        cellPhone:
          type: string
          maxLength: 40
          description: This is the customer's cell phone number.
          example: 777-555-8888
        nationality:
          type: string
          maxLength: 30
          description: This is the customer’s nationality.
          example: Canadian
        ip:
          type: string
          maxLength: 46
          description: This is the customer’s IP address.
          example: 192.0.126.111
        paymentHandleTokenFrom:
          type: string
          description: |-
            This is the paymentHandleToken that is present in the response to a [single-use Payment Handle creation request](/operations/create-single-use-payment-handle).

            **Note:** It is a mandatory field only if we are trying to *Create a Customer Using a Single-Use Payment Handle Token*.  
          maxLength: 36
          example: SCURPCc6nEwXcdBQ
        accountId:
          type: string
          example: '1001456390'
          pattern: '^[a-zA-Z0-9_]*$'
          description: Account Id in the paysafe system.
          readOnly: true
      required:
        - merchantCustomerId
        - locale
    customerResponse:
      allOf:
        - type: object
          properties:
            id:
              type: string
              maxLength: 36
              description: This is the ID returned in the response.
              readOnly: true
            status:
              type: string
              enum:
                - INITIAL
                - ACTIVE
              description: |-
                This is the status of the customer. Possible values are:

                - INITIAL

                - ACTIVE

                By default the system automatically sets the customer status to an ACTIVE state. If you want to prevent the customer from being used for payments, you can set the status to an INITIAL state (e.g., in cases where you first want to validate the customer).
              default: ACTIVE
              readOnly: true
            paymentToken:
              type: string
              example: PrwxyviVAe4Zau3
              description: It is the customer profile Identifier at the paysafe end.
              readOnly: true
            addresses:
              type: array
              items:
                $ref: '#/components/schemas/addresses'
            paymentHandles:
              type: array
              items:
                $ref: '#/components/schemas/customerPaymentHandle'
              readOnly: true
            error:
              $ref: '#/components/schemas/error'
        - $ref: '#/components/schemas/customerRequest'
      title: customerResponse
      description: Customer details including saved addresses and payment handles
      x-internal: true
      x-stoplight:
        id: 2d62ad52834a5
    customer:
      allOf:
        - properties:
            id:
              type: string
              maxLength: 36
              description: This is the ID returned in the response.
              readOnly: true
            merchantCustomerId:
              type: string
              maxLength: 100
              description: This is a customer ID that the merchant provides with the request for their own internal customer identification. This value must be unique for each customer belonging to a merchant.
              example: mycustomer10
            locale:
              type: string
              enum:
                - en_US
                - fr_CA
                - en_GB
              description: This indicates the language of the customer.
              example: en_US
            firstName:
              type: string
              maxLength: 80
              description: This is the customer’s first name.
              example: Suresh
            middleName:
              type: string
              maxLength: 80
              description: This is the customer’s middle name.
              example: Venkata
            lastName:
              type: string
              maxLength: 80
              description: This is the customer’s last name.
              example: Chagalamarri
            gender:
              type: string
              enum:
                - M
                - F
              description: |-
                This is the customer’s gender. Possible values are:
                - M - Male
                - F - Female 
              example: M
            dateOfBirth:
              $ref: '#/components/schemas/dateOfBirth'
            email:
              type: string
              maxLength: 255
              description: This is the customer's email address.
              example: paysafe@gmail.com
            phone:
              type: string
              maxLength: 40
              description: This is the customer's phone number.
              example: 777-444-8888
            cellPhone:
              type: string
              maxLength: 40
              description: This is the customer's cell phone number.
              example: 777-555-8888
            nationality:
              type: string
              maxLength: 30
              description: This is the customer’s nationality.
              example: Canadian
            ip:
              type: string
              maxLength: 46
              description: This is the customer’s IP address.
              example: 192.0.126.111
            status:
              type: string
              enum:
                - INITIAL
                - ACTIVE
              description: |-
                This is the status of the customer. Possible values are:
                - INITIAL
                - ACTIVE
                By default the system automatically sets the customer status to an ACTIVE state. If you want to prevent the customer from being used for payments, you can set the status to an INITIAL state (e.g., in cases where you first want to validate the customer).
              default: ACTIVE
              readOnly: true
            paymentToken:
              type: string
              example: PrwxyviVAe4Zau3
              description: It is the customer profile Identifier at the paysafe end.
              readOnly: true
            addresses:
              type: array
              items:
                $ref: '#/components/schemas/addresses'
            paymentHandles:
              type: array
              items:
                $ref: '#/components/schemas/customerPaymentHandle'
              readOnly: true
      type: object
      description: Customer's details including saved addresses and payment handles
      title: customer
      x-examples:
        Example:
          id: 070fa349-5031-4e83-82ba-0797c7170b9d
          status: ACTIVE
          merchantCustomerId: '546456451'
          locale: en_US
          firstName: John
          middleName: James
          lastName: Smith
          dateOfBirth:
            day: 24
            month: 10
            year: 1981
          gender: M
          email: john.smith@email.com
          phone: 777-444-8888
          cellPhone: 777-555-8888
          nationality: Canadian
          ip: 192.0.126.111
          paymentToken: PPlfJ2gmQoYAQ1d
    customerBasePaymentHandleRequest:
      allOf:
        - type: object
          properties:
            merchantRefNum:
              type: string
              description: This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.
              maxLength: 255
            paymentType:
              type: string
              enum:
                - CARD
                - ACH
                - EFT
                - BACS
                - SEPA
              description: This is the payment type associated with the Payment Handle used for this request.
            amount:
              type: number
              description: 'This is the amount of the request, in minor units. Note: This field is mandatory if transactionType is included.'
            customerIp:
              type: string
              description: This is the customer's IP address.
            billingDetails:
              $ref: '#/components/schemas/billingDetails'
            merchantDescriptor:
              $ref: '#/components/schemas/merchantDescriptor'
            billingDetailsId:
              type: string
              description: 'This is the ID returned in the response to the [address creation request](/operations/create-address).'
            paymentHandleTokenFrom:
              type: string
              description: 'This is the existing payment handle id, from which payment instrument and profile details has to be fetched.'
          required:
            - merchantRefNum
            - paymentType
    customerPaymentHandleRequest:
      allOf:
        - type: object
        - $ref: '#/components/schemas/customerBasePaymentHandleRequest'
        - $ref: '#/components/schemas/customerPaymentInstrument'
      title: customerPaymentHandleRequest
      x-internal: true
    customerPaymentHandleNetworkTokenResponse:
      allOf:
        - type: object
        - $ref: '#/components/schemas/customerBasePaymentHandleRequest'
        - $ref: '#/components/schemas/customerNetworkTokenPaymentInstrumentWithApplePay'
      title: customerPaymentHandleRequest
      x-internal: true
    customerBasePaymentHandle:
      allOf:
        - type: object
          properties:
            id:
              type: string
              description: 'This is the ID returned in the response. This ID can be used for future associated requests, for example, to look up the Payment Handle.'
              maxLength: 36
              example: 26359efd-7cfb-4014-a13d-1724e3ff17fa
              readOnly: true
            status:
              type: string
              enum:
                - INITIATED
                - PAYABLE
                - PROCESSING
                - FAILED
                - EXPIRED
                - COMPLETED
              description: |-
                This is the status of the transaction request.

                - INITIATED - The transaction was initiated with the downstream provider.
                - PAYABLE - The merchant can use the Payment Handle for a Payment request.
                - PROCESSING - The Payment Handle was authorized by customer, awaiting PSP response.
                - FAILED - The transaction failed due to either an error or being declined.
                - EXPIRED - The Payment Handle expired because the merchant did not proceed with the Payment request.
                - COMPLETED - The Payment request was initiated successfully using the Payment Handle.
              readOnly: true
            usage:
              type: string
              enum:
                - SINGLE_USE
                - MULTI_USE
              description: |-
                This specifies how the Payment Handle will be used for Payments.

                - SINGLE_USE - The Payment Handle can be used only for one time.
                - MULTI_USE - The Payment Handle can be used multiple times.
              readOnly: true
            action:
              type: string
              enum:
                - NONE
                - REDIRECT
                - LOOKUP
              description: The associated action that needs to be done by merchant for this handle.
              readOnly: true
            currencyCode:
              type: string
              description: 'This is the [currency of the merchant account](https://developer.paysafe.com/en/support/reference-information/codes/#currency-codes)'
              example: USD
              maxLength: 3
              readOnly: true
            paymentHandleToken:
              type: string
              description: 'This is the payment token generated by Paysafe that will be used by merchants for Payment API requests, provided its status is PAYABLE.'
              maxLength: 36
              readOnly: true
            customerId:
              type: string
              description: The customer's profile Id to whom the payment handle is associated. This will be used to add a payment method to an existing customer.
    customerPaymentHandle:
      allOf:
        - type: object
        - $ref: '#/components/schemas/customerBasePaymentHandle'
        - $ref: '#/components/schemas/customerPaymentHandleRequest'
      title: customerPaymentHandle
      x-internal: true
    customerPaymentHandleNetworkToken:
      allOf:
        - type: object
        - $ref: '#/components/schemas/customerBasePaymentHandle'
        - $ref: '#/components/schemas/customerPaymentHandleNetworkTokenResponse'
      title: customerPaymentHandle
      x-internal: true
    customerPaymentInstrument:
      oneOf:
        - $ref: '#/components/schemas/cardObjectForCustomer'
        - $ref: '#/components/schemas/eftObject'
        - $ref: '#/components/schemas/achObject'
        - $ref: '#/components/schemas/bacsObject'
        - $ref: '#/components/schemas/sepaObject'
      title: customerPaymentInstrument
      x-internal: true
    customerNetworkTokenPaymentInstrumentWithApplePay:
      oneOf:
        - $ref: '#/components/schemas/networkTokenCardObject'
        - $ref: '#/components/schemas/eftObject'
        - $ref: '#/components/schemas/achObject'
        - $ref: '#/components/schemas/bacsObject'
        - $ref: '#/components/schemas/sepaObject'
      title: customerPaymentInstrument
      x-internal: true
    customerNetworkTokenPaymentInstrument:
      oneOf:
        - $ref: '#/components/schemas/networkTokenCardObject'
        - $ref: '#/components/schemas/eftObject'
        - $ref: '#/components/schemas/achObject'
        - $ref: '#/components/schemas/bacsObject'
        - $ref: '#/components/schemas/sepaObject'
      title: customerPaymentInstrument
      x-internal: true
    dateOfBirth:
      title: dateOfBirth
      type: object
      x-stoplight:
        id: 9d1b281774a55
      description: |
        This is the recipient's date of birth.

        **Note:** Required for Pay by Bank.
      properties:
        day:
          type: number
          example: 6
          description: This is the day of birth.
          maximum: 31
        month:
          type: number
          example: 5
          description: This is the month of birth.
          maximum: 12
        year:
          type: number
          example: 1998
          description: This is the year of birth.
          minimum: 1900
      required:
        - day
        - month
        - year
    deviceDetails:
      title: deviceDetails
      x-stoplight:
        id: 8fx9akyhrqt4x
      type: object
      description: This is part of Interac e-Transfer withdrawal Payment Handle request. It is used by Interac Online for risk assessment
      properties:
        deviceId:
          type: string
          description: This is part of Interac e-Transfer withdrawal Payment Handle request. This parameter is mandatory if "browserDetails" json object is not passed as a part of Interac e-Transfer withdrawal Payment Handle request. It is used by Interac Online for risk assessment.
          example: '876313'
    discretionaryData:
      title: discretionaryData
      x-stoplight:
        id: s3suwyitwymhf
      type: object
      properties:
        field1:
          type: string
          example: CustomField1
          maxLength: 35
        field2:
          type: string
          example: CustomField2
          maxLength: 20
        field3:
          type: string
          example: CustomField3
          maxLength: 20
      x-internal: false
      description: Discretionary Data consists of three user-defined data fields containing additional information about your card acquirer. Contact your account manager for more information.
    displayOptions:
      title: displayOptions
      x-stoplight:
        id: 2bfmucytwbyzq
      type: object
      properties:
        name:
          type: string
          example: TransactionID
        value:
          type: string
          example: '721170'
        displayLabel:
          type: string
          example: Código de pago
      x-internal: true
    eft:
      title: eft
      x-stoplight:
        id: 4m9mljwnwrz4d
      type: object
      description: 'Details of the EFT account to be used for the transaction '
      properties:
        accountHolderName:
          type: string
          maxLength: 30
          description: This is the name of the customer or company.
          example: XYZ Company
        accountNumber:
          type: string
          minLength: 4
          maxLength: 12
          description: This is the bank account number.
          example: '336612'
        transitNumber:
          type: string
          maxLength: 5
          description: This is the 5-digit transit number of the customer's bank branch.
          example: '22446'
        institutionId:
          type: string
          maxLength: 3
          description: This is the 3-digit institution ID of the customer’s bank branch.
          example: '001'
        lastDigits:
          type: string
          maxLength: 2
          description: It contains only last 2 digits of bank account.
          example: '12'
          readOnly: true
      required:
        - accountHolderName
        - accountNumber
        - transitNumber
    eftObject:
      x-internal: true
      type: object
      properties:
        eft:
          $ref: '#/components/schemas/eft'
        dupCheck:
          type: boolean
          writeOnly: true
      title: eft
    error:
      title: error
      type: object
      description: Details of the error.
      x-stoplight:
        id: 9652c1caf23df
      properties:
        code:
          type: string
          description: The error code. Also shown in the X-Application-Status-Code response header.
          example: '5068'
          readOnly: true
        message:
          type: string
          description: A description of the error.
          example: Field error(s)
          readOnly: true
        details:
          type: array
          description: Details of any parameter value errors.
          items:
            type: string
            example: Either you submitted a request that is missing a mandatory field or the value of a field does not match the format expected.
            readOnly: true
        fieldErrors:
          type: array
          description: 'If applicable, this is a list of fields that have issues.'
          items:
            $ref: '#/components/schemas/fieldError'
        additionalDetails:
          type: array
          description: This is an optional field that provides additional data in case of a reject.
          items:
            $ref: '#/components/schemas/additionalDetail'
    electronicDelivery:
      title: electronicDelivery
      x-stoplight:
        id: n6wnmgqzeu8er
      type: object
      properties:
        email:
          type: string
          description: This is the email address to which the merchandise was delivered.
          maxLength: 240
          example: example@example.com
        isElectronicDelivery:
          type: boolean
          description: This indicates whether there is an electronic delivery for the product.
      x-internal: true
    fieldError:
      title: fieldError
      x-stoplight:
        id: v9tehpejyysb9
      type: object
      description: 'Contains error info for the given field '
      properties:
        field:
          type: string
          description: Identifies the JSON request field.
          example: accountId
          readOnly: true
        error:
          type: string
          description: The problem associated with field.
          example: 'AccountId is missing in the request. If multiple accounts are registered with same currency, accountId is mandatory.'
          readOnly: true
    additionalDetail:
      x-internal: true
      type: object
      properties:
        type:
          type: string
          description: This is the type of the additional detail.
        code:
          type: string
          description: This is the code of the additional detail.
        message:
          type: string
          description: This is the message of the additional detail.
    flight:
      title: flight
      x-stoplight:
        id: vyht4gkk04gmi
      type: object
      description: Operating Carrier Code and the Number of the airline flight to be taken on Leg of the trip (excluding the carrier code).
      x-examples: {}
      properties:
        carrierCode:
          type: string
          minLength: 2
          maxLength: 2
          description: 'Operating Carrier Code; the standard abbreviation code indicating name of the operating carrier like United Airlines, Jet Blue, etc.'
          example: LH
        flightNumber:
          type: string
          maxLength: 5
          description: Number of the airline flight to be taken on Leg of the trip excluding the carrier code.
          minLength: 1
          example: '0799'
    fundingInstruction:
      title: fundingInstruction
      x-stoplight:
        id: uvurh91ow2146
      type: object
      x-examples: {}
      properties:
        bankName:
          type: string
          example: Scotiabank Perú
        expirationTime:
          type: string
          example: '2023-01-20T08:49:02Z'
        displayOptions:
          type: array
          items:
            $ref: '#/components/schemas/displayOptions'
        steps:
          type: array
          items:
            $ref: '#/components/schemas/step'
      x-internal: true
    fundingTransaction:
      title: fundingTransaction
      x-stoplight:
        id: vk2ighi7rqpt3
      type: object
      description: |-
        **Note:** Acquirers and processors do not necessarily support all available MCCs; before integrating, you should contact [Integration Support](https://developer.paysafe.com/en/support/) for details.

        The fundingTransaction object is used to identify authorization requests that are categorized as funding transactions by the merchant in order to provide additional information for the purpose of a transaction. It can be used by merchants registered with MCC 4722, 4829, 6012, 6051, 6211 or 6540. The relevant value will be assigned automatically by the Payments API as per the merchant registration with card schemes and his applicable MCC.
            
        - In case the merchant would like to overwrite the predefined Funding Transaction Type with another one which is applicable for its MCC, he should sends it as processorAppliedType into the Auth response. For example:

        Merchant is configured to process Visa AFT transactions with Funding Transaction Type: SVDW_FUNDS_TRANSFER and his MCC is 4829. In case he wants to process specific Authorizations with Funding Transaction Type: ACCOUNT_TO_ACCOUNT, into the Authorization request, he should provide fundingTransaction object with the following data:
        {"type":"ACCOUNT_TO_ACCOUNT"}
          
        Then the Payments API will return into the Authorization response as "processorAppliedType" the value which has been sent to the schemes. In this example: "processorAppliedType": "ACCOUNT_TO_ACCOUNT"}
        
        - In case the merchant would like to process regular Authorization, into fundingTransaction object, he should sends as "type": DO_NOT_APPLY
          
        Then the Payments API will returns into the Auth response the following:
        {"type":"DO_NOT_APPLY", "processorAppliedType":"NOT_APPLIED"}
          
        Here is the list of options:

        | Funding transaction type | Visa                                                   |Mastercard                      |
        | ---                      |---                                                     |---                             |
        | SVDW_FUNDS_TRANSFER      | Applicable for 4722, 4829, 6012, 6051, 6211 and 6540.  |                                |
        | SDW_WALLET_TRANSFER      | Applicable for 4829, 6012 and 6051.                    | Applicable for 4829 and 6540.  |
        | ACCOUNT_TO_ACCOUNT       | Applicable for 4829, 6012 and 6211.                    |                                |
        | PERSON_TO_PERSON         | Applicable for 4829 and 6012.                          |                                |
        
        Note: The fundingTransaction type is optional field. Once the account is configured to process funding transactions (VISA AFT and MC funding transaction) if this field is not sent in the authorization request, the transaction will be processed successfully with automatically assigned Funding Transaction Type as per the account configuration. 
          
        Manual entries are required only of the merchant would like to overwrite this predefined value or to process standard Authorization without the Visa AFT/MC Funding additional attributes.   

        **Notes**

        + _**Mandatory elements:**_ 
          - If you want to support Visa AFT and Mastercard Funding, you should perform registration with the Card schemes in advance. Please contact Paysafe's operational support or your account manager in order to receive more information and to begin with the registration process. Please note also that not every processor supports funding transactions for all MCCs listed here.
          - If you send fundingTransaction type value in the authorization request in addition, you must also send profile and billingDetails, as described below:
            - **Profile**
              - firstName
              - lastName
              - merchantCustomerId
            
            - **Billing Details**
              - street
              - city
              - state (If US or Canada)
              - country
              - Zip
            If not, the funding transaction will be declined due to missing data.
          - If you send fundingTransaction type value in the authorization request, but your acquirer doesn't support funding transactions, or your account is not configured (you have not performed the registration process), the transaction will be declined with error: 5040.
          - If you send fundingTransaction type in the authorization request with a value not applicable for your MCC, the transaction will be declined with error: 3068.
          -	If you send fundingTransaction type in the authorization request with a value not part of the list below, the transaction will be declined with error: 5068.
          -	If you send fundingTransaction type value in the authorization request and your account is configured to process funding transactions, but you are not registered to process funding transactions to a specific card brand, the transaction will be successfully processed and processorAppliedType in the response will be "NOT_APPLIED".
        + Suppose you send fundingTransaction type value in the authorization request, and your account is configured to process funding transactions. You are registered to process funding transactions to the respective card brand. In that case, the transaction will be successfully processed, and the processorAppliedType will be equal to the fundingTransaction type provided in the request.
      x-examples:
        Example 1:
          fundingTransaction:
            type: SVDW_FUNDS_TRANSFER
      properties:
        type:
          type: string
          enum:
            - SVDW_FUNDS_TRANSFER
            - SDW_WALLET_TRANSFER
            - ACCOUNT_TO_ACCOUNT
            - PERSON_TO_PERSON
          description: 'The fundingTransaction type is included in the request and set by the merchant.Supported funding transaction type values:'
        processorAppliedType:
          type: string
          enum:
            - SVDW_FUNDS_TRANSFER
            - SDW_WALLET_TRANSFER
            - ACCOUNT_TO_ACCOUNT
            - PERSON_TO_PERSON
            - NOT_APPLIED
          description: |-
            The fundingTransaction processorAppliedType value is chosen by Paysafe based on the merchant configuration. 
            It is equal to the one which is used by Paysafe based on your MCC and registration. If you 
            provide value which is applicable for your MCC but you have been registered for another use case, 
            Paysafe will assign the value you have registered for as use case and will provide it into the
            response as processorAppliedType.
            In case the merchant is not registered in the relevant card scheme system, the processorAppliedValue 
            received into the response will be 'NOT_APPLIED'.
            The processorAppliedType can be seen in the auth response. 
            Supported funding transaction processorAppliedType values: 
            - `SVDW_FUNDS_TRANSFER` - Stored Value Digital Wallet Funds Transfer - Stored Value Digital Wallets operate like prepaid cards by assigning a separate “account” to the customer, which the customer pre-loads with funds using their Visa payment credential, before being able to transact with sellers connected to the digital wallet’s platform or complete a transfer to other users of the wallet’s platform. Generally, customers & sellers are either transacting within the Stored Value Digital Wallet’s proprietary network of connected users, or within the Visa ecosystem if the wallet has attached a Visa product (e.g. a prepaid credential) to the “front” of the wallet, so the wallet uses Visa to make purchases, cash withdrawals etc.
            - `SDW_WALLET_TRANSFER` - Staged Digital Wallet Transfer - Staged Digital Wallets are capable of conducting “back-to-back funding” transactions – also known as a “live-load” or “real-time load” – which permits the customer to undertake transactions with sellers on the digital wallet’s platform when there are not sufficient funds in the digital wallet-assigned account to complete the transaction (which may include a “zero balance”). 
            - `ACCOUNT_TO_ACCOUNT` - Account to Account - Money Transfer (funding of the cardholder’s own account at the same or a different financial institution).
            - `PERSON_TO_PERSON` - Person to Person - Money Transfer (transferring funds to another individual’s non-merchant account).
            - `NOT_APPLIED` - Not processed as funding transaction
            **NOTE:** If more information is required you can contact your account manager.
    giropay:
      title: giropay
      x-stoplight:
        id: 7j9mruk2rbc4h
      type: object
      properties:
        subMerchantReference:
          type: string
          description: This is the unique merchant identifier that allows Paysafe to define the transaction with Giropay.
          example: AirBeg3hIN_SC0yihWNKCzLJ4VPjJOR4RWLZWbIhcUE=
        merchantCategory:
          type: string
          description: 'This is the merchant''s category of operations. Note: if present and provided with value as I_GAMING, then buyerAccount details will shared in Payment response. For other verticals,it should be either null or shouldn''t be provided.'
          example: I_GAMING
      required:
        - subMerchantReference
      description: These are the details of the giropay account used for the request.
      x-internal: true
    giropayObject:
      title: giropay
      x-stoplight:
        id: a2zc4ozye77jv
      type: object
      properties:
        giropay:
          $ref: '#/components/schemas/giropay'
      x-internal: true
    gatewayResponse:
      title: gatewayResponse
      type: object
      description: This is the read-only raw response returned by an acquirer. It is returned only if your account is configured accordingly.
      x-stoplight:
        id: 8ec6b3a846d9d
      x-examples:
        Example 1:
          id: 64b614b8-753d-4404-b491-2dd8b817c40b
          processor: PAYSAFE_DIGITALWALLET
          sid: c4a1548163e447a7acada4298c65e9d9
          totalAmount: '500'
          code: VPS
          responseCode: '00'
          avsCode: X
          avsResponse: MATCH
          balanceResponse: '100'
          mid: '18020292839'
          terminalId: '12345678'
          batchNumber: '001'
          seqNumber: '151'
          effectiveDate: '170728'
          financingType: DEFERRED_PAYMENT
          plan: '123'
          gracePeriod: '99'
          term: '99'
          responseId: '713965'
          requestId: '4397082830'
          description: Transaction has been executed successfully.
          authCode: '682110'
          txnDateTime: '2023-01-20T03:38:46Z'
          referenceNbr: '1420817031393'
          responseReasonCode: '00'
          cvvVerification: MATCH
          cvv2Result: S
          status: pending
          orderId: ORD_0f560bfd-286e-430c-b236-49cbc1e13a5e
          profile:
            id: 070fa349-5031-4e83-82ba-0797c7170b9d
            status: ACTIVE
            merchantCustomerId: '546456451'
            lastName: Chagalamarri
            locale: en_US
            firstName: Venkata Suresh
            dateOfBirth:
              day: 6
              month: 5
              year: 1998
            email: paysafe@gmail.com
            phone: '1234567891'
            mobile: '9846573804'
            gender: M
            nationality: Indian
      properties:
        id:
          type: string
          description: This is the response id returned by the processor
          readOnly: true
        processor:
          type: string
          description: This is the processor code of the transaction at Paysafe side
          readOnly: true
        code:
          type: string
          description: 'This is acquirer identification code, such as DJN, CRX, etc.'
          readOnly: true
        responseCode:
          type: string
          description: This is the raw response returned by the acquirer.
          readOnly: true
        avsCode:
          type: string
          description: This is the raw AVS code returned by the acquirer.
          readOnly: true
        avsResponse:
          type: string
          enum:
            - MATCH
            - MATCH_ADDRESS_ONLY
            - MATCH_ZIP_ONLY
            - NO_MATCH
            - NOT_PROCESSED
            - UNKNOWN
          description: This is the AVS response returned from the card issuer.
          readOnly: true
        nameVerification:
          type: string
          enum:
            - MATCH
            - PARTIAL_MATCH
            - NO_MATCH
            - NOT_PROCESSED
            - UNKNOWN
          description: This is the account name inquiry full name set result returned by the acquirer.
          readOnly: true
        firstNameVerification:
          type: string
          enum:
            - MATCH
            - PARTIAL_MATCH
            - NO_MATCH
            - NOT_PROCESSED
            - UNKNOWN
          description: This is the account name inquiry first name result returned by the acquirer.
          readOnly: true
        lastNameVerification:
          type: string
          enum:
            - MATCH
            - PARTIAL_MATCH
            - NO_MATCH
            - NOT_PROCESSED
            - UNKNOWN
          description: This is the account name inquiry for the last name returned by the acquirer.
          readOnly: true  
        balanceResponse:
          type: string
          description: 'This is the balance remaining on a gift card, if a gift card was used for the original transaction.'
          readOnly: true
        mid:
          type: string
          description: This is the acquirer MID that was sent to the clearing house.
          readOnly: true
        terminalId:
          type: string
          description: This is the merchant's terminal ID.
          readOnly: true
        batchNumber:
          type: string
          description: This is the batch number.
          readOnly: true
        seqNumber:
          type: string
          description: This is the merchant's sequence number.
          readOnly: true
        effectiveDate:
          type: string
          description: |-
            This is the date of the bank deposit associated 
            with the transaction.
          readOnly: true
        financingType:
          type: string
          description: This is the type of financing offered.
          readOnly: true
        plan:
          type: string
          description: |-
            This is the plan number for this financing 
            transaction.
          readOnly: true
        gracePeriod:
          type: string
          description: |-
            This is the grace period, in months, associated 
            with deferred payment transactions.
          readOnly: true
        term:
          type: string
          description: |-
            This is the number of payments, in months, for 
            equal payment transactions.
          readOnly: true
        responseId:
          type: string
          description: This is the response ID assigned by Credorax.
          readOnly: true
        requestId:
          type: string
          description: This is the request ID assigned by Paysafe.
          readOnly: true
        description:
          type: string
          description: This is a description of the response.
          readOnly: true
        authCode:
          type: string
          description: This is the authorization code.
          readOnly: true
        txnDateTime:
          type: string
          description: This is the transaction date and time.
          readOnly: true
        referenceNbr:
          type: string
          description: This is the Bank net transaction ID/Merch Tran Ref
          readOnly: true
        responseReasonCode:
          type: string
          description: |-
            This is the raw response reason code returned by 
            Credorax.
          readOnly: true
        cvvVerification:
          type: string
          enum:
            - MATCH
            - NO_MATCH
            - NOT_PROCESSED
            - UNKNOWN
          description: This is the response to the cvv submitted with the transaction request.
          readOnly: true
        cvv2Result:
          type: string
          description: This is the raw cvv2 result code.
          readOnly: true
        status:
          type: string
          description: This is the status of the transaction at the processor side.
          readOnly: true
        orderId:
          type: string
          description: Unique NETELLER reference for the order.
          readOnly: true
        profile:
          $ref: '#/components/schemas/profile'
        operationId:
          type: string
          description: It is a transaction identifier at Safetypay.
    googlePay:
      title: googlePay
      x-stoplight:
        id: owh8ybk48p9jj
      type: object
      description: It has GooglePay details.
      x-examples:
        Example 1:
          googlePay:
            googlePayPaymentToken:
              apiVersionMinor: 0
              apiVersion: 2
              paymentMethodData:
                description: 'Test Card: Visa••••1111'
                info:
                  billingAddress:
                    address1: '1600 Amphitheatre Parkway'
                    address2: ''
                    address3: ''
                    administrativeArea: CA
                    countryCode: US
                    locality: Mountain View
                    name: Card Holder Name
                    postalCode: 94043
                    sortingCode:
                  cardDetails: 1111
                  cardNetwork: VISA
                tokenizationData:
                  token: 'xxxx'
                  type: PAYMENT_GATEWAY
                type: CARD
      properties:
        googlePayPaymentToken:
          type: object
          properties:
            apiVersion:
              type: number
              description: Major API version. The value is 2 for this specification.
              example: 2
            apiVersionMinor:
              type: number
              description: Minor API version. The value is 0 for this specification.
              example: 0
            paymentMethodData:
              type: object
              description: Payment method parameter of Google Pay Token.
              example: 'CARD'
              properties:
                description:
                  type: string
                  description: A descriptive text.
                info:
                  type: object
                  properties:
                    billingAddress:
                      type: object
                      properties:
                        address1:
                          type: string
                          description: The address1 of the contact.
                          example: 1600 Amphitheatre Parkway
                        address2:
                          type: string
                          description: The address2 of the contact.
                        address3:
                          type: string
                          description: The address3 of the contact.
                        administrativeArea:
                          type: string
                          description: The state for the contact.
                          example: CA
                        countryCode:
                          type: string
                          description: The contact’s two-letter ISO 3166 country code.
                          example: US
                        locality:
                          type: string
                          description: The city for the contact.
                          example: 'Mountain View'
                        name:
                          type: string
                          example: 'John Dee'
                          description: The contact's name
                        postalCode:
                          type: number
                          example: 94043
                          description: The zip code or postal code, where applicable, for the contact.
                        sortingCode:
                          type: number
                    cardDetails:
                      type: number
                      example: '1234'
                    cardNetwork:
                      type: string
                      example: 'VISA'
                      description:
                        This describes the type of card used for the request.
                tokenizationData:
                  description: The tokenization data for Google Pay.
                  oneOf:
                    - $ref: '#/components/schemas/googlePayTokenizationData'
                    - $ref: '#/components/schemas/googlePayDecryptedTokenizationData'
                type:
                  type: string
                  example: '[CARDS, TOKENIZED_CARDS]'
    googlePayTokenizationData:
      title: googlePayTokenizationData
      type: object
      x-stoplight:
        id: l6yvnaty6rjs1
      x-internal: true
      properties:
        token:
          type: object
          example: 'xxxx'
          description: This object contains the user's payment credentials.
        type:
          type: string
          description: Type property of Google Pay Payment Method.
          example: PAYMENT_GATEWAY
    googlePayDecryptedTokenizationData:
      title: googlePayDecryptedTokenizationData
      type: object
      x-stoplight:
        id: is3pt122ntv8h
      x-internal: true
      properties:
        type:
          type: string
          description: Type property of Google Pay Payment Method.
          example: PAYMENT_GATEWAY
        decryptedToken:
          description: This is the payment data object generated from the Android device for Google Pay.
          type: object
          x-stoplight:
            id: 81558mcmhqdv9
          properties:
            gatewayMerchantId:
              type: string
              x-stoplight:
                id: lua2cp500g8mp
            messageId:
              type: string
              x-stoplight:
                id: l1ws9dxppbdir
            messageExpiration:
              type: string
              x-stoplight:
                id: 5rgvi4lc3c0zn
            paymentMethodDetails:
              x-stoplight:
                id: walpxycqygdxu
              oneOf:
                - $ref: '#/components/schemas/googlePayDecryptedTdsToken'
                - $ref: '#/components/schemas/googlePayDecryptedPanToken'
    googlePayDecryptedTdsToken:
      type: object
      x-examples:
        Example:
          pan: '4012000033330026'
          expirationMonth: 12
          expirationYear: 2025
          authMethod: CRYPTOGRAM_3DS
          cryptogram: AAAAAA
          eciIndicator: '2'
      title: tokenWith3DS
      properties:
        authMethod:
          type: string
          enum:
            - CRYPTOGRAM_3DS
        pan:
          type: string
          x-stoplight:
            id: 0u0aatuopeoqh
          description: The DPAN number
        expirationMonth:
          type: integer
        expirationYear:
          type: integer
        cryptogram:
          type: string
          description: This field is required when authMethod is CRYPTOGRAM_3DS.
          x-stoplight:
            id: miv2efmaqmjtu
        eciIndicator:
          type: string
          description: The ECI indicator.
          x-stoplight:
            id: e57xcl6fq4t4e
      required:
        - authMethod
        - pan
        - expirationMonth
        - expirationYear
    googlePayDecryptedPanToken:
      type: object
      x-stoplight:
        id: 0m5qqg697hlox
      x-examples:
        Example:
          pan: '4012000033330026'
          expirationMonth: 12
          expirationYear: 2025
          authMethod: PAN_ONLY
      title: panOnlyToken
      properties:
        pan:
          type: string
          description: The DPAN number
          x-stoplight:
            id: 0u0aatuopeoqh
        expirationMonth:
          type: integer
        expirationYear:
          type: integer
        authMethod:
          type: string
          enum:
            - PAN_ONLY
      required:
        - authMethod
        - pan
        - expirationMonth
        - expirationYear
    googlePayObject:
      title: googlePay
      x-stoplight:
        id: xg2lpyi0myvjo
      type: object
      properties:
        googlePay:
          $ref: '#/components/schemas/googlePay'
      x-internal: true
    identityDocuments:
      title: identityDocuments
      x-stoplight:
        id: ymqp6jj0nsna7
      type: object
      description: Contains details regarding different identity documents like Driving License\SSN\Passport.
      x-internal: false
      properties:
        identityDocuments:
          type: array
          description: |-
            This is array of 2 JSON objects.
            - 1st object contains SSN
            - 2nd object contains Identity document details.
          items:
            anyOf:
              - properties:
                  type:
                    type: string
                    description: |-
                      Value will always be "SOCIAL_SECURITY"
                      This is part of 1st JSON object.
                    enum:
                      - SOCIAL_SECURITY
                    default: SOCIAL_SECURITY
                  documentNumber:
                    type: string
                    maxLength: 9
                    description: The customer’s social security number.
                    example: SSN123456
                required:
                  - type
                  - documentNumber
              - properties:
                  type:
                    type: string
                    enum:
                      - PASSPORT
                      - IDENTITY_CARD
                      - DRIVING_LICENSE
                      - SOCIAL_SECURITY
                      - TAX_IDENTIFICATION
                      - NATIONAL_IDENTITY
                      - STATE_ID
                      - MILITARY_ID
                      - WORK_PERMIT
                      - RESIDENCE_PERMIT
                      - REGISTRATION_ID
                      - ACRA
                      - LICENSE_NUMBER
                      - REGISTRATION_NUMBER
                      - BUSINESS_TAX_IDENTIFICATION
                    description: 'Identity documnent can be one of the allowed values:'
                    example: PASSPORT
                  documentNumber:
                    type: string
                    minLength: 5
                    maxLength: 31
                    description: The number associated with ID.
                    example: '1234567'
                  issuingCountry:
                    type: string
                    description: Value will always be "US".
                    example: USA
                  issuingCountrySubdvision:
                    type: string
                    maxLength: 2
                    description: 'Two letter state code. See [State Codes](https://developer.paysafe.com/en/rest-apis/paysafe-payments-api/payments-api/miscellaneous/)'
                    example: SA
                  expiryDate:
                    type: object
                    description: The expiration date associated with ID.
                    required:
                      - month
                      - year
                    properties:
                      month:
                        type: number
                        description: Expiry year.
                        example: 12
                      year:
                        type: number
                        description: Expiry month.
                        example: 2022
                required:
                  - type
                  - documentNumber
                  - issuingCountry
                  - issuingCountrySubdvision
                  - expiryDate
            type: object
      required:
        - identityDocuments
    interac:
      title: interac e-Transfer
      x-stoplight:
        id: a4c3cd5b8bea1
      type: object
      description: "\t\nDetails of the interac E-Transfer used for the transaction. "
      properties:
        consumerId:
          type: string
          example: suresh@example.com
          description: 'This is the merchant''s unique identifier of the customer. Customer/end user email id or phone number, from whom money has to be collected.'
          minLength: 5
          maxLength: 255
        type:
          type: string
          description: |-
            Default value is EMAIL. To pass mobile number we 
            have to specify the type as PHONE. This is needed
            for deposit flow (not for withdrawal).
          example: EMAIL
        question:
          type: string
          example: what is your name?
          description: When customer is not registered for auto-deposit at interac online then Merchant has to pass "question" parameter Mandatory in non-autodeposit withdrawal Payment Handle request flow.
          minLength: 5
          maxLength: 64
          pattern: '^[^\\s]([a-zA-Z0-9àâäèéêëîïôœùûüÿçÀÂÄÈÉÊËÎÏÔŒÙÛÜŸÇ \\-\\.\\?\\!,#]+)[^\\s]$'
        answer:
          type: string
          example: suresh
          minLength: 5
          maxLength: 64
          description: When customer is not registered for auto-deposit at interac online then Merchant has to pass "answer" parameter Mandatory in non-autodeposit withdrawal Payment Handle request flow.
          pattern: '^[a-zA-Z0-9àâäèéêëîïôœùûüÿçÀÂÄÈÉÊËÎÏÔŒÙÛÜŸÇ]+$'
        transferType:
          type: string
          description: This parameter is used to to identify if user is registered for Interac E-Transfer.
          enum:
            - ALIAS_REGULAR
            - ALIAS_AUTODEPOSIT
          readOnly: true
        maxAmount:
          type: number
          description: Maximum amount that user can transfer.
          readOnly: true
        fraudStatus:
          type: string
          enum:
            - CONFIRM_FRAUD
            - CONFIRM_LEGITIMATE
            - SCAM
            - PRESUME_LEGITIMATE
            - SUSPICIOUS
          description: |-
            This is the status of the Standalone Interac's Credit call response.

            Possible values for the fraud status:

            - CONFIRM_FRAUD - payment is confirmed fraud

            - CONFIRM_LEGITIMATE - payment is confirmed legitimate

            - SCAM - payment is scam

            - PRESUME_LEGITIMATE - payment is presume legitimate

            - SUSPICIOUS - payment is suspicious
        fraudType:
          type: string
          enum:
            - ACCOUNT_TAKEOVER
            - BAD_DEPOSIT
            - FIRST_PARTY_FRAUD
            - INTERCEPTED_PAYMENT
            - MERCHANT_DISPUTE
            - FAMILY_FRIEND_FRAUD
            - BUSINESS_EMAIL_COMPROMISE
            - VENDOR_EMAIL_COMPROMISE
            - MALWARE
            - APPLICATION_FRAUD
            - FRAUD_BUSINESS
            - OTHER
          description: |-
            This is the type of fraudulent transaction that was carried out with the intention of financial gain.

            Possible values for the fraud type:

            - ACCOUNT_TAKEOVER - Account Takeover

            - BAD_DEPOSIT - Proceeds of Bad Deposit

            - FIRST_PARTY_FRAUD - First Party Fraud

            - INTERCEPTED_PAYMENT - Intercepted Transfer

            - MERCHANT_DISPUTE - Merchant Dispute

            - FAMILY_FRIEND_FRAUD - Family/Friendly Fraud

            - BUSINESS_EMAIL_COMPROMISE - Business Email Compromise

            - VENDOR_EMAIL_COMPROMISE - Vendor Email Compromise

            - MALWARE - Malware

            - APPLICATION_FRAUD - Application Fraud

            - FRAUD_BUSINESS - Fraudulent Business

            - OTHER - Other fraud type
        paymentReference:
          type: string
          description: It is the Payment Reference Number at interac E-Transfer.
          example: cefa75308b000d6e12a0
        method:
          type: string
          enum:
            - SEND_MONEY
          description: Interac E-Transfer transaction type.
        paymentRefExpiryMinutes:
          type: number
          description: Interac E-Transfer transaction expiry time in minutes.
          readOnly: true
      required:
        - consumerId
    interacObject:
      title: interac e-Transfer
      x-stoplight:
        id: f9f837c21c43a
      type: object
      x-internal: true
      properties:
        interacETransfer:
          $ref: '#/components/schemas/interac'
    khipu:
      title: khipu via Safetypay Express
      x-stoplight:
        id: 5wp6e57jj36u7
      type: object
      properties:
        paymentExpiryMinutes:
          type: number
          description: It is the transaction expiry in minutes at SafetyPay.
    leg:
      title: leg
      x-stoplight:
        id: 77rre4vs2aznk
      type: object
      description: Contains detailed itinerary information for one of the trip legs
      properties:
        fare:
          type: string
          description: Indicates the total fare applied to a specific leg.
        serviceClass:
          type: string
          minLength: 1
          maxLength: 1
          description: |-
            Indicates service class (first class, business class, etc.). Example values (not limited to):

            - F - first class

            - J - business class

            - W - premium economy class

            - Y - economy class
          example: F
          enum:
            - F
            - J
            - W
            - 'Y'
        serviceClassFee:
          type: string
          description: Fee applied to a specific leg
        isStopOverAllowed:
          type: boolean
          description: |-
            Indicates whether a stopover is allowed on this ticket. Valid values are:

            - false - not allowed

            - true - allowed
        departureAirport:
          type: string
          minLength: 3
          maxLength: 3
          description: Departure airport
        destination:
          type: string
          minLength: 3
          maxLength: 3
          description: Destination Airport Code (IATA Airport Code).
          example: YUL
        fareBasis:
          type: string
          minLength: 1
          maxLength: 6
          description: 'Contains a Fare Basis Code for Leg that carriers assign to a particular ticket type, such as business class or discounted/nonrefundable.'
          example: VMAY
        departureDate:
          type: string
          format: date
          description: 'Date of passenger’s departure for this leg. Date format = YYYY-MM-DD, ISO 8601 expected. For example, 2014-01-26'
          example: '2022-12-20'
        arrivalTime:
          type: string
          description: Arrival time at the airport for that specific leg.
          format: date-time
          example: '2023-05-25T10:32:28Z'
        conjunctionTicket:
          type: string
          maxLength: 15
          description: Specifying a number of the conjunction ticket within a single contract of carriage.
        couponNumber:
          type: string
          description: Coupon number associated with the leg. Every leg could have a coupon number.
          maxLength: 10
        notation:
          type: string
          maxLength: 20
          description: 'An endorsement can be an agency-added notation or a mandatory government required notation, such as value-added tax. A restriction is a limitation based on the type of fare, such as a ticket with a 3-day minimum stay'
        taxes:
          type: string
          description: Taxes for a specific leg
        flight:
          $ref: '#/components/schemas/flight'
      required:
        - fare
    level2level3:
      title: level2level3
      type: object
      description: |-
        Level 2 and Level 3 (L2/L3) credit card processing refers to certain B2B card transactions for which the merchant might be eligible for lower credit card interchange rates. The lower rates may be available for merchants who provide more detailed information when processing card-not-present transactions. In order to be eligible for L2/L3 transactions:

        - Your merchant account must be properly configured by Paysafe.

        - The BIN of the credit card used for the transaction must be eligible –typically,these are government-issued credit cards.

        **Note:** Not all processing gateways support this parameter. Contact your accountmanager for more information.
      x-stoplight:
        id: 5d94c7d0cfe66
      properties:
        exemptLocalTax:
          type: boolean
          description: |-
            This indicates whether or not local tax is exempted for the request. If set to true, then the 
            localTaxAmount parameter will be ignored.

            **Note:** This value defaults to false
          example: true
          default: false
        localTaxAmount:
          type: number
          description: This is the local sales tax applied to the purchase.
          example: 1500
        nationalTaxAmount:
          type: number
          description: This is the national tax included in the transaction amount.
          example: 0
          maximum: 99999999999
        freightAmount:
          type: number
          description: This is the freight or shipping portion of the total transaction amount.
          example: 0
          maximum: 99999999999
        dutyAmount:
          type: number
          description: This is the duty associated with the import of the purchased goods.
          example: 0
          maximum: 99999999999
        destinationZip:
          type: string
          description: |-
            This is the postal/zip code of the address to which the purchased goods will be delivered. This field 
            can be identical to the shipFromZip if the customer is present and takes immediate possession of the 
            goods.
          example: '90210'
          maxLength: 10
        destinationCountry:
          type: string
          description: |-
            This is the country to which the goods are being 
            shipped. See [Country Codes](https://developer.paysafe.com/en/support/reference-information/codes/#country-codes).
          example: US
          maxLength: 2
        shipFromZip:
          type: string
          description: This is the postal/zip code of the address from which the purchased goods are being shipped.
          example: '90211'
          maxLength: 10
        lineItems:
          $ref: '#/components/schemas/lineItems'
      x-examples:
        Example:
          localTaxAmount: 15000
          nationalTaxAmount: 0
          freightAmount: 0
          dutyAmount: 0
          destinationZip: '90210'
          destinationCountry: US
          shipFromZip: '90210'
          lineItems:
            - description: Disney Cruise Line - Adult
              productCode: DCL-A
              quantity: 2
              unitAmount: 120000
              taxRate: 5
              taxAmount: 12000
              totalAmount: 252000
            - description: Disney Cruise Line - Kids
              productCode: DCL-K
              quantity: 1
              unitAmount: 60000
              taxRate: 5
              taxAmount: 3000
              totalAmount: 63000
    lineItems:
      title: lineItems
      type: object
      description: This is more detailed information about the items that are being purchased for Level2Level3 merchants
      x-stoplight:
        id: 8fc39ce034c91
      properties:
        description:
          type: string
          description: This is a description of the item(s) being purchased.
          example: Disney Cruise Line
          maxLength: 50
        productCode:
          type: string
          description: This is a merchant-defined description code of the item being purchased.
          example: DCL
          maxLength: 12
        quantity:
          type: number
          description: |-
            This is the quantity of the item.

            **Note:** Max 4 decimals is allowed.
          example: 4
          maximum: 99999999999
        unitAmount:
          type: number
          description: 'This is the unit price of the item being purchased, in minor units. The currency will be based on the account setting.'
          example: 120000
          maximum: 99999999999
        taxRate:
          type: number
          description: |-
            This is the tax rate used to calculate the tax 
            amount. For example, if the tax rate is 10.5%, this value should be 10.5.

            **Note:** Max 2 decimals allowed.
          example: 5
          maximum: 100
        taxAmount:
          type: number
          example: 24000
          maximum: 99999999999
          description: |-
            This is the amount of any value-added taxes that 
            can be associated with the purchased item, in 
            minor units. The currency will be based on the 
            account setting. 

            **Note:** Our system will not validate the accuracy of this value. The merchant's application must 
            calculate this value correctly.
        totalAmount:
          type: number
          maximum: 99999999999
          description: |-
            This is the total amount of the line item, typically calculated as price multiplied by quantity, in minor units. The currency is based on the account setting.

            **Note:** Our system will not validate the accuracy of this value. The merchant''s application must calculate this value correctly.
    links:
      title: links
      type: object
      example:
        rel: redirect_payment
        href: 'http://api.paysafe.com/card/redirect/372b5ee7-6360-4403-b444-164f8f1d2709'
        method: GET
      x-stoplight:
        id: a9557ea5cc5b1
      properties:
        rel:
          type: string
          description: |-
            This is the link type that allows different endpoints to be targeted depending on the end state of the transaction.

            - redirect_registration - Merchant needs to redirect consumer to this url to complete registration.

            - redirect_payment - Merchant needs to redirect consumer to this url to complete authentication.

            - on_completed - Paysafe will return to this merchant url post successful payment.

            - on_failed - Paysafe will return to this merchant url post if payment is failed.

            - on_cancelled - Paysafe will return to this merchant url post if payment is cancelled.

            - default - The default return URL that will be used if specific status return URL is not defined.
          example: redirect_payment
          enum:
            - redirect_payment
            - redirect_registration
            - on_completed
            - default
            - on_failed
            - on_cancelled
        href:
          type: string
          example: 'http://api.paysafe.com/card/redirect/372b5ee7-6360-4403-b444-164f8f1d2709'
          description: The url to be used for further actions.
          readOnly: true
        method:
          type: string
          example: GET
          description: The corresponding HTTP request method to be invoked on url.
          readOnly: true
      description: URL links to redirect customer during transaction flow
    lookUpPaymentMethods:
      title: lookUpPaymentMethods
      x-stoplight:
        id: fyr46h615xjnx
      type: object
      properties:
        paymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/paymentMethods'
      x-internal: true
    lodgingDetails:
      title: lodgingDetails
      type: object
      description: |-
        Contains information about lodging details.

        >**Note:** This object is only for Lodging Merchants.

        >**Note:** This field has to be passed only in case of card transactions.
      x-examples:
        Example 1:
          lodgingDetails:
            hotelFolioNumber: Customer Folio Number
            checkInDate: '2023-12-15'
            checkOutDate: '2023-12-20'
            customerServicePhone: '8311234567'
            propertyLocalPhone: '8311234567'
            extraCharges:
              - RESTAURANT
              - GIFT_SHOP
              - MINI_BAR
              - TELEPHONE
              - LAUNDRY
              - OTHER
            roomRate: 1200
            programCode: LODGING
            numberOfNights: 5
            isFireSafetyActCompliant: true
      x-stoplight:
        id: 6f92e337c760d
      properties:
        hotelFolioNumber:
          type: string
          description: |-
            The card acceptor’s internal invoice or billing ID reference number.

            * Required during settlement
          example: Customer Folio Number
          maxLength: 25
        checkInDate:
          type: string
          format: date
          description: |-
            The arrival date.

            Date format = YYYY-MM-DD, ISO 8601 expected. For example 2023-12-20.

            * Required during settlement
            _UTC Date Format_
          example: '2023-12-15'
        checkOutDate:
          type: string
          format: date
          example: '2023-12-20'
          description: |-
            The departure date.

            Date format = YYYY-MM-DD, ISO 8601 expected.  For example 2023-12-20.

            * Required during settlement
            _UTC Date Format_
        customerServicePhone:
          type: string
          description: |-
            Merchant phone number that the cardholder may call for service. Allowed numeric characters only.

            * Required during settlement request with Visa or Mastercard for integration with TSYS processor
          maxLength: 10
          example: '8311234567'
          pattern: \d
        propertyLocalPhone:
          type: string
          description: |-
            The lodging property location's phone number. Allowed numeric characters only.

            * Required during settlement requests with Mastercard for integration with TSYS processor
          maxLength: 10
          example: '8311234567'
          pattern: \d
        extraCharges:
          type: array
          description: Indicates if the reservation includes additional ancillary charges.
          example: RESTAURANT
          items:
            type: string
            enum:
              - RESTAURANT
              - GIFT_SHOP
              - MINI_BAR
              - TELEPHONE
              - OTHER
              - LAUNDRY
            example: RESTAURANT
        roomRate:
          type: number
          description: |-
            The nightly rate for one room at the lodging property.

            * Required during settlement request with Amex for integration with TSYS processor
          example: 200
          maximum: 999999999999
        programCode:
          type: string
          description: |-
            Code that corresponds to the category of lodging charges detailed in this message. Allowed values:

            - LODGING - (Default) Submitted charges are for lodging
            - NO_SHOW - Submitted charges are for the failure of the guest(s) to check in for reserved room
            - ADVANCED_DEPOSIT - Submitted charges are for an Advanced Deposit to reserve one or more rooms. In this case, the settlement date will be sent to the schemes for both the check-in and check-out dates.

            If no value is submitted the default value 'LODGING' is used.
          example: LODGING
          enum:
            - LODGING
            - NO_SHOW
            - ADVANCED_DEPOSIT
          default: LODGING
        numberOfNights:
          type: number
          maximum: 99
          description: |-
            The total number of nights the room is booked for.

            * Required during authorization request with Visa for integration with TSYS processor
            * Required during settlement request with Amex for integration with TSYS processor
          example: 5
        isFireSafetyActCompliant:
          type: boolean
          description: |-
            Identifies that the facility complies with the Hotel and Motel Fire Safety Act of 1990. Possible values:

            - true
            - false
    mach:
      title: mach via Safetypay Express
      x-stoplight:
        id: dm9q4r8z4bb0i
      type: object
      x-internal: true
      properties:
        paymentExpiryMinutes:
          type: number
          description: It is the transaction expiry in minutes at Safetypay.
    mandate:
      title: mandate
      type: object
      description: 'Contains customer bank''s mandate details '
      x-stoplight:
        id: 8dbfbfdbf3189
      properties:
        id:
          type: string
          description: This is the id of the mandate that got created.
          example: abcdc28d-486e-4b0a-bbf9-314033863542
          readOnly: true
        reference:
          type: string
          description: |-
            This is the identifier of the mandate in the 
            banking system.
          example: ABCDEF0796
        status:
          type: string
          description: This is the status of the mandate request response.
          enum:
            - PENDING
            - ACTIVE
            - CANCELLED
            - INACTIVE
          readOnly: true
        statusReason:
          type: string
          enum:
            - MERCHANT_CANCELLED
            - BANK_CANCELLED
            - DECLINED
            - REJECTED
            - DISPUTED
            - UNAUTHORIZED
            - TRANSFERRED
          example: MERCHANT_CANCELLED
          description: This is the status reason of the mandate request response.
          readOnly: true
      required:
        - reference
    mazooma:
      title: mazooma
      x-stoplight:
        id: 6baa4d0f9e4e6
      type: object
      x-internal: false
      description: 'Mazooma details to be used for the transaction '
      x-examples:
        Example:
          consumerId: PP_100222
          ach:
            paymentHandleToken: BAru0JIKuktMcLsy
      properties:
        consumerId:
          type: string
          minLength: 1
          maxLength: 255
          description: This is a field identifying the customer.
        ach:
          type: object
          properties:
            paymentHandleToken:
              type: string
              description: This is a unique identifier for each user bank account which is saved at Mazooma end.
      required:
        - consumerId
    mazoomaObject:
      title: mazooma
      x-stoplight:
        id: eflqx5b251prf
      type: object
      properties:
        mazooma:
          $ref: '#/components/schemas/mazooma'
      x-internal: true
    merchantDescriptor:
      title: merchantDescriptor
      type: object
      example:
        dynamicDescriptor: OnlineStore
        phone: 999-8888
      x-stoplight:
        id: 211b78557c032
      properties:
        dynamicDescriptor:
          type: string
          example: OnlineStore
          maxLength: 20
          description: |
            This is a merchant descriptor that will be displayed on a customer’s card statement.
        phone:
          type: string
          description: |
            This is the merchant’s phone number, which is appended to the merchant descriptor on a customer’s card statement.
            
             **Note:** This field is used only in case of payment.
          example: '12345678'
          maxLength: 13
      required:
        - dynamicDescriptor
      description: This is the merchant descriptor that will be displayed on the customer's card or bank statement.
    meta:
      title: meta
      x-stoplight:
        id: 31v2fo79y6x5g
      type: object
      description: Contains meta info for the pagination APIs
      properties:
        numberOfRecords:
          type: number
          description: |-
            This is the number of records returned in the 
            lookup.
          example: 1
          readOnly: true
        limit:
          type: number
          description: This is the number of records returned per page.
          example: 10
          readOnly: true
        page:
          type: number
          description: |-
            This is the page of records on which the lookup 
            starts.
          example: 1
          readOnly: true
    neteller:
      title: neteller
      x-stoplight:
        id: zuypjazrwvhut
      type: object
      description: Neteller details to be used for the request
      properties:
        consumerId:
          type: string
          maxLength: 50
          description: This is the email address of the customer who is making or receiving the payment.This is to be provided by merchant while making a payout.
          example: netellertest_GBP@neteller.com
        recipientDescription:
          type: string
          maxLength: 30
          description: 'This is a description to be shown on the Skrill payment page in the logo area if there is no logo url parameter. If no value is submitted and there is no logo, the pay_to_email value is shown as the recipient of the payment.'
          example: logo_url_alt_text
        logoUrl:
          type: string
          example: 'http://www.paysafe.com/icon.jpg'
          description: Neteller logo url.
      required:
        - consumerId
    netellerObject:
      title: neteller
      x-stoplight:
        id: bsj0fs98zv1jk
      type: object
      properties:
        neteller:
          $ref: '#/components/schemas/neteller'
      x-internal: true
    networkTokenFields:
      title: Card with Network Token
      type: object
      properties:
        tokenType:
          type: string
          enum:
            - NETWORK_TOKEN
        networkToken:
          type: object
          description: 'Holds network token fields'
          properties:
            bin:
              type: string
              description: 'These are the first 6 digits of the network token.'
              example: '411111'
              readOnly: true
            lastDigits:
              type: string
              description: These are the last four digits of the network token.
              example: '6585'
              readOnly: true
            status:
              type: string
              enum:
                - ACTIVE
                - INACTIVE
                - SUSPENDED
              example: ACTIVE
              description: The status of the network token.
              readOnly: true
            expiry:
              $ref: '#/components/schemas/cardExpiry'
            cardArt:
              type: object
              description: 'Holds network token card art fields'
              properties:
                cardArtUrl:
                  type: string
                  description: The url for loading the card art url
                  readOnly: true
                isCobranded:
                  type: boolean
                  description: Boolean value whether the card is cobranded
    networkTokenCardObject:
      title: card
      x-stoplight:
        id: 19soodx90lymv
      type: object
      x-internal: true
      properties:
        card:
          $ref: '#/components/schemas/cardBaseFieldsWithOptionalNetworkTokenOrApplePay'
        splitpay:
          $ref: '#/components/schemas/splitpay'
        threeDs:
          $ref: '#/components/schemas/threeDs'
        authentication: 
          description: 3D Secure authentication details.
          properties:
            exemptionIndicator:
              $ref: '#/components/schemas/authentication/properties/exemptionIndicator'  
        paymentHandleTokenFrom:
          type: string
          description: 'This is an existing [Customer Payment Handle](/operations/create-payment-handle-for-customer), from which the payment instrument and profile details are retrieved. If this parameter is included you can omit the billingDetails object.'
        transactionIntent:
          $ref: '#/components/schemas/transactionIntent'
    onlineBankTransferViaSafetyPay:
      title: onlineBankTransfer via Safetypay Express
      x-stoplight:
        id: un8r367xkwgw4
      type: object
      x-internal: true
      properties:
        paymentDetails:
          $ref: '#/components/schemas/paymentDetails'
        paymentExpiryInMinutes:
          type: number
          description: It is the transaction expiry in minutes at Safetypay.
    orderItemDetails:
      title: orderItemDetails
      x-stoplight:
        id: jqr1nn9e0kaoc
      type: object
      properties:
        preOrderItemAvailabilityDate:
          type: string
          format: date
          description: 'For a pre-ordered purchase, this is the date that the merchandise is expected to be available. The ISO 8601 date format is expected, i.e., YYYY-MM-DD.'
        preOrderPurchaseIndicator:
          type: string
          enum:
            - MERCHANDISE_AVAILABLE
            - FUTURE_AVAILABILITY
          description: This indicates whether the cardholder is placing an order for available merchandise or merchandise with a future availability or release date.
        reorderItemsIndicator:
          type: string
          enum:
            - FIRST_TIME_ORDER
            - REORDER
          description: This indicates whether the cardholder is reordering merchandise.
        shippingIndicator:
          type: string
          enum:
            - SHIP_TO_BILLING_ADDRESS
            - SHIP_TO_VERIFIED_ADDRESS
            - SHIP_TO_DIFFERENT_ADDRESS
            - SHIP_TO_STORE
            - DIGITAL_GOODS
            - TRAVEL_AND_EVENT_TICKETS
            - OTHER
          description: This is the shipping method for the transaction.
      x-internal: true
    originalCredits:
      allOf:
        - type: object
          properties:
            id:
              type: string
              maxLength: 36
              description: This is the ID returned in the response. This ID can be used for future associated requests.
              example: 25f6dadf-176a-415f-95c9-6ff39ff697ba
              readOnly: true
            paymentType:
              type: string
              enum:
                - CARD
              readOnly: true
            txnTime:
              type: string
              description: This is the date and time the transaction was processed.
              example: '2023-01-19T11:32:42Z'
              format: date-time
              readOnly: true
            billingDetails:
              $ref: '#/components/schemas/billingDetails'
            status:
              type: string
              enum:
                - INITIATED
                - RECEIVED
                - PENDING
                - FAILED
                - CANCELLED
                - EXPIRED
                - COMPLETED
              description: |-
                This is the status of the payment handle. Possible values are:

                - INITIATED – The transaction was initiated with the downstream provider.

                - RECEIVED - Our system has received the request and is waiting for the downstream processor’s response.

                - PENDING - The transaction awaiting payment service provider's response.

                - CANCELLED – The authorization request has been fully reversed.

                - EXPIRED – The transaction request is expired.

                - COMPLETED – The transaction request is completed.
              readOnly: true
            card:
              $ref: '#/components/schemas/card'
        - $ref: '#/components/schemas/originalCreditsRequest'
      title: originalCredits
    originalCreditsList:
      title: originalCreditsList
      x-stoplight:
        id: 5bm0p9t37ddxw
      type: object
      x-internal: true
      properties:
        originalCredits:
          type: array
          items:
            $ref: '#/components/schemas/originalCredits'
        meta:
          $ref: '#/components/schemas/meta'
    originalCreditsRequest:
      title: originalCreditsRequest
      x-stoplight:
        id: 430pgpft76ifm
      type: object
      x-internal: true
      properties:
        merchantRefNum:
          type: string
          maxLength: 255
          description: This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.
          example: merchant ABC-444
        amount:
          type: number
          maximum: 99999999999
          description: |-
            This is the amount of the request, in minor units. For example, to process US $10.99, this value should be 1099.

            **Note:** The amount specified in the Original Credit request must match the amount specified in the Payment Handle request from which the paymentHandleToken is taken.
          example: 500
        currencyCode:
          type: string
          maxLength: 3
          description: |-
            This is the currency of the merchant account, e.g., USD or CAD, returned in the request response. See [Currency Codes](https://developer.paysafe.com/en/support/reference-information/codes/#country-codes).

            **Note:** The currencyCode specified in the Credit request must match the currencyCode specified in the Payment Handle request from which the paymentHandleToken is taken.
          example: USD
        paymentHandleToken:
          type: string
          maxLength: 36
          description: This is the payment token generated by Paysafe that will be used by merchants for Original Credit requests.
          example: SC9mbfZSITB5OwDJ
        customerIp:
          type: string
          maxLength: 39
          description: This is the customer's IP address.
          example: 204.91.0.12
        description:
          type: string
          maxLength: 255
          description: 'This is a description of the transaction, provided by the merchant.'
          example: Winning payment from Loto
        merchantDescriptor:
          $ref: '#/components/schemas/merchantDescriptor'  
        paymentFacilitator:
          $ref: '#/components/schemas/paymentFacilitator'
      required:
        - merchantRefNum
        - amount
        - currencyCode
        - customerIp
    pagoefectivo:
      title: pagoefectivo
      x-stoplight:
        id: dam1bh1ewgji8
      type: object
      properties:
        consumerId:
          type: string
          minLength: 1
          maxLength: 50
          description: The ID of the consumer at the merchant site
        minAgeRestriction:
          type: number
          minimum: 1
          maximum: 99
          description: payment can be restricted for a certain minimum consumer age (implicitly restricts payment to registered consumers only)
        kycLevelRestriction:
          type: string
          description: payment can be restricted for a certain minimum kyc level (implicitly restricts payment to registered consumers only)
        submerchantId:
          type: string
          pattern: '^[0-9A-Za-z]{1,8}$'
          description: sub-merchant id of APM customer
        expirationTime:
          type: string
          description: expiration time in minutes
        barcodes:
          type: array
          items:
            type: object
            properties:
              barcode:
                type: string
              visualization:
                type: string
              country:
                type: string
              expiresAt:
                type: string
              message:
                type: string
              code:
                type: string
      required:
        - consumerId
      description: 'These are the details of the pagoefectivo account used for the request. Only one payment instrument object (for example, card or pagoefectivo) can be included in the request.'
      x-internal: true
    pagoefectivoObject:
      title: pagoefectivo
      x-stoplight:
        id: 52tz0bli7fo9b
      type: object
      properties:
        pagoefectivo:
          $ref: '#/components/schemas/pagoefectivo'
      x-internal: true
    passenger:
      title: passenger
      x-stoplight:
        id: sxq1o4kntryw6
      type: object
      properties:
        ticketNumber:
          type: string
          description: 'Identifies the ticket for this passenger only. '
          maxLength: 15
        firstName:
          type: string
          maxLength: 80
          description: Passenger's first name.
        lastName:
          type: string
          description: Passenger's last name.
          maxLength: 80
        phoneNumber:
          type: string
          maxLength: 40
          description: Passenger's phone number.
        passengerCode:
          type: string
          description: "Code that identifies a type of passenger. For example 'INF' which indicates a child traveling on parent's lap.\t"
          maxLength: 10
        gender:
          type: string
          description: |-
            Passenger gender.
            Options: [M – Male, F – Female, O – Other, N – Not Specified]
          enum:
            - M
            - F
            - O
            - 'N'
      required:
        - ticketNumber
      x-examples:
        Example 1:
          ticketNumber: '56827'
          firstName: Venkata Suresh
          lastName: Chagalamarri
          phoneNumber: '7181855783'
          passengerCode: INF
          gender: M
    passengers:
      title: passengers
      x-stoplight:
        id: e34qc1xy6m9gy
      type: object
      properties:
        passenger1:
          $ref: '#/components/schemas/passenger'
        passenger2:
          $ref: '#/components/schemas/passenger'
        passenger3:
          $ref: '#/components/schemas/passenger'
        passenger4:
          $ref: '#/components/schemas/passenger'
        passenger5:
          $ref: '#/components/schemas/passenger'
        passenger6:
          $ref: '#/components/schemas/passenger'
      x-examples:
        Example 1:
          passengers:
            passenger1:
              ticketNumber: '56827'
              firstName: Venkata Suresh
              lastName: Chagalamarri
              phoneNumber: '7181855783'
              passengerCode: INF
              gender: M
            passenger2:
              ticketNumber: '56828'
              firstName: Venkata Naresh
              lastName: Chagalamarri
              phoneNumber: '7181855783'
              passengerCode: INF
              gender: M
            passenger3:
              ticketNumber: '56829'
              firstName: Venkata Rajitha
              lastName: Chagalamarri
              phoneNumber: '7181855783'
              passengerCode: INF
              gender: F
    payByBank:
      title: payByBank
      x-stoplight:
        id: egf9uqdhq300k
      description: 'This object should be used only for pay by bank transactions.'
      type: object
      properties:
        consumerId:
          type: string
          description: This is your identifier for your consumer and must be unique per consumer.
          minLength: 1
          maxLength: 50
          example: 'PP_100222'
        registrationId:
          type: string
          description: Paysafe’s unique identifier for your consumer.
          example: '5008f12884-7c26-4af2-e063-ac0e1a0a7533'
        ach:
          description: This is an array containing a list of bank accounts that the consumer has linked in order to make Pay by Bank payments, along with additional information about those accounts.
          type: object
          properties:
            paymentHandleToken:
              type: string
              description: This is a token representing an individual bank account that the consumer has linked in order to make Pay by Bank payments. 
              example: 'BASbar999Lak1Good'
            accountType:
              type: string
              description: |-
                This provides you with the type of bank account for information purposes. Allowed values:

                  - SAVINGS
                  - CHECKING
                  - LOAN
              read-only: true
            routingNumber:
              type: string 
              description: This is the 9-digit routing number of the bank.
              maxLength: 9
              example: '211589828'
            lastDigits:
              type: string
              description: This is returned in response. It contains only last 2 digits of bank account.
              minLength: 2
              maxLength: 2
              example: "92"
              read-only: true
      required:
        - consumerId
        - paymentHandleToken
    payByBankObject:
      title: payByBank
      x-stoplight:
        id: x1elgcajsxqis
      type: object
      x-internal: true
      properties:
        payByBank:
          $ref: '#/components/schemas/payByBank'
    paymentHandleBaseRequest:
      allOf:
        - type: object
          properties:
            merchantRefNum:
              type: string
              maxLength: 255
              description: This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.
              example: merchantRefNum-101
            transactionType:
              type: string
              enum:
                - PAYMENT
                - STANDALONE_CREDIT
                - ORIGINAL_CREDIT
                - VERIFICATION
              description: |-
                This specifies the transaction type for which the Payment Handle is created.

                - PAYMENT - Payment Handle is created to continue the Payment.

                - STANDALONE_CREDIT - Payment Handle is created to continue the Standalone Credit.

                - ORIGINAL_CREDIT - Payment Handle is created to continue the Original Credit.

                - VERIFICATION - Payment Handle is created to continue the Verification request.
            accountId:
              type: string
              maxLength: 10
              description: 'If you are a merchant, then this field is required only if you have more than one account configured for the same payment method and currency. If you are a partner using a shared API key, then this field is mandatory.'
              example: '9876543210'
            paymentType:
              type: string
              enum:
                - CARD
                - APPLEPAY
                - SKRILL
                - NETELLER
                - PAYSAFECASH
                - PAYSAFECARD
                - PAYPAL
                - PAY BY BANK
                - VENMO
                - VIPPREFERRED
                - MAZOOMA
                - MBWAY
                - MULTIBANCO
                - SIGHTLINE
                - INTERAC_ETRANSFER
                - RAPID_TRANSFER
                - SKRILL1TAP
                - ACH
                - EFT
                - BACS
                - SEPA
                - ONLINE_BANK_TRANSFER
                - PIX
                - KHIPU
                - MACH
                - BOLETO_BANCARIO
                - SAFETYPAY_CASH
              description: This is the payment type associated with the Payment Handle used for this request.
            amount:
              type: number
              description: |-
                This is the amount of the request, in minor units. See [Currency Codes](https://developer.paysafe.com/en/support/reference-information/codes/#currency-codes).

                **Note:** This field is mandatory if transactionType is included.

                The amount specified in the Payment Handle request must match the amount specified in the Payments API request the paymentHandleToken is used for.
              example: 500
              maximum: 99999999999
            currencyCode:
              type: string
              maxLength: 3
              description: |-
                This is the currency of the merchant account, e.g., USD or CAD. See [Currency Codes](https://developer.paysafe.com/en/support/reference-information/codes/#country-codes).

                **Note:** This field is mandatory if transactionType is included. The currencyCode specified in the Payment Handle request must match the currencyCode specified in the Payments API request the paymentHandleToken is used for.
              example: USD
            profile:
              $ref: '#/components/schemas/profile'
            billingDetails:
              $ref: '#/components/schemas/billingDetails'
            merchantDescriptor:
              $ref: '#/components/schemas/merchantDescriptor'
            returnLinks:
              $ref: '#/components/schemas/returnLinks'
            customerIp:
              type: string
              description: This is the customer's IP address.
              maxLength: 39
              example: 111.111.111.111
            singleUseCustomerToken:
              type: string
              description: |
                This is the single use customer token of the profile on which customer operation (ADD/EDIT/DELETE) needs to be done.

                **Note:** Mandatory, if customerOperation is EDIT or DELETE.
              maxLength: 36
            deviceDetails:
              $ref: '#/components/schemas/deviceDetails'
            shippingDetails:
              $ref: '#/components/schemas/shippingDetails'
          required:
            - merchantRefNum
            - transactionType
            - paymentType
            - amount
            - currencyCode
    paymentHandleRequest:
      allOf:
        - type: object
        - $ref: '#/components/schemas/paymentHandleBaseRequest'
        - $ref: '#/components/schemas/paymentInstrument'
      title: paymentHandleRequest
      x-internal: true
    paymentHandleNetworkTokenResponse:
      allOf:
        - type: object
        - $ref: '#/components/schemas/paymentHandleBaseRequest'
        - $ref: '#/components/schemas/paymentInstrumentWithNetworkTokenCard'
      title: paymentHandleRequest
      x-internal: true
    paymentHandleBaseFields:
      type: object
      properties:
        id:
          type: string
          description: 'This is the ID returned in the response. This ID can be used for future associated requests, for example, to look up the Payment Handle.'
          maxLength: 36
          example: 26359efd-7cfb-4014-a13d-1724e3ff17fa
          readOnly: true
        paymentHandleToken:
          type: string
          description: This is the payment token generated by Paysafe that will be used by merchants for Payment API requests.
          maxLength: 36
          example: SCO3wKcIyLoQbQvw
          readOnly: true
        txnTime:
          type: string
          description: This is the date and time the transaction was processed.
          example: '2023-01-19T10:28:00Z'
          format: date-time
          readOnly: true
        status:
          type: string
          enum:
            - INITIATED
            - PAYABLE
            - PROCESSING
            - FAILED
            - EXPIRED
            - COMPLETED
          description: |-
            This is the status of the payment handle. Possible values are:

            - INITIATED – The transaction was initiated with the downstream provider.

            - PAYABLE – The merchant can use the Payment Handle for a Payment request.

            - PROCESSING – The Payment Handle was authorized by customer, awaiting PSP response.

            - FAILED – The transaction failed due to either an error or being declined.

            - EXPIRED – The Payment Handle expired because the merchant did not proceed with the Payment request.

            - COMPLETED – The Payment request was initiated successfully using the Payment Handle.
          readOnly: true
        liveMode:
          type: boolean
          description: |-
            This flag indicates the environment.

            - true - Production
            - false - Non-Production
        usage:
          type: string
          enum:
            - SINGLE_USE
            - MULTI_USE
          example: SINGLE_USE
          description: |-
            This specifies how the Payment Handle will be used for Payments. Possible values are:

            - SINGLE_USE – The Payment Handle can be used for one transaction only and expiresif not used.

            - MULTI_USE – The Payment Handle can be used multiple times.
          readOnly: true
        action:
          type: string
          enum:
            - NONE
            - REDIRECT
          description: |-
            This specifies the next step of the user journey once they proceed to the Payment. Possible values are:

            - NONE – No action is required, for example, for a standard credit card payment.

            - REDIRECT – The user must be redirected in order to complete a Payment, for example, when an alternate payment method like Paysafecard is used.
          example: NONE
          readOnly: true
        executionMode:
          type: string
          enum:
            - SYNCHRONOUS
            - ASYNCHRONOUS
          description: |-
            This specifies the action of the merchant server in order to complete the Payment. Possible values are:
              
              - SYNCHRONOUS – The status of the Payment request will be returned synchronously to the merchant, e.g., a credit card request.
              
              - ASYNCHRONOUS – The Payment request is not completed immediately and the merchant [must rely on webhooks](/#webhooks) to retrieve the status of the Payment request.'
          readOnly: true
        timeToLiveSeconds:
          type: number
          description: |-
            This is the period of time, in seconds, the 
            paymentHandleToken is valid before expiration.
          readOnly: true
        gatewayResponse:
          $ref: '#/components/schemas/gatewayResponse'
        gatewayReconciliationId:
          type: string
          maxLength: 36
          example: 8e13f7fe-4fd2-4f58-92da-89fc9c2ec29b
          description: Transaction identifier that can be used to reconcile this transaction with the provider gateway.
        updatedTime:
          type: string
          format: date-time
          description: Indicates the last updated time for the resource.
          readOnly: true
        statusTime:
          type: string
          format: date-time
          description: Indicates the last updated time for the resource.
          readOnly: true
        links:
          $ref: '#/components/schemas/links'
    paymentHandle:
      allOf:
        - $ref: '#/components/schemas/paymentHandleBaseFields'
        - $ref: '#/components/schemas/paymentHandleRequest'
      title: paymentHandle
      description: 'Contains all the info for a specific payment type per transaction '
      x-examples:
        Example:
          id: cdd1e763-352f-4905-a93f-1838ea467a1e
          paymentType: SKRILL
          paymentHandleToken: PHZUY7WtMfbdsx45
          merchantRefNum: 4bcdd8f8-a936-458a-bb3d-906d0d15d43f
          currencyCode: USD
          txnTime: '2023-01-20T03:21:49Z'
          billingDetails:
            street: 100 Queen
            street2: Unit 201
            city: Toronto
            zip: M5H 2N2
            country: CA
          customerIp: 172.0.0.1
          status: PAYABLE
          liveMode: false
          usage: SINGLE_USE
          action: NONE
          executionMode: SYNCHRONOUS
          amount: 500
          merchantDescriptor:
            dynamicDescriptor: OnlineStore
            phone: '12345678'
          timeToLiveSeconds: 899
          gatewayResponse:
            processor: SKRILL_QCO
          returnLinks:
            - rel: on_failed
              href: 'https://usgaminggamblig.com/payment/return/failed'
            - rel: on_cancelled
              href: 'https://usgaminggamblig.com/payment/return/cancel'
            - rel: default
              href: 'https://usgaminggamblig.com/payment/return/success'
          transactionType: STANDALONE_CREDIT
          gatewayReconciliationId: c64e6899-0913-447b-891c-ba50179167f2
          updatedTime: '2023-01-20T03:21:49Z'
          statusTime: '2023-01-20T03:21:49Z'
          skrill:
            consumerId: greg_neteller@mailinator.com
            emailSubject: Payout for XYZ
            emailMessage: Note for email here
          profile:
            firstName: pawan
            lastName: Kalyan
            email: test@paysafe.com
            phone: '1234567890'
    paymentHandleWithOptionalNetworkTokenOrApplePay:
      allOf:
        - $ref: '#/components/schemas/paymentHandleBaseFields'
        - $ref: '#/components/schemas/paymentHandleNetworkTokenResponse'
      title: paymentHandle
      description: 'Contains all the info for a specific payment type per transaction '
      x-examples:
        Example:
          id: cdd1e763-352f-4905-a93f-1838ea467a1e
          paymentType: SKRILL
          paymentHandleToken: PHZUY7WtMfbdsx45
          merchantRefNum: 4bcdd8f8-a936-458a-bb3d-906d0d15d43f
          currencyCode: USD
          txnTime: '2023-01-20T03:21:49Z'
          billingDetails:
            street: 100 Queen
            street2: Unit 201
            city: Toronto
            zip: M5H 2N2
            country: CA
          customerIp: 172.0.0.1
          status: PAYABLE
          liveMode: false
          usage: SINGLE_USE
          action: NONE
          executionMode: SYNCHRONOUS
          amount: 500
          merchantDescriptor:
            dynamicDescriptor: OnlineStore
            phone: '12345678'
          timeToLiveSeconds: 899
          gatewayResponse:
            processor: SKRILL_QCO
          returnLinks:
            - rel: on_failed
              href: 'https://usgaminggamblig.com/payment/return/failed'
            - rel: on_cancelled
              href: 'https://usgaminggamblig.com/payment/return/cancel'
            - rel: default
              href: 'https://usgaminggamblig.com/payment/return/success'
          transactionType: STANDALONE_CREDIT
          gatewayReconciliationId: c64e6899-0913-447b-891c-ba50179167f2
          updatedTime: '2023-01-20T03:21:49Z'
          statusTime: '2023-01-20T03:21:49Z'
          skrill:
            consumerId: greg_neteller@mailinator.com
            emailSubject: Payout for XYZ
            emailMessage: Note for email here
          profile:
            firstName: pawan
            lastName: Kalyan
            email: test@paysafe.com
            phone: '1234567890'
    paymentHandleList:
      title: paymentHandlesList
      x-stoplight:
        id: 4bb9cd6cf6a0d
      type: object
      properties:
        paymentHandles:
          type: array
          items:
            $ref: '#/components/schemas/paymentHandle'
        meta:
          $ref: '#/components/schemas/meta'
      x-internal: true
    paymentHandleListWithOptionalApplePayOrNetworkToken:
      title: paymentHandlesList
      x-stoplight:
        id: 4bb9cd6cf6a0d
      type: object
      properties:
        paymentHandles:
          type: array
          items:
            $ref: '#/components/schemas/paymentHandleWithOptionalNetworkTokenOrApplePay'
        meta:
          $ref: '#/components/schemas/meta'
      x-internal: true
    paymentRequest:
      title: paymentRequest
      x-stoplight:
        id: 9cljpuhy38ukd
      type: object
      x-internal: true
      properties:
        merchantRefNum:
          type: string
          maxLength: 255
          description: |-
            This is the merchant reference number created by 
            the merchant and submitted as part of the request. It must be unique for each request.
          example: '445186567390019700'
        amount:
          type: number
          maximum: 99999999999
          description: |-
            This is the amount of the request, in minor units. For example, to process US $10.99, this value 
            should be 1099. See [Currency Codes](https://developer.paysafe.com/en/support/reference-information/codes/#currency-codes).

            **Note:** The amount specified in the Payment 
            request must match the amount specified in the Payment Handle request from which 
            the paymentHandleToken is taken.
          example: 500
        dupCheck:
          type: boolean
          description: This validates that this request is not a duplicate. A duplicate request is when the merchantRefNum has already been used in a previous request within the past 90 days.
        settleWithAuth:
          type: boolean
          description: |-
            This indicates whether the request is an 
            Authorization only (no Settlement), or a Purchase (Authorization and Settlement).

            - false – The request is not settled

            - true – The request is settled

            **Note:** Defaults to false for cards and true for APMs.
        preAuth:
          type: boolean
          description: |-
            This indicates whether the Authorization request should be sent as a Pre-Authorization.

            **Note:** You should use the preAuth element in cases where you are not sure that you can fully settle the Authorization within 4 days. Contact your account manager for more information.
        paymentHandleToken:
          type: string
          maxLength: 36
          description: This is the payment token generated by Paysafe that will be used for the Payment request.
          example: SAJyTBzCvS8YHwwb
        customerIp:
          type: string
          example: 172.0.0.1
          description: This is the customer's IP address.
          maxLength: 39
        description:
          type: string
          example: Magazine subscription
          description: 'This is a description of the transaction, provided by the merchant.'
          maxLength: 255
        currencyCode:
          type: string
          example: USD
          maxLength: 3
          description: |-
            This is the currency of the merchant account, e.g., USD or CAD, returned in the request response. See [Currency Codes](https://developer.paysafe.com/en/support/reference-information/codes/#currency-codes).

            **Note:** The currencyCode specified in the Payment request must match the currencyCode specified in the Payment Handle request from which the paymentHandleToken is taken.
        level2level3:
          $ref: '#/components/schemas/level2level3'
        accordD:
          $ref: '#/components/schemas/accordD'
        recipient:
          $ref: '#/components/schemas/recipient'
        splitpay:
          $ref: '#/components/schemas/splitpay'
        storedCredentialDetails:
          $ref: '#/components/schemas/storedCredential'
        airlineTravelDetails:
          $ref: '#/components/schemas/airlineTravelDetails'
        fundingTransaction:
          $ref: '#/components/schemas/fundingTransaction'
        cruiselineTravelDetails:
          $ref: '#/components/schemas/cruiselineTravelDetails'
        lodgingDetails:
          $ref: '#/components/schemas/lodgingDetails'
        carRentalDetails:
          $ref: '#/components/schemas/carRentalDetails'
        paymentFacilitator:
          $ref: '#/components/schemas/paymentFacilitator'
        merchantDescriptor:
          $ref: '#/components/schemas/merchantDescriptor'  
        acquirerData:
          $ref: '#/components/schemas/acquirerData'
      required:
        - merchantRefNum
        - amount
        - paymentHandleToken
        - currencyCode
    payment:
      allOf:
        - type: object
          properties:
            id:
              type: string
              maxLength: 36
              description: |-
                This is the ID returned in the response. This ID 
                can be used for future associated requests.
              example: 3aeb9c63-6386-46a3-9f8e-f452e722228a
              readOnly: true
            availableToSettle:
              type: number
              description: |-
                This is the amount of the Authorization remaining 
                to settle, in minor units.
              example: 0
              readOnly: true
            childAccountNum:
              type: string
              maxLength: 10
              description: |-
                This is the child merchant account number. It is 
                returned only if the transaction was processed via a master account.
              example: '3216549877'
              readOnly: true
            txnTime:
              type: string
              format: date-time
              description: |-
                This is the date and time the request was 
                processed. For example: 2022-12-16T17:45:28Z
              example: '2023-01-19T16:33:49Z'
              readOnly: true
            paymentType:
              type: string
              enum:
                - CARD
                - APPLEPAY
                - SKRILL
                - NETELLER
                - PAYSAFECASH
                - PAYSAFECARD
                - PAYPAL
                - VENMO
                - VIPPREFERRED
                - MAZOOMA
                - SIGHTLINE
                - INTERAC_ETRANSFER
                - RAPID_TRANSFER
                - SKRILL1TAP
                - ACH
                - EFT
                - BACS
                - SEPA
                - ONLINE_BANK_TRANSFER
                - PIX
                - KHIPU
                - MACH
                - BOLETO_BANCARIO
                - SAFETYPAY_CASH
              description: This is the payment type associated with the Payment Handle used for this request.
            status:
              type: string
              enum:
                - RECEIVED
                - PROCESSING
                - COMPLETED
                - HELD
                - FAILED
                - CANCELLED
                - PENDING
              description: |-
                This is the status of the transaction request. Possible values are:

                - RECEIVED – Our system has received the request and is waiting for the downstream processor’s response.

                - PROCESSING - Transactions are submitted to Payment Service Provider (PSP)/Scheme and waiting for PSP to complete the transaction.
                 
                - COMPLETED – The transaction was completed.
                  
                - HELD – The request has been placed on hold due to risk considerations.
                  
                - FAILED – The transaction failed, due to either an error or being declined.
                  
                - CANCELLED – The request has been fully voided (reversed).

                - PENDING – The transaction awaiting payment service provider's response.
              readOnly: true
            gatewayResponse:
              $ref: '#/components/schemas/gatewayResponse'
            riskReasonCode:
              type: array
              description: |-
                An array of integers is returned, displaying the 
                detailed Risk reason codes if your transaction was declined. It is returned only if your account is 
                configured accordingly.
              items:
                type: integer
                example: 1001
                readOnly: true
            settlements:
              $ref: '#/components/schemas/settlement'
            error:
              $ref: '#/components/schemas/error'
            statusReason:
              type: string
              maxLength: 255
              description: 'This is reason for the status. This is present in the case where status is ERROR, FAILURE, or HELD.'
              readOnly: true
            authentication:
              $ref: '#/components/schemas/authentication'
            gatewayReconciliationId:
              type: string
              description: Transaction identifier that can be used to reconcile this transaction with the provider gateway.
              example: 4bbfba66-a15b-4fa5-ad77-c209ffdb914f
              maxLength: 36
              readOnly: true
            updatedTime:
              type: string
              format: date-time
              description: 'ISO 8601 format (UTC) This is the date and time the resource was last updated, e.g., 2014-01-26T10:32:28Z'
              example: '2023-01-19T08:37:50Z'
              readOnly: true
            statusTime:
              type: string
              format: date-time
              description: 'ISO 8601 format (UTC) This is the date and time the resource status was last updated, e.g., 2014-01-26T10:32:28Z'
              example: '2023-01-19T08:37:50Z'
            availableToRefund:
              type: number
              maximum: 99999999999
              description: 'This is the amount of this Settlement that is available to Refund, in minor units. For example, US $10.99 would be 1099.'
            processingRails:
              type: string
              enum:
               - PINLESS
               - CARD_SCHEME_ROUTED
              description: Defines the processing rails options used for this transaction, indicating whether it is processed via pinless or regular card scheme network.
              example: PINLESS
              readOnly: true
              x-internal: true 
            links:
              $ref: '#/components/schemas/links'
            liveMode:
              type: boolean
              description: |-
                This flag indicates the environment.

                - true - production
                - false - Non-Production
            billingDetails:
              $ref: '#/components/schemas/billingDetails'
            customerProfile:
              $ref: '#/components/schemas/profile'
        - $ref: '#/components/schemas/paymentRequest'
        - $ref: '#/components/schemas/paymentInstrument'
      title: payment
    paymentList:
      title: paymentList
      type: object
      properties:
        payments:
          type: array
          description: An array of Payments.
          items:
            $ref: '#/components/schemas/payment'
        meta:
          $ref: '#/components/schemas/meta'
      x-stoplight:
        id: a7b3c7f913037
      x-internal: true
    paymentInstrument:
      oneOf:
        - $ref: '#/components/schemas/cardObject'
        - $ref: '#/components/schemas/applePayObject'
        - $ref: '#/components/schemas/googlePayObject'
        - $ref: '#/components/schemas/skrillObject'
        - $ref: '#/components/schemas/netellerObject'
        - $ref: '#/components/schemas/paysafecashObject'
        - $ref: '#/components/schemas/paysafecardObject'
        - $ref: '#/components/schemas/paypalObject'
        - $ref: '#/components/schemas/venmoObject'
        - $ref: '#/components/schemas/vippreferredObject'
        - $ref: '#/components/schemas/mazoomaObject'
        - $ref: '#/components/schemas/sightlineObject'
        - $ref: '#/components/schemas/payByBankObject'
        - $ref: '#/components/schemas/interacObject'
        - $ref: '#/components/schemas/rapidTransferObject'
        - $ref: '#/components/schemas/skrill1TapObject'
        - $ref: '#/components/schemas/achObject'
        - $ref: '#/components/schemas/eftObject'
        - $ref: '#/components/schemas/bacsObject'
        - $ref: '#/components/schemas/sepaObject'
        - $ref: '#/components/schemas/safetyPayCashObject'
        - $ref: '#/components/schemas/boletoBancario'
        - $ref: '#/components/schemas/onlineBankTransferViaSafetyPay'
        - $ref: '#/components/schemas/khipu'
        - $ref: '#/components/schemas/pix'
        - $ref: '#/components/schemas/mach'
      title: paymentInstrument
      x-internal: true
    paymentInstrumentWithNetworkTokenCard:
      oneOf:
        - $ref: '#/components/schemas/networkTokenCardObject'
        - $ref: '#/components/schemas/applePayObject'
        - $ref: '#/components/schemas/googlePayObject'
        - $ref: '#/components/schemas/skrillObject'
        - $ref: '#/components/schemas/netellerObject'
        - $ref: '#/components/schemas/paysafecashObject'
        - $ref: '#/components/schemas/paysafecardObject'
        - $ref: '#/components/schemas/paypalObject'
        - $ref: '#/components/schemas/venmoObject'
        - $ref: '#/components/schemas/vippreferredObject'
        - $ref: '#/components/schemas/mazoomaObject'
        - $ref: '#/components/schemas/sightlineObject'
        - $ref: '#/components/schemas/payByBankObject'
        - $ref: '#/components/schemas/interacObject'
        - $ref: '#/components/schemas/rapidTransferObject'
        - $ref: '#/components/schemas/skrill1TapObject'
        - $ref: '#/components/schemas/achObject'
        - $ref: '#/components/schemas/eftObject'
        - $ref: '#/components/schemas/bacsObject'
        - $ref: '#/components/schemas/sepaObject'
        - $ref: '#/components/schemas/safetyPayCashObject'
        - $ref: '#/components/schemas/boletoBancario'
        - $ref: '#/components/schemas/onlineBankTransferViaSafetyPay'
        - $ref: '#/components/schemas/khipu'
        - $ref: '#/components/schemas/pix'
        - $ref: '#/components/schemas/mach'
      title: paymentInstrument
      x-internal: true
    paymentMethods:
      title: paymentMethods
      x-stoplight:
        id: x8tjv3aeox4sh
      type: object
      description: ''
      x-internal: true
      properties:
        paymentMethod:
          example: CARD
          type: string
          enum:
            - CARD
            - APPLEPAY
            - SKRILL
            - NETELLER
            - PAYSAFECASH
            - PAYSAFECARD
            - PAYPAL
            - VENMO
            - VIPPREFERRED
            - MAZOOMA
            - SIGHTLINE
            - INTERAC_ETRANSFER
            - RAPID_TRANSFER
            - SKRILL1TAP
            - ACH
            - EFT
            - BACS
            - SEPA
          description: This is the payment type associated with this payment method.
          readOnly: true
        currencyCode:
          type: string
          example: USD
          description: 'This is the currency of the merchant account, e.g., USD or CAD. See [Currency Codes](https://developer.paysafe.com/en/support/reference-information/codes/#currency-codes).'
          readOnly: true
        accountId:
          type: string
          example: '1001456390'
          pattern: '^[a-zA-Z0-9_]*$'
          description: Account Id in the paysafe system.
          readOnly: true
    paymentFacilitator:
      x-stoplight:
        id: ybe2g7fzmvqpx
      type: object
      description: |-
        Contains information about Payment facilitator.
    
        >**Note:** This object is only for Payment facilitator merchants.
      x-examples:
        Example 1:
          paymentFacilitator:
            subMerchant:
              id: '123456789'
              name: PayFacSubMerchant
              phone: '5555555555'
              email: payfac@mail.com
              url: www.payfac.com
              address:
                street: 100 Queen Street West
                city: London
                country: GB
                zip: M5H 2N2
      properties:
        subMerchant:
          $ref: '#/components/schemas/payFacSubMerchant'
    payFacSubMerchant:
      x-stoplight:
        id: iky52jstwr0mt
      type: object
      description: |-
        Contains information for Payment facilitator sub-merchant.
    
        **Note** This object is only for Payment facilitator merchants.
      x-examples:
        Example 1:
          id: '123456789'
          name: PayFacSubMerchant
          phone: '5555555555'
          email: payfac@mail.com
          url: www.payfac.com
          address:
            street: 100 Queen Street West
            city: London
            country: GB
            zip: M5H 2N2
      properties:
        id:
          type: string
          maxLength: 50
          description: This field contains an identifier of the actual merchant.
          example: '123456789'
        name:
          type: string
          maxLength: 50
          description: This field must contain the name of the actual merchant.
          example: Submerchant Name
        phone:
          type: string
          maxLength: 50
          description: This field must contain the phone number of the actual merchant.
          example: '5555555555'
        email:
          type: string
          maxLength: 50
          description: This field must contain the email address of the actual merchant.
          example: submerchant@mail.com
        url:
          type: string
          maxLength: 100
          description: This field must contain the url address of the actual merchant.
          example: www.paysafe.com
        address:
          $ref: '#/components/schemas/payFacAddress'
    payFacAddress:
      type: object
      description: |-
        Contains information for Payment facilitator sub-merchant address.
    
        **Note** This object is only for Payment facilitator merchants.
      x-examples:
        Example 1:
          street: payfac street
          city: London
          country: GB
          zip: '1233'
      properties:
        street:
          type: string
          maxLength: 50
          description: This field must contain the street address of the actual merchant.
          example: payfac street
        city:
          type: string
          maxLength: 50
          description: This field must contain the city of the actual merchant.
          example: London
        country:
          type: string
          maxLength: 50
          description: This field must contain the country code of the actual merchant.
          example: GB
        zip:
          type: string
          maxLength: 50
          description: This field must contain the postal code of the actual merchant.
          example: '1233'
    paypal:
      title: paypal
      x-stoplight:
        id: e7eac2ba8dfa0
      type: object
      properties:
        consumerId:
          type: string
          description: |-
            The source of funds for this payment, the email 
            address of the consumer or payer.
          minLength: 1
          maxLength: 50
          example: consumer@gmail.com
        recipientDescription:
          type: string
          minLength: 1
          maxLength: 127
          description: |-
            A label that overrides the business name in the 
            merchant's PayPal account on the PayPal checkout 
            pages.
          example: My store description
        language:
          type: string
          enum:
            - AT
            - AU
            - BE
            - BR
            - CA
            - CH
            - 'CN,'
            - 'DE,'
            - 'ES,'
            - 'FR,'
            - 'GB,'
            - 'IT,'
            - 'NL,'
            - 'PL,'
            - 'PT,'
            - 'RU,'
            - 'US,'
            - 'da_DK,'
            - 'he_IL,'
            - 'id_ID,'
            - 'ja_JP,'
            - 'no_NO,'
            - 'pt_BR,'
            - 'ru_RU,'
            - 'sv_SE,'
            - 'th_TH,'
            - 'zh_CN,'
            - 'zh_HK,'
            - zh_TW
          description: 'The 2-character preferred language code for the consumer (e.g., AU, AT, BE, BR, CA, CH, CN, DE, ES, GB, FR, IT, NL, PL, PT, RU, or US.) or A five-character code is also valid for languages in these countries (e.g: da_DK, he_IL, id_ID, ja_JP, no_NO, pt_BR, ru_RU, sv_SE, th_TH, zh_CN, zh_HK, and zh_TW).'
        shippingPreference:
          type: string
          enum:
            - GET_FROM_FILE
            - NO_SHIPPING
            - SET_PROVIDED_ADDRESS
          description: |-
            The shipping preference. The possible values are:

              - NO_SHIPPING - Redacts the shipping address from the PayPal pages. Recommended for digital goods.

              - GET_FROM_FILE - Uses the customer-selected shipping address on PayPal pages.

              - SET_PROVIDED_ADDRESS. If available, uses the merchant-provided shipping address, which the customer cannot change on the PayPal pages. If the merchant does not provide an address, the customer can enter the address on PayPal pages.
        consumerMessage:
          type: string
          minLength: 1
          maxLength: 4000
          description: Note to be displayed on the PayPal page.
          example: My note to payer
        orderDescription:
          type: string
          minLength: 1
          maxLength: 127
          description: Order description to display on PayPal page. If merchant does not set this field it defaults to 'Payment for order'.
          example: My order description
        recipientType:
          type: string
          enum:
            - EMAIL
            - PHONE
            - PAYPAL_ID
            - USER_ID
          description: Type of payout recipient. The only supported value is 'PAYPAL_ID'.
      required:
        - consumerId
      description: These are the details of the PayPal account used for the transaction.
    paypalObject:
      title: paypal
      x-stoplight:
        id: 335827c6e31b3
      type: object
      x-internal: true
      properties:
        payPal:
          $ref: '#/components/schemas/paypal'
        returnLinks:
          $ref: '#/components/schemas/returnLinks'
    paymentAccountDetails:
      title: paymentAccountDetails
      x-stoplight:
        id: e6o20uknrvx0c
      type: object
      properties:
        createdRange:
          type: string
          enum:
            - NO_ACCOUNT
            - DURING_TRANSACTION
            - LESS_THAN_THIRTY_DAYS
            - THIRTY_TO_SIXTY_DAYS
            - MORE_THAN_SIXTY_DAYS
          description: 'This indicates the length of time that the payment account was enrolled in the cardholder’s account with the 3DS Requestor. '
        createdDate:
          type: string
          format: date
          description: 'This is the date that the cardholder opened the account with the 3DS Requestor. The ISO 8601 date format is expected, i.e., YYYY-MM-DD.e.'
      description: These are the details of the current payment account of the cardholder.
      x-internal: true
    paymentDetails:
      title: paymentDetails
      x-stoplight:
        id: xopxo8txx1fqo
      type: object
      properties:
        countryCode:
          type: string
          enum:
            - BRL
            - CLP
            - COP
            - CRC
            - PEN
            - USD
        bankNameCodes:
          type: array
          items:
            type: string
            enum:
              - BANCAMIA
              - BANCO_AGRARIO
              - BANCO_AV_VILLAS
              - BANCO_BCI
              - BANCO_CAJA_SOCIAL
              - BANCO_COOPERATIVO_COOPCENTRAL
              - BANCO_CREDIFINANCIERA
              - BANCO_DAVIVIENDA
              - BANCO_DE_BOGOTA
              - BANCO_DE_CREDITO
              - BANCO_DE_OCCIDENTE
              - BANCO_DO_BRASIL
              - BANCO_ESTADO
              - BANCO_FALABELLA
              - BANCO_GNB_SUDAMERIS
              - BANCO_NACIONAL_DE_COSTA_RICA
              - BANCO_PICHINCHA_COL
              - BANCO_POPULAR
              - BANCO_PROCREDIT
              - BANCO_SCOTIABANK_COLPATRIA
              - BANCO_SERFINANZA
              - BBVA_COLOMBIA
              - BBVA_CONTINENTAL
              - BCP_CUOTEALO
              - BRADESCO
              - CAJA_AREQUIPA
              - CAJA_TACNA_PERU
              - CAJA_HUANCAYO_PERU
              - CAJA_TRUJILLO_PERU
              - CFA_COOPERATIVA_FINANCIERA
              - CITIBANK_COLOMBIA
              - COLTEFINANCIERA
              - CONFIAR_COOPERATIVA_FINANCIERA
              - COOFINEP
              - COTRAFA
              - DALE
              - DAVIPLATA
              - GIROS_Y_FINANZAS
              - INTERBANK
              - IRIS
              - ITAU
              - MOVII_SA
              - NEQUI_COLOMBIA
              - ONLINE_BANK_PAYMENT_BANCOLOMBIA_COLOMBIA
              - ONLINE_BANK_PAYMENT_BANCOOMEVA_COLOMBIA
              - ONLINE_BANK_PAYMENT_BANCO_SANTANDER_COLOMBIA
              - RAPPIPAY
              - SANTANDER
              - SCOTIABANK
              - SCOTIABANK_CHILE
      x-internal: true
    paysafecard:
      title: paysafecard
      x-stoplight:
        id: 1f81345015a7b
      type: object
      properties:
        consumerId:
          type: string
          description: |-
            This is the merchant's unique identifier of the customer. For security purposes, if any personal data is used (for example, customer's user name, email address, etc.), it has to be encrypted or hashed.

            _Mandatory_
          example: merchantclientid
          minLength: 1
          maxLength: 50
        minAgeRestriction:
          type: number
          description: payment can be restricted for a certain minimum consumer age (implicitly restricts payment to registered consumers only)
          example: 18
        kycLevelRestriction:
          type: string
          description: |-
            payment can be restricted for a certain minimum kyc level (implicitly restricts payment to registered consumers only). Possible values are 
              - FULL 
              - SIMPLE.
          example: SIMPLE
        countryRestriction:
          type: string
          description: |-
            This is the code of the country to which the transaction will be restricted. See [Country Codes](https://developer.paysafe.com/en/support/reference-information/codes/#country-codes).

            _Optional, length=2_
          example: DE
      required:
        - consumerId
      description: 'These are the details of the paysafecard used for the transaction. '
    paysafecardObject:
      title: paysafecard
      x-stoplight:
        id: 9d606d6c132c4
      type: object
      x-internal: true
      properties:
        paysafecard:
          $ref: '#/components/schemas/paysafecard'
    paysafecash:
      title: paysafecash
      type: object
      description: 'These are the details of the paysafecash account used for the transaction. '
      x-stoplight:
        id: 673efb9cf620b
      properties:
        consumerId:
          type: string
          description: |-
            This is the merchant's unique identifier of the customer. For security purposes, if any personal data is used (for example, customer's user name, email address, etc.), it has to be encrypted or hashed.

            _Mandatory_
          example: merchantclientid
          minLength: 1
          maxLength: 50
        minAgeRestriction:
          type: number
          description: payment can be restricted for a certain minimum consumer age (implicitly restricts payment to registered consumers only)
          example: 18
        kycLevelRestriction:
          type: string
          description: |-
            payment can be restricted for a certain minimum kyc level (implicitly restricts payment to registered consumers only). Possible values are 
              - FULL 
              - SIMPLE.
          example: SIMPLE
        countryRestriction:
          type: string
          description: |-
            This is the code of the country to which the transaction will be restricted. See [Country Codes](https://developer.paysafe.com/en/support/reference-information/codes/#country-codes).

            _Optional, length=2_
          example: DE
        expirationTime:
          type: number
          description: This is barcode expiration time in minutes at Paysafecash end.
          example: 10
          minimum: 5
    paysafecashObject:
      title: paysafecash
      x-stoplight:
        id: i63652mppjw3d
      type: object
      x-internal: true
      properties:
        paysafecash:
          $ref: '#/components/schemas/paysafecash'
    pix:
      title: pix via Safetypay Express
      x-stoplight:
        id: e4q6wfr115f80
      type: object
      x-internal: true
      properties:
        paymentExpiryMinutes:
          type: number
          description: It is the transaction expiry in minutes at Safetypay.
    profile:
      title: profile
      x-stoplight:
        id: da73348ea862b
      type: object
      description: This is customer's profile details.
      x-examples:
        Profile:
          locale: en_US
          firstName: John
          lastName: Smith
          email: john.smith@somedomain.com
          phone: 713-444-5555
          dateOfBirth:
            day: 6
            month: 5
            year: 1998
        Profile with MerchantCustomerId:
          merchantCustomerId: '546456459'
          lastName: Chagalamarri
          locale: en_US
          firstName: Venkata Suresh
          dateOfBirth:
            day: 6
            month: 5
            year: 1998
          email: paysafe@gmail.com
          phone: '1234567891'
          mobile: '9846573804'
          gender: M
          nationality: Indian
          identityDocuments:
            - identityDocuments:
                - type: SOCIAL_SECURITY
                  documentNumber: SSN123456
      properties:
        id:
          type: string
          description: The customer's profile id in the system. If this is present rest all other fields are not required.
          readOnly: true
        status:
          type: string
          description: 'The status of customer in the system, returned in the response.'
          readOnly: true
        merchantCustomerId:
          type: string
          maxLength: 10
          description: |-
            This is the reference number for the customer created by the merchant and submitted as part of the request. It must be unique for each customer.

            **Note:** This value is mandatory when [fundingTransaction](/schemas/fundingTransaction) is used.
        locale:
          type: string
          enum:
            - en_US
            - fr_CA
            - en_GB
            - en_CA
          description: |-
            This indicates the customer's locale preference.

            >**Note:** Vippreferred-Direct-Registration. Not required for Paysafe Card Payouts.
        firstName:
          type: string
          maxLength: 80
          description: This is the customer’s first name.
          example: Venkata Suresh
        lastName:
          type: string
          maxLength: 80
          description: This is the customer’s last name.
          example: Chagalamarri
        email:
          type: string
          maxLength: 255
          description: |-
            This is the customer's email address.

            **Note:** For Play+(Sightline), length of email is <=40 characters.
          example: paysafe@gmail.com
        phone:
          type: string
          maxLength: 40
          description: |-
            This is the customer's phone number.

            **Note:** Not required for Paysafe Card Payouts. Required for MBWAY. Required for PAY BY BANK.

            **For Pay by Bank:**
              - Length must be 10 digits 
              - Area Code cannot start with ‘0’ or ‘1’ 
              - Digits 1-3 cannot be ‘000’ 
              - Digits 4-6 cannot be ‘555’ 
              - Cannot be ‘999-999-9999’ 
              - Cannot be ‘000-000-0000’

          example: '1234567891'
        emailverified:
          type: string
          enum:
            - NOT_VERIFIED
            - VERIFIED
          description: |-
            Is the customer’s email ID verified by merchant or not?
            
            >**Note:** EmailVerified is optional for Pay by Bank. If this values is not provided, the default value will be set to NOT_VERIFIED. Be aware that unverified email may lead to request failures, as this is the part of our risk check parameters.
          example: VERIFIED
        phoneVerified:
          type: string
          enum:
            - NOT_VERIFIED
            - VERIFIED
          description: |-
            Is the customer’s phone number verified by merchant or not? 

            >**Note:** PhoneVerified is optional for Pay by Bank. If this values is not provided, the default value will be set to NOT_VERIFIED. Be aware that unverified phone number may lead to request failures, as this is the part of our risk check parameters.
          example: VERIFIED
        dateOfBirth:
          items:
            $ref: '#/components/schemas/dateOfBirth'
          description: |-
             **Note:** Required for Pay by Bank.
        mobile:
          type: string
          description: Customer's mobile number.
          maxLength: 40
          example: '9846573804'
        gender:
          type: string
          description: |-
            This field indicates the Customer's gender.

            M - Male

            F - Female
          example: M
          enum:
            - M
            - F
        nationality:
          type: string
          description: This field indicates the Customer's nationality.
          maxLength: 30
          example: Indian
        identityDocuments:
          type: array
          items:
            $ref: '#/components/schemas/identityDocuments'
          description: |-
            **Note:** Required if at time of onboarding with Paysafe enrolmentType is selected as “OPEN_LOOP” else optional.
      required:
        - locale
        - firstName
        - lastName
        - email
    priorThreedsAuthentication:
      title: priorThreeDSAuthentication
      x-stoplight:
        id: v1fwdzog18ksg
      type: object
      properties:
        id:
          type: string
          maxLength: 36
          description: |-
            This is the previous authentication ID for the cardholder.

            **Note:** For recurring payments, this is the authenticationId of the first authentication.
          example: 123e4567-e89b-12d3-a456-426655440000
        data:
          type: string
          description: This field is reserved for future iterations of 3D Secure 2.
          example: Some up to 2048 bytes undefined data
        method:
          type: string
          enum:
            - FRICTIONLESS_AUTHENTICATION
            - ACS_CHALLENGE
            - AVS_VERIFIED
            - OTHER_ISSUER_METHOD
          description: |
            This is the mechanism used previously by the cardholder to authenticate to the 3DS Requestor.
        time:
          type: string
          format: date-time
          description: 'This is the date and time of the cardholder authentication. The ISO 8601 date format is expected, i.e., YYYY-MM-DD-THH:MM:SSZ.'
      description: 'This is the previous authentication information used with current merchant, cardholder, and card.'
      x-internal: true
    purchasedGiftCardDetails:
      title: purchasedGiftCardDetails
      x-stoplight:
        id: eli7hc6qos4dh
      type: object
      properties:
        amount:
          type: number
          description: 'This is the amount of the gift card, in minor units.'
          maximum: 99999999999
          example: 1234
        count:
          type: number
          description: This is the total count of individual prepaid or gift cards or codes purchased.
          maximum: 99
          example: 2
        currency:
          type: string
          description: 'This is the currency of the gift card, e.g., USD or CAD. See [Currency Codes](https://developer.paysafe.com/en/support/reference-information/codes/#currency-codes)'
          example: USD
      x-internal: true
    rapidTransfer:
      title: rapidTransfer
      x-stoplight:
        id: 32y4due3x83ij
      type: object
      properties:
        consumerId:
          type: string
          description: Customer/end-user email id which will be the unique identifier of the user at Skrill end
          example: csr_fl@sun-fish.com
        countryCode:
          type: string
          description: 'Two-digit unique [country code](https://developer.paysafe.com/en/support/reference-information/codes/#country-codes) to identify the area of operation of bank account and currency.'
          example: IE
      required:
        - consumerId
      description: These are the details of the rapid transfer used for the transaction.
    rapidTransferObject:
      title: rapidTransfer
      x-stoplight:
        id: 6w9xiupphp51w
      type: object
      properties:
        rapidTransfer:
          $ref: '#/components/schemas/rapidTransfer'
      x-internal: true
    recipient:
      title: recipient
      x-stoplight:
        id: czhdnvgpivsm5
      type: object
      description: |-
        The recipient is deemed to be the person or party who has the contractual relationship with the merchant / financial institution. This may
        be different from the cardholder, e.g., in the case of a parent topping up a child's savings account. Therefore, the fields should not be
        collected on the same page as cardholder information, but instead be passed in the background from the merchant's records.

        **Note:** You can include recipient elements in your [authorization request](https://developer.paysafe.com/en/cards-api/#/operations/authorization) **only if** your Merchant Category Code is **6012** and your registered trading address is in the United Kingdom. All fields are optional. However, scheme fines may apply if data is consistently not supplied and chargebacks persist. If you have any questions, contact your account manager. If you are using a payment token for an 
        Authorization request and there is already recipient data for the consumer profile associated with the payment token, then if you include
        the recipient object in the Authorization, this data will override the recipient data already in the profile.

        If you [look up an authorization request](https://developer.paysafe.com/en/cards-api/#/operations/get-authorization) that used the visaAdditionalAuthData parameter (now deprecated), the response will contain the
        relevant data in both the recipient and the visaAdditionalAuthData objects. 
      properties:
        dateOfBirth:
          $ref: '#/components/schemas/dateOfBirth'
        zip:
          type: string
          maxLength: 10
          description: |-
            This is the zip/postal code of the recipient.

            **Note:** The last 3 characters are not sent to the banking network.
          example: CB24 9AD
        lastName:
          type: string
          maxLength: 255
          description: |-
            This is the recipient's last name.

            **Note:** Only the first 6 characters are sent to the banking network.
          example: Chagalamarri
        accountNumber:
          type: string
          maxLength: 25
          description: |-
            This is the recipient's account number, e.g., a 
            loan agreement number or customer ID. In the case where the recipient account is a prepaid card, the
            card number may be sent in full.

            **Note:** Only the first 6 and last 4 characters are sent to the banking network and will be masked accordingly within the back office and any other reports, to comply with PCI regulations.
          example: ABC1234567890
    refunds:
      allOf:
        - type: object
          properties:
            id:
              type: string
              maxLength: 36
              description: This is the ID returned in the response. This ID can be used for future associated requests.
              example: 25f6dadf-176a-415f-95c9-6ff39ff697ba
              format: uuid
              readOnly: true
            paymentType:
              type: string
              enum:
                - CARD
                - PAYSAFECARD
                - PAYSAFECASH
                - RAPID_TRANSFER
                - SKRILL
                - SKRILL1TAP
              description: This is the payment type of the transaction.
            currencyCode:
              type: string
              maxLength: 3
              description: 'This is the currency of the merchant account, e.g., USD or CAD. See [Currency Codes](https://developer.paysafe.com/en/support/reference-information/codes/#country-codes).'
              example: USD
            txnTime:
              type: string
              format: date-time
              description: This is the date and time the transaction was processed.
              example: '2023-01-19T08:37:50Z'
              readOnly: true
            status:
              type: string
              enum:
                - RECEIVED
                - INITIATED
                - PENDING
                - FAILED
                - CANCELLED
                - EXPIRED
                - COMPLETED
              description: |-
                This is the status of the transaction request. Possible values are:

                - RECEIVED – Our system has received the request and is waiting for the downstream processor's response.

                - INITIATED - The transaction was initiated with the downstream provider.

                - PENDING - The transaction is awaiting the payment service provider's response.

                - FAILED – The transaction failed due to an error or got declined.

                - CANCELLED – The transaction request is cancelled.

                - EXPIRED - The transaction request is expired.

                - COMPLETED – The transaction request is completed.
              readOnly: true
            gatewayReconciliationId:
              type: string
              example: '-591646041'
              description: Transaction identifier that can be used to reconcile this transaction with the provider gateway.
            updatedTime:
              type: string
              description: Indicates the last updated time for the resource.
              format: date-time
              example: '2023-03-27T11:11:53Z'
            statusTime:
              type: string
              description: Indicates the last updated time for the resource.
              format: date-time
              example: '2023-03-27T11:11:53Z'
            liveMode:
              type: boolean
              description: |-
                This flag indicates the environment.

                - true - Production
                - false - Non-Production
            gatewayResponse:
              $ref: '#/components/schemas/gatewayResponse'
            source:
              type: string
              enum:
                - SingleAPI
              description: This is the source of the transaction.
            childAccountNum:
              type: string
              description: This is child merchant account number. It is returned only if the transaction was processed via a master account.
              example: '1234567898'
              maxLength: 10
              readOnly: true
            error:
              $ref: '#/components/schemas/error'
            riskReasonCode:
              type: array
              description: 'An array of integers is returned, displaying the detailed Risk reason codes if your transaction was declined. It is returned only if your account is configured accordingly.'
              items:
                type: integer
                readOnly: true
        - $ref: '#/components/schemas/refundsRequest'
      title: refunds
    refundList:
      title: refundList
      x-stoplight:
        id: ovfnnpiy5tcuk
      type: object
      x-internal: true
      properties:
        refunds:
          type: array
          items:
            $ref: '#/components/schemas/refunds'
        meta:
          $ref: '#/components/schemas/meta'
    refundsRequest:
      title: refundsRequest
      x-stoplight:
        id: d4yqjcpu483qs
      type: object
      x-internal: true
      properties:
        merchantRefNum:
          type: string
          maxLength: 255
          description: This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.
          example: P1234
        amount:
          type: number
          maximum: 99999999999
          description: 'This is the amount of the request, in minor units. For example, to process US $10.99, this value should be 1099.'
        dupCheck:
          type: boolean
          description: |-
            This validates that this request is not a duplicate. A request is considered a duplicate if the merchantRefNum has already been used in a previous request within the past 90 days.

            **Note:** This value defaults to true.
          default: true
        splitpay:
          type: array
          items:
            $ref: '#/components/schemas/splitpay'
      required:
        - merchantRefNum
    returnLinks:
      title: returnLinks
      type: object
      description: The URL endpoints to redirect the customer to after a redirection to an alternative payment or 3D Secure site. You can customize the return URL based on the transaction status.
      x-stoplight:
        id: f102c674db738
      properties:
        rel:
          type: string
          enum:
            - default
            - on_completed
            - on_failed
            - on_cancelled
          description: |-
            This is the link type that allows different endpoints to be targeted depending on the end state of the transaction.

            - on_completed - Paysafe will return to this merchant url post successful payment.

            - on_failed - Paysafe will return to this merchant url post if payment is failed.

            - on_cancelled - Paysafe will return to this merchant url post if payment is cancelled.

            - default - The default return URL that will be used if specific status return URL is not defined.
        href:
          type: string
          description: This is the URI of the resource.
          example: 'https://US_commerce_site/payment/return/success'
        method:
          type: string
          description: This is the HTTP method.
          example: GET
      required:
        - rel
        - href
        - method
    safetyPayBankTransfer:
      title: safetyPayBankTransfer
      x-stoplight:
        id: 00u54nduoeyob
      type: object
      properties:
        consumerId:
          type: string
          minLength: 1
          maxLength: 50
          description: The ID of the consumer at the merchant site
        minAgeRestriction:
          type: number
          minimum: 1
          maximum: 99
          description: payment can be restricted for a certain minimum consumer age (implicitly restricts payment to registered consumers only)
        kycLevelRestriction:
          type: string
          description: payment can be restricted for a certain minimum kyc level (implicitly restricts payment to registered consumers only)
        submerchantId:
          type: string
          pattern: '^[0-9A-Za-z]{1,8}$'
          description: sub-merchant id of APM customer
        expirationTime:
          type: string
          description: expiration time in minutes
        barcodes:
          type: array
          items:
            type: object
            properties:
              barcode:
                type: string
              visualization:
                type: string
              country:
                type: string
              expiresAt:
                type: string
              message:
                type: string
              code:
                type: string
      required:
        - consumerId
      description: 'These are the details of the SafetyPay Bank Transfer account used for the request. Only one payment instrument object (for example, card or SafetyPay Bank Transfer) can be included in the request.'
      x-internal: true
    safetyPayBankTransferObject:
      title: safetyPayBankTransfer
      x-stoplight:
        id: zcnh0k1mu7qsr
      type: object
      properties:
        safetyPayBankTransfer:
          $ref: '#/components/schemas/safetyPayBankTransfer'
      x-internal: true
    safetyPayCash:
      title: safetyPayCash
      x-stoplight:
        id: de591a818337e
      type: object
      x-internal: false
      description: ''
      properties:
        countryCode:
          type: string
          enum:
            - BRL
            - CLP
            - COP
            - CRC
            - PEN
            - USD
        bankNameCodes:
          type: array
          items:
            type: string
            enum:
              - ACERTEMOS
              - ACCIONES_Y_VALORES
              - ACUENTA
              - AGENTE_NIUBIZ
              - APUESTAS_CUCUTA_75
              - APUESTAS_UNIDAS
              - BANCO_DE_CREDITO
              - BANCO_ESTADO
              - BANCO_ESTADO_EXPRESS
              - BANCO_NACIONAL_DE_COSTA_RICA
              - BANCO_RIPLEY
              - BBVA_CONTINENTAL
              - BRADESCO
              - CAJA_AREQUIPA
              - CAJA_HUANCAYO_PERU
              - CAJA_TACNA_PERU
              - CAJA_TRUJILLO_PERU
              - CAJA_VECINA
              - CREDIBANCO
              - DIMONEX
              - EFECTY
              - EXPRESS_DE_LIDER
              - FULL_CARGA
              - GANA
              - GANA_GANA
              - INTERBANK
              - JER
              - KASNET
              - LA_PERLA
              - LIDER
              - LOTERICAS
              - MOVILRED_COLOMBIA
              - PAGA_TODO_PARA_TODO
              - PUNTO_DE_PAGO
              - PUNTO_RED
              - REDEBAN
              - SCOTIABANK
              - SUCHANCE
              - SURED
              - TAMBO
              - WALMART_CHILE
              - WESTERN_UNION
    safetyPayCashObject:
      title: safetyPayCash via Safetypay Express
      x-stoplight:
        id: dd20uyodhzwy2
      type: object
      x-internal: true
      properties:
        safetyPayCash:
          $ref: '#/components/schemas/safetyPayCash'
        paymentExpiryInMinutes:
          type: number
          description: It is the transaction expiry in minutes at Safetypay.
    searchPaymentHandle:
      title: searchPaymentHandle
      x-stoplight:
        id: 3ex4xo36qnt1t
      type: object
      x-internal: true
      properties:
        paymentHandleToken:
          type: string
          description: This is the payment token generated by Paysafe that will be used by merchants for Payment API requests.
          maxLength: 36
          example: PHyV9s8Frm3irEO9
      required:
        - paymentHandleToken
    sepa:
      title: sepa
      type: object
      description: 'These are the details of the sepa account used for the transaction. '
      properties:
        nickName:
          type: string
          description: This is an alias for this bank account.
          example: Sally's Barclays Account
          maxLength: 50
        accountHolderName:
          type: string
          description: |-
            This is the name of the customer or company 
            that owns the bank account.
          example: XYZ Company
          maxLength: 32
        bic:
          type: string
          description: This is the Bank Identifier Code for the consumer's bank account.
          example: ABNANL2APIP
          minLength: 8
          maxLength: 11
        iban:
          type: string
          description: This is the International Bank Account Number for the costumer's bank account.
          example: DE89370400440532013000
          minLength: 8
          maxLength: 34
        mandate:
          $ref: '#/components/schemas/mandate'
        lastDigits:
          type: string
          description: These are the last two digits of the iban.
          example: '11'
          maxLength: 2
          readOnly: true
      required:
        - accountHolderName
        - iban
        - mandate
      x-stoplight:
        id: ff9168892c397
      x-internal: false
    sepaObject:
      title: sepa
      x-stoplight:
        id: h1sr410x4srax
      type: object
      x-internal: true
      properties:
        sepa:
          $ref: '#/components/schemas/sepa'
        mandates:
          type: array
          items:
            $ref: '#/components/schemas/mandate'
    settlement:
      allOf:
        - type: object
          properties:
            id:
              type: string
              maxLength: 36
              description: This is the ID returned in the response. This ID can be used for future associated request.
              example: 25f6dadf-176a-415f-95c9-6ff39ff697ba
              readOnly: true
            paymentType:
              type: string
              enum:
                - CARD
                - PAYSAFECASH
                - PAYSAFECARD
                - PAYPAL
                - INTERAC
              description: This is the payment type associated with the settlement used for this request.
              readOnly: true
            availableToRefund:
              type: number
              maximum: 99999999999
              description: 'This is the remaining amount of the refund, in minor units.99.'
              readOnly: true
            childAccountNum:
              type: string
              description: This is the child merchant account number. It is returned only if the transaction was processed via a master account.
              maxLength: 10
              example: '1234567898'
              readOnly: true
            txnTime:
              type: string
              format: date-time
              description: |-
                This is the date and time the request was processed. For example:
                2014-01-26T10:32:28Z
              readOnly: true
            status:
              type: string
              enum:
                - RECEIVED
                - INITIATED
                - PENDING
                - FAILED
                - CANCELLED
                - EXPIRED
                - COMPLETED
              description: |-
                This is the status of the transaction request. Possible values are:
                  
                - RECEIVED – Our system has received the request and is waiting for the downstream processor’s response.

                - INITIATED – The transaction was initiated with the downstream provider.

                - PENDING - The transaction is awaiting the payment service provider's response.

                - FAILED – The transaction failed, due to either an error or being declined.

                - CANCELLED – The transaction request is cancelled.'

                - EXPIRED – The transaction request is expired.

                - COMPLETED – The transaction request is completed.
              readOnly: true
            error:
              $ref: '#/components/schemas/error'
            riskReasonCode:
              type: array
              description: 'An array of integers is returned, displaying the detailed Risk reason codes if your transaction was declined. It is returned only if your account is configured accordingly.'
              items:
                type: integer
                readOnly: true
            gatewayResponse:
              $ref: '#/components/schemas/gatewayResponse'
            gatewayReconciliationId:
              type: string
              maxLength: 36
              example: a5c80e61-e747-455f-843d-2b9526f9963e
              description: It is the id which is common between paysafe and payment serivce provider.
            liveMode:
              type: boolean
              description: |-
                This flag indicates the envrionment.

                - true - Production
                - false - Non-Production
            updatedTime:
              type: string
              format: date-time
              example: '2023-01-19T10:48:04Z'
              description: Indicates the last updated time for the resource.
            statusTime:
              type: string
              format: date-time
              example: '2023-01-19T10:48:04Z'
              description: Indicates the last updated time for the resource.
        - $ref: '#/components/schemas/settlementRequest'
      title: settlement
      x-examples:
        Example:
          id: 5a65736a-ce72-4733-8f65-b54a4a1d3059
          paymentType: PAYSAFECARD
          merchantRefNum: dc48762fb7c30c2ae975754348e8
          currencyCode: USD
          txnTime: '2023-01-20T04:35:19Z'
          status: COMPLETED
          gatewayReconciliationId: adcf19cf-39c5-4eb4-a65d-7f50cd1aebd6
          amount: 500
          liveMode: false
          updatedTime: '2023-01-20T04:35:19Z'
          statusTime: '2023-01-20T04:35:19Z'
          availableToRefund: 500
          gatewayResponse:
            id: adcf19cf-39c5-4eb4-a65d-7f50cd1aebd6
            processor: PAYSAFECARD
    settlementRequest:
      title: settlementRequest
      x-stoplight:
        id: 2cu2pspbk3duc
      type: object
      x-internal: true
      properties:
        merchantRefNum:
          type: string
          maxLength: 255
          description: This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.
        amount:
          type: number
          maximum: 99999999999
          description: 'This is the amount of the request, in minor units.For example, to process US $10.99, this value should be 1099.'
        dupCheck:
          type: boolean
          default: true
          description: |-
            This validates that this request is not a duplicate. A request is considered a duplicate if the merchantRefNum has already been used in a previous request within the past 90 days.

            **Note:** This value defaults to true
        splitpay:
          type: array
          items:
            $ref: '#/components/schemas/splitpay'
        airlineTravelDetails:
          $ref: '#/components/schemas/airlineTravelDetails'
        cruiselineTravelDetails:
          $ref: '#/components/schemas/cruiselineTravelDetails'
        lodgingDetails:
          $ref: '#/components/schemas/lodgingDetails'
        carRentalDetails:
          $ref: '#/components/schemas/carRentalDetails'
      required:
        - merchantRefNum
    settlementList:
      title: settlementList
      type: object
      x-stoplight:
        id: 221c6efce1a6f
      properties:
        settlements:
          type: array
          description: An array of Settlements.
          items:
            $ref: '#/components/schemas/settlement'
        meta:
          $ref: '#/components/schemas/meta'
      x-internal: true
    shippingDetails:
      title: shippingDetails
      x-stoplight:
        id: d9121tvvpta19
      type: object
      properties:
        shipMethod:
          type: string
          example: Vishnu
          description: |-
            This is the method of shipment. Possible values are:

              - N – Next Day/Overnight
              - T – Two-Day Service
              - C – Lowest Cost
              - O – Other
              - S – Same Day
        street:
          type: string
          example: 20735 Stevens Creek Blvd
          maxLength: 50
          description: This is the recipient's street address.
        street2:
          type: string
          example: Montessori
          description: 'This is the second line of the street address in the shipping address, if required (e.g., apartment number).'
          maxLength: 255
        city:
          type: string
          example: Cupertino
          description: This is the city in which the recipient resides.
          maxLength: 40
        state:
          type: string
          description: |-
            This is the state/province/region in which the recipient lives. 

            - For Canada see [Province Codes](https://developer.paysafe.com/en/support/reference-information/codes/#province-codes)

            - For the United States see [State Code](https://developer.paysafe.com/en/support/reference-information/codes/#state-codes)

            - Other countries have no restrictions.
          example: 'ON'
          maxLength: 40
          minLength: 2
        country:
          type: string
          description: |-
            This is the country where the address is located. 
            See [Country Codes](https://developer.paysafe.com/en/support/reference-information/codes/#country-codes).
          example: CA
          maxLength: 2
          minLength: 2
        zip:
          type: string
          example: '95014'
          description: This is the recipient's postal/zip code.
          maxLength: 10
      x-internal: true
    shippingDetailsUsage:
      title: shippingDetailsUsage
      x-stoplight:
        id: bwb6ahsmjdeyt
      type: object
      properties:
        cardHolderNameMatch:
          type: boolean
          description: This indicates whether the cardholder name on the account is identical to the shipping name used for this transaction.
        initialUsageDate:
          type: string
          format: date
          description: 'This is the date when the shipping address for this transaction was first used with the 3DS Requestor. The ISO 8601 date format is expected, i.e., YYYY-MM-DD.'
        initialUsageRange:
          type: string
          enum:
            - CURRENT_TRANSACTION
            - LESS_THAN_THIRTY_DAYS
            - THIRTY_TO_SIXTY_DAYS
            - MORE_THAN_SIXTY_DAYS
      description: This is the shipping usage information.
      x-internal: true
    sightline:
      title: sightline
      type: object
      description: These are the details of the Play+ (Sightline) used for the transaction.
      x-stoplight:
        id: bed38d4911bb8
      properties:
        consumerId:
          type: string
          description: |-
            This is the Loyalty Membership Number unique to the customer to be enrolled with Play+ (Sightline). This is to be provided by the merchant.

            _Mandatory_
          example: '12312313'
        ssn:
          type: string
          description: This the customer's Social Security Number.
          example: '123456789'
          writeOnly: true
        last4ssn:
          type: string
          description: This the customer’s last 4 digits of Social Security Number.
          readOnly: true
        lastDigits:
          type: string
          description: This the customer’s last 4 digits of Social Security Number.
          readOnly: true
      required:
        - consumerId
    sightlineObject:
      title: sightline
      x-stoplight:
        id: x1elgcajsxqis
      type: object
      x-internal: true
      properties:
        sightline:
          $ref: '#/components/schemas/sightline'
    singleUseCustomerTokenRequest:
      title: singleUseCustomerTokenRequest
      x-stoplight:
        id: c699d25haayr0
      type: object
      x-internal: true
      properties:
        merchantRefNum:
          type: string
          maxLength: 255
          description: This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.
          example: merchantRefNum-101
        paymentType:
          type: array
          description: This specifies the payment type for which you are creating the single-use token.
          items:
            type: string
            enum:
              - CARD
              - EFT
              - ACH
              - BACS
              - SEPA
      required:
        - merchantRefNum
    sightlineRegistrationRequest:
      title: sightlineRegistrationRequest
      x-stoplight:
        id: 6qjn9gwitu3nq
      type: object
      x-internal: true
      properties:
        merchantRefNum:
          type: string
          description: This is the reference number for the merchant.
          example: 576d95e8-a8e6-48b5-a8a8-11ae8352071q
        paymentType:
          type: string
          description: This is the payment type.
          example: SIGHTLINE
          enum:
            - SIGHTLINE
        profile:
          $ref: '#/components/schemas/profile'
        billingDetails:
          $ref: '#/components/schemas/billingDetails'
        returnLinks:
          description: This contains the return links that we show for the user. The return links must not exceed 10 URLs.
          type: array
          items:
            $ref: '#/components/schemas/returnLinks'
        sightline:
          $ref: '#/components/schemas/sightline'
    sightlineRegistration:
      allOf:
        - type: object
          properties:
            id:
              type: string
              description: This is the ID returned in the response. This ID can be used for future associated requests.
              maxLength: 36
              readOnly: true
            txnTime:
              type: string
              description: 'This is the date and time the request was processed. For example: 2014-01-26T10:32:28Z'
            status:
              type: string
              description: |-
                This is the status of the transaction request. Possible values are:

                - INITIATED - The transaction has been initiated.
                      
                - RECEIVED – Our system has received the request and is waiting for the downstream processor’s response.

                - COMPLETED – The transaction has been completed.

                - PENDING – Our system has received the request but it has not yet been batched.

                - FAILED – The transaction failed, due to either an error or being declined.

                - CANCELLED – The request has been fully voided (reversed).'
              enum:
                - INITIATED
                - RECEIVED
                - COMPLETED
                - PENDING
                - FAILED
                - CANCELLED
              readOnly: true
            links:
              type: array
              items:
                $ref: '#/components/schemas/links'
            liveMode:
              type: boolean
              description: |-
                This flag indicates the environment.

                - true - Production
                - false - Non-Production
        - $ref: '#/components/schemas/sightlineRegistrationRequest'
      title: sightlineRegistration
      x-internal: true
    singleUseCustomerToken:
      allOf:
        - type: object
          properties:
            id:
              type: string
              maxLength: 36
              example: 26359efd-7cfb-4014-a13d-1724e3ff17fa
              description: 'This is the ID returned in the response. This ID can be used for future associated requests, e.g., to look up the Payment Handle.'
              readOnly: true
            timeToLiveSeconds:
              type: number
              description: 'This is the period of time, in seconds, the singleUseCustomerToken is valid before expiration.'
              maximum: 899
              example: 899
              readOnly: true
            status:
              type: string
              enum:
                - INITIAL
                - ACTIVE
              description: This is the status of the single-use customer token.
              readOnly: true
            singleUseCustomerToken:
              type: string
              maxLength: 16
              description: This token can be used in the Payments Checkout to populate the checkout with customer information.
              example: SPFAB1cA5iwdu48H
              readOnly: true
            locale:
              type: string
              enum:
                - en_US
                - fr_CA
                - en_CA
                - en_GB
              description: This indicates the customer's locale.
              readOnly: true
            firstName:
              type: string
              maxLength: 80
              description: This is the customer’s first name.
              example: Suresh
              readOnly: true
            middleName:
              type: string
              description: This is the customer’s middle name.
              example: Venkata
              readOnly: true
            lastname:
              type: string
              description: This is the customer's last name.
              maxLength: 80
              example: Chagalamarri
              readOnly: true
            dateOfBirth:
              $ref: '#/components/schemas/dateOfBirth'
            email:
              type: string
              description: This is the customer's email address.
              maxLength: 255
              example: suresh@gmail.com
              readOnly: true
            phone:
              type: string
              description: This is the customer's phone number.
              maxLength: 40
              readOnly: true
            ip:
              type: string
              description: This is the customer’s IP address
              maxLength: 46
              example: 192.0.126.111
              readOnly: true
            nationality:
              type: string
              maxLength: 30
              example: Indian
              description: This is the customer’s nationality.
              readOnly: true
            addresses:
              type: array
              description: This is an array of addresses associated with the customer.
              items:
                $ref: '#/components/schemas/addresses'
            paymentHandles:
              description: This is an array of payment handles associated with the customer.
              type: array
              items:
                $ref: '#/components/schemas/customerPaymentHandle'
            customerId:
              type: string
              description: This is the ID of the customer profile used for this request.
              maxLength: 36
              example: 59cce04e-e429-4016-9d3f-1e579f3aa2ad
        - $ref: '#/components/schemas/singleUseCustomerTokenRequest'
      title: singleUseCustomerToken
      x-internal: true
    singleUseCustomerNetworkToken:
      allOf:
        - type: object
          properties:
            id:
              type: string
              maxLength: 36
              example: 26359efd-7cfb-4014-a13d-1724e3ff17fa
              description: 'This is the ID returned in the response. This ID can be used for future associated requests, e.g., to look up the Payment Handle.'
              readOnly: true
            timeToLiveSeconds:
              type: number
              description: 'This is the period of time, in seconds, the singleUseCustomerToken is valid before expiration.'
              maximum: 899
              example: 899
              readOnly: true
            status:
              type: string
              enum:
                - INITIAL
                - ACTIVE
              description: This is the status of the single-use customer token.
              readOnly: true
            singleUseCustomerToken:
              type: string
              maxLength: 16
              description: This token can be used in the Payments Checkout to populate the checkout with customer information.
              example: SPFAB1cA5iwdu48H
              readOnly: true
            locale:
              type: string
              enum:
                - en_US
                - fr_CA
                - en_CA
                - en_GB
              description: This indicates the customer's locale.
              readOnly: true
            firstName:
              type: string
              maxLength: 80
              description: This is the customer’s first name.
              example: Suresh
              readOnly: true
            middleName:
              type: string
              description: This is the customer’s middle name.
              example: Venkata
              readOnly: true
            lastname:
              type: string
              description: This is the customer's last name.
              maxLength: 80
              example: Chagalamarri
              readOnly: true
            dateOfBirth:
              $ref: '#/components/schemas/dateOfBirth'
            email:
              type: string
              description: This is the customer's email address.
              maxLength: 255
              example: suresh@gmail.com
              readOnly: true
            phone:
              type: string
              description: This is the customer's phone number.
              maxLength: 40
              readOnly: true
            ip:
              type: string
              description: This is the customer’s IP address
              maxLength: 46
              example: 192.0.126.111
              readOnly: true
            nationality:
              type: string
              maxLength: 30
              example: Indian
              description: This is the customer’s nationality.
              readOnly: true
            addresses:
              type: array
              description: This is an array of addresses associated with the customer.
              items:
                $ref: '#/components/schemas/addresses'
            paymentHandles:
              description: This is an array of payment handles associated with the customer.
              type: array
              items:
                $ref: '#/components/schemas/customerPaymentHandleNetworkToken'
            customerId:
              type: string
              description: This is the ID of the customer profile used for this request.
              maxLength: 36
              example: 59cce04e-e429-4016-9d3f-1e579f3aa2ad
        - $ref: '#/components/schemas/singleUseCustomerTokenRequest'
      title: singleUseCustomerToken
      x-internal: true
    skrill:
      title: skrill
      x-stoplight:
        id: 259ouwan0x7jv
      type: object
      description: 'These are the details of the skrill account used for the transaction. '
      properties:
        consumerId:
          type: string
          example: suresh@gmail.com
          maxLength: 50
          description: |-
            This is the email address of the customer who is 
            making or receiving the payment.This is to be 
            provided by merchant while making a payout.
        emailSubject:
          type: string
          example: Skrill Payout
          maxLength: 30
          description: |-
            This is the Subject line to use in the customer 
            email. This is to be provided by merchant while 
            making a payout.

            **Note:** Mandatory field for payout.
        emailMessage:
          type: string
          example: Your Skrill Payout request has been processed
          maxLength: 50
          description: |-
            This is the message to use in the customer 
            email. This is to be provided by merchant while 
            making a payout.

            **Note:** Mandatory field for payout.
        recipientDescription:
          type: string
          description: |-
            This is a description to be shown on the Skrill 
            payment page in the logo area if there is no 
            logo_url parameter. If no value is submitted and 
            there is no logo, the pay_to_email value is shown 
            as the recipient of the payment.
          maxLength: 30
          example: logo_url_alt_text
        language:
          type: string
          enum:
            - AT
            - AU
            - BE
            - BR
            - CA
            - CH
            - 'CN,'
            - 'DE,'
            - 'ES,'
            - 'FR,'
            - 'GB,'
            - 'IT,'
            - 'NL,'
            - 'PL,'
            - 'PT,'
            - 'RU,'
            - 'US,'
            - 'da_DK,'
            - 'he_IL,'
            - 'id_ID,'
            - 'ja_JP,'
            - 'no_NO,'
            - 'pt_BR,'
            - 'ru_RU,'
            - 'sv_SE,'
            - 'th_TH,'
            - 'zh_CN,'
            - 'zh_HK,'
            - zh_TW
          description: 'The 2-character preferred language code for the consumer (e.g., AU, AT, BE, BR, CA, CH, CN, DE, ES, GB, FR, IT, NL, PL, PT, RU, or US.) or A five-character code is also valid for languages in these countries (e.g: da_DK, he_IL, id_ID, ja_JP, no_NO, pt_BR, ru_RU, sv_SE, th_TH, zh_CN, zh_HK, and zh_TW).'
        logoUrl:
          type: string
          description: |-
            This is the URL of the logo that you would like to appear in the top right of the Skrill page. The 
            logo must be accessible via HTTPS or it will not be shown. The logo will be resized to fit. To avoid scaling distortion, the minimum size should be as 
            follows:

            If the logo width > height - at least 107px wide.

            If logo width > height - at least 65px high.

            Avoid large images (much greater than 256 by 256px) to minimize the page loading time.
          example: 'http://www.paysafe.com/icon.jpg'
        detail1Description:
          type: string
          description: |-
            You can show additional details about the product 
            in the More information section in the header of 
            Quick Checkout.
          example: Details 1 description
        detail1Text:
          type: string
          description: |-
            The detail1Text is shown next to the 
            detail1Description in the More Information section in the header of the payment form with the other 
            payment details. The detail1Description combined 
            with the detail1Text is shown in the more 
            information field of the merchant account history 
            CSV file.
          example: Details 1 text
        descriptor:
          type: string
          maxLength: 30
          description: |-
            This is the merchant descriptor that will be 
            displayed on the consumer's bank statement.
          example: My company name
    skrillObject:
      title: skrill
      x-stoplight:
        id: g56qgy8ok5fdo
      type: object
      x-internal: true
      properties:
        skrill:
          $ref: '#/components/schemas/skrill'
    skrill-1-Tap:
      title: skrill 1-Tap
      x-stoplight:
        id: b03411e3f5d12
      type: object
      properties:
        consumerId:
          type: string
          description: Unique ID of the user which is used to identify to account and user in subsequent calls.
          example: '102932'
          maxLength: 50
        maxAmount:
          type: number
          description: 'This acts as an upper limit, any subsequent transactions for this subscription cannot be more than the maxAmount set.'
          example: 1000
      required:
        - consumerId
        - maxAmount
      description: These are the details of the skrill 1-Tap account used for the transaction.
    skrill1TapObject:
      title: skrill 1-Tap
      x-stoplight:
        id: ttgzciw4ticf0
      type: object
      properties:
        skrill1Tap:
          $ref: '#/components/schemas/skrill-1-Tap'
      x-internal: true
    spei:
      title: spei
      x-stoplight:
        id: kq3q4q15ed9g3
      type: object
      properties:
        fundingInstructions:
          type: array
          items:
            $ref: '#/components/schemas/fundingInstruction'
      description: 'These are the details of the spei account used for the request. Only one payment instrument object (for example, card or spei) can be included in the request.'
      x-internal: true
    speiObject:
      title: spei
      x-stoplight:
        id: m1jtk0tije8ai
      type: object
      properties:
        spei:
          $ref: '#/components/schemas/spei'
      x-internal: true
    splitpay:
      title: splitpay
      x-stoplight:
        id: egf9uqdhq300k
      description: 'This object should be used only for Splitpay transactions only, an array containing the linked accounts and the amount shared with each. You must include either amount or percent. However, you cannot include both values.'
      type: object
      properties:
        linkedAccount:
          type: string
          description: This is the ID of the linked account. This account must already be linked to the merchant account.
          example: '123124124'
        amount:
          type: number
          description: This is the amount to transfer to the linked account in minor currency units. The total amount to all linked accounts cannot exceed the transaction total.
          example: 505
        percent:
          type: number
          example: 5
          description: This is the percentage of the total transaction amount to transfer to that account. The total percentage to all linked accounts cannot exceed 100%.
      required:
        - linkedAccount
    standaloneCredit:
      allOf:
        - type: object
          properties:
            id:
              type: string
              description: This is the ID returned in the response. This ID can be used for future associated requests.
              maxLength: 36
              example: 25f6dadf-176a-415f-95c9-6ff39ff697ba
              readOnly: true
            paymentType:
              type: string
              description: This is the payment type associated with the Payment Handle used for this request.
              enum:
                - CARD
                - SKRILL
                - NETELLER
                - PAYPAL
                - VENMO
                - VIPPREFERRED
                - MAZOOMA
                - SIGHTLINE
                - INTERAC_ETRANSFER
                - RAPID_TRANSFER
                - SKRILL1TAP
                - ACH
                - EFT
                - BACS
                - SEPA
              readOnly: true
            txnTime:
              type: string
              description: This is the date and time the transaction was processed.
              format: date-time
              example: '2023-01-19T10:48:04Z'
              readOnly: true
            billingDetails:
              $ref: '#/components/schemas/billingDetails'
            paymentFacilitator:
              $ref: '#/components/schemas/paymentFacilitator'
            status:
              type: string
              enum:
                - INITIATED
                - PENDING
                - FAILED
                - CANCELLED
                - EXPIRED
                - COMPLETED
                - RECEIVED
              description: |-
                This is the status of the payment handle. Possible values are:

                - INITIATED – The transaction was initiated with the downstream provider.

                - PENDING - The transaction awaiting payment service provider's response.

                - FAILED – The transaction failed due to either an error or being declined.

                - CANCELLED - The authorization request has been fully reversed.

                - EXPIRED – The transaction request is expired.

                - COMPLETED – The transaction request is completed.

                - RECEIVED – Our system has received the request and is waiting for the downstream processor’s response.
              readOnly: true
            returnLinks:
              type: array
              items:
                $ref: '#/components/schemas/returnLinks'
            liveMode:
              type: boolean
              description: |-
                This flag indicates the environment.

                - true - Production
                - false - Non-Production
              readOnly: true
            updatedTime:
              type: string
              format: date-time
              example: '2023-01-19T11:33:23Z'
              description: ISO 8601 format (UTC). This is the date and time the resource was last updated.
            statusTime:
              type: string
              format: date-time
              example: '2023-01-19T11:33:23Z'
              description: ISO 8601 format (UTC). This is the date and time the resource was last updated.
              readOnly: true
            profile:
              $ref: '#/components/schemas/profile'
            gatewayReconciliationId:
              type: string
              description: Transaction identifier that can be used to reconcile this transaction with the provider gateway.
        - $ref: '#/components/schemas/standaloneCreditRequest'
        - $ref: '#/components/schemas/standaloneCreditPaymentInstrument'
      title: standaloneCredit
      x-internal: true
      x-examples:
        Card:
          id: eddbec36-6fc7-48fb-a694-dfc5b314ec0d
          paymentType: CARD
          paymentHandleToken: SCQp7CmWCSRFmvzv
          merchantRefNum: 32be35aac78dbfe252a2
          currencyCode: USD
          txnTime: '2023-01-20T05:59:13Z'
          billingDetails:
            street: TEST
            city: CA
            zip: '12345'
            state: CA
            country: US
          customerIp: 204.91.0.12
          status: PENDING
          amount: 500
          description: Winning payment from Loto 649
          card:
            cardExpiry:
              month: '10'
              year: '2025'
            holderName: Dilip
            cardType: MC
            cardBin: '510040'
            lastDigits: '0000'
            cardCategory: DEBIT
            issuingCountry: US
          paymentFacilitator:
            subMerchant:
              id: '123456789'
              name: PayFacSubMerchant
              phone: '478234562331'
              email: payfac@mail.com
              url: www.payfac.com
              address:
                street: 100 Queen Street West
                city: London
                country: GB
                zip: M5H 2N2 
        Venmo:
          id: 8ba337c8-e00f-4e0f-a48d-cc3bb1e6d0ef
          paymentType: VENMO
          paymentHandleToken: PHfmNDxrvSooawrX
          merchantRefNum: '1674816698889'
          currencyCode: USD
          dupCheck: true
          txnTime: '2023-01-27T10:52:24Z'
          billingDetails:
            street1: '100'
            street2: Queen Street
            city: Cupertino
            zip: '14236'
            state: CA
            country: US
          customerIp: 172.0.0.1
          status: PROCESSING
          amount: 100
          returnLinks:
            - rel: on_failed
              href: 'https://api.test.paysafe.com/checkout/v2/pages/redirect-error.html'
            - rel: on_completed
              href: 'https://api.test.paysafe.com/checkout/v2/pages/redirect-success.html'
            - rel: default
              href: 'https://api.test.paysafe.com/checkout/v2/pages/redirect-success.html'
          liveMode: false
          simulator: EXTERNAL
          updatedTime: '2023-01-27T10:52:24Z'
          statusTime: '2023-01-27T10:52:24Z'
          source: SingleAPI
          profile:
            firstName: Sandi
            lastName: Smith
            email: sandi.smith@paysafe.com
            dateOfBirth:
              day: 23
              month: 12
              year: 1990
            phone: '84632876432'
          venmo:
            recipientType: USER_ID
            consumerId: sb-cpfxo1472298@personal.example.com
        ACH:
          id: f353e5eb-f6b7-4b65-9a7c-ab0afe20dc6c
          accountId: '1001723570'
          paymentType: ACH
          paymentHandleToken: SAAcQpyQ4DQ6M4uy
          merchantRefNum: '1674816924342'
          currencyCode: USD
          settleWithAuth: true
          dupCheck: true
          txnTime: '2023-01-27T10:56:03Z'
          billingDetails:
            nickName: John Dee
            street: '100'
            street2: Queen Street
            city: Cupertino
            zip: '14236'
            state: NY
            country: US
            id: 28740f84-0379-4949-8643-45ed29f03cd9
          customerIp: 172.0.0.1
          status: PENDING
          amount: 100
          ach:
            lastDigits: '12'
            accountHolderName: Test User Two
            accountType: SAVINGS
            payMethod: WEB
            routingNumber: '061000052'
          profile:
            firstName: Sandi
            lastName: Smith
            email: sandi.smith@paysafe.com
            phone: '84632876432'
          description: winning payment from iGaming Website
          merchantDescriptor:
            dynamicDescriptor: Test Description
            phone: '5555345456'
    standaloneCreditPaymentInstrument:
      type: array
      oneOf:
        - $ref: '#/components/schemas/card'
        - $ref: '#/components/schemas/skrillObject'
        - $ref: '#/components/schemas/netellerObject'
        - $ref: '#/components/schemas/paypalObject'
        - $ref: '#/components/schemas/venmoObject'
        - $ref: '#/components/schemas/vippreferredObject'
        - $ref: '#/components/schemas/mazoomaObject'
        - $ref: '#/components/schemas/sightlineObject'
        - $ref: '#/components/schemas/interacObject'
        - $ref: '#/components/schemas/rapidTransferObject'
        - $ref: '#/components/schemas/skrill1TapObject'
        - $ref: '#/components/schemas/achObject'
        - $ref: '#/components/schemas/eftObject'
        - $ref: '#/components/schemas/bacsObject'
        - $ref: '#/components/schemas/sepaObject'
      title: standaloneCreditPaymentInstrument
      x-internal: true
    standaloneCreditList:
      title: standaloneCreditsList
      x-stoplight:
        id: 287ed126a1597
      type: object
      properties:
        standalonecredits:
          type: array
          description: An array of Standalone Credits.
          items:
            $ref: '#/components/schemas/standaloneCredit'
        meta:
          $ref: '#/components/schemas/meta'
      x-internal: true
    standaloneCreditRequest:
      title: standaloneCreditsRequest
      x-stoplight:
        id: c3fbc93ddc16d
      type: object
      x-internal: true
      properties:
        merchantRefNum:
          type: string
          description: |-
            This is the merchant reference number created by 
            the merchant and submitted as part of the request. It must be unique for each request.
          maxLength: 255
          example: merchant ABC-444
        paymentHandleToken:
          type: string
          description: This is the payment token generated by Paysafe that will be used for the request.
          maxLength: 36
          example: 842778a0-03a2-11e9-8eb2-f2801f1b9fd1
        amount:
          type: number
          description: |-
            This is the amount of the request, in minor units. For example, to process US $10.99, this value 
            should be 1099.

            **Note:** The amount specified in the Credit request must match the amount specified in the Payment 
            Handle request from which the paymentHandleToken is taken.
          example: 10098
        currencyCode:
          type: string
          description: |-
            This is the currency of the merchant account, for example, USD or CAD. See 
            [Currency Codes](https://developer.paysafe.com/en/support/reference-information/codes/#currency-codes).

            **Note:** The currencyCode specified in the Credit request must match the currencyCode specified in the Payment Handle request from which the paymentHandleToken is taken.
          example: BTC
          maxLength: 3
        customerIp:
          type: string
          description: This is the customer's IP address.
          maxLength: 39
          example: 204.91.0.12
        description:
          type: string
          description: 'This is a description of the transaction, provided by the merchant.'
          maxLength: 255
          example: Winning payment from Loto
        dupCheck:
          type: boolean
          description: This validates that this request is not a duplicate. A duplicate request is when the merchantRefNum has already been used in a previous request within the past 90 days.
          default: true
        merchantDescriptor:
          $ref: '#/components/schemas/merchantDescriptor'
        paymentFacilitator:
          $ref: '#/components/schemas/paymentFacilitator'  
      required:
        - merchantRefNum
        - paymentHandleToken
        - amount
        - currencyCode
    standaloneCreditUpdateRequest:
      title: standaloneCreditUpdateRequest
      x-stoplight:
        id: 4f0045d56190d
      type: object
      x-internal: true
      properties:
        merchantRefNum:
          type: string
          description: This is the merchant reference number created by the merchant and submitted as part of the request.
          example: merchantRefNum-101
          maxLength: 255
        interacEtransfer:
          $ref: '#/components/schemas/interac'
    step:
      title: step
      x-stoplight:
        id: dxzmyt10r2566
      type: object
      properties:
        number:
          type: number
          example: 1
        instruction:
          type: string
          example: Log on to online banking for Scotiabank as usual.
      x-internal: true
    storedCredential:
      title: storedCredential
      x-stoplight:
        id: xskqu8sybe6xx
      type: object
      description: |-
        The storedCredential object is used to identify [authorization requests] that use stored credentials for a consumer, in order to improve authorization rates and reduce fraud. Stored credentials can be used in two cases:

        - Using a payment token – An authorization request that uses a paymentToken from the [Customer Vault API]

        - Using a card number – An authorization request that uses a credit card number stored by the merchant.

        **Notes:**

        - If you use a paymentToken in the authorization request but do not include the storedCredential object, Paysafe will provide default information taken from Customer Vault data.

        - You cannot include both the storedCredential object and the recurring parameter in the same authorization request. Paysafe recommends using the storedCredential object.

        - The cvv parameter of the [card object] is required when the occurrence parameteris set to INITIAL. However, cvv is not required when the occurrence parameter is set to SUBSEQUENT.

        - The storedCredential object cannot be used for Apple Pay or Google Pay transactions.
      properties:
        type:
          type: string
          enum:
            - ADHOC
            - TOPUP
            - RECURRING
          default: ADHOC
          description: |-
            This specifies the type of request being made. 
            Possible values are:

            - ADHOC – Ad hoc consumer-initiated request

            - TOPUP – Unscheduled merchant-iniitated request when a consumer balance is below a set limit.

            - RECURRING – Scheduled, merchant-initiated recurring request.

            **Note:** This value defaults to ADHOC.
        occurrence:
          type: string
          enum:
            - INITIAL
            - SUBSEQUENT
          default: INITIAL
          description: |-
            This specifies whether this stored credential request is initial or recurring. Possible values are:

            - INITIAL – Used when this is the first time the consumer uses this credit card.

            - SUBSEQUENT – Used when the consumer uses this credit card for subsquent requests.

            **Note:** This value defaults to INITIAL.
        initialTransactionId:
          type: string
          maxLength: 36
          description: |-
            Id of the initial Recurring Payment transaction. This id should be stored from the auth response of the transaction indicated as initial with the following: type=RECURRING/TOPUP, occurrence=INITIAL. This reference should be provided when:

              - type = RECURRING and occurrence = SUBSEQUENT
              -type = TOPUP and occurrence = SUBSEQUENT

            **Note:** This reference is a must to meet PSD 2 authentication process requirements for merchant initiated transactions successfully.
        externalInitialTransactionId:
          type: string
          maxLength: 256
          description: |-
            Card Scheme Transaction Id of the initial payment transaction in the recurring plan when it was processed through external service provider. This reference should be provided only when:
              - type=RECURRING and occurrence=SUBSEQUENT
              - type=TOPUP and occurrence=SUBSEQUENT
            **Note:** This reference cannot be provided along with initialTransactionId.
      x-examples:
        Example 1:
          type: RECURRING
          occurrence: SUBSEQUENT
          initialTransactionId: a02e52c7-c991-4418-966a-b62989cb0eae
    storeDetails:
      title: storeDetails
      x-stoplight:
        id: wjey6nsbh5b00
      type: object
      properties:
        storeDetailsList:
          type: array
          items:
            type: object
            properties:
              posId:
                type: string
                description: The payment point ID.
                example: '6638426'
              name:
                type: string
                description: The payment point name.
                example: Tabac
              address:
                type: string
                description: The payment point address.
                example: 'street: Place De L''Hôtel De Ville'
              latitude:
                type: string
                description: The payment point latitudinal coordinates.
                example: '48.856614'
              longitude:
                type: string
                description: The payment point longitudinal coordinates.
                example: '2.3522219'
              postalCode:
                type: string
                description: The payment point postal code.
                example: '20137'
              city:
                type: string
                description: The payment city.
                example: Porto-Vecchio
              cheatSheetUrl:
                type: string
                description: The payment cheat sheet url.
              distributorId:
                type: string
                description: The payment point distributor id.
                example: '86'
              country:
                type: string
                description: The payment point country.
                example: FRA
              posTypeLogo:
                type: string
                description: The payment point logo.
              productType:
                type: string
                description: The payment point accepted product.
                example: mdirectload
              media:
                type: string
                description: The payment point media type.
                example: EVoucher
              productLogo:
                type: string
                description: The payment point icon/marker to be shown on the map.
                example: 'https://www.paysafecash.com/fileadmin/posicon/marker/default.png'
              specialImage:
                type: string
                description: The payment point special image.
              specialText:
                type: string
                description: The payment point special text.
              cheatSheetText:
                type: string
                description: The payment point cheat sheet text.
              recommended:
                type: string
                description: The payment point recommended status.
                enum:
                  - 'false'
                  - 'true'
                example: 'false'
              distanceFromOrigin:
                type: string
                description: 'The payment point distance from the origin coordinates, in meters.'
                example: '85'
              directload:
                type: string
                description: The payment point acceptance of directload.
                enum:
                  - 'false'
                  - 'true'
                example: 'false'
              storeFeedbacks:
                type: array
                items:
                  type: string
        message:
          type: string
        status:
          type: string
        errorCode:
          type: string
      x-internal: true
    balances:
      title: balances
      x-stoplight:
        id: wjey6nsbh5b00
      type: object
      properties:
        balances:
          type: array
          items:
            type: object
            properties:
              currencyCode:
                type: string
                description: Currency code.
                example: 'EUR'
              paymentType:
                type: string
                description: Payment Type.
                example: SKRILL
              balance:
                type: string
                description: Balance.
                example: '123.12'
              gatewayResponse:
                type: array
                description: Gatway Response.
                example: '{
                      "gatewayAccountId": "139735755",
                      "processor": "SKRILL_QCO"
                       }'
    threeDs:
      title: threeDS
      x-stoplight:
        id: 7qu7m6m1qu2gm
      type: object
      description: 'Denotes the status of threeDs object. If true and is configured in the backend for the respective accountId, it is mandatory to pass this parameters. If false, parameters need not be passed.'
      x-examples:
        Example 1:
          merchantUrl: 'https://api.qa.paysafe.com/checkout/v2/index.html#/desktop'
          deviceChannel: BROWSER
          requestorChallengePreference: NO_PREFERENCE
          messageCategory: PAYMENT
          transactionIntent: CHECK_ACCEPTANCE
          authenticationPurpose: PAYMENT_TRANSACTION
          orderItemDetails:
            preOrderItemAvailabilityDate: '2014-01-26'
            preOrderPurchaseIndicator: MERCHANDISE_AVAILABLE
            reorderItemsIndicator: FIRST_TIME_ORDER
            shippingIndicator: SHIP_TO_BILLING_ADDRESS
          purchasedGiftCardDetails:
            amount: 1234
            count: 2
            currency: USD
          userAccountDetails:
            addCardAttemptsForLastDay: 1
            changedDate: '2010-01-26'
            changedRange: DURING_TRANSACTION
            createdDate: '2010-01-26'
            createdRange: NO_ACCOUNT
            passwordChangedDate: '2012-01-26'
            passwordChangedRange: NO_CHANGE
            suspiciousAccountActivity: true
            totalPurchasesSixMonthCount: 1
            transactionCountForPreviousDay: 1
            transactionCountForPreviousYear: 3
            shippingDetailsUsage:
              cardHolderNameMatch: true
              initialUsageDate: '2014-01-26'
              initialUsageRange: CURRENT_TRANSACTION
            userLogin:
              authenticationMethod: NO_LOGIN
              data: Some up to 2048 bytes undefined data
              time: '2014-01-26T10:32:28Z'
            paymentAccountDetails:
              createdRange: NO_ACCOUNT
              createdDate: '2010-01-26'
      properties:
        id:
          type: string
          format: uuid
          description: This is the unique ID returned in the response.
          maxLength: 36
          readOnly: true
        deviceFingerprintingId:
          type: string
          description: This is the UUID used with device fingerprinting.
          format: uuid
          maxLength: 36
        merchantRefNum:
          type: string
          maxLength: 255
          description: This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.
          example: fc5b62df1202e491475d
        process:
          type: boolean
          description: This is an indicator representing whether to call authenticate end point or not.
        merchantUrl:
          type: string
          example: 'https://api.qa.paysafe.com/checkout/v2/demo-store/index.html'
          description: This is the fully qualified URL of the merchant's commercial or customer care website.
          maxLength: 2048
        deviceChannel:
          type: string
          example: BROWSER
          enum:
            - BROWSER
            - APP
            - 3RI
          description: This is the type of channel interface used to initiate the transaction.
        requestorChallengePreference:
          type: string
          enum:
            - NO_PREFERENCE
            - NO_CHALLENGE_REQUESTED
            - CHALLENGE_REQUESTED
            - CHALLENGE_MANDATED
          description: This indicates whether a challenge is requested for this transaction.
        messageCategory:
          type: string
          enum:
            - PAYMENT
            - NON_PAYMENT
          example: PAYMENT
          description: This is the category of the message for a specific use case.
        transactionIntent:
          type: string
          enum:
            - GOODS_OR_SERVICE_PURCHASE
            - CHECK_ACCEPTANCE
            - ACCOUNT_FUNDING
            - QUASI_CASH_TRANSACTION
            - PREPAID_ACTIVATION
          description: This identifies the type of transaction being authenticated.
        authenticationPurpose:
          type: string
          enum:
            - PAYMENT_TRANSACTION
            - RECURRING_TRANSACTION
            - INSTALMENT_TRANSACTION
            - ADD_CARD
            - MAINTAIN_CARD
            - EMV_TOKEN_VERIFICATION
          example: PAYMENT_TRANSACTION
          description: 'This is the type of Authentication request. This data element provides additional information to the ACS to determine the best approach for handling an authentication request. '
        billingCycle:
          $ref: '#/components/schemas/billingCycle'
        orderItemDetails:
          $ref: '#/components/schemas/orderItemDetails'
        purchasedGiftCardDetails:
          $ref: '#/components/schemas/purchasedGiftCardDetails'
        userAccountDetails:
          $ref: '#/components/schemas/userAccountDetails'
        priorThreeDSAuthentication:
          $ref: '#/components/schemas/priorThreedsAuthentication'
        shippingDetailsUsage:
          $ref: '#/components/schemas/shippingDetailsUsage'
        suspiciousAccountActivity:
          type: boolean
          description: 'This indicates whether the 3DS Requestor has experienced suspicious activity, including previous fraud, on the cardholder account.'
        totalPurchasesSixMonthCount:
          type: number
          maximum: 9999
          description: Transaction count for last 6 months.
        transactionCountForPreviousDay:
          type: number
          maximum: 999
          description: Transaction count for last 24 hours
        transactionCountForPreviousYear:
          type: number
          maximum: 999
          description: Transaction count for last 1 year.
        travelDetails:
          $ref: '#/components/schemas/travelDetails'
        userLogin:
          $ref: '#/components/schemas/userLogin'
        browserDetails:
          $ref: '#/components/schemas/browserDetails'
        cavv:
          type: string
          description: 'This is the Cardholder Authentication Verification Value, indicating that the transaction has been authenticated.'
        eci:
          type: number
          description: 'This is the Electronic Commerce Indicator code, which gets returned by the card issuer indicating whether the cardholder was successfully authenticated.'
        status:
          type: string
          enum:
            - COMPLETED
            - ' PENDING'
            - FAILED
          description: |-
            This is the status of the authentication request.

            - COMPLETED – The transaction has been completed.

            - PENDING – The transaction has not been completed yet.

            - FAILED – The authentication request failed.
        threeDResult:
          type: string
          enum:
            - 'Y'
            - A
            - 'N'
            - U
            - E
            - C
            - R
          description: |-
            ThreeDResult possible values are:

              - Y - AUTHENTICATION_SUCCESSFUL
              - A - AUTHENTICATION_ATTEMPTED
              - N - AUTHENTICATION_FAILED
              - U - AUTHENTICATION_UNAVAILABLE
              - E - AUTHENTICATION_ERROR
              - C - CHALLENGE_REQUIRED
              - R - REJECTED_TRANSACTION
        txnTime:
          type: string
          description: 'This is the date and time the request was processed. The ISO 8601 date format is expected, i.e., YYYY-MM-DD-THH:MM:SSZ.'
        directoryServerTransactionId:
          type: string
          format: uuid
          description: |-
            This is the directory server transaction ID required for Mastercard.

            **Note:** This exists only for 3D Secure 2.
          maxLength: 36
        threeDSecureVersion:
          type: string
          minLength: 5
          maxLength: 8
          description: |-
            This is the 3D Secure protocol version, returned in the response.

            **Note:** If version 2 is not available for the card provided, the value defaults to 1.0.2.
        acsUrl:
          type: string
          description: This is the fully qualified URL to redirect the consumer to complete the payer authentication transaction.
        payload:
          type: string
          description: This is the encoded Payment Authentication Request generated by the merchant authentication processing system (MAPS).
        sdkChallengePayload:
          type: string
          description: 'This is a payload that, if returned, should be passed to the challenge function of the JavaScript SDK to continue with the challenge.'
        xid:
          type: string
          maxLength: 40
          description: |-
            This is the transaction identifier returned by the card issuer.

            **Note:** This exists only for 3DS 1.0.2.
             
        threeDEnrollment:
          type: string
          enum:
            - 'Y'
            - 'N'
            - U
          description: |-
            Possible values for ThreeDEnrollment are:
              - Y - AVAILABLE
              - N - NOT_ENROLLED
              - U - UNAVAILABLE
        maxAuthorizationsForInstalmentPayment:
          type: number
          minimum: 1
          maximum: 999
          description: 'This is the maxAuthorizationsForInstalmentPayment of the request, in minor units.'
        electronicDelivery:
          $ref: '#/components/schemas/electronicDelivery'
        initialPurchaseTime:
          type: string
          description: |-
            This is the date and time of the purchase. The ISO 8601 date format is expected, i.e., YYYY-MM-DD-THH:MM:SSZ.

            **Note:** This element is required only if messageCategory=NON_PAYMENT and authenticationPurpose=INSTALMENT_TRANSACTION or RECURRING_TRANSACTION.
        amount:
          type: number
          description: 'This is the amount of the request, in minor units.'
          maximum: 99999999999
    threeDsVersionConfig:
      title: threeDsVersionConfig
      x-stoplight:
        id: 36ipleog29m3p
      type: object
      description: |-
        Map of CardBarnd and its ThreeDsVersion.

        Possible values for CardBrand are:

          - VI - Visa

          - MC - MasterCard

          - DI - Discover

          - AM - American Express

          - DC - Diners Club

          - VE - Visa Electron

          - MD - Maestro

        Possible values for ThreeDsVersion are:

          - SKIP_3DS
          - THREE_D_S_ONE
          - THREE_D_S_TWO
          - EXTERNAL_3DS 
      properties:
        VI:
          type: string
          enum:
            - SKIP_3DS
            - THREE_D_S_ONE
            - THREE_D_S_TWO
            - EXTERNAL_3DS
        MC:
          type: string
          enum:
            - SKIP_3DS
            - THREE_D_S_ONE
            - THREE_D_S_TWO
            - EXTERNAL_3DS
        DI:
          type: string
          enum:
            - SKIP_3DS
            - THREE_D_S_ONE
            - THREE_D_S_TWO
            - EXTERNAL_3DS
        AM:
          type: string
          enum:
            - SKIP_3DS
            - THREE_D_S_ONE
            - THREE_D_S_TWO
            - EXTERNAL_3DS
        DC:
          type: string
          enum:
            - SKIP_3DS
            - THREE_D_S_ONE
            - THREE_D_S_TWO
            - EXTERNAL_3DS
        VE:
          type: string
          enum:
            - SKIP_3DS
            - THREE_D_S_ONE
            - THREE_D_S_TWO
            - EXTERNAL_3DS
        MD:
          type: string
          enum:
            - SKIP_3DS
            - THREE_D_S_ONE
            - THREE_D_S_TWO
            - EXTERNAL_3DS
      x-internal: true
    ticket:
      title: ticket
      x-stoplight:
        id: v6vbj75b0503t
      type: object
      description: Information about the Airline Ticket Number and if the ticket is restricted.
      properties:
        ticketNumber:
          type: string
          maxLength: 15
          example: '1234567891011'
          description: Airline ticket number
        isRestrictedTicket:
          type: boolean
          description: |-
            Indicates whether this ticket is non-refundable. This entry should be supplied on CPS/Passenger Transport 1 or 2 transactions if the ticket was purchased as a non-refundable ticket. Valid values are:

            - false - No restriction (default)

            - true - Restricted (non-refundable) ticket'
      required:
        - ticketNumber
    travelAgency:
      title: travelAgency
      x-stoplight:
        id: i6jw2mbx8wtz4
      type: object
      description: Information about the travel agency if the ticket was issued by a travel agency.
      properties:
        code:
          type: string
          maxLength: 8
          description: Code identifying travel agency if the ticket was issued by a travel agency..
          example: MY AGENT
        name:
          type: string
          maxLength: 25
          description: Information about the travel agency if the ticket was issued by a travel agency.
          example: MYAGENT347
    travelDetails:
      title: travelDetails
      x-stoplight:
        id: wxxbg9dpo7hwy
      type: object
      properties:
        isAirTravel:
          type: boolean
          description: 'This indicates whether the transaction is an air travel related purchase, e.g., a ticket purchase'
          default: false
        airlineCarrier:
          type: string
          maxLength: 256
          description: This is the selected airline carrier.
        departureDate:
          type: string
          format: date
          description: 'This is the date of departure in the time zone of the departure location. The ISO 8601 date format is expected, i.e., YYYY-MM-DD.'
        destination:
          type: string
          maxLength: 5
          description: This is the airport code of the destination airport.
        origin:
          type: string
          maxLength: 5
          description: This is the airport code of the originating airport.
        passengerFirstName:
          type: string
          maxLength: 99
          description: This is the first name of the cardholder from the billing details.
        passengerLastName:
          type: string
          maxLength: 99
          description: This is the last name of the cardholder from the billing details.
      description: These are the Amex-specific travel details.
      x-examples:
        Example:
          isAirTravel: true
          airlineCarrier: Wizz air
          departureDate: '2014-01-26'
          destination: SOF
          origin: BCN
          passengerFirstName: Venkata Suresh
          passengerLastName: Chagalamarri
      x-internal: true
    transactionIntent:
      title: transactionIntent
      x-stoplight:
        id: bxgl8gmmx0mao
      type: object
      description: |-
        The transactionIntent property is used to identify the intent of the authorization requests. The value of the transactionIntent shows if the transaction is crypto or quasi-cash related one.

        - It is an optional enum field applicable for every MCC.

        - It is required only if the use cases explained below are applicable for the merchants or the default behavior is not acceptable for them.

        - The merchant needs to add in the request transactionIntent property value as shown in the example below.

        **Use cases and applicable valid enum transactionIntent options:**

        |Use case                                                                                                                                                                                                                                                                  |MCC             |Valid transactionIntent value |
        |---                                                                                                                                                                                                                                                                       |---             |---                           |
        |The consumer is acquiring cryptocurrency in a transaction.                                                                                                                                                                                                                |6012, 6051      |CRYPTO_ON_RAMP                |
        |The consumer is loading a cryptocurrency wallet or exchange account with fiat. *Applicable only in combination with valid fundingTransaction object.                                                                                                                      |6012, 6051      |WALLET_CRYPTO_ON_RAMP         |
        |The consumer is acquiring quasi-cash in a transaction. *Quasi cash transactions represent the purchase of foreign currencies or items (including, but not limited to, casino chips, money orders, lottery tickets and travelers cheques) which may be convertible to cash.|4829, 6012, 6051|QUASI_CASH                    |
        |For purchases of goods or services that leverage a live conversion of fiat into non - fiat currency.                                                                                                                                                                      |ANY             |BUY_WITH_CRYPTO               |

        **Default transactionIntent definition by Paysafe**

        - All authorizations processed by MCC 6051 will be classified as crypto related with transactionIntent "CRYPTO_ON_RAMP" or "WALLET_CRYPTO_ON_RAMP" (when funding a wallet), except their account is not configured by Paysafe for quasi-cash transactions.

        - All authorizations processed by MCC 6051 will be classified as crypto related with transactionIntent "CRYPTO_ON_RAMP" or "WALLET_CRYPTO_ON_RAMP" (when funding a wallet), except their account is not configured by Paysafe for quasi-cash transactions.All authorizations processed by MCC 6051 or 4829 with quasi-cash configuration turned on will be classified as quasi-cash related with transactionIntent "QUASI_CASH" .

        **Expected errors related to invalid transactioIntent values:**

        - If you send transactionIntent type in the authorization request with value not applicable for your MCC, the transaction will be declined with error 3072 - "Your request has been declined because the requested transactionIntent value is not applicable for your merchant category code (MCC)".

        - If you send transactionIntent type WALLET_CRYPTO_ON_RAMP in the authorization request, but you didn't classify the transaction as "funding" one with the respective valid fundingTransaction object, the transaction will be declined with error 3071 - Your request has been declined because of mismatch between the requested transactionIntent and fundingTransaction type.

        **Note:** More about the usage of transactionIntent in standalone credit request can be found here DRAFT - Transaction intent field in standalone credits - Technical documentation for merchant's comms (dev center address to be added).
      properties:
        transactionIntent:
          type: string
          enum:
            - CRYPTO_ON_RAMP
            - WALLET_CRYPTO_ON_RAMP
            - QUASI_CASH
            - BUY_WITH_CRYPTO
    tripLegs:
      title: tripLegs
      x-stoplight:
        id: wy59mu291gmts
      type: object
      description: A grouping of four separate trip segments. Each leg contains detailed itinerary information.
      x-examples:
        tripLegs:
          tripLegs:
            leg1:
              flight:
                carrierCode: LH
                flightNumber: '0799'
              serviceClass: F
              isStopOverAllowed: 'true'
              destination: ISL
              fareBasis: VMAY
              departureDate: '2021-01-26'
            leg2:
              flight:
                carrierCode: TK
                flightNumber: '1385'
              serviceClass: F
              isStopOverAllowed: 'true'
              destination: SOF
              fareBasis: VMAY
              departureDate: '2021-01-26'
      properties:
        leg1:
          $ref: '#/components/schemas/leg'
        leg2:
          $ref: '#/components/schemas/leg'
        leg3:
          $ref: '#/components/schemas/leg'
        leg4:
          $ref: '#/components/schemas/leg'
    userAccountDetails:
      title: userAccountDetails
      x-stoplight:
        id: xxvapqxl3kubg
      type: object
      properties:
        addCardAttemptsForLastDay:
          type: number
          description: This is the number of Add Card attempts in the last 24 hours.
          readOnly: true
        changedDate:
          type: string
          format: date
          description: 'This is the date that the cardholder’s account with the 3DS Requestor was last changed. The ISO 8601 date format is expected, i.e., YYYY-MM-DD.'
        changedRange:
          type: string
          enum:
            - DURING_TRANSACTION
            - LESS_THAN_THIRTY_DAYS
            - THIRTY_TO_SIXTY_DAYS
            - MORE_THAN_SIXTY_DAYS
          description: 'This is the length of time between the most recent change to the cardholder’s account information and the API call of the current transaction. '
        createdDate:
          type: string
          format: date
          description: 'This is the date when the cardholder opened the account with the 3DS Requestor. The ISO 8601 date format is expected, i.e., YYYY-MM-DD.'
        createdRange:
          type: string
          enum:
            - NO_ACCOUNT
            - DURING_TRANSACTION
            - LESS_THAN_THIRTY_DAYS
            - THIRTY_TO_SIXTY_DAYS
            - MORE_THAN_SIXTY_DAYS
          description: 'This is the length of time between the cardholder opening the account with the 3DS Requestor and the API call of the current transaction. '
        passwordChangedDate:
          type: string
          format: date
          description: 'This is the date when the cardholder’s account was reset or the password was changed. The ISO 8601 date format is expected, i.e., YYYY-MM-DD.'
        passwordChangedRange:
          type: string
          enum:
            - NO_CHANGE
            - DURING_TRANSACTION
            - LESS_THAN_THIRTY_DAYS
            - THIRTY_TO_SIXTY_DAYS
            - MORE_THAN_SIXTY_DAYS
          description: This is the length of time between the most recent password change or cardholder account reset and the API call of the current transaction.
        suspiciousAccountActivity:
          type: boolean
          description: 'This indicates whether the 3DS Requestor has experienced suspicious activity, including previous fraud, on the cardholder account.'
        totalPurchasesSixMonthCount:
          type: number
          description: This is the total number of purchases from this cardholder account in the previous six months.
          maximum: 9999
        transactionCountForPreviousDay:
          type: number
          maximum: 999
          description: This is the number of transactions (successful and abandoned) for this cardholder account with the 3DS Requestor across all payment accounts in the previous 24 hours.
        transactionCountForPreviousYear:
          type: number
          maximum: 999
          description: This is the number of transactions (successful and abandoned) for this cardholder account with the 3DS Requestor across all payment accounts in the previous year.
        shippingDetailsUsage:
          $ref: '#/components/schemas/shippingDetailsUsage'
        userLogin:
          $ref: '#/components/schemas/userLogin'
        paymentAccountDetails:
          $ref: '#/components/schemas/paymentAccountDetails'
        priorThreeDSAuthentication:
          $ref: '#/components/schemas/priorThreedsAuthentication'
        travelDetails:
          $ref: '#/components/schemas/travelDetails'
      x-internal: true
      x-examples:
        Example:
          addCardAttemptsForLastDay: 1
          changedDate: '2014-01-26'
          changedRange: DURING_TRANSACTION
          createdDate: '2014-01-26'
          createdRange: NO_ACCOUNT
          passwordChangedDate: '2014-01-26'
          passwordChangedRange: NO_CHANGE
          paymentAccountDetails:
            createdRange: NO_ACCOUNT
            createdDate: '2014-01-26'
          priorThreeDSAuthentication:
            data: Some up to 2048 bytes undefined data
            method: FRICTIONLESS_AUTHENTICATION
            id: 123e4567-e89b-12d3-a456-426655440000
            time: '2014-01-26T10:32:28Z'
          shippingDetailsUsage:
            cardHolderNameMatch: true
            initialUsageDate: '2014-01-26'
            initialUsageRange: CURRENT_TRANSACTION
          suspiciousAccountActivity: true
          totalPurchasesSixMonthCount: 1
          transactionCountForPreviousDay: 1
          transactionCountForPreviousYear: 3
          travelDetails:
            isAirTravel: true
            airlineCarrier: Wizz air
            departureDate: '2014-01-26'
            destination: Bulgaria
            origin: China
            passengerFirstName: John
            passengerLastName: Smith
          userLogin:
            authenticationMethod: NO_LOGIN
            data: Some up to 2048 bytes undefined data
            time: '2014-01-26T10:32:28Z'
      description: These are the user account details from the merchant website.
    userLogin:
      title: userLogin
      x-stoplight:
        id: a4n1v1wrkryjs
      type: object
      description: This is the cardholder login information.
      x-internal: true
      properties:
        authenticationMethod:
          type: string
          description: This is the mechanism used by the cardholder to authenticate to the 3DS Requestor.
          enum:
            - NO_LOGIN
            - INTERNAL_CREDENTIALS
            - FEDERATED_ID
            - ISSUER_CREDENTIALS
            - THIRD_PARY_AUTHENTICATION
            - FIDO_AUTHENTICATOR
        data:
          type: string
          description: This field is reserved for future iterations of 3D Secure 2.
          maxLength: 2048
          example: Some up to 2048 bytes undefined data
        time:
          type: string
          description: 'This is the date and time of the cardholder authentication. The ISO 8601 date format is expected, i.e., YYYY-MM-DD-THH:MM:SSZ.'
          format: date-time
    venmo:
      title: venmo
      x-stoplight:
        id: 6oltkoog03mm5
      type: object
      properties:
        consumerId:
          type: string
          description: |-
            This is your identifier for your consumer and must be unique per consumer.\
            We store this after your first successful Venmo transaction for a given consumer (during this first transaction the consumer agrees to link their Venmo wallet for future transactions); when you subsequently send in the same consumerId, we debit the consumer’s wallet directly without the consumer having to agree to each transaction.
          minLength: 1
          maxLength: 50
          example: consumer@thisemail.com
        merchantAccountId:
          type: string
          description: |-
            You can set up multiple accounts with Braintree, and each account can settle funds into a different bank account.  This parameter therefore allows you to control which of your bank accounts is used to receive settlement.\
            This only applies to pay-ins and not payouts.  If you pass it for payouts the value will be ignored.\
            If not supplied for pay-ins, your default Braintree account will be used.
          example: BankAccount2
        profileId:
          type: string
          description: |-
            You can set up multiple profiles with Braintree, where each profile shows the consumer a different logo and description during checkout on the Venmo app, and on the Venmo statement.  This parameter therefore allows you to vary the consumer experience (for example, if you have multiple brands, you can display a different logo for each).\
            This only applies to pay-ins and not payouts.  If you pass it for payouts the value will be ignored.  If not supplied for pay-ins, your default profile will be used.
          example: 1953896702662410263
      required:
        - consumerId
    venmoObject:
      title: venmo
      x-stoplight:
        id: 4bliyg54o9sqv
      type: object
      properties:
        venmo:
          $ref: '#/components/schemas/venmo'
      x-internal: true
    verificationRequest:
      title: verificationRequest
      x-stoplight:
        id: 73sb6347g1cc3
      type: object
      x-internal: true
      properties:
        merchantRefNum:
          type: string
          maxLength: 255
          description: This is the merchant reference number created by the merchant and submitted as part of the request.
          example: P1234
        paymentHandleToken:
          type: string
          description: This is the payment token generated by Paysafe that will be used for the Verification request.
          maxLength: 36
          example: 842778a0-03a2-11e9-8eb2-f2801f1b9fd1
        customerIp:
          type: string
          description: This is the customer's IP address.
          maxLength: 39
          example: 111.111.111.111
        dupCheck:
          type: boolean
          description: This validates that this request is not a duplicate. A request is considered a duplicate if the merchantRefNum has already been used in a previous request within the past 90 days.
          default: true
        description:
          type: string
          description: 'This is a description of the transaction, provided by the merchant.'
          maxLength: 255
          example: Consumer Card Verification
        paymentFacilitator:
          $ref: '#/components/schemas/paymentFacilitator'
      required:
        - merchantRefNum
        - paymentHandleToken
      description: These are the internal details to be passed in the verification request.
    verification:
      allOf:
        - type: object
          properties:
            id:
              type: string
              maxLength: 36
              example: 25f6dadf-176a-415f-95c9-6ff39ff697ba
              description: 'This is the ID returned in the response. This ID can be used for future associated requests, e,g., looking up the Verification.'
            txnTime:
              type: string
              format: date-time
              example: '2018-12-11T16:33:49Z'
              description: This is the date and time the transaction was processed.
              readOnly: true
            paymentType:
              type: string
              description: This is the payment type associated with the Payment Handle used for this request.
              enum:
                - CARD
                - INTERAC_ETRANSFER
                - MAZOOMA
                - SIGHTLINE
                - VIPPREFERRED
                - SKRILL
                - NETELLER
              readOnly: true
            status:
              type: string
              description: |-
                This is the status of the transaction request. Possible values are:

                - RECEIVED - A verification request was received from merchant, but it has not yet been sent to downstream gateway.

                - ERROR - The verification has errored - failed for non-business reason (non http status 402 error).

                - FAILED - The verification has failed and the downstream gateway has returned an error (http status 402) for some business reason.

                - COMPLETED - The verification was completed successfully.
              enum:
                - COMPLETED
                - FAILED
                - RECEIVED
                - ERROR
              readOnly: true
            currencyCode:
              type: string
              description: 'This is the currency of the merchant account, e.g., USD or CAD, see [Currency Codes](https://developer.paysafe.com/en/support/reference-information/codes/#currency-codes) returned in the request response.'
              maxLength: 3
              example: CAD
              readOnly: true
            riskReasonCode:
              type: array
              description: 'An array of integers is returned, displaying the detailed risk reason codes if your transaction was declined. It is returned only if your account is configured accordingly.'
              items:
                type: integer
                example: 1001
                readOnly: true
            gatewayResponse:
              $ref: '#/components/schemas/gatewayResponse'
            profile:
              $ref: '#/components/schemas/profile'
            authentication:
              $ref: '#/components/schemas/authentication'
            paymentFacilitator:
              $ref: '#/components/schemas/paymentFacilitator'
            error:
              $ref: '#/components/schemas/error'
        - $ref: '#/components/schemas/verificationRequest'
      title: verification
      description: Contains details of a verification for a specific payment type.
    verificationList:
      title: verificationList
      type: object
      x-stoplight:
        id: 9bc7577156e77
      x-internal: true
      properties:
        verifications:
          type: array
          description: An array of Verifications.
          items:
            $ref: '#/components/schemas/verification'
        meta:
          $ref: '#/components/schemas/meta'
    vippreferred:
      title: vippreferred
      x-stoplight:
        id: 7298156e817bb
      type: object
      description: "\t\nThese are the details of the vip preferred account used for the transaction. "
      properties:
        consumerId:
          type: string
          description: The is the consumer social security number (SSN). As it is sensitive data the consumerId will not be passed in the response. Last 4 digits will be passed as lastDigits.
          example: '550726575'
          readOnly: true
        registrationId:
          type: string
          description: This is the registrationId of the consumer. You can pass the registrationId in place of consumerId in the setup option call..
        paymentHandleToken:
          type: string
          description: 'This is the bank token of the registered bank account. The bank token is returned in the [Verification API response](/operations/verification).'
          example: SSx4RtFqzVeoqZqQ
        ach:
          $ref: '#/components/schemas/achBankAccount'
        achBankAccounts:
          type: array
          description: This contains all the registered ach bank accounts.
          items:
            $ref: '#/components/schemas/achBankAccount'
      required:
        - consumerId
      x-examples:
        VIP Preferrred:
          consumerId: '550726575'
          registrationId: string
          paymentHandleToken: SSx4RtFqzVeoqZqQ
          ach:
            id: 4fc8df40-033b-47cd-952b-bffcb52374bc
            bankName: Paysafe Test Bank
            registrationId: ac02be45-7ae5-40b5-a9ec-234086b2640e
            routingNumber: '123103729'
            accountNumber: '12345678'
            lastDigits: '78'
            paymentToken: BAxdQf1eUonA5adC
            paymentHandleToken: BAxdQf1eUonA5adC
          achBankAccounts:
            - id: 4fc8df40-033b-47cd-952b-bffcb52374bc
              bankName: Paysafe Test Bank
              registrationId: ac02be45-7ae5-40b5-a9ec-234086b2640e
              routingNumber: '123103729'
              accountNumber: '12345678'
              lastDigits: '78'
              paymentToken: BAxdQf1eUonA5adC
              paymentHandleToken: BAxdQf1eUonA5adC
    vippreferredObject:
      title: vippreferred
      x-stoplight:
        id: 7d40b1d67c1d6
      type: object
      x-internal: true
      properties:
        vippreferred:
          $ref: '#/components/schemas/vippreferred'
    vippreferredRegistrationRequest:
      title: vippreferredRegistrationRequest
      x-stoplight:
        id: ilgg6zsec8zbw
      type: object
      x-internal: true
      properties:
        merchantRefNum:
          type: string
          description: This is the reference number for the merchant.
          example: 576d95e8-a8e6-48b5-a8a8-11ae8352071q
        paymentType:
          type: string
          description: This is the payment type.
          enum:
            - VIPPREFERRED
          example: VIPPREFERRED
        profile:
          $ref: '#/components/schemas/profile'
        billingDetails:
          $ref: '#/components/schemas/billingDetails'
        returnLinks:
          description: This contains the return links that we show for the user. The return links must not exceed 10 URLs.
          type: array
          items:
            $ref: '#/components/schemas/returnLinks'
        vippreferred:
          $ref: '#/components/schemas/vippreferred'
    vippreferredRegistration:
      allOf:
        - type: object
          description: This is the unique Id returned in the response. Thid ID can be used for future associated requests.
          properties:
            id:
              type: string
              description: This is the ID returned in the response. This ID can be used for future associated requests.
              maxLength: 36
              readOnly: true
            txnTime:
              type: string
              description: 'This is the date and time the request was processed. For example: 2014-01-26T10:32:28Z'
            status:
              type: string
              description: |-
                This is the status of the transaction request. Possible values are:

                  - INITIATED - The transaction has been initiated.
                          
                  - RECEIVED – Our system has received the request and is waiting for the downstream processor’s response.

                  - COMPLETED – The transaction has been completed.

                  - PENDING – Our system has received the request but it has not yet been batched.

                  - FAILED – The transaction failed, due to either an error or being declined.

                  - CANCELLED – The request has been fully voided (reversed).'
              enum:
                - INITIATED
                - RECEIVED
                - COMPLETED
                - PENDING
                - FAILED
                - CANCELLED
              readOnly: true
            liveMode:
              type: boolean
              description: |-
                'This flag indicated the environment.

                - true - Production Environment
                - false - Non-Production Environment.
            gatewayResponse:
              $ref: '#/components/schemas/gatewayResponse'
            enablePlaid:
              type: boolean
              description: |-
                This is the flag to indicate the plaid activation status.

                - true - Plaid flow will be triggered during bank addition.

                - false - Manual entry of Bank Account Number and Routing Number during bank addition.
        - $ref: '#/components/schemas/vippreferredRegistrationRequest'
      title: vippreferredRegistration
      x-internal: true
    voidAuthorizations:
      allOf:
        - type: object
          description: 'This is the unique Id returned in the response. This Id can be used for future associated requests, for example, to look up the Void Authorization Request.'
          properties:
            id:
              type: string
              maxLength: 36
              description: This is the ID returned in the response. This ID can be used for future associated requests.
              example: 25f6dadf-176a-415f-95c9-6ff39ff697ba
              readOnly: true
            txnTime:
              type: string
              format: date-time
              description: This is the date and time the transaction was processed.
              example: '2023-01-19T08:37:50Z'
              readOnly: true
            status:
              type: string
              enum:
                - RECEIVED
                - COMPLETED
                - HELD
                - FAILED
                - CANCELLED
                - PENDING
              description: |-
                This is the status of the transaction request. Possible values are:

                - RECEIVED – Our system has received the request and is waiting for the downstream processor's response.

                - COMPLETED – The transaction has been completed.

                - HELD – The transaction has been placed on hold due to risk considerations.

                - FAILED – The transaction failed, due to either an error or being declined.

                - CANCELLED – The request has been fully voided (reversed).

                - PENDING – The request is pending.                
              readOnly: true
        - $ref: '#/components/schemas/voidAuthorizationsRequest'
      title: voidAuthorizations
    voidAuthorizationsList:
      title: voidAuthorizationsList
      x-stoplight:
        id: e69d01bddeeb8
      type: object
      properties:
        voidAuths:
          type: array
          items:
            $ref: '#/components/schemas/voidAuthorizations'
        meta:
          $ref: '#/components/schemas/meta'
      x-internal: true
      description: These are internal details of the void authorization response.
    voidAuthorizationsRequest:
      title: voidAuthorizationsRequest
      x-stoplight:
        id: a7462a149ad5c
      type: object
      x-internal: true
      description: These are internal details to be passed in the void authorization request.
      properties:
        merchantRefNum:
          type: string
          maxLength: 255
          description: This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.
          example: 602c96f8-8c7a-4d1d-9d69-008b142e4abc
        amount:
          type: number
          maximum: 99999999999
          description: 'This is the amount of the request, in minor units. For example, to process US $10.99, this value should be 1099. See [Currency Codes](https://developer.paysafe.com/en/support/reference-information/codes/#currency-codes).'
      required:
        - merchantRefNum
        - amount
    verifyThatTheServiceIsAccessible:
      title: verifyThatTheServiceIsAccessible
      x-stoplight:
        id: sk799vjpckae9
      type: object
      x-internal: true
      properties:
        status:
          type: string
          example: READY
          description: This is the status of the service.
      required:
        - status
    withdrawalConfig:
      title: withdrawalConfig
      x-stoplight:
        id: 7bv4s96hmlv5r
      type: object
      description: |
        Map of cardBrand and card type for withdrawal config.

        Possible Values for the CardBrand are:
          - VI - Visa

          - MC - MasterCard

          - DI - Discover

          - AM - American Express

          - DC - Diners Club

          - VE - Visa Electron

          - MD - Maestro
          
        Possible values for the CardType are:

          - CREDIT
          
          - DEBIT
          
          - BOTH
          
          - PREPAID
          
          - DEFERREDDEBIT
          
      properties:
        VI:
          type: string
          enum:
            - CREDIT
            - DEBIT
            - BOTH
            - PREPAID
            - DEFERREDDEBIT
        MC:
          type: string
          enum:
            - CREDIT
            - DEBIT
            - BOTH
            - PREPAID
            - DEFERREDDEBIT
        DI:
          type: string
          enum:
            - CREDIT
            - DEBIT
            - BOTH
            - PREPAID
            - DEFERREDDEBIT
        AM:
          type: string
          enum:
            - CREDIT
            - DEBIT
            - BOTH
            - PREPAID
            - DEFERREDDEBI
        DC:
          type: string
          enum:
            - CREDIT
            - DEBIT
            - BOTH
            - PREPAID
            - DEFERREDDEBIT
        VE:
          type: string
          enum:
            - CREDIT
            - DEBIT
            - BOTH
            - PREPAID
            - DEFERREDDEBIT
        MD:
          type: string
          enum:
            - CREDIT
            - DEBIT
            - BOTH
            - PREPAID
            - DEFERREDDEBIT
      x-internal: true
  securitySchemes:
    httpBasic:
      type: http
      scheme: basic
  requestBodies: {}
security:
  - httpBasic: []
tags:
  - name: Verify That the Service Is Accessible
  - name: Payment Methods
  - name: Payment Handles
  - name: Verifications
  - name: Payments
  - name: Void Authorizations
  - name: Settlements
  - name: Refunds
  - name: Standalone Credits
  - name: Original Credits
  - name: Customers
  - name: Customer Payment Handles
  - name: Customer Addresses
  - name: Customer Single-Use Tokens
  - name: Mandate
  - name: Sightline Registration
  - name: Vippreferred Registration
  - name: Get Crypto Rates
  - name: Paysafecash Store Locator
  - name: Get Balance
