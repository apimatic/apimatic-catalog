openapi: 3.0.0
x-stoplight:
  id: f9iuve95agxwk
info:
  title: Paysafe Card Payments API
  description:
    $ref: ../docs/PaysafeCardPaymentsAPI.md
  contact:
    name: Paysafe
    url: 'https://developer.paysafe.com'
    email: info@paysafe.com
  version: '1.0'
servers:
  - url: 'https://api.test.paysafe.com/cardpayments'
    variables: {}
paths:
  /monitor:
    get:
      summary: Verify That the Service Is Accessible
      description: This call returns a status of READY if the API is available.
      operationId: verify-that-the-service-is-accessible
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/monitorResponse'
      deprecated: false
      tags:
        - Verify That the Service Is Accessible
  '/v1/accounts/{account_id}/auths':
    post:
      summary: Authorization
      description: |-
        See the examples of an Authorization request below:

        * An Authorization request that will have to be settled later

        * A purchase request, which authorizes and settles the payment in a single request by setting the *settleWithAuth* parameter to *true*

        * An Authorization request using a payment token

        * An Authorization including 3D Secure 2 authentication data

        * A Regular Authorization with ignored airline travel details for AIRLINE merchants only

        * A purchase request, which authorizes and settles the payment in a single request by setting the *settleWithAuth* parameter to *true* for AIRLINE merchants only

        In the case of an Authorization request using a payment token, you can use either of two payment token types:

        * The permanent, reusable payment token that you receive in the response to a Customer Vault [card creation request](https://developer.paysafe.com/en/vault-api/#/operations/create-card)

        * The temporary payment token that you receive in the response to a Customer Vault [mobile single-use token creation request](https://developer.paysafe.com/en/vault-api/#/operations/create-applePay-single-use-token),  [Google Pay single-use token creation request](https://developer.paysafe.com/en/vault-api/#/operations/create-googlePay-single-use-token),or [Apple Pay single-use token creation request](https://developer.paysafe.com/en/payments/vault/api/#/reference/0/apple-pay-single-use-tokens/create-an-apple-pay-single-use-token), or when using the [Paysafe.js SDK](https://developer.paysafe.com/en/api-docs/legacy-products/shopping-carts/client-side-sdks/paysafejs-powered-by-cards-api/tokenize/)
      operationId: authorization
      parameters:
        - name: account_id
          in: path
          description: This is the merchant account number.
          required: true
          style: simple
          schema:
            type: string
            example: '123456789'
        - name: Content-Type
          schema:
            $ref: '#/components/schemas/contentType'
          in: header
          required: true
          description: application/json
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authorizationRequest'
            examples:
              Submit an Authorization:
                value:
                  merchantRefNum: merchant 03.24.17_3
                  amount: 1000
                  settleWithAuth: false
                  dupCheck: false
                  card:
                    cardExpiry:
                      month: 12
                      year: 2021
                    cvv: '123'
                    cardNum: '4111111111111111'
                  billingDetails:
                    zip: M2RG1Y9
                    street: 5050 Southmain Drive
                    state: 'ON'
                    country: CA
                    city: CAMBRIDGE
                  preAuth: true
                  profile:
                    firstName: John
                    lastName: Doe
                    email: AY1@OPTIMAL.COM
                  authentication:
                    exemptionIndicator: LOW_VALUE_EXEMPTION
              Submit an Authorization Including Settlement:
                value:
                  merchantRefNum: merchant 03.24.17_3
                  amount: 1000
                  settleWithAuth: true
                  dupCheck: false
                  card:
                    cardNum: '4111111111111111'
                    cardExpiry:
                      month: 2
                      year: 2019
                    cvv: '123'
                  profile:
                    firstName: Joe
                    lastName: Smith
                    email: Joe.Smith@canada.com
                  billingDetails:
                    street: 100 Queen Street West
                    city: Toronto
                    state: 'ON'
                    country: CA
                    zip: M5H 2N2
                  customerIp: 204.91.0.12
                  description: Video purchase
              Submit an Authorization Using a Payment Token:
                value:
                  merchantRefNum: merchant 03.24.17_3
                  amount: 1000
                  settleWithAuth: false
                  dupCheck: false
                  card:
                    paymentToken: LTEyMzYzMjQ3ODg
                    cvv: '123'
                  keywords:
                    - Repeat Customer
                    - profile
                  customerIp: 204.91.0.12
                  description: Video purchase
              Submit an Authorization Using a transactionIntent:
                value:
                  merchantRefNum: merchant 03.24.17_3
                  amount: 1000
                  settleWithAuth: false
                  dupCheck: false
                  card:
                    cardExpiry:
                      month: 12
                      year: 2021
                    cvv: '123'
                    cardNum: '4111111111111111'
                  billingDetails:
                    zip: M2RG1Y9
                    street: 5050 Southmain Drive
                    state: 'ON'
                    country: CA
                    city: CAMBRIDGE
                  preAuth: true
                  profile:
                    firstName: John
                    lastName: Doe
                    email: AY1@OPTIMAL.COM
                  transactionIntent: CRYPTO_ON_RAMP
              Submit an Authorization with 3D Secure 2 Authentication Data:
                value:
                  merchantRefNum: merchant 03.24.17_3
                  amount: 1000
                  settleWithAuth: false
                  dupCheck: false
                  card:
                    cardNum: '4111111111111111'
                    cardExpiry:
                      month: 2
                      year: 2019
                    cvv: '123'
                  authentication:
                    eci: 5
                    cavv: AAABCIEjYgAAAAAAlCNiENiWiV+=
                    threeDResult: 'Y'
                    threeDSecureVersion: 2.1.0
                    directoryServerTransactionId: a3a721f3-b6fa-4cb5-84ea-c7b5c39890a2
                  profile:
                    firstName: Joe
                    lastName: Smith
                    email: Joe.Smith@canada.com
                  billingDetails:
                    street: 100 Queen Street West
                    city: Toronto
                    state: 'ON'
                    country: CA
                    zip: M5H 2N2
                  customerIp: 204.91.0.12
                  description: Video purchase
              Authorization with ignored airline travel details for AIRLINE merchants only:
                value:
                  merchantRefNum: merchant 03.24.17_3
                  amount: 100000
                  settleWithAuth: false
                  card:
                    cardNum: '4111111111111111'
                    cardExpiry:
                      month: 12
                      year: 2021
                    cvv: '123'
                  profile:
                    firstName: Joe
                    lastName: Smith
                    email: Joe.Smith@canada.com
                  airlineTravelDetails:
                    passengerName: Joe Smith
                    departureDate: '2021-01-26'
                    origin: SXF
                    computerizedReservationSystem: DATS
                    ticket:
                      ticketNumber: '1234567891011'
                      isRestrictedTicket: false
                    customerReferenceNumber: '10987654321'
                    travelAgency:
                      name: MY AGENT
                      code: MYAGENT3
                    tripLegs:
                      leg1:
                        flight:
                          carrierCode: LH
                          flightNumber: '0799'
                        serviceClass: F
                        isStopOverAllowed: true
                        destination: ISL
                        fareBasis: VMAY
                        fare: 10
                        departureDate: '2021-01-26'
                      leg2:
                        flight:
                          carrierCode: TK
                          flightNumber: '1385'
                        serviceClass: F
                        isStopOverAllowed: true
                        destination: SOF
                        fareBasis: VMAY
                        fare: 10
                        departureDate: '2021-01-26'
              Submit an Authorization Including Settlement for AIRLINE merchants only:
                value:
                  merchantRefNum: merchant 03.24.17_3
                  amount: 100000
                  settleWithAuth: true
                  dupCheck: false
                  card:
                    cardNum: '4111111111111111'
                    cardExpiry:
                      month: 12
                      year: 2021
                    cvv: '123'
                  profile:
                    firstName: Joe
                    lastName: Smith
                    email: Joe.Smith@canada.com
                  billingDetails:
                    street: 100 Queen Street West
                    city: Sofia
                    country: BG
                    zip: '1000'
                  customerIp: 204.91.0.12
                  airlineTravelDetails:
                    passengerName: Joe Smith
                    departureDate: '2021-01-26'
                    origin: SXF
                    computerizedReservationSystem: DATS
                    ticket:
                      ticketNumber: '1234567891011'
                      isRestrictedTicket: false
                    customerReferenceNumber: '10987654321'
                    travelAgency:
                      name: MY AGENT
                      code: MYAGENT3
                    tripLegs:
                      leg1:
                        flight:
                          carrierCode: LH
                          flightNumber: '0799'
                        serviceClass: F
                        isStopOverAllowed: true
                        destination: ISL
                        fareBasis: VMAY
                        fare: 10
                        departureDate: '2021-01-26'
                      leg2:
                        flight:
                          carrierCode: TK
                          flightNumber: '1385'
                        serviceClass: F
                        isStopOverAllowed: true
                        destination: SOF
                        fareBasis: VMAY
                        fare: 10
                        departureDate: '2021-01-26'
              Submit an Authorization with Payment Facilitator details:
                value:
                  merchantRefNum: merchant 03.24.17_3
                  amount: 1000
                  settleWithAuth: false
                  dupCheck: false
                  card:
                    cardExpiry:
                      month: 12
                      year: 2021
                    cvv: '123'
                    cardNum: '4111111111111111'
                  billingDetails:
                    zip: M2RG1Y9
                    street: 5050 Southmain Drive
                    state: 'ON'
                    country: CA
                    city: CAMBRIDGE
                  preAuth: true
                  profile:
                    firstName: John
                    lastName: Doe
                    email: AY1@OPTIMAL.COM
                  authentication:
                    exemptionIndicator: LOW_VALUE_EXEMPTION
                  paymentFacilitator:
                    subMerchant:
                      id: '123456789'
                      name: PayFacSubMerchant
                      phone: '478234562331'
                      email: payfac@mail.com
                      url: www.payfac.com
                      address:
                        street: 100 Queen Street West
                        city: London
                        country: GB
                        zip: M5H 2N2 
              Submit an External Authorization:
                value:
                  merchantRefNum: P1234
                  amount: 100
                  profile:
                    firstName: John
                    lastName: Smith
                    email: jsmith@email.com
                    merchantCustomerId: UniqueUserIdInTheSystem
                  billingDetails:
                    street: 100 Queen Street West
                    street2: string
                    city: Toronto
                    state: 'ON'
                    country: CA
                    zip: M5H 2N2
                    phone: '555'
                  card:
                    cardNum: '4111111111111111'
                    type: VI
                    lastDigits: '1111'
                    cardExpiry:
                      month: 12
                      year: 2030
                  settleWithExternalAuth: true
                  externalAuthDetails:
                    txnDateTime: '2023-07-04T05:50:37Z'
                    cardSchemeTransactionId: AGZZ4437466470
                    authCode: '288661'
                    stan: '753159'
                    cvvVerification: MATCH
                  airlineTravelDetails:
                    passengerNameRecord: ABCDE12345
                    passengerName: string
                    departureDate: 2030-01-26
                    origin: str
                    computerizedReservationSystem: STRT
                    additionalBookingReference: string
                    totalFare: 0
                    totalFee: 0
                    totalTaxes: 0
                    ticket:
                      ticketNumber: string
                      isRestrictedTicket: true
                      cityOfTicketIssuing: string
                      ticketDeliveryMethod: E_TICKET
                      isAgencyCard: true
                      ticketIssueDate: 2030-01-26
                      ticketPrice: 0
                      numberOfPax: 10
                    passengers:
                      passenger1:
                        ticketNumber: string
                        firstName: string
                        lastName: string
                        phoneNumber: string
                        passengerCode: INF
                        gender: M
                      passenger2:
                        ticketNumber: string
                        firstName: string
                        lastName: string
                        phoneNumber: string
                        passengerCode: INF
                        gender: M
                    customerReferenceNumber: string
                    travelAgency:
                      code: string
                      name: string
                      agencyAddress:
                        street: string
                        zip: string
                        country: BG
                    tripLegs:
                      leg1:
                        flight:
                          carrierCode: st
                          flightNumber: ADASS
                          airlineName: string
                          airlineIcaoCode: DLH
                        serviceClass: F
                        serviceClassFee: 0
                        isStopOverAllowed: true
                        departureAirport: FRA
                        destination: YUL
                        fareBasis: string
                        fare: 0
                        departureDate: '2030-01-26'
                        departureTime: '2030-01-26T10:32:28Z'
                        arrivalTime: '2030-01-26T10:32:28Z'
                        conjunctionTicket: string
                        couponNumber: string
                        notation: string
                        taxes: 0
              Submit an Authorization Including Settlement for CRUISE LINE merchants only:
                value:
                  merchantRefNum: merchant 03.24.17_3
                  amount: 100000
                  settleWithAuth: true
                  dupCheck: false
                  card:
                    cardNum: '4111111111111111'
                    cardExpiry:
                      month: 12
                      year: 2021
                    cvv: '123'
                  profile:
                    firstName: Joe
                    lastName: Smith
                    email: Joe.Smith@canada.com
                  billingDetails:
                    street: 100 Queen Street West
                    city: Sofia
                    country: BG
                    zip: '1000'
                  customerIp: 204.91.0.12
                  cruiselineTravelDetails:
                    passengerName: Joe Smith
                    departureDate: '2023-12-15'
                    originCity: Barbados
                    ticket:
                      ticketNumber: '1234567891011'
                      isRestrictedTicket: false
                    tripLegs:
                      leg1:
                        serviceClass: F
                        departureCity: BDS
                        destinationCity: DOM
                        fare: 10
                        departureDate: '2023-12-15'
                      leg2:
                        serviceClass: F
                        departureCity: DOM
                        destinationCity: BDS
                        fare: 10
                        departureDate: '2023-12-18'
              Submit an Authorization Including Settlement for Lodging details merchants only:
                value:
                  merchantRefNum: merchant 03.24.17_3
                  amount: 100000
                  settleWithAuth: true
                  dupCheck: false
                  card:
                    cardNum: '4111111111111111'
                    cardExpiry:
                      month: 12
                      year: 2021
                    cvv: '123'
                  profile:
                    firstName: Joe
                    lastName: Smith
                    email: Joe.Smith@canada.com
                  billingDetails:
                    street: 100 Queen Street West
                    city: Sofia
                    country: BG
                    zip: '1000'
                  customerIp: 204.91.0.12
                  lodgingDetails:
                    hotelFolioNumber: Customer Folio Number
                    checkInDate: '2023-12-15'
                    checkOutDate: '2023-12-20'
                    customerServicePhone: '8311234567'
                    propertyLocalPhone: '8311234567'
                    extraCharges:
                      - RESTAURANT
                    roomRate: 200
                    programCode: LODGING
                    numberOfNights: 5
                    isFireSafetyActCompliant: true
              Submit an Authorization with network token:
                value:
                  merchantRefNum: merchant 03.24.17_3
                  amount: 1000
                  settleWithAuth: false
                  dupCheck: false
                  card:
                    tokenType: NETWORK_TOKEN
                    networkToken:
                      token: '4111111111111111'
                      cryptogram: AAUAUSAEHSAOUTAOSUAOHEA
                      expiry:
                        month: 12
                        year: 2045
                  billingDetails:
                    zip: M2RG1Y9
                    street: 5050 Southmain Drive
                    state: 'ON'
                    country: CA
                    city: CAMBRIDGE
                  preAuth: true
                  profile:
                    firstName: John
                    lastName: Doe
                    email: AY1@OPTIMAL.COM
                  authentication:
                    exemptionIndicator: LOW_VALUE_EXEMPTION
              Submit an Authorization Including Settlement for Car Rental details merchants only:
                value:
                  merchantRefNum: merchant 03.24.17_3
                  amount: 100000
                  settleWithAuth: true
                  dupCheck: false
                  card:
                    cardNum: '4111111111111111'
                    cardExpiry:
                      month: 12
                      year: 2021
                    cvv: '123'
                  profile:
                    firstName: Joe
                    lastName: Smith
                    email: Joe.Smith@canada.com
                  billingDetails:
                    street: 100 Queen Street West
                    city: Sofia
                    country: BG
                    zip: '1000'
                  customerIp: 204.91.0.12
                  carRentalDetails:
                    rentalAgreementNumber: '123456789'
                    renterName: Renter Name
                    noShow: true
                    extraCharges:
                      - GASOLINE
                    customerServicePhone: '8311234567'
                    returnDetails:
                      date: '2023-12-20'
                      location: Location
                      country: US
                      city: New York
                      state: NWY
                    pickupDetails:
                      date: '2023-12-20'
                      location: Rental Agency
                      country: US
                      city: New York
                      state: NWY
                    vehicleClass: REGULAR
              Submit an Authorization with Acquirer Data:
                value:
                  merchantRefNum: merchant 03.24.17_3
                  amount: 1000
                  settleWithAuth: false
                  dupCheck: false
                  card:
                    cardExpiry:
                      month: 12
                      year: 2021
                    cvv: '123'
                    cardNum: '4111111111111111'
                  billingDetails:
                    zip: M2RG1Y9
                    street: 5050 Southmain Drive
                    state: 'ON'
                    country: CA
                    city: CAMBRIDGE
                  profile:
                    firstName: John
                    lastName: Doe
                    email: AY1@OPTIMAL.COM
                  acquirerData:
                    code: VAN
                    discretionaryData:
                      field1: 'TXN101212'
                      field2: '999888'
                      field3: '123456'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authorization'
              examples:
                Submit an Authorization:
                  value:
                    id: 39152e1d-ba8b-4625-822c-7e9aa7f6e258
                    merchantRefNum: merchant 03.24.17_3
                    txnTime: '2021-11-11T14:59:16Z'
                    status: COMPLETED
                    amount: 1000
                    settleWithAuth: false
                    availableToSettle: 1000
                    card:
                      type: VI
                      lastDigits: '1111'
                      cardExpiry:
                        month: 12
                        year: 2021
                    authentication:
                      exemptionIndicator: LOW_VALUE_EXEMPTION
                    authCode: '143123'
                    profile:
                      firstName: John
                      lastName: Doe
                      email: AY1@OPTIMAL.COM
                    billingDetails:
                      street: 5050 Southmain Drive
                      city: CAMBRIDGE
                      state: 'ON'
                      country: CA
                      zip: M2RG1Y9
                    merchantDescriptor:
                      dynamicDescriptor: NBX*LABurger
                      phone: '8984544545'
                    visaAdditionalAuthData: {}
                    currencyCode: USD
                    avsResponse: UNKNOWN
                    cvvVerification: MATCH
                    links:
                      - rel: self
                        href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/auths/39152e1d-ba8b-4625-822c-7e9aa7f6e258'
                Submit an Authorization Including Settlement:
                  value:
                    id: 7573f618-2f63-45aa-ae96-8412206ca403
                    merchantRefNum: merchant 03.24.17_3
                    txnTime: '2017-03-24T18:28:28Z'
                    status: COMPLETED
                    amount: 1000
                    settleWithAuth: true
                    availableToSettle: 0
                    card:
                      type: VI
                      lastDigits: '1111'
                      cardExpiry:
                        month: 2
                        year: 2019
                    authCode: '180796'
                    profile:
                      firstName: Joe
                      lastName: Smith
                      email: Joe.Smith@canada.com
                    billingDetails:
                      street: 100 Queen Street West
                      city: Toronto
                      state: 'ON'
                      country: CA
                      zip: M5H2N2
                    customerIp: 204.91.0.12
                    description: Video purchase
                    currencyCode: CAD
                    avsResponse: MATCH
                    cvvVerification: MATCH
                    settlements:
                      - links:
                          - rel: self
                            href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/settlements/7573f618-2f63-45aa-ae96-8412206ca403'
                        id: 994f621d-f692-4282-9b2f-db3ea14c93a7
                        merchantRefNum: merchant ABC-555666
                        txnTime: '2016-09-29T19:29:34Z'
                        status: PENDING
                        amount: 15098
                        availableToRefund: 15098
                        gatewayReconciliationId: 12345678901
                    links:
                      - rel: self
                        href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/auths/7573f618-2f63-45aa-ae96-8412206ca403'
                      - rel: settlement
                        href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/settlements/7573f618-2f63-45aa-ae96-8412206ca403'
                Submit an Authorization Using a Payment Token:
                  value:
                    id: 7573f618-2f63-45aa-ae96-8412206ca403
                    merchantRefNum: merchant 03.24.17_3
                    txnTime: '2017-03-24T18:28:28Z'
                    status: COMPLETED
                    amount: 1000
                    settleWithAuth: false
                    availableToSettle: 1000
                    card:
                      type: VI
                      lastDigits: '1111'
                      cardExpiry:
                        month: 2
                        year: 2019
                    authCode: '180796'
                    profile:
                      firstName: Joe
                      lastName: Smith
                      email: Joe.Smith@canada.com
                    billingDetails:
                      street: 100 Queen Street West
                      city: Toronto
                      state: 'ON'
                      country: CA
                      zip: M5H2N2
                    customerIp: 204.91.0.12
                    keywords:
                      - REPEAT CUSTOMER
                      - PROFILE
                    description: Video purchase
                    currencyCode: CAD
                    avsResponse: MATCH
                    cvvVerification: MATCH
                    links:
                      - rel: self
                        href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/auths/7573f618-2f63-45aa-ae96-8412206ca403'
                Submit an Authorization Using a transactionIntent:
                  value:
                    id: 39152e1d-ba8b-4625-822c-7e9aa7f6e258
                    merchantRefNum: merchant 03.24.17_3
                    txnTime: '2021-11-11T14:59:16Z'
                    status: COMPLETED
                    amount: 1000
                    settleWithAuth: false
                    availableToSettle: 1000
                    card:
                      type: VI
                      lastDigits: '1111'
                      cardExpiry:
                        month: 12
                        year: 2021
                    authentication:
                      exemptionIndicator: LOW_VALUE_EXEMPTION
                    authCode: '143123'
                    profile:
                      firstName: John
                      lastName: Doe
                      email: AY1@OPTIMAL.COM
                    billingDetails:
                      street: 5050 Southmain Drive
                      city: CAMBRIDGE
                      state: 'ON'
                      country: CA
                      zip: M2RG1Y9
                    merchantDescriptor:
                      dynamicDescriptor: NBX*LABurger
                      phone: '8984544545'
                    visaAdditionalAuthData: {}
                    currencyCode: USD
                    avsResponse: UNKNOWN
                    cvvVerification: MATCH
                    transactionIntent: CRYPTO_ON_RAMP
                    links:
                      - rel: self
                        href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/settlements/7573f618-2f63-45aa-ae96-8412206ca403'
                Submit an Authorization with 3D Secure 2 Authentication Data:
                  value:
                    id: 7573f618-2f63-45aa-ae96-8412206ca403
                    merchantRefNum: merchant 03.24.17_3
                    txnTime: '2017-03-24T18:28:28Z'
                    status: COMPLETED
                    amount: 1000
                    settleWithAuth: false
                    availableToSettle: 1000
                    card:
                      type: VI
                      lastDigits: '1111'
                      cardExpiry:
                        month: 2
                        year: 2019
                    authentication:
                      eci: 5
                      cavv: AAABCIEjYgAAAAAAlCNiENiWiV+=
                      threeDResult: 'Y'
                      threeDSecureVersion: 2.1.0
                      directoryServerTransactionId: a3a721f3-b6fa-4cb5-84ea-c7b5c39890a2
                    authCode: '180796'
                    profile:
                      firstName: Joe
                      lastName: Smith
                      email: Joe.Smith@canada.com
                    billingDetails:
                      street: 100 Queen Street West
                      city: Toronto
                      state: 'ON'
                      country: CA
                      zip: M5H2N2
                    customerIp: 204.91.0.12
                    description: Video purchase
                    currencyCode: CAD
                    avsResponse: MATCH
                    cvvVerification: MATCH
                    links:
                      - rel: self
                        href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/auths/7573f618-2f63-45aa-ae96-8412206ca403'
                Authorization with ignored airline travel details for AIRLINE merchants only:
                  value:
                    id: 6de3404d-6a32-472c-8470-ae79e8c8246b
                    merchantRefNum: merchant 03.24.17_3
                    txnTime: '2019-12-03T09:25:36Z'
                    status: COMPLETED
                    amount: 100000
                    settleWithAuth: false
                    card:
                      type: VI
                      lastDigits: '1111'
                      cardExpiry:
                        month: 12
                        year: 2021
                    authCode: '100945'
                    profile:
                      firstName: Joe
                      lastName: Smith
                      email: Joe.Smith@canada.com
                    currencyCode: EUR
                Submit an Authorization with Payment Facilitator details:
                  value:
                    id: 39152e1d-ba8b-4625-822c-7e9aa7f6e258
                    merchantRefNum: merchant 03.24.17_3
                    txnTime: '2021-11-11T14:59:16Z'
                    status: COMPLETED
                    amount: 1000
                    settleWithAuth: false
                    availableToSettle: 1000
                    card:
                      type: VI
                      lastDigits: '1111'
                      cardExpiry:
                        month: 12
                        year: 2021
                    authentication:
                      exemptionIndicator: LOW_VALUE_EXEMPTION
                    authCode: '143123'
                    profile:
                      firstName: John
                      lastName: Doe
                      email: AY1@OPTIMAL.COM
                    billingDetails:
                      street: 5050 Southmain Drive
                      city: CAMBRIDGE
                      state: 'ON'
                      country: CA
                      zip: M2RG1Y9
                    merchantDescriptor:
                      dynamicDescriptor: NBX*LABurger
                      phone: '8984544545'
                    visaAdditionalAuthData: {}
                    currencyCode: USD
                    avsResponse: UNKNOWN
                    cvvVerification: MATCH
                    paymentFacilitator:
                      subMerchant:
                        id: '123456789'
                        name: PayFacSubMerchant
                        phone: '478234562331'
                        email: payfac@mail.com
                        url: www.payfac.com
                        address:
                          street: 100 Queen Street West
                          city: London
                          country: GB
                          zip: M5H 2N2 
                Submit an Authorization Including Settlement for AIRLINE merchants only:
                  value:
                    id: 6de3404d-6a32-472c-8470-ae79e8c8246b
                    merchantRefNum: merchant 03.24.17_3
                    txnTime: '2019-12-03T09:25:36Z'
                    status: COMPLETED
                    amount: 100000
                    settleWithAuth: true
                    preAuth: false
                    availableToSettle: 0
                    card:
                      type: VI
                      lastDigits: '1111'
                      cardExpiry:
                        month: 12
                        year: 2021
                    authCode: '100945'
                    profile:
                      firstName: Joe
                      lastName: Smith
                      email: Joe.Smith@canada.com
                    billingDetails:
                      street: 100 Queen Street West
                      city: Sofia
                      country: BG
                      zip: '1000'
                    customerIp: 204.91.0.12
                    currencyCode: EUR
                    settlements:
                      - id: 6de3404d-6a32-472c-8470-ae79e8c8246b
                        merchantRefNum: merchant 03.24.17_3
                        txnTime: '2019-12-03T09:25:36Z'
                        status: PENDING
                        amount: 100000
                        availableToRefund: 100000
                        links:
                          - rel: self
                            href: 'https://api.qa.netbanx.com/cardpayments/v1/accounts/1012537630/settlements/6de3404d-6a32-472c-8470-ae79e8c8246b'
                        airlineTravelDetails:
                          passengerName: Joe Smith
                          departureDate: '2021-01-26'
                          origin: SXF
                          computerizedReservationSystem: DATS
                          ticket:
                            ticketNumber: 1234567891011
                            isRestrictedTicket: false
                          customerReferenceNumber: 10987654321
                          travelAgency:
                            name: MY AGENT
                            code: MYAGENT347
                          tripLegs:
                            leg1:
                              flight:
                                carrierCode: LH
                                flightNumber: '0799'
                              serviceClass: F
                              isStopOverAllowed: 'true'
                              destination: ISL
                              fareBasis: VMAY
                              fare: 10
                              departureDate: '2021-01-26'
                            leg2:
                              flight:
                                carrierCode: TK
                                flightNumber: '1385'
                              serviceClass: F
                              isStopOverAllowed: 'true'
                              destination: SOF
                              fareBasis: VMAY
                              fare: 10
                              departureDate: '2021-01-26'
                    links:
                      - rel: settlement
                        href: 'https://api.qa.netbanx.com/cardpayments/v1/accounts/1012537630/settlements/6de3404d-6a32-472c-8470-ae79e8c8246b'
                      - rel: self
                        href: 'https://api.qa.netbanx.com/cardpayments/v1/accounts/1012537630/auths/6de3404d-6a32-472c-8470-ae79e8c8246b'
                Submit an Authorization with network token:
                  value:
                    id: 39152e1d-ba8b-4625-822c-7e9aa7f6e258
                    merchantRefNum: merchant 03.24.17_3
                    txnTime: '2021-11-11T14:59:16Z'
                    status: COMPLETED
                    amount: 1000
                    settleWithAuth: false
                    availableToSettle: 1000
                    card:
                      type: VI
                      lastDigits: '1111'
                      cardExpiry:
                        month: 12
                        year: 2021
                      tokenType: NETWORK_TOKEN
                      networkToken:
                        lastDigits: '1111'
                        expiry:
                          month: 12
                          year: 2045
                    authentication:
                      exemptionIndicator: LOW_VALUE_EXEMPTION
                    authCode: '143123'
                    profile:
                      firstName: John
                      lastName: Doe
                      email: AY1@OPTIMAL.COM
                    billingDetails:
                      street: 5050 Southmain Drive
                      city: CAMBRIDGE
                      state: 'ON'
                      country: CA
                      zip: M2RG1Y9
                    merchantDescriptor:
                      dynamicDescriptor: NBX*LABurger
                      phone: '8984544545'
                    visaAdditionalAuthData: {}
                    currencyCode: USD
                    avsResponse: UNKNOWN
                    cvvVerification: MATCH
                    links:
                      - rel: self
                        href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/auths/39152e1d-ba8b-4625-822c-7e9aa7f6e258'
                Submit an Authorization with Acquirer Data:
                  value:
                    id: 39152e1d-ba8b-4625-822c-7e9aa7f6e258
                    merchantRefNum: merchant 03.24.17_3
                    txnTime: '2021-11-11T14:59:16Z'
                    status: COMPLETED
                    amount: 1000
                    settleWithAuth: false
                    availableToSettle: 1000
                    card:
                      type: VI
                      lastDigits: '1111'
                      cardExpiry:
                        month: 12
                        year: 2021
                    authCode: '143123'
                    profile:
                      firstName: John
                      lastName: Doe
                      email: AY1@OPTIMAL.COM
                    billingDetails:
                      street: 5050 Southmain Drive
                      city: CAMBRIDGE
                      state: 'ON'
                      country: CA
                      zip: M2RG1Y9
                    merchantDescriptor:
                      dynamicDescriptor: NBX*LABurger
                      phone: '8984544545'
                    visaAdditionalAuthData: { }
                    currencyCode: USD
                    avsResponse: UNKNOWN
                    cvvVerification: MATCH
                    acquirerData:
                      code: VAN
                      discretionaryData:
                        field1: 'TXN101212'
                        field2: '999888'
                        field3: '123456'
                    links:
                      - rel: self
                        href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/auths/39152e1d-ba8b-4625-822c-7e9aa7f6e258'
      deprecated: false
      tags:
        - Authorizations
    get:
      summary: Get Authorization Using Merchant Reference Number
      description: See how to look up an Authorization request using the merchant reference number used in the original request in the examples below.
      operationId: get-authorization-using-merchant-reference-number
      parameters:
        - name: account_id
          in: path
          description: This is the merchant account number.
          required: true
          style: simple
          schema:
            type: string
            example: '123456789'
        - name: merchantRefNum
          in: query
          description: This is the merchant reference number created by the merchant and submitted as part of the request.
          schema:
            type: string
            example: merchant-ABC-123
        - name: limit
          in: query
          description: This is the total number of records to return. Default value is 10. Max value is 50.
          schema:
            type: string
            example: '2'
        - name: offset
          in: query
          description: 'This is the starting position, where 0 is the first record. Default = 0.'
          schema:
            type: string
            example: '0'
        - name: startDate
          in: query
          description: This is the start date in UTC. Default = 30 days before the *endDate*.
          schema:
            type: string
            example: '2017-01-14T15:12:18Z'
        - name: endDate
          in: query
          description: This is the end date in UTC. Default = current date and time.
          schema:
            type: string
            example: '2017-04-04T15:12:18Z'
      responses:
        '200':
          description: ''
          headers: { }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAuthByMerchantRefNumberResponse'
      deprecated: false
      tags:
        - Authorizations
  '/v1/accounts/{account_id}/auths/{auth_id}':
    put:
      summary: Complete an Authorization
      description: See how to complete an Authorization request with the status of Held.
      operationId: complete-an-authorization
      parameters:
        - name: account_id
          in: path
          description: This is the merchant account number.
          required: true
          style: simple
          schema:
            type: string
            example: '123456789'
        - name: auth_id
          in: path
          description: This is the Authorization ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: 5f2164fa-7141-40a9-b065-1426243970f1
        - name: Content-Type
          in: header
          style: simple
          required: true
          schema:
            $ref: '#/components/schemas/contentType'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/completeAuthorizationRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/completeAuthorizationResponse'
      deprecated: false
      tags:
        - Authorizations
    get:
      summary: Get Authorization
      description: See how to look up an Authorization request using the ID returned in the response to the original request.
      operationId: get-authorization
      parameters:
        - name: account_id
          in: path
          description: This is the merchant account number.
          required: true
          style: simple
          schema:
            type: string
            example: '123456789'
        - name: auth_id
          in: path
          description: This is the Authorization ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: 5f2164fa-7141-40a9-b065-1426243970f1
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authorization'
              example:
                id: 39152e1d-ba8b-4625-822c-7e9aa7f6e258
                merchantRefNum: merchant 03.24.17_3
                txnTime: '2021-11-11T14:59:16Z'
                status: COMPLETED
                amount: 1000
                settleWithAuth: false
                availableToSettle: 1000
                card:
                  type: VI
                  lastDigits: '1111'
                  cardExpiry:
                    month: 12
                    year: 2021
                authentication:
                  exemptionIndicator: LOW_VALUE_EXEMPTION
                authCode: '143123'
                profile:
                  firstName: John
                  lastName: Doe
                  email: AY1@OPTIMAL.COM
                billingDetails:
                  street: 5050 Southmain Drive
                  city: CAMBRIDGE
                  state: 'ON'
                  country: CA
                  zip: M2RG1Y9
                merchantDescriptor:
                  dynamicDescriptor: NBX*LABurger
                  phone: '8984544545'
                visaAdditionalAuthData: {}
                currencyCode: USD
                avsResponse: UNKNOWN
                cvvVerification: MATCH
                paymentFacilitator:
                  subMerchant:
                    id: '123456789'
                    name: PayFacSubMerchant
                    phone: '478234562331'
                    email: payfac@mail.com
                    url: www.payfac.com
                    address:
                      street: 100 Queen Street West
                      city: London
                      country: GB
                      zip: M5H 2N2 
                links:
                  - rel: self
                    href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/auths/39152e1d-ba8b-4625-822c-7e9aa7f6e258'
      deprecated: false
      tags:
        - Authorizations
  '/v1/accounts/{account_id}/auths/{auth_id}/voidauths':
    post:
      summary: Void an Authorization
      description: See examples how to submit a Void Authorization request below. You can void an Authorization **only if** it has not yet been settled.
      operationId: void-an-authorization
      parameters:
        - name: account_id
          in: path
          description: This is the merchant account number.
          required: true
          style: simple
          schema:
            type: string
            example: '123456789'
        - name: auth_id
          in: path
          description: This is the Authorization ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: ef8e4da6-68c1-40fb-ba43-d735148b1a7f
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/contentType'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/voidAuthorizationRequest'
            example:
              merchantRefNum: merchant ABC-123-voidauths
              amount: 898
              dupCheck: true
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/voidAuthorization'
              example:
                id: d1fb46ee-2736-4ef5-a724-f263ace75373
                merchantRefNum: merchant ABC-123-voidauths
                amount: 898
                dupCheck: true
                txnTime: '2017-02-14T15:12:18Z'
                status: COMPLETED
                links:
                  - rel: self
                    href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/voidauths/d1fb46ee-2736-4ef5-a724-f263ace75373'
      deprecated: false
      tags:
        - Void Authorizations
  '/v1/accounts/{account_id}/voidauths/{void_auth_id}':
    get:
      summary: Get Void Authorization
      description: See how to look up a Void Authorization request using the ID returned in the response to the original request.
      operationId: get-void-authorization
      parameters:
        - name: account_id
          in: path
          description: This is the merchant account number.
          required: true
          style: simple
          schema:
            type: string
            example: '123456789'
        - name: void_auth_id
          in: path
          description: This is the ID returned in the response to the Void Authorization request.
          required: true
          style: simple
          schema:
            type: string
            example: d1fb46ee-2736-4ef5-a724-f263ace75373e
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/voidAuthorization'
              example:
                id: d1fb46ee-2736-4ef5-a724-f263ace75373
                merchantRefNum: merchant ABC-123-voidauths
                amount: 898
                dupCheck: true
                txnTime: '2017-02-14T15:12:18Z'
                status: COMPLETED
                links:
                  - rel: self
                    href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/voidauths/d1fb46ee-2736-4ef5-a724-f263ace75373'
      deprecated: false
      tags:
        - Void Authorizations
  '/v1/accounts/{account_id}/voidauths':
    get:
      summary: Get Void Authorization Using Merchant Reference Number
      description: See how to look up a Void Authorization request using the merchant reference number used in the original request.
      operationId: get-void-authorization-using-merchant-reference-number
      parameters:
        - name: account_id
          in: path
          description: This is the merchant account number.
          required: true
          style: simple
          schema:
            type: string
            example: '123456789'
        - name: merchantRefNum
          in: query
          description: This is the merchant reference number created by the merchant and submitted as part of the request.
          schema:
            type: string
            example: merchant ABC-123-voidauths
        - name: limit
          in: query
          description: This is the total number of records to return. Default value is 10. Max value is 50.
          schema:
            type: string
            example: '2'
        - name: offset
          in: query
          description: 'This is the starting position, where 0 is the first record. Default = 0.'
          schema:
            type: string
            example: '0'
        - name: startDate
          in: query
          description: This is the start date in UTC. Default = 30 days before the *endDate*.
          schema:
            type: string
            example: '2017-01-14T15:12:18Z'
        - name: endDate
          in: query
          description: This is the end date in UTC. Default = current date and time.
          schema:
            type: string
            example: '2017-04-04T15:12:18Z'
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getVoidAuthByMerchantRefNumberResponse'
      deprecated: false
      tags:
        - Void Authorizations
  '/v1/accounts/{account_id}/auths/{auth_id}/settlements':
    post:
      summary: Settlement
      description: |-
        See the examples of a Settlement request below:

        * A regular Settlement, where the initial request was an Authorization that now has to be settled

        * A partial Settlement, where only part of the initial Authorization is settled, leaving the balance to be settled later

        * A Settlement that is split into multiple merchant accounts, for merchant accounts that are configured to do so

        * A Regular Settlement for the authorization with the full airline travel details for the AIRLINE Merchants
      operationId: settlement
      parameters:
        - name: account_id
          in: path
          description: This is the merchant account number.
          required: true
          style: simple
          schema:
            type: string
            example: '123456789'
        - name: auth_id
          in: path
          description: This is the ID returned in the response to the Authorization request.
          required: true
          style: simple
          schema:
            type: string
            example: e3058030-1a0c-4b8a-b7f7-ceb79157df3f
        - name: Content-Type
          schema:
            $ref: '#/components/schemas/contentType'
          in: header
          required: true
          description: application/json
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settlementRequest'
            examples:
              Process a Settlement:
                value:
                  merchantRefNum: merchantRef_2016_04_11_05
                  dupCheck: true
              Process a Partial Settlement:
                value:
                  merchantRefNum: merchantRef_2016_04_11_05
                  amount: 2250
                  dupCheck: true
              Process a Settlement with Split Payouts:
                value:
                  merchantRefNum: merchantRef_2016_04_11_05
                  dupCheck: true
                  splitpay:
                    - linkedAccount: '123124124'
                      amount: 500
              Settlement for AIRLINE Merchants:
                value:
                  merchantRefNum: merchantRef_2016_04_11_05
                  dupCheck: true
                  airlineTravelDetails:
                    passengerName: Joe Smith
                    departureDate: '2021-01-26'
                    origin: SXF
                    computerizedReservationSystem: DATS
                    ticket:
                      ticketNumber: '1234567891011'
                      isRestrictedTicket: false
                      cityOfTicketIssuing: Porto
                      ticketDeliveryMethod: E_TICKET
                      numberOfPax: 5
                    customerReferenceNumber: '10987654321'
                    travelAgency:
                      code: MY AGENT
                      name: MYAGENT347
                    tripLegs:
                      leg1:
                        flight:
                          carrierCode: LH
                          flightNumber: '0799'
                          airlineName: TestAirlineName
                        serviceClass: F
                        isStopOverAllowed: true
                        destination: ISL
                        fareBasis: VMAY
                        fare: 10
                        departureDate: '2021-01-26'
                        departureAirport: SOF
                      leg2:
                        flight:
                          carrierCode: TK
                          flightNumber: '1385'
                          airlineName: TestAirlineName
                        serviceClass: F
                        isStopOverAllowed: true
                        destination: SOF
                        fareBasis: VMAY
                        fare: 10
                        departureDate: '2021-01-26'
                        departureAirport: SOF
              Settlement for CRUISE LINE Merchants:
                value:
                  merchantRefNum: P1234
                  amount: 100
                  dupCheck: true
                  splitpay:
                    - linkedAccount: '123124124'
                      amount: 505
                  cruiselineTravelDetails:
                    cruiseShipName: Cruise Ship
                    passengerName: John Doe
                    departureDate: '2023-12-15'
                    returnDate: '2023-12-20'
                    country: UС
                    state: CA
                    originCity: Barbados
                    roomRate: 1200
                    travelPackageApplication: CAR_RENTAL_RESERVATION
                    ticket:
                      ticketNumber: string
                      isRestrictedTicket: true
                    passengers:
                      - id: string
                        firstName: string
                        lastName: string
                        phoneNumber: string
                        passengerCode: INF
                        gender: M
                    tripLegs:
                      leg1:
                        serviceClass: string
                        departureCity: BDS
                        destinationCity: BDS
                        fare: 0
                        departureDate: '2014-01-26'
                      leg2:
                        serviceClass: string
                        departureCity: BDS
                        destinationCity: BDS
                        fare: 0
                        departureDate: '2014-01-26'
                      leg3:
                        serviceClass: string
                        departureCity: BDS
                        destinationCity: BDS
                        fare: 0
                        departureDate: '2014-01-26'
                      leg4:
                        serviceClass: string
                        departureCity: BDS
                        destinationCity: BDS
                        fare: 0
                        departureDate: '2014-01-26'
                  gatewayReconciliationId: string
              Settlement for Lodging Details Merchants:
                value:
                  merchantRefNum: P1234
                  amount: 100
                  dupCheck: true
                  splitpay:
                    - linkedAccount: '123124124'
                      amount: 505
                  lodgingDetails:
                    hotelFolioNumber: Customer Folio Number
                    checkInDate: '2023-12-15'
                    checkOutDate: '2023-12-20'
                    customerServicePhone: '8311234567'
                    propertyLocalPhone: '8311234567'
                    extraCharges:
                      - RESTAURANT
                    roomRate: 200
                    programCode: LODGING
                    numberOfNights: 5
                    isFireSafetyActCompliant: true
              Settlement for Car Rental Details Merchants:
                value:
                  merchantRefNum: P1234
                  amount: 100
                  dupCheck: true
                  splitpay:
                    - linkedAccount: '123124124'
                      amount: 505
                  carRentalDetails:
                    rentalAgreementNumber: '123456789'
                    renterName: Renter Name
                    noShow: true
                    extraCharges:
                      - GASOLINE
                    customerServicePhone: '8311234567'
                    returnDetails:
                      date: '2023-12-20'
                      location: Location
                      country: US
                      city: New York
                      state: NWY
                    pickupDetails:
                      date: '2023-12-20'
                      location: Rental Agency
                      country: US
                      city: New York
                      state: NWY
                    vehicleClass: REGULAR
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settlement'
              examples:
                Process a Settlement:
                  value:
                    id: d1fb46ee-2736-4ef5-a724-f263ace75373
                    merchantRefNum: merchantRef_2016_04_11_05
                    amount: 5500
                    availableToRefund: 5500
                    dupCheck: true
                    txnTime: '2017-02-14T15:12:18Z'
                    gatewayReconciliationId: '12345678901'
                    status: COMPLETED
                    links:
                      - rel: self
                        href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/settlements/d1fb46ee-2736-4ef5-a724-f263ace75373'
                Process a Partial Settlement:
                  value:
                    id: d1fb46ee-2736-4ef5-a724-f263ace75373
                    merchantRefNum: merchantRef_2016_04_11_05
                    amount: 2250
                    availableToRefund: 2250
                    dupCheck: true
                    txnTime: '2017-02-14T15:12:18Z'
                    status: COMPLETED
                    links:
                      - rel: self
                        href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/settlements/d1fb46ee-2736-4ef5-a724-f263ace75373'
                Process a Settlement with Split Payouts:
                  value:
                    id: d1fb46ee-2736-4ef5-a724-f263ace75373
                    merchantRefNum: merchantRef_2016_04_11_05
                    amount: 5500
                    availableToRefund: 5500
                    dupCheck: true
                    txnTime: '2017-02-14T15:12:18Z'
                    status: COMPLETED
                    splitpay:
                      - linkedAccount: '123124124'
                        amount: 500
                    links:
                      - rel: self
                        href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/settlements/d1fb46ee-2736-4ef5-a724-f263ace75373'
                Settlement for AIRLINE Merchants:
                  value:
                    id: d1fb46ee-2736-4ef5-a724-f263ace75373
                    merchantRefNum: merchantRef_2019_04_11_05
                    amount: 100000
                    availableToRefund: 100000
                    dupCheck: true
                    txnTime: '2019-12-03T09:25:36Z'
                    status: PENDING
                    airlineTravelDetails:
                      passengerName: Joe Smith
                      departureDate: '2021-01-26'
                      origin: SXF
                      computerizedReservationSystem: DATS
                      ticket:
                        ticketNumber: '1234567891011'
                        isRestrictedTicket: false
                        cityOfTicketIssuing: Porto,
                        ticketDeliveryMethod: E_TICKET
                        numberOfPax: 5
                      customerReferenceNumber: '10987654321'
                      travelAgency:
                        name: MY AGENT
                        code: MYAGENT3
                      tripLegs:
                        leg1:
                          flight:
                            carrierCode: LH
                            flightNumber: '0799'
                            airlineName: TestAirlineName
                          serviceClass: F
                          isStopOverAllowed: true
                          destination: ISL
                          fareBasis: VMAY
                          fare: 10
                          departureDate: '2021-01-26'
                          departureAirport: SOF
                        leg2:
                          flight:
                            carrierCode: TK
                            flightNumber: '1385'
                            airlineName: TestAirlineName
                          serviceClass: F
                          isStopOverAllowed: true
                          destination: SOF
                          fareBasis: VMAY
                          fare: 10
                          departureDate: '2021-01-26'
                          departureAirport: SOF
                    links:
                      - rel: self
                        href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/settlements/d1fb46ee-2736-4ef5-a724-f263ace75373'
      deprecated: false
      tags:
        - Settlements
  '/v1/accounts/{account_id}/settlements/{settlement_id}':
    put:
      summary: Cancel a Settlement
      description: See how to submit a Cancel Settlement request below.
      operationId: cancel-a-settlement
      parameters:
        - name: account_id
          in: path
          description: This is the merchant account number.
          required: true
          style: simple
          schema:
            type: string
            example: '123456789'
        - name: settlement_id
          in: path
          description: This is the ID returned in the response to the Settlement request.
          required: true
          style: simple
          schema:
            type: string
            example: d1fb46ee-2736-4ef5-a724-f263ace75373
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/contentType'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cancelRequest'
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cancelSettlementResponse'
      deprecated: false
      tags:
        - Settlements
    get:
      summary: Get Settlement
      description: See how to look up a Settlement request using the ID returned in the response to the original request below.
      operationId: get-settlement
      parameters:
        - name: account_id
          in: path
          description: This is the merchant account number.
          required: true
          style: simple
          schema:
            type: string
            example: '123456789'
        - name: settlement_id
          in: path
          description: This is the Settlement ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: d1fb46ee-2736-4ef5-a724-f263ace75373
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settlement'
              example:
                id: d1fb46ee-2736-4ef5-a724-f263ace75373
                merchantRefNum: merchantRef_2016_04_11_05
                amount: 5500
                availableToRefund: 5500
                dupCheck: true
                txnTime: '2017-02-14T15:12:18Z'
                gatewayReconciliationId: '12345678901'
                status: COMPLETED
                links:
                  - rel: self
                    href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/settlements/d1fb46ee-2736-4ef5-a724-f263ace75373'
      deprecated: false
      tags:
        - Settlements
  '/v1/accounts/{account_id}/settlements':
    get:
      summary: Get Settlement Using Merchant Reference Number
      description: See how to look up a Settlement using the merchant reference number used in the original request below.
      operationId: get-settlement-using-merchant-reference-number
      parameters:
        - name: account_id
          in: path
          description: This is the merchant account number.
          required: true
          style: simple
          schema:
            type: string
            example: '123456789'
        - name: merchantRefNum
          in: query
          description: This is the merchant reference number created by the merchant and submitted as part of the request.
          schema:
            type: string
            example: merchant-ABC-123
        - name: limit
          in: query
          description: This is the total number of records to return. Default value is 10. Max value is 50.
          schema:
            type: string
            example: '2'
        - name: offset
          in: query
          description: 'This is the starting position, where 0 is the first record. Default = 0.'
          schema:
            type: string
            example: '0'
        - name: startDate
          in: query
          description: This is the start date in UTC. Default = 30 days before the *endDate*.
          schema:
            type: string
            example: '2017-01-14T15:12:18Z'
        - name: endDate
          in: query
          description: This is the end date in UTC. Default = current date and time.
          schema:
            type: string
            example: '2017-04-04T15:12:18Z'
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSettlementByMerchantRefNumberResponse'
      deprecated: false
      tags:
        - Settlements
  '/v1/accounts/{account_id}/settlements/{settlement_id}/refunds':
    post:
      summary: Refund
      description: |-
        See the examples of a Refund request below:

        * A regular Refund

        * A Refund that is split into multiple merchant accounts, for merchant accounts that are configured to do so

        * A refund with automatic [Purchase Return Authorization](/schemas/purchaseReturnAuthorization) for acquireres/processors that support it.
      operationId: refund
      parameters:
        - name: account_id
          in: path
          description: This is the merchant account number.
          required: true
          style: simple
          schema:
            type: string
            example: '123456789'
        - name: settlement_id
          in: path
          description: This is the ID returned in the response to the Settlement request.
          required: true
          style: simple
          schema:
            type: string
            example: 6ddbc05a-ff40-4dc1-b2d3-f200934dfdde
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/contentType'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/refundRequest'
            examples:
              Process a Refund:
                value:
                  merchantRefNum: merchantRef_2016_04_11_05
                  amount: 5500
                  dupCheck: true
              Process a Refund with Split Payouts:
                value:
                  merchantRefNum: merchantRef_2016_04_11_05
                  amount: 5500
                  dupCheck: true
                  splitpay:
                    - linkedAccount: '123124124'
                      amount: 500
              Process a Refund with Purchase Return Authorization:
                value:
                  merchantRefNum: merchantRef_2016_04_11_05
                  amount: 5500
                  dupCheck: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/refund'
              examples:
                Process a Refund:
                  value:
                    merchantRefNum: merchantRef_2016_04_11_05
                    amount: 5500
                    dupCheck: true
                    id: d1fb46ee-2736-4ef5-a724-f263ace75374
                    txnTime: '2017-02-14T15:12:18Z'
                    gatewayReconciliationId: '12345678901'
                    status: COMPLETED
                    links:
                      - rel: self
                        href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/refunds/d1fb46ee-2736-4ef5-a724-f263ace75374'
                Process a Refund with Split Payouts:
                  value:
                    id: d1fb46ee-2736-4ef5-a724-f263ace75374
                    merchantRefNum: merchantRef_2016_04_11_05
                    amount: 5500
                    dupCheck: true
                    txnTime: '2017-02-14T15:12:18Z'
                    status: COMPLETED
                    splitpay:
                      - linkedAccount: '123124124'
                        amount: 500
                    links:
                      - rel: self
                        href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/refunds/d1fb46ee-2736-4ef5-a724-f263ace75374'
                Process a Refund with Purchase Return Authorization:
                  value:
                    id: d1fb46ee-2736-4ef5-a724-f263ace75374
                    merchantRefNum: merchantRef_2016_04_11_05
                    amount: 5500
                    dupCheck: true
                    txnTime: '2017-02-14T15:12:18Z'
                    purchaseReturnAuthorization:
                      id: d1fb46ee-2736-4ef5-a724-f263ace75374
                      merchantRefNum: merchantRef_2016_04_11_05
                      txnTime: '2017-02-14T15:12:18Z'
                      authCode: '120072'
                      amount: 5500
                      currencyCode: USD
                    status: COMPLETED
                    links:
                      - rel: self
                        href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/refunds/d1fb46ee-2736-4ef5-a724-f263ace75374'
      deprecated: false
      tags:
        - Refunds
  '/v1/accounts/{account_id}/refunds/{refund_id}':
    put:
      summary: Cancel a Refund
      description: See how to submit a Cancel Refund request below.
      operationId: cancel-a-refund
      parameters:
        - name: account_id
          in: path
          description: This is the merchant account number.
          required: true
          style: simple
          schema:
            type: string
            example: '123456789'
        - name: refund_id
          in: path
          description: This is the ID returned in the response to the Refund request.
          required: true
          style: simple
          schema:
            type: string
            example: d1fb46ee-2736-4ef5-a724-f263ace75374
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/contentType'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cancelRequest'
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cancelRefundResponse'
      deprecated: false
      tags:
        - Refunds
    get:
      summary: Get Refund
      description: See how to look up a Refund request using the ID returned in the response to the original request below.
      operationId: get-refund
      parameters:
        - name: account_id
          in: path
          description: This is the merchant account number.
          required: true
          style: simple
          schema:
            type: string
            example: '123456789'
        - name: refund_id
          in: path
          description: This is the Refund ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: d1fb46ee-2736-4ef5-a724-f263ace75374
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/refund'
              example:
                merchantRefNum: merchantRef_2016_04_11_05
                amount: 5500
                dupCheck: true
                id: d1fb46ee-2736-4ef5-a724-f263ace75374
                txnTime: '2017-02-14T15:12:18Z'
                gatewayReconciliationId: '12345678901'
                status: COMPLETED
                links:
                  - rel: self
                    href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/refunds/d1fb46ee-2736-4ef5-a724-f263ace75374'
      deprecated: false
      tags:
        - Refunds
  '/v1/accounts/{account_id}/refunds':
    get:
      summary: Get Refund Using Merchant Reference Number
      description: See how to look up a Refund using the merchant reference number used in the original request below.
      operationId: get-refund-using-merchant-reference-number
      parameters:
        - name: account_id
          in: path
          description: This is the merchant account number.
          required: true
          style: simple
          schema:
            type: string
            example: '123456789'
        - name: merchantRefNum
          in: query
          description: This is the merchant reference number created by the merchant and submitted as part of the request.
          schema:
            type: string
            example: merchant-ABC-123
        - name: limit
          in: query
          description: This is the total number of records to return. Default value is 10. Max value is 50.
          schema:
            type: string
            example: '2'
        - name: offset
          in: query
          description: 'This is the starting position, where 0 is the first record. Default = 0.'
          schema:
            type: string
            example: '0'
        - name: startDate
          in: query
          description: This is the start date in UTC. Default = 30 days before the *endDate*.
          schema:
            type: string
            example: '2017-01-14T15:12:18Z'
        - name: endDate
          in: query
          description: This is the end date in UTC. Default = current date and time.
          schema:
            type: string
            example: '2017-04-04T15:12:18Z'
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRefundByMerchantRefNumberResponse'
      deprecated: false
      tags:
        - Refunds
  '/v1/accounts/{account_id}/verifications':
    post:
      summary: Verification
      description: |-
        See below two examples of a Verification request to verify card details:

        * A Verification request using card details

        * A Verification request using a payment token

        In the case of a payment token, you can use either of two payment token types:

        * The permanent, reusable payment token that you receive in the response to a Customer Vault [card creation request](https://developer.paysafe.com/en/vault-api/#/operations/create-card)

        * The temporary payment token that you receive in the response to a Customer Vault [mobile single-use token creation request](https://developer.paysafe.com/en/vault-api/#/operations/create-applePay-single-use-token) or when using the [Paysafe.js SDK](https://developer.paysafe.com/en/api-docs/legacy-products/shopping-carts/client-side-sdks/paysafejs-powered-by-cards-api/tokenize/)

        You **cannot** use [Apple Pay single-use tokens](https://developer.paysafe.com/en/vault-api/#/operations/create-applePay-single-use-token) or [Google Pay single-use tokens](https://developer.paysafe.com/en/vault-api/#/operations/create-googlePay-single-use-token) in Verification requests.

        **Note**<ul><li>If you use a payment token that **does not** have an address associated with it, you must include the *billingDetails* object in this request in order to pass an Address Verification (AVS) check.</li><li>If you use a payment token that **does** have an address associated with it and you include the *billingDetails* object, the address information included in the *billingDetails* object will override the address information associated with the payment token, for this transaction request only.</li><li>If you intend to use the Customer Vault API to [convert a single-use payment token into a permanent payment token](https://developer.paysafe.com/en/vault-api/#/operations/create-profile-single-use-token), you should verify the token using this Card Payments API request before proceeding with the conversion.</li></ul>
      operationId: verification
      parameters:
        - name: account_id
          in: path
          description: This is the merchant account number.
          required: true
          style: simple
          schema:
            type: string
            example: '123456789'
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/contentType'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/verificationRequest'
            examples:
              Submit a Verification:
                value:
                  card:
                    cardNum: '4111111111111111'
                    cardExpiry:
                      month: 12
                      year: 2020
                    cvv: '123'
                  merchantRefNum: merchant ABC-444
                  profile:
                    firstName: John
                    lastName: Smith
                    email: jsmith@email.com
                  billingDetails:
                    street: 100 Queen Street West
                    city: Toronto
                    state: 'ON'
                    country: CA
                    zip: M5H 2N2
                    phone: '555'
                  customerIp: 204.91.0.12
                  dupCheck: true
                  description: This is a Verification transaction.
              Submit a Verification Using a Payment Token:
                value:
                  card:
                    paymentToken: LTEyMzYzMjQ3ODg
                  merchantRefNum: merchant ABC-444
                  customerIp: 204.91.0.12
                  dupCheck: true
                  description: This is a Verification transaction.
              Submit a Verification with Payment Facilitator details:
                value:
                  card:
                    cardNum: '4111111111111111'
                    cardExpiry:
                      month: 12
                      year: 2020
                    cvv: '123'
                  merchantRefNum: merchant ABC-444
                  profile:
                    firstName: John
                    lastName: Smith
                    email: jsmith@email.com
                  billingDetails:
                    street: 100 Queen Street West
                    city: Toronto
                    state: 'ON'
                    country: CA
                    zip: M5H 2N2
                    phone: '555'
                  customerIp: 204.91.0.12
                  dupCheck: true
                  description: This is a Verification transaction with Payment Facilitator details.
                  paymentFacilitator:
                    subMerchant:
                      id: '123456789'
                      name: PayFacSubMerchant
                      phone: '478234562331'
                      email: payfac@mail.com
                      url: www.payfac.com
                      address:
                        street: 100 Queen Street West
                        city: London
                        country: GB
                        zip: M5H 2N2 
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/verification'
              examples:
                Submit a Verification:
                  value:
                    id: e50e19a6-8edd-44ec-abc4-18d0a97d51d8
                    merchantRefNum: merchant ABC-444
                    profile:
                      profile:
                        firstName: John
                        lastName: Smith
                        email: jsmith@email.com
                    billingDetails:
                      billingDetails:
                        street: 100 Queen Street West
                        city: Toronto
                        state: 'ON'
                        country: CA
                        zip: M5H 2N2
                        phone: '555'
                    customerIp: 204.91.0.12
                    dupCheck: true
                    description: This is a Verification transaction.
                    card:
                      type: VI
                      lastDigits: '1111'
                      cardExpiry:
                        month: 12
                        year: 2020
                    authCode: '1234567890'
                    txnTime: '2017-02-14T15:12:18Z'
                    currencyCode: USD
                    avsResponse: MATCH
                    nameVerification: MATCH
                    firstNameVerification: MATCH
                    lastNameVerification: MATCH
                    cvvVerification: MATCH
                    status: COMPLETED
                    links:
                      - rel: self
                        href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/verifications/e50e19a6-8edd-44ec-abc4-18d0a97d51d8'
                Submit a Verification Using a Payment Token:
                  value:
                    id: e50e19a6-8edd-44ec-abc4-18d0a97d51d8
                    merchantRefNum: merchant ABC-444
                    profile:
                      profile:
                        firstName: John
                        lastName: Smith
                        email: jsmith@email.com
                    billingDetails:
                      billingDetails:
                        street: 100 Queen Street West
                        city: Toronto
                        state: 'ON'
                        country: CA
                        zip: M5H 2N2
                        phone: '555'
                    customerIp: 204.91.0.12
                    dupCheck: true
                    description: This is a Verification transaction.
                    card:
                      type: VI
                      lastDigits: '1111'
                      cardExpiry:
                        month: 12
                        year: 2020
                    authCode: '1234567890'
                    txnTime: '2017-02-14T15:12:18Z'
                    currencyCode: USD
                    avsResponse: MATCH
                    cvvVerification: MATCH
                    status: COMPLETED
                    links:
                      - rel: self
                        href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/verifications/e50e19a6-8edd-44ec-abc4-18d0a97d51d8'
                Submit a Verification with Payment Facilitator details:
                  value:
                    id: e50e19a6-8edd-44ec-abc4-18d0a97d51d8
                    merchantRefNum: merchant ABC-444
                    profile:
                      profile:
                        firstName: John
                        lastName: Smith
                        email: jsmith@email.com
                    billingDetails:
                      billingDetails:
                        street: 100 Queen Street West
                        city: Toronto
                        state: 'ON'
                        country: CA
                        zip: M5H 2N2
                        phone: '555'
                    customerIp: 204.91.0.12
                    dupCheck: true
                    description: This is a Verification transaction.
                    card:
                      type: VI
                      lastDigits: '1111'
                      cardExpiry:
                        month: 12
                        year: 2020
                    authCode: '1234567890'
                    txnTime: '2017-02-14T15:12:18Z'
                    currencyCode: USD
                    avsResponse: MATCH
                    nameVerification: MATCH
                    firstNameVerification: MATCH
                    lastNameVerification: MATCH
                    cvvVerification: MATCH
                    status: COMPLETED
                    paymentFacilitator:
                      subMerchant:
                        id: '123456789'
                        name: PayFacSubMerchant
                        phone: '478234562331'
                        email: payfac@mail.com
                        url: www.payfac.com
                        address:
                          street: 100 Queen Street West
                          city: London
                          country: GB
                          zip: M5H 2N2 
      deprecated: false
      tags:
        - Verifications
    get:
      summary: Get Verification Using Merchant Reference Number
      description: See how to look up a Verification request using the merchant reference number used in the original request.
      operationId: get-verification-using-merchant-reference-number
      parameters:
        - name: account_id
          in: path
          description: This is the merchant account number.
          required: true
          style: simple
          schema:
            type: string
            example: '123456789'
        - name: merchantRefNum
          in: query
          description: This is the merchant reference number created by the merchant and submitted as part of the request.
          schema:
            type: string
            example: merchant-ABC-123
        - name: limit
          in: query
          description: This is the total number of records to return. Default value is 10. Max value is 50.
          schema:
            type: string
            example: '2'
        - name: offset
          in: query
          description: 'This is the starting position, where 0 is the first record. Default = 0.'
          schema:
            type: string
            example: '0'
        - name: startDate
          in: query
          description: This is the start date in UTC. Default = 30 days before the *endDate*.
          schema:
            type: string
            example: '2017-01-14T15:12:18Z'
        - name: endDate
          in: query
          description: This is the end date in UTC. Default = current date and time.
          schema:
            type: string
            example: '2017-04-04T15:12:18Z'
      responses:
        '200':
          description: ''
          headers: { }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getVerificationsResponseByMerchantRefNum'
      deprecated: false
      tags:
        - Verifications
  '/v1/accounts/{account_id}/verifications/{verification_id}':
    get:
      summary: Get Verification
      description: See how to look up a Verification request using the ID returned in the response to the original request.
      operationId: get-verification
      parameters:
        - name: account_id
          in: path
          description: This is the merchant account number.
          required: true
          style: simple
          schema:
            type: string
            example: '123456789'
        - name: verification_id
          in: path
          description: This is the Verification ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: e50e19a6-8edd-44ec-abc4-18d0a97d51d8
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/verification'
              example:
                id: e50e19a6-8edd-44ec-abc4-18d0a97d51d8
                merchantRefNum: merchant ABC-444
                profile:
                  profile:
                    firstName: John
                    lastName: Smith
                    email: jsmith@email.com
                billingDetails:
                  billingDetails:
                    street: 100 Queen Street West
                    city: Toronto
                    state: 'ON'
                    country: CA
                    zip: M5H 2N2
                    phone: '555'
                customerIp: 204.91.0.12
                dupCheck: true
                description: This is a Verification transaction.
                card:
                  type: VI
                  lastDigits: '1111'
                  cardExpiry:
                    month: 12
                    year: 2020
                authCode: '1234567890'
                txnTime: '2017-02-14T15:12:18Z'
                currencyCode: USD
                avsResponse: MATCH
                nameVerification: MATCH
                firstNameVerification: MATCH
                lastNameVerification: MATCH
                cvvVerification: MATCH
                status: COMPLETED
                paymentFacilitator:
                  subMerchant:
                    id: '123456789'
                    name: PayFacSubMerchant
                    phone: '478234562331'
                    email: payfac@mail.com
                    url: www.payfac.com
                    address:
                      street: 100 Queen Street West
                      city: London
                      country: GB
                      zip: M5H 2N2 
                links:
                  - rel: self
                    href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/verifications/e50e19a6-8edd-44ec-abc4-18d0a97d51d8'
      deprecated: false
      tags:
        - Verifications
  '/v1/accounts/{account_id}/originalcredits':
    post:
      summary: Original Credit
      description: |-
        Original Credits allow merchants with specific merchant category codes (MCCs) to issue winnings as credits to cardholders, without requiring a previous Authorization/Settlement.

        **Note:** Acquirers and processors do not necessarily support all available MCCs; before integrating, you should contact [Integration Support](https://developer.paysafe.com/en/support/) for details.

        Worldpay Inc. (formerly Vantiv) supports Original Credit transactions with the following MCCs:

        * 5816

        * 7800

        * 7801

        * 7802

        * 7994

        Fiserv (formerly FirstData) supports Original Credit transactions with the following MCCs:

        * 7800

        * 7801

        * 7802

        * 7995

        Moneris supports Original Credit transactions with the following MCCs:

        * 5816

        * 7994

        * 7995

        Original Credit transfers are supported for other acquirers/processors with the following MCCs:

        * 7994

        * 7995

        By default, Test accounts do not support Original Credits; if you wish to use them you should contact [Integration Support](https://developer.paysafe.com/en/support/).

        See the examples of an Original Credit request below:

        * An Original Credit request using card information

        * An Original Credit request using a payment token

        In the case of a payment token, you can use either of two payment token types:

        * The permanent, reusable payment token that you receive in the response to a Customer Vault [card creation request](https://developer.paysafe.com/en/vault-api/#/operations/create-card)

        * The temporary payment token that you receive in the response to a Customer Vault [mobile single-use token creation request](https://developer.paysafe.com/en/vault-api/#/operations/create-applePay-single-use-token) or when using the [Paysafe.js SDK](https://developer.paysafe.com/en/api-docs/legacy-products/shopping-carts/client-side-sdks/paysafejs-powered-by-cards-api/tokenize/)

        You **cannot** use [Apple Pay single-use tokens](https://developer.paysafe.com/en/vault-api/#/operations/create-applePay-single-use-token) or [Google Pay single-use tokens](https://developer.paysafe.com/en/vault-api/#/operations/create-googlePay-single-use-token) in Original Credit requests.
      operationId: original-credit
      parameters:
        - name: account_id
          in: path
          description: This is the merchant account number.
          required: true
          style: simple
          schema:
            type: string
            example: '123456789'
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/contentType'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/originalCreditRequest'
            examples:
              Submit an Original Credit:
                value:
                  merchantRefNum: merchant 07.05.17_16
                  amount: 1000
                  dupCheck: true
                  card:
                    cardNum: '4111111111111111'
                    cardExpiry:
                      month: 2
                      year: 2019
                  customerIp: 204.91.0.12
                  description: Winning payment from Loto
              Submit an Original Credit Using a Payment Token:
                value:
                  merchantRefNum: merchant 07.05.17_16
                  amount: 1000
                  dupCheck: true
                  card:
                    paymentToken: LTEyMzYzMjQ3ODg
                  customerIp: 204.91.0.12
                  description: Winning payment from Loto
              Submit an Original Credit Using a Payment Facilitator:
                value:
                  merchantRefNum: merchant 07.05.17_16
                  amount: 1000
                  dupCheck: true
                  card:
                    paymentToken: LTEyMzYzMjQ3ODg
                  customerIp: 204.91.0.12
                  description: Winning payment from Loto
                  paymentFacilitator:
                    subMerchant:
                      id: '123456789'
                      name: PayFacSubMerchant
                      phone: '478234562331'
                      email: payfac@mail.com
                      url: www.payfac.com
                      address:
                        street: 100 Queen Street West
                        city: London
                        country: GB
                        zip: M5H 2N2
              Submit an Original Credit with Dynamic Descriptor:
                value:
                  merchantRefNum: merchant 07.05.17_16
                  amount: 1000
                  dupCheck: true
                  card:
                    cardNum: '4111111111111111'
                    cardExpiry:
                      month: 2
                      year: 2019
                  customerIp: 204.91.0.12
                  description: Winning payment from Loto
                  merchantDescriptor: 
                    dynamicDescriptor: 'PetShop' 
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/originalCredit'
              examples:
                Submit an Original Credit:
                  value:
                    id: 86dcb68d-cbd0-4878-8da7-ffc0e6554513
                    merchantRefNum: merchant 07.05.17_16
                    txnTime: '2017-07-06T19:59:17Z'
                    gatewayReconciliationId: '12345678901'
                    status: PENDING
                    amount: 1000
                    card:
                      type: VI
                      lastDigits: '1111'
                      cardExpiry:
                        month: 2
                        year: 2019
                    profile:
                      firstName: Joe
                      lastName: Smith
                      email: Joe.Smith@canada.com
                    billingDetails:
                      street: 100 Queen Street West
                      city: Toronto
                      state: 'ON'
                      country: CA
                      zip: M5H2N2
                    customerIp: 204.91.0.12
                    description: Winning payment from Loto
                    currencyCode: CAD
                    merchantDescriptor: 
                      dynamicDescriptor: 'OnlineStore' 
                    links:
                      - rel: self
                        href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/originalcredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513'
                Submit an Original Credit Using a Payment Token:
                  value:
                    id: 86dcb68d-cbd0-4878-8da7-ffc0e6554513
                    merchantRefNum: merchant 07.05.17_16
                    txnTime: '2017-07-06T19:59:17Z'
                    status: PENDING
                    amount: 1000
                    card:
                      type: VI
                      lastDigits: '1111'
                      cardExpiry:
                        month: 2
                        year: 2019
                    profile:
                      firstName: Joe
                      lastName: Smith
                      email: Joe.Smith@canada.com
                    billingDetails:
                      street: 100 Queen Street West
                      city: Toronto
                      state: 'ON'
                      country: CA
                      zip: M5H2N2
                    customerIp: 204.91.0.12
                    description: Winning payment from Loto
                    currencyCode: CAD
                    merchantDescriptor: 
                      dynamicDescriptor: 'OnlineStore' 
                    links:
                      - rel: self
                        href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/originalcredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513'
                Submit an Original Credit using a Payment Facilitator:
                  value:
                    id: 86dcb68d-cbd0-4878-8da7-ffc0e6554513
                    merchantRefNum: merchant 07.05.17_16
                    txnTime: '2017-07-06T19:59:17Z'
                    gatewayReconciliationId: '12345678901'
                    status: PENDING
                    amount: 1000
                    card:
                      type: VI
                      lastDigits: '1111'
                      cardExpiry:
                        month: 2
                        year: 2019
                    profile:
                      firstName: Joe
                      lastName: Smith
                      email: Joe.Smith@canada.com
                    billingDetails:
                      street: 100 Queen Street West
                      city: Toronto
                      state: 'ON'
                      country: CA
                      zip: M5H2N2
                    customerIp: 204.91.0.12
                    description: Winning payment from Loto
                    currencyCode: CAD
                    paymentFacilitator:
                      subMerchant:
                        id: '123456789'
                        name: PayFacSubMerchant
                        phone: '478234562331'
                        email: payfac@mail.com
                        url: www.payfac.com
                        address:
                          street: 100 Queen Street West
                          city: London
                          country: GB
                          zip: M5H 2N2 
                    merchantDescriptor: 
                      dynamicDescriptor: 'OnlineStore'
                Submit an Original Credit with Dynamic Descriptor:
                  value:
                    id: 86dcb68d-cbd0-4878-8da7-ffc0e6554513
                    merchantRefNum: merchant 07.05.17_16
                    txnTime: '2017-07-06T19:59:17Z'
                    gatewayReconciliationId: '12345678901'
                    status: PENDING
                    amount: 1000
                    card:
                      type: VI
                      lastDigits: '1111'
                      cardExpiry:
                        month: 2
                        year: 2019
                    profile:
                      firstName: Joe
                      lastName: Smith
                      email: Joe.Smith@canada.com
                    billingDetails:
                      street: 100 Queen Street West
                      city: Toronto
                      state: 'ON'
                      country: CA
                      zip: M5H2N2
                    customerIp: 204.91.0.12
                    description: Winning payment from Loto
                    currencyCode: CAD
                    merchantDescriptor: 
                      dynamicDescriptor: 'PetShop'                     
                    links:
                      - rel: self
                        href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/originalcredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513'                          
      deprecated: false
      tags:
        - Original Credits
    get:
      summary: Get Original Credit Using Merchant Reference Number
      description: |-
        Original Credits allow merchants with specific merchant category codes (MCCs) to issue winnings as credits to cardholders, without requiring a previous Authorization/Settlement.
        
        **Note:** Acquirers and processors do not necessarily support all available MCCs; before integrating, you should contact [Integration Support](https://developer.paysafe.com/en/support/) for details.
        
        Worldpay Inc. (formerly Vantiv) supports Original Credit transactions with the following MCCs:
        
        * 5816
        
        * 7800
        
        * 7801
        
        * 7802
        
        * 7994
        
        Fiserv (formerly FirstData) supports Original Credit transactions with the following MCCs:
        
        * 7800
        
        * 7801
        
        * 7802
        
        * 7995
        
        Moneris supports Original Credit transactions with the following MCCs:
        
        * 5816
        
        * 7994
        
        * 7995
        
        Original Credit transfers are supported for other acquirers/processors with the following MCCs:
        
        * 7994
        
        * 7995
        
        By default, Test accounts do not support Original Credits; if you wish to use them you should contact [Integration Support](https://developer.paysafe.com/en/support/).
        
        See how to look up an Original Credit request using the merchant reference number used in the original request below.
      operationId: get-original-credit-using-merchant-reference-number
      parameters:
        - name: account_id
          in: path
          description: This is the merchant account number.
          required: true
          style: simple
          schema:
            type: string
            example: '123456789'
        - name: merchantRefNum
          in: query
          description: This is the merchant reference number created by the merchant and submitted as part of the request.
          schema:
            type: string
            example: merchant 07.05.17_16
        - name: limit
          in: query
          description: This is the total number of records to return. Default value is 10. Max value is 50.
          schema:
            type: string
            example: '2'
        - name: offset
          in: query
          description: 'This is the starting position, where 0 is the first record. Default = 0.'
          schema:
            type: string
            example: '0'
        - name: startDate
          in: query
          description: This is the start date in UTC. Default = 30 days before the *endDate*.
          schema:
            type: string
            example: '2017-01-14T15:12:18Z'
        - name: endDate
          in: query
          description: This is the end date in UTC. Default = current date and time.
          schema:
            type: string
            example: '2017-04-04T15:12:18Z'
      responses:
        '200':
          description: ''
          headers: { }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getOriginalCreditByMerchantRefNumResponse'
      deprecated: false
      tags:
        - Original Credits
  '/v1/accounts/{account_id}/originalcredits/{original_credit_id}':
    put:
      summary: Cancel an Original Credit
      description: |-
        Original Credits allow merchants with specific merchant category codes (MCCs) to issue winnings as credits to cardholders, without requiring a previous Authorization/Settlement.

        **Note:** Acquirers and processors do not necessarily support all available MCCs; before integrating, you should contact [Integration Support](https://developer.paysafe.com/en/support/) for details.

        Worldpay Inc. (formerly Vantiv) supports Original Credit transactions with the following MCCs:

        * 5816

        * 7800

        * 7801

        * 7802

        * 7994

        Fiserv (formerly FirstData) supports Original Credit transactions with the following MCCs:

        * 7800

        * 7801

        * 7802

        * 7995

        Moneris supports Original Credit transactions with the following MCCs:

        * 5816

        * 7994

        * 7995

        Original Credit transfers are supported for other acquirers/processors with the following MCCs:

        * 7994

        * 7995

        By default, Test accounts do not support Original Credits; if you wish to use them you should contact [Integration Support](https://developer.paysafe.com/en/support/).

        See how to submit a Cancel Original Credit request below.
      operationId: cancel-an-original-credit
      parameters:
        - name: account_id
          in: path
          description: This is the merchant account number.
          required: true
          style: simple
          schema:
            type: string
            example: '123456789'
        - name: original_credit_id
          in: path
          description: This is the ID returned in the response to the Original Credit request.
          required: true
          style: simple
          schema:
            type: string
            example: 86dcb68d-cbd0-4878-8da7-ffc0e6554513
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/contentType'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cancelRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cancelOriginalCreditResponse'
      deprecated: false
      tags:
        - Original Credits
    get:
      summary: Get Original Credit
      description: |-
        Original Credits allow merchants with specific merchant category codes (MCCs) to issue winnings as credits to cardholders, without requiring a previous Authorization/Settlement.

        **Note:** Acquirers and processors do not necessarily support all available MCCs; before integrating, you should contact [Integration Support](https://developer.paysafe.com/en/support/) for details.

        Worldpay Inc. (formerly Vantiv) supports Original Credit transactions with the following MCCs:

        * 5816

        * 7800

        * 7801

        * 7802

        * 7994

        Fiserv (formerly FirstData) supports Original Credit transactions with the following MCCs:

        * 7800

        * 7801

        * 7802

        * 7995

        Moneris supports Original Credit transactions with the following MCCs:

        * 5816

        * 7994

        * 7995

        Original Credit transfers are supported for other acquirers/processors with the following MCCs:

        * 7994

        * 7995

        By default, Test accounts do not support Original Credits; if you wish to use them you should contact [Integration Support](https://developer.paysafe.com/en/support/).

        See how to look up an Original Credit request using the ID returned in the response to the original request below.
      operationId: get-original-credit
      parameters:
        - name: account_id
          in: path
          description: This is the merchant account number.
          required: true
          style: simple
          schema:
            type: string
            example: '123456789'
        - name: original_credit_id
          in: path
          description: This is the Original Credit ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: 86dcb68d-cbd0-4878-8da7-ffc0e6554513
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/originalCredit'
              example:
                id: 86dcb68d-cbd0-4878-8da7-ffc0e6554513
                merchantRefNum: merchant 07.05.17_16
                txnTime: '2017-07-06T19:59:17Z'
                gatewayReconciliationId: '12345678901'
                status: PENDING
                amount: 1000
                card:
                  type: VI
                  lastDigits: '1111'
                  cardExpiry:
                    month: 2
                    year: 2019
                profile:
                  firstName: Joe
                  lastName: Smith
                  email: Joe.Smith@canada.com
                billingDetails:
                  street: 100 Queen Street West
                  city: Toronto
                  state: 'ON'
                  country: CA
                  zip: M5H2N2
                customerIp: 204.91.0.12
                description: Winning payment from Loto
                currencyCode: CAD
                paymentFacilitator:
                  subMerchant:
                    id: '123456789'
                    name: PayFacSubMerchant
                    phone: '478234562331'
                    email: payfac@mail.com
                    url: www.payfac.com
                    address:
                      street: 100 Queen Street West
                      city: London
                      country: GB
                      zip: M5H 2N2 
                merchantDescriptor: 
                  dynamicDescriptor: 'OnlineStore'   
                links:
                  - rel: self
                    href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/originalcredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513'
      deprecated: false
      tags:
        - Original Credits
  '/v1/accounts/{account_id}/standalonecredits':
    post:
      summary: Standalone Credit
      description: |-
        Standalone Credits allow merchants to issue credits to cardholders without requiring a previous Authorization/Settlement.

        **Note:** If your merchant category code (MCC) is listed as able to [process Original Credits](/operations/original-credit), you must not use Standalone Credits.

        By default, Test accounts do not support Standalone Credits; if you wish to use them you should contact [Integration Support](https://developer.paysafe.com/en/support/).

        See below two examples of a Standalone Credit request:

        * A Standalone Credit request using card information

        * A Standalone Credit request using a payment token

        In the case of a payment token, you can use either of two payment token types:

        * The permanent, reusable payment token that you receive in the response to a Customer Vault [card creation request](https://developer.paysafe.com/en/vault-api/#/operations/create-card)

        * The temporary payment token that you receive in the response to a Customer Vault [mobile single-use token creation request](https://developer.paysafe.com/en/vault-api/#/operations/create-applePay-single-use-token) or when using the [Paysafe.js SDK](https://developer.paysafe.com/en/api-docs/legacy-products/shopping-carts/client-side-sdks/paysafejs-powered-by-cards-api/tokenize/)

        You **cannot** use [Apple Pay single-use tokens](https://developer.paysafe.com/en/vault-api/#/operations/create-applePay-single-use-token) or [Google Pay single-use tokens](https://developer.paysafe.com/en/vault-api/#/operations/create-googlePay-single-use-token) in Standalone Credit requests.
      operationId: standalone-credit
      parameters:
        - name: account_id
          in: path
          description: This is the merchant account number.
          required: true
          style: simple
          schema:
            type: string
            example: '123456789'
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/contentType'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/standaloneCreditRequest'
            examples:
              Submit a Standalone Credit:
                value:
                  merchantRefNum: merchant 07.05.17_16
                  amount: 1000
                  dupCheck: true
                  card:
                    cardNum: '4111111111111111'
                    cardExpiry:
                      month: 2
                      year: 2019
                  customerIp: 204.91.0.12
                  description: Winning payment from Loto
              Submit a Standalone Credit Using a Payment Token:
                value:
                  merchantRefNum: merchant 07.05.17_16
                  amount: 1000
                  dupCheck: true
                  card:
                    paymentToken: LTEyMzYzMjQ3ODg
                  customerIp: 204.91.0.12
                  description: Winning payment from Loto
              Submit a Standalone Credit Using a Payment Facilitator:
                value:
                  merchantRefNum: merchant 07.05.17_16
                  amount: 1000
                  dupCheck: true
                  card:
                    cardNum: '4111111111111111'
                    cardExpiry:
                      month: 2
                      year: 2019
                  customerIp: 204.91.0.12
                  description: Winning payment from Loto
                  paymentFacilitator:
                    subMerchant:
                      id: '123456789'
                      name: PayFacSubMerchant
                      phone: '478234562331'
                      email: payfac@mail.com
                      url: www.payfac.com
                      address:
                        street: 100 Queen Street West
                        city: London
                        country: GB
                        zip: M5H 2N2 
              Submit a Standalone Credit with Dynamic Descriptor:
                value:
                  merchantRefNum: merchant 07.05.17_16
                  amount: 1000
                  dupCheck: true
                  card:
                    cardNum: '4111111111111111'
                    cardExpiry:
                      month: 2
                      year: 2019
                  customerIp: 204.91.0.12
                  description: Winning payment from Loto 
                  merchantDescriptor:
                    dynamicDescriptor: 'PetShop'                        
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/standaloneCredit'
              examples:
                Submit a Standalone credit:
                  value:
                    id: 86dcb68d-cbd0-4878-8da7-ffc0e6554513
                    merchantRefNum: merchant 07.05.17_16
                    txnTime: '2017-07-06T19:59:17Z'
                    gatewayReconciliationId: '12345678901'
                    status: PENDING
                    amount: 1000
                    card:
                      type: VI
                      lastDigits: '1111'
                      cardExpiry:
                        month: 2
                        year: 2019
                    profile:
                      firstName: Joe
                      lastName: Smith
                      email: Joe.Smith@canada.com
                    billingDetails:
                      street: 100 Queen Street West
                      city: Toronto
                      state: 'ON'
                      country: CA
                      zip: M5H2N2
                    customerIp: 204.91.0.12
                    description: Winning payment from Loto
                    currencyCode: CAD
                    merchantDescriptor:
                      dynamicDescriptor: 'OnlineStore'
                    links:
                      - rel: self
                        href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/standalonecredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513'
                Submit a Standalone Credit Using a Payment Token:
                  value:
                    id: 86dcb68d-cbd0-4878-8da7-ffc0e6554513
                    merchantRefNum: merchant 07.05.17_16
                    txnTime: '2017-07-06T19:59:17Z'
                    gatewayReconciliationId: '12345678901'
                    status: PENDING
                    amount: 1000
                    card:
                      type: VI
                      lastDigits: '1111'
                      cardExpiry:
                        month: 2
                        year: 2019
                    profile:
                      firstName: Joe
                      lastName: Smith
                      email: Joe.Smith@canada.com
                    billingDetails:
                      street: 100 Queen Street West
                      city: Toronto
                      state: 'ON'
                      country: CA
                      zip: M5H2N2
                    customerIp: 204.91.0.12
                    description: Winning payment from Loto
                    currencyCode: CAD
                    merchantDescriptor:
                      dynamicDescriptor: 'OnlineStore'                    
                    links:
                      - rel: self
                        href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/standalonecredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513'
                Submit a Standalone credit Using a Payment Facilitator:
                  value:
                    id: 86dcb68d-cbd0-4878-8da7-ffc0e6554513
                    merchantRefNum: merchant 07.05.17_16
                    txnTime: '2017-07-06T19:59:17Z'
                    gatewayReconciliationId: '12345678901'
                    status: PENDING
                    amount: 1000
                    card:
                      type: VI
                      lastDigits: '1111'
                      cardExpiry:
                        month: 2
                        year: 2019
                    profile:
                      firstName: Joe
                      lastName: Smith
                      email: Joe.Smith@canada.com
                    billingDetails:
                      street: 100 Queen Street West
                      city: Toronto
                      state: 'ON'
                      country: CA
                      zip: M5H2N2
                    customerIp: 204.91.0.12
                    description: Winning payment from Loto
                    currencyCode: CAD
                    paymentFacilitator:
                      subMerchant:
                        id: '123456789'
                        name: PayFacSubMerchant
                        phone: '478234562331'
                        email: payfac@mail.com
                        url: www.payfac.com
                        address:
                          street: 100 Queen Street West
                          city: London
                          country: GB
                          zip: M5H 2N2 
                    merchantDescriptor:
                      dynamicDescriptor: 'OnlineStore'                          
                Submit a Standalone credit with Dynamic Descriptor:
                  value:
                    id: 86dcb68d-cbd0-4878-8da7-ffc0e6554513
                    merchantRefNum: merchant 07.05.17_16
                    txnTime: '2017-07-06T19:59:17Z'
                    gatewayReconciliationId: '12345678901'
                    status: PENDING
                    amount: 1000
                    card:
                      type: VI
                      lastDigits: '1111'
                      cardExpiry:
                        month: 2
                        year: 2019
                    profile:
                      firstName: Joe
                      lastName: Smith
                      email: Joe.Smith@canada.com
                    billingDetails:
                      street: 100 Queen Street West
                      city: Toronto
                      state: 'ON'
                      country: CA
                      zip: M5H2N2
                    customerIp: 204.91.0.12
                    description: Winning payment from Loto
                    currencyCode: CAD
                    merchantDescriptor:
                      dynamicDescriptor: 'PetShop'               
                    links:
                      - rel: self
                        href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/standalonecredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513'                          
      deprecated: false
      tags:
        - Standalone Credits
    get:
      summary: Get Standalone Credit Using Merchant Reference Number
      description: |-
        Standalone Credits allow merchants to issue credits to cardholders without requiring a previous Authorization/Settlement.
        
        **Note:** If your merchant category code (MCC) is listed as able to [process Original Credits](/operations/original-credit), you must not use Standalone Credits.
        
        By default, Test accounts do not support Standalone Credits; if you wish to use them you should contact [Integration Support](https://developer.paysafe.com/en/support/).
        
        See how to look up a Standalone Credit using the merchant reference number used in the original request in the examples below.
      operationId: get-standalone-credit-using-merchant-reference-number
      parameters:
        - name: account_id
          in: path
          description: This is the merchant account number.
          required: true
          style: simple
          schema:
            type: string
            example: '123456789'
        - name: merchantRefNum
          in: query
          description: This is the merchant reference number created by the merchant and submitted as part of the request.
          schema:
            type: string
            example: merchant 07.05.17_16
        - name: limit
          in: query
          description: This is the total number of records to return. Default value is 10. Max value is 50.
          schema:
            type: string
            example: '2'
        - name: offset
          in: query
          description: 'This is the starting position, where 0 is the first record. Default = 0.'
          schema:
            type: string
            example: '0'
        - name: startDate
          in: query
          description: This is the start date in UTC. Default = 30 days before the *endDate*.
          schema:
            type: string
            example: '2017-01-14T15:12:18Z'
        - name: endDate
          in: query
          description: This is the end date in UTC. Default = current date and time.
          schema:
            type: string
            example: '2017-04-04T15:12:18Z'
      responses:
        '200':
          description: ''
          headers: { }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getStandaloneCreditByMerchantRefNumResponse'
      deprecated: false
      tags:
        - Standalone Credits
  '/v1/accounts/{account_id}/standalonecredits/{standalone_credit_id}':
    put:
      summary: Cancel a Standalone Credit
      description: |-
        Standalone Credits allow merchants to issue credits to cardholders without requiring a previous Authorization/Settlement.

        **Note:** If your merchant category code (MCC) is listed as able to [process Original Credits](/operations/original-credit), you must not use Standalone Credits.

        By default, Test accounts do not support Standalone Credits; if you wish to use them you should contact [Integration Support](https://developer.paysafe.com/en/support/).

        See how to submit a Cancel Standalone Credit request.
      operationId: cancel-a-standalone-credit
      parameters:
        - name: account_id
          in: path
          description: This is the merchant account number.
          required: true
          style: simple
          schema:
            type: string
            example: '123456789'
        - name: standalone_credit_id
          in: path
          description: This is the ID returned in the response to the Standalone Credit request.
          required: true
          style: simple
          schema:
            type: string
            example: 86dcb68d-cbd0-4878-8da7-ffc0e6554513
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/contentType'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cancelRequest'
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cancelStandaloneCreditResponse'
      deprecated: false
      tags:
        - Standalone Credits
    get:
      summary: Get Standalone Credit
      description: |-
        Standalone Credits allow merchants to issue credits to cardholders without requiring a previous Authorization/Settlement.

        **Note:** If your merchant category code (MCC) is listed as able to [process Original Credits](/operations/original-credit), you must not use Standalone Credits.

        By default, Test accounts do not support Standalone Credits; if you wish to use them you should contact [Integration Support](https://developer.paysafe.com/en/support/).

        See how to look up a Standalone Credit request using the ID returned in the response to the original request.
      operationId: get-standalone-credit
      parameters:
        - name: account_id
          in: path
          description: This is the merchant account number.
          required: true
          style: simple
          schema:
            type: string
            example: '123456789'
        - name: standalone_credit_id
          in: path
          description: This is the Standalone Credit ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: 86dcb68d-cbd0-4878-8da7-ffc0e6554513
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/standaloneCredit'
              example:
                id: 86dcb68d-cbd0-4878-8da7-ffc0e6554513
                merchantRefNum: merchant 07.05.17_16
                txnTime: '2017-07-06T19:59:17Z'
                gatewayReconciliationId: '12345678901'
                status: PENDING
                amount: 1000
                card:
                  type: VI
                  lastDigits: '1111'
                  cardExpiry:
                    month: 2
                    year: 2019
                profile:
                  firstName: Joe
                  lastName: Smith
                  email: Joe.Smith@canada.com
                billingDetails:
                  street: 100 Queen Street West
                  city: Toronto
                  state: 'ON'
                  country: CA
                  zip: M5H2N2
                customerIp: 204.91.0.12
                description: Winning payment from Loto
                currencyCode: CAD
                paymentFacilitator:
                  subMerchant:
                    id: '123456789'
                    name: PayFacSubMerchant
                    phone: '478234562331'
                    email: payfac@mail.com
                    url: www.payfac.com
                    address:
                      street: 100 Queen Street West
                      city: London
                      country: GB
                      zip: M5H 2N2 
                merchantDescriptor:
                  dynamicDescriptor: 'OnlineStore'                      
                links:
                  - rel: self
                    href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/standalonecredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513'
      deprecated: false
      tags:
        - Standalone Credits
components:
  securitySchemes:
    httpBasic:
      type: http
      scheme: basic
  schemas:
    accordD:
      type: object
      description: |-
        [AccordD](/schemas/accordD) are parameters for financing plans supported for certain merchant configurations.
        Include this element only when instructed to do so by your account manager.
      properties:
        financingType:
          enum:
            - DEFERRED_PAYMENT
            - EQUAL_PAYMENT
          type: string
          description: |-
            This is the type of financing offered
            * `DEFERRED_PAYMENT` - Deferred payment financing
            * `EQUAL_PAYMENT` - Equal payment financing
          example: DEFERRED_PAYMENT
        plan:
          type: string
          description: This is the plan number for this financing transaction.
          example: '112'
          maxLength: 3
        gracePeriod:
          type: number
          description: 'This is the grace period, in months, associated with deferred payment transactions.'
          example: 12
          maximum: 99
        term:
          type: number
          description: 'This is the number of payments, in months, for equal payment transactions.'
          example: 24
          maximum: 99
      required:
        - financingType
        - plan
      x-examples:
        accordD:
          accordD:
            financingType: DEFERRED_PAYMENT
            plan: '123'
            gracePeriod: '12'
    acquirerData:
      type: object
      x-stoplight:
        id: r9t5lw17zmnwv
      properties:
        code:
          type: string
          description: This is the code for your card acquirer.
          enum:
            - VAN
        discretionaryData:
          $ref: '#/components/schemas/discretionaryData'
      description: '[Acquirer data](/schemas/acquirerData) is additional information about your card acquirer, applicable **only when** you are using Worldpay (VAN) as your acquirer for authorizations. Contact your account manager for more information.'
      required:
        - code
    acquirerResponse:
      readOnly: true
      oneOf:
        - $ref: '#/components/schemas/acquirerResponseDefault'
        - $ref: '#/components/schemas/acquirerResponseCrx'
        - $ref: '#/components/schemas/acquirerResponseDjn'
        - $ref: '#/components/schemas/acquirerResponseGps'
        - $ref: '#/components/schemas/acquirerResponseNag'
      description: 'This is the raw [acquirer response](/schemas/acquirerResponse) returned by an acquirer. It is returned only if your account is configured accordingly.'
    acquirerResponseCrx:
      title: acquirerResponseCrx
      x-stoplight:
        id: 47a3cdaebb0a4
      type: object
      description: 'This is the raw [acquirer response](/schemas/acquirerResponse) returned by Crx acquirer. It is returned only if your account is configured accordingly.'
      x-internal: true
      properties:
        responseId:
          type: string
          description: This is the response ID assigned by Credorax.
          readOnly: true
        requestId:
          type: string
          description: This is the request ID assigned by Paysafe.
          readOnly: true
        description:
          type: string
          description: This is a description of the response.
          readOnly: true
        authCode:
          type: string
          description: This is the authorization code.
          readOnly: true
        txnDateTime:
          type: string
          description: This is the transaction date and time.
          readOnly: true
        referenceNbr:
          type: string
          description: Bank net transaction Id/Merch Tran Ref
          readOnly: true
        responseReasonCode:
          type: string
          description: This is the raw response reason code returned by Credorax.
          readOnly: true
        cvv2Result:
          type: string
          description: This is the raw cvv2 result code.
          readOnly: true
      readOnly: true
    acquirerResponseDefault:
      title: acquirerResponseDefault
      x-stoplight:
        id: dee09472b5a76
      type: object
      properties:
        code:
          type: string
          description: This is the acquirer identification code.
          example: DJN
          readOnly: true
        responseCode:
          type: string
          description: This is the raw response returned by the acquirer.
          example: 556677j88
          readOnly: true
        avsCode:
          type: string
          description: This is the raw AVS code returned by the acquirer.
          example: M
          readOnly: true
        balanceResponse:
          type: string
          description: 'This is the balance remaining on a gift card, if a gift card was used in the original transaction.'
          example: '1200'
          readOnly: true
      readOnly: true
      description: 'This is the raw [acquirer response](/schemas/acquirerResponse) returned by an acquirer. It is returned only if your account is configured accordingly.'
      x-internal: true
    acquirerResponseDjn:
      title: acquirerResponseDjn
      x-stoplight:
        id: e4ca21076b09b
      type: object
      properties:
        batchNumber:
          type: string
          description: This is the batch number.
          readOnly: true
        effectiveDate:
          type: string
          description: This is the date of the bank deposit associated with the transaction.
          readOnly: true
        financingType:
          type: string
          description: This is the type of financing offered.
          readOnly: true
        gracePeriod:
          type: string
          description: 'This is the grace period, in months, associated with deferred payment transactions.'
          readOnly: true
        nonReusableToken:
          type: string
          description: This is a credit card ID used by the merchant to track consumer behavior.
          readOnly: true
        plan:
          type: string
          description: This is the plan number for this financing transaction.
          readOnly: true
        seqNumber:
          type: string
          description: This is the merchant's sequence number.
          readOnly: true
        term:
          type: string
          description: 'This is the number of payments, in months, for equal payment transactions.'
          readOnly: true
      description: 'This is the raw [acquirer response](/schemas/acquirerResponse) returned by Djn acquirer. It is returned only if your account is configured accordingly.'
      x-internal: true
      readOnly: true
    acquirerResponseGps:
      title: acquirereDataResponseGps
      x-stoplight:
        id: 09126bcb8d51e
      type: object
      properties:
        terminalId:
          type: string
          description: This is the merchant's terminal ID.
          readOnly: true
      description: 'This is the raw [acquirer response](/schemas/acquirerResponse) returned by Gps acquirer. It is returned only if your account is configured accordingly.'
      x-internal: true
      readOnly: true
    acquirerResponseNag:
      title: acquirerResponseNag
      x-stoplight:
        id: eb5pzayu8zndu
      type: object
      properties:
        id:
          type: string
          description: This is the acquirer MID that was sent to the clearing house.
          readOnly: true
      description: 'This is the raw [acquirer response](/schemas/acquirerResponse) returned by Nag acquirer. It is returned only if your account is configured accordingly.'
      x-internal: true
      readOnly: true
    additionalDetail:
      x-internal: true
      type: object
      properties:
        type:
          type: string
          description: This is the type of the additional detail.
        code:
          type: string
          description: This is the code of the additional detail.
        message:
          type: string
          description: This is the message of the additional detail.
    agencyAddress:
      type: object
      description: 'The travel [agency address](/schemas/agencyAddress)'
      properties:
        street:
          type: string
          description: Address line of the agent selling the ticket.
          maxLength: 50
        zip:
          type: string
          description: Postal code of the agent selling the ticket.
          maxLength: 10
        country:
          type: string
          description: ISO Country code of agent selling the ticket.
    airlineTravelDetails:
      type: object
      description: |-
        This is additional information about your [airline travel](/schemas/airlineTravelDetails).

        __NOTE: This object is only for Airline Merchants__
      properties:
        passengerNameRecord:
          type: string
          description: The airline company uses the passengerNameRecord as a reservation number.
          example: ABCDE12345
          maxLength: 10
        passengerName:
          type: string
          description: |-
            Name of the passenger to whom the ticket was issued.
            * Required during authorization request with AMEX for integration with TSYS processor
            * Required during settlement request for integration with Paysafe Acquiring
            * Required during settlement request with Visa or Mastercard for integration with TSYS processor
          example: John Doe
          minLength: 1
          maxLength: 20
        departureDate:
          type: string
          description: |-
            Date of passenger’s departure. Date format = YYYY-MM-DD, ISO 8601 expected.
            * Required during settlement
            _UTC Date Format_
          example: '2014-01-26'
        origin:
          type: string
          description: |-
            Departure Airport Code: IATA Airport Code.
            * Required during settlement
          example: YUL
          minLength: 3
          maxLength: 3
        computerizedReservationSystem:
          $ref: '#/components/schemas/computerizedReservationSystem'
        additionalBookingReference:
          type: string
          maxLength: 50
          description: 'BookingReference field. Typically used for the PNR, but should allow an airline to specify any other reference if they feel fit'
        totalFare:
          type: number
          description: 'Total fare for all legs on the ticket, excluding taxes and fees. If multiple tickets are purchased, this is the total fare for all tickets'
        totalFee:
          type: number
          description: 'Total fee for all legs on the ticket. If multiple tickets are purchased, this is the total fee for all tickets.'
        totalTaxes:
          type: number
          description: 'Total taxes for all legs on the ticket. If multiple tickets are purchased, this is the total taxes for all tickets.'
        ticket:
          $ref: '#/components/schemas/ticket'
        passengers:
          allOf:
            - $ref: '#/components/schemas/passengers'
        customerReferenceNumber:
          type: string
          description: Contains the code that the cardholder supplied to the card acceptor.
          minLength: 1
          maxLength: 20
        travelAgency:
          $ref: '#/components/schemas/travelAgency'
        tripLegs:
          allOf:
            - $ref: '#/components/schemas/tripLegs'
      required:
        - ''
      x-examples:
        airlineTravelDetails:
          airlineTravelDetails:
            passengerNameRecord: ABCDE12345
            passengerName: Joe Smith
            departureDate: '2021-01-26'
            origin: SXF
            computerizedReservationSystem: DATS
            ticket:
              ticketNumber: 1234567891011
              isRestrictedTicket: false
            customerReferenceNumber: 10987654321
            travelAgency:
              name: MY AGENT
              code: MYAGENT3
            tripLegs:
              leg1:
                flight:
                  carrierCode: LH
                  flightNumber: '0799'
                serviceClass: F
                isStopOverAllowed: 'true'
                destination: ISL
                fareBasis: VMAY
                fare: 10
                departureDate: '2021-01-26'
              leg2:
                flight:
                  carrierCode: TK
                  flightNumber: '1385'
                serviceClass: F
                isStopOverAllowed: 'true'
                destination: SOF
                fareBasis: VMAY
                fare: 10
                departureDate: '2021-01-26'
    airlineTravelDetailsAuthorization:
      type: object
      description: |-
        This is additional information about your [airline travel](/schemas/airlineTravelDetails).

        __NOTE: This object is only for Airline Merchants__
      allOf:
        - $ref: '#/components/schemas/airlineTravelDetails'
        - type: object
          required:
            - passengerName
          properties:
            passengerName:
              type: string
              description: |-
                Name of the passenger to whom the ticket was issued.
                * Required during authorization request with AMEX for integration with TSYS processor
            departureDate:
              type: string
              description: |-
                Date of passenger’s departure. Date format = YYYY-MM-DD, ISO 8601 expected.
                _UTC Date Format_
            origin:
              type: string
              description: |-
                Departure Airport Code: IATA Airport Code.
            ticket:
              $ref: '#/components/schemas/ticketAuthorization'
            tripLegs:
              allOf:
                - $ref: '#/components/schemas/tripLegsAuthorization'
      x-internal: true
    airlineTravelDetailsSettlement:
      type: object
      description: |-
        This is additional information about your [airline travel](/schemas/airlineTravelDetails).
        
        __NOTE: This object is only for Airline Merchants__
      allOf:
        - $ref: '#/components/schemas/airlineTravelDetails'
        - type: object
          required:
            - passengerName
            - departureDate
            - origin
            - ticket
          properties:
            passengerName:
              type: string
              description: |-
                Name of the passenger to whom the ticket was issued.
                * Required during settlement request in case of Paysafe Acquiring 
                * Required during settlement request with Visa or Mastercard for integration with TSYS processor
            departureDate:
              type: string
              description: |-
                Date of passenger’s departure. Date format = YYYY-MM-DD, ISO 8601 expected.
                
                _UTC Date Format_
            origin:
              type: string
              description: |-
                Departure Airport Code: IATA Airport Code.
            ticket:
              $ref: '#/components/schemas/ticketSettlement'
            tripLegs:
              allOf:
                - $ref: '#/components/schemas/tripLegsSettlement'
      x-internal: true
    amount:
      title: amount
      x-stoplight:
        id: b2ff9ad225779
      type: number
      example: 100
      maximum: 99999999999
      description: |-
        This is the amount of the request, in minor units.
        For example, to process US $10.99, this value should be 1099.
        To process 1000 Japanese yen, this value should be 1000. 
        To process 10.139 Tunisian dinar, this value should be 10139.

        **Note:** 

        If the merchant account is set up for a currency that has 3 decimal units, our system will half round up the least significant digit.
      x-internal: true
    authentication:
      x-examples:
        3DS 2.x authentication:
          authentication:
            eci: 5
            cavv: AAABCIEjYgAAAAAAlCNiENiWiV+=
            threeDResult: 'Y'
            threeDSecureVersion: 2.1.0
            directoryServerTransactionId: a3a721f3-b6fa-4cb5-84ea-c7b5c39890a2
        Exemption authentication:
          authentication:
            exemptionIndicator: LOW_VALUE_EXEMPTION
      oneOf:
        - $ref: '#/components/schemas/authentication3dsV2'
        - $ref: '#/components/schemas/authenticationExemption'
    authentication3dsV2:
      type: object
      description: 'These are [3D Secure version two](/schemas/authentication) details.'
      properties:
        eci:
          type: number
          description: |-
            This is the Electronic Commerce Indicator code, which gets returned by the card issuer indicating whether the cardholder was successfully authenticated. Note that in some cases the eci value includes a leading zero, e.g., 01 or 02.

              **Visa**:
              * `5` - Identifies a successfully authenticated transaction.
              * `6` - Identifies an attempted authenticated transaction.
              * `7` - Identifies a non-authenticated transaction.
               **Mastercard**:
              * `0` - Identifies a non-authenticated transaction.
              * `1` - Identifies a non-authenticated transaction.
              * `2` - Identifies a successfully authenticated transaction.
          example: 5
          maximum: 10
        cavv:
          type: string
          description: 'This is the Cardholder Authentication Verification Value, which gets returned by the card issuer, indicating that the transaction has been authenticated.'
          example: AAABCIEjYgAAAAAAlCNiENiWiV+=
          maxLength: 80
        xid:
          type: string
          description: 'This is the transaction identifier returned by the card issuer. **Note:** This exists only for Amex.'
          example: aWg4N1ZZOE53TkFrazJuMmkyRDA=
          maxLength: 40
        threeDResult:
          type: string
          example: 'Y'
          description: |-
            This indicates the outcome of the authentication.
             * `Y` - The cardholder successfully authenticated with their card issuer.
             * `A` - The cardholder authentication was attempted.
             * `N` - The cardholder failed to authenticate with their card issuer.
             * `U` - Authentication with the card issuer was unavailable.
             * `E` - An error occurred during authentication. 
             * `R` - Rejected transaction.
          enum:
            - 'Y'
            - A
            - 'N'
            - U
            - E
            - R
        directoryServerTransactionId:
          type: string
          description: 'This is the unique directory server transaction ID required for Mastercard. **Note:** This is field is required when the card brand is Mastercard. This exists only for 3D Secure 2.'
          example: 123e4567-e89b-12d3-a456-426655445674
          maxLength: 36
        threeDSecureVersion:
          type: string
          description: 'This is the 3D secure protocol version.'
          example: 2.1.0
          required: true
          minLength: 5
          maxLength: 8
      required:
        - eci
        - cavv
        - threeDSecureVersion
        - directoryServerTransactionId
      additionalProperties: false
      x-internal: true
      title: Authentication 3DS V2
      x-stoplight:
        id: d0fee1ffc353a
    authenticationExemption:
      type: object
      properties:
        exemptionIndicator:
          enum:
            - LOW_VALUE_EXEMPTION
            - TRA_EXEMPTION
          type: string
          description: |-
            This exemption gives the customer the option to bypass the Strong Customer Authentication. **Note:** This exists only for 3D Secure 2.
            * 'LOW_VALUE_EXEMPTION' - This exemption is valid only for transactions lower or equal to 30 euro, not exceeding five transactions in a row or 100 euro total amount transactions with no SCA (Strong Customer Authentication)
            * 'TRA_EXEMPTION' - The exemption applies specifically to transactions that are 100 euros or lower. However, there could be additional criteria that need to be considered. Please reach out to your account manager for further details.
          example: LOW_VALUE_EXEMPTION
      additionalProperties: false
      x-internal: true
      title: Authentication Exemption
      description: 'This is [3DS exemption](/schemas/authentication)'
    authorization:
      allOf:
      - $ref: '#/components/schemas/authorizationRequest'
      - type: object
        properties:
          id:
            type: string
            description: 'This is the ID returned in the response. This ID can be used for future associated requests, e,g., Settlements.'
            example: 25f6dadf-176a-415f-95c9-6ff39ff697ba
            maxLength: 36
            readOnly: true
          availableToSettle:
            type: number
            description: 'This is the amount of of the Authorization remaining to settle, in minor units.'
            example: 1000
            maximum: 99999999999
            readOnly: true
          childAccountNum:
            type: string
            maxLength: 10
            description: This is the child merchant account number. It is returned only if the transaction was processed via a master account.
            readOnly: true
          authCode:
            type: string
            description: This is the Authorization code assigned by the issuing bank and returned in the response.
            example: '123456789011'
            maxLength: 50
            readOnly: true
          txnTime:
            type: string
            description: This is the date and time the transaction was processed.
            example: '2017-12-11T16:33:49Z'
            readOnly: true
          currencyCode:
            type: string
            description: 'This is the currency of the merchant account, e.g., USD or CAD, returned in the request response.'
            example: USD
            maxLength: 3
            readOnly: true
          avsResponse:
            $ref: '#/components/schemas/avsResponse'
          processingRails:
            $ref: '#/components/schemas/processingRails'  
          cvvVerification:
            $ref: '#/components/schemas/cvvVerification'
          status:
            description: |-
              This is the status of the request.

              * `RECEIVED` - Our system has received the request and is waiting for the downstream processor’s response.
              * `COMPLETED` - The transaction has been completed.
              * `HELD` - The transaction has been placed on hold due to risk considerations.
              * `FAILED` - The transaction failed, due to either an error or being declined.
              * `CANCELLED` - The request has been fully voided (reversed).
            example: RECEIVED
            enum:
              - RECEIVED
              - COMPLETED
              - HELD
              - FAILED
              - CANCELLED
            type: string
            readOnly: true
          riskReasonCode:
            type: array
            description: 'An array of integers is returned, displaying the detailed Risk reason codes if your transaction was declined. It is returned only if your account is configured accordingly.'
            example:
              - 5500
            items:
              type: number
            readOnly: true
          acquirerResponse:
            allOf:
              - $ref: '#/components/schemas/acquirerResponse'
          error:
            $ref: '#/components/schemas/error'
          links:
            type: array
            description: |-
              This is an array of [links](/schemas/link) related to the resource.

              Typically you will have reference to any parent resources, and a reference to the child resource (if applicable).
              You may also see links for any call to action flows.
            items:
              $ref: '#/components/schemas/link'
            readOnly: true
      x-examples:
        Authorization response:
          id: 39152e1d-ba8b-4625-822c-7e9aa7f6e258
          merchantRefNum: merchant 03.24.17_3
          txnTime: '2021-11-11T14:59:16Z'
          status: COMPLETED
          amount: 1000
          settleWithAuth: false
          availableToSettle: 1000
          card:
            type: VI
            lastDigits: '1111'
            cardExpiry:
              month: 12
              year: 2021
          authentication:
            exemptionIndicator: LOW_VALUE_EXEMPTION
          authCode: '143123'
          profile:
            firstName: John
            lastName: Doe
            email: AY1@OPTIMAL.COM
          billingDetails:
            street: 5050 Southmain Drive
            city: CAMBRIDGE
            state: 'ON'
            country: CA
            zip: M2RG1Y9
          merchantDescriptor:
            dynamicDescriptor: NBX*LABurger
            phone: '8984544545'
          visaAdditionalAuthData: {}
          currencyCode: USD
          avsResponse: UNKNOWN
          cvvVerification: MATCH
          links:
            - rel: self
              href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/auths/39152e1d-ba8b-4625-822c-7e9aa7f6e258'
    authorizationRequest:
      title: authorizationRequest
      x-internal: true
      x-stoplight:
        id: p5qq5oup5nd9h
      type: object
      properties:
        entryMode:
          type: string
          description: |-
            This is how the transaction has been initiated and will affect the way it will be processed.
            **Note:** Include this element only when instructed to do so by Paysafe.
            Possible values are
            * 'MOTO' - Mail Order/Telephone Order.
            * 'CARD_PRESENT' - Card Present
          enum:
            - MOTO
            - CARD_PRESENT
        card:
          $ref: '#/components/schemas/card'
        merchantRefNum:
          type: string
          description: This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.
          example: P1234
          maxLength: 255
        amount:
          $ref: '#/components/schemas/amount'
        authentication:
          $ref: '#/components/schemas/authentication'
        profile:
          $ref: '#/components/schemas/profile'
        billingDetails:
          $ref: '#/components/schemas/billingDetails'
        shippingDetails:
          $ref: '#/components/schemas/shippingDetails'
        storedCredential:
          $ref: '#/components/schemas/storedCredential'
        customerIp:
          type: string
          description: This is the customer's IP address.
          example: 204.91.0.12
          maxLength: 39
        dupCheck:
          type: boolean
          description: This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request within the past 90 days.
          example: false
          default: true
        keywords:
          type: array
          description: |
            This value can be any text the merchant wants to use, e.g., the merchant could use this as a tag to identify the transaction or the product purchased at their site. You can search on keywords in the merchant back office reporting tools.
          example:
            - Repeat Customer
            - Profile Stored
          items:
            type: string
            maxLength: 255
        merchantDescriptor:
          $ref: '#/components/schemas/merchantDescriptor'
        accordD:
          $ref: '#/components/schemas/accordD'
        description:
          type: string
          description: 'This is a description of the transaction, provided by the merchant.'
          maxLength: 255
          example: Video Purchase
        recipient:
          $ref: '#/components/schemas/recipient'
        level2Level3:
          $ref: '#/components/schemas/level2Level3'
        settleWithAuth:
          type: boolean
          description: 'This indicates whether the request is an Authorization only (no Settlement), or a Purchase (Authorization and Settlement).'
          example: true
          default: false
        settleWithExternalAuth:
          $ref: '#/components/schemas/settleWithExternalAuth'
        splitpay:
          description: 'For [Splitpay](/schemas/splitPay) transactions only, an array containing the linked accounts and the amount shared with each. You must include either *amount* or *percent*. However, you cannot include both values.'
          type: array
          items:
            $ref: '#/components/schemas/splitPay'
        fundingTransaction:
          $ref: '#/components/schemas/fundingTransaction'
        transactionIntent:
          $ref: '#/components/schemas/transactionIntentAuthorization'
        airlineTravelDetails:
          $ref: '#/components/schemas/airlineTravelDetailsAuthorization'
        cruiselineTravelDetails:
          $ref: '#/components/schemas/cruiselineTravelDetailsAuthorization'
        lodgingDetails:
          $ref: '#/components/schemas/lodgingDetailsAuthorization'
        carRentalDetails:
          $ref: '#/components/schemas/carRentalDetailsAuthorization'
        paymentFacilitator:
          $ref: '#/components/schemas/paymentFacilitator'
        externalAuthDetails:
          $ref: '#/components/schemas/externalAuthDetails'
        acquirerData:
          $ref: '#/components/schemas/acquirerData'
      required:
        - card
        - merchantRefNum
        - amount
    avsResponse:
      type: string
      enum:
        - MATCH
        - MATCH_ADDRESS_ONLY
        - MATCH_ZIP_ONLY
        - NO_MATCH
        - NOT_PROCESSED
        - UNKNOWN
      description: This is the AVS response from the card issuer.
      example: MATCH
      readOnly: true
      x-internal: true
    processingRails:
      type: string
      enum:
        - PINLESS
        - CARD_SCHEME_ROUTED
      description: Defines the processing rails options used for this transaction, indicating whether it is processed via pinless or regular card scheme network.
      example: PINLESS
      readOnly: true
      x-internal: true 
    nameVerification:
      type: string
      enum:
        - MATCH
        - PARTIAL_MATCH
        - NO_MATCH
        - NOT_PROCESSED
        - UNKNOWN
      description: This is the account name inquiry full name set result returned by the acquirer.
      example: MATCH
      readOnly: true
      x-internal: true
    firstNameVerification:
      type: string
      enum:
        - MATCH
        - PARTIAL_MATCH
        - NO_MATCH
        - NOT_PROCESSED
        - UNKNOWN
      description: This is the account name inquiry first name result returned by the acquirer.
      example: MATCH
      readOnly: true
      x-internal: true 
    lastNameVerification:
      type: string
      enum:
        - MATCH
        - PARTIAL_MATCH
        - NO_MATCH
        - NOT_PROCESSED
        - UNKNOWN
      description: This is the account name inquiry last name result returned by the acquirer.
      example: MATCH
      readOnly: true
      x-internal: true
    billingDetails:
      type: object
      description: 'This is the [billing address](/schemas/billingDetails) of the customer.'
      x-examples:
        Example 1:
          billingDetails:
            street: 100 Queen Street West
            city: Toronto
            state: 'ON'
            country: CA
            zip: M5H 2N2
      properties:
        street:
          type: string
          example: 100 Queen Street West
          maxLength: 50
          description: This is the first line of the street address in the billing address.
        street2:
          type: string
          maxLength: 50
          description: 'This is the second line of the street address in the billing address, if required (e.g., apartment number).'
        city:
          type: string
          example: Toronto
          maxLength: 40
          description: This is the city in the billing address.
        state:
          type: string
          example: 'ON'
          maxLength: 40
          description: 'See [Province Codes](https://developer.paysafe.com/en/support/reference-information/iso-standards/#province-codes) or [State Codes](https://developer.paysafe.com/en/support/reference-information/iso-standards/#state-codes) for Canada or the United States.'
        country:
          type: string
          example: CA
          maxLength: 2
          minLength: 2
          description: 'See [Country Codes](https://developer.paysafe.com/en/support/reference-information/iso-standards/#country-codes).'
        zip:
          type: string
          example: M5H 2N2
          maxLength: 10
          description: This is the postal/zip code in the billing address.
        phone:
          type: string
          example: '555'
          maxLength: 40
          description: This is the customer's telephone number.
    cancelOriginalCreditResponse:
      type: object
      required:
        - id
        - txnTime
        - status
        - links
      properties:
        id:
          type: string
          description: 'This is the ID of the OriginalCredit.'
          example: 25f6dadf-176a-415f-95c9-6ff39ff697ba
          maxLength: 36
          readOnly: true
        txnTime:
          type: string
          description: This is the date and time the transaction was processed.
          example: '2017-12-11T16:33:49Z'
          readOnly: true
        status:
          type: string
          description: This is the status of the OriginalCredit.
          example: CANCELLED
        links:
          type: array
          items:
            $ref: '#/components/schemas/linkOriginalCredit'
      example:
        id: 86dcb68d-cbd0-4878-8da7-ffc0e6554513
        txnTime: '2017-02-14T15:12:18Z'
        status: CANCELLED
        links:
          - rel: self
            href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/originalcredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513'
      x-internal: true
    cancelRefundResponse:
      required:
        - id
        - txnTime
        - status
        - links
      type: object
      properties:
        id:
          type: string
          description: This is the ID of the Refund.
          example: 25f6dadf-176a-415f-95c9-6ff39ff697ba
          maxLength: 36
          readOnly: true
        txnTime:
          type: string
          description: This is the date and time the transaction was processed.
          example: '2017-12-11T16:33:49Z'
          readOnly: true
        status:
          type: string
          description: This is the status of the Refund.
          example: CANCELLED
        links:
          type: array
          items:
            $ref: '#/components/schemas/linkRefund'
      example:
        id: d1fb46ee-2736-4ef5-a724-f263ace75374
        txnTime: '2017-02-14T15:12:18Z'
        status: CANCELLED
        links:
          - rel: self
            href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/refunds/d1fb46ee-2736-4ef5-a724-f263ace75374'
      x-internal: true
    cancelRequest:
      type: object
      properties:
        status:
          enum:
            - CANCELLED
          description: This is the status of transaction you want to change.
          type: string
          example: CANCELLED
      required:
        - status
      x-internal: true
    cancelSettlementResponse:
      required:
        - id
        - txnTime
        - status
        - links
      type: object
      properties:
        id:
          type: string
          description: 'This is the ID of the Settlement.'
          example: 25f6dadf-176a-415f-95c9-6ff39ff697ba
          maxLength: 36
          readOnly: true
        txnTime:
          type: string
          description: This is the date and time the transaction was processed.
          example: '2017-12-11T16:33:49Z'
          readOnly: true
        status:
          type: string
          description: This is the status of the Settlement.
          example: CANCELLED
        links:
          type: array
          items:
            $ref: '#/components/schemas/linkSettlement'
      example:
        id: d1fb46ee-2736-4ef5-a724-f263ace75373
        txnTime: '2017-02-14T15:12:18Z'
        status: CANCELLED
        links:
          - rel: self
            href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/settlements/d1fb46ee-2736-4ef5-a724-f263ace75373'
      x-internal: true
    cancelStandaloneCreditResponse:
      required:
        - id
        - txnTime
        - status
        - links
      type: object
      properties:
        id:
          type: string
          description: 'This is the ID of the StandaloneCredit.'
          example: 25f6dadf-176a-415f-95c9-6ff39ff697ba
          readOnly: true
          maxLength: 36
        txnTime:
          type: string
          description: This is the date and time the transaction was processed.
          example: '2017-12-11T16:33:49Z'
          readOnly: true
        status:
          type: string
          description: This is the status of the StandaloneCredit.
        links:
          type: array
          items:
            $ref: '#/components/schemas/linkStandaloneCredit'
          description: ''
      example:
        id: 86dcb68d-cbd0-4878-8da7-ffc0e6554513
        txnTime: '2017-02-14T15:12:18Z'
        status: CANCELLED
        links:
          - rel: self
            href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/standalonecredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513'
      x-internal: true
    card:
      oneOf:
        - $ref: '#/components/schemas/cardWithToken'
        - $ref: '#/components/schemas/cardWithNumber'
        - $ref: '#/components/schemas/cardResponse'
        - $ref: '#/components/schemas/cardWithNetworkTokenRequest'
        - $ref: '#/components/schemas/cardWithNetworkTokenResponse'
    cardExpiry:
      type: object
      description: 'This is the card''s [expiry date](/schemas/cardExpiry).'
      properties:
        month:
          type: number
          description: This is the card expiry month.
          example: 12
          minimum: 1
          maximum: 12
        year:
          type: number
          description: This is the card expiry year.
          minimum: 1900
          maximum: 9999
          example: 2020
      required:
        - month
        - year
      x-examples:
        Card expiry example:
          cardExpiry:
            month: '12'
            year: '2020'
    cardResponse:
      type: object
      example:
        type: VI
        lastDigits: '1111'
        cardExpiry:
          month: 12
          year: 2021
      description: 'This is the [card](/schemas/card) information returned in the response.'
      properties:
        type:
          type: string
          description: |-
            This is the type of card used for the request, returned in the response.
            Possible values are:
               - AM - American Express
               - DI - Discover
               - JC - JCB
               - MC - Mastercard
               - MD - Maestro
               - SO - Solo
               - VI - Visa
               - VD - Visa Debit
               - VE - Visa Electron
        lastDigits:
          type: string
          description: This is the last four digits of the card used for the request.
        cardExpiry:
          $ref: '#/components/schemas/cardExpiry'
      required:
        - type
        - lastDigits
        - cardExpiry
      readOnly: true
      x-internal: true
      title: Card response
      x-examples:
        Example 1:
          type: VI
          lastDigits: '1111'
          cardExpiry:
            month: 12
            year: 2021
    cardWithNumber:
      type: object
      description: 'These are the details of the [card](/schemas/card) used for the request. Only one **card** object can be included in the request.'
      properties:
        cardNum:
          type: string
          description: This is the card number used for the request.
          example: '4111111111111111'
          minLength: 8
          maxLength: 20
        cardExpiry:
          allOf:
            - $ref: '#/components/schemas/cardExpiry'
        cvv:
          type: string
          description: This is the 3- or 4-digit security code that appears on the card following the card number.
          example: '123'
          minLength: 3
          maxLength: 4
        track1:
          type: string
          description: |-
            This is Track 1 information read from the card's magnetic stripe.

            **Note**: Track 1 data is applicable only for Card Present Transactions.
            It is not required for Card-Not-Present Transactions.
        track2:
          type: string
          description: |-
            This is Track 2 information read from the card's magnetic stripe.

            **Note**: Track 2 data is applicable only for Card Present Transactions.
            It is not required for Card-Not-Present Transactions.
      required:
        - cardNum
        - cardExpiry
      writeOnly: true
      x-examples:
        Card example:
          card:
            cardNum: '4111111111111111'
            cardExpiry:
              month: 2
              year: 2019
      x-internal: true
      title: Card with number
    cardWithToken:
      type: object
      description: 'This is the payment token that represents the [card](/schemas/card) used for the request. Only one **card** object can be included in the request.'
      x-internal: true
      properties:
        paymentToken:
          type: string
          description: This is the payment token representing the card.
          example: LTEyMzYzMjQ3ODg
          maxLength: 80
        cvv:
          type: string
          description: This is the 3- or 4-digit security code that appears on the card following the card number.
          example: '123'
          minLength: 3
          maxLength: 4
      required:
        - paymentToken
      writeOnly: true
      title: Card with token
    carRentalDetails:
      title: carRentalDetails
      type: object
      description: |-
        Contains information about your car rental.

        >**Note:** This object is only for Car rental Merchants.

        >**Note:** This field has to be passed only in case of card transactions.
      x-examples:
        Example 1:
          rentalAgreementNumber: '123456789'
          renterName: Renter Name
          rentalDays: 7
          noShow: false
          extraCharges:
            - GASOLINE
            - MILEAGE
            - LATE_RETURN
            - ONE_WAY_SERVICE_FEE
            - DRIVING_VIOLATION
          customerServicePhone: '8311234567'
          returnDetails:
            date: '2023-12-20'
            location: Location
            country: US
            city: New York
            state: NWY
          pickupDetails:
            date: '2023-12-20'
            location: Rental Agency
            country: US
            city: New York
            state: NWY
          vehicleClass: MINI
      x-stoplight:
        id: 7704cb82f5e4c
      properties:
        rentalAgreementNumber:
          type: string
          description: |-
            The rental agreement number for the car rental.

            * Required during settlement request for integration with TSYS processor
          maxLength: 9
          example: '123456789'
        renterName:
          type: string
          description: |-
            The name of the person renting the car.

            * Required during settlement request with Mastercard or Amex for integration with TSYS processor
          example: Renter Name
          maxLength: 20
        rentalDays:
          type: number
          description: |-
            The total number of days the car is rented for.

            * Required during authorization request for integration with TSYS processor.
        noShow:
          type: boolean
          description: |-
            Indicates if the customer didn't check in for their booking. Possible values:

            - true - the customer didn't check in
            - false - the customer checked in
          x-stoplight:
            id: 0fb4g2onsp3ib
        extraCharges:
          type: array
          description: Indicates if the reservation includes additional ancillary charges.
          items:
            type: string
            enum:
              - GASOLINE
              - MILEAGE
              - LATE_RETURN
              - ONE_WAY_SERVICE_FEE
              - DRIVING_VIOLATION
        customerServicePhone:
          type: string
          description: |-
            The customer service phone number of the car rental company. Allowed numeric characters only.

            * Required during settlement request for integration with TSYS processor
          maxLength: 10
          example: '8311234567'
          minLength: 10
        pickupDetails:
          $ref: '#/components/schemas/carRentalPickupDetails'
        returnDetails:
          $ref: '#/components/schemas/carRentalReturnDetails'
        vehicleClass:
          type: string
          enum:
            - MINI
            - SUBCOMPACT
            - ECONOMY
            - COMPACT
            - MIDSIZE
            - INTERMEDIATE
            - STANDARD
            - FULL_SIZE
            - LUXURY
            - PREMIUM
            - MINIVAN
            - VAN_12_PASSENGERS
            - MOVING_VAN
            - VAN_15_PASSENGERS
            - CARGO_VAN
            - TRUCK_12_FOOT
            - TRUCK_20_FOOT
            - TRUCK_24_FOOT
            - TRUCK_26_FOOT
            - MOPED
            - STRETCH
            - REGULAR
            - UNIQUE
            - EXOTIC
            - SMALL_OR_MEDIUM_TRUCK
            - LARGE_TRUCK
            - SMALL_SUV
            - MEDIUM_SUV
            - LARGE_SUV
            - EXOTIC_SUV
            - FOUR_WHEEL_DRIVE
            - SPECIAL
            - MISCELLANEOUS
          description: |-
            A code that corresponds to the classification 
            of the rental vehicle (e.g., midsize, luxury, cargo van, etc.).

            * Required during settlement request with Amex for integration with TSYS processor
          example: REGULAR
    carRentalDetailsAuthorization:
      title: carRentalDetails
      x-stoplight:
        id: cwd7n1lj40zj0
      type: object
      description: |-
        Contains information about your car rental.

        >**Note:** This object is only for Car rental Merchants.

        >**Note:** This field has to be passed only in case of card transactions.
      x-examples:
        Example 1:
          rentalAgreementNumber: '123456789'
          renterName: Renter Name
          rentalDays: 7
          noShow: false
          extraCharges:
            - GASOLINE
            - MILEAGE
            - LATE_RETURN
            - ONE_WAY_SERVICE_FEE
            - DRIVING_VIOLATION
          customerServicePhone: '8311234567'
          returnDetails:
            date: '2023-12-20'
            location: Location
            country: US
            city: New York
            state: NWY
          pickupDetails:
            date: '2023-12-20'
            location: Rental Agency
            country: US
            city: New York
            state: NWY
          vehicleClass: MINI
      x-internal: true
      properties:
        rentalAgreementNumber:
          type: string
          description: The rental agreement number for the car rental.
          maxLength: 9
          example: '123456789'
        renterName:
          type: string
          description: The name of the person renting the car.
          example: Renter Name
          maxLength: 20
        rentalDays:
          type: number
          description: |-
            The total number of days the car is rented for.

            * Required during authorization request for integration with TSYS processor.
          example: 11
          minimum: 1
          maximum: 99
        extraCharges:
          type: array
          description: Indicates if the reservation includes additional ancillary charges.
          items:
            type: string
            enum:
              - GASOLINE
              - MILEAGE
              - LATE_RETURN
              - ONE_WAY_SERVICE_FEE
              - DRIVING_VIOLATION
        customerServicePhone:
          type: string
          description: The customer service phone number of the car rental company. Allowed numeric characters only.
          maxLength: 10
          example: '8311234567'
          minLength: 10
        pickupDetails:
          $ref: '#/components/schemas/carRentalPickupDetailsAuthorization'
        returnDetails:
          $ref: '#/components/schemas/carRentalReturnDetailsAuthorization'
        vehicleClass:
          type: string
          enum:
            - MINI
            - SUBCOMPACT
            - ECONOMY
            - COMPACT
            - MIDSIZE
            - INTERMEDIATE
            - STANDARD
            - FULL_SIZE
            - LUXURY
            - PREMIUM
            - MINIVAN
            - VAN_12_PASSENGERS
            - MOVING_VAN
            - VAN_15_PASSENGERS
            - CARGO_VAN
            - TRUCK_12_FOOT
            - TRUCK_20_FOOT
            - TRUCK_24_FOOT
            - TRUCK_26_FOOT
            - MOPED
            - STRETCH
            - REGULAR
            - UNIQUE
            - EXOTIC
            - SMALL_OR_MEDIUM_TRUCK
            - LARGE_TRUCK
            - SMALL_SUV
            - MEDIUM_SUV
            - LARGE_SUV
            - EXOTIC_SUV
            - FOUR_WHEEL_DRIVE
            - SPECIAL
            - MISCELLANEOUS
          description: |-
            A code that corresponds to the classification 
            of the rental vehicle (e.g., midsize, luxury, cargo van, etc.).
          example: REGULAR
      required:
        - rentalDays
    carRentalDetailsSettlement:
      title: carRentalDetails
      x-stoplight:
        id: zhmd3esaoiiih
      type: object
      description: |-
        Contains information about your car rental.

        >**Note:** This object is only for Car rental Merchants.

        >**Note:** This field has to be passed only in case of card transactions.
      x-examples:
        Example 1:
          rentalAgreementNumber: '123456789'
          renterName: Renter Name
          rentalDays: 7
          noShow: false
          extraCharges:
            - GASOLINE
            - MILEAGE
            - LATE_RETURN
            - ONE_WAY_SERVICE_FEE
            - DRIVING_VIOLATION
          customerServicePhone: '8311234567'
          returnDetails:
            date: '2023-12-20'
            location: Location
            country: US
            city: New York
            state: NWY
          pickupDetails:
            date: '2023-12-20'
            location: Rental Agency
            country: US
            city: New York
            state: NWY
          vehicleClass: MINI
      x-internal: true
      properties:
        rentalAgreementNumber:
          type: string
          description: |-
            The rental agreement number for the car rental.

            * Required during settlement request for integration with TSYS processor
          maxLength: 9
          example: '123456789'
        renterName:
          type: string
          description: |-
            The name of the person renting the car.

            * Required during settlement request with Mastercard or Amex for integration with TSYS processor
          example: Renter Name
          maxLength: 20
        rentalDays:
          type: number
          description: The total number of days the car is rented for.
          minimum: 1
          maximum: 99
          example: 11
        customerServicePhone:
          type: string
          description: |-
            The customer service phone number of the car rental company. Allowed numeric characters only.

            * Required during settlement request for integration with TSYS processor
          maxLength: 10
          example: '8311234567'
          minLength: 10
        pickupDetails:
          $ref: '#/components/schemas/carRentalPickupDetailsSettlement'
        returnDetails:
          $ref: '#/components/schemas/carRentalReturnDetailsSettlement'
        vehicleClass:
          type: string
          enum:
            - MINI
            - SUBCOMPACT
            - ECONOMY
            - COMPACT
            - MIDSIZE
            - INTERMEDIATE
            - STANDARD
            - FULL_SIZE
            - LUXURY
            - PREMIUM
            - MINIVAN
            - VAN_12_PASSENGERS
            - MOVING_VAN
            - VAN_15_PASSENGERS
            - CARGO_VAN
            - TRUCK_12_FOOT
            - TRUCK_20_FOOT
            - TRUCK_24_FOOT
            - TRUCK_26_FOOT
            - MOPED
            - STRETCH
            - REGULAR
            - UNIQUE
            - EXOTIC
            - SMALL_OR_MEDIUM_TRUCK
            - LARGE_TRUCK
            - SMALL_SUV
            - MEDIUM_SUV
            - LARGE_SUV
            - EXOTIC_SUV
            - FOUR_WHEEL_DRIVE
            - SPECIAL
            - MISCELLANEOUS
          description: |-
            A code that corresponds to the classification 
            of the rental vehicle (e.g., midsize, luxury, cargo van, etc.).

            * Required during settlement request with Amex for integration with TSYS processor
          example: REGULAR
      required:
        - rentalAgreementNumber
        - customerServicePhone
    carRentalPickupDetails:
      title: carRentalPickupDetails
      type: object
      description: |-
        Contains pickup details information for car rental

        **Note** This object is only for Car Rental Merchants
      x-examples:
        Example 1:
          date: '2023-12-20'
          time: '2024-07-04T05:50:37Z'
          location: Rental Agency
          country: US
          city: New York
          state: NWY
      x-stoplight:
        id: d6503244462ef
      properties:
        date:
          type: string
          description: |-
            The local date when the vehicle was rented and/or picked up. Date format = YYYY-MM-DD, ISO 8601 expected.

            _UTC Date Format_

            * Required during settlement request for integration with TSYS processor
          format: date
          example: '2023-12-20'
        time:
          type: string
          format: date-time
          example: '2024-07-04T05:50:37Z'
          description: |-
            The local date and time when the vehicle was rented and/or picked up. Date format = YYYY-MM-DDTHH:MM:SSZ, ISO 8601 expected.

            * Required during settlement request with Amex for integration with TSYS processor.
        location:
          type: string
          description: |-
            Тhe name of the business location where the rented vehicle was picked up. In most cases, this is the rental agency's business name that appears on the storefront and/or customer receipts, commonly referred to as the DBA (Doing Business As) name. However, if the vehicle was picked up at another location (e.g., a hotel, auto dealership, repair shop, etc.), the name of that location should be used.

            If the name is more than 38 characters, use proper and meaningful abbreviation, when possible. Do not truncate.

            * Required during settlement request with Amex for integration with TSYS processor
          maxLength: 38
          example: Rental Agency
        country:
          type: string
          example: US
          description: |-
            The country of the location where the vehicle was rented and/or picked up.

            * Required during settlement request with Amex for integration with TSYS processor
          maxLength: 2
          minLength: 2
        city:
          type: string
          maxLength: 18
          example: New York
          description: |-
            The name of the city, town, or village where the vehicle was rented and/or picked up.

            * Required during settlement request with Amex for integration with TSYS processor
        state:
          type: string
          maxLength: 3
          example: NWY
          description: |-
            The region code that corresponds to the state, province, or other country subdivision where the vehicle was rented and/or picked up.

            See [Province Codes](https://developer.paysafe.com/en/support/reference-information/codes/#province-codes) or [State Codes](https://developer.paysafe.com/en/support/reference-information/codes/#state-codes) for Canada or the United States.

            * Required during settlement request with Amex for integration with TSYS processor
          minLength: 2
    carRentalPickupDetailsAuthorization:
      title: carRentalPickupDetails
      x-stoplight:
        id: x3eud1gd1odvm
      type: object
      description: |-
        Contains pickup details information for car rental

        **Note** This object is only for Car Rental Merchants
      x-examples:
        Example 1:
          date: '2023-12-20'
          time: '2024-07-04T05:50:37Z'
          location: Rental Agency
          country: US
          city: New York
          state: NWY
      x-internal: true
      properties:
        date:
          type: string
          description: |-
            The local date when the vehicle was rented and/or picked up. Date format = YYYY-MM-DD, ISO 8601 expected.

            _UTC Date Format_
          format: date
          example: '2023-12-20'
        time:
          type: string
          format: date-time
          example: '2024-07-04T05:50:37Z'
          description: 'The local date and time when the vehicle was rented and/or picked up. Date format = YYYY-MM-DDTHH:MM:SSZ, ISO 8601 expected.'
        location:
          type: string
          description: |-
            Тhe name of the business location where the rented vehicle was picked up. In most cases, this is the rental agency's business name that appears on the storefront and/or customer receipts, commonly referred to as the DBA (Doing Business As) name. However, if the vehicle was picked up at another location (e.g., a hotel, auto dealership, repair shop, etc.), the name of that location should be used.

            If the name is more than 38 characters, use proper and meaningful abbreviation, when possible. Do not truncate.
          maxLength: 38
          example: Rental Agency
        country:
          type: string
          example: US
          description: |
            The country of the location where the vehicle was rented and/or picked up.
          maxLength: 2
          minLength: 2
        city:
          type: string
          maxLength: 18
          example: New York
          description: 'The name of the city, town, or village where the vehicle was rented and/or picked up.'
        state:
          type: string
          maxLength: 3
          example: NWY
          description: |-
            The region code that corresponds to the state, province, or other country subdivision where the vehicle was rented and/or picked up.

            See [Province Codes](https://developer.paysafe.com/en/support/reference-information/codes/#province-codes) or [State Codes](https://developer.paysafe.com/en/support/reference-information/codes/#state-codes) for Canada or the United States.
          minLength: 2
    carRentalPickupDetailsSettlement:
      title: carRentalPickupDetails
      x-stoplight:
        id: pohif5gfgsigt
      type: object
      description: |-
        Contains pickup details information for car rental

        **Note** This object is only for Car Rental Merchants
      x-examples:
        Example 1:
          date: '2023-12-20'
          time: '2024-07-04T05:50:37Z'
          location: Rental Agency
          country: US
          city: New York
          state: NWY
      x-internal: true
      properties:
        date:
          type: string
          description: |-
            The local date when the vehicle was rented and/or picked up. Date format = YYYY-MM-DD, ISO 8601 expected.

            _UTC Date Format_

            * Required during settlement request for integration with TSYS processor.
          format: date
          example: '2023-12-20'
        time:
          type: string
          format: date-time
          example: '2024-07-04T05:50:37Z'
          description: |-
            The local date and time when the vehicle was rented and/or picked up. Date format = YYYY-MM-DDTHH:MM:SSZ, ISO 8601 expected.

            * Required during settlement request with Amex for integration with TSYS processor
        location:
          type: string
          description: |-
            Тhe name of the business location where the rented vehicle was picked up. In most cases, this is the rental agency's business name that appears on the storefront and/or customer receipts, commonly referred to as the DBA (Doing Business As) name. However, if the vehicle was picked up at another location (e.g., a hotel, auto dealership, repair shop, etc.), the name of that location should be used.

            If the name is more than 38 characters, use proper and meaningful abbreviation, when possible. Do not truncate.

            * Required during settlement request with Amex for integration with TSYS processor
          maxLength: 38
          example: Rental Agency
        country:
          type: string
          example: US
          description: |-
            The country of the location where the vehicle was rented and/or picked up.

            * Required during settlement request with Amex for integration with TSYS processor
          maxLength: 2
          minLength: 2
        city:
          type: string
          maxLength: 18
          example: New York
          description: |-
            The name of the city, town, or village where the vehicle was rented and/or picked up.

            * Required during settlement request with Amex for integration with TSYS processor
        state:
          type: string
          maxLength: 3
          example: NWY
          description: |-
            The region code that corresponds to the state, province, or other country subdivision where the vehicle was rented and/or picked up.

            See [Province Codes](https://developer.paysafe.com/en/support/reference-information/codes/#province-codes) or [State Codes](https://developer.paysafe.com/en/support/reference-information/codes/#state-codes) for Canada or the United States.

            * Required during settlement request with Amex for integration with TSYS processor
          minLength: 2
      required:
        - date
    carRentalReturnDetails:
      title: carRentalReturnDetails
      type: object
      description: |-
        Contains return details information for car rental

        **Note** This object is only for Car Rental Merchants
      x-examples:
        Example 1:
          date: '2023-12-20'
          time: '2024-07-04T05:50:37Z'
          location: Location
          country: US
          city: New York
          state: NWY
      x-stoplight:
        id: 433498c6bfb15
      properties:
        date:
          type: string
          description: |-
            The last date to return the car by. Date format = YYYY-MM-DD, ISO 8601 expected.

            _UTC Date Format_

            * Required during settlement request for integration with TSYS processor
          format: date
          example: '2023-12-20'
        time:
          type: string
          format: date-time
          example: '2024-07-04T05:50:37Z'
          description: |
            The last date and time to return the car by. Date format = YYYY-MM-DDTHH:MM:SSZ, ISO 8601 expected.

            * Required during settlement request with Amex for integration with TSYS processor
        location:
          type: string
          description: |-
            The agency code, phone number, or address abbreviation.

            * Required during settlement request with Mastercard for integration with TSYS processor
          maxLength: 10
          example: Location
        country:
          type: string
          description: |-
            The country of the location where the vehicle must be returned.

            * Required during settlement request with Mastercard or Amex for integration with TSYS processor
          example: US
          maxLength: 2
          minLength: 2
        city:
          type: string
          description: |-
            The name of the city, town, or village where the vehicle must be returned.

            * Required during settlement request with Mastercard or Amex for integration with TSYS processor
          maxLength: 18
          example: New York
        state:
          type: string
          description: |-
            The region code that corresponds to the state, province, or other country subdivision where the vehicle must be returned.

            See [Province Codes](https://developer.paysafe.com/en/support/reference-information/codes/#province-codes) or [State Codes](https://developer.paysafe.com/en/support/reference-information/codes/#state-codes) for Canada or the United States.

            * Required during settlement request with Amex for integration with TSYS processor
          maxLength: 3
          example: NWY
          minLength: 2
    carRentalReturnDetailsAuthorization:
      title: carRentalReturnDetails
      x-stoplight:
        id: km03519uyd343
      type: object
      description: |-
        Contains return details information for car rental

        **Note** This object is only for Car Rental Merchants
      x-examples:
        Example 1:
          date: '2023-12-20'
          time: '2024-07-04T05:50:37Z'
          location: Location
          country: US
          city: New York
          state: NWY
      x-internal: true
      properties:
        date:
          type: string
          description: |-
            The last date to return the car by. Date format = YYYY-MM-DD, ISO 8601 expected.

            _UTC Date Format_
          format: date
          example: '2023-12-20'
        time:
          type: string
          format: date-time
          example: '2024-07-04T05:50:37Z'
          description: 'The local date and time when the vehicle was rented and/or picked up. Date format = YYYY-MM-DDTHH:MM:SSZ, ISO 8601 expected.'
        location:
          type: string
          description: 'The agency code, phone number, or address abbreviation.'
          maxLength: 10
          example: Location
        country:
          type: string
          description: The country of the location where the vehicle must be returned.
          example: US
          maxLength: 2
          minLength: 2
        city:
          type: string
          description: 'The name of the city, town, or village where the vehicle must be returned.'
          maxLength: 18
          example: New York
        state:
          type: string
          description: |-
            The region code that corresponds to the state, province, or other country subdivision where the vehicle must be returned.

            See [Province Codes](https://developer.paysafe.com/en/support/reference-information/codes/#province-codes) or [State Codes](https://developer.paysafe.com/en/support/reference-information/codes/#state-codes) for Canada or the United States.
          maxLength: 3
          example: NWY
          minLength: 2
    carRentalReturnDetailsSettlement:
      title: carRentalReturnDetails
      x-stoplight:
        id: c3lk1rhxjtzav
      type: object
      description: |-
        Contains return details information for car rental

        **Note** This object is only for Car Rental Merchants
      x-examples:
        Example 1:
          date: '2023-12-20'
          time: '2024-07-04T05:50:37Z'
          location: Location
          country: US
          city: New York
          state: NWY
      x-internal: true
      properties:
        date:
          type: string
          description: |-
            The last date to return the car by. Date format = YYYY-MM-DD, ISO 8601 expected.

            _UTC Date Format_

            * Required during settlement request for integration with TSYS processor
          format: date
          example: '2023-12-20'
        time:
          type: string
          format: date-time
          example: '2024-07-04T05:50:37Z'
          description: |-
            The local date and time when the vehicle was rented and/or picked up. Date format = YYYY-MM-DDTHH:MM:SSZ, ISO 8601 expected.

            * Required during settlement request with Amex for integration with TSYS processor
        location:
          type: string
          description: |-
            The agency code, phone number, or address abbreviation.

            * Required during settlement request with Mastercard for integration with TSYS processor
          maxLength: 10
          example: Location
        country:
          type: string
          description: |-
            The country of the location where the vehicle must be returned.

            * Required during settlement request with Mastercard or Amex for integration with TSYS processor
          example: US
          maxLength: 2
          minLength: 2
        city:
          type: string
          description: |-
            The name of the city, town, or village where the vehicle must be returned.

            * Required during settlement request with Mastercard or Amex for integration with TSYS processor
          maxLength: 18
          example: New York
        state:
          type: string
          description: |-
            The region code that corresponds to the state, province, or other country subdivision where the vehicle must be returned.

            See [Province Codes](https://developer.paysafe.com/en/support/reference-information/codes/#province-codes) or [State Codes](https://developer.paysafe.com/en/support/reference-information/codes/#state-codes) for Canada or the United States.

            * Required during settlement request with Amex for integration with TSYS processor
          maxLength: 3
          example: NWY
          minLength: 2
      required:
        - date
    completeAuthorizationRequest:
      type: object
      properties:
        status:
          enum:
            - COMPLETED
            - CANCELLED
          type: string
          description: This is the status to which you want to change the Authorization (COMPLETED or CANCELLED).
          example: COMPLETED
      required:
        - status
      example:
        status: COMPLETED
      x-internal: true
    completeAuthorizationResponse:
      required:
        - links
        - id
        - amount
        - txnTime
        - status
        - settleWithAuth
        - availableToSettle
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
          description: ''
        id:
          type: string
          description: 'This is the ID of the Authorization.'
          example: 25f6dadf-176a-415f-95c9-6ff39ff697ba
          maxLength: 36
          readOnly: true
        amount:
          type: number
          description: This is the amount of the request, in minor units.
          minimum: 0
          maximum: 99999999999
        txnTime:
          type: string
          description: This is the date and time the transaction was processed.
          example: '2017-12-11T16:33:49Z'
          readOnly: true
        status:
          type: string
          description: This is the status of the Authorization.
          enum:
            - COMPLETED
            - CANCELLED
        settleWithAuth:
          type: boolean
          description: This indicates whether the request is an Authorization only (no Settlement), or a Purchase.
        availableToSettle:
          type: number
          description: This is the amount of the Authorization remaining to settle, in minor units.
      example:
        links:
          - rel: self
            href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/auths/5f2164fa-7141-40a9-b065-1426243970f1'
        id: d1fb46ee-2736-4ef5-a724-f263ace75373
        amount: 10098
        txnTime: '2017-02-14T15:12:18Z'
        status: COMPLETED
        settleWithAuth: false
        availableToSettle: 10098
      x-internal: true
    computerizedReservationSystem:
      enum:
        - STRT
        - PARS
        - DATS
        - SABR
        - DALA
        - BLAN
        - DERD
        - TUID
      type: string
      description: |-
        Indicates the computerized reservation system used to make the reservation and purchase the ticket. For tickets purchased in Germany, this field should be one of these codes:

        _Conditional: Required only if the ticket is purchased in Germany_

        * `STRT` - Start
        * `PARS` - TWA
        * `DATS` - Delta
        * `SABR` - Sabre
        * `DALA` - Covia-Apollo
        * `BLAN` - Dr. Blank
        * `DERD` - DER
        * `TUID` - TUI
      example: STRT
      x-internal: true
    contentType:
      title: contentType
      x-stoplight:
        id: gx3bvvzyw2r2z
      enum:
        - application/json
      type: string
      example: application/json
      x-internal: true
    cruiselineLeg:
      type: object
      description: |-
        Description of the various [cruise line Leg](/schemas/cruiselineLeg) of trip.

        **Note** This object is only for Cruise line Merchants
      x-examples:
        Trip leg request:
          leg:
            serviceClass: F
            departureCity: BDS
            destinationCity: DOM
            fare: 10
            departureDate: '2023-12-15'
      x-stoplight:
        id: 7d31f43d059ab
      properties:
        serviceClass:
          type: string
          description: |-
            Indicates service class (first class, business
            class, etc.). 
            Example values (not limited to):
            - `F` - first class
            - `J` - business class
            - `W` - premium economy class
            - `Y` - economy class,
            * Required during settlement request for integration with TSYS processor
          minLength: 1
          maxLength: 1
        departureCity:
          type: string
          minLength: 3
          maxLength: 3
          description: |-
            Departure City where the trip originates.

            [UN/LOCODE](https://unece.org/trade/cefact/unlocode-code-list-country-and-territory) expected.

            * Required during settlement request for integration with TSYS processor
          example: BDS
        destinationCity:
          type: string
          description: |-
            Destination City where the trip ends.

            [UN/LOCODE](https://unece.org/trade/cefact/unlocode-code-list-country-and-territory) expected.

            * Required during authorization request with AMEX for integration with TSYS processor
            * Required during settlement request with Visa or Mastercard for integration with TSYS processor
          example: BDS
          minLength: 3
          maxLength: 3
        fare:
          type: number
          description: |-
            Indicates the total fare applied to a specific leg.
            * Required during settlement request for integration with TSYS processor
          maximum: 999999999999
          example: 10
        departureDate:
          type: string
          description: 'Date of passenger’s departure for this leg. Date format = YYYY-MM-DD, ISO 8601 expected. UTC date format.'
          example: '2014-01-26'
          format: date
    cruiselineLegAuthorization:
      allOf:
        - $ref: '#/components/schemas/cruiselineLeg'
        - type: object
          properties:
            serviceClass:
              type: string
              description: |-
                Indicates service class (first class, business
                class, etc.). 
                Example values (not limited to):
                - `F` - first class
                - `J` - business class
                - `W` - premium economy class
                - `Y` - economy class
              minLength: 1
              maxLength: 8
            departureCity:
              type: string
              minLength: 3
              maxLength: 3
              description: |-
                Departure City where the trip originates.

                [UN/LOCODE](https://unece.org/trade/cefact/unlocode-code-list-country-and-territory) expected.
              example: BDS
            destinationCity:
              type: string
              description: |-
                Destination City where the trip ends.

                [UN/LOCODE](https://unece.org/trade/cefact/unlocode-code-list-country-and-territory) expected.

                * Required for AMEX in case of integration with TSYS processor
              example: BDS
              minLength: 3
              maxLength: 3
            fare:
              type: number
              description: Indicates the total fare applied to a specific leg.
          required:
            - destinationCity
      description: |-
        Description of the various [cruise line Leg](/schemas/cruiselineLeg) of trip.

        **Note** This object is only for Cruise line Merchants
      x-internal: true
    cruiselineLegSettlement:
      allOf:
        - $ref: '#/components/schemas/cruiselineLeg'
        - type: object
          properties:
            serviceClass:
              type: string
              description: |-
                Indicates service class (first class, business
                class, etc.). 
                Example values (not limited to):
                - `F` - first class
                - `J` - business class
                - `W` - premium economy class
                - `Y` - economy class,
                * Required during settlement request for integration with TSYS processor
              minLength: 1
              maxLength: 8
            departureCity:
              type: string
              minLength: 3
              maxLength: 3
              description: |-
                Departure City where the trip originates.

                [UN/LOCODE](https://unece.org/trade/cefact/unlocode-code-list-country-and-territory) expected.

                * Required during settlement request for integration with TSYS processor
              example: BDS
            destinationCity:
              type: string
              description: |-
                Destination City where the trip ends.

                [UN/LOCODE](https://unece.org/trade/cefact/unlocode-code-list-country-and-territory) expected.

                * Required during settlement request with Visa or Mastercard for integration with TSYS processor
              example: BDS
              minLength: 3
              maxLength: 3
            fare:
              type: number
              description: |-
                Indicates the total fare applied to a specific leg.
                * Required during settlement request in case of integration with TSYS processor
            departureDate:
              type: string
              description: 'Date of passenger’s departure for this leg. Date format = YYYY-MM-DD, ISO 8601 expected. UTC date format.'
              example: '2014-01-26'
              format: date
          required:
            - serviceClass
            - departureCity
            - destinationCity
            - fare
      description: |-
        Description of the various [cruise line Leg](/schemas/cruiselineLeg) of trip.

        **Note** This object is only for Cruise line Merchants
      x-internal: true
    cruiselinePassenger:
      title: cruiselinePassenger
      type: object
      description: |-
        [Cruise line passenger](/schemas/cruiselinePassenger)

        **Note** This object is only for Cruise line Merchants
      properties:
        ticketNumber:
          type: string
          description: Identifies the ticket for this passenger only.
          maxLength: 15
        firstName:
          type: string
          description: Passenger's first name.
          maxLength: 80
        lastName:
          type: string
          description: Passenger's last name.
          maxLength: 80
        phoneNumber:
          type: string
          description: Passenger's phone number.
          maxLength: 40
        passengerCode:
          type: string
          description: Code that identifies a type of passenger. For example 'INF' which indicates a child travelling on parent's lap.
          maxLength: 10
          example: INF
        gender:
          type: string
          description: |-
            Passenger gender.
            * `M` - Male
            * `F` - Female
            * `O` - Other
            * `N` - Not specified
          enum:
            - M
            - F
            - O
            - 'N'
    cruiselinePassengers:
      type: object
      description: |-
        A grouping of up to ten [cruise line passengers](/schemas/cruiselinePassengers).

        **Note** This object is only for Cruise line Merchants
      properties:
        passenger1:
          $ref: '#/components/schemas/cruiselinePassenger'
        passenger2:
          $ref: '#/components/schemas/cruiselinePassenger'
        passenger3:
          $ref: '#/components/schemas/cruiselinePassenger'
        passenger4:
          $ref: '#/components/schemas/cruiselinePassenger'
        passenger5:
          $ref: '#/components/schemas/cruiselinePassenger'
        passenger6:
          $ref: '#/components/schemas/cruiselinePassenger'
        passenger7:
          $ref: '#/components/schemas/cruiselinePassenger'
        passenger8:
          $ref: '#/components/schemas/cruiselinePassenger'
        passenger9:
          $ref: '#/components/schemas/cruiselinePassenger'
        passenger10:
          $ref: '#/components/schemas/cruiselinePassenger'
      x-stoplight:
        id: b8fdf05732d18
    cruiselineTicket:
      type: object
      description: |-
        Information about the [Cruise line Ticket](/schemas/cruiselineTicket) Number and if the ticket is restricted.
        * Required during settlement

        **Note** This object is only for Cruise line Merchants
      x-stoplight:
        id: f136df8dfb18c
      x-examples:
        Example 1:
          ticketNumber: 1234567891011
          isRestrictedTicket: false
      properties:
        ticketNumber:
          type: string
          description: |-
            Cruise Ticket Number.
            * Required during settlement
          minLength: 1
          maxLength: 20
        isRestrictedTicket:
          type: boolean
          description: |-
            Indicates whether this ticket is non-refundable. 
            This entry should be supplied on CPS/Passenger Transport 1 or 2 transactions if the ticket was purchased 
            as a non-refundable ticket. Valid values are: false - No restriction : default, true - Restricted (non-refundable) ticket.
            * Required during settlement request for integration with TSYS processor
          example: true
    cruiselineTicketAuthorization:
      allOf:
        - $ref: '#/components/schemas/cruiselineTicket'
        - type: object
          properties:
            ticketNumber:
              type: string
              description: Cruise Ticket Number.
              minLength: 1
              maxLength: 20
            isRestrictedTicket:
              type: boolean
              description: |-
                Indicates whether this ticket is non-refundable. 
                This entry should be supplied on CPS/Passenger Transport 1 or 2 transactions if the ticket was purchased 
                as a non-refundable ticket. Valid values are: false - No restriction : default, true - Restricted (non-refundable) ticket.
      description: |-
        Information about the [Cruise line Ticket](/schemas/cruiselineTicket) Number and if the ticket is restricted.

        **Note** This object is only for Cruise line Merchants
      x-internal: true
    cruiselineTicketSettlement:
      allOf:
        - $ref: '#/components/schemas/cruiselineTicket'
        - type: object
          properties:
            ticketNumber:
              type: string
              description: |-
                Cruise Ticket Number.
                * Required during settlement
              minLength: 1
              maxLength: 20
            isRestrictedTicket:
              type: boolean
              description: |-
                Indicates whether this ticket is non-refundable. 
                This entry should be supplied on CPS/Passenger Transport 1 or 2 transactions if the ticket was purchased 
                as a non-refundable ticket. Valid values are: false - No restriction : default, true - Restricted (non-refundable) ticket.
                * Required during settlement request for integration with TSYS processor
          required:
            - ticketNumber
            - isRestrictedTicket
      x-internal: true
      description: |-
        Information about the [Cruise line Ticket](/schemas/cruiselineTicket) Number and if the ticket is restricted.

        **Note** This object is only for Cruise line Merchants
    cruiselineTravelDetails:
      type: object
      description: |-
        This is additional information about your [cruise line travel](/schemas/cruiselineTravelDetails).

        __NOTE: This object is only for Cruise line Merchants__
      x-examples:
        cruiselineTravelDetails:
          cruiselineTravelDetails:
            cruiseShipName: Cruise Ship
            passengerName: Joe Smith
            departureDate: 20223-12-15
            returnDate: '2023-12-20'
            country: US
            state: CA
            originCity: Barbados
            roomRate: 1200
            travelPackageApplication: CAR_RENTAL_RESERVATION
            ticket:
              ticketNumber: 1234567891011
              isRestrictedTicket: false
            passengers:
              passenger1:
                ticketNumber: 12J12J1
                firstName: Joe
                lastName: Smith
                phoneNumber: '8888994222'
                passengerCode: INF
                gender: M
            tripLegs:
              leg1:
                serviceClass: F
                departureCity: BDS
                destinationCity: DOM
                fare: 10
                departureDate: '2023-12-15'
              leg2:
                serviceClass: F
                departureCity: DOM
                destinationCity: BDS
                fare: 10
                departureDate: '2023-12-18'
      x-stoplight:
        id: 605a488f1fed6
      properties:
        cruiseShipName:
          type: string
          description: |-
            The ship name booked for the cruise.

            * Required during settlement request with AMEX for integration with TSYS processor
          example: Cruise Ship
          maxLength: 20
        passengerName:
          type: string
          description: |-
            Name of the passenger to whom the ticket was issued.
            * Required during authorization request with AMEX for integration with TSYS processor
            * Required during settlement request with Visa or Mastercard for integration with TSYS processor
          example: John Doe
          minLength: 1
          maxLength: 20
        departureDate:
          type: string
          description: |-
            Date of passenger’s departure. Date format = YYYY-MM-DD, ISO 8601 expected.
            * Required during authorization request with AMEX for integration with TSYS processor
            * Required during settlement request for integration with TSYS processor
            _UTC Date Format_
          example: '2023-12-15'
          format: date
        returnDate:
          type: string
          description: |-
            Date of passenger’s return. Date format = YYYY-MM-DD, ISO 8601 expected.
            * Required during settlement request with AMEX for integration with TSYS processor 
            _UTC Date Format_
          example: '2023-12-20'
          format: date
        country:
          type: string
          description: |-
            This field contains the country code of the cruise location.

            See [Country Codes](https://developer.paysafe.com/en/support/reference-information/codes/#country-codes).

            * Required during settlement request with AMEX for integration with TSYS processor
          example: UС
          maxLength: 2
          minLength: 2
        state:
          type: string
          description: |-
            The region code that corresponds to the state, province, or other country subdivision of the cruise location.

            See [Province Codes](https://developer.paysafe.com/en/support/reference-information/codes/#province-codes) or [State Codes](https://developer.paysafe.com/en/support/reference-information/codes/#state-codes) for Canada or the United States.

            * Required during settlement request with AMEX for integration with TSYS processor
          example: CA
          maxLength: 3
          minLength: 2
        originCity:
          type: string
          description: |-
            Departure City where the trip originates.

            * Required for AMEX in case of integration with TSYS processor
          example: Barbados
          maxLength: 18
        roomRate:
          type: number
          description: |-
            Total cost of the cruise. For onboard purchases or transactions occurring during cruise travel, this field must be zero filled.

            * Required during settlement request with AMEX for integration with TSYS processor
          example: 1200
          maximum: 999999999999
        travelPackageApplication:
          type: string
          description: |-
            Indicates if the package includes car rental, airline flight, both or neither.

            - CAR_RENTAL_RESERVATION - Car rental reservation included
            - AIRLINE_RESERVATION - Airline flight reservation included
            - CAR_RENTAL_AND_AIRLINE_RESERVATION - Both car rental and airline flight reservations included
            - UNKNOWN - Unknown

            * Require during settlement request with AMEX for integration with TSYS processor
          enum:
            - CAR_RENTAL_RESERVATION
            - AIRLINE_RESERVATION
            - CAR_RENTAL_AND_AIRLINE_RESERVATION
            - UNKNOWN
          example: CAR_RENTAL_RESERVATION
        ticket:
          $ref: '#/components/schemas/cruiselineTicket'
        cruiseLinePassengers:
          allOf:
            - $ref: '#/components/schemas/cruiselinePassengers'
        tripLegs:
          allOf:
            - $ref: '#/components/schemas/cruiselineTripLegs'
    cruiselineTravelDetailsAuthorization:
      allOf:
        - $ref: '#/components/schemas/cruiselineTravelDetails'
        - properties:
            cruiseShipName:
              type: string
              description: The ship name booked for the cruise.
              example: Cruise Ship
              maxLength: 20
            passengerName:
              type: string
              description: |-
                Name of the passenger to whom the ticket was issued.
                * Required during authorization request with AMEX for integration with TSYS processor
              example: John Doe
              minLength: 1
              maxLength: 20
            departureDate:
              type: string
              description: |-
                Date of passenger’s departure. Date format = YYYY-MM-DD, ISO 8601 expected.
                * Required during authorization request with AMEX for integration with TSYS processor
                _UTC Date Format_
              example: '2023-12-15'
              format: date
            returnDate:
              type: string
              description: |-
                Date of passenger’s return. Date format = YYYY-MM-DD, ISO 8601 expected.
                _UTC Date Format_
              example: '2023-12-20'
              format: date
            country:
              type: string
              description: |-
                This field contains the country code of the cruise location.

                See [Country Codes](https://developer.paysafe.com/en/support/reference-information/codes/#country-codes).
              example: UС
              maxLength: 2
              minLength: 2
            state:
              type: string
              description: |-
                The region code that corresponds to the state, province, or other country subdivision of the cruise location.

                See [Province Codes](https://developer.paysafe.com/en/support/reference-information/codes/#province-codes) or [State Codes](https://developer.paysafe.com/en/support/reference-information/codes/#state-codes) for Canada or the United States
              example: CA
              maxLength: 2
              minLength: 2
            originCity:
              type: string
              description: |-
                Departure City where the trip originates.

                * Required for AMEX in case of integration with TSYS processor
              example: Barbados
              maxLength: 18
            roomRate:
              type: number
              description: 'Total cost of the cruise. For onboard purchases or transactions occurring during cruise travel, this field must be zero filled.'
              example: 1200
            travelPackageApplication:
              type: string
              description: |-
                Indicates if the package includes car rental, airline flight, both or neither.

                - CAR_RENTAL_RESERVATION - Car rental reservation included
                - AIRLINE_RESERVATION - Airline flight reservation included
                - CAR_RENTAL_AND_AIRLINE_RESERVATION - Both car rental and airline flight reservations included
                - UNKNOWN - Unknown
              enum:
                - CAR_RENTAL_RESERVATION
                - AIRLINE_RESERVATION
                - CAR_RENTAL_AND_AIRLINE_RESERVATION
                - UNKNOWN
              example: CAR_RENTAL_RESERVATION
            ticket:
              $ref: '#/components/schemas/cruiselineTicketAuthorization'
            tripLegs:
              allOf:
                - $ref: '#/components/schemas/cruiselineTripLegsAuthorization'
          required:
            - passengerName
            - departureDate
            - originCity
      type: object
      description: |-
        This is additional information about your [cruise line travel](/schemas/cruiselineTravelDetails).

        __NOTE: This object is only for Cruise line Merchants__
      x-internal: true
      title: ''
    cruiselineTravelDetailsSettlement:
      allOf:
        - $ref: '#/components/schemas/cruiselineTravelDetails'
        - properties:
            cruiseShipName:
              type: string
              description: |-
                The ship name booked for the cruise.

                * Required during settlement request with AMEX for integration with TSYS processor
              example: Cruise Ship
              maxLength: 20
            passengerName:
              type: string
              description: |-
                Name of the passenger to whom the ticket was issued.
                * Required during settlement request with Visa or Mastercard for integration with TSYS processor
              example: John Doe
              minLength: 1
              maxLength: 20
            departureDate:
              type: string
              description: |-
                Date of passenger’s departure. Date format = YYYY-MM-DD, ISO 8601 expected.
                * Required during settlement
                _UTC Date Format_
              example: '2023-12-15'
              format: date
            returnDate:
              type: string
              description: |-
                Date of passenger’s return. Date format = YYYY-MM-DD, ISO 8601 expected.
                * Required during settlement request with AMEX for integration with TSYS processor
                _UTC Date Format_
              example: '2023-12-20'
              format: date
            country:
              type: string
              description: |-
                This field contains the country code of the cruise location.

                See [Country Codes](https://developer.paysafe.com/en/support/reference-information/codes/#country-codes).

                * Required during settlement request with AMEX for integration with TSYS processor
              example: UС
              maxLength: 2
              minLength: 2
            state:
              type: string
              description: |-
                The region code that corresponds to the state, province, or other country subdivision of the cruise location.

                See [Province Codes](https://developer.paysafe.com/en/support/reference-information/codes/#province-codes) or [State Codes](https://developer.paysafe.com/en/support/reference-information/codes/#state-codes) for Canada or the United States.

                * Required during settlement request with AMEX for integration with TSYS processor
              example: CA
              maxLength: 2
              minLength: 2
            originCity:
              type: string
              description: |-
                Departure City where the trip originates.

                * Required for AMEX in case of integration with TSYS processor
              example: Barbados
              maxLength: 18
            roomRate:
              type: number
              description: |-
                Total cost of the cruise. For onboard purchases or transactions occurring during cruise travel, this field must be zero filled.

                * Required during settlement request with AMEX for integration with TSYS processor
              example: 1200
            travelPackageApplication:
              type: string
              description: |-
                Indicates if the package includes car rental, airline flight, both or neither.

                - CAR_RENTAL_RESERVATION - Car rental reservation included
                - AIRLINE_RESERVATION - Airline flight reservation included
                - CAR_RENTAL_AND_AIRLINE_RESERVATION - Both car rental and airline flight reservations included
                - UNKNOWN - Unknown

                * Required during settlement request with AMEX for integration with TSYS processor
              enum:
                - CAR_RENTAL_RESERVATION
                - AIRLINE_RESERVATION
                - CAR_RENTAL_AND_AIRLINE_RESERVATION
                - UNKNOWN
              example: CAR_RENTAL_RESERVATION
            ticket:
              $ref: '#/components/schemas/cruiselineTicketSettlement'
            tripLegs:
              allOf:
                - $ref: '#/components/schemas/cruiselineTripLegsSettlement'
          required:
            - cruiseShipName
            - passengerName
            - departureDate
            - returnDate
            - country
            - state
            - originCity
            - roomRate
            - travelPackageApplication
            - ticket
      type: object
      description: |-
        This is additional information about your [cruise line travel](/schemas/cruiselineTravelDetails).

        __NOTE: This object is only for Cruise line Merchants__
      x-internal: true
    cruiselineTripLegs:
      type: object
      description: |-
        A grouping of up to four [cruise line legs](/schemas/cruiselineTripLegs). Each leg provides detailed itinerary data.

        **Note** This object is only for Cruise line Merchants
      x-stoplight:
        id: ba974c70e8eec
      properties:
        leg1:
          $ref: '#/components/schemas/cruiselineLeg'
        leg2:
          $ref: '#/components/schemas/cruiselineLeg'
        leg3:
          $ref: '#/components/schemas/cruiselineLeg'
        leg4:
          $ref: '#/components/schemas/cruiselineLeg'
    cruiselineTripLegsAuthorization:
      type: object
      description: |-
        A grouping of up to four [cruise line legs](/schemas/cruiselineLeg). Each leg provides detailed itinerary data.

        **Note** This object is only for Cruise line Merchants
      x-stoplight:
        id: 375855106294e
      properties:
        leg1:
          $ref: '#/components/schemas/cruiselineLegAuthorization'
        leg2:
          $ref: '#/components/schemas/cruiselineLegAuthorization'
        leg3:
          $ref: '#/components/schemas/cruiselineLegAuthorization'
        leg4:
          $ref: '#/components/schemas/cruiselineLegAuthorization'
      x-internal: true
    cruiselineTripLegsSettlement:
      type: object
      description: |-
        A grouping of up to four [cruise line legs](/schemas/cruiselineLeg). Each leg provides detailed itinerary data.

        **Note** This object is only for Cruise line Merchants
      x-stoplight:
        id: 8d21c45bba8b2
      properties:
        leg1:
          $ref: '#/components/schemas/cruiselineLegSettlement'
        leg2:
          $ref: '#/components/schemas/cruiselineLegSettlement'
        leg3:
          $ref: '#/components/schemas/cruiselineLegSettlement'
        leg4:
          $ref: '#/components/schemas/cruiselineLegSettlement'
      x-internal: true
    cvvVerification:
      x-stoplight:
        id: qvulqq708iz8v
      type: string
      enum:
        - MATCH
        - NO_MATCH
        - NOT_PROCESSED
        - UNKNOWN
      description: This is the response to the cvv submitted with the transaction request.
      example: MATCH
      readOnly: true
      x-internal: true
    dateOfBirth:
      type: object
      description: 'This is the recipient''s [date of birth](/schemas/dateOfBirth).'
      properties:
        day:
          type: number
          description: This is the day of birth.
          example: 29
          minimum: 1
          maximum: 31
        month:
          type: number
          description: This is the month of birth.
          example: 12
          minimum: 1
          maximum: 12
        year:
          type: number
          description: This is the year of birth.
          minimum: 1900
          maximum: 9999
          example: 2020
      required:
        - day
        - month
        - year
      x-examples:
        Example 1:
          dateOfBirth:
            day: '29'
            month: '12'
            year: '1989'
    discretionaryData:
      x-stoplight:
        id: eja0uj7kk8cb2
      type: object
      properties:
        field1:
          type: string
          description: Custom field 1.
          example: CustomField1
          maxLength: 35
        field2:
          type: string
          description: Custom field 2.
          example: CustomField2
          maxLength: 20
        field3:
          type: string
          description: Custom field 3.
          example: CustomField3
          maxLength: 20
      description: '[Discretionary Data](/schemas/discretionaryData) consists of three user-defined data fields containing  additional information about your card acquirer. Contact your account manager for more information.'
    error:
      type: object
      properties:
        code:
          type: string
          description: This is the error code.
          example: '1000'
        message:
          type: string
          description: This is a description of the error.
          example: An internal error occurred.
        details:
          type: array
          items:
            type: string
          description: These are details of any parameter value errors.
        fieldErrors:
          type: array
          description: These are fields with invalid data.
          items:
            $ref: '#/components/schemas/fieldError'
        additionalDetails:
          type: array
          description: This is an optional field that provides additional data in case of a reject.
          items:
            $ref: '#/components/schemas/additionalDetail'
        links:
          type: array
          description: 'This is one or more rel/href pairs, where rel is "errorinfo", and href is the Developer Center URL containing a description of the error.'
          items:
            $ref: '#/components/schemas/linkError'
      readOnly: true
      description: 'Information about the [error](/schemas/error).'
    externalAuthDetails:
      title: externalAuthDetails
      x-stoplight:
        id: hpmn605eqko0m
      type: object
      description: The object containing the details required for an externally authorized transaction.
      properties:
        txnDateTime:
          type: string
          example: '2023-07-04T05:50:37Z'
          description: This is the datetime of when the external authorization was processed.
        cardSchemeTransactionId:
          type: string
          maxLength: 50
          example: AGZZ4437466470
          description: The ID returned by the card schemes when the external authorization was processed. The value must not be blank.
        authCode:
          type: string
          maxLength: 50
          example: '288661'
          description: This is the Authorization code assigned by the issuing bank when the external authorization was processed. The value must not be blank.
        stan:
          type: string
          maxLength: 50
          example: '753159'
          description: This is the system trace audit number of the external authorization. The value must not be blank.
        cvvVerification:
          type: string
          description: This is the response to the cvv submitted with the external authorization.
          enum:
            - MATCH
            - NO_MATCH
            - NOT_PROCESSED
            - UNKNOWN
      required:
        - txnDateTime
        - cardSchemeTransactionId
        - authCode
      x-examples:
        Example:
          txnDateTime: '2023-03-28T09:45:41Z'
          cardSchemeTransactionId: AGZZ4437466470
          authCode: '288661'
          stan: '753159'
          cvvVerification: MATCH
      x-internal: false
    fieldError:
      x-internal: true
      type: object
      properties:
        field:
          type: string
          description: This is the field with invalid data.
        error:
          type: string
          description: This is the description of the error.
    flight:
      type: object
      description: |-
        Operating Carrier Code and the Number of the airline [flight](/schemas/flight) to be taken on 
        Leg of the trip (excluding the carrier code).
        * Required during authorization request with AMEX for integration with TSYS processor
        * Required during settlement request with Visa or Mastercard for integration with TSYS processor
      properties:
        carrierCode:
          type: string
          description: |-
            Operating Carrier Code; the standard abbreviation code indicating name of the operating carrier like United Airlines, Jet Blue, etc.
            * Required during authorization request with AMEX for integration with TSYS processor
            * Required during settlement request with Visa or Mastercard for integration with TSYS processor
          minLength: 2
          maxLength: 2
          example: LH
        flightNumber:
          type: string
          description: |-
            Number of the airline flight to be taken on Leg of the trip excluding the carrier code.
            * Required during settlement request for integration with TSYS processor
          minLength: 1
          maxLength: 5
          example: '0799'
        airlineName:
          type: string
          description: |-
            Airline full name.
            * Required during settlement request for integration with TSYS processor
          maxLength: 50
          example: Bulgaria Air
        airlineIcaoCode:
          type: string
          description: Airline ICAO code.
          minLength: 3
          maxLength: 3
          example: DLH
    flightAuthorization:
      type: object
      description: |-
        Operating Carrier Code and the Number of the airline [flight](/schemas/flight) to be taken on 
        Leg of the trip (excluding the carrier code).
        * Required during authorization request with AMEX for integration with TSYS processor
      allOf:
        - $ref: '#/components/schemas/flight'
        - type: object
          required:
            - carrierCode
          properties:
            carrierCode:
              type: string
              description: |-
                Operating Carrier Code; the standard abbreviation code indicating name of the operating carrier like United Airlines, Jet Blue, etc.
                * Required during authorization request with AMEX for integration with TSYS processor
            flightNumber:
              type: string
              description: |-
                Number of the airline flight to be taken on Leg of the trip excluding the carrier code.
            airlineName:
              type: string
              description: |-
                Airline full name.
      x-internal: true
    flightSettlement:
      type: object
      description: |-
        Operating Carrier Code and the Number of the airline [flight](/schemas/flight) to be taken on 
        Leg of the trip (excluding the carrier code).
        * Required during settlement request with Visa or Mastercard for integration with TSYS processor
      allOf:
        - $ref: '#/components/schemas/flight'
        - type: object
          required:
            - carrierCode
            - flightNumber
            - airlineName
          properties:
            carrierCode:
              type: string
              description: |-
                Operating Carrier Code; the standard abbreviation code indicating name of the operating carrier like United Airlines, Jet Blue, etc.
                * Required during settlement request with Visa or Mastercard for integration with TSYS processor
            flightNumber:
              type: string
              description: |-
                Number of the airline flight to be taken on Leg of the trip excluding the carrier code.
                * Required during settlement request for integration with TSYS processor
            airlineName:
              type: string
              description: |-
                Airline full name.
                * Required during settlement request for integration with TSYS processor
      x-internal: true
    fundingTransaction:
      type: object
      description: |-
        **Note:** Acquirers and processors do not necessarily support all available MCCs; before integrating, you should contact [Integration Support](https://developer.paysafe.com/en/support/) for details.

        The [fundingTransaction object](/schemas/fundingTransaction) is used to identify authorization requests that are categorized as funding transactions by the merchant in order to provide additional information for the purpose of a transaction. It can be used by merchants registered with MCC 4722, 4829, 6012, 6051, 6211 or 6540. The relevant value will be assigned automatically by the Card API as per the merchant registration with card schemes and his applicable MCC.
        
        Here is the list of options:

        | Funding transaction type | Visa                                                   |Mastercard                      |
        | ---                      |---                                                     |---                             |
        | SVDW_FUNDS_TRANSFER      | Applicable for 4722, 4829, 6012, 6051, 6211 and 6540.  |                                |
        | SDW_WALLET_TRANSFER      | Applicable for 4829, 6012 and 6051.                    | Applicable for 4829 and 6540.  |
        | ACCOUNT_TO_ACCOUNT       | Applicable for 4829, 6012 and 6211.                    |                                |
        | PERSON_TO_PERSON         | Applicable for 4829 and 6012                           |                                |

        **Notes**

        + _**Mandatory elements:**_ 
          - If you want to support Visa AFT and Mastercard Funding, you should perform registration with the Card schemes in advance. Please contact Paysafe's operational support or your account manager in order to receive more information and to begin with the registration process. Please note also that not every processor supports funding transactions for all MCCs listed here.
          - If you send fundingTransaction type value in the authorization request in addition, you must also send profile and billingDetails, as described below:
            - **Profile**
              - firstName
              - lastName
              - merchantCustomerId
            
            - **Billing Details**
              - street
              - city
              - state (If US or Canada)
              - country
              - Zip
            If not, the funding transaction will be declined due to missing data.
          - If you send fundingTransaction type value in the authorization request, but your acquirer doesn't support funding transactions, or your account is not configured (you have not performed the registration process), the transaction will be declined with error: 5040.
          - If you send fundingTransaction type in the authorization request with a value not applicable for your MCC, the transaction will be declined with error: 3068.
          -	If you send fundingTransaction type in the authorization request with a value not part of the list below, the transaction will be declined with error: 5068.
          -	If you send fundingTransaction type value in the authorization request and your account is configured to process funding transactions, but you are not registered to process funding transactions to a specific card brand, the transaction will be successfully processed and processorAppliedType in the response will be "NOT_APPLIED".
        + Suppose you send fundingTransaction type value in the authorization request, and your account is configured to process funding transactions. You are registered to process funding transactions to the respective card brand. In that case, the transaction will be successfully processed, and the processorAppliedType will be equal to the fundingTransaction type provided in the request.
      properties:
        type:
          type: string
          description: 'The fundingTransaction type is included in the request and set by the merchant. Supported funding transaction type values:'
          enum:
            - SVDW_FUNDS_TRANSFER
            - SDW_WALLET_TRANSFER
            - ACCOUNT_TO_ACCOUNT
            - PERSON_TO_PERSON
        processorAppliedType:
          type: string
          description: |-
            The fundingTransaction processorAppliedType value is chosen by Paysafe based on the merchant configuration. 
            It is equal to the one which has been used by Paysafe based on your MCC and registration. If you 
            provide value which is applicable for your MCC but you have been registered for another use case, 
            Paysafe will assign the value you have registered for as use case and will provide it into the
            response as processorAppliedType.
            In case the merchant is not registered in the relevant card scheme system, the processorAppliedValue 
            received into the response will be 'NOT_APPLIED'.
            The processorAppliedType can be seen in the auth response. 
            Supported funding transaction processorAppliedType values: 
            - `SVDW_FUNDS_TRANSFER` - Stored Value Digital Wallet Funds Transfer - Stored Value Digital Wallets operate like prepaid cards by assigning a separate “account” to the customer, which the customer pre-loads with funds using their Visa payment credential, before being able to transact with sellers connected to the digital wallet’s platform or complete a transfer to other users of the wallet’s platform. Generally, customers & sellers are either transacting within the Stored Value Digital Wallet’s proprietary network of connected users, or within the Visa ecosystem if the wallet has attached a Visa product (e.g. a prepaid credential) to the “front” of the wallet, so the wallet uses Visa to make purchases, cash withdrawals etc.
            - `SDW_WALLET_TRANSFER` - Staged Digital Wallet Transfer - Staged Digital Wallets are capable of conducting “back-to-back funding” transactions – also known as a “live-load” or “real-time load” – which permits the customer to undertake transactions with sellers on the digital wallet’s platform when there are not sufficient funds in the digital wallet-assigned account to complete the transaction (which may include a “zero balance”). 
            - `ACCOUNT_TO_ACCOUNT` - Account to Account - Money Transfer (funding of the cardholder’s own account at the same or a different financial institution).
            - `PERSON_TO_PERSON` - Person to Person - Money Transfer (transferring funds to another individual’s non-merchant account).
            - `NOT_APLLIED` - Not processed as funding transaction
            **NOTE:** If more information is required you can contact your account manager.
          maxLength: 25
          enum:
            - SVDW_FUNDS_TRANSFER
            - SDW_WALLET_TRANSFER
            - ACCOUNT_TO_ACCOUNT
            - PERSON_TO_PERSON
            - NOT_APLLIED
          readOnly: true
      x-examples:
        Funding transaction request:
          fundingTransaction:
            type: SVDW_FUNDS_TRANSFER
        Funding transaction response:
          fundingTransaction:
            type: SVDW_FUNDS_TRANSFER
            processorAppliedType: NOT_APPLIED
    gatewayReconciliationId:
      type: string
      description: |-
        Transaction identifier that can be used to reconcile this transaction with the acquirer/processor.
        _Note: Not all processing gateways support this parameter. Contact your account manager for more information_
      maxLength: 255
    getAuthByMerchantRefNumberResponse:
      required:
        - auths
        - links
      type: object
      properties:
        auths:
          type: array
          items:
            $ref: '#/components/schemas/authorization'
          description: ''
        links:
          type: array
          items:
            $ref: '#/components/schemas/linkAuthByMerchantRefNum'
          description: ''
      example:
        auths:
          - id: 7573f618-2f63-45aa-ae96-8412206ca403
            merchantRefNum: merchant 03.24.17_3
            txnTime: '2017-03-24T18:28:28Z'
            status: COMPLETED
            amount: 1000
            settleWithAuth: false
            availableToSettle: 1000
            card:
              type: VI
              lastDigits: '1111'
              cardExpiry:
                month: 2
                year: 2019
            authCode: '180796'
            profile:
              firstName: Joe
              lastName: Smith
              email: Joe.Smith@canada.com
            billingDetails:
              street: 100 Queen Street West
              city: Toronto
              state: 'ON'
              country: CA
              zip: M5H2N2
            customerIp: 204.91.0.12
            keywords:
              - REPEAT CUSTOMER
              - PROFILE
            description: Video purchase
            currencyCode: CAD
            avsResponse: MATCH
            cvvVerification: MATCH
            paymentFacilitator:
              subMerchant:
                id: '123456789'
                name: PayFacSubMerchant
                phone: '478234562331'
                email: payfac@mail.com
                url: www.payfac.com
                address:
                  street: 100 Queen Street West
                  city: London
                  country: GB
                  zip: M5H 2N2 
            links:
              - rel: self
                href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/auths/7573f618-2f63-45aa-ae96-8412206ca403'
        links:
          - rel: self
            href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/auths?merchant 03.24.17_3&startDate=2017-02-24T18:28:28Z&endDate=2017-03-24T18:29:28Z'
      x-internal: true
    getOriginalCreditByMerchantRefNumResponse:
      required:
        - originalcredits
        - links
      type: object
      properties:
        originalcredits:
          type: array
          items:
            $ref: '#/components/schemas/originalCredit'
          description: ''
        links:
          type: array
          items:
            $ref: '#/components/schemas/linkOriginalCreditByMerchantRefNum'
      example:
        originalcredits:
          - id: 86dcb68d-cbd0-4878-8da7-ffc0e6554513
            merchantRefNum: merchant 07.05.17_16
            txnTime: '2017-07-06T19:59:17Z'
            status: PENDING
            amount: 1000
            card:
              type: VI
              lastDigits: '1111'
              cardExpiry:
                month: 2
                year: 2019
            profile:
              firstName: Joe
              lastName: Smith
              email: Joe.Smith@canada.com
            billingDetails:
              street: 100 Queen Street West
              city: Toronto
              state: 'ON'
              country: CA
              zip: M5H2N2
            customerIp: 204.91.0.12
            description: Winning payment from Loto
            currencyCode: CAD
            paymentFacilitator:
              subMerchant:
                id: '123456789'
                name: PayFacSubMerchant
                phone: '478234562331'
                email: payfac@mail.com
                url: www.payfac.com
                address:
                  street: 100 Queen Street West
                  city: London
                  country: GB
                  zip: M5H 2N2
            merchantDescriptor:
              dynamicDescriptor: 'OnlineStore' 
            links:
              - rel: self
                href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/originalcredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513'
        links:
          - rel: self
            href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/originalcredits?merchantRefNum=merchant 07.05.17_16&limit=2&offset=2&startDate=2017-01-14T15:12:18Z&endDate=2017-04-04T15:12:18Z'
      x-internal: true
    getRefundByMerchantRefNumberResponse:
      type: object
      required:
        - refunds
        - links
      properties:
        refunds:
          type: array
          items:
            $ref: '#/components/schemas/refund'
        links:
          type: array
          items:
            $ref: '#/components/schemas/linkRefundByMerchantRefNum'
      example:
        refunds:
          - links:
              - rel: self
                href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/99000/refunds/d1fb46ee-2736-4ef5-a724-f263ace75374'
            id: d1fb46ee-2736-4ef5-a724-f263ace75374
            merchantRefNum: merchant-ABC-123
            amount: 50
            dupCheck: true
            txnTime: '2017-02-14T15:12:18Z'
            status: COMPLETED
            splitpay:
              - linkedAccount: '123124124'
                amount: 505
        links:
          - rel: self
            href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/refunds?merchantRefNum=merchant-ABC-123&limit=2&offset=2&startDate=2017-01-14T15:12:18Z&endDate=2017-04-04T15:12:18Z'
      x-internal: true
    getSettlementByMerchantRefNumberResponse:
      required:
        - settlements
        - links
      type: object
      properties:
        settlements:
          type: array
          items:
            $ref: '#/components/schemas/settlement'
        links:
          type: array
          items:
            $ref: '#/components/schemas/linkSettlementByMerchantRefNum'
      example:
        settlements:
          - links:
              - rel: self
                href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/99000/settlements/d1fb46ee-2736-4ef5-a724-f263ace75373'
            id: d1fb46ee-2736-4ef5-a724-f263ace75373
            merchantRefNum: merchant-ABC-123
            amount: 50
            availableToRefund: 25
            dupCheck: true
            txnTime: '2017-02-14T15:12:18Z'
            status: COMPLETED
            splitpay:
              - linkedAccount: '123124124'
                amount: 505
        links:
          - rel: self
            href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/settlements?merchantRefNum=merchant-ABC-123&limit=2&offset=2&startDate=2017-01-14T15:12:18Z&endDate=2017-04-04T15:12:18Z'
      x-internal: true
    getStandaloneCreditByMerchantRefNumResponse:
      type: object
      required:
        - standalonecredits
        - links
      properties:
        standalonecredits:
          type: array
          items:
            $ref: '#/components/schemas/standaloneCredit'
          description: ''
        links:
          type: array
          items:
            $ref: '#/components/schemas/linkStandaloneCreditByMerchantRefNum'
          description: ''
      example:
        standalonecredits:
          - id: 86dcb68d-cbd0-4878-8da7-ffc0e6554513
            merchantRefNum: merchant 07.05.17_16
            txnTime: '2017-07-06T19:59:17Z'
            status: PENDING
            amount: 1000
            card:
              type: VI
              lastDigits: '1111'
              cardExpiry:
                month: 2
                year: 2019
            profile:
              firstName: Joe
              lastName: Smith
              email: Joe.Smith@canada.com
            billingDetails:
              street: 100 Queen Street West
              city: Toronto
              state: 'ON'
              country: CA
              zip: M5H2N2
            customerIp: 204.91.0.12
            description: Winning payment from Loto
            currencyCode: CAD
            paymentFacilitator:
              subMerchant:
                id: '123456789'
                name: PayFacSubMerchant
                phone: '478234562331'
                email: payfac@mail.com
                url: www.payfac.com
                address:
                  street: 100 Queen Street West
                  city: London
                  country: GB
                  zip: M5H 2N2
            merchantDescriptor:
              dynamicDescriptor: 'OnlineStore' 
            links:
              - rel: self
                href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/standalonecredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513'
        links:
          - rel: self
            href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/standalonecredits?merchantRefNum=merchant 07.05.17_16&limit=2&offset=2&startDate=2017-01-14T15:12:18Z&endDate=2017-04-04T15:12:18Z'
      x-internal: true
    getVerificationsResponseByMerchantRefNum:
      type: object
      required:
        - verifications
        - links
      properties:
        verifications:
          type: array
          items:
            $ref: '#/components/schemas/verification'
          description: ''
        links:
          type: array
          items:
            $ref: '#/components/schemas/linkVerificationsByMerchantRefNum'
          description: ''
      example:
        verifications:
          - id: e50e19a6-8edd-44ec-abc4-18d0a97d51d8
            merchantRefNum: merchant ABC-123
            profile:
              profile:
                firstName: John
                lastName: Smith
                email: jsmith@email.com
            billingDetails:
              billingDetails:
                street: 100 Queen Street West
                city: Toronto
                state: 'ON'
                country: CA
                zip: M5H 2N2
                phone: '555'
            customerIp: 204.91.0.12
            dupCheck: true
            description: This is a Verification transaction.
            card:
              type: VI
              lastDigits: '1111'
              cardExpiry:
                month: 12
                year: 2020
            authCode: '1234567890'
            txnTime: '2017-02-14T15:12:18Z'
            currencyCode: USD
            avsResponse: MATCH
            cvvVerification: MATCH
            nameVerification: MATCH
            firstNameVerification: MATCH
            lastNameVerification: MATCH
            status: COMPLETED
            paymentFacilitator:
              subMerchant:
                id: '123456789'
                name: PayFacSubMerchant
                phone: '478234562331'
                email: payfac@mail.com
                url: www.payfac.com
                address:
                  street: 100 Queen Street West
                  city: London
                  country: GB
                  zip: M5H 2N2 
            links:
              - rel: self
                href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/verifications/e50e19a6-8edd-44ec-abc4-18d0a97d51d8'
        links:
          - rel: self
            href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/verifications?merchantRefNum=merchant-ABC-123&limit=2&offset=2&startDate=2017-01-14T15:12:18Z&endDate=2017-04-04T15:12:18Z'
      x-internal: true
    getVoidAuthByMerchantRefNumberResponse:
      required:
        - voidauths
        - links
      type: object
      properties:
        voidauths:
          type: array
          items:
            $ref: '#/components/schemas/voidAuthorization'
          description: ''
        links:
          type: array
          items:
            $ref: '#/components/schemas/linkVoidAuthByMerchantRefNum'
          description: ''
      example:
        voidauths:
          - id: d1fb46ee-2736-4ef5-a724-f263ace75373
            merchantRefNum: merchant ABC-123-voidauths
            amount: 898
            dupCheck: true
            txnTime: '2017-02-14T15:12:18Z'
            status: COMPLETED
            links:
              - rel: self
            href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/voidauths/d1fb46ee-2736-4ef5-a724-f263ace75373'
        links:
          - rel: self
            href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/voidauths?merchantRefNum=merchant-ABC-123&limit=2&offset=2&startDate=2017-01-14T15:12:18Z&endDate=2017-04-04T15:12:18Z'
      x-internal: true
    independentCreditRequestBase:
      type: object
      x-internal: true
      properties:
        amount:
          $ref: '#/components/schemas/amount'
        card:
          $ref: '#/components/schemas/card'
        merchantRefNum:
          type: string
          description: This is the merchant reference number created by the merchant and submitted as part of the request.
          example: P1234
          maxLength: 255
        profile:
          $ref: '#/components/schemas/profile'
        merchantDescriptor:
          $ref: '#/components/schemas/merchantDescriptor'
        billingDetails:
          $ref: '#/components/schemas/billingDetails'
        paymentFacilitator:
          $ref: '#/components/schemas/paymentFacilitator'
        customerIp:
          type: string
          description: This is the customer's IP address.
          example: 204.91.0.12
          maxLength: 39
        dupCheck:
          type: boolean
          description: This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request within the past 90 days.
          example: false
          default: true
        description:
          type: string
          description: 'This is a description of the transaction, provided by the merchant.'
          example: Purchase Credit
          maxLength: 255
        gatewayReconciliationId:
          $ref: '#/components/schemas/gatewayReconciliationId'
      required:
        - amount
        - card
        - merchantRefNum
    independentCreditResponseBase:
      type: object
      properties:
        id:
          type: string
          description: 'This is the ID returned in the response. This ID can be used for future associated requests, e,g., lookups.'
          example: 25f6dadf-176a-415f-95c9-6ff39ff697ba
          maxLength: 36
          readOnly: true
        childAccountNum:
          type: string
          maxLength: 10
          description: This is the child merchant account number. It is returned only if the transaction was processed via a master account.
          readOnly: true
        txnTime:
          type: string
          description: This is the date and time the transaction was processed.
          example: '2017-12-11T16:33:49Z'
          readOnly: true
        authCode:
          type: string
          description: This is the Authorization code assigned by the issuing bank and returned in the response.
          example: '12345678901'
          maxLength: 50
          readOnly: true
        currencyCode:
          type: string
          description: |-
            This is the currency of the merchant account, e.g., USD or CAD, returned in the request response.
            See [Currency Codes](https://developer.paysafe.com/en/support/reference-information/iso-standards/#currency-codes)
          example: USD
          maxLength: 3
          readOnly: true
        status:
          $ref: '#/components/schemas/statusIndependantCredit'
        acquirerResponse:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/acquirerResponse'
        error:
          $ref: '#/components/schemas/error'
        riskReasonCode:
          type: array
          description: 'An array of integers is returned, displaying the detailed Risk reason codes if your transaction was declined. It is returned only if your account is configured accordingly.'
          items:
            type: number
          example:
            - 5500
          readOnly: true
      x-internal: true
    leg:
      type: object
      description: |-
        Description of the various [leg](/schemas/leg) of trip.

        **Note** This object is only for Airline Merchants
      x-examples:
        Trip leg request:
          leg:
            flight:
              carrierCode: TK
              flightNumber: '1385'
            serviceClass: F
            isStopOverAllowed: 'true'
            destination: SOF
            fareBasis: VMAY
            fare: 10
            departureDate: '2021-01-26'
      properties:
        flight:
          $ref: '#/components/schemas/flight'
        serviceClass:
          type: string
          description: |-
            Indicates service class (first class, business
            class, etc.). 
            Example values (not limited to):
            - `F` - first class
            - `J` - business class
            - `W` - premium economy class
            - `Y` - economy class,
            * Required during settlement request for integration with TSYS processor
          minLength: 1
          maxLength: 8
        serviceClassFee:
          type: number
          description: Fee applied to a specific leg.
        isStopOverAllowed:
          type: boolean
          description: 'Indicates whether a stopover is allowed on this ticket. Valid values are: false - not allowed, true - allowed'
          example: true
        departureAirport:
          type: string
          minLength: 3
          maxLength: 3
          description: |-
            Departure airport.
            * Required during settlement request for integration with TSYS processor
        destination:
          type: string
          description: |-
            Destination Airport Code : IATA Airport Code.
            * Required during authorization request with AMEX for integration with TSYS processor
            * Required during settlement request with Visa or Mastercard for integration with TSYS processor
          example: YUL
          minLength: 3
          maxLength: 3
        fareBasis:
          type: string
          description: |-
            Contains a Fare Basis Code for Leg that carriers assign to a particular ticket type, such as business class 
            or discounted/nonrefundable.
            * Required during authorization request with AMEX for integration with TSYS processor
            * Required during settlement request with Visa or Mastercard for integration with TSYS processor
          maxLength: 6
          minLength: 1
        fare:
          type: number
          description: |-
            **Not used for Paysafe Acquiring.** This field contains the total Fare for this trip segment.'
            * Required during settlement request for integration with TSYS processor
        departureDate:
          type: string
          description: 'Date of passenger’s departure for this leg. Date format = YYYY-MM-DD, ISO 8601 expected. UTC date format.'
          example: '2014-01-26'
        departureTime:
          type: string
          description: 'Departure time at the airport of departure Date format = YYYY-MM-DDTHH:MM:SSZ, ISO 8601 expected: 2014-01-26T10:32:28Z'
          example: '2014-01-26T10:32:28Z'
        arrivalTime:
          type: string
          example: '2014-01-26T10:32:28Z'
          description: 'Arrival time at the airport for that specific leg. Date format = YYYY-MM-DDTHH:MM:SSZ, ISO 8601 expected'
        "conjunctionTicket\t":
          type: string
          maxLength: 15
          description: Specifying a number of the conjunction ticket within a single contract of carriage.
        couponNumber:
          type: string
          maxLength: 10
          description: 'Coupon number associated with the leg. Every leg could have a coupon number.'
        notation:
          type: string
          maxLength: 20
          description: 'An endorsement can be an agency-added notation or a mandatory government required notation, such as value-added tax. A restriction is a limitation based on the type of fare, such as a ticket with a 3-day minimum stay.'
        taxes:
          type: number
          description: Taxes for a specific leg.
      required:
        - ''
    legAuthorization:
      type: object
      description: |-
        Description of the various [leg](/schemas/leg) of trip.
        
        **Note** This object is only for Airline Merchants
      allOf:
        - $ref: '#/components/schemas/leg'
        - type: object
          required:
            - flight
            - destination
            - fareBasis
          properties:
            flight:
              $ref: '#/components/schemas/flightAuthorization'
            serviceClass:
              type: string
              description: |-
                Indicates service class (first class, business
                class, etc.). 
                Example values (not limited to):
                - `F` - first class
                - `J` - business class
                - `W` - premium economy class
                - `Y` - economy class,
            departureAirport:
              type: string
              description: |-
                Departure airport.
            destination:
              type: string
              description: |-
                Destination Airport Code : IATA Airport Code.
                * Required during authorization request with AMEX for integration with TSYS processor
              example: YUL
            fareBasis:
              type: string
              description: |-
                Contains a Fare Basis Code for Leg that carriers assign to a particular ticket type, such as business class 
                or discounted/nonrefundable.
                * Required during authorization request with AMEX for integration with TSYS processor
            fare:
              type: number
              description: '**Not used for Paysafe Acquiring.** This field contains the total Fare for this trip segment.'''
      x-internal: true
    legSettlement:
      type: object
      description: |-
        Description of the various [leg](/schemas/leg) of trip.

        **Note** This object is only for Airline Merchants
      allOf:
        - $ref: '#/components/schemas/leg'
        - type: object
          required:
            - flight
            - serviceClass
            - departureAirport
            - destination
            - fareBasis
            - fare
          properties:
            flight:
              $ref: '#/components/schemas/flightSettlement'
            destination:
              type: string
              description: |-
                Destination Airport Code : IATA Airport Code.
                * Required during settlement request with Visa or Mastercard for integration with TSYS processor
              example: YUL
            fareBasis:
              type: string
              description: |-
                Contains a Fare Basis Code for Leg that carriers assign to a particular ticket type, such as business class 
                or discounted/nonrefundable.
                * Required during settlement request with Visa or Mastercard for integration with TSYS processor
      x-internal: true
    level2Level3:
      type: object
      description: |-
        [Level 2 and Level 3](/schemas/level2Level3) (L2/L3) credit card processing refers to certain B2B card transactions for which the merchant might be eligible for lower credit card interchange rates. The lower rates may be available for
        merchants who provide more detailed information when processing card-not-present transactions. In order to be eligible for L2/L3 transactions:
        * Your merchant account must be properly configured by Paysafe.
        * The BIN of the credit card used for the transaction must be eligible – typically, these are government-issued credit cards.
        **Note:** Not all processing gateways support this parameter. Contact your account manager for more information.
      properties:
        exemptLocalTax:
          type: boolean
          description: 'This indicates whether or not local tax is exempted for the request. If set to true, then the localTaxAmount parameter will be ignored.'
          example: true
          default: false
        localTaxAmount:
          type: number
          description: This is the local sales tax applied to the purchase.
          minimum: 0
          maximum: 99999999999
          example: 1500
        nationalTaxAmount:
          type: number
          description: This is the national tax included in the transaction amount.
          minimum: 0
          maximum: 99999999999
          example: 0
        freightAmount:
          type: number
          description: This is the freight or shipping portion of the total transaction amount.
          minimum: 0
          maximum: 99999999999
          example: 0
        dutyAmount:
          type: number
          description: This is the duty associated with the import of the purchased goods.
          minimum: 0
          maximum: 99999999999
          example: 0
        destinationZip:
          type: string
          description: |-
            This is the postal/zip code of the address to which the purchased goods will be delivered. 
            This field can be identical to the shipFromZip 
            if the customer is present and takes immediate possession of the goods.
          example: '90210'
          maxLength: 10
        destinationCountry:
          type: string
          description: 'This is the country to which the goods are being shipped. See [Country Codes](https://developer.paysafe.com/en/support/reference-information/iso-standards/#country-codes).'
          example: US
          maxLength: 2
          minLength: 2
        shipFromZip:
          type: string
          description: This is the postal/zip code of the address from which the purchased goods are being shipped.
          example: '90211'
          maxLength: 10
        lineItems:
          $ref: '#/components/schemas/lineItems'
      x-examples:
        Level 2 Level 3 request:
          level2Level3:
            localTaxAmount: 15000
            nationalTaxAmount: 0
            freightAmount: 0
            dutyAmount: 0
            destinationZip: '90210'
            destinationCountry: US
            shipFromZip: '90210'
            lineItems:
              - description: Disney Cruise Line - Adult
                productCode: DCL-A
                quantity: 2
                unitAmount: 120000
                taxRate: 5
                taxAmount: 12000
                totalAmount: 252000
              - description: Disney Cruise Line - Kids
                productCode: DCL-K
                quantity: 1
                unitAmount: 60000
                taxRate: 5
                taxAmount: 3000
                totalAmount: 63000
    lineItems:
      type: object
      description: '[LineItems](/schemas/lineItems) is more detailed information about the items that are being purchased.'
      properties:
        description:
          type: string
          description: This is a description of the item(s) being purchased.
          example: Disney Cruise Line
          maxLength: 50
        productCode:
          type: string
          description: This is a merchant-defined description code of the item being purchased.
          example: DCL
          maxLength: 12
        quantity:
          type: number
          description: This is the quantity of the item.
          minimum: 0
          maximum: 99999999
          multipleOf: 0.0001
          example: 4
        unitAmount:
          type: number
          description: This is the unit price of the item being purchased, in minor units. The currency will be based on the account setting.
          example: 120000
          minimum: 0
          maximum: 99999999999
        taxRate:
          type: number
          description: |-
            This is the tax rate used to calculate the tax amount.
            For example, if the tax rate is 10.5%, this value should be 10.5.
          minimum: 0
          maximum: 100
          multipleOf: 0.01
          example: 5
        taxAmount:
          type: number
          description: |-
            This is the amount of any value-added taxes that can be associated with the purchased item, in minor units.
            The currency will be based on the account setting.

            **Note:** Our system will not validate the accuracy of this value. The merchant's application must calculate this value correctly.
          minimum: 0
          maximum: 99999999999
          example: 24000
        totalAmount:
          type: number
          description: |-
            This is the total amount of the line item, typically calculated as price multiplied by quantity, in minor units.
            The currency will be based on the account setting.

            **Note:** Our system will not validate the accuracy of this value. The merchant's application must calculate this value correctly.
          minimum: 0
          maximum: 99999999999
          example: 504000
      x-examples:
        Line items request:
          lineItems:
            description: Disney Cruise Line
            productCode: DCL
            quantity: 4
            unitAmount: 120000
            taxRate: 5
            taxAmount: 24000
            totalAmount: 504000
    link:
      type: object
      description: '[Link](/schemas/link) contains URL and information for the resource.'
      properties:
        rel:
          type: string
          example: self
          description: This is the link type that allows different endpoints to be targeted depending on the end state of the transaction.
          readOnly: true
        href:
          type: string
          example: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/auths/e50e19a6-8edd-44ec-abc4-18d0a97d51d8'
          description: This is the URI of the resource.
          readOnly: true
      readOnly: true
    linkAuthByMerchantRefNum:
      type: object
      properties:
        rel:
          type: string
          example: self
          readOnly: true
        href:
          type: string
          example: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/auths?merchantRefNum=merchant%2003.24.17_3&startDate=2017-02-24T18:28:28Z&endDate=2017-03-24T18:29:28Z'
          readOnly: true
      readOnly: true
      x-internal: true
    linkError:
      type: object
      properties:
        rel:
          type: string
          example: errorinfo
          description: This is errorinfo.
          readOnly: true
        href:
          type: string
          example: 'https://developer.paysafe.com/en/rest-api/cards/test-and-go-live/card-errors/#ErrorCode1000'
          description: The Developer Center URL containing a description of the error.
          readOnly: true
      readOnly: true
      x-internal: true
    linkOriginalCredit:
      type: object
      properties:
        rel:
          type: string
          description: This is the link type that allows different endpoints to be targeted depending on the end state of the transaction.
          example: self
          readOnly: true
        href:
          type: string
          example: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/originalcredits/e50e19a6-8edd-44ec-abc4-18d0a97d51d9'
          readOnly: true
      readOnly: true
      x-internal: true
    linkOriginalCreditByMerchantRefNum:
      type: object
      properties:
        rel:
          type: string
          example: self
          readOnly: true
        href:
          type: string
          example: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/originalcredits?merchantRefNum=merchant 07.05.17_16&limit=2&offset=2&startDate=2017-01-14T15:12:18Z&endDate=2017-04-04T15:12:18Z'
          readOnly: true
      readOnly: true
      x-internal: true
    linkRefund:
      type: object
      properties:
        rel:
          type: string
          description: This is the link type that allows different endpoints to be targeted depending on the end state of the transaction.
          example: self
          readOnly: true
        href:
          type: string
          example: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/refunds/e50e19a6-8edd-44ec-abc4-18d0a97d51d8'
          readOnly: true
      readOnly: true
      x-internal: true
    linkRefundByMerchantRefNum:
      type: object
      properties:
        rel:
          type: string
          description: This is the link type that allows different endpoints to be targeted depending on the end state of the transaction.
          example: self
        href:
          type: string
          example: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/refunds?merchantRefNum=merchant-ABC-123&limit=2&offset=2&startDate=2017-01-14T15:12:18Z&endDate=2017-04-04T15:12:18Z'
          readOnly: true
      readOnly: true
      x-internal: true
    linkSettlement:
      type: object
      properties:
        rel:
          type: string
          description: This is the link type that allows different endpoints to be targeted depending on the end state of the transaction.
          example: self
          readOnly: true
        href:
          type: string
          example: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/settlements/e50e19a6-8edd-44ec-abc4-18d0a97d51d8'
          readOnly: true
      readOnly: true
      x-internal: true
    linkSettlementByMerchantRefNum:
      type: object
      properties:
        rel:
          type: string
          description: This is the link type that allows different endpoints to be targeted depending on the end state of the transaction.
          example: self
          readOnly: true
        href:
          type: string
          example: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/settlements?merchantRefNum=merchant-ABC-123&limit=2&offset=2&startDate=2017-01-14T15:12:18Z&endDate=2017-04-04T15:12:18Z'
          readOnly: true
      readOnly: true
      x-internal: true
    linkStandaloneCredit:
      type: object
      properties:
        rel:
          type: string
          description: This is the link type that allows different endpoints to be targeted depending on the end state of the transaction.
          example: self
        href:
          type: string
          example: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/standalonecredits/e50e19a6-8edd-44ec-abc4-18d0a97d51d9'
      readOnly: true
      x-internal: true
    linkStandaloneCreditByMerchantRefNum:
      type: object
      properties:
        rel:
          type: string
          description: This is the link type that allows different endpoints to be targeted depending on the end state of the transaction.
          example: self
        href:
          type: string
          example: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/standalonecredits?merchantRefNum=merchant 07.05.17_16&limit=2&offset=2&startDate=2017-01-14T15:12:18Z&endDate=2017-04-04T15:12:18Z'
          readOnly: true
      readOnly: true
      x-internal: true
    linkVerification:
      type: object
      properties:
        rel:
          type: string
          description: This is the link type that allows different endpoints to be targeted depending on the end state of the transaction.
          example: self
        href:
          type: string
          example: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/verifications/e50e19a6-8edd-44ec-abc4-18d0a97d51d8'
      readOnly: true
      x-internal: true
    linkVerificationArray:
      type: array
      description: |-
        This is an array of links related to the resource.

        Typically you will have reference to any parent resources, and a reference to the child resource (if applicable).
        You may also see links for any call to action flows.
      items:
        $ref: '#/components/schemas/linkVerification'
      x-stoplight:
        id: 2cde99b3a08bd
    linkVerificationsByMerchantRefNum:
      type: object
      properties:
        rel:
          type: string
          description: This is the link type that allows different endpoints to be targeted depending on the end state of the transaction.
          example: self
          readOnly: true
        href:
          type: string
          example: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/verifications?merchantRefNum=merchant-ABC-123&limit=2&offset=2&startDate=2017-01-14T15:12:18Z&endDate=2017-04-04T15:12:18Z'
          readOnly: true
      readOnly: true
      x-internal: true
    linkVoidAuth:
      type: object
      properties:
        rel:
          type: string
          description: This is the link type that allows different endpoints to be targeted depending on the end state of the transaction.
          example: self
          readOnly: true
        href:
          type: string
          example: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/voidauths/e50e19a6-8edd-44ec-abc4-18d0a97d51d9'
          readOnly: true
      readOnly: true
      x-internal: true
    linkVoidAuthByMerchantRefNum:
      type: object
      properties:
        rel:
          type: string
          description: This is the link type that allows different endpoints to be targeted depending on the end state of the transaction.
          example: self
          readOnly: true
        href:
          type: string
          example: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/voidauths?merchantRefNum=merchant-ABC-123&limit=2&offset=2&startDate=2017-01-14T15:12:18Z&endDate=2017-04-04T15:12:18Z'
          readOnly: true
      readOnly: true
      x-internal: true
    lodgingDetails:
      type: object
      x-internal: false
      x-stoplight:
        id: 061a75692089c
      description: |-
        Contains information about lodging details.

        >**Note:** This object is only for Lodging Merchants.

        >**Note:** This field has to be passed only in case of card transactions.
      x-examples:
        Example 1:
          lodgingDetails:
            hotelFolioNumber: Customer Folio Number
            checkInDate: '2023-12-15'
            checkOutDate: '2023-12-20'
            customerServicePhone: '8311234567'
            propertyLocalPhone: '8311234567'
            extraCharges:
              - RESTAURANT
              - GIFT_SHOP
              - MINI_BAR
              - TELEPHONE
              - LAUNDRY
              - OTHER
            roomRate: 1200
            programCode: LODGING
            numberOfNights: 5
            isFireSafetyActCompliant: true
      properties:
        hotelFolioNumber:
          type: string
          description: |-
            The card acceptor’s internal invoice or billing ID reference number.

            * Required during settlement
          example: Customer Folio Number
          maxLength: 25
        checkInDate:
          type: string
          example: '2023-12-15'
          format: date
          description: |-
            The arrival date.

            Date format = YYYY-MM-DD, ISO 8601 expected. For example 2023-12-20.

            * Required during settlement
            _UTC Date Format_
        checkOutDate:
          type: string
          example: '2023-12-20'
          format: date
          description: |-
            The departure date.

            Date format = YYYY-MM-DD, ISO 8601 expected.  For example 2023-12-20.

            * Required during settlement
            _UTC Date Format_
        customerServicePhone:
          type: string
          example: '8311234567'
          description: |-
            Merchant phone number that the cardholder may call for service. Allowed numeric characters only.

            * Required during settlement request with Visa or Mastercard for integration with TSYS processor
          maxLength: 10
        propertyLocalPhone:
          type: string
          example: '8311234567'
          description: |-
            The lodging property location's phone number. Allowed numeric characters only.

            * Required during settlement request with Mastercard for integration with TSYS processor
          maxLength: 10
        extraCharges:
          type: array
          description: Indicates if the reservation includes additional ancillary charges.
          items:
            type: string
            enum:
              - RESTAURANT
              - GIFT_SHOP
              - MINI_BAR
              - TELEPHONE
              - OTHER
              - LAUNDRY
            example: RESTAURANT
        roomRate:
          type: number
          description: |-
            The nightly rate for one room at the lodging property.

            * Required during settlement request with Amex for integration with TSYS processor
          example: 200
          maximum: 999999999999
        programCode:
          type: string
          description: |-
            Code that corresponds to the category of lodging charges detailed in this message. Allowed values:

            - LODGING - (Default) Submitted charges are for lodging
            - NO_SHOW - Submitted charges are for the failure of the guest(s) to check in for reserved room
            - ADVANCED_DEPOSIT - Submitted charges are for an Advanced Deposit to reserve one or more rooms. In this case, the settlement date will be sent to the schemes for both the check-in and check-out dates

            If no value is submitted the default value 'LODGING' is used.
          example: LODGING
          enum:
            - LODGING
            - NO_SHOW
            - ADVANCED_DEPOSIT
          default: LODGING
        numberOfNights:
          type: number
          description: |-
            The total number of nights the room is booked for.

            * Required during authorization request with Visa for integration with TSYS processor
            * Required during settlement request with Amex for integration with TSYS processor
          maximum: 99
          example: 5
        isFireSafetyActCompliant:
          type: boolean
          description: |-
            Identifies that the facility complies with the Hotel and Motel Fire Safety Act of 1990. Possible values:

            - true
            - false
    lodgingDetailsAuthorization:
      allOf:
        - $ref: '#/components/schemas/lodgingDetails'
        - type: object
          properties:
            hotelFolioNumber:
              type: string
              description: The card acceptor’s internal invoice or billing ID reference number.
              example: Customer Folio Number
              maxLength: 25
            checkInDate:
              type: string
              example: '2023-12-15'
              format: date
              description: |-
                The arrival date.

                Date format = YYYY-MM-DD, ISO 8601 expected. For example 2023-12-20.

                _UTC Date Format_
            checkOutDate:
              type: string
              example: '2023-12-20'
              format: date
              description: |-
                The departure date.

                Date format = YYYY-MM-DD, ISO 8601 expected.  For example 2023-12-20.

                _UTC Date Format_
            customerServicePhone:
              type: string
              example: '8311234567'
              description: Merchant phone number that the cardholder may call for service. Allowed numeric characters only.
              maxLength: 10
            propertyLocalPhone:
              type: string
              example: '8311234567'
              description: The lodging property location's phone number. Allowed numeric characters only.
              maxLength: 10
            roomRate:
              type: number
              description: The nightly rate for one room at the lodging property.
              example: 200
              maximum: 999999999999
            numberOfNights:
              type: number
              description: |-
                The total number of nights the room is booked for.

                * Required during authorization request with Visa for integration with TSYS processor
              maximum: 99
              example: 5
      description: |-
        Contains information about lodging details.

        >**Note:** This object is only for Lodging Merchants.

        >**Note:** This field has to be passed only in case of card transactions.
      x-internal: true
    lodgingDetailsSettlement:
      allOf:
        - $ref: '#/components/schemas/lodgingDetails'
        - type: object
          properties:
            numberOfNights:
              type: number
              description: |-
                The total number of nights the room is booked for.

                * Required during settlement request with Amex for integration with TSYS processor
              maximum: 99
              example: 5
      description: |-
        Contains information about lodging details.

        >**Note:** This object is only for Lodging Merchants.

        >**Note:** This field has to be passed only in case of card transactions.
      x-internal: true
    merchantDescriptor:
      type: object
      description: 'This is the [merchant descriptor](/schemas/merchantDescriptor) that will be displayed on the customer''s card statement.'
      properties:
        dynamicDescriptor:
          type: string
          description: |-
            This is a merchant descriptor that will be displayed on a customer’s card statement.

            **Note:** 

            If you are a Consumer Bill Payment Service (CBPS) merchant, then provide your name and biller`s name, separated with asterisk.

            For example: CBPS Name*Biller Name.
          example: Online Store
          maxLength: 20
        phone:
          type: string
          description: |-
           This is the merchant’s phone number, which will be appended to the merchant descriptor on a customer’s card statement.
          
           **Note:** This field is used in case of authorization.
          example: 888-9999
          maxLength: 13
      required:
        - dynamicDescriptor
      x-examples:
        Merchant descriptor request:
          merchantDescriptor:
            dynamicDescriptor: OnlineStore
            phone: '12345678'
    monitorResponse:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          description: This is the status of the service. If it is READY the API is available.
          enum:
            - READY
      example:
        status: READY
      x-internal: true
    occurrence:
      type: string
      enum:
        - INITIAL
        - SUBSEQUENT
      description: |-
        This specifies whether the stored credential request is initial or recurring.
         * `INITIAL` - Used when this is the first time the consumer uses this credit card
         * `SUBSEQUENT` - Used when the consumer uses this credit card for subsquent requests
      example: SUBSEQUENT
      default: INITIAL
      x-internal: true
    originalCredit:
      allOf:
        - $ref: '#/components/schemas/originalCreditRequest'
        - $ref: '#/components/schemas/independentCreditResponseBase'
        - type: object
          properties:
            links:
              type: array
              items:
                $ref: '#/components/schemas/linkOriginalCredit'
              readOnly: true
      x-examples:
        Original credit response:
          id: 86dcb68d-cbd0-4878-8da7-ffc0e6554513
          merchantRefNum: merchant 07.05.17_16
          txnTime: '2017-07-06T19:59:17Z'
          gatewayReconciliationId: '12345678901'
          status: PENDING
          amount: 1000
          card:
            type: VI
            lastDigits: '1111'
            cardExpiry:
              month: 2
              year: 2019
          profile:
            firstName: Joe
            lastName: Smith
            email: Joe.Smith@canada.com
          billingDetails:
            street: 100 Queen Street West
            city: Toronto
            state: 'ON'
            country: CA
            zip: M5H2N2
          customerIp: 204.91.0.12
          description: Winning payment from Loto
          currencyCode: CAD
          links:
            - rel: self
              href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/1001058570/originalcredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513'
    originalCreditRequest:
      x-internal: true
      allOf:
        - type: object
          properties:
            acquirerData:
              $ref: '#/components/schemas/acquirerData'
        - $ref: '#/components/schemas/independentCreditRequestBase'
    passenger:
      title: passenger
      x-stoplight:
        id: 2yubk5qwvtis1
      type: object
      description: |-
        [Airline passenger.](/schemas/passenger)

        **Note** This object is only for Airline Merchants
      properties:
        ticketNumber:
          type: string
          description: Identifies the ticket for this passenger only.
          maxLength: 15
        firstName:
          type: string
          description: Passenger's first name.
          maxLength: 80
        lastName:
          type: string
          description: Passenger's last name.
          maxLength: 80
        phoneNumber:
          type: string
          description: Passenger's phone number.
          maxLength: 40
        passengerCode:
          type: string
          description: Code that identifies a type of passenger. For example 'INF' which indicates a child travelling on parent's lap.
          maxLength: 10
          example: INF
        gender:
          type: string
          description: |-
            Passenger gender.
            * `M` - Male
            * `F` - Female
            * `O` - Other
            * `N` - Not specified
          enum:
            - M
            - F
            - O
            - 'N'
    passengers:
      type: object
      description: |-
        A grouping of up to ten [passengers](/schemas/passengers).

        **Note** This object is only for Airline Merchants
      properties:
        passenger1:
          $ref: '#/components/schemas/passenger'
        passenger2:
          $ref: '#/components/schemas/passenger'
        passenger3:
          $ref: '#/components/schemas/passenger'
        passenger4:
          $ref: '#/components/schemas/passenger'
        passenger5:
          $ref: '#/components/schemas/passenger'
        passenger6:
          $ref: '#/components/schemas/passenger'
        passenger7:
          $ref: '#/components/schemas/passenger'
        passenger8:
          $ref: '#/components/schemas/passenger'
        passenger9:
          $ref: '#/components/schemas/passenger'
        passenger10:
          $ref: '#/components/schemas/passenger'
    paymentFacilitator:
      x-stoplight:
        id: 1lk0h4uf3wl66
      type: object
      description: |-
        Contains information about Payment facilitator.
    
        >**Note:** This object is only for Payment facilitator merchants.
      x-examples:
        Example 1:
          paymentFacilitator:
            subMerchant:
              id: '123456789'
              name: PayFacSubMerchant
              phone: '5555555555'
              email: payfac@mail.com
              url: www.payfac.com
              address:
                street: 100 Queen Street West
                city: London
                country: GB
                zip: M5H 2N2
      properties:
        subMerchant:
          $ref: '#/components/schemas/payFacSubMerchant'
    payFacSubMerchant:
      x-stoplight:
        id: p34mtn6z0dmhm
      type: object
      description: |-
        Contains information for Payment facilitator sub-merchant.
    
        **Note** This object is only for Payment facilitator merchants.
      x-examples:
        Example 1:
          id: '123456789'
          name: PayFacSubMerchant
          phone: '5555555555'
          email: payfac@mail.com
          url: www.payfac.com
          address:
            street: 100 Queen Street West
            city: London
            country: GB
            zip: M5H 2N2
      properties:
        id:
          type: string
          maxLength: 50
          description: This field contains an identifier of the actual merchant.
          example: '123456789'
        name:
          type: string
          maxLength: 50
          description: This field must contain the name of the actual merchant.
          example: Submerchant Name
        phone:
          type: string
          maxLength: 50
          description: This field must contain the phone number of the actual merchant.
          example: '5555555555'
        email:
          type: string
          maxLength: 50
          description: This field must contain the email address of the actual merchant.
          example: submerchant@mail.com
        url:
          type: string
          maxLength: 100
          description: This field must contain the url address of the actual merchant.
          example: www.paysafe.com
        address:
          $ref: '#/components/schemas/payFacAddress'
    payFacAddress:
      type: object
      description: |-
        Contains information for Payment facilitator sub-merchant address.
    
        **Note** This object is only for Payment facilitator merchants.
      x-examples:
        Example 1:
          street: payfac street
          city: London
          country: GB
          zip: '1233'
      properties:
        street:
          type: string
          maxLength: 50
          description: This field must contain the street address of the actual merchant.
          example: payfac street
        city:
          type: string
          maxLength: 50
          description: This field must contain the city of the actual merchant.
          example: London
        country:
          type: string
          maxLength: 50
          description: This field must contain the country code of the actual merchant.
          example: GB
        zip:
          type: string
          maxLength: 50
          description: This field must contain the postal code of the actual merchant.
          example: '1233'
    profile:
      type: object
      description: 'These are some [profile](/schemas/profile) details about the customer.'
      properties:
        firstName:
          type: string
          description: |-
            This is the customer’s first name.
            For Visa Direct and Mastercard Moneysend the field is mandatory due to AML requirements.
          example: John
          maxLength: 80
        lastName:
          type: string
          description: This is the customer's last name. For Visa Direct and Mastercard Moneysend the field is mandatory due to AML requirements.
          example: Smith
          maxLength: 80
        email:
          type: string
          example: jsmith@email.com
          maxLength: 255
          description: This is the customer's email address.
        merchantCustomerId:
          type: string
          maxLength: 100
          example: UniqueUserIdInTheSystem
          description: |-
            This is a customer ID that the merchant provides with the request for their own internal customer identification.
            This value must be unique for each customer belonging to a merchant. 
            In NETBANX this is known as the Ref ID. 


            **NOTE**:

            This field is mandatory for funding transactions. Send up to 34 symbols when processing a funding transaction.
    purchaseReturnAuthorization:
      type: object
      description: 'This is the [Purchase Return Authorization](/schemas/purchaseReturnAuthorization) that was performed for the refund. Note: Purchase Return Authorization is performed and returned in the response only if acquirer/processor supports it.'
      properties:
        id:
          type: string
          description: This is the unique ID returned in the response. This ID can be used for future associated requests.
          readOnly: true
          example: 25f6dadf-176a-415f-95c9-6ff39ff697ba
          maxLength: 36
        merchantRefNum:
          type: string
          description: This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.
          readOnly: true
          example: P1234
          maxLength: 255
        txnTime:
          type: string
          description: |-
            This is the date and time the request was processed.
            _UTC formatted date_
          example: '2014-01-26T10:32:28Z'
          readOnly: true
        authCode:
          type: string
          description: This is the Authorization code assigned by the issuing bank and returned in the response.
          example: '123456789011'
          readOnly: true
        amount:
          type: number
          description: |-
            This is the amount of the request, in minor units.
            For example, to process US $10.99, this value should be 1099.
            To process 1000 Japanese yen, this value should be 1000.
            To process 10.139 Tunisian dinar, this value should be 10139. 

            **Note:** If the merchant account is set up for a currency that has 3 decimal units, our system will half round up the least significant digit. Therefore, a transaction of 10.139 Tunisian dinar would be processed as 10.14.
          example: 100
          readOnly: true
        currencyCode:
          type: string
          description: |-
            This is the currency of the merchant account, e.g., USD or CAD, returned in the request response.
            See [Currency Codes](https://developer.paysafe.com/en/support/reference-information/iso-standards/#currency-codes)
          example: USD
          readOnly: true
      readOnly: true
    recipient:
      type: object
      description: |-
        [The Recipient](/schemas/recipient) is deemed to be the person or party 
        who has the contractual relationship with the merchant/financial institution. 
        This may be different from the cardholder, e.g., in the case of a parent topping up a child's savings account. Therefore, the fields should not be collected on the same page as cardholder information, 
        but instead be passed in the background from the merchant’s records. 

        **Note:** You can include *recipient* elements in your [authorization request](/operations/authorization) **only if** your Merchant Category Code is **6012** and your registered trading address is in the United Kingdom. All fields are optional.
        However, scheme fines may apply if data is consistently not supplied and chargebacks persist. If you have any questions, contact your account manager.
        If you are using a payment token for an Authorization request and there is already recipient data for the consumer profile associated with the payment token,
        then if you include the *recipient* object in the Authorization, this data will override the recipient data already in the profile.

        If you look up an authorization request that used the visaAdditionalAuthData parameter (now deprecated), the response will contain the relevant data in both the recipient and the visaAdditionalAuthData objects.
      properties:
        dateOfBirth:
          $ref: '#/components/schemas/dateOfBirth'
        zip:
          type: string
          maxLength: 10
          example: M5M 5M5
          description: |-
            This is the recipient's postcode.
            **Note:** The last 3 characters are not sent to the banking network.
        lastName:
          type: string
          description: |-
            This is the recipient's last name.
            **Note:** Only the first 6 characters are sent to the banking network.
          example: Smith
          maxLength: 255
        accountNumber:
          type: string
          description: |-
            This is the recipient''s account number, e.g., a loan agreement number or customer ID.
            In the case where the recipient account is a prepaid card, the card number may be sent in full

            **Note:**
            Only the first 6 and last 4 characters are sent to the banking network 
            and will be masked accordingly within the back office and any other reports,
            to comply with PCI regulations.
          example: ABC1234567890
          maxLength: 25
      required:
        - dateOfBirth
    refund:
      x-examples:
        Refund response:
          merchantRefNum: merchantRef_2016_04_11_05
          amount: 5500
          dupCheck: true
          id: d1fb46ee-2736-4ef5-a724-f263ace75374
          txnTime: '2017-02-14T15:12:18Z'
          gatewayReconciliationId: '12345678901'
          status: COMPLETED
          links:
            - rel: self
              href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/refunds/d1fb46ee-2736-4ef5-a724-f263ace75374'
      allOf:
        - $ref: '#/components/schemas/refundRequest'
        - type: object
          properties:
            id:
              type: string
              description: 'This is the ID returned in the response. This ID can be used for future associated requests, e.g., lookups.'
              maxLength: 36
              example: 25f6dadf-176a-415f-95c9-6ff39ff697ba
              readOnly: true
            childAccountNum:
              type: string
              maxLength: 10
              description: This is the child merchant account number. It is returned only if the transaction was processed via a master account.
              readOnly: true
            txnTime:
              type: string
              description: This is the date and time the transaction was processed.
              example: '2017-12-11T16:33:49Z'
              readOnly: true
            status:
              $ref: '#/components/schemas/refundStatus'
            acquirerResponse:
              allOf:
                - $ref: '#/components/schemas/acquirerResponse'
            error:
              $ref: '#/components/schemas/error'
            riskReasonCode:
              type: array
              example:
                - 5500
              description: 'An array of integers is returned, displaying the detailed Risk reason codes if your transaction was declined. It is returned only if your account is configured accordingly.'
              items:
                type: number
              readOnly: true
            purchaseReturnAuthorization:
              $ref: '#/components/schemas/purchaseReturnAuthorization'
            links:
              type: array
              description: |-
                This is an array of links related to the resource.
                Typically you will have reference to any parent resources, and a reference to the child resource (if applicable).
                You may also see links for any call to action flows.
              items:
                $ref: '#/components/schemas/linkRefund'
              readOnly: true
    refundRequest:
      x-internal: true
      type: object
      properties:
        merchantRefNum:
          type: string
          description: This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.
          maxLength: 255
          example: merchantABC-444-refund
        amount:
          $ref: '#/components/schemas/amount'
        dupCheck:
          type: boolean
          description: This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request within the past 90 days.
          default: true
          example: true
        splitpay:
          type: array
          description: 'For Splitpay transactions only, an array containing the linked accounts and the amount shared with each. You must include either *amount* or *percent*. However, you cannot include both values.'
          items:
            $ref: '#/components/schemas/splitPay'
        gatewayReconciliationId:
          $ref: '#/components/schemas/gatewayReconciliationId'
      required:
        - merchantRefNum
    refundStatus:
      enum:
        - RECEIVED
        - PENDING
        - COMPLETED
        - FAILED
        - CANCELLED
      type: string
      description: |-
        This is the status of the request.
        Possible values are:
        - `RECEIVED` - Our system has received the request and is waiting for the downstream processor’s response.
        - `COMPLETED` - The transaction has been completed.
        - `PENDING` - Our system has received the request but it has not yet been batched.
        - `FAILED` - The transaction failed, due to either an error or being declined.
        - `CANCELLED` - The request has been fully voided (reversed).
      example: RECEIVED
      readOnly: true
      x-internal: true
    settlement:
      allOf:
        - $ref: '#/components/schemas/settlementRequest'
        - type: object
          properties:
            id:
              type: string
              description: 'This is the ID returned in the response. This ID can be used for future associated requests, e,g., Refunds.'
              maxLength: 36
              example: 25f6dadf-176a-415f-95c9-6ff39ff697ba
              readOnly: true
            availableToRefund:
              type: number
              description: 'This is the amount of of the Settlement remaining to Refund, in minor units. For example, US $10.99 would be 1099.'
              maximum: 99999999999
              example: 25
              readOnly: true
            childAccountNum:
              type: string
              maxLength: 10
              description: This is the child merchant account number. It is returned only if the transaction was processed via a master account.
              readOnly: true
            txnTime:
              type: string
              description: This is the date and time the transaction was processed.
              example: '2017-12-11T16:33:49Z'
              readOnly: true
            status:
              $ref: '#/components/schemas/settlementStatus'
            riskReasonCode:
              type: array
              readOnly: true
              description: 'An array of integers is returned, displaying the detailed Risk reason codes if your transaction was declined. It is returned only if your account is configured accordingly.'
              items:
                type: number
                readOnly: true
            acquirerResponse:
              readOnly: true
              allOf:
                - $ref: '#/components/schemas/acquirerResponse'
            error:
              $ref: '#/components/schemas/error'
            links:
              type: array
              description: |-
                This is an array of links related to the resource.
                Typically you will have reference to any parent resources, and a reference to the child resource (if applicable).
                You may also see links for any call to action flows.
              items:
                $ref: '#/components/schemas/linkSettlement'
              readOnly: true
      x-examples:
        Settlement response:
          id: d1fb46ee-2736-4ef5-a724-f263ace75373
          merchantRefNum: merchantRef_2016_04_11_05
          amount: 5500
          availableToRefund: 5500
          dupCheck: true
          txnTime: '2017-02-14T15:12:18Z'
          gatewayReconciliationId: '12345678901'
          status: COMPLETED
          links:
            - rel: self
              href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/settlements/d1fb46ee-2736-4ef5-a724-f263ace75373'
    settlementRequest:
      x-internal: true
      type: object
      properties:
        merchantRefNum:
          type: string
          description: This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.
          maxLength: 255
          example: P1234
        amount:
          $ref: '#/components/schemas/amount'
        dupCheck:
          type: boolean
          description: This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request within the past 90 days.
          default: true
          example: true
        splitpay:
          type: array
          description: 'For Splitpay transactions only, an array containing the linked accounts and the amount shared with each. You must include either *amount* or *percent*. However, you cannot include both values.'
          items:
            $ref: '#/components/schemas/splitPay'
        airlineTravelDetails:
          $ref: '#/components/schemas/airlineTravelDetailsSettlement'
        cruiselineTravelDetails:
          $ref: '#/components/schemas/cruiselineTravelDetailsSettlement'
        lodgingDetails:
          $ref: '#/components/schemas/lodgingDetailsSettlement'
        carRentalDetails:
          $ref: '#/components/schemas/carRentalDetailsSettlement'
        gatewayReconciliationId:
          $ref: '#/components/schemas/gatewayReconciliationId'
      required:
        - merchantRefNum
    settlementStatus:
      enum:
        - RECEIVED
        - PENDING
        - PROCESSING
        - COMPLETED
        - FAILED
        - CANCELLED
      type: string
      description: |-
        This is the status of the transaction request.
         Possible values are:
         - `RECEIVED` - Our system has received the request and is waiting for the downstream processor’s response.
         - `PENDING` - Our system has received the request but it has not yet been batched.
         - `PROCESSING` - The Settlement batch has started.
         - `COMPLETED` - The transaction has been completed.
         - `FAILED` - The transaction failed, due to either an error or being declined.
         - `CANCELLED` - The transaction request has been cancelled.
      readOnly: true
      example: RECEIVED
      x-internal: true
    settleWithExternalAuth:
      title: settleWithExternalAuth
      x-stoplight:
        id: 94hyyq4fezn7q
      type: boolean
      x-internal: false
      description: 'settleWithExternalAuth determines whether the Authorization request has been made externally. To indicate an external request, the settleWithExternalAuth flag must be set to ''true''. Additionally, the usage of the mandatory complex objects externalAuthDetails and airlineTravelDetails is required in this scenario.'
      default: false
    shippingDetails:
      type: object
      description: 'This is the [shipping address](/schemas/shippingDetails) of the customer.'
      properties:
        carrier:
          type: string
          description: |-
            This is the shipment carrier.
            Possible values are:
            - `APC` - APC Overnight
            - `APS` - Anpost
            - `CAD` - Canada Postal Service
            - `DHL` - DHL
            - `FEX` - Fedex
            - `RML` - Royal Mail
            - `UPS` - United Parcel Service
            - `USPS` - United States Postal Service
            - `CLK` - CityLink
            - `EMS` - EMS (US Postal Service)
            - `NEX` - Nexworldwide
            - `OTHER`
          example: CAD
          enum:
            - APC
            - APS
            - CAD
            - DHL
            - FEX
            - RML
            - UPS
            - USPS
            - CLK
            - EMS
            - NEX
            - OTHER
        shipMethod:
          description: |-
            This is the shipment method.
            Possible values are:
            - `N` - Next Day/Overnight
            - `T` - Two-Day Service
            - `C` - Lowest Cost
            - `O` - Other
          example: T
          enum:
            - 'N'
            - T
            - C
            - O
          type: string
        recipientName:
          type: string
          description: This is the name of the person receiving the goods.
          example: Jane Smith
          maxLength: 255
        street:
          type: string
          description: This is the first line of the street address in the shipping address.
          example: 102 Queen Street West
          maxLength: 50
        city:
          type: string
          description: This is the city in the shipping address.
          example: Toronto
          maxLength: 40
        state:
          type: string
          description: |-
            This is the state or province in the shipping address.
            See [Province Codes](https://developer.paysafe.com/en/support/reference-information/iso-standards/#province-codes) or
            [State Codes](https://developer.paysafe.com/en/support/reference-information/iso-standards/#state-codes) for Canada or the United States.
          example: 'ON'
          maxLength: 40
        country:
          type: string
          description: |-
            This is the country in the shipping address.
            See [Country Codes](https://developer.paysafe.com/en/support/reference-information/iso-standards/#country-codes).
          example: CA
          maxLength: 2
          minLength: 2
        zip:
          type: string
          description: This is the postal/zip code in the shipping address.
          example: M5H 2N2
          maxLength: 10
      x-examples:
        Shipping details:
          shippingDetails:
            carrier: UPS
            shipMethod: 'N'
            recipientName: Jane Smith
            street: 100 Queen Street West
            city: Toronto
            state: 'ON'
            country: CA
            zip: M5H 2N2
    splitPay:
      anyOf:
        - $ref: '#/components/schemas/splitPayAmount'
        - $ref: '#/components/schemas/splitPayPercent'
    splitPayAmount:
      type: object
      description: 'This enables you to use the [Split Payouts](/schemas/splitPay) functionality when authorizing with a Settlement.'
      properties:
        linkedAccount:
          type: string
          description: This is the ID of the linked account. This account must already be linked to the merchant account.
          example: '123124124'
        amount:
          type: number
          description: This is the amount to transfer to the linked account in minor currency units. The total amount to all linked accounts cannot exceed the transaction total.
          example: 505
      required:
        - linkedAccount
        - amount
      x-examples:
        'Split pay request ':
          splitpay:
            - linkedAccount: '123124124'
              percent: 5
            - linkedAccount: '767862873'
              amount: 500
      x-internal: true
    splitPayPercent:
      type: object
      description: 'This enables you to use the [Split Payouts](/schemas/splitPay) functionality when authorizing with a Settlement.'
      properties:
        linkedAccount:
          type: string
          description: This is the ID of the linked account. This account must already be linked to the merchant account.
          example: '123124124'
        percent:
          type: number
          example: 5
          description: 'This is the percentage of the total transaction amount to transfer to the linked account, to two decimal places. The total percentage to all linked accounts cannot exceed 100%.'
      required:
        - linkedAccount
        - percent
      x-examples:
        'Split pay request ':
          splitpay:
            - linkedAccount: '123124124'
              percent: 5
            - linkedAccount: '767862873'
              amount: 500
      x-internal: true
    standaloneCredit:
      allOf:
        - $ref: '#/components/schemas/standaloneCreditRequest'
        - $ref: '#/components/schemas/independentCreditResponseBase'
        - type: object
          properties:
            links:
              type: array
              description: |-
                This is an array of links related to the resource.

                Typically you will have reference to any parent resources, and a reference to the child resource (if applicable).
                You may also see links for any call to action flows.
              items:
                $ref: '#/components/schemas/linkStandaloneCredit'
              readOnly: true
    standaloneCreditRequest:
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/independentCreditRequestBase'
        - type: object
          properties:
            transactionIntent:
              $ref: '#/components/schemas/transactionIntentStandaloneCredit'
    status:
      type: string
      enum:
        - RECEIVED
        - COMPLETED
        - FAILED
      description: 'This is the [status](/schemas/status) of the request.'
      example: RECEIVED
      readOnly: true
    statusIndependantCredit:
      type: string
      enum:
        - RECEIVED
        - COMPLETED
        - FAILED
        - CANCELLED
        - PENDING
      description: |-
        This is the status of the request.
        Possible values are:
        - `RECEIVED` - Our system has received the request and is waiting for the downstream processor’s response.
        - `COMPLETED` - The transaction has been completed.
        - `FAILED` - The transaction failed, due to either an error or being declined.
        - `CANCELLED` - The request has been fully voided (reversed).
        - `PENDING` - Our system has received the request but it has not yet been batched.
      example: RECEIVED
      readOnly: true
      x-internal: true
    storedCredential:
      type: object
      description: |-
        [Stored credential](/schemas/storedCredential) object is used to identify authorization requests that use stored credentials that the merchant has on file
        for the consumer''s authorization request, in order to improve authorization rates and reduce fraud.

        Stored credentials can be used in two cases:
        - Using a payment token - An authorization request that uses a **paymentToken** from the [Customer Vault API](https://developer.paysafe.com/en/vault-api/)
        - Using a card number - An authorization request that uses a credit card number stored by the merchant 

        **Notes:**
        - If you use a **paymentToken** in the authorization request but do not include the **storedCredential** object, Paysafe will provide default information taken from Customer Vault data.
        - You cannot include both the **storedCredential** object and the *recurring* parameter in the same authorization request. Paysafe recommends using the **storedCredential** object.
        - The **cvv** parameter of the [card object](/schemas/card) is required when the **occurrence** parameter is set to **INITIAL**. However, **cvv** is not required when the **occurrence** parameter is set to **SUBSEQUENT**.
        - The **storedCredential** object cannot be used for Apple Pay or Google Pay transactions.
      properties:
        type:
          $ref: '#/components/schemas/storedCredentialType'
        occurrence:
          $ref: '#/components/schemas/occurrence'
        initialTransactionId:
          type: string
          description: |-
            Id of the initial Recurring Payment transaction. 

            This id should be stored from the auth response of the transaction indicated as initial with the following: type=RECURRING/TOPUP, occurrence=INITIAL.

            This reference should be provided when:
            - type=RECURRING and occurrence=SUBSEQUENT
            - type=TOPUP and occurrence=SUBSEQUENT
               
            **Note:** This reference is a must to meet PSD 2 authentication process requirements for merchant initiated transactions successfully.
          maxLength: 36
        externalInitialTransactionId:
          type: string
          maxLength: 256
          description: |-
            Card Scheme Transaction Id of the initial payment transaction in the recurring plan when it was processed through external service provider.

            This reference should be provided only when:
            - type=RECURRING and occurrence=SUBSEQUENT
            - type=TOPUP and occurrence=SUBSEQUENT

            **Note:** This reference cannot be provided along with initialTransactionId.
      x-examples:
        Stored credential request:
          storedCredential:
            type: RECURRING
            occurrence: SUBSEQUENT
    storedCredentialType:
      x-stoplight:
        id: 9asj2lv53br1l
      enum:
        - ADHOC
        - TOPUP
        - RECURRING
      type: string
      description: |-
        This specifies the type of request being made.
         * `ADHOC` - Ad hoc consumer-initiated request
         * `TOPUP` - Unscheduled merchant-iniitated request when a consumer balance is below a set limit
         * `RECURRING` - Scheduled, merchant-initiated recurring request
      example: ADHOC
      default: ADHOC
      x-internal: true
    ticket:
      type: object
      description: |-
        Information about the [Airline Ticket](/schemas/ticket) Number and if the ticket is restricted.
        * Required during settlement

        **Note** This object is only for Airline Merchants
      properties:
        ticketNumber:
          type: string
          description: |-
            Airline Ticket Number.
            * Required during settlement
          minLength: 1
          maxLength: 20
        isRestrictedTicket:
          type: boolean
          description: |-
            Indicates whether this ticket is non-refundable. 
            This entry should be supplied on CPS/Passenger Transport 1 or 2 transactions if the ticket was purchased 
            as a non-refundable ticket. Valid values are: false - No restriction : default, true - Restricted (non-refundable) ticket.
            * Required during settlement request for integration with TSYS processor
          example: true
        cityOfTicketIssuing:
          type: string
          maxLength: 40
          description: |-
            Place of issue for the ticket for this passenger.
            * Required during settlement request for integration with TSYS processor
        ticketDeliveryMethod:
          type: string
          enum:
            - E_TICKET
            - CITY_TICKET_OFFICE
            - AIRPORT_TICKET_OFFICE
            - TICKET_BY_MAIL
            - TICKET_ON_DEPARTURE
          description: |-
            Way of delivering the ticket.
            * Required during settlement request for integration with TSYS processor
        isAgencyCard:
          type: boolean
          description: Specifies whether the purchaser is the ticket holder or agency.
        ticketIssueDate:
          type: string
          description: 'Ticket''s issue date. Sometime it is different that the date of the transaction (can be before that). Date format = YYYY-MM-DD, ISO 8601. Expected: 2021-01-26'
        ticketPrice:
          type: number
          description: Price for one ticket.
        numberOfPax:
          type: number
          maximum: 10
          description: |-
            The number of the passengers which tickets are with the same PNR.
            * Required during settlement request for integration with TSYS processor
      required:
        - ''
    ticketAuthorization:
      type: object
      description: |-
        Information about the [Airline Ticket](/schemas/ticket) Number and if the ticket is restricted.
      allOf:
        - $ref: '#/components/schemas/ticket'
        - type: object
          properties:
            ticketNumber:
              type: string
              description:
                Airline Ticket Number.
            isRestrictedTicket:
              type: boolean
              description: |-
                Indicates whether this ticket is non-refundable. 
                This entry should be supplied on CPS/Passenger Transport 1 or 2 transactions if the ticket was purchased 
                as a non-refundable ticket. Valid values are: false - No restriction : default, true - Restricted (non-refundable) ticket.
            cityOfTicketIssuing:
              type: string
              description: |-
                Place of issue for the ticket for this passenger.
            ticketDeliveryMethod:
              type: string
              description: |-
                Way of delivering the ticket.
            numberOfPax:
              type: number
              maximum: 10
              description: |-
                The number of the passengers which tickets are with the same PNR.
      x-internal: true
    ticketSettlement:
      type: object
      description: |-
        Information about the [Airline Ticket](/schemas/ticket) Number and if the ticket is restricted.
      allOf:
        - $ref: '#/components/schemas/ticket'
        - type: object
          required:
            - ticketNumber
            - isRestrictedTicket
            - cityOfTicketIssuing
            - ticketDeliveryMethod
            - numberOfPax
      x-internal: true
    transactionIntentAuthorization:
      type: string
      description: |-
        The transactionIntent property is used to identify the intent of the authorization requests.
        The value of the transactionIntent shows if the transaction is crypto or quasi-cash related one.
        + It is an optional enum field applicable for every MCC.
        + It is required only if the use cases explained below are applicable for the merchants or the default behavior is not acceptable for them.
        + The merchant needs to add in the request transactionIntent property value as shown in the example below.

        **Use cases and applicable valid enum transactionIntent options:**

          |Use case                                                                                                                                              |MCC              | Valid transactionIntent value|
          |---                                                                                                                                                   |---              |---                           |
          | The consumer is acquiring cryptocurrency in a transaction.                                                                                           |6012, 6051       | CRYPTO_ON_RAMP               |
          | The consumer is loading a cryptocurrency wallet or exchange account with fiat. *Applicable only in combination with  valid fundingTransaction object.|6012, 6051       |WALLET_CRYPTO_ON_RAMP         |
          | The consumer is acquiring quasi-cash in a transaction. *Quasi cash transactions represent the purchase of foreign currencies or items 
          (including, but not limited to, casino chips, money orders, lottery tickets and travelers cheques) which may be convertible to cash.                   |4829, 6012, 6051 | QUASI_CASH                   |
          | For purchases of goods or services that leverage a live conversion of fiat into non - fiat currency.                                                 |ANY              | BUY_WITH_CRYPTO              |

        **Default transactionIntent definition by Paysafe**

        + All authorizations processed by MCC 6051 will be classified as crypto related with transactionIntent "CRYPTO_ON_RAMP" or "WALLET_CRYPTO_ON_RAMP" (when funding a wallet), except their account is not configured by Paysafe for quasi-cash transactions.
        + All authorizations processed by MCC 6051 or 4829 with quasi-cash configuration turned on  will be classified as quasi-cash related with transactionIntent "QUASI_CASH" .

        **Expected errors related to invalid  transactioIntent values:**

        + If you send transactionIntent type in the authorization request with value not applicable for your MCC, the transaction will be declined with error  3072 - "Your request has been declined because the requested transactionIntent value is not applicable for your merchant category code (MCC)".
        + If you send transactionIntent type WALLET_CRYPTO_ON_RAMP in the authorization request, but you didn't classify the transaction as "funding" one with the respective valid fundingTransaction object, the transaction will be declined with error 3071 - Your request has been declined because of mismatch between the requested transactionIntent and fundingTransaction type.
      enum:
        - CRYPTO_ON_RAMP
        - WALLET_CRYPTO_ON_RAMP
        - QUASI_CASH
        - BUY_WITH_CRYPTO
      x-internal: true
    transactionIntentStandaloneCredit:
      type: string
      description: |-
        + The transactionIntent property is used to identify the intent of the standalone credit requests.
        + The value of the transactionIntent in the standalone credit request shows if the transaction is crypto related one.
        + It is an optional enum field applicable for MCC 4829,  6012, 6051 and 6211.
        + It is required only if the use cases explained below are applicable for the merchants, or the default behavior is not acceptable for them.
        + The merchant needs to add in the request transactionIntent property value as shown in the example below.

        **Use cases and applicable valid enum transactionIntent options for Standalone Credits:**

        |Use case                                                                                     |MCC                               | Valid transactionIntent value|
        |---                                                                                          |---                               |---            |
        | The consumer initiates a disbursement from a crypto-capable digital wallet to a card.       |4829, 6012, 6051, 6211           | WALLET_CRYPTO_OFF_RAMP| 
        | The consumer initiates a disbursement from a crypto-capable brokerage / exchange to a card. |6012, 6051, 6211                  |CRYPTO_OFF_RAMP|

        **Default transactionIntent definition by Paysafe**

        All standalone credits processed by account with MCC 6051 and configured for Visa Direct will be classified as crypto as follows:

        + If VISA DIRECT set up is FUNDS DISBURSEMENT with transactionIntent "CRYPTO_OFF_RAMP"
        + If VISA DIRECT set up is WALLET TRANSFER or FUNDS TRANSFER with transactionIntent "WALLET_CRYPTO_OFF_RAMP"

        **Expected errors related to invalid transactionIntent values:**

        + If you send transactionIntent in the request with value not applicable for your MCC, the transaction will be declined with error  3072.
        + If you send transactionIntent in the request with value applicable for your MCC, but not for your VISA direct configuration, the transaction will be declined with error  3069.
        + If you send transactionIntent with value different than the options above,  the transaction will be declined with error 5068.
      enum:
        - CRYPTO_ON_RAMP
        - WALLET_CRYPTO_ON_RAMP
      x-internal: true
      x-stoplight:
        id: 384afb6aa168d
      title: ''
    travelAgency:
      type: object
      description: 'Information about the [airline travel agency](/schemas/travelAgency) if the ticket was issued by a travel agency.'
      properties:
        code:
          type: string
          description: Code identifying travel agency if the ticket was issued by a travel agency.
          minLength: 1
          maxLength: 8
        name:
          type: string
          description: Information about the travel agency if the ticket was issued by a travel agency.
          minLength: 1
          maxLength: 25
        agencyAddress:
          $ref: '#/components/schemas/agencyAddress'
    tripLegs:
      type: object
      description: |-
        A grouping of up to four [trip legs](/schemas/tripLegs). Each leg provides detailed itinerary data.

        **Note** This object is only for Airline Merchants
      properties:
        leg1:
          $ref: '#/components/schemas/leg'
        leg2:
          $ref: '#/components/schemas/leg'
        leg3:
          $ref: '#/components/schemas/leg'
        leg4:
          $ref: '#/components/schemas/leg'
    tripLegsAuthorization:
      type: object
      description: 'A grouping of up to four [trip legs](/schemas/tripLegs). Each leg provides detailed itinerary data.'
      properties:
        leg1:
          $ref: '#/components/schemas/legAuthorization'
        leg2:
          $ref: '#/components/schemas/legAuthorization'
        leg3:
          $ref: '#/components/schemas/legAuthorization'
        leg4:
          $ref: '#/components/schemas/legAuthorization'
      x-internal: true
    tripLegsSettlement:
      type: object
      description: 'A grouping of up to four [trip legs](/schemas/tripLegs). Each leg provides detailed itinerary data.'
      properties:
        leg1:
          $ref: '#/components/schemas/legSettlement'
        leg2:
          $ref: '#/components/schemas/legSettlement'
        leg3:
          $ref: '#/components/schemas/legSettlement'
        leg4:
          $ref: '#/components/schemas/legSettlement'
      x-internal: true
    verification:
      allOf:
        - $ref: '#/components/schemas/verificationRequest'
        - type: object
          properties:
            id:
              type: string
              description: 'This is the ID returned in the response. This ID can be used for future associated requests, e,g., lookups.'
              example: 25f6dadf-176a-415f-95c9-6ff39ff697ba
              maxLength: 36
              readOnly: true
            childAccountNum:
              type: string
              maxLength: 10
              description: This is the child merchant account number. It is returned only if the transaction was processed via a master account.
              readOnly: true
            txnTime:
              type: string
              description: This is the date and time the transaction was processed.
              example: '2017-12-11T16:33:49Z'
              readOnly: true
            authCode:
              type: string
              description: This is the Authorization code assigned by the issuing bank and returned in the response.
              example: '12345678901'
              maxLength: 50
              readOnly: true
            currencyCode:
              type: string
              description: 'This is the currency of the merchant account, e.g., USD or CAD, returned in the request response.'
              example: USD
              maxLength: 3
              readOnly: true
            avsResponse:
              $ref: '#/components/schemas/avsResponse'
            cvvVerification:
              $ref: '#/components/schemas/cvvVerification'
            nameVerification:
              $ref: '#/components/schemas/nameVerification'
            firstNameVerification:
              $ref: '#/components/schemas/firstNameVerification'
            lastNameVerification:
              $ref: '#/components/schemas/lastNameVerification'    
            status:
              type: string
              description: This is the status of the request.
              enum:
                - RECEIVED
                - COMPLETED
                - FAILED
              example: RECEIVED
              readOnly: true
            paymentFacilitator:
              $ref: '#/components/schemas/paymentFacilitator'
            acquirerResponse:
              readOnly: true
              allOf:
                - $ref: '#/components/schemas/acquirerResponse'
            error:
              $ref: '#/components/schemas/error'
            riskReasonCode:
              type: array
              description: 'An array of integers is returned, displaying the detailed Risk reason codes if your transaction was declined. It is returned only if your account is configured accordingly.'
              items:
                type: number
              example:
                - 5500
              readOnly: true
            links:
              readOnly: true
              allOf:
                - $ref: '#/components/schemas/linkVerificationArray'
      x-examples:
        Verification response:
          id: e50e19a6-8edd-44ec-abc4-18d0a97d51d8
          merchantRefNum: merchant ABC-444
          profile:
            profile:
              firstName: John
              lastName: Smith
              email: jsmith@email.com
          billingDetails:
            billingDetails:
              street: 100 Queen Street West
              city: Toronto
              state: 'ON'
              country: CA
              zip: M5H 2N2
              phone: '555'
          customerIp: 204.91.0.12
          dupCheck: true
          description: This is a Verification transaction.
          card:
            type: VI
            lastDigits: '1111'
            cardExpiry:
              month: 12
              year: 2020
          authCode: '1234567890'
          txnTime: '2017-02-14T15:12:18Z'
          currencyCode: USD
          avsResponse: MATCH
          cvvVerification: MATCH
          status: COMPLETED
          links:
            - rel: self
              href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/verifications/e50e19a6-8edd-44ec-abc4-18d0a97d51d8'
    verificationRequest:
      x-internal: true
      type: object
      properties:
        card:
          oneOf:
            - $ref: '#/components/schemas/cardWithToken'
            - $ref: '#/components/schemas/cardWithNumber'
            - $ref: '#/components/schemas/cardResponse'
        merchantRefNum:
          type: string
          description: This is the merchant reference number created by the merchant and submitted as part of the request.
          example: P1234
          maxLength: 255
        profile:
          $ref: '#/components/schemas/profile'
        authentication:
          $ref: '#/components/schemas/authentication3dsV2'
        billingDetails:
          $ref: '#/components/schemas/billingDetails'
        customerIp:
          type: string
          description: This is the customer's IP address.
          example: 204.91.0.12
          maxLength: 39
        dupCheck:
          type: boolean
          description: This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request within the past 90 days.
          example: false
          default: true
        description:
          type: string
          description: 'This is a description of the transaction, provided by the merchant.'
          maxLength: 255
          example: Video Purchase
        storedCredential:
          $ref: '#/components/schemas/storedCredential'
        paymentFacilitator:
          $ref: '#/components/schemas/paymentFacilitator'
      required:
        - card
        - merchantRefNum
    voidAuthorization:
      allOf:
        - $ref: '#/components/schemas/voidAuthorizationRequest'
        - type: object
          properties:
            id:
              type: string
              description: 'This is the ID returned in the response. This ID can be used for future associated requests, e,g., lookups.'
              example: 25f6dadf-176a-415f-95c9-6ff39ff697ba
              maxLength: 36
              readOnly: true
            txnTime:
              type: string
              description: This is the date and time the transaction was processed.
              example: '2017-12-11T16:33:49Z'
              readOnly: true
            status:
              $ref: '#/components/schemas/status'
            riskReasonCode:
              type: array
              description: 'An array of integers is returned, displaying the detailed Risk reason codes if your transaction was declined. It is returned only if your account is configured accordingly.'
              example:
                - 5500
              items:
                type: number
              readOnly: true
            acquirerResponse:
              readOnly: true
              allOf:
                - $ref: '#/components/schemas/acquirerResponse'
            error:
              $ref: '#/components/schemas/error'
            links:
              type: array
              description: |-
                This is an array of links related to the resource.

                Typically you will have reference to any parent resources, and a reference to the child resource (if applicable).
                You may also see links for any call to action flows.
              items:
                $ref: '#/components/schemas/linkVoidAuth'
              readOnly: true
      x-examples:
        VoidAuthorization response:
          id: d1fb46ee-2736-4ef5-a724-f263ace75373
          merchantRefNum: merchant ABC-123-voidauths
          amount: 898
          dupCheck: true
          txnTime: '2017-02-14T15:12:18Z'
          status: COMPLETED
          links:
            - rel: self
              href: 'https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/voidauths/d1fb46ee-2736-4ef5-a724-f263ace75373'
    voidAuthorizationRequest:
      x-internal: true
      type: object
      properties:
        merchantRefNum:
          type: string
          description: This is the merchant reference number created by the merchant and submitted as part of the request.
          example: P1234
          maxLength: 255
        amount:
          type: number
          description: 'This is the amount of the request, in minor units.'
          example: 100
          maximum: 99999999999
        dupCheck:
          type: boolean
          description: This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request within the past 90 days.
          example: false
          default: true
      required:
        - merchantRefNum
        - amount
    tokenType:
      title: Token type
      x-stoplight:
        id: hzsm5waambc68
      type: string
      x-examples: {}
      example: NETWORK_TOKEN
      enum:
        - NETWORK_TOKEN
      x-internal: true
    networkTokenRequest:
      title: Network token
      x-stoplight:
        id: 526b76e904627
      type: object
      x-examples: {}
      x-internal: true
      description: Network token are payment credentials that can substitute PANs for online purchases.
      properties:
        token:
          type: string
          example: '4111111111111111'
          description: The DPAN of the network token.
        cryptogram:
          type: string
          example: AAUAUSAEHSAOUTAOSUAOHEA
          description: 'One-time code used to validate transactions, proving the authenticity of the network token.'
        expiry:
          $ref: '#/components/schemas/networkTokenExpiry'
      required:
        - token
        - expiry
    cardWithNetworkTokenRequest:
      title: Card with network token
      x-stoplight:
        id: b64d209bfd37c
      type: object
      x-examples:
        Example 1:
          tokenType: NETWORK_TOKEN
          networkToken:
            token: '4111111111111111'
            cryptogram: AAUAUSAEHSAOUTAOSUAOHEA
            expiry:
              month: 12
              year: 2045
      x-internal: true
      properties:
        tokenType:
          $ref: '#/components/schemas/tokenType'
        networkToken:
          $ref: '#/components/schemas/networkTokenRequest'
      required:
        - tokenType
        - networkToken
      writeOnly: true
      description: 'Contains data about a network token issued for a [card](/schemas/card).'
    networkTokenResponse:
      title: Network token
      x-stoplight:
        id: cchmiracsoln7
      type: object
      x-internal: true
      description: Network token are payment credentials that can substitute PANs for online purchases.
      properties:
        lastDigits:
          type: string
          example: '1111'
          description: The last digits of the network token DPAN.
        expiry:
          $ref: '#/components/schemas/networkTokenExpiry'
      required:
        - lastDigits
        - expiry
    cardWithNetworkTokenResponse:
      allOf:
        - $ref: '#/components/schemas/cardResponse'
        - type: object
          properties:
            tokenType:
              $ref: '#/components/schemas/tokenType'
            networkToken:
              $ref: '#/components/schemas/networkTokenResponse'
      x-internal: true
      title: Card with network token
      x-examples:
        Example 1:
          type: VI
          lastDigits: '1111'
          cardExpiry:
            month: 12
            year: 2021
          tokenType: NETWORK_TOKEN
          networkToken:
            lastDigits: '1111'
            expiry:
              month: 12
              year: 2045
      description: 'Contains data about a network token issued for a [card](/schemas/card).'
    networkTokenExpiry:
      title: Network token expiry
      x-stoplight:
        id: 15j75go890pbi
      type: object
      x-internal: true
      description: The expiry of the network token.
      properties:
        month:
          type: number
          example: 12
          description: This is the network token expiry month.
        year:
          type: number
          example: 2045
          description: This is the network token expiry year.
      required:
        - month
        - year
security:
  - httpBasic: []
tags:
  - name: Verify That the Service Is Accessible
    description: |
      Verify That the Service Is Accessible
  - name: Authorizations
    description: |
      Authorizations
  - name: Void Authorizations
    description: |
      Void Authorizations
  - name: Verifications
    description: |
      Verifications
  - name: Settlements
    description: |
      Settlements
  - name: Refunds
    description: |
      Refunds
  - name: Original Credits
    description: |
      Original Credits
  - name: Standalone Credits
    description: |
      Standalone Creditsts
