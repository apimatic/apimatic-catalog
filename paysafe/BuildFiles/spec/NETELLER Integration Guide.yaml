openapi: 3.0.0
x-stoplight:
  id: g8ybtfewxzomf
info:
  title: NETELLER Integration Guide
  description: |-
    # Release Notes

    |API Version    |Release Date          |Details|
    |---            |---                   |---|
    |v1             |November 2019         |Document Release|
    |v1             |March 2020            |Webhooks Enhancements - Payload, Best Practices|
    |v1             |June 2020             |Introduced a new error code to notify the merchant when the email provided in the request cannot be found in the Neteller system and if the email id is configured to be non-editable.|

    This guide provides you step-by-step instructions to integrate NETELLER via the new Paysafe Payments API. It also describes changes to the commonly used [NETELLER REST API](https://paysafegroup.github.io/neteller_rest_api_v1/).

    # Integrating to the Paysafe Payments API

    Here's a step-by-step guide:
    1. Get your [API Keys](#api-keys)
    2. Choose your preferred [integration type](#choosing-your-integration)
    3. Check out the API mapping table - [NETELLER REST API endpoints Vs the Paysafe Payments API endpoints](#api-changes)
    4. Understand and create a [Payment Handle](#payment-handle-overview)
    5. [Use Webhooks](#webhooks-events)

    ## API Keys

    The Paysafe Payments API uses two distinct API keys:<br/>

    * The Private Key – used for all server-to-server API requests.</li>

    * The Public Key – used as the value for the apiKey parameter when using the Paysafe Checkout SDK option.</li>

    You can retrieve your Private and Public keys for both the Test & Live accounts via the NETELLER Merchant Dashboard:

    * Live

    * Test

    Your API keys will look something like this:

    * Key Username – MerchantXYZKey

    * Password – B-tst1-0-51ed39e4-312d02345d3f123120881dff9bb4020a89e8ac44cdfdcecd702151182fdc952272661d290ab2e5849e31bb03deede7e
    > **Note:** This is not the same as your login credentials to the NETELLER Merchant Dashboard. The case-sensitive API key is sent using HTTP Basic Authentication. 
    To use HTTP Basic Authentication, you must send the API key credentials using the Authorization header with every request.
    Construct the Authorization header as follows:

    1. Combine the Key Username and Key Password into a string separated by a colon, for example, “Key Username:Key Password”.

    2. The resulting string literal is then encoded using Base64.

    3. Put the authorization method and a space (i.e., “Basic”) before the encoded string. 
    For example, using the Key Username and Password examples above, the header is formed as follows:

    ```Authorization: Basic TWVyY2hhbnRYWVo6Qi10c3QxLTAtNTFlZDM5ZTQtMzEyZDAyMzQ1ZDNmMTIzMTIwODgxZGZmOWJiNDAyMGE4OWU4YWM0NGNkZmRjZWNkNzAyMTUxMTgyZmRjOTU yMjcyNjYxZDI5MGFiMmU1ODQ5ZTMxYmIwM2RlZWRlN2U=```
    For additional details, please refer [here](http://en.wikipedia.org/wiki/Basic_access_authentication).
    <a name="integrationmethods" title="Choosing Your Integration"></a>

    ## Choosing Your Integration

    The Paysafe Payments API supports two integration types:

    1. [Direct API Integration](#api-changes): This method allows you to collect customer payment information on your website while processing transactions. In the case of NETELLER Payments, you need to redirect your customer to the NETELLER page to complete the transaction.

    2. [The Paysafe Checkout](#the-paysafe-checkout): This method allows you to take Payments via any payment method using a secure overlay that is hosted by Paysafe. In the case of NETELLER, the Paysafe Checkout handles the transaction.

    ## API Changes

    ## NETELLER REST API Vs Paysafe Payments API

    Here is a mapping of how NETELLER REST API endpoints map to the Paysafe Payments API endpoints. All of the NETELLER REST API endpoints are listed in the left column, and the equivalent Paysafe Payments API endpoints are in the right column.

    ### Direct Transfer to Merchant: Payment

    |NETELLER REST API Endpoints |Paysafe Payments API Endpoints |
    |----------|----------|
    <table><tr><th>Name</th><th>Endpoint</th></tr><tbody><tr><td>Request Payment (customer to merchant transfer)</td><td>POST [/v1/transferIn](https://paysafegroup.github.io/neteller_rest_api_v1/#/reference/0/payments/request-payment)</td></tr></tbody></table> | <table><tr><th>Name</th><th>Endpoint</th></tr><tbody><tr><td><li>Create a Payment Handle</li><li>Process Payments</li></td></td><td><li>POST [/paymenthandles](operations/create-a-payment-handle)</li><li> POST [/payments](operations/process-payments)</li></td></tr></tbody></table>|

    ### Direct Transfer from Merchant: Standalone Credits

    |NETELLER REST API Endpoints |Paysafe Payments API Endpoints |
    |----------|----------|
    <table><tr><th>Name</th><th>Endpoint</th></tr><tbody><tr><td><br>Send Payment (merchant to customer transfer)</td><td>POST [/v1/transferOut](https://paysafegroup.github.io/neteller_rest_api_v1/#/reference/0/payments/send-payment)</td></tr></tbody></table>|<table><tr><th>Name</th><th>Endpoint</th></tr><tbody><tr><td><li>Create a Payment Handle</li><li>Process Standalone Credits</li></td><td><li>POST [/paymenthandles](operations/create-a-payment-handle)</li><li>POST [/standalonecredits](operations/process-standalone-credits)</li></td></tr></tbody></table>|

    ### Lookup

    |NETELLER REST API Endpoints |Paysafe Payments API Endpoints |
    |----------|----------|
    <table><tr><th>Name</th><th>Endpoint</th></tr><tbody><tr><td>Payment - Lookup Payment(s)</td><td>GET [/v1/payments/{ID}](https://paysafegroup.github.io/neteller_rest_api_v1/#/reference/0/payments/lookup-a-payment)</td></tr></tbody></table>|<table><tr><th>Name</th><th>Endpoint</th></tr><tbody><tr><td><li>Get Payment</li><li>Get Standalone Credits</li></td><td><li>GET [/payments](operations/get-payments)</li><li>GET [/standalonecredits](operations/get-standalone-credits)</li></td></tr></tbody></table>|
    <a name="apiIntegration" title="Direct API Integration"></a>

    ## Direct API Integration

    The Paysafe Payments API allows you to process payment-related requests using the REST protocol. The protocol uses JSON for all requests and responses.

    ### API Endpoints

    The API endpoint (URI or URL) points to either the Test or Production (live) environment.

    * Test API endpoint: ```https://api.test.paysafe.com/paymenthub/v1 ```

    * Production API endpoint: ```https://api.paysafe.com/paymenthub/v1 ```

    ### Making API Calls

    Before you make your first API call, you must have the following information:

    * **API endpoint**: This is the URL to which you send your request, and its format depends on the type of API call.

    * **API key**: Paysafe provides you with the credentials in the NETELLER Merchant Dashboard. You must include the API key in the Authorization HTTPS header.

    * **Message body**: This must contain valid Paysafe JSON objects as required for the type of request. Not all API calls require a message-body; for example, GET requests do not require a body.

    * **Resource ID**: Identifies the unique ID of a resource.
    ![Structure of a Typical Payments API Request](https://github.com/paysafegroup/neteller_integration_guide/raw/master/authentication_example_payments.png)

    * **Payment Simulator**: While testing your integration, you can choose whether you want to make a real payment and go through the payment gateway, or you want to use a page which lets you simulate all payment handle statuses. 
    The behavior is controlled by using an HTTP header named “**Simulator**” in your request, which has the following possible values:
       * **"INTERNAL" (default)** – which redirects you to the simulator page. 
       * **"EXTERNAL"** – which redirects you to the NETELLER payment gateway.

    > **Note:** Ensure all your API requests are UTF-8 encoded.

    ## The Paysafe Checkout

    The Paysafe Checkout is an SDK that allows you to

    - Take Payment from your customers

    - Process Standalone Credits to your customers

    The Paysafe Checkout uses a secure overlay that handles the creation of a Payment Handle and the subsequent redirection (in case of Payments) to NETELLER page for your customers to complete their authentication.

    ## How to use SDK

    1. You must include the Paysafe Checkout SDK in your HTML payment form.

    2. You must call the Checkout setup function using your Public API key. The setup function creates an iframe overlay that shows the processing loader and further redirects the customer to a new tab to complete the authentication. 
    You need to pass a callback function as part of the setup options to receive the Payment Handle response.

    3. The callback should use AJAX to send the Payment Handle representing the customer's payment details to your (merchant) server to [make a payment](operations/process-payments) using the Paysafe Payments API.

    ## Including the SDK

    The SDK is located here:

    * Test:`https://hosted.test.paysafe.com/checkout/v2/paysafe.checkout.min.js`

    * Live:`https://hosted.paysafe.com/checkout/v2/paysafe.checkout.min.js`

    You need to include it in your HTML form by adding a `<script>` element in either the header or body.
    <head>
        <script src="https://hosted.test.paysafe.com/checkout/v2/paysafe.checkout.min.js"></script>
    </head>

    ## Example Payment Form

    The following code sample shows a minimal Paysafe Checkout example for NETELLER Payments that creates and returns a Payment Handle token.

    ```html
    <html>
        <head>
            <script src="https://hosted.test.paysafe.com/checkout/v2/paysafe.checkout.min.js"></script>
        </head>

        <body>
            <button onclick="checkout()"> Pay $25 </button>
        </body>

        <script>
            function checkout() {
                paysafe.checkout.setup("API Key", {
                    "currency": "USD",
                    "amount": 10000,
                    "locale": "en_US",
                    "customer": {
                        "firstName": "John",
                        "lastName": "Dee",
                        "email": "johndee@paysafe.com",
                        "phone": "1234567890",
                        "dateOfBirth": {
                            "day": 1,
                            "month": 7,
                            "year": 1990
                        }
                    },
                    "billingAddress": {
                        "street": "George Street",
                        "street2": "3 Edgar Buildings",
                        "city": "Bath",
                        "zip": "BA10BD8",
                        "country": "GB",
                        "state": "JI"
                    },
                    "environment": "TEST",
                    "merchantRefNum": "1559900597607",
                    "canEditAmount": false,
                    "paymentMethodDetails": {
                        "neteller": {
                            "consumerId": "john.doe@email.com",
                            "consumerIdLocked": true
                        }
                    }
                }, function(instance, error, result) {
                    if (result && result.paymentHandleToken) {
                        console.log(result.paymentHandleToken);
                        // make AJAX call to Payments API
                    } else {
                        console.error(error);
                        // Handle the error
                    }
                }, function(stage, expired) {
                    switch(stage) {
                        case "PAYMENT_HANDLE_NOT_CREATED": // Handle the scenario
                        case "PAYMENT_HANDLE_CREATED": // Handle the scenario
                        case "PAYMENT_HANDLE_REDIRECT": // Handle the scenario
                        case "PAYMENT_HANDLE_PAYABLE": // Handle the scenario
                        default: // Handle the scenario
                    }
                });
            }
        </script>
    </html>
    ```

    ## Example Withdrawal Form

    The following code sample shows a minimal Paysafe Withdrawal Checkout example for NETELLER withdrawal, that creates and returns a Payment Handle token.

    ```html
    <html>
        <head>
            <script src="https://hosted.test.paysafe.com/checkout/v2/paysafe.checkout.min.js"></script>
        </head>

     
        <body>
            <button onclick="checkout()"> Pay $25 </button>
        </body>

        <script>
            function checkout() {
                paysafe.checkout.setup("API Key", {
                    "currency": "USD",
                    "amount": 10000,
                    "locale": "en_US",
                    "customer": {
                        "firstName": "John",
                        "lastName": "Dee",
                        "email": "johndee@paysafe.com",
                        "phone": "1234567890",
                        "dateOfBirth": {
                            "day": 1,
                            "month": 7,
                            "year": 1990
                        }
                    },
                    "billingAddress": {
                        "street": "George Street",
                        "street2": "3 Edgar Buildings",
                        "city": "Bath",
                        "zip": "BA10BD8",
                        "country": "GBP",
                        "state": "JI"
                    },
                    "environment": "TEST",
                    "merchantRefNum": "1559900597607",
                    "canEditAmount": false,
                    "payout":true, 
                    "payoutConfig":{
                        "maximumAmount": 100000
                        },
                    "paymentMethodDetails": {
                        "neteller": {
                            "consumerId": "john.doe@email.com"
                        }
                    }
                }, 
                function(instance, error, result) {
                    if (result && result.paymentHandleToken) {
                        console.log(result.paymentHandleToken);
                        // make AJAX call to Payments API
                    } else {
                        console.error(error);
                        // Handle the error
                    }
                }, 
                function(stage, expired) {
                    switch(stage) {
                        case "PAYMENT_HANDLE_NOT_CREATED": // Handle the scenario
                        case "PAYMENT_HANDLE_CREATED": // Handle the scenario
                        case "PAYMENT_HANDLE_REDIRECT": // Handle the scenario
                        case "PAYMENT_HANDLE_PAYABLE": // Handle the scenario
                        default: // Handle the scenario
                    }
                });
            }
        </script>
    </html>
    ```

    ## Setup Function

    The setup function creates and initializes the Paysafe Checkout in an overlay. It has the following parameters:

    + The Public API key. You can use this key only to generate Payment Handle tokens for use with Payments or Standalone Credits. Consequently, you can expose this key public in the customer's browser.

    + An *options* object contains the environment to use (Test or Live), the payment amount, currency, and several parameters to show additional features in the payment form.

    + A *resultCallback* function you provide to receive the Paysafe Checkout instance, process successful Payment Handle (by sending the Payment Handle to your (merchant) server) or respond to any errors caused by a failed Payment Handle creation.

    + An optional *closeCallback* function to handle the customer closing the payment overlay.
    The function signature is as follows:
    ```
    paysafe.checkout.setup(apiKey, options, resultCallback, closeCallback?)
    ```

    ### Setup Function and Objects

    |Parameter|Type|Required|Validations|Description|
    |---------|-------|---------------|-----------|------------------|
    |apiKey|string|yes||Your Public API key.|
    |[options](#options)|object|yes||Your configuration for rendering the Paysafe Checkout.|
    |[resultCallback](#resultcallback)|function|yes||You should invoke this function while passing the Payment Handle to make payment.|
    |[closeCallback](#closecallback)|function|no|| You should invoke this function when the customer closes the Paysafe Checkout without making a payment.|

    #### **options**
    |Parameter|Type|Required|Validations|Description|
    |---------|-------|---------------|-----------|------------------|
    |currency|string|yes|`length=3`<br/>`Regex:[A-Z]`|The [currency of the merchant account](https://developer.paysafe.com/en/support/reference-information/codes/). For example, USD or CAD.|
    |merchantRefNum|string|yes|`length<=50`|A unique identifier provided for every transaction from the Paysafe Checkout. |
    |amount|number|no|`length=1-9`|The payment amount in minor units to process a transaction. Use the correct minor units amount for the currency passed to options. For example, the value should be 1099 to process US $10.99. The value should be 1000 to process 1000 Japanese yen. To process 10.139 Tunisian dinars, the value should be 10139. You can choose not to pass an amount when the Paysafe Checkout is loaded. In that case, the canEditAmount parameter must be true. However, before clicking Pay, the customer must enter the desired amount in the Paysafe Checkout.|
    |environment|string|no|Possible values are: LIVE or TEST|The environment used for making the API calls and loading the Paysafe Checkout. The default value is LIVE, if not specified.|
    |locale|string|no||The language that the NETELLER pages should be displayed in. See [Possible values](#locale-codes) for a complete list of languages supported.|
    |[billingAddress](#billingaddress)|object|conditional||Displays the billing address of the customer during the checkout. You should include this object for first-time customers with no customer profile. If the customer entity is created with the Paysafe Payments API, then address information from the *singleUseCustomerToken* is used and then you do not have to include the *billingAddress* object. <br>**Note:** If both addresses are included [*singleUseCustomerToken* & *billingAddress*], then Paysafe displays the address information from the billingAddress object.|
    |singleUseCustomerToken|string|no||The *singleUseCustomerToken* that you generate using the Create a Single-Use Customer Token request. The Parameter displays any saved addresses and/or payment details in the Paysafe Checkout.|
    |canEditAmount|boolean|no||If *true*, the customer can edit the amount in the Paysafe Checkout before clicking Pay. The amount is not editable if the value is *false*.|
    |displayPaymentMethods|Array |no |Possible value is: NETELLER |If provided, this is a restricted list of payment methods that a customer sees.|
    |[paymentMethodDetails](#paymentmethoddetails)|object|yes||Required for NETELLER. |
    |payout |boolean |no | | If true, launches the **Withdrawal** Checkout. If false, launches the Paysafe Checkout.<br/> Defaults to false. |
    |[payoutConfig](#payoutconfig) |object | conditional | | Required for the Withdrawal Checkout only. This configuration is used to specify withdrawal limitations. |

    #### **billingAddress**
    |Parameter|Type|Required|Validations|Description|
    |---------|-------|---------------|-----------|------------------|
    |street|string|yes|`length<=50`|The first line of the address.|
    |street2|string|no|`length<=50`|The second line of the address.|
    |city|string|yes|`length<=40`|The city name of the address.|
    |zip|string|yes|`length<=10`|The zip code of the address.|
    |country|string|yes|`length=2`|The country of the address. For example, GB. See [Country Codes](https://developer.paysafe.com/en/support/reference-information/codes/).|
    |state|string|yes|`length<=40`|The state of the address.|

    #### **dateOfBirth**
    |Parameter|Type|Required|Validations|Description|
    |---------|-------|---------------|-----------|------------------|
    |year|number|yes|`length=4 min=1900`|The year of birth.|
    |month|number|yes|`length=2 max=12`|The month of birth.|
    |day|number|yes|`length=2 max=31`|The day of birth.|

    #### **paymentMethodDetails**
    |Parameter|Type|Required|Validations|Description|
    |---------|-------|---------------|-----------|------------------|
    |[neteller](#neteller)          |object|yes||Required for NETELLER payment and withdrawal. |

    #### **payoutConfig**
    |Parameter|Type|Required|Validations|Description|
    |---------|-------|---------------|-----------|------------------|
    |maximumAmount|number|yes|`length=1-9`|It specifies the maximum amount a customer is allowed to withdraw from the Checkout in the current session.|

    >**Note:** The Paysafe Checkout option is not applicable for Standalone Credits request.

    #### **neteller**
    |Parameter|Type|Required|Validations|Description|
    |---------|-------|---------------|-----------|------------------|
    |consumerId             |string|yes|`length<=150|The email address of the customer who is making or receiving the payment. |
    |consumerIdLocked       |boolean|no||If True, the customer cannot edit the consumerId details provided by the merchant.  If False, the customer can edit the consumerId details provided by the merchant. Default: true. <br> **Note:** When the consumerIdLocked is true and if the consumerId is not present in the Neteller system, it will result in transaction failure.|
    |detail1Description     |string|no|`length<=15`|Displays additional details of the product.|
    |detail1Text            |string|no|`length<=150` |Additional text is displayed next to the detailed description (detail1Description) and presented in the 'More Information' section in the header of the payment form with the other payment details.|

    The Paysafe Checkout is displayed when the configuration provided in *options* is correctly validated.

    #### resultCallback

    You should invoke the resultCallback when the Payment Handle is successfully created and is in the PAYABLE state or when there is an error in the Paysafe Checkout. It also passes in an instance of the Paysafe Checkout object.
    Using the functions provided in the *instance* object, you can control the Paysafe Checkout experience.
    The *resultCallback* contains the following elements.
    |Parameter|Type|Required|Description|
    |---------|-------|---------------|-----------|
    |[instance](#instance)|object|yes|The Paysafe Checkout instance.|
    |[error](#error)|object|no|An object containing information for the error. This field is present if Payment Handle creation fails.|
    |[result](#result)|object|yes|Result containing payment token.|
    |{return}|undefined|false||

    #### **instance**
    |Parameter|Type|Required|Description|
    |---------|-------|---------------|-----------|
    |isOpen|function|yes|Checks if the overlay is still open.|
    |close|function|yes|Closes the overlay without displaying payment result.|
    |showSuccessScreen|function|yes|Changes the Paysafe Checkout layout to success screen.|
    |showFailureScreen|function|yes|Changes the Paysafe Checkout layout to failure screen.|

    #### **error**
    |Parameter|Type|Required|Description|
    |---------|-------|---------------|-----------|
    |message|string|yes|Displays an error message to the customers.|
    |detailedMessage|string|yes|Provides a detailed error message that is logged.|
    |correlationId|string|yes|A Unique ID that you can provide to the NETELLER Merchant Support team at <merchantsupport@paysafe.com> as a reference for investigation.|

    <a name="result"></a>
    #### **result**
    |Parameter|Type|Required|Description|
    |---------|-------|---------------|-----------|
    |paymentHandleToken|string|yes|The Payment Handle token to be passed to the Paysafe Payments API call.|
    |paymentMethod|string|yes|The payment method used by the customer.|
    |customerOperation|string|yes|The customer operation for the card. Values: ADD, EDIT or DELETE.|
    |amount|number|yes|The amount used to create the Payment Handle. This is required because the customer might change the amount in the Paysafe Checkout.|


    #### closeCallback

    Invoked when the Paysafe Checkout overlay is closed by the customer. 
    The *closeCallback* contains the following elements.
    |Parameter|Type|Required|Description|
    |---------|-------|---------------|-----------|
    |stage|string|yes|The Stage during which the Paysafe Checkout overlay closes. Possible values are: *PAYMENT_HANDLE_NOT_CREATED*, *PAYMENT_HANDLE_CREATED*, *PAYMENT_HANDLE_REDIRECT*, *PAYMENT_HANDLE_PAYABLE* <ul><li>PAYMENT_HANDLE_NOT_CREATED: Customer did not click on the pay button, and did not proceed with the payment.</li><li>PAYMENT_HANDLE_CREATED: Customer clicked on the pay button, but Payment flow is incomplete.</li><li>PAYMENT_HANDLE_REDIRECT: Customer is redirected for authentication, but payment flow is incomplete.</li><li>PAYMENT_HANDLE_PAYABLE: Payment flow is complete and Payment Handle token is returned. You can now proceed with payment using the Payment Handle token.</li>  </ul>|
    |expired|boolean|yes|Indicates whether the *close* event is triggered after the Paysafe Checkout expired.|
    |{return}|undefined|false|


    # Payment Handle Overview

    A payment handle is a token that represents the customer's profile and payment method details.
    A payment handle includes information of your NETELLER request and the type of transaction it uses. When you create a payment handle, the Paysafe Payments API returns a *paymentHandleToken* in the response. That token represents customer payment information you need to include in the NETELLER payment request.
    For every transaction, You must create a new Payment Handle before you can process Payments or Standalone Credits. 
    Payment handles typically have a lifespan of 15 minutes and you can use it only once. A payment or Standalone Credits can only be processed if the corresponding Payment Handle token is in PAYABLE state.

    ## Some Important Parameters

    A few additional parameters are important during the creation of a Payment Handle because they have a significant impact on how you use the generated payment token (*paymentHandleToken*):

    * action

    * usage

    * executionMode

    ### Action

    The *action* parameter is a read-only value that Paysafe returns in response to the Payment Handle creation request.
    The possible value is:

    * REDIRECT –  The customer is required to authorize the payment on a redirected page. In this case, you must redirect the customer to a link that Paysafe returns in response to the Payment Handle creation request. Once the customer completes the authentication successfully, the *status* of the Payment Handle token is **PAYABLE**.

    * NONE - No further action is required from the customer.

    ### Usage

    The *usage* parameter is a read-only value that Paysafe returns in response to the Payment Handle creation request that specifies whether the Payment Handle token (*paymentHandleToken*) can be used once or multiple times. 
    The possible value is:

    * SINGLE_USE – You can use the Payment Handle token only once for a subsequent Paysafe Payments API request in this case.

    ### Execution Mode

    The *executionMode* parameter is a read-only value. Paysafe returns this in response to the Payment Handle creation request indicating whether the payment request is completed or not.
    The possible value is:

    * SYNCHRONOUS - The Payment status is sent to the Merchant synchronously. In case of timeouts, you will receive webhook notifications in the configured URL.

    # How to process NETELLER Payments

    To process NETELLER Payments, you have to make the following API calls:

    * Create Payment Handle

    * Process Payments

    ![Payment- Transfer In](https://github.com/paysafegroup/neteller_integration_guide/raw/master/payments.png)

    # How to process NETELLER Standalone Credits

    To process NETELLER Standalone Credits, you have to make the following API calls:

    * Create Payment Handle

    * Process Standalone Credits

    ![Standalone Credits- Transfer Out](https://github.com/paysafegroup/neteller_integration_guide/raw/master/standalone_credit.png)

    ## Webhooks Events

    > **Note:** If you have already set up webhooks events in the Neteller Merchant Portal, below events are enabled by default. However, if you need to modify any of your webhook settings, or have not configured earlier, you can still do that. Please contact us at <merchantsupport@paysafe.com>.

    Webhooks will be triggered for the following events: 
    |Event Type|Description|
    |----------|----------|
    |PAYMENT_HANDLE_PAYABLE | The Payment Handle status is PAYABLE. You can use it for the payment call. |
    |PAYMENT_HANDLE_COMPLETED | Payments call is received for the associated Payment Handle. |
    |PAYMENT_HANDLE_FAILED | The Payment Handle request failed. The failure could be due to an error or a declined transaction. |
    |PAYMENT_HANDLE_EXPIRED | Payment handle has expired. Either the user did not complete the authentication, or the payment request was not generated within 15 minutes of the payment handle creation. |
    |PAYMENT_COMPLETED | The payment request is completed. |
    |PAYMENT_HELD | The payment request is placed on hold due to risk considerations. |
    |PAYMENT_FAILED | The payment request failed due to an error or a declined transaction. |
    |SA_CREDIT_COMPLETED | The Standalone Credits request is completed. |
    |SA_CREDIT_HELD | The Standalone Credits request is placed on hold due to risk considerations. |
    |SA_CREDIT_FAILED | The Standalone Credits request failed due to an error or a declined transaction. |
    |SA_CREDIT_CANCELLED | The Standalone Credits request is cancelled. |

    > **Note:** The correct order for the Payment Handle event status is PAYABLE -> COMPLETED. It is unlikely that the notifications might be out of order, but if this happens, please call the API "[Get Payment Handle](operations/get-payment-handle)" for the exact status of the Payment Handle.

    ## Sample Webhooks Payload

    This is an example of a typical webhooks payload received when a Payments call is received for an associated Payment Handle.

    ```
    {
            "payload": {
            "accountId": "1011872745",
            "id": "944b9b19-c07c-4953-98ec-761272aef759",
            "merchantRefNum": "3de43050-a857-4b13-a27d-da35daea253d",
            "amount": 100,
            "currencyCode": "USD",
            "status": "COMPLETED",
            "paymentType": "NETELLER",
            "txnTime": "2020-03-18T11:53:29Z"
            },
            "eventType": "PAYMENT_HANDLE_COMPLETED",
            "attemptNumber": "1",
            "resourceId": "944b9b19-c07c-4953-98ec-761272aef759",
            "eventDate": "2020-03-18T11:53:29Z",
            "links": [
             {
               "href": "https://api.qa.paysafe.com/alternatepayments/v1/accounts/1011872745/paymenthandles/944b9b19-c07c-4953-98ec-761272aef759",
               "rel": "payment_handle"
             }
            ],
            "mode": "live",
            "eventName": "PAYMENT_HANDLE_COMPLETED"
    }
    ```

    > **Note**: Unlike your NETELLER Webhook, you will not receive a Secret key here as part of the payload. Rather, you need to consume the payload directly.

    ## Webhook Best Practices

    + When the status of one of your transaction request changes, Paysafe immediately sends a callback to your webhook's endpoint URL to inform you of the status change.

    + To acknowledge the receipt of the webhook, Paysafe expects an HTTP status of 200 OK or 202 ACCEPTED from your endpoint. In case we receive any other HTTP status code, we assume that you have not received the webhook, and we attempt to resend it.

    + If Paysafe does not get an acknowledgment of receipt with an HTTP Status Code of 200 or 202, it makes a maximum of 2 additional attempts (total 3 attempts) to send a callback to that URL.

    + As Paysafe does not have a notification method to alert you when callbacks are not reaching your endpoint URL, you should make sure that there is continued availability of your endpoint.

    + All endpoint URLs should use HTTPS/SSL to ensure security. Please note that only the default **HTTPS port 443** is supported.

    + In case you have received the same notification multiple times for an already processed event, we request you to ignore the duplicate notification. It is recommended to make the notification URL endpoints idempotent.

    # Error Summary

    ## Common Errors

    |HTTP Status Code|Error Code|Description|
    |---------|---------|---------------|
    |500|1000|An internal error occurred.|
    |502|1001|An error occurred with the external processing way.|
    |500|1002|An internal error occurred.|
    |500|1003|An internal error occurred.|
    |500|1007|An internal error occurred.|
    |500|1008|An internal error occurred.|
    |429|1200|The API call has been denied as it has exceeded the permissible call rate limit.|
    |401|5000|Your merchant account authentication failed. Either your stored ID/password are invalid or the IP address from which you are sending the transaction has not been authorized.|
    |400|5001|The submitted currency code is invalid or your account does not support this currency.|
    |400|5003|You submitted an invalid amount with your request.|
    |400|5004|You submitted an invalid account type with your request.|
    |400|5005|You submitted an invalid operation type with your request.|
    |400|5010|The submitted country code is invalid.|
    |400|5016|The merchant account you provided cannot be found.|
    |400|5017|The merchant account you provided is disabled.|
    |402|5021|Your transaction request has been declined.|
    |400|5023|The request is not parsable.|
    |409|5031|The transaction you have submitted has already been processed.|
    |401|5040|Your merchant account is not configured for the transaction you attempted.|
    |400|5042|The merchant reference number is either missing or invalid. Or it may even exceed the maximum permissible length.|
    |400|5068|Either you submitted a request that is missing a mandatory field or the value of a field does not match the format expected.|
    |404|5269|The ID(s) specified in the URL do not correspond to the values in the system.|
    |403|5270|The credentials provided with the request do not have permission to access the requested data.|
    |406|5271|You requested a response in the 'Accept' header that is in an unsupported format.|
    |406|5272|The 'Content-Type' you specified in request header was submitted in an unsupported format.|
    |404|5273|Your client reached our application but we were unable to service your request due to an invalid URL.|
    |401|5275|The authentication credentials provided with the request have expired.|
    |401|5276|The authentication credentials provided with the request provided have been disabled.|
    |401|5277|The authentication credentials provided with the request have been locked due to multiple authentication failures.|
    |401|5278|The authentication credentials provided with the request were not accepted for an unknown reason.|
    |401|5279|The authentication credentials are invalid.|
    |401|5280|The required authentication credentials were not provided.|
    |405|5281|The request uses an action (for example, GET, POST, or PUT) that is not supported by the resource.|
    |400|5283|The requested operation can only be executed on a Payment Handle with the status of *PAYABLE*.|

    ## Payment Errors

    |HTTP Status Code|Error Code|Description|
    |---------|---------|---------------|
    |400|PAYMENTHUB-1 |The submitted payment type and currency code combination is not supported. |
    |409|5284|An entity with the specified identifier(s) already exists.|
    |400|5303|Payment instrument already exists.|
    |403|5309|The maximum amount of money allowed for the requested operation is exceeded.|

    ## Alternate Payments Errors

    |HTTP Status   |Error Code                    |Message                                 |Details|
    |---           |---                           |---                                     |---|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-1  |Transaction cancelled at the gateway    |The transaction was cancelled at the gateway.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-4  |Transaction declined by the gateway     |The transaction declined by the gateway. |
    |402           |ALTERNATE-PAYMENTS-GATEWAY-5  |Incomplete transaction                  |The requested operation can only be executed on a completed transaction.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-6  |Over refund                             |The total refund amount cannot exceed the original payment amount.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-7  |Payment expired                         |The payment has expired.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-8  |Over settlement                         |The total Settlement amount cannot exceed the authorized (payment) amount.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-9  |Risk gateway error                      |A risk issue was reported by the gateway.|
    |502           |ALTERNATE-PAYMENTS-GATEWAY-10 |Payment type temporarily unavailable    |The gateway is temporarily unavailable due to system maintenance activities.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-11 |Over voidauth                           |The void authorization cannot exceed the amount remaining to settle for the corresponding payment.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-12 |Payment already settled                 |The payment is already partially/fully settled.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-13 |Transaction not refundable yet          |The transaction is not refundable yet.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-14 |Partial settlements not possible        |Partial Settlements are not possible with the selected payment method.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-16 |Over limit.                             |The requested amount exceeds the allowed maximum for the specified payment type.|
    |504           |ALTERNATE-PAYMENTS-GATEWAY-17 |Activity timed out.                     |Your request timed out before it could be completed.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-19 |Insufficient funds.                     |The payment instrument does not have sufficient funds.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-20 |The third-party account has not been activated. |The third-party account has not been activated.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-21 |Under limit.                            |The requested amount is under the allowed minimum amount for the specified payment type.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-22 |Identity check Failure.                 |The provided identity details do not match the identity details already present.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-23 |The KYC documents provided could not be verified. |The KYC documents provided could not be verified.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-24 |There is an already existing third-party account with the details provided. |There is an already existing third-party account with the details provided.|
    |402           |ALTERNATE-PAYMENTS-GATEWAY-25 |Third Party Account does not exist       |The specified third party account could not be found.|

    # Pagination

    In the case where an API GET request returns multiple results, Paysafe returns the first 10 records by default and uses HATEOAS links to provide page navigation. In addition to the default behavior, it is also possible to control the number of results and starting point by passing in query parameters  as described in this [section](https://developer.paysafe.com/en/support/reference-information/pagination/).

    <b>Sample Response with List Data</b>

    <p>

    ```html
    {
        "meta": {
            "numberOfRecords": 1,
            "limit": 10,
            "page": 1
        },
      "paymentHandles":[{
      "id": "26359efd-7cfb-4014-a13d-1724e3ff17fa",
      "amount": 1900,
      "merchantRefNum": "merchantRefNum-115",
      "action": "REDIRECT",
      "currencyCode": "GBP",
      "usage": "SINGLE_USE",
      "status": "EXPIRED",
      "timeToLiveSeconds": 0,
      "transactionType": "PAYMENT",
      "paymentType": "NETELLER",
      "executionMode": "SYNCHRONOUS",
      "customerIp": "172.0.0.1",
      "paymentHandleToken": "SC0YsGIIgFksiOsQ",
      "billingDetails": {
         "street": "George Street",
         "street2": "3 Edgar Buildings",
         "city": "Bath",
         "zip": "BA1 2FJ",
         "country": "GB"
      },
        "neteller": {
        "consumerId": "johndoe@email.com",
        "detail1Description":"description",
        "detail1Text":"Details 1 text"  
        },
      "links": [{
                "rel": "on_completed",
                "href": "https://US_commerce_site/payment/return/success",
            },
            {
                "rel": "on_failed",
                "href": "https://US_commerce_site/payment/return/failed",
            }
        ]}
    }
    ```
    </p>

    <a name="globalinvalidcharacters" title="Global Invalid Characters"></a>

    # Global Invalid Characters

    You must not include any of the characters in this [table](https://developer.paysafe.com/en/support/reference-information/global-invalid-characters/) as values in any of your request parameters. Object. If you do, your request will result in an error.

    <a name="isostandards" title="ISO Standards"></a>

    # ISO Standards

    <a name="isostandards" title="ISO Standards"></a>
    ISO standards add value by providing the common business process data semantics to be used in the API based exchanges. This [section](https://developer.paysafe.com/en/support/reference-information/codes/) presents you codes for four areas - Currency, Province, State, and Country.

    ### Locale Codes

    |Locale         |Code   |
    |---            |---    |
    |English        |en, en_GB, en_US|
    |French         |fr, fr_FR, fr_CA |

    # Legal and Community

    <ul>
    <li><a href="https://www.paysafe.com/paysafegroup/privacy-policy/" target="_blank">Privacy Policy</a></li>
    <li><a href="https://developer.paysafe.com/en/support/reference-information/terms-of-use/" target="_blank">Terms of Use</a></li>
    <li><a href="https://www.paysafe.com/paysafegroup/regulatory-disclosures/" target="_blank">Regulatory Disclosures</a></li>
    </ul>
  contact: {}
  version: '1.0'
servers:
  - url: 'https://api.test.paysafe.com/paymenthub'
    variables: {}
paths:
  /v1/paymenthandles:
    post:
      summary: Create a Payment Handle
      description: |-
        A Payment Handle is a token that represents a payment method that you set up for a customer. Once the Payment Handle is created, you then include the *paymentHandleToken* returned in the Payment Handle request response in a new payment request.
        <br>

        > **Note:** You can use a Payment Handle in a [Payment request](/operations/process-payments) only if it has the status of **PAYABLE**.<a name="paymenthandlerequest" title="Create a Payment Handle"></a>

        Click on **Send API Request** after entering the required data, to see how to create a Payment Handle object.
      operationId: create-a-payment-handle
      parameters:
        - name: Simulator
          in: header
          style: simple
          schema:
            enum:
              - INTERNAL
              - EXTERNAL
            type: string
            default: INTERNAL
            example: EXTERNAL
        - schema:
            type: string
            default: application/json
            enum:
              - application/json
            example: application/json
          in: header
          name: Content-Type
          required: true
        - schema:
            type: string
            enum:
              - 'true'
              - 'false'
            example: 'false'
            default: 'false'
          in: header
          name: Live-Mode
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              x-examples:
                example-1:
                  merchantRefNum: merchantRefNum-201
                  transactionType: PAYMENT
                  neteller:
                    consumerId: johndoe@email.com
                    consumerIdLocked: true
                    detail1Description: description
                    detail1Text: Details 1 text
                  paymentType: NETELLER
                  amount: 500
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  billingDetails:
                    street: George Street
                    street2: 3 Edgar Buildings
                    city: Bath
                    zip: BA1 2FJ
                    country: GB
                  returnLinks:
                    - rel: on_completed
                      href: 'https://usgaminggambling.com/payment/return/success'
                    - rel: on_failed
                      href: 'https://usgaminggambling.com/payment/return/failed'
                    - rel: default
                      href: 'https://usgaminggambling.com/payment/'
              properties:
                merchantRefNum:
                  type: string
                  example: merchantRefNum-201
                  description: This is the merchant reference number created by you and submitted as part of the request. It must be unique for each request.
                transactionType:
                  $ref: '#/components/schemas/paymentSCTtransactionType'
                neteller:
                  $ref: '#/components/schemas/neteller'
                paymentType:
                  type: string
                  example: NETELLER
                  description: |-
                    This is the payment type associated with this Payment Handle. 
                    Possible value is:
                    NETELLER
                amount:
                  type: number
                  example: 500
                  description: |-
                    This is the amount of the request, in minor units. 
                    For example, to process US $10.99, this value should be 1099.

                    Note: The amount specified in the Payment request must match the amount specified in the Payment Handle request from which the paymentHandleToken is taken.
                currencyCode:
                  type: string
                  example: USD
                  description: |-
                    This is the currency of your account, for example, USD or CAD, returned in the request response. See [Currency Codes](https://developer.paysafe.com/en/support/reference-information/codes/).

                    Note: The currencyCode specified in the Payment request must match the currencyCode specified in the Payment Handle request from which the paymentHandleToken is taken. 
                    This is a mandatory field.
                customerIp:
                  type: string
                  example: 172.0.0.1
                  description: |
                    This is the customer's IP address.
                billingDetails:
                  $ref: '#/components/schemas/billingDetails'
                returnLinks:
                  type: array
                  items:
                    $ref: '#/components/schemas/returnLinks'
              required:
                - merchantRefNum
                - transactionType
                - paymentType
            examples:
              example-1:
                value:
                  merchantRefNum: merchantRefNum-201
                  transactionType: PAYMENT
                  neteller:
                    consumerId: johndoe@email.com
                    consumerIdLocked: true
                    detail1Description: description
                    detail1Text: Details 1 text
                  paymentType: NETELLER
                  amount: 500
                  currencyCode: USD
                  customerIp: 172.0.0.1
                  billingDetails:
                    street: George Street
                    street2: 3 Edgar Buildings
                    city: Bath
                    zip: BA1 2FJ
                    country: GB
                  returnLinks:
                    - rel: on_completed
                      href: 'https://usgaminggambling.com/payment/return/success'
                    - rel: on_failed
                      href: 'https://usgaminggambling.com/payment/return/failed'
                    - rel: default
                      href: 'https://usgaminggambling.com/payment/'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createaPaymentHandleresponse'
              example:
                id: 82d57742-e2db-48ea-a726-a60e6f8265a5
                paymentType: NETELLER
                paymentHandleToken: PHQhlWpTRKzBXubN
                merchantRefNum: 5493aaf1a1d6dd13d2b53412f0ec
                currencyCode: USD
                dupCheck: true
                status: INITIATED
                liveMode: true
                usage: SINGLE_USE
                action: REDIRECT
                executionMode: SYNCHRONOUS
                amount: 500
                billingDetails:
                  street: George Street
                  street2: 3 Edgar Buildings
                  city: Bath
                  zip: BA1 2FJ
                  country: GB
                customerIp: 172.0.0.1
                timeToLiveSeconds: 899
                gatewayResponse:
                  orderId: ORD_0d676b4b-0eb8-4d78-af25-e41ab431e325
                  totalAmount: 3599
                  currency: EUR
                  status: pending
                  lang: en_US
                  processor: NETELLER
                neteller:
                  consumerId: johndoe@email.com
                  detail1Description: description
                  detail1Text: Details 1 text
                returnLinks:
                  - rel: default
                    href: 'https://usgaminggambling.com/payment/'
                  - rel: on_completed
                    href: 'https://usgaminggambling.com/payment/return/success'
                  - rel: on_failed
                    href: 'https://usgaminggambling.com/payment/return/failed'
                txnTime: '2019-01-24T10:39:50Z'
                updatedTime: '2019-01-24T10:39:50Z'
                statusTime: '2019-01-24T10:39:50Z'
                links:
                  - rel: redirect_payment
                    href: 'https://customer.at.neteller.com/rest/payment/panel?mid=1090001806&mtid=pay_1090001806_00LwEhZ8WtIy8PmIhRCUi3JScUti6jKi_EUR&amount=0.01&currency=EUR&customerHash=741e624cf6ae4fbca4338cb5597fe531'
      deprecated: false
      tags:
        - Payment Handle
    get:
      summary: Get Payment Handle Using Merchant Reference Number
      description: |
        Click on **Send API Request** after entering the required data, to see how to look up a Payment Handle using the merchant reference number used in the [original request](/operations/create-a-payment-handle).
      operationId: get-payment-handle-using-merchant-reference-number
      parameters:
        - name: merchantRefNum
          in: query
          description: This is the *merchantRefNum* used in the original Payment Handle creation request.
          required: true
          style: form
          schema:
            type: string
            example: '13995817730005389'
        - name: limit
          in: query
          description: |-
            This is the total number of records to return. Default = 10.
            _Optional_ _Max=50_
          style: form
          explode: true
          schema:
            type: number
            example: 32
        - name: offset
          in: query
          description: 'This is the starting position, where 0 is the first record. Default = 0.'
          style: form
          explode: true
          schema:
            type: number
            example: 0
        - name: startDate
          in: query
          description: This is the start date in UTC. Default = 30 days before the *endDate*.
          style: form
          explode: true
          schema:
            type: string
            example: '2019-01-26'
        - name: endDate
          in: query
          description: This is the end date in UTC. Default = current date and time.
          style: form
          explode: true
          schema:
            type: string
            example: '2019-03-26'
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    meta:
                      numberOfRecords: 1
                      limit: 10
                      page: 1
                    paymentHandles:
                      - id: 037490af-89ee-4794-9022-f7b91a6ddaac
                        merchantRefNum: b8a8ae3d-1771-4113-aa54-be0721977c0d
                        paymentHandleToken: PHi2MeARP5OxuXIm
                        status: INITIATED
                        paymentType: NETELLER
                        liveMode: false
                        usage: SINGLE_USE
                        action: REDIRECT
                        executionMode: SYNCHRONOUS
                        amount: 100
                        currencyCode: USD
                        merchantDescriptor:
                          dynamicDescriptor: OnlineStore
                          phone: '12345678'
                        billingDetails:
                          street1: 100 Queen
                          street2: Unit 201
                          zip: M5H 2N2
                          city: Toronto
                          country: CA
                        customerIp: 172.0.0.1
                        timeToLiveSeconds: 645
                        gatewayResponse:
                          orderId: ORD_5cc31a72-5ac9-429b-8105-43c8a1c1189e
                          totalAmount: '100'
                          currency: USD
                          lang: en_US
                          status: pending
                          processor: NETELLER
                        returnLinks:
                          - rel: default
                            href: 'https://usgaminggamblig.com/payment/return/success'
                          - rel: on_cancelled
                            href: 'https://usgaminggamblig.com/payment/return/cancelled'
                          - rel: on_failed
                            href: 'https://usgaminggamblig.com/payment/return/failed'
                          - rel: on_completed
                            href: 'https://usgaminggamblig.com/payment/return/completed'
                        transactionType: PAYMENT
                        txnTime: '2020-03-19T06:38:07Z'
                        updatedTime: '2020-03-19T06:38:08Z'
                        statusTime: '2020-03-19T06:38:08Z'
                        links:
                          - rel: self
                            href: 'https://api.qa.paysafe.com/alternatepayments/v1/accounts/1011872745/paymenthandles/037490af-89ee-4794-9022-f7b91a6ddaac'
                        neteller:
                          consumerId: neteller.account@example.org
                          consumerIdLocked: true
                properties:
                  meta:
                    $ref: '#/components/schemas/meta'
                  paymentHandles:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          readOnly: true
                          example: 037490af-89ee-4794-9022-f7b91a6ddaac
                          description: |
                            This attribute is the ID returned in the response. It can be used to retrieve the paymentHandle.
                        merchantRefNum:
                          type: string
                          example: b8a8ae3d-1771-4113-aa54-be0721977c0d
                          description: This is the merchant reference number created by you and submitted as part of the request. It must be unique for each request.
                        paymentHandleToken:
                          type: string
                          readOnly: true
                          example: PHi2MeARP5OxuXIm
                          description: This attribute is the payment token generated by Paysafe that will be used by merchants for the Paysafe Payments API requests.
                        status:
                          $ref: '#/components/schemas/paymentHandleStatus'
                        paymentType:
                          type: string
                          example: NETELLER
                          enum:
                            - NETELLER
                          description: 'This is the payment type associated with this Payment Handle. '
                        liveMode:
                          type: boolean
                          default: false
                        usage:
                          type: string
                          enum:
                            - SINGLE_USE
                          example: SINGLE_USE
                          description: 'This attribute specifies how the Payment Handle will be used for Payments. '
                        action:
                          type: string
                          readOnly: true
                          example: REDIRECT
                          enum:
                            - REDIRECT
                            - NONE
                          description: |
                            This attribute specifies the next step of the customer journey once they proceed to the Payment. 
                        executionMode:
                          type: string
                          readOnly: true
                          example: SYNCHRONOUS
                          enum:
                            - SYNCHRONOUS
                          description: 'This attribute specifies the action of the merchant server in order to complete the Payment. '
                        amount:
                          type: number
                          example: 100
                          description: |-
                            This is the amount of the request in minor units.

                            Note: This field is mandatory if transactionType is included.

                            The amount specified in the Payment Handle request must match the amount specified in the Paysafe Payments API request the paymentHandleToken is used for.
                        currencyCode:
                          type: string
                          readOnly: true
                          example: USD
                          description: |-
                            This is the currency of your account, for example, USD or CAD, returned in the request response. See [Currency Codes](https://developer.paysafe.com/en/support/reference-information/codes/).

                            Note: The currencyCode specified in the Payment request must match the currencyCode specified in the Payment Handle request from which the paymentHandleToken is taken. 
                            This is a mandatory field.
                        merchantDescriptor:
                          $ref: '#/components/schemas/merchantDescriptor'
                        billingDetails:
                          $ref: '#/components/schemas/billingDetails'
                        customerIp:
                          type: string
                          example: 172.0.0.1
                          description: This is the customer's IP address.
                        timeToLiveSeconds:
                          type: number
                          readOnly: true
                          example: 645
                          description: |
                            This attribute is the period of time, in seconds, the paymentHandleToken is valid before expiration.
                        gatewayResponse:
                          $ref: '#/components/schemas/paymentHandleGatewayResponse'
                        returnLinks:
                          $ref: '#/components/schemas/returnLinks'
                        transactionType:
                          $ref: '#/components/schemas/paymentSCTtransactionType'
                        txnTime:
                          type: string
                          readOnly: true
                          example: '2020-03-19T06:38:07Z'
                          description: This is the date and time the request was processed.
                        updatedTime:
                          type: string
                          readOnly: true
                          example: '2020-03-19T06:38:08Z'
                          description: ISO 8601 format (UTC) This is the date and time the resource was last updated.
                        statusTime:
                          type: string
                          readOnly: true
                          example: '2020-03-19T06:38:08Z'
                          description: ISO 8601 format (UTC) This is the date and time the resource was last updated.
                        links:
                          type: array
                          items:
                            $ref: '#/components/schemas/returnLinks'
                        neteller:
                          $ref: '#/components/schemas/neteller'
                      required:
                        - id
                        - merchantRefNum
                        - paymentHandleToken
                        - status
                        - paymentType
                        - amount
                        - currencyCode
                        - returnLinks
                        - transactionType
                        - links
              examples:
                example-1:
                  value:
                    meta:
                      numberOfRecords: 1
                      limit: 10
                      page: 1
                    paymentHandles:
                      - id: 037490af-89ee-4794-9022-f7b91a6ddaac
                        merchantRefNum: b8a8ae3d-1771-4113-aa54-be0721977c0d
                        paymentHandleToken: PHi2MeARP5OxuXIm
                        status: INITIATED
                        paymentType: NETELLER
                        liveMode: false
                        usage: SINGLE_USE
                        action: REDIRECT
                        executionMode: SYNCHRONOUS
                        amount: 100
                        currencyCode: USD
                        merchantDescriptor:
                          dynamicDescriptor: OnlineStore
                          phone: '12345678'
                        billingDetails:
                          street1: 100 Queen
                          street2: Unit 201
                          city: Toronto
                          zip: M5H 2N2
                          country: CA
                        customerIp: 172.0.0.1
                        timeToLiveSeconds: 645
                        gatewayResponse:
                          orderId: ORD_5cc31a72-5ac9-429b-8105-43c8a1c1189e
                          totalAmount: 500
                          currency: USD
                          lang: en_US
                          status: pending
                          processor: NETELLER
                        returnLinks:
                          rel: default
                          href: 'https://usgaminggambling.com/payment/'
                        transactionType: PAYMENT
                        txnTime: '2020-03-19T06:38:07Z'
                        updatedTime: '2020-03-19T06:38:08Z'
                        statusTime: '2020-03-19T06:38:08Z'
                        links:
                          - rel: default
                            href: 'https://usgaminggambling.com/payment/'
                        neteller:
                          consumerId: neteller.account@example.org
                          consumerIdLocked: true
      deprecated: false
      tags:
        - Payment Handle
    parameters: []
  '/v1/paymenthandles/{paymenthandle_id}':
    get:
      summary: Get Payment Handle
      description: 'Click on **Send API Request** after entering the required data, to see how to look up a Payment Handle using the ID returned in the response to the [original request](/operations/create-a-payment-handle).'
      operationId: get-payment-handle
      parameters:
        - name: paymenthandle_id
          in: path
          description: 'This is the Payment Handle ID returned in the response to the [Payment Handle creation request](/operations/create-a-payment-handle).'
          required: true
          style: simple
          schema:
            type: string
            example: 26359efd-7cfb-4014-a13d-1724e3ff17fa
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPaymentHandleresponse'
              example:
                id: 037490af-87ee-4794-9022-f7b91a6ddaac
                paymentType: NETELLER
                paymentHandleToken: PHi2MeARP5OxuXIm
                merchantRefNum: b8a8ae3d-1771-4113-aa54-be0721977c0d
                currencyCode: USD
                txnTime: '2020-03-19T06:38:07.000+0000'
                billingDetails:
                  street: 100 Queen
                  street2: Unit 201
                  city: Toronto
                  zip: M5H 2N2
                  country: CA
                customerIp: 172.0.0.1
                status: INITIATED
                links:
                  - rel: redirect_payment
                    href: 'https://api.qa.paysafe.com/alternatepayments/v1/redirect?accountId=1011872745&paymentHandleId=037490af-89ee-4794-9022-f7b91a6ddaac&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDExODcyNzQ1IiwicHlkIjoiMDM3NDkwYWYtODllZS00Nzk0LTkwMjItZjdiOTFhNmRkYWFjIiwiZXhwIjoxNTg0NjAxNjg4fQ.e-C3wR7Z3sqBLp0-lS4ksZNsKvs4jV-J_kLphB4N5aM'
                liveMode: false
                usage: SINGLE_USE
                action: REDIRECT
                executionMode: SYNCHRONOUS
                amount: 100
                merchantDescriptor:
                  dynamicDescriptor: OnlineStore
                  phone: '12345678'
                timeToLiveSeconds: 899
                gatewayResponse:
                  orderId: ORD_5cc31a72-5ac9-429b-8105-43c8a1c1189e
                  totalAmount: 100
                  currency: USD
                  lang: en_US
                  status: pending
                  processor: NETELLER
                returnLinks:
                  - rel: on_completed
                    href: 'https://usgaminggamblig.com/payment/return/completed'
                  - rel: on_cancelled
                    href: 'https://usgaminggamblig.com/payment/return/cancelled'
                  - rel: on_failed
                    href: 'https://usgaminggamblig.com/payment/return/failed'
                  - rel: default
                    href: 'https://usgaminggamblig.com/payment/return/success'
                transactionType: PAYMENT
                updatedTime: '2020-03-19T06:38:08Z'
                statusTime: '2020-03-19T06:38:08Z'
                neteller:
                  consumerId: neteller.account@example.org
                  consumerIdLocked: true
      deprecated: false
      tags:
        - Payment Handle
    parameters:
      - schema:
          type: string
        name: paymenthandle_id
        in: path
        required: true
  /v1/payments:
    post:
      tags:
        - Payments
      summary: Process Payments
      description: |
        Payment requests allow you to process a payment using the *paymentHandleToken* that you have created. In a single request, the payment is authorized and settled. You need to set the *settleWithAuth* parameter to true. The examples below include a *paymentHandleToken* created for NETELLER.<a name="paymentrequest" title="Post Payment Using Payment Handle Token"></a>

        Click on **Send API Request** after entering the required data, to see how to create a Payment request using a Payment Handle token received in response to [payment handle request](/operations/create-a-payment-handle).
      operationId: process-payments
      parameters:
        - name: Simulator
          in: header
          description: ''
          style: simple
          schema:
            type: string
            example: EXTERNAL
            enum:
              - EXTERNAL
              - INTERNAL
            default: INTERNAL
        - schema:
            type: string
            default: application/json
            enum:
              - application/json
            example: application/json
          in: header
          name: Content-Type
          required: true
        - schema:
            type: string
            default: 'false'
            enum:
              - 'true'
              - 'false'
            example: 'false'
          in: header
          name: Live-Mode
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              x-examples:
                example-1:
                  merchantRefNum: merchantRefNum-108
                  amount: 1900
                  currencyCode: GBP
                  dupCheck: true
                  settleWithAuth: true
                  paymentHandleToken: SCZJg09GWSv36NLB
                  customerIp: 10.10.12.64
                  description: Magazine subscription
              properties:
                merchantRefNum:
                  type: string
                  example: merchantRefNum-108
                  description: This is the merchant reference number created by you and submitted as part of the request. It must be unique for each request.
                amount:
                  type: number
                  example: 100
                  description: |-
                    This is the amount of the request, in minor units. For example, to process US $10.99, this value should be 1099.

                    Note: The amount specified in the Payment request must match the amount specified in the Payment Handle request from which the paymentHandleToken is taken.
                currencyCode:
                  type: string
                  example: USD
                  description: |-
                    This is the currency of your account, for example, USD or CAD, returned in the request response. See [Currency Codes](https://developer.paysafe.com/en/support/reference-information/codes/).

                    Note: The currencyCode specified in the Payment 
                    request must match the currencyCode specified in the Payment Handle request from which the paymentHandleToken is taken. This is a mandatory field.
                dupCheck:
                  type: boolean
                  default: true
                  description: |-
                    This validates that this request is not a duplicate. A request is considered a duplicate if the merchantRefNum has already been used in a previous request within the past 90 days.

                    Note: This value defaults to true.
                settleWithAuth:
                  type: boolean
                  default: true
                  enum:
                    - true
                    - false
                  description: |-
                    This indicates whether the request is an Authorization only (no Settlement), or a Purchase (Authorization and Settlement).

                    Note: Defaults to true.
                paymentHandleToken:
                  type: string
                  example: SCZJg09GWSv36NLB
                  description: This is the Payment Handle token that represents the payment instrument to be used in the Payment request.
                customerIp:
                  type: string
                  example: 10.10.12.64
                  description: This is the customer's IP address.
                description:
                  type: string
                  example: Magazine subscription
                  description: This is a description of the transaction you provided.
              required:
                - merchantRefNum
                - amount
                - currencyCode
                - paymentHandleToken
            examples:
              example-1:
                value:
                  merchantRefNum: merchantRefNum-108
                  amount: 100
                  currencyCode: USD
                  dupCheck: true
                  settleWithAuth: true
                  paymentHandleToken: PH3U7uzEHPmj2jvy
                  customerIp: 172.0.0.1
                  description: Magazine subscription
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/processPaymentsresponse'
              example:
                id: 67869d92-4df1-455b-80f4-783abbce42b4
                paymentType: NETELLER
                paymentHandleToken: PHi2MeARP5OxuXIm
                merchantRefNum: 4a33324e-ae23-4c48-955b-33ee189933f3
                currencyCode: USD
                settleWithAuth: true
                txnTime: '2020-03-19T06:38:07.000+0000'
                billingDetails:
                  street1: 100 Queen
                  street2: Unit 201
                  city: Toronto
                  zip: M5H 2N2
                  country: CA
                status: COMPLETED
                gatewayReconciliationId: b8a8ae3d-1771-4113-aa54-be0721977c0d
                amount: 100
                consumerIp: 172.0.0.1
                liveMode: false
                updatedTime: '2020-03-19T06:44:22Z'
                statusTime: '2020-03-19T06:44:22Z'
                gatewayResponse:
                  orderId: ORD_5cc31a72-5ac9-429b-8105-43c8a1c1189e
                  merchantRefId: a6tsv156sf34
                  totalAmount: 100
                  currency: USD
                  lang: en_US
                  customerId: CUS_718980F1-7B2F-41CA-A758-644043362B11
                  verificationLevel: '10'
                  transactionId: '127934948749341'
                  transactionType: Member to Merchant Transfer
                  description: neteller.account@example.org to Neteller Simulator Test
                  status: paid
                  processor: NETELLER
                availableToSettle: 0
                neteller:
                  consumerId: neteller.account@example.org
                  consumerIdLocked: true
                settlements:
                  amount: 100
                  txnTime: '2020-03-19T06:38:07.000+0000'
                  merchantRefNum: 4a33324e-ae23-4c48-955b-33ee189933f3
                  id: 67869d92-4df1-455b-80f4-780abbce44b4
                  status: COMPLETED
      deprecated: false
    parameters: []
    get:
      summary: Get Payments Using Merchant Reference number
      operationId: get-payments-using-merchant-reference-number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    meta:
                      numberOfRecords: 1
                      limit: 10
                      page: 1
                    payments:
                      - id: 67869d92-4df1-455b-80f4-788abbce41b5
                        paymentType: NETELLER
                        paymentHandleToken: PHi2MeARP5OxuXIm
                        merchantRefNum: 4a33324e-ae23-4c48-955b-33ee189933f3
                        currencyCode: USD
                        settleWithAuth: true
                        txnTime: '2020-03-19T06:38:07.000+0000'
                        billingDetails:
                          street1: 100 Queen
                          street2: Unit 201
                          city: Toronto
                          zip: M5H 2N2
                          country: CA
                        status: COMPLETED
                        gatewayReconciliationId: b8a8ae3d-1771-4113-aa54-be0721977c0d
                        amount: 100
                        consumerIp: 172.0.0.1
                        liveMode: false
                        updatedTime: '2020-03-19T06:44:22Z'
                        statusTime: '2020-03-19T06:44:22Z'
                        gatewayResponse:
                          orderId: ORD_5cc31a72-5ac9-429b-8105-43c8a1c1189e
                          totalAmount: '100'
                          currency: USD
                          lang: en_US
                          customerId: CUS_718980F1-7B2F-41CA-A758-644043362B11
                          verificationLevel: '10'
                          transactionId: '127934948749341'
                          transactionType: Member to Merchant Transfer (Order)
                          description: neteller.account@example.org to Neteller Simulator Test
                          status: paid
                          processor: NETELLER
                        availableToSettle: 0
                        neteller:
                          consumerId: neteller.account@example.org
                          consumerIdLocked: true
                properties:
                  meta:
                    $ref: '#/components/schemas/meta'
                  payments:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          readOnly: true
                          example: 67869d92-4df1-455b-80f4-180abbce41b5
                          description: This attribute is the ID returned in the response. This ID can be used for future associated requests.
                        paymentType:
                          type: string
                          enum:
                            - NETELLER
                          example: NETELLER
                          description: 'This is the payment type associated with this Payment Handle. '
                        paymentHandleToken:
                          type: string
                          readOnly: true
                          example: PHi2MeARP5OxuXIm
                          description: This is the Payment Handle token that represents the payment instrument to be used in the Payment request.
                        merchantRefNum:
                          type: string
                          example: 4a33324e-ae23-4c48-955b-33ee189933f3
                          description: This is the merchant reference number created by you and submitted as part of the request. It must be unique for each request.
                        currencyCode:
                          type: string
                          example: USD
                          description: |
                            This is the currency of your account, for example, USD or CAD, returned in the request response. See [Currency Codes](https://developer.paysafe.com/en/support/reference-information/codes/).

                            Note: The currencyCode specified in the Payment request must match the currencyCode specified in the Payment Handle request from which the paymentHandleToken is taken. 
                            This is a mandatory field.
                        settleWithAuth:
                          type: boolean
                          default: true
                          enum:
                            - true
                            - false
                          description: 'This indicates whether the request is an Authorization only (no Settlement), or a Purchase (Authorization and Settlement).'
                        txnTime:
                          type: string
                          readOnly: true
                          example: '2020-03-19T06:38:07.000+0000'
                          description: This attribute is the date and time the request was processed.
                        billingDetails:
                          $ref: '#/components/schemas/billingDetails'
                        status:
                          type: string
                          readOnly: true
                          example: COMPLETED
                          enum:
                            - RECEIVED
                            - COMPLETED
                            - HELD
                            - FAILED
                            - CANCELLED
                            - PENDING
                          description: 'This attribute is the status of the transaction request. '
                        gatewayReconciliationId:
                          type: string
                          example: b8a8ae3d-1771-4113-aa54-be0721977c0d
                          description: Transaction identifier that can be used to reconcile this transaction with the provider gateway.
                        amount:
                          type: number
                          example: 100
                          description: |-
                            This is the amount of the request, in minor units. 
                            For example, to process US $10.99, this value should be 1099.

                            Note: The amount specified in the Payment request must match the amount specified in the Payment Handle request from which the paymentHandleToken is taken.
                        consumerIp:
                          type: string
                          example: 172.0.0.1
                          description: This is the customer's IP address.
                        liveMode:
                          type: boolean
                          default: false
                          enum:
                            - true
                            - false
                        updatedTime:
                          type: string
                          readOnly: true
                          example: '2020-03-19T06:44:22Z'
                          description: ISO 8601 format (UTC) This is the date and time the resource was last updated.
                        statusTime:
                          type: string
                          readOnly: true
                          example: '2020-03-19T06:44:22Z'
                          description: ISO 8601 format (UTC) This is the date and time the resource status was last updated.
                        gatewayResponse:
                          $ref: '#/components/schemas/paymentsGatewayResponse'
                        availableToSettle:
                          type: number
                          example: 0
                          description: 'This ttribute is the amount of the Authorization remaining to settle, in minor units.'
                        neteller:
                          $ref: '#/components/schemas/neteller'
                        links:
                          $ref: '#/components/schemas/links'
                      required:
                        - id
                        - paymentType
                        - paymentHandleToken
                        - merchantRefNum
                        - currencyCode
                        - billingDetails
                        - status
                        - amount
                        - neteller
                required:
                  - meta
                  - payments
              examples:
                example-1:
                  value:
                    meta:
                      numberOfRecords: 1
                      limit: 10
                      page: 1
                    payments:
                      - id: 67869d92-4df1-455b-80f4-710abbce41b5
                        paymentType: NETELLER
                        paymentHandleToken: PHi2MeARP5OxuXIm
                        merchantRefNum: 4a33324e-ae23-4c48-955b-33ee189933f3
                        currencyCode: USD
                        settleWithAuth: true
                        txnTime: '2020-03-19T06:38:07.000+0000'
                        billingDetails:
                          street1: 100 Queen
                          street2: Unit 201
                          city: Toronto
                          zip: M5H 2N2
                          country: CA
                        status: COMPLETED
                        gatewayReconciliationId: b8a8ae3d-1771-4113-aa54-be0721977c0d
                        amount: 100
                        consumerIp: 172.0.0.1
                        liveMode: false
                        updatedTime: '2020-03-19T06:44:22Z'
                        statusTime: '2020-03-19T06:44:22Z'
                        gatewayResponse:
                          merchantRefId: hdh28563vcx
                          orderId: ORD_5cc31a72-5ac9-429b-8105-43c8a1c1189e
                          totalAmount: 100
                          currency: USD
                          lang: en_US
                          customerId: CUS_718980F1-7B2F-41CA-A758-644043362B11
                          verificationLevel: '10'
                          transactionId: '127934948749341'
                          transactionType: Member to Merchant Transfer
                          description: neteller.account@example.org to Neteller Simulator Test
                          status: paid
                          processor: NETELLER
                        availableToSettle: 0
                        neteller:
                          consumerId: neteller.account@example.org
                          consumerIdLocked: true
      description: 'Click on **Send API Request** after entering the required data, to see how to look up a Payment using the merchant reference number used in [original request](/operations/process-payments).'
      parameters:
        - schema:
            type: string
            example: 4a33324e-ae23-4c48-955b-33ee189933f3
          in: query
          name: merchantRefNum
          required: true
          description: This is the *merchantRefNum* used in the original Payment Handle creation request. _Mandatory_
        - schema:
            type: number
            example: 32
          in: query
          name: limit
          description: This is the total number of records to return. Default = 10._Optional_ _Max=50_
        - schema:
            type: number
            example: 0
          in: query
          name: offset
          description: 'This is the starting position, where 0 is the first record. Default = 0._Optional_'
        - schema:
            type: string
            example: '2019-01-26'
          in: query
          name: startDate
          description: This is the start date in UTC. Default = 30 days before the *endDate*._Optional_
        - schema:
            type: string
            example: '2019-03-26'
          in: query
          name: endDate
          description: This is the end date in UTC. Default = current date and time._Optional_
      tags:
        - Payments
  '/v1/payments/{paymentId}':
    get:
      tags:
        - Payments
      summary: Get Payments
      description: |
        Click on **Send API Request** after entering the required data, to see how to look up a Payment using the ID returned in the response to the [original request](/operations/process-payments).
      operationId: get-payments
      parameters:
        - name: paymentId
          in: path
          description: This is the ID returned in the response to the Payments request.
          required: true
          style: simple
          schema:
            type: string
            example: 3aeb9c63-6386-46a3-9f8e-f452e722228a
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPaymentsresponse'
              example:
                id: 67869d92-4df1-455b-80f4-780fbbcy41b3
                paymentType: NETELLER
                paymentHandleToken: PHi2MeARP5OxuXIm
                merchantRefNum: 4a33324e-ae23-4c48-955b-33ee189933f3
                currencyCode: USD
                settleWithAuth: true
                txnTime: '2020-03-19T06:38:07.000+0000'
                billingDetails:
                  street1: 100 Queen
                  street2: Unit 201
                  city: Toronto
                  zip: M5H 2N2
                  country: CA
                status: COMPLETED
                gatewayReconciliationId: b8a8ae3d-1771-4113-aa54-be0721977c0d
                amount: 100
                consumerIp: 172.0.0.1
                liveMode: false
                updatedTime: '2020-03-19T06:44:22Z'
                statusTime: '2020-03-19T06:44:22Z'
                gatewayResponse:
                  orderId: ORD_5cc31a72-5ac9-429b-8105-43c8a1c1189e
                  merchantRefId: hdh28563vcx
                  totalAmount: 100
                  currency: USD
                  lang: en_US
                  customerId: CUS_718980F1-7B2F-41CA-A758-644043362B11
                  verificationLevel: '10'
                  transactionId: '127934948749341'
                  transactionType: Member to Merchant Transfer
                  description: neteller.account@example.org to Neteller Simulator Test
                  status: paid
                  processor: NETELLER
                availableToSettle: 0
                neteller:
                  consumerId: neteller.account@example.org
                  consumerIdLocked: true
      deprecated: false
    parameters:
      - schema:
          type: string
        name: paymentId
        in: path
        required: true
  /v1/standalonecredits:
    post:
      tags:
        - Standalone Credits
      summary: Process Standalone Credits
      description: |-
        A Standalone Credits request allows you to issue credits without requiring a previous *settlement_id*.<a name="standalonecreditrequest" title="Process Standalone Credits"></a>

        Click on **Send API Request** after entering the required data, to see how to process a Standalone Credits request.
      operationId: process-standalone-credits
      parameters:
        - name: Simulator
          in: header
          description: ''
          style: simple
          schema:
            type: string
            default: INTERNAL
            enum:
              - EXTERNAL
              - INTERNAL
            example: EXTERNAL
        - schema:
            type: string
            default: application/json
            enum:
              - application/json
            example: application/json
          in: header
          name: Content-Type
          required: true
        - schema:
            type: boolean
            default: false
            enum:
              - true
              - false
            example: false
          in: header
          name: Live-Mode
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              x-examples:
                example-1:
                  amount: 40
                  merchantRefNum: merchantRefNum-151
                  currencyCode: GBP
                  paymentHandleToken: SC9mbfZSITB5OwDJ
                  customerIp: 204.91.0.12
                  description: Pay surplus
              properties:
                amount:
                  type: number
                  example: 500
                  description: |-
                    This is the amount of the request, in minor units. 
                    For example, to process US $10.99, this value should be 1099.

                    Note: The amount specified in the Payment request must match the amount specified in the Payment Handle request from which the paymentHandleToken is taken.
                merchantRefNum:
                  type: string
                  example: merchantRefNum-151
                  description: This is the merchant reference number created by you and submitted as part of the request. It must be unique for each request.
                currencyCode:
                  type: string
                  example: USD
                  description: |-
                    This is the currency of your account, for example, USD or CAD, returned in the request response. See [Currency Codes](https://developer.paysafe.com/en/support/reference-information/codes/).

                    Note: The currencyCode specified in the Payment request must match the currencyCode specified in the Payment Handle request from which the paymentHandleToken is taken. 
                    This is a mandatory field.
                paymentHandleToken:
                  type: string
                  example: PH3U7uzEHPmj2jvy
                  description: This is the payment token generated by Paysafe that you can use for Standalone Credits request.
                customerIp:
                  type: string
                  example: 172.0.0.1
                  description: This is the customer's IP address.
                description:
                  type: string
                  example: Pay surplus
                  description: This is a description of the transaction you provided.
              required:
                - amount
                - merchantRefNum
                - currencyCode
                - paymentHandleToken
            examples:
              example-1:
                value:
                  amount: 50
                  merchantRefNum: merchantRefNum-281
                  currencyCode: USD
                  paymentHandleToken: PH3U7uzEHPmj2jvy
                  customerIp: 172.0.0.1
                  description: Pay surplus
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/processStandaloneCreditsresponse'
      deprecated: false
    parameters: []
    get:
      summary: Get Standalone Credits Using Merchant Reference Number
      operationId: get-standalone-credits-using-merchant-reference-number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    meta:
                      numberOfRecords: 1
                      limit: 10
                      page: 1
                    standaloneCredit:
                      - id: e075f2ae-dfc4-4f6d-8d89-61158367b6a6
                        amount: 40
                        merchantRefNum: merchantRefNum-151
                        paymentHandleToken: SC9mbfZSITB5OwDJ
                        customerIp: 204.91.0.12
                        currencyCode: GBP
                        paymentType: NETELLER
                        status: PENDING
                        description: Pay surplus
                properties:
                  meta:
                    $ref: '#/components/schemas/meta'
                  standaloneCredit:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          readOnly: true
                          example: e075f2ae-dfc4-4f6d-8d89-61158367b6a6
                          description: This attribute is the ID returned in the response. You can use this ID for future associated requests.
                        amount:
                          type: number
                          example: 50
                          description: |-
                            This is the amount of the request, in minor units. 
                            For example, to process US $10.99, this value should be 1099.

                            Note: The amount specified in the Payment request must match the amount specified in the Payment Handle request from which the paymentHandleToken is taken.
                        merchantRefNum:
                          type: string
                          example: merchantRefNum-151
                          description: This is the merchant reference number created by you and submitted as part of the request. It must be unique for each request.
                        paymentHandleToken:
                          type: string
                          example: SC9mbfZSITB5OwDJ
                          description: This is the payment token generated by Paysafe that you can use for Standalone Credits request.
                        customerIp:
                          type: string
                          example: 204.91.0.12
                          description: This is the customer's IP address.
                        currencyCode:
                          type: string
                          example: GBP
                          description: |-
                            This is the currency of your account, for example, USD or CAD, returned in the request response. See [Currency Codes](https://developer.paysafe.com/en/support/reference-information/codes/).

                            Note: The currencyCode specified in the Payment request must match the currencyCode specified in the Payment Handle request from which the paymentHandleToken is taken. 
                            This is a mandatory field.
                        paymentType:
                          type: string
                          example: NETELLER
                          enum:
                            - NETELLER
                          description: 'This is the payment type associated with this Payment Handle. '
                        status:
                          type: string
                          example: PENDING
                          readOnly: true
                          enum:
                            - RECEIVED
                            - COMPLETED
                            - HELD
                            - FAILED
                            - CANCELLED
                            - PENDING
                          description: 'This attribute is the status of the transaction request. '
                        description:
                          type: string
                          example: Pay surplus
                          description: This is a description of the transaction you provided.
                      required:
                        - id
                        - amount
                        - merchantRefNum
                        - paymentHandleToken
                        - paymentType
                        - status
                required:
                  - meta
                  - standaloneCredit
              examples:
                example-1:
                  value:
                    meta:
                      numberOfRecords: 1
                      limit: 10
                      page: 1
                    standaloneCredit:
                      - id: e075f2ae-dfc4-4f6d-8d89-61158367b6a6
                        amount: 40
                        merchantRefNum: merchantRefNum-151
                        paymentHandleToken: SC9mbfZSITB5OwDJ
                        customerIp: 204.91.0.12
                        currencyCode: GBP
                        paymentType: NETELLER
                        status: PENDING
                        description: Pay surplus
      description: |
        Click on **Send API Request** after entering the required data, to see how to look up Standalone Credits using the merchant reference number used in the [original request](/operations/process-standalone-credits).
      parameters:
        - schema:
            type: string
          in: query
          name: merchantRefNum
          description: This is the *merchantRefNum* used in the original Payment Handle creation request. _Mandatory_
          required: true
        - schema:
            type: number
          in: query
          name: limit
          description: This is the total number of records to return. Default = 10._Optional_ _Max=50_
        - schema:
            type: number
          in: query
          name: offset
          description: 'This is the starting position, where 0 is the first record. Default = 0._Optional_'
        - schema:
            type: string
          in: query
          name: startDate
          description: This is the start date in UTC. Default = 30 days before the *endDate*._Optional_
        - schema:
            type: string
          in: query
          name: endDate
          description: This is the end date in UTC. Default = current date and time._Optional_
      tags:
        - Standalone Credits
  '/v1/standalonecredits/{standaloneCreditId}':
    get:
      tags:
        - Standalone Credits
      summary: Get Standalone Credits
      description: |
        Click on **Send API Request** after entering the required data, to see how to look up Standalone Credits using the ID returned in the response to the [original request](/operations/process-standalone-credits).
      operationId: get-standalone-credits
      parameters:
        - name: standaloneCreditId
          in: path
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: e075f2ae-dfc4-4f6d-8d89-61158367b6a2
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getStandaloneCreditsresponse'
              example:
                id: e075f2ae-dfc4-4f6d-8d89-61158367b6a6
                amount: 40
                merchantRefNum: merchantRefNum-151
                settleWithAuth: true
                paymentHandleToken: SCZJg09GWSv36NLB
                txnTime: '2018-12-14T15:12:18Z'
                customerIp: 10.10.12.64
                description: Magazine subscription
                currencyCode: GBP
                paymentType: NETELLER
                status: COMPLETED
                availableToSettle: 1900
                gatewayResponse:
                  orderId: ORD_0d676b4b-0eb8-4d78-af25-e41ab431e325
                  totalAmount: 3599
                  currency: EUR
                  status: pending
                  lang: en_US
                  processor: NETELLER
      deprecated: false
    parameters:
      - schema:
          type: string
        name: standaloneCreditId
        in: path
        required: true
components:
  schemas:
    billingDetails:
      title: billingDetails
      type: object
      description: 'These are the customer''s billing details. **Note:** For single-use payment handles, this address information will be ignored if the *paymentHandleTokenFrom* parameter is included in the Payment Handle creation request and there is already address information associated with that customer.'
      x-stoplight:
        id: 67164212b8502
      properties:
        street1:
          type: string
          maxLength: 50
          description: This is the first line of the street address in the billing address.
          example: George Street
        street2:
          type: string
          maxLength: 50
          description: |
            This is the second line of the street address in the billing address, if required (for example, apartment number).
          example: 3 Edgar Buildings
        city:
          type: string
          maxLength: 40
          description: |
            This is the city in the billing address.
          example: Bath
        zip:
          type: string
          maxLength: 10
          description: |
            This is the postal/zip code in the billing address.
          example: BA1 2FJ
        country:
          type: string
          maxLength: 2
          description: 'This is the country where the address is located. See [Country Codes](https://developer.paysafe.com/en/support/reference-information/codes/).'
          example: GB
        state:
          type: string
          maxLength: 40
          description: |
            This is the state or province of the billing address. Other countries have no restrictions.
          example: BA
        phone:
          type: string
          description: |
            This is the customer's telephone number.
          example: 444-9999
    dateOfBirth:
      title: dateOfBirth
      type: object
      description: This is the date of birth of the recipient.
      x-internal: false
      properties:
        day:
          type: number
          maxLength: 2
          maximum: 31
          description: This is the day of birth.
          example: 24
        month:
          type: number
          maxLength: 2
          maximum: 12
          description: This is the month of birth.
          example: 12
        year:
          type: number
          maxLength: 4
          minimum: 1900
          description: This is the year of birth.
          example: 1990
      required:
        - day
        - month
        - year
      x-stoplight:
        id: cb649877c5d24
    error:
      title: error
      type: object
      x-examples:
        Example 1:
          error:
            code: '5270'
            message: The credentials provided with the request do not have permission to access the data requested.
            details:
              - 'access to {stpAccount:1001076700} denied'
            fieldErrors:
              - field: street
                error: Unexpected characters
      properties:
        code:
          type: string
          description: This is the error code.
          example: '1001'
        message:
          type: string
          description: This is the description of the error.
          example: An internal error occurred.
        riskReasonCode:
          type: string
          description: 'If applicable, this is the corresponding system reason code.'
          example: text
        details:
          type: array
          description: 'If applicable, this is a collection of detailed descriptions.'
          items:
            type: string
        fieldErrors:
          type: array
          description: 'If applicable, this is a list of fields that have issues.'
          items:
            $ref: '#/components/schemas/fieldError'
        links:
          description: 'If applicable, this is a list of links to the related resource.'
          type: array
          items:
            $ref: '#/components/schemas/links'
      required:
        - code
        - message
        - fieldErrors
    fieldError:
      type: object
      x-examples:
        Example 1:
          field: transaction.accountProfile.email
          error: Required field
      properties:
        field:
          type: string
          example: transaction.accountProfile.email
          description: Identifies the JSON request field.
        error:
          type: string
          example: Required field
          description: The problem associated with field.
      required:
        - field
        - error
      title: fieldError
    gatewayResponse:
      title: gatewayResponse
      type: object
      readOnly: true
      example:
        orderId: ORD_5cc31a72-5ac9-429b-8105-43c8a1c1189e
        totalAmount: '100'
        currency: USD
        lang: en_US
        customerId: CUS_718980F1-7B2F-41CA-A758-644043362B11
        verificationLevel: '10'
        transactionId: '127934948749341'
        transactionType: Member to Merchant Transfer
        description: neteller.account@example.org to Neteller Simulator Test
        status: paid
        processor: NETELLER
      x-examples:
        example-1:
          orderId: ORD_5cc31a72-5ac9-429b-8105-43c8a1c1189e
          totalAmount: '100'
          currency: USD
          lang: en_US
          customerId: CUS_718980F1-7B2F-41CA-A758-644043362B11
          verificationLevel: '10'
          transactionId: '127934948749341'
          transactionType: Member to Merchant Transfer (Order)
          description: neteller.account@example.org to Neteller Simulator Test
          status: paid
          processor: NETELLER
      x-stoplight:
        id: afaa115697d85
      properties:
        orderId:
          type: string
          readOnly: true
          example: ORD_5cc31a72-5ac9-429b-8105-43c8a1c1189e
          description: Unique NETELLER reference for the order.
        totalAmount:
          type: string
          readOnly: true
          example: '100'
          description: 'The total amount due for this order, including all items, fees, taxes.'
        currency:
          type: string
          readOnly: true
          example: USD
          description: |-
            The currency of the total amount due. The order must have the same currency for all items, fees and taxes.
            see [Currencies](https://developer.paysafe.com/en/support/reference-information/codes/) for complete list
        lang:
          type: string
          readOnly: true
          example: en_US
          description: |-
            The language that the Paysafe Checkout should be displayed in.
            See [Possible values](/#locale-codes) for a complete list of languages supported.
        customerId:
          type: string
          readOnly: true
          example: CUS_718980F1-7B2F-41CA-A758-644043362B11
          description: The unique customer identifier.
        verificationLevel:
          $ref: '#/components/schemas/verificationLevel'
        transactionId:
          type: string
          readOnly: true
          example: '127934948749341'
          description: The unique transaction id from NETELLER.
        transactionType:
          $ref: '#/components/schemas/transactionType'
        description:
          type: string
          example: neteller.account@example.org to Neteller Simulator Test
          description: '"Appname to email address" or "email address to App name" describing the transfer flow using the account descriptors'
        status:
          example: paid
          readOnly: true
          type: string
          enum:
            - pending
            - cancelled
            - failed
            - paid
            - expired
          description: This is status of gateway response. The Default expiry time in case of expired status is 15 mins.
        processor:
          type: string
          example: NETELLER
          enum:
            - NETELLER
      required:
        - orderId
        - totalAmount
        - currency
        - lang
        - customerId
        - verificationLevel
        - transactionId
        - transactionType
        - description
        - status
        - processor
    links:
      title: links
      type: object
      example:
        rel: redirect_payment
        href: 'https://customer.at.neteller.com/rest/payment/panel?mid=1090001806&mtid=pay_1090001806_00LwEhZ8WtIy8PmIhRCUi3JScUti6jKi_EUR&amount=0.01&currency=EUR&customerHash=741e624cf6ae4fbca4338cb5597fe531'
      x-stoplight: null
      properties:
        rel:
          type: string
          enum:
            - redirect_payment
            - default
            - first
            - prev
            - next
            - last
          example: redirect_payment
          description: |
            This is the link type that allows different endpoints to be targeted depending on the end state of the transaction. 
        href:
          type: string
          example: 'https://customer.at.neteller.com/rest/payment/panel?mid=1090001806&mtid=pay_1090001806_00LwEhZ8WtIy8PmIhRCUi3JScUti6jKi_EUR&amount=0.01&currency=EUR&customerHash=741e624cf6ae4fbca4338cb5597fe531'
          description: |
            This is the URI of the resource.
        method:
          type: string
          example: POST
          description: This is HTTP method.
      required:
        - rel
        - href
    meta:
      title: meta
      type: object
      properties:
        numberOfRecords:
          type: number
          readOnly: true
          description: This is the number of records returned in the lookup.
          example: 1
        limit:
          type: number
          readOnly: true
          description: This is the number of records returned per page.
          example: 10
        page:
          type: number
          readOnly: true
          description: This is the page of records on which the lookup starts.
          example: 1
      description: ''
    neteller:
      title: neteller
      type: object
      x-stoplight:
        id: ddc775525d954
      x-internal: false
      description: These are details of the payment instrument used in the request.
      properties:
        consumerId:
          type: string
          maxLength: 150
          description: |
            This is the email address of the customer who is receiving the payment. Mandatory for withdrawal request.
          example: john.doe@email.com
        consumerIdLocked:
          type: boolean
          description: 'If True, the customer cannot edit the consumerId details provided by the merchant.  If False, the customer can edit the consumerId details provided by the merchant. Default: true. **Note:** When the consumerIdLocked is true and if the consumerId is not present in the Neteller system, it will result in transaction failure.'
          example: true
          default: true
        detail1Description:
          type: string
          maxLength: 15
          description: |
            You can show additional details about the product in the More information section in the header of the hosted Checkout.
          example: description
        detail1Text:
          type: string
          maxLength: 150
          description: |
            The detail1Text is shown next to the detail1Description in the More Information section in the header of the payment form with the other payment details. The detail1Description combined with the detail1Text is shown in the more information field of your account history CSV file.
          example: Details 1 text
      required:
        - consumerId
    paymentHandle:
      title: paymentHandle
      type: object
      example:
        transactionType: PAYMENT
        id: 82d57742-e2db-48ea-a726-a60e6f8265a6
        paymentType: NETELLER
        paymentHandleToken: PHQhlWpTRKzBXubN
        merchantRefNum: 5493aaf1a1d6dd13d2b53412f0ec
        currencyCode: USD
        dupCheck: true
        status: INITIATED
        liveMode: true
        usage: SINGLE_USE
        action: REDIRECT
        executionMode: SYNCHRONOUS
        amount: 500
        billingDetails:
          street: George Street
          street2: 3 Edgar Buildings
          city: Bath
          zip: BA1 2FJ
          country: GB
        customerIp: 172.0.0.1
        timeToLiveSeconds: 899
        gatewayResponse:
          orderId: ORD_0d676b4b-0eb8-4d78-af25-e41ab431e325
          totalAmount: 3599
          currency: EUR
          status: pending
          lang: en_US
          processor: NETELLER
        neteller:
          consumerId: johndoe@email.com
          detail1Description: description
          detail1Text: Details 1 text
        returnLinks:
          - rel: default
            href: 'https://usgaminggambling.com/payment/'
          - rel: on_completed
            href: 'https://usgaminggambling.com/payment/return/success'
          - rel: on_failed
            href: 'https://usgaminggambling.com/payment/return/failed'
        txnTime: '2019-01-24T10:39:50Z'
        updatedTime: '2019-01-24T10:39:50Z'
        statusTime: '2019-01-24T10:39:50Z'
        links:
          - rel: redirect_payment
            href: 'https://customer.at.neteller.com/rest/payment/panel?mid=1090001806&mtid=pay_1090001806_00LwEhZ8WtIy8PmIhRCUi3JScUti6jKi_EUR&amount=0.01&currency=EUR&customerHash=741e624cf6ae4fbca4338cb5597fe531'
      x-stoplight:
        id: f3590db68ef2c
      properties:
        id:
          type: string
          readOnly: true
          example: 82d57742-e2db-48ea-a726-a60e6f8265a3
          description: |
            This attribute is the ID returned in the response. It can be used to retrieve the paymentHandle.
        paymentType:
          type: string
          example: NETELLER
          enum:
            - NETELLER
          description: 'This is the payment type associated with this Payment Handle. '
        paymentHandleToken:
          type: string
          maxLength: 36
          readOnly: true
          example: PHQhlWpTRKzBXubN
          description: |
            This attribute is the payment token generated by Paysafe that will be used by merchants for the Paysafe Payments API requests.
        merchantRefNum:
          type: string
          maxLength: 50
          example: 5493aaf1a1d6dd13d2b53412f0ec
          description: |
            This is the merchant reference number created by you and submitted as part of the request. It must be unique for each request.
        currencyCode:
          type: string
          example: USD
          description: |-
            This is the currency of your account, for example, USD or CAD, returned in the request response. See [Currency Codes](https://developer.paysafe.com/en/support/reference-information/codes/).

            Note: The currencyCode specified in the Payment request must match the currencyCode specified in the Payment Handle request from which the paymentHandleToken is taken. 
            This is a mandatory field.
        dupCheck:
          type: boolean
          enum:
            - true
            - false
          default: true
          description: |-
            This validates that this request is not a duplicate. 
            A request is considered a duplicate if the merchantRefNum has already been used in a previous request within the past 90 days.
        status:
          $ref: '#/components/schemas/paymentHandleStatus'
        liveMode:
          type: boolean
          enum:
            - true
            - false
          default: true
        usage:
          type: string
          example: SINGLE_USE
          readOnly: true
          enum:
            - SINGLE_USE
          description: |
            This attribute specifies how the Payment Handle will be used for Payments. 
        action:
          type: string
          readOnly: true
          example: REDIRECT
          enum:
            - REDIRECT
            - NONE
          description: |
            This attribute specifies the next step of the customer journey once they proceed to the Payment. 
            If the value is REDIRECT, then the customer must be redirected in order to complete a Payment.
        executionMode:
          type: string
          example: SYNCHRONOUS
          readOnly: true
          enum:
            - SYNCHRONOUS
          description: |
            This attribute specifies the action of the merchant server in order to complete the Payment. 
        amount:
          type: number
          maximum: 999999999
          example: 500
          description: |
            This is the amount of the request, in minor units. 
            For example, to process US $10.99, this value should be 1099.

            Note: The amount specified in the Payment request must match the amount specified in the Payment Handle request from which the paymentHandleToken is taken.
        billingDetails:
          $ref: '#/components/schemas/billingDetails'
        profile:
          $ref: '#/components/schemas/profile'
        customerIp:
          type: string
          maxLength: 39
          example: 172.0.0.1
          description: |
            This is the customer's IP address.
        timeToLiveSeconds:
          type: number
          example: 899
        gatewayResponse:
          $ref: '#/components/schemas/paymentHandleGatewayResponse'
        neteller:
          $ref: '#/components/schemas/neteller'
        returnLinks:
          type: array
          description: 'These are links to which to redirect the customer, where applicable.'
          items:
            $ref: '#/components/schemas/returnLinks'
        txnTime:
          type: string
          readOnly: true
          example: '2019-01-24T10:39:50Z'
          description: This is the date and time the request was processed.
        updatedTime:
          type: string
          readOnly: true
          example: '2019-01-24T10:39:50Z'
          description: ISO 8601 format (UTC) This is the date and time the resource was last updated
        statusTime:
          type: string
          readOnly: true
          example: '2019-01-24T10:39:50Z'
          description: ISO 8601 format (UTC) This is the date and time the resource was last updated
        links:
          type: array
          items:
            $ref: '#/components/schemas/links'
        transactionType:
          type: string
          enum:
            - PAYMENT
            - STANDALONE_CREDIT
      required:
        - id
        - paymentType
        - paymentHandleToken
        - merchantRefNum
        - currencyCode
        - status
        - amount
        - billingDetails
        - returnLinks
        - transactionType
    payments:
      title: payments
      type: object
      example:
        id: 67869d92-43f1-455b-87f4-780abbce41b2
        paymentType: NETELLER
        paymentHandleToken: PHi2MeARP5OxuXIm
        merchantRefNum: 4a33324e-ae23-4c48-955b-33ee189933f3
        currencyCode: USD
        settleWithAuth: true
        txnTime: '2020-03-19T06:38:07.000+0000'
        billingDetails:
          street1: 100 Queen
          street2: Unit 201
          city: Toronto
          zip: M5H 2N2
          country: CA
        status: COMPLETED
        gatewayReconciliationId: b8a8ae3d-1771-4113-aa54-be0721977c0d
        amount: 100
        consumerIp: 172.0.0.1
        liveMode: false
        updatedTime: '2020-03-19T06:44:22Z'
        statusTime: '2020-03-19T06:44:22Z'
        gatewayResponse:
          orderId: ORD_5cc31a72-5ac9-429b-8105-43c8a1c1189e
          merchantRefId: hdh28563vcx
          totalAmount: 100
          currency: USD
          lang: en_US
          customerId: CUS_718980F1-7B2F-41CA-A758-644043362B11
          verificationLevel: '10'
          transactionId: '127934948749341'
          transactionType: Member to Merchant Transfer
          description: neteller.account@example.org to Neteller Simulator Test
          status: paid
          processor: NETELLER
        availableToSettle: 0
        neteller:
          consumerId: neteller.account@example.org
          consumerIdLocked: true
        settlements:
          amount: 100
          txnTime: '2020-03-19T06:38:07.000+0000'
          merchantRefNum: 4a33324e-ae23-4c48-955b-33ee189933f3
          id: 67869d92-4df1-455b-80f4-780abbce4113
          status: COMPLETED
      x-examples:
        example-1:
          id: 67869d92-1df1-455b-80f4-780abbce41b2
          paymentType: NETELLER
          paymentHandleToken: PHi2MeARP5OxuXIm
          merchantRefNum: 4a33324e-ae23-4c48-955b-33ee189933f3
          currencyCode: USD
          settleWithAuth: true
          txnTime: '2020-03-19T06:38:07.000+0000'
          billingDetails:
            street1: 100 Queen
            street2: Unit 201
            city: Toronto
            zip: M5H 2N2
            country: CA
          status: COMPLETED
          gatewayReconciliationId: b8a8ae3d-1771-4113-aa54-be0721977c0d
          amount: 100
          consumerIp: 172.0.0.1
          liveMode: false
          updatedTime: '2020-03-19T06:44:22Z'
          statusTime: '2020-03-19T06:44:22Z'
          gatewayResponse:
            orderId: ORD_5cc31a72-5ac9-429b-8105-43c8a1c1189e
            totalAmount: '100'
            currency: USD
            lang: en_US
            customerId: CUS_718980F1-7B2F-41CA-A758-644043362B11
            verificationLevel: '10'
            transactionId: '127934948749341'
            transactionType: Member to Merchant Transfer (Order)
            description: neteller.account@example.org to Neteller Simulator Test
            status: paid
            processor: NETELLER
          availableToSettle: 0
          neteller:
            consumerId: neteller.account@example.org
            consumerIdLocked: true
          settlements:
            amount: 100
            txnTime: '2020-03-19T06:38:07.000+0000'
            merchantRefNum: 4a33324e-ae23-4c48-955b-33ee189933f3
            id: 67863d92-4df1-455b-80f4-780abbce4103
            status: COMPLETED
      x-stoplight:
        id: 335b9a50105cb
      properties:
        id:
          type: string
          readOnly: true
          example: 67859d92-4df1-455b-80f4-780abbce41b2
          description: This attribute is the ID returned in the response. This ID can be used for future associated requests.
        paymentType:
          type: string
          enum:
            - NETELLER
          example: NETELLER
          description: 'This is the payment type associated with this Payment Handle. '
        paymentHandleToken:
          type: string
          readOnly: true
          maxLength: 36
          example: PHi2MeARP5OxuXIm
          description: This is the Payment Handle token that represents the payment instrument to be used in the Payment request
        merchantRefNum:
          type: string
          maxLength: 50
          example: 4a33324e-ae23-4c48-955b-33ee189933f3
          description: This is the merchant reference number created by you and submitted as part of the request. It must be unique for each request.
        currencyCode:
          type: string
          maxLength: 3
          example: USD
          description: |-
            This is the currency of your account, for example, USD or CAD, returned in the request response. See [Currency Codes](https://developer.paysafe.com/en/support/reference-information/codes/).

            Note: The currencyCode specified in the Payment request must match the currencyCode specified in the Payment Handle request from which the paymentHandleToken is taken. 
            This is a mandatory field.
        settleWithAuth:
          type: boolean
          default: true
          enum:
            - true
            - false
          description: |
            This indicates whether the request is an Authorization only (no Settlement), or a Purchase (Authorization and Settlement).
        txnTime:
          type: string
          readOnly: true
          example: '2020-03-19T06:38:07.000+0000'
          description: This attribute is the date and time the request was processed.
        billingDetails:
          $ref: '#/components/schemas/billingDetails'
        status:
          $ref: '#/components/schemas/status'
        gatewayReconciliationId:
          type: string
          readOnly: true
          example: b8a8ae3d-1771-4113-aa54-be0721977c0d
        amount:
          type: number
          example: 500
          maximum: 999999999
          description: |-
            This is the amount of the request, in minor units. For example, to process US $10.99, this value should be 1099.

            Note: The amount specified in the Payment request must match the amount specified in the Payment Handle request from which the paymentHandleToken is taken.
        consumerIp:
          type: string
          example: 172.0.0.1
          description: This is the customer's IP address.
        liveMode:
          type: boolean
          enum:
            - true
            - false
          default: false
        updatedTime:
          type: string
          readOnly: true
          example: '2020-03-19T06:44:22Z'
          description: ISO 8601 format (UTC) This is the date and time the resource was last updated.
        statusTime:
          type: string
          readOnly: true
          example: '2020-03-19T06:44:22Z'
          description: ISO 8601 format (UTC) This is the date and time the resource status was last updated.
        gatewayResponse:
          $ref: '#/components/schemas/paymentsGatewayResponse'
        availableToSettle:
          type: number
          example: 100
          maximum: 99999999999
          description: 'This is the amount of this Settlement that is available to Refund, in minor units. For example, US $10.99 would be 1099.'
        neteller:
          $ref: '#/components/schemas/neteller'
        settlements:
          $ref: '#/components/schemas/settlements'
        statusReason:
          type: string
          maxLength: 255
          description: 'This attribute is a reason for the status. This is present in the case where status is ERROR, FAILURE, or HELD.'
      required:
        - id
        - paymentType
        - paymentHandleToken
        - merchantRefNum
        - currencyCode
        - billingDetails
        - status
        - amount
    profile:
      title: profile
      type: object
      x-stoplight:
        id: 56091ff043a52
      x-internal: false
      properties:
        firstName:
          type: string
          maxLength: 80
          description: |
            This is the customer’s first name.
          example: Jane
        lastname:
          type: string
          maxLength: 80
          description: |
            This is the customer's last name.
          example: Smyth
        locale:
          type: string
          description: 'The language that the NETELLER pages should be displayed in. See [Possible values](/#locale-codes) for a complete list of languages supported.'
        email:
          type: string
          maxLength: 255
          description: |
            This is the customer's email address.
          example: jane.smyth@email.com
        phone:
          type: string
          maxLength: 40
          description: |
            This is the customer's phone number.
          example: '12345678'
        mobile:
          type: string
          description: This is the customer's mobile phone number.
          example: '4446666'
        gender:
          $ref: '#/components/schemas/gender'
        nationality:
          type: string
          description: This is the customer’s nationality.
          example: Indian
        dateOfBirth:
          $ref: '#/components/schemas/dateOfBirth'
      required:
        - firstName
        - lastname
    settlement:
      title: settlement
      type: object
      x-stoplight:
        id: 734838e8f4abc
      properties:
        id:
          type: string
          readOnly: true
          description: 'This is the ID returned in the response. This ID can be used for future associated requests, e,g., Refunds.'
          example: 25f6dadf-176a-415f-95c9-6ff39ff697ba
        merchantRefNum:
          type: string
          maxLength: 50
          description: This is the merchant reference number created by you and submitted as part of the request.
          example: P1234
        amount:
          type: number
          maximum: 999999999
          description: 'This is the amount of the request, in minor units. If this value is not provided, the full remaining amount on the Authorization will be settled.'
          example: 100
        dupCheck:
          type: boolean
          description: This validates that this request is not a duplicate. A request is considered a duplicate if the merchantRefNum has already been used in a previous request within the past 90 days.
          example: true
        availableToRefund:
          type: number
          maximum: 999999999
          description: 'This is the amount of the Authorization remaining to refund, in minor units.'
          example: 25
        childAccountNum:
          type: string
          description: This is the child merchant account number. It is returned only when the transaction is processed via a master account.
          example: '1234567898'
        status:
          $ref: '#/components/schemas/status'
        riskReasonCode:
          type: array
          description: 'An array of integers is returned, displaying the detailed risk reason codes if your transaction was declined. It is returned only if your account is configured accordingly.'
          items:
            type: string
        error:
          $ref: '#/components/schemas/error'
        gatewayResponse:
          $ref: '#/components/schemas/gatewayResponse'
      required:
        - merchantRefNum
    standaloneCredit:
      title: standaloneCredit
      type: object
      example:
        id: ff9bb334-5f7b-4b99-a1bd-abda1d7c529e
        paymentType: NETELLER
        paymentHandleToken: PH1c9QG7Zwj4N38E
        merchantRefNum: 29f28809-5281-497f-aa9f-40f58018edb3
        currencyCode: USD
        txnTime: '2020-03-19T07:15:06.000+0000'
        billingDetails:
          street1: 100 Queen
          street2: Unit 201
          city: Toronto
          zip: M5H 2N2
          country: CA
        status: PENDING
        gatewayReconciliationId: 29f28809-5281-497f-aa9f-40f58018edb3
        amount: 500
        returnLinks:
          - rel: on_failed
            href: 'https://usgaminggamblig.com/payment/return/failed'
          - rel: on_cancelled
            href: 'https://usgaminggamblig.com/payment/return/cancel'
          - rel: default
            href: 'https://usgaminggamblig.com/payment/return/success'
        liveMode: false
        updatedTime: '2020-03-19T07:15:06Z'
        statusTime: '2020-03-19T07:15:06Z'
        gatewayResponse:
          id: '664099288592333'
          amount: '500'
          currency: USD
          transactionType: Merchant to Member Transfer
          description: Neteller Simulator Test to neteller.account@example.org
          status: pending
          processor: NETELLER
        neteller:
          consumerId: neteller.account@example.org
      x-examples:
        example-1:
          id: ff9bb334-5f7b-4b99-a3bd-abda1d7c529e
          paymentType: NETELLER
          paymentHandleToken: PH1c9QG7Zwj4N38E
          merchantRefNum: 29f28809-5281-497f-aa9f-40f58018edb3
          currencyCode: USD
          txnTime: '2020-03-19T07:15:06.000+0000'
          billingDetails:
            street1: 100 Queen
            street2: Unit 201
            city: Toronto
            zip: M5H 2N2
            country: CA
          status: PENDING
          gatewayReconciliationId: 29f28809-5281-497f-aa9f-40f58018edb3
          amount: 500
          returnLinks:
            - rel: on_failed
              href: 'https://usgaminggamblig.com/payment/return/failed'
            - rel: on_cancelled
              href: 'https://usgaminggamblig.com/payment/return/cancel'
            - rel: default
              href: 'https://usgaminggamblig.com/payment/return/success'
          liveMode: false
          updatedTime: '2020-03-19T07:15:06Z'
          statusTime: '2020-03-19T07:15:06Z'
          gatewayResponse:
            id: '664099288591333'
            amount: '500'
            currency: USD
            transactionType: Merchant to Member Transfer
            description: Neteller Simulator Test to neteller.account@example.org
            status: pending
            processor: NETELLER
          neteller:
            consumerId: neteller.account@example.org
      x-stoplight:
        id: eedcf7a370dcb
      properties:
        id:
          type: string
          readOnly: true
          example: ff9bb334-5f7b-4b99-a8bd-abda1d7c529e
          description: This attribute is the ID returned in the response. You can use this ID for future associated requests.
        paymentType:
          type: string
          enum:
            - NETELLER
          example: NETELLER
          description: |
            This is the payment type associated with this Payment Handle. 
        paymentHandleToken:
          type: string
          example: PH1c9QG7Zwj4N38E
          description: This is the payment token generated by Paysafe that you can use for Standalone Credits request.
        merchantRefNum:
          type: string
          example: 29f28809-5281-497f-aa9f-40f58018edb3
          description: This is the merchant reference number created by you and submitted as part of the request. It must be unique for each request.
        currencyCode:
          type: string
          maxLength: 3
          example: USD
          description: |-
            This is the currency of your account, for example, USD or CAD, returned in the request response. See [Currency Codes](https://developer.paysafe.com/en/support/reference-information/codes/).

            Note: The currencyCode specified in the Payment request must match the currencyCode specified in the Payment Handle request from which the paymentHandleToken is taken. 
            This is a mandatory field.
        txnTime:
          type: string
          readOnly: true
          example: '2020-03-19T07:15:06.000+0000'
          description: This attribute is the date and time the request was processed.
        billingDetails:
          $ref: '#/components/schemas/billingDetails'
        status:
          type: string
          readOnly: true
          example: PENDING
          enum:
            - RECEIVED
            - COMPLETED
            - HELD
            - FAILED
            - CANCELLED
            - PENDING
          description: 'This attribute is the status of the transaction request. '
        gatewayReconciliationId:
          type: string
          example: 29f28809-5281-497f-aa9f-40f58018edb3
          description: |
            Transaction identifier that can be used to reconcile this transaction with the provider gateway.
        amount:
          type: number
          maximum: 999999999
          example: 500
          description: |-
            This is the amount of the request, in minor units. 
            For example, to process US $10.99, this value should be 1099.

            Note: The amount specified in the Payment request must match the amount specified in the Payment Handle request from which the paymentHandleToken is taken.
        returnLinks:
          type: array
          items:
            $ref: '#/components/schemas/returnLinks'
        liveMode:
          type: boolean
          default: false
          enum:
            - true
            - false
        updatedTime:
          type: string
          readOnly: true
          example: '2020-03-19T07:15:06Z'
          description: |
            ISO 8601 format (UTC) This is the date and time the resource was last updated.
        statusTime:
          type: string
          readOnly: true
          example: '2020-03-19T07:15:06Z'
          description: ISO 8601 format (UTC) This is the date and time the resource status was last updated.
        gatewayResponse:
          $ref: '#/components/schemas/standaloneCreditGatewayResponse'
        neteller:
          $ref: '#/components/schemas/neteller'
      required:
        - id
        - paymentType
        - paymentHandleToken
        - merchantRefNum
        - currencyCode
        - billingDetails
        - status
        - amount
        - returnLinks
    originalCreditResponse:
      title: OriginalCreditResponse
      required:
        - merchantRefNum
        - paymentHandleToken
        - amount
        - currencyCode
      type: object
      properties:
        id:
          type: string
          description: 'This is the ID returned in the response. This ID can be used for future associated requests, e,g., lookups.'
          example: 25f6dadf-176a-415f-95c9-6ff39ff697ba
        merchantRefNum:
          type: string
          description: This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.
          example: merchantRefNum-101
        paymentHandleToken:
          type: string
          description: This is the payment token generated by Paysafe that will be used for the request.
          example: 842778a0-03a2-11e9-8eb2-f2801f1b9fd1
        amount:
          type: string
          description: 'This is the amount of the request, in minor units. **Note:** The *amount* specified in the Standalone Credits request must match the *amount* specified in the Payment Handle request from which the *paymentHandleToken* is taken.'
          example: '1000'
        currencyCode:
          type: string
          description: 'This is the [currency of the merchant account](https://developer.paysafe.com/en/support/reference-information/codes/), e.g., USD or CAD. **Note:** The *currencyCode* specified in the Standalone Credits request must match the *currencyCode* specified in the Payment Handle request from which the *paymentHandleToken* is taken. This is a mandatory field.'
          example: CAD
        dupCheck:
          type: boolean
          description: This validates that this request is not a duplicate. A request is considered a duplicate if the merchantRefNum has already been used in a previous request within the past 90 days.
          example: true
        txnTime:
          type: string
          description: This is the date and time the transaction was processed.
          example: '2018-12-11T16:33:49Z'
        paymentType:
          allOf:
            - $ref: '#/components/schemas/paymentType'
            - description: This is the payment type associated with the Payment Handle used for this request.
              example: NETELLER
        status:
          allOf:
            - $ref: '#/components/schemas/status'
            - description: This is the status of the transaction request.
              example: PENDING
        description:
          type: string
          description: 'This is a description of the transaction, provided by the merchant.'
          example: Purchase Credit
        customerIp:
          type: string
          description: This is the customer's IP address.
          example: 204.91.0.12
        gatewayReconciliationId:
          type: string
          description: Transaction identifier that can be used to reconcile this transaction with the provider gateway.
          example: QAAAAABHCI
        updatedTime:
          type: string
          description: Indicates the last updated time for the resource.
          example: '2016-01-01T04:5:55Z'
        statusTime:
          type: string
          description: Indicates when the status was last updated.
          example: '2016-01-01T04:55:55Z'
        meta:
          allOf:
            - $ref: '#/components/schemas/meta'
            - description: Pagination details
        gatewayResponse:
          allOf:
            - $ref: '#/components/schemas/paymentHandleGatewayResponse'
            - description: This is the raw response returned by the payment service provider. It is returned only if your account is configured accordingly.
        neteller:
          $ref: '#/components/schemas/neteller'
      x-stoplight:
        id: fd5a9b98ae8b6
      x-internal: true
    paymentHandleRequest:
      title: paymentHandleRequest
      type: object
      x-stoplight:
        id: 4a36d65ae6f4f
      properties:
        id:
          type: string
          description: 'This is the ID returned in the response. This ID can be used for future associated requests, e.g., to look up the Payment Handle.'
          example: 26359efd-7cfb-4014-a13d-1724e3ff17fa
        merchantRefNum:
          type: string
          description: This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.
          example: merchantRefNum-101
        transactionType:
          allOf:
            - $ref: '#/components/schemas/paymentSCTtransactionType'
        accountId:
          type: string
          description: This is the merchant account number used for the request. Include this optional parameter if you have more than one merchant account for the currency/payment type combination you are specifying.
          example: '9876543210'
        status:
          allOf:
            - $ref: '#/components/schemas/paymentHandleStatus'
        usage:
          allOf:
            - $ref: '#/components/schemas/usage'
        paymentType:
          enum:
            - NETELLER
          type: string
          description: 'This is the payment type associated with this Payment Handle. If applicable, you need to pass the corresponding payment type object as listed after this parameter.'
          example: NETELLER
        action:
          allOf:
            - $ref: '#/components/schemas/action'
        executionMode:
          allOf:
            - $ref: '#/components/schemas/executionMode'
        amount:
          type: string
          description: 'This is the amount of the request, in minor units. **Note:** This field is mandatory if *transactionType* is included. The *amount* specified in the Payment Handle request must match the *amount* specified in the Payments API request the *paymentHandleToken* is used for.'
          example: '1000'
        currencyCode:
          type: string
          description: 'This is the [currency of the merchant account](https://developer.paysafe.com/en/support/reference-information/codes/), e.g., USD or CAD. **Note:** This field is mandatory if *transactionType* is included. The *currencyCode* specified in the Payment Handle request must match the *currencyCode* specified in the Payments API request the *paymentHandleToken* is used for. This is a mandatory field.'
          example: CAD
        paymentHandleToken:
          type: string
          description: This is the payment token generated by Paysafe that will be used by merchants for Payment API requests.
          example: SCO3wKcIyLoQbQvw
        returnLinks:
          allOf:
            - $ref: '#/components/schemas/returnLinks'
        links:
          allOf:
            - $ref: '#/components/schemas/links'
        customerIp:
          type: string
          description: This is the customer's IP address.
          example: 111.111.111.111
        timeToLiveSeconds:
          type: number
          description: 'This is the period of time, in seconds, the *paymentHandleToken* is valid before expiration.'
          example: 899
        txnTime:
          type: string
          description: |-
            This is the date and time the transaction was processed.

            _Read Only_
          example: '2015-12-11T16:33:49Z'
        updatedTime:
          type: string
          description: |-
            Indicates the last updated time for the resource.

            +`statusTime`: `2016-01-01T04:55:55Z` (string) - Indicates when the status was last updated.
          example: '2016-01-01T04:5:55Z'
        neteller:
          $ref: '#/components/schemas/neteller'
        profile:
          $ref: '#/components/schemas/profile'
        billingDetails:
          allOf:
            - $ref: '#/components/schemas/billingDetails'
        gatewayResponse:
          allOf:
            - $ref: '#/components/schemas/paymentHandleGatewayResponse'
      required:
        - merchantRefNum
        - transactionType
        - paymentType
      x-internal: true
    paymentsRequest:
      title: PaymentsRequest
      required:
        - merchantRefNum
        - amount
        - paymentHandleToken
        - currencyCode
      type: object
      properties:
        id:
          type: string
          description: 'This is the ID returned in the response. This ID can be used for future associated requests, for example, looking up the Payment.'
          example: 3aeb9c63-6386-46a3-9f8e-f452e722228a
        merchantRefNum:
          type: string
          description: This is the merchant reference number created by you and submitted as part of the request. It must be unique for each request.
          example: merchantRefNum-101
        amount:
          type: number
          description: 'This is the amount of the request, in minor units. **Note:** The *amount* specified in the Payment request must match the *amount* specified in the Payment Handle request from which the *paymentHandleToken* is taken.'
          example: 1000
        dupCheck:
          type: boolean
          description: This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request within the past 90 days.
          example: false
        settleWithAuth:
          type: boolean
          description: This indicates whether the request is an Authorization only (no Settlement) or a Purchase (Authorization and Settlement). For NETELLER only 'true' is supported
          example: true
        paymentHandleToken:
          type: string
          description: This is the payment token generated by Paysafe that will be used for the Payment request.
          example: 842778a0-03a2-11e9-8eb2-f2801f1b9fd1
        availableToSettle:
          type: number
          description: 'This is the amount of the Authorization remaining to settle, in minor units.'
          example: 0
        customerIp:
          type: string
          description: This is the customer's IP address.
          example: 111.111.111.111
        description:
          type: string
          description: This is a description of the transaction you provided.
          example: Consumer Purchase
        txnTime:
          type: string
          description: This is the date and time the transaction was processed.
          example: '2018-12-11T16:33:49Z'
        paymentType:
          allOf:
            - $ref: '#/components/schemas/paymentType'
            - description: This is the payment type associated with the hayment handle used for this request.
              example: NETELLER
        status:
          allOf:
            - $ref: '#/components/schemas/paymentHandleStatus'
            - description: This is the status of the transaction request.
        currencyCode:
          type: string
          description: 'This is the [currency of the merchant account](https://developer.paysafe.com/en/support/reference-information/codes/), for example, USD or CAD. **Note:** The *currencyCode* specified in the Payment request must match the *currencyCode* specified in the Payment Handle request from which the *paymentHandleToken* is taken.'
          example: CAD
        settlement:
          type: array
          items:
            type: string
          description: This is the list of all Settlements. This will be returned only if *settleWithAuth* = *true* in the request.
        statusReason:
          type: string
          description: 'This is reason for the status. This is present in case of ERROR, FAILURE, HELD status.'
        gatewayReconciliationId:
          type: string
          description: Transaction identifier that can be used to reconcile this transaction with the provider gateway.
          example: QAAAAABHCI
        updatedTime:
          type: string
          description: Indicates the last updated time for the resource.
          example: '2016-01-01T04:5:55Z'
        statusTime:
          type: string
          description: Indicates when the status was last updated.
          example: '2016-01-01T04:55:55Z'
        availableToRefund:
          type: number
          description: 'This is the amount of the Authorization remaining to refund, in minor units.'
          example: 25
        links:
          type: array
          items:
            type: string
          description: |-
            If applicable, this is a list of links to the related resource.

                    + `rel` (string) - This is the description or relation of the link. For example, default, redirect_payment, first, prev, next, last.
                    + `href` (string) - This is the actual URL of the link.
        gatewayResponse:
          allOf:
            - $ref: '#/components/schemas/paymentHandleGatewayResponse'
            - description: This is the raw response returned by the payment service provider. It is returned only if your account is configured accordingly.
        error:
          allOf:
            - $ref: '#/components/schemas/error'
            - description: _Read Only_
        meta:
          allOf:
            - $ref: '#/components/schemas/meta'
            - description: _Read Only_
        neteller:
          $ref: '#/components/schemas/neteller'
      x-stoplight:
        id: ad4ed964b0bba
      x-internal: true
    action:
      title: action
      enum:
        - REDIRECT
        - NONE
      type: string
      description: This specifies the next step of the user journey once they proceed to the Payment.
      example: REDIRECT
      x-internal: true
    address:
      title: address
      type: object
      x-stoplight:
        id: 13e0ff035bf87
      properties:
        id:
          type: string
          description: |
            This is the ID of request, returned in the response.
          example: 5d4db3bc-34c9-417f-a051-0d992ad9284e
        street:
          type: string
          description: |
            This is the first line of the customer's street address. **Note:** This is required only when the address is to be used in association with a bank account.
          example: George Street
        street2:
          type: string
          description: |
            This is the second line of the customer's street address, if required.
          example: 3 Edgar Buildings
        city:
          type: string
          description: |
            This is the city where the address is located. **Note:** This is required only when the address is to be used in association with a bank account.
          example: Bath
        zip:
          type: string
          description: |
            This is the zip, postal, or post code of the customer's address.
          example: BA1 2FJ
        country:
          type: string
          description: 'This is the country where the address is located. See [Country Codes](https://developer.paysafe.com/en/support/reference-information/codes/).'
          example: GB
        state:
          type: string
          description: |
            This is the state/province/region in which the customer lives.
          example: BA
        phone:
          type: string
          description: This is the customer's phone number.
          example: 647-788-3901
        defaultShippingAddressIndicator:
          type: boolean
          description: Flag to mark this address as the default shipping address.
          example: true
      required:
        - street
        - city
        - zip
        - country
      x-internal: true
    createaPaymentHandleresponse:
      title: CreateaPaymentHandleresponse
      type: object
      readOnly: true
      example:
        id: 82d57742-e2db-48ea-a726-a60e6f8265a6
        paymentType: NETELLER
        paymentHandleToken: PHQhlWpTRKzBXubN
        merchantRefNum: 5493aaf1a1d6dd13d2b53412f0ec
        currencyCode: USD
        dupCheck: true
        status: INITIATED
        liveMode: true
        usage: SINGLE_USE
        action: REDIRECT
        executionMode: SYNCHRONOUS
        amount: 500
        billingDetails:
          street: George Street
          street2: 3 Edgar Buildings
          city: Bath
          zip: BA1 2FJ
          country: GB
        customerIp: 172.0.0.1
        timeToLiveSeconds: 899
        gatewayResponse:
          orderId: ORD_0d676b4b-0eb8-4d78-af25-e41ab431e325
          totalAmount: 3599
          currency: EUR
          status: pending
          lang: en_US
          processor: NETELLER
        neteller:
          consumerId: johndoe@email.com
          detail1Description: description
          detail1Text: Details 1 text
        returnLinks:
          - rel: default
            href: 'https://usgaminggambling.com/payment/'
          - rel: on_completed
            href: 'https://usgaminggambling.com/payment/return/success'
          - rel: on_failed
            href: 'https://usgaminggambling.com/payment/return/failed'
        txnTime: '2019-01-24T10:39:50Z'
        updatedTime: '2019-01-24T10:39:50Z'
        statusTime: '2019-01-24T10:39:50Z'
        links:
          - rel: redirect_payment
            href: 'https://customer.at.neteller.com/rest/payment/panel?mid=1090001806&mtid=pay_1090001806_00LwEhZ8WtIy8PmIhRCUi3JScUti6jKi_EUR&amount=0.01&currency=EUR&customerHash=741e624cf6ae4fbca4338cb5597fe531'
      x-stoplight:
        id: de62922124899
      x-internal: true
      properties:
        id:
          type: string
          readOnly: true
          maxLength: 36
          example: 82d57742-e2db-48ea-a726-a60e6f8265a3
          description: |
            This attribute is the ID returned in the response. It can be used to retrieve the paymentHandle.
        paymentType:
          type: string
          example: NETELLER
          enum:
            - NETELLER
          description: 'This is the payment type associated with this Payment Handle. '
        paymentHandleToken:
          type: string
          maxLength: 36
          example: PHQhlWpTRKzBXubN
          description: |
            This attribute is the payment token generated by Paysafe that will be used by merchants for the Paysafe Payments API requests.
          readOnly: true
        merchantRefNum:
          type: string
          maxLength: 50
          example: 5493aaf1a1d6dd13d2b53412f0ec
          description: |
            This is the merchant reference number created by you and submitted as part of the request. It must be unique for each request.
        currencyCode:
          type: string
          maxLength: 3
          example: USD
          description: |-
            This is the currency of your account, for example, USD or CAD, returned in the request response. See [Currency Codes](https://developer.paysafe.com/en/support/reference-information/codes/).

            Note: The currencyCode specified in the Payment request must match the currencyCode specified in the Payment Handle request from which the paymentHandleToken is taken. 
            This is a mandatory field.
        dupCheck:
          type: boolean
          example: true
          default: true
          description: |-
            This validates that this request is not a duplicate. 
            A request is considered a duplicate if the merchantRefNum has already been used in a previous request within the past 90 days.

            Note: This value defaults to true
        status:
          $ref: '#/components/schemas/paymentHandleStatus'
        liveMode:
          type: boolean
          example: false
          default: true
          enum:
            - false
            - true
        usage:
          type: string
          example: SINGLE_USE
          readOnly: true
          enum:
            - SINGLE_USE
          description: |
            This attribute specifies how the Payment Handle will be used for Payments. 
        action:
          type: string
          example: REDIRECT
          enum:
            - REDIRECT
            - NONE
          description: |
            This attribute specifies the next step of the customer journey once they proceed to the Payment. 
          readOnly: true
        executionMode:
          type: string
          readOnly: true
          example: SYNCHRONOUS
          description: |
            This attribute specifies the action of the merchant server in order to complete the Payment. 
            Possible value is:
            SYNCHRONOUS – The status of the Payment request will be returned synchronously to you.
        amount:
          type: number
          maximum: 999999999
          example: 500
          description: |
            This is the amount of the request, in minor units. 
            For example, to process US $10.99, this value should be 1099.

            Note: The amount specified in the Payment request must match the amount specified in the Payment Handle request from which the paymentHandleToken is taken.
        billingDetails:
          $ref: '#/components/schemas/billingDetails'
        customerIp:
          type: string
          maxLength: 39
          readOnly: true
          example: 172.0.0.1
          description: |
            This is the customer's IP address.
        timeToLiveSeconds:
          type: number
          example: 899
          readOnly: true
        gatewayResponse:
          $ref: '#/components/schemas/paymentHandleGatewayResponse'
        neteller:
          $ref: '#/components/schemas/neteller'
        returnLinks:
          type: array
          items:
            $ref: '#/components/schemas/returnLinks'
        txnTime:
          type: string
          example: '2019-01-24T10:39:50Z'
          description: This is the date and time the request was processed.
          readOnly: true
        updatedTime:
          type: string
          example: '2019-01-24T10:39:50Z'
          description: ISO 8601 format (UTC) This is the date and time the resource was last updated
          readOnly: true
        accountId:
          type: string
          example: '9876543210'
          readOnly: true
          maxLength: 10
          description: This is the merchant account number used for the request. Include this optional parameter if you have more than one merchant account for the currency/payment type combination you are specifying.
        transactionType:
          $ref: '#/components/schemas/paymentSCTtransactionType'
        profile:
          $ref: '#/components/schemas/profile'
        statusTime:
          type: string
          example: '2019-01-24T10:39:50Z'
          description: ISO 8601 format (UTC) This is the date and time the resource was last updated
          readOnly: true
        links:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/links'
      required:
        - id
        - paymentType
        - paymentHandleToken
        - merchantRefNum
        - currencyCode
        - status
        - amount
        - billingDetails
        - returnLinks
    executionMode:
      title: executionMode
      enum:
        - SYNCHRONOUS
      type: string
      description: This specifies the action of the merchant server in order to complete the Payment.
      example: SYNCHRONOUS
      x-internal: true
    paymentsGatewayResponse:
      type: object
      description: |
        This is the raw response returned by the payment service provider. It is returned only if your account is configured accordingly.
      x-stoplight:
        id: 0a9a43c4c9370
      x-internal: true
      properties:
        orderId:
          type: string
          readOnly: true
          example: ORD_7915d463-ccc8-4305-9d33-9e5c9310f12e
          description: |
            Unique NETELLER reference for the order.
        merchantRefId:
          type: string
          readOnly: true
          example: b24a3332rb45
          description: The associated merchant reference id from the initial request.
        totalAmount:
          type: number
          readOnly: true
          example: 100
          description: 'The total amount due for this order, including all items, fees, taxes.'
        currency:
          type: string
          readOnly: true
          example: EUR
          description: 'The currency of the total amount due.  The order must have the same currency for all items, fees and taxes. see Currencies for complete list'
        lang:
          type: string
          example: en
          readOnly: true
          description: The language that the checkout was rendered in.
        customerId:
          type: string
          readOnly: true
          example: CUS_718980F1-7B2F-41CA-A758-644043362B11
          description: The unique customer identifier.
        verificationLevel:
          $ref: '#/components/schemas/verificationLevel'
        transactionId:
          type: string
          readOnly: true
          example: '127934948749341'
          description: The unique transaction id from NETELLER.
        transactionType:
          $ref: '#/components/schemas/transactionType'
        description:
          type: string
          readOnly: true
          description: '"Appname to email address" or "email address to App name" describing the transfer flow using the account descriptors.'
        status:
          type: string
          readOnly: true
          example: paid
          enum:
            - pending
            - cancelled
            - failed
            - paid
            - expired
        processor:
          type: string
          readOnly: true
          example: NETELLER
          description: Possible value - NETELLER
      required:
        - merchantRefId
        - totalAmount
        - currency
      readOnly: true
      title: ''
    paymentHandleGatewayResponse:
      title: paymentHandleGatewayResponse
      type: object
      example:
        orderId: ORD_0d676b4b-0eb8-4d78-af25-e41ab431e325
        totalAmount: 3599
        currency: EUR
        status: pending
        lang: en_US
        processor: NETELLER
      x-examples:
        example-1:
          orderId: ORD_0d676b4b-0eb8-4d78-af25-e41ab431e325
          totalAmount: 3599
          currency: EUR
          status: pending
          lang: en_US
          processor: NETELLER
      x-stoplight:
        id: b00a1156987d3
      x-internal: true
      properties:
        orderId:
          type: string
          readOnly: true
          example: ORD_0d676b4b-0eb8-4d78-af25-e41ab431e325
          description: 'Unique NETELLER reference for the order. '
        totalAmount:
          type: number
          readOnly: true
          example: 3599
          description: 'The total amount due for this order, including all items, fees, taxes.'
        currency:
          type: string
          readOnly: true
          example: EUR
          description: |-
            The currency of the total amount due. The order must have the same currency for all items, fees and taxes.
            see [Currencies](https://developer.paysafe.com/en/support/reference-information/codes/) for complete list
        status:
          example: pending
          readOnly: true
          type: string
          enum:
            - pending
            - cancelled
            - failed (The order was not paid).
            - paid
            - expired (The order had expired. Default expiry time is 15 mins).
          description: This is gateway response status.
        lang:
          type: string
          readOnly: true
          example: en_US
          description: |-
            The language that the Paysafe Checkout should be displayed in.
            See [Possible values](/#locale-codes) for a complete list of languages supported.
        processor:
          type: string
          readOnly: true
          example: NETELLER
          enum:
            - NETELLER
      required:
        - orderId
        - totalAmount
        - currency
        - status
        - lang
        - processor
    getSCTGatewayResponse:
      title: getSCTGatewayResponse
      type: object
      example:
        orderId: ORD_5cc31a72-5ac9-429b-8105-43c8a1c1189e
        totalAmount: 100
        currency: USD
        lang: en_US
        status: pending
        processor: NETELLER
      x-examples:
        example-1:
          orderId: ORD_5cc31a72-5ac9-429b-8105-43c8a1c1189e
          totalAmount: '100'
          currency: USD
          lang: en_US
          status: pending
          processor: NETELLER
      x-stoplight:
        id: affa115698504
      x-internal: true
      properties:
        orderId:
          type: string
          readOnly: true
          example: ORD_5cc31a72-5ac9-429b-8105-43c8a1c1189e
          description: Unique NETELLER reference for the order.
        totalAmount:
          type: number
          readOnly: true
          example: 100
          description: 'The total amount due for this order, including all items, fees, taxes.'
        currency:
          type: string
          readOnly: true
          example: USD
          description: |-
            The currency of the total amount due. The order must have the same currency for all items, fees and taxes.
            see [Currencies](https://developer.paysafe.com/en/support/reference-information/codes/) for complete list
        lang:
          type: string
          example: en_US
          description: |-
            The language that the Paysafe Checkout should be displayed in.
            See [Possible values](/#locale-codes) for a complete list of languages supported.
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - pending
            - cancelled
            - failed
            - paid
            - expired
        processor:
          type: string
          readOnly: true
          example: NETELLER
          enum:
            - NETELLER
      required:
        - orderId
        - totalAmount
        - currency
        - lang
        - status
        - processor
    standaloneCreditGatewayResponse:
      title: standaloneCreditGatewayResponse
      type: object
      example:
        id: '664099288591343'
        amount: '500'
        currency: USD
        transactionType: Merchant to Member Transfer
        description: Neteller Simulator Test to neteller.account@example.org
        status: pending
        processor: NETELLER
      x-stoplight:
        id: afca115697e1f
      x-internal: true
      properties:
        id:
          type: string
          example: '664099288591333'
        amount:
          type: string
          example: '500'
        currency:
          type: string
          example: USD
        transactionType:
          type: string
          example: Merchant to Member Transfer
        description:
          type: string
          example: Neteller Simulator Test to neteller.account@example.org
        status:
          example: pending
          enum:
            - pending
            - cancelled
            - failed
            - paid
            - expired
          description: |
            This is the status of gateway response.

            In case of status: expired, default expiry time is 15 mins.
          type: string
        processor:
          type: string
          example: NETELLER
          description: NETELLER
      required:
        - id
        - amount
        - currency
        - transactionType
        - description
        - status
        - processor
    gender:
      title: gender
      enum:
        - F
        - M
        - O
        - 'N'
      type: string
      description: This is the customer’s gender.
      x-internal: true
    getPaymentHandleresponse:
      title: getPaymentHandleresponse
      type: object
      example:
        id: 037490af-89ee-4794-9022-f7b91a6dbaac
        paymentType: NETELLER
        paymentHandleToken: PHi2MeARP5OxuXIm
        merchantRefNum: b8a8ae3d-1771-4113-aa54-be0721977c0d
        currencyCode: USD
        txnTime: '2020-03-19T06:38:07.000+0000'
        billingDetails:
          street: 100 Queen
          street2: Unit 201
          city: Toronto
          zip: M5H 2N2
          country: CA
        customerIp: 172.0.0.1
        status: INITIATED
        links:
          - rel: redirect_payment
            href: 'https://api.qa.paysafe.com/alternatepayments/v1/redirect?accountId=1011872745&paymentHandleId=037490af-89ee-4794-9022-f7b91a6ddaac&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDExODcyNzQ1IiwicHlkIjoiMDM3NDkwYWYtODllZS00Nzk0LTkwMjItZjdiOTFhNmRkYWFjIiwiZXhwIjoxNTg0NjAxNjg4fQ.e-C3wR7Z3sqBLp0-lS4ksZNsKvs4jV-J_kLphB4N5aM'
        liveMode: false
        usage: SINGLE_USE
        action: REDIRECT
        executionMode: SYNCHRONOUS
        amount: 100
        merchantDescriptor:
          dynamicDescriptor: OnlineStore
          phone: '12345678'
        timeToLiveSeconds: 899
        gatewayResponse:
          orderId: ORD_5cc31a72-5ac9-429b-8105-43c8a1c1189e
          totalAmount: 100
          currency: USD
          lang: en_US
          status: pending
          processor: NETELLER
        returnLinks:
          - rel: on_completed
            href: 'https://usgaminggamblig.com/payment/return/completed'
          - rel: on_cancelled
            href: 'https://usgaminggamblig.com/payment/return/cancelled'
          - rel: on_failed
            href: 'https://usgaminggamblig.com/payment/return/failed'
          - rel: default
            href: 'https://usgaminggamblig.com/payment/return/success'
        transactionType: PAYMENT
        updatedTime: '2020-03-19T06:38:08Z'
        statusTime: '2020-03-19T06:38:08Z'
        neteller:
          consumerId: neteller.account@example.org
          consumerIdLocked: true
      x-examples:
        example-1:
          id: 037490af-89ee-4794-9022-f7b91a6ddaac
          paymentType: NETELLER
          paymentHandleToken: PHi2MeARP5OxuXIm
          merchantRefNum: b8a8ae3d-1771-4113-aa54-be0721977c0d
          currencyCode: USD
          txnTime: '2020-03-19T06:38:07.000+0000'
          billingDetails:
            street: 100 Queen
            street2: Unit 201
            city: Toronto
            zip: M5H 2N2
            country: CA
          customerIp: 172.0.0.1
          status: INITIATED
          links:
            - rel: redirect_payment
              href: 'https://api.qa.paysafe.com/alternatepayments/v1/redirect?accountId=1011872745&paymentHandleId=037490af-89ee-4794-9022-f7b91a6ddaac&token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDExODcyNzQ1IiwicHlkIjoiMDM3NDkwYWYtODllZS00Nzk0LTkwMjItZjdiOTFhNmRkYWFjIiwiZXhwIjoxNTg0NjAxNjg4fQ.e-C3wR7Z3sqBLp0-lS4ksZNsKvs4jV-J_kLphB4N5aM'
          liveMode: false
          usage: SINGLE_USE
          action: REDIRECT
          executionMode: SYNCHRONOUS
          amount: 100
          merchantDescriptor:
            dynamicDescriptor: OnlineStore
            phone: '12345678'
          timeToLiveSeconds: 899
          gatewayResponse:
            orderId: ORD_5cc31a72-5ac9-429b-8105-43c8a1c1189e
            totalAmount: '100'
            currency: USD
            lang: en_US
            status: pending
            processor: NETELLER
          returnLinks:
            - rel: on_completed
              href: 'https://usgaminggamblig.com/payment/return/completed'
            - rel: on_cancelled
              href: 'https://usgaminggamblig.com/payment/return/cancelled'
            - rel: on_failed
              href: 'https://usgaminggamblig.com/payment/return/failed'
            - rel: default
              href: 'https://usgaminggamblig.com/payment/return/success'
          transactionType: PAYMENT
          updatedTime: '2020-03-19T06:38:08Z'
          statusTime: '2020-03-19T06:38:08Z'
          neteller:
            consumerId: neteller.account@example.org
            consumerIdLocked: true
      x-stoplight:
        id: 6455f11524a9b
      x-internal: true
      properties:
        id:
          type: string
          readOnly: true
          example: 037490af-89ee-4794-9022-f7b91a6ddaac
          description: This attribute is the ID returned in the response. It can be used to retrieve the paymentHandle.
        paymentType:
          type: string
          example: NETELLER
          enum:
            - NETELLER
          description: 'This is the payment type associated with this Payment Handle. '
        paymentHandleToken:
          type: string
          readOnly: true
          example: PHi2MeARP5OxuXIm
          description: This attribute is the payment token generated by Paysafe that will be used by merchants for the Paysafe Payments API requests.
        merchantRefNum:
          type: string
          example: b8a8ae3d-1771-4113-aa54-be0721977c0d
          description: This is the merchant reference number created by you and submitted as part of the request. It must be unique for each request.
        currencyCode:
          type: string
          example: USD
          description: |-
            This is the currency of your account, for example, USD or CAD, returned in the request response. See [Currency Codes](https://developer.paysafe.com/en/support/reference-information/codes/).

            Note: The currencyCode specified in the Payment request must match the currencyCode specified in the Payment Handle request from which the paymentHandleToken is taken. 
            This is a mandatory field.
        txnTime:
          type: string
          readOnly: true
          example: '2020-03-19T06:38:07.000+0000'
          description: This is the date and time the request was processed.
        billingDetails:
          $ref: '#/components/schemas/billingDetails'
        customerIp:
          type: string
          example: 172.0.0.1
          description: This is the customer's IP address.
        status:
          $ref: '#/components/schemas/paymentHandleStatus'
        links:
          type: array
          items:
            $ref: '#/components/schemas/links'
        liveMode:
          type: boolean
          enum:
            - true
            - false
          default: false
        usage:
          $ref: '#/components/schemas/usage'
        action:
          $ref: '#/components/schemas/action'
        executionMode:
          $ref: '#/components/schemas/executionMode'
        amount:
          type: number
          example: 100
          description: |-
            This is the amount of the request, in minor units. 
            For example, to process US $10.99, this value should be 1099.

            Note: The amount specified in the Payment request must match the amount specified in the Payment Handle request from which the paymentHandleToken is taken.
        merchantDescriptor:
          $ref: '#/components/schemas/merchantDescriptor'
        timeToLiveSeconds:
          type: number
          example: 899
        gatewayResponse:
          $ref: '#/components/schemas/paymentHandleGatewayResponse'
        returnLinks:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/returnLinks'
        transactionType:
          $ref: '#/components/schemas/paymentSCTtransactionType'
        updatedTime:
          type: string
          readOnly: true
          example: '2020-03-19T06:38:08Z'
        statusTime:
          type: string
          readOnly: true
          example: '2020-03-19T06:38:08Z'
        neteller:
          $ref: '#/components/schemas/neteller'
      required:
        - id
        - paymentType
        - paymentHandleToken
        - merchantRefNum
        - currencyCode
        - billingDetails
        - status
        - links
        - amount
        - merchantDescriptor
        - returnLinks
        - transactionType
        - neteller
    getPaymentsresponse:
      title: GetPaymentsresponse
      type: object
      example:
        id: 67869d92-4df1-455b-8vf2-780abbce41b5
        paymentType: NETELLER
        paymentHandleToken: PHi2MeARP5OxuXIm
        merchantRefNum: 4a33324e-ae23-4c48-955b-33ee189933f3
        currencyCode: USD
        settleWithAuth: true
        txnTime: '2020-03-19T06:38:07.000+0000'
        billingDetails:
          street1: 100 Queen
          street2: Unit 201
          city: Toronto
          zip: M5H 2N2
          country: CA
        status: COMPLETED
        gatewayReconciliationId: b8a8ae3d-1771-4113-aa54-be0721977c0d
        amount: 100
        consumerIp: 172.0.0.1
        liveMode: false
        updatedTime: '2020-03-19T06:44:22Z'
        statusTime: '2020-03-19T06:44:22Z'
        gatewayResponse:
          orderId: ORD_5cc31a72-5ac9-429b-8105-43c8a1c1189e
          merchantRefId: hdh28563vcx
          totalAmount: 100
          currency: USD
          lang: en_US
          customerId: CUS_718980F1-7B2F-41CA-A758-644043362B11
          verificationLevel: '10'
          transactionId: '127934948749341'
          transactionType: Member to Merchant Transfer
          description: neteller.account@example.org to Neteller Simulator Test
          status: pending
          processor: NETELLER
        availableToSettle: 0
        neteller:
          consumerId: neteller.account@example.org
          consumerIdLocked: true
      x-examples:
        example-1:
          id: 67869d92-4df1-455b-80f2-780abbce41b5
          paymentType: NETELLER
          paymentHandleToken: PHi2MeARP5OxuXIm
          merchantRefNum: 4a33324e-ae23-4c48-955b-33ee189933f3
          currencyCode: USD
          settleWithAuth: true
          txnTime: '2020-03-19T06:38:07.000+0000'
          billingDetails:
            street1: 100 Queen
            street2: Unit 201
            city: Toronto
            zip: M5H 2N2
            country: CA
          status: COMPLETED
          gatewayReconciliationId: b8a8ae3d-1771-4113-aa54-be0721977c0d
          amount: 100
          consumerIp: 172.0.0.1
          liveMode: false
          updatedTime: '2020-03-19T06:44:22Z'
          statusTime: '2020-03-19T06:44:22Z'
          gatewayResponse:
            orderId: ORD_5cc31a72-5ac9-429b-8105-43c8a1c1189e
            totalAmount: '100'
            currency: USD
            lang: en_US
            customerId: CUS_718980F1-7B2F-41CA-A758-644043362B11
            verificationLevel: '10'
            transactionId: '127934948749341'
            transactionType: Member to Merchant Transfer (Order)
            description: neteller.account@example.org to Neteller Simulator Test
            status: paid
            processor: NETELLER
          availableToSettle: 0
          neteller:
            consumerId: neteller.account@example.org
            consumerIdLocked: true
      x-stoplight:
        id: 17e7f708ed980
      properties:
        id:
          type: string
          readOnly: true
          example: 67869d92-4df1-455b-80f4-780abbce41b2
          description: This attribute is the ID returned in the response. This ID can be used for future associated requests.
        paymentType:
          type: string
          example: NETELLER
          enum:
            - NETELLER
          description: |-
            This is the payment type associated with this Payment Handle.
        paymentHandleToken:
          type: string
          maxLength: 36
          example: PHi2MeARP5OxuXIm
          description: This is the Payment Handle token that represents the payment instrument to be used in the Payment request.
        merchantRefNum:
          type: string
          maxLength: 50
          example: 4a33324e-ae23-4c48-955b-33ee189933f3
          description: This is the merchant reference number created by you and submitted as part of the request. It must be unique for each request.
        currencyCode:
          type: string
          maxLength: 3
          example: USD
          description: |
            This is the currency of your account, for example, USD or CAD, returned in the request response. See [Currency Codes](https://developer.paysafe.com/en/support/reference-information/codes/).

            Note: The currencyCode specified in the Payment request must match the currencyCode specified in the Payment Handle request from which the paymentHandleToken is taken. 
            This is a mandatory field.
        settleWithAuth:
          type: boolean
          enum:
            - false
            - true
          default: true
          example: true
          description: |
            This indicates whether the request is an Authorization only (no Settlement), or a Purchase (Authorization and Settlement).

            Note: Defaults to true.
        txnTime:
          type: string
          readOnly: true
          example: '2020-03-19T06:38:07.000+0000'
          description: This attribute is the date and time the request was processed
        billingDetails:
          $ref: '#/components/schemas/billingDetails'
        status:
          type: string
          readOnly: true
          example: COMPLETED
          enum:
            - RECEIVED
            - COMPLETED
            - HELD
            - FAILED
            - CANCELLED
            - PENDING
          description: |
            This attribute is the status of the transaction request. 
        gatewayReconciliationId:
          type: string
          example: b8a8ae3d-1771-4113-aa54-be0721977c0d
          description: Transaction identifier that can be used to reconcile this transaction with the provider gateway.
        amount:
          type: number
          example: 100
          description: |-
            This is the amount of the request, in minor units. 
            For example, to process US $10.99, this value should be 1099.

            Note: The amount specified in the Payment request must match the amount specified in the Payment Handle request from which the paymentHandleToken is taken.
        consumerIp:
          type: string
          example: 172.0.0.1
          description: This is the customer's IP address.
        liveMode:
          type: boolean
          enum:
            - true
            - false
          default: false
        updatedTime:
          type: string
          readOnly: true
          example: '2020-03-19T06:44:22Z'
          description: ISO 8601 format (UTC) This is the date and time the resource was last updated.
        statusTime:
          type: string
          readOnly: true
          example: '2020-03-19T06:44:22Z'
          description: ISO 8601 format (UTC) This is the date and time the resource status was last updated.
        gatewayResponse:
          $ref: '#/components/schemas/paymentsGatewayResponse'
        availableToSettle:
          type: number
          example: 500
          readOnly: true
          description: 'This attribute is the amount of the Authorization remaining to settle, in minor units.'
        neteller:
          $ref: '#/components/schemas/neteller'
      required:
        - id
        - paymentType
        - paymentHandleToken
        - merchantRefNum
        - currencyCode
        - settleWithAuth
        - txnTime
        - billingDetails
        - status
        - gatewayReconciliationId
        - amount
        - consumerIp
        - liveMode
        - updatedTime
        - statusTime
        - gatewayResponse
        - availableToSettle
        - neteller
      x-internal: true
    merchantDescriptor:
      title: merchantDescriptor
      type: object
      example:
        dynamicDescriptor: OnlineStore
        phone: '12345678'
      properties:
        dynamicDescriptor:
          type: string
          example: OnlineStore
        phone:
          type: string
          example: '12345678'
      required:
        - dynamicDescriptor
        - phone
      x-stoplight:
        id: 6acc593ab88a1
      x-internal: true
    getStandaloneCreditsresponse:
      title: GetStandaloneCreditsresponse
      type: object
      example:
        id: e075f2ae-dfc4-4f6d-8d89-61158367b6a6
        amount: 40
        merchantRefNum: merchantRefNum-151
        settleWithAuth: true
        paymentHandleToken: SCZJg09GWSv36NLB
        txnTime: '2018-12-14T15:12:18Z'
        customerIp: 10.10.12.64
        description: Magazine subscription
        currencyCode: GBP
        paymentType: NETELLER
        status: COMPLETED
        availableToSettle: 1900
        gatewayResponse:
          orderId: ORD_0d676b4b-0eb8-4d78-af25-e41ab431e325
          totalAmount: 3599
          currency: EUR
          status: pending
          lang: en_US
          processor: NETELLER
      x-stoplight:
        id: 07547acd69bd7
      x-internal: true
      properties:
        id:
          type: string
          readOnly: true
          example: e075f2ae-dfc4-4f6d-8d89-61158367b6a6
          description: This attribute is the ID returned in the response. You can use this ID for future associated requests.
        amount:
          type: number
          maximum: 999999999
          example: 40
          description: |-
            This is the amount of the request, in minor units. 
            For example, to process US $10.99, this value should be 1099.

            Note: The amount specified in the Payment request must match the amount specified in the Payment Handle request from which the paymentHandleToken is taken.
        merchantRefNum:
          type: string
          maxLength: 50
          example: merchantRefNum-151
          description: This is the merchant reference number created by you and submitted as part of the request. It must be unique for each request.
        settleWithAuth:
          type: boolean
          enum:
            - true
            - false
          default: true
          description: |-
            This indicates whether the request is an Authorization only (no Settlement), or a Purchase (Authorization and Settlement).

            Note: Defaults to true.
        paymentHandleToken:
          type: string
          example: SCZJg09GWSv36NLB
          description: This is the payment token generated by Paysafe that you can use for Standalone Credits request.
        txnTime:
          type: string
          readOnly: true
          example: '2018-12-14T15:12:18Z'
          description: This attribute is the date and time the request was processed.
        customerIp:
          type: string
          maxLength: 39
          example: 10.10.12.64
          description: |
            This is the customer's IP address.
        description:
          type: string
          example: Magazine subscription
          description: |
            This is a description of the transaction you provided.
        currencyCode:
          type: string
          maxLength: 3
          example: GBP
          description: |
            This is the currency of your account, for example, USD or CAD, returned in the request response. See [Currency Codes](https://developer.paysafe.com/en/support/reference-information/codes/).

            Note: The currencyCode specified in the Payment request must match the currencyCode specified in the Payment Handle request from which the paymentHandleToken is taken. 
            This is a mandatory field.
        paymentType:
          type: string
          example: NETELLER
          enum:
            - NETELLER
          description: 'This is the payment type associated with this Payment Handle. '
        status:
          type: string
          readOnly: true
          example: COMPLETED
          enum:
            - RECEIVED
            - COMPLETED
            - HELD
            - FAILED
            - CANCELLED
            - PENDING
          description: 'This attribute is the status of the transaction request. '
        availableToSettle:
          type: number
          example: 1900
        gatewayResponse:
          $ref: '#/components/schemas/getSCTGatewayResponse'
      required:
        - id
        - amount
        - merchantRefNum
        - paymentHandleToken
        - currencyCode
        - paymentType
        - status
    paymentMethod:
      title: paymentMethod
      enum:
        - NETELLER
      type: string
      description: This is the payment type associated with this payment method.
      example: NETELLER
      x-internal: true
    paymentType:
      title: paymentType
      enum:
        - NETELLER
      type: string
      description: |
        This is the payment type associated with this Payment Handle used for this request. If applicable, you need to pass the corresponding payment type object as listed after this parameter.
      example: NETELLER
      x-internal: true
    processPaymentsresponse:
      title: processPaymentsresponse
      type: object
      readOnly: true
      example:
        id: 67469d92-4cf1-455b-14f4-780abbce41b2
        paymentType: NETELLER
        paymentHandleToken: PHi2MeARP5OxuXIm
        merchantRefNum: 4a31324e-ae23-4c48-955b-33ee189933f3
        currencyCode: USD
        settleWithAuth: true
        txnTime: '2020-03-19T06:38:07.000+0000'
        billingDetails:
          street1: 100 Queen
          street2: Unit 201
          city: Toronto
          zip: M5H 2N2
          country: CA
        status: COMPLETED
        gatewayReconciliationId: b8a8ae3d-1771-4113-aa54-be0721977c0d
        amount: 100
        consumerIp: 172.0.0.1
        liveMode: false
        updatedTime: '2020-03-19T06:44:22Z'
        statusTime: '2020-03-19T06:44:22Z'
        gatewayResponse:
          orderId: ORD_5cc31a72-5ac9-429b-8105-43c8a1c1189e
          merchantRefId: hdh28563vcx
          totalAmount: 100
          currency: USD
          lang: en_US
          customerId: CUS_718980F1-7B2F-41CA-A758-644043362B11
          verificationLevel: '10'
          transactionId: '127934948749341'
          transactionType: Member to Merchant Transfer
          description: neteller.account@example.org to Neteller Simulator Test
          status: pending
          processor: NETELLER
        availableToSettle: 0
        neteller:
          consumerId: neteller.account@example.org
          consumerIdLocked: true
        settlements:
          amount: 100
          txnTime: '2020-03-19T06:38:07.000+0000'
          merchantRefNum: 4a33324e-ae23-4c48-955b-33ee189933f3
          id: 67869d92-2df1-455b-80f4-780abbce4113
          status: COMPLETED
      x-examples:
        example-1:
          id: 67169d92-4df1-455b-80f4-780abbce41b2
          paymentType: NETELLER
          paymentHandleToken: PHi2MeARP5OxuXIm
          merchantRefNum: 4a33324e-ae23-4c48-955b-33ee189933f3
          currencyCode: USD
          settleWithAuth: true
          txnTime: '2020-03-19T06:38:07.000+0000'
          billingDetails:
            street1: 100 Queen
            street2: Unit 201
            city: Toronto
            zip: M5H 2N2
            country: CA
          status: COMPLETED
          gatewayReconciliationId: b8a8ae7d-1771-4113-aa54-be0721977c0d
          amount: 100
          consumerIp: 172.0.0.1
          liveMode: false
          updatedTime: '2020-03-19T06:44:22Z'
          statusTime: '2020-03-19T06:44:22Z'
          gatewayResponse:
            orderId: ORD_5cc31a72-5ac9-429b-8105-43c8a1c1189e
            totalAmount: '100'
            currency: USD
            lang: en_US
            customerId: CUS_718980F1-7B2F-41CA-A758-644043362B11
            verificationLevel: '10'
            transactionId: '127934948749341'
            transactionType: Member to Merchant Transfer (Order)
            description: neteller.account@example.org to Neteller Simulator Test
            status: paid
            processor: NETELLER
          availableToSettle: 0
          neteller:
            consumerId: neteller.account@example.org
            consumerIdLocked: true
          settlements:
            amount: 100
            txnTime: '2020-03-19T06:38:07.000+0000'
            merchantRefNum: 4a33324e-ae23-4c48-955b-33ee189933f3
            id: 67869d92-4df1-455b-80f4-780abbce4103
            status: COMPLETED
      x-stoplight:
        id: e29eb916e5531
      x-internal: true
      properties:
        id:
          type: string
          maxLength: 36
          example: 67869d92-4df2-455b-80f4-780abbce41b2
          description: This attribute is the ID returned in the response. This ID can be used for future associated requests.
          readOnly: true
        paymentType:
          type: string
          example: NETELLER
          enum:
            - NETELLER
          description: 'This is the payment type associated with this Payment Handle. '
        paymentHandleToken:
          type: string
          maxLength: 36
          example: PHi2MeARP5OxuXIm
          description: This is the Payment Handle token that represents the payment instrument to be used in the Payment request
        merchantRefNum:
          type: string
          maxLength: 50
          example: 4a33324e-ae23-4c48-955b-33ee189933f3
          description: This is the merchant reference number created by you and submitted as part of the request. It must be unique for each request.
        currencyCode:
          type: string
          maxLength: 3
          example: USD
          description: |-
            This is the currency of your account, for example, USD or CAD, returned in the request response. See [Currency Codes](https://developer.paysafe.com/en/support/reference-information/codes/).

            Note: The currencyCode specified in the Payment request must match the currencyCode specified in the Payment Handle request from which the paymentHandleToken is taken. 
            This is a mandatory field.
        settleWithAuth:
          type: boolean
          enum:
            - true
            - false
          default: true
          description: |
            This indicates whether the request is an Authorization only (no Settlement), or a Purchase (Authorization and Settlement).
            Note: Defaults to true.
        txnTime:
          type: string
          example: '2020-03-19T06:38:07.000+0000'
          description: This attribute is the date and time the request was processed.
          readOnly: true
        status:
          type: string
          readOnly: true
          example: COMPLETED
          enum:
            - RECEIVED
            - COMPLETED
            - HELD
            - FAILED
            - CANCELLED
            - PENDING
          description: 'This attribute is the status of the transaction request. '
        gatewayReconciliationId:
          type: string
          example: QAAAAABHCI
          description: Transaction identifier that can be used to reconcile this transaction with the provider gateway.
        amount:
          type: number
          maximum: 999999999
          example: 100
          description: |-
            This is the amount of the request, in minor units. For example, to process US $10.99, this value should be 1099.

            Note: The amount specified in the Payment request must match the amount specified in the Payment Handle request from which the paymentHandleToken is taken.
        accountId:
          type: string
          maxLength: 10
          example: '9876543210'
          description: This is the merchant account number used for the request. Include this optional parameter if you have more than one merchant account for the currency/payment type combination you are specifying.
        description:
          type: string
          example: Consumer Purchase
          maxLength: 255
          description: This is a description of the transaction you provided
        dupCheck:
          type: boolean
          example: false
          default: true
          description: This validates that this request is not a duplicate. A request is considered a duplicate if the merchantRefNum has already been used in a previous request within the past 90 days.
        consumerIp:
          type: string
          maxLength: 39
          example: 172.0.0.1
          description: This is the customer's IP address.
        liveMode:
          type: boolean
          default: false
          enum:
            - true
            - false
        updatedTime:
          type: string
          example: '2020-03-19T06:44:22Z'
          description: ISO 8601 format (UTC) This is the date and time the resource was last updated.
          readOnly: true
        statusTime:
          type: string
          example: '2020-03-19T06:44:22Z'
          description: ISO 8601 format (UTC) This is the date and time the resource status was last updated.
          readOnly: true
        gatewayResponse:
          $ref: '#/components/schemas/paymentsGatewayResponse'
        availableToSettle:
          type: number
          example: 0
          description: 'This is the amount of this Settlement that is available to Refund, in minor units. For example, US $10.99 would be 1099.'
          readOnly: true
        neteller:
          $ref: '#/components/schemas/neteller'
        settlement:
          $ref: '#/components/schemas/settlements'
        error:
          $ref: '#/components/schemas/error'
        meta:
          $ref: '#/components/schemas/meta'
        availableToRefund:
          type: number
          maxLength: 999999999
          description: 'This is the amount of the Authorization remaining to refund, in minor units.'
        links:
          type: array
          items:
            $ref: '#/components/schemas/links'
      required:
        - id
        - paymentType
        - paymentHandleToken
        - merchantRefNum
        - currencyCode
        - status
        - amount
    processStandaloneCreditsresponse:
      title: processStandaloneCreditsresponse
      type: object
      example:
        id: ff9bb334-5f7b-4b99-a1bd-abda1d7c529e
        paymentType: NETELLER
        paymentHandleToken: PH1c9QG7Zwj4N38E
        merchantRefNum: 29f28809-5281-497f-aa9f-40f58018edb3
        currencyCode: USD
        txnTime: '2020-03-19T07:15:06.000+0000'
        billingDetails:
          street1: 100 Queen
          street2: Unit 201
          city: Toronto
          zip: M5H 2N2
          country: CA
        status: PENDING
        gatewayReconciliationId: 29f28809-5281-497f-aa9f-40f58018edb3
        amount: 500
        returnLinks:
          - rel: on_failed
            href: 'https://usgaminggamblig.com/payment/return/failed'
          - rel: on_cancelled
            href: 'https://usgaminggamblig.com/payment/return/cancel'
          - rel: default
            href: 'https://usgaminggamblig.com/payment/return/success'
        liveMode: false
        updatedTime: '2020-03-19T07:15:06Z'
        statusTime: '2020-03-19T07:15:06Z'
        gatewayResponse:
          id: '664099288592333'
          amount: '500'
          currency: USD
          transactionType: Merchant to Member Transfer
          description: Neteller Simulator Test to neteller.account@example.org
          status: pending
          processor: NETELLER
        neteller:
          consumerId: neteller.account@example.org
      x-examples:
        example-1:
          id: ff9bb334-5f7b-4b99-a3bd-abda1d7c529e
          paymentType: NETELLER
          paymentHandleToken: PH1c9QG7Zwj4N38E
          merchantRefNum: 29f28809-5281-497f-aa9f-40f58018edb3
          currencyCode: USD
          txnTime: '2020-03-19T07:15:06.000+0000'
          billingDetails:
            street1: 100 Queen
            street2: Unit 201
            city: Toronto
            zip: M5H 2N2
            country: CA
          status: PENDING
          gatewayReconciliationId: 29f28809-5281-497f-aa9f-40f58018edb3
          amount: 500
          returnLinks:
            - rel: on_failed
              href: 'https://usgaminggamblig.com/payment/return/failed'
            - rel: on_cancelled
              href: 'https://usgaminggamblig.com/payment/return/cancel'
            - rel: default
              href: 'https://usgaminggamblig.com/payment/return/success'
          liveMode: false
          updatedTime: '2020-03-19T07:15:06Z'
          statusTime: '2020-03-19T07:15:06Z'
          gatewayResponse:
            id: '664099288591333'
            amount: '500'
            currency: USD
            transactionType: Merchant to Member Transfer
            description: Neteller Simulator Test to neteller.account@example.org
            status: pending
            processor: NETELLER
          neteller:
            consumerId: neteller.account@example.org
      x-stoplight:
        id: a4acb6af4b25d
      x-internal: true
      properties:
        id:
          type: string
          readOnly: true
          example: ff9bb334-5f7b-4b99-a8bd-abda1d7c529e
          description: This attribute is the ID returned in the response. You can use this ID for future associated requests.
        paymentType:
          type: string
          example: NETELLER
          enum:
            - NETELLER
          description: |
            This is the payment type associated with this Payment Handle. 
        paymentHandleToken:
          type: string
          example: PH1c9QG7Zwj4N38E
          description: This is the payment token generated by Paysafe that you can use for Standalone Credits request.
        merchantRefNum:
          type: string
          example: 29f28809-5281-497f-aa9f-40f58018edb3
          description: This is the merchant reference number created by you and submitted as part of the request. It must be unique for each request.
        currencyCode:
          type: string
          example: USD
          description: |-
            This is the currency of your account, for example, USD or CAD, returned in the request response. See [Currency Codes](https://developer.paysafe.com/en/support/reference-information/codes/).

            Note: The currencyCode specified in the Payment request must match the currencyCode specified in the Payment Handle request from which the paymentHandleToken is taken. 
            This is a mandatory field.
        txnTime:
          type: string
          readOnly: true
          example: '2020-03-19T07:15:06.000+0000'
          description: This attribute is the date and time the request was processed.
        billingDetails:
          $ref: '#/components/schemas/billingDetails'
        status:
          type: string
          example: PENDING
          enum:
            - RECEIVED
            - COMPLETED
            - HELD
            - FAILED
            - CANCELLED
            - PENDING
          description: 'This attribute is the status of the transaction request. '
        gatewayReconciliationId:
          type: string
          example: 29f28809-5281-497f-aa9f-40f58018edb3
          description: |
            Transaction identifier that can be used to reconcile this transaction with the provider gateway.
        amount:
          type: number
          example: 500
          description: |-
            This is the amount of the request, in minor units. 
            For example, to process US $10.99, this value should be 1099.

            Note: The amount specified in the Payment request must match the amount specified in the Payment Handle request from which the paymentHandleToken is taken.
        returnLinks:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/returnLinks'
        liveMode:
          type: boolean
          default: false
          enum:
            - true
            - false
        updatedTime:
          type: string
          readOnly: true
          example: '2020-03-19T07:15:06Z'
          description: |
            ISO 8601 format (UTC) This is the date and time the resource was last updated.
        statusTime:
          type: string
          readOnly: true
          example: '2020-03-19T07:15:06Z'
          description: ISO 8601 format (UTC) This is the date and time the resource status was last updated.
        gatewayResponse:
          $ref: '#/components/schemas/standaloneCreditGatewayResponse'
        neteller:
          $ref: '#/components/schemas/neteller'
      required:
        - id
        - paymentType
        - paymentHandleToken
        - merchantRefNum
        - currencyCode
        - billingDetails
        - status
        - amount
        - returnLinks
    recipient:
      title: recipient1
      type: object
      description: The recipient is deemed to be the person or party who has the contractual relationship with the merchant/financial institution.
      x-stoplight:
        id: 257dbf5bf77b3
      properties:
        dateOfBirth:
          allOf:
            - $ref: '#/components/schemas/dateOfBirth'
        zip:
          type: string
          description: |-
            This is the zip/postal code of the recipient.

            _length<=10_
          example: EC4Y 0HQ
        lastName:
          type: string
          description: |-
            This is the last name of the recipient.

            _length<=255_
        accountNumber:
          type: string
          description: |-
            This is the account number of the recipient.

            _length<=25_
      x-internal: true
    rel:
      title: rel
      enum:
        - default
        - on_completed
        - on_failed
        - on_cancelled
      type: string
      description: 'This is the link type, allowing different endpoints to be targeted depending on the end state of the transaction. The link relation describes how this link relates to the previous call.'
      x-internal: true
    request:
      title: request
      type: object
      properties:
        id:
          type: string
          description: |-
            This is the ID returned in the response. This ID can be used for future associated requests, e.g., to look up the Payment Handle.

            _Read Only, length<=36_
          example: 26359efd-7cfb-4014-a13d-1724e3ff17fa
        merchantRefNum:
          type: string
          description: |-
            This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.

            _length<=50_
          example: merchantRefNum-101
        transactionType:
          allOf:
            - $ref: '#/components/schemas/paymentSCTtransactionType'
            - description: This specifies the transaction type for which the Payment Handle is created.
        accountId:
          type: string
          description: |-
            This is the merchant account number used for the request. Include this optional parameter if you have more than one merchant account for the currency/payment type combination you are specifying.

            _length<=10_
          example: '9876543210'
        status:
          allOf:
            - $ref: '#/components/schemas/paymentHandleStatus'
            - description: |-
                This is the status of the payment handle.

                _Read Only_
              example: PAYABLE
        usage:
          allOf:
            - $ref: '#/components/schemas/usage'
            - description: This specifies how the Payment Handle will be used for Payments.
              example: SINGLE_USE
        paymentType:
          allOf:
            - $ref: '#/components/schemas/paymentType'
            - description: 'This is the payment type associated with this Payment Handle. If applicable, you need to pass the corresponding payment type object as listed after this parameter.'
              example: NETELLER
        action:
          allOf:
            - $ref: '#/components/schemas/action'
            - description: |-
                This specifies the next step of the user journey once they proceed to the Payment.

                _Read Only_
              example: REDIRECT
        executionMode:
          allOf:
            - $ref: '#/components/schemas/executionMode'
            - description: This specifies the action of the merchant server in order to complete the Payment.
              example: SYNCHRONOUS
        amount:
          type: string
          description: |-
            This is the amount of the request, in minor units. **Note:** This field is mandatory if *transactionType* is included. The *amount* specified in the Payment Handle request must match the *amount* specified in the Payments API request the *paymentHandleToken* is used for.

            _Max =999999999_
          example: '1000'
        currencyCode:
          type: string
          description: |-
            This is the [currency of the merchant account](https://developer.paysafe.com/en/support/reference-information/codes/), e.g., USD or CAD. **Note:** This field is mandatory if *transactionType* is included. The *currencyCode* specified in the Payment Handle request must match the *currencyCode* specified in the Payments API request the *paymentHandleToken* is used for. This is a mandatory field.

            _max=3_
          example: CAD
        paymentHandleToken:
          type: string
          description: |-
            This is the payment token generated by Paysafe that will be used by merchants for Payment API requests.

            _Read Only, length<=36_
          example: SCO3wKcIyLoQbQvw
        returnLinks:
          allOf:
            - $ref: '#/components/schemas/returnLinks'
            - description: The URL endpoints to redirect the customer to after a redirection to an alternative payment or 3D Secure site. You can customize the return URL based on the transaction status.
        links:
          allOf:
            - $ref: '#/components/schemas/links'
            - description: This is an array of links related to the resource.
        customerIp:
          type: string
          description: |-
            This is the customer's IP address.

            _length<=39_
          example: 111.111.111.111
        timeToLiveSeconds:
          type: number
          description: |-
            This is the period of time, in seconds, the *paymentHandleToken* is valid before expiration.

            _Read Only, length<=899_
          example: 899
        txnTime:
          type: string
          description: |-
            This is the date and time the transaction was processed.

            _Read Only_
          example: '2015-12-11T16:33:49Z'
        updatedTime:
          type: string
          description: |-
            Indicates the last updated time for the resource.

            _Read Only_
            +`statusTime`: `2016-01-01T04:55:55Z` (string) - Indicates when the status was last updated.
            _Read Only_
          example: '2016-01-01T04:5:55Z'
        neteller:
          $ref: '#/components/schemas/neteller'
        profile:
          $ref: '#/components/schemas/profile'
        billingDetails:
          allOf:
            - $ref: '#/components/schemas/billingDetails'
            - description: 'These are the customer''s billing details. **Note:** For single-use payment handles, this address information will be ignored if the *paymentHandleTokenFrom* parameter is included in the Payment Handle creation request and there is already address information associated with that customer.'
        gatewayResponse:
          allOf:
            - $ref: '#/components/schemas/standaloneCreditGatewayResponse'
            - description: This is the raw response returned by the payment service provider. It is returned only if your account is configured accordingly.
      x-internal: true
    paymentRequest:
      title: paymentRequest
      type: object
      properties:
        id:
          type: string
          description: |-
            This is the ID returned in the response. This ID can be used for future associated requests, for example, looking up the Payment.

            _Read Only, length<=36_
          example: 3aeb9c63-6386-46a3-9f8e-f452e722228a
        merchantRefNum:
          type: string
          description: |-
            This is the merchant reference number created by you and submitted as part of the request. It must be unique for each request.

            _length<=50_
          example: merchantRefNum-101
        amount:
          type: number
          description: |-
            This is the amount of the request, in minor units. **Note:** The *amount* specified in the Payment request must match the *amount* specified in the Payment Handle request from which the *paymentHandleToken* is taken.

            _max=999999999_
          example: 1000
        dupCheck:
          type: boolean
          description: This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request within the past 90 days.
          example: false
        settleWithAuth:
          type: boolean
          description: This indicates whether the request is an Authorization only (no Settlement) or a Purchase (Authorization and Settlement). For NETELLER only 'true' is supported
          example: true
        paymentHandleToken:
          type: string
          description: |-
            This is the payment token generated by Paysafe that will be used for the Payment request.

            _length<=36_
          example: 842778a0-03a2-11e9-8eb2-f2801f1b9fd1
        availableToSettle:
          type: number
          description: |-
            This is the amount of the Authorization remaining to settle, in minor units.

            _Read Only_
          example: 0
        customerIp:
          type: string
          description: |-
            This is the customer's IP address.

            _length<=39_
          example: 111.111.111.111
        description:
          type: string
          description: |-
            This is a description of the transaction you provided.

            _length<=255_
          example: Consumer Purchase
        txnTime:
          type: string
          description: |-
            This is the date and time the transaction was processed.

            _Read Only_
          example: '2018-12-11T16:33:49Z'
        paymentType:
          allOf:
            - $ref: '#/components/schemas/paymentType'
        status:
          allOf:
            - $ref: '#/components/schemas/paymentHandleStatus'
        currencyCode:
          type: string
          description: |-
            This is the [currency of the merchant account](https://developer.paysafe.com/en/support/reference-information/codes/), for example, USD or CAD. **Note:** The *currencyCode* specified in the Payment request must match the *currencyCode* specified in the Payment Handle request from which the *paymentHandleToken* is taken.

            _max=3_
          example: CAD
        settlement:
          type: array
          description: This is the list of all Settlements. This will be returned only if *settleWithAuth* = *true* in the request.
          items:
            type: string
        statusReason:
          type: string
          description: |-
            This is reason for the status. This is present in case of ERROR, FAILURE, HELD status.

            _length<=255_
        gatewayReconciliationId:
          type: string
          description: |-
            Transaction identifier that can be used to reconcile this transaction with the provider gateway.

            _Read Only_
          example: QAAAAABHCI
        updatedTime:
          type: string
          description: |-
            Indicates the last updated time for the resource.

            _Read Only_
          example: '2016-01-01T04:5:55Z'
        statusTime:
          type: string
          description: |-
            Indicates when the status was last updated.

            _Read Only_
          example: '2016-01-01T04:55:55Z'
        availableToRefund:
          type: number
          description: |-
            This is the amount of the Authorization remaining to refund, in minor units.

            _Read Only, max=999999999_
          example: 25
        links:
          type: array
          description: |-
            If applicable, this is a list of links to the related resource.

                    + `rel` (string) - This is the description or relation of the link. For example, default, redirect_payment, first, prev, next, last.
                    + `href` (string) - This is the actual URL of the link.
          items:
            type: string
        gatewayResponse:
          allOf:
            - $ref: '#/components/schemas/paymentsGatewayResponse'
        error:
          allOf:
            - $ref: '#/components/schemas/error'
        meta:
          allOf:
            - $ref: '#/components/schemas/meta'
        neteller:
          $ref: '#/components/schemas/neteller'
      x-stoplight:
        id: 2cdc15d8dd95c
      x-examples:
        Example 1:
          id: 3aeb9c63-6386-46a3-9f8e-f452e722228a
          merchantRefNum: merchantRefNum-101
          amount: 1000
          dupCheck: false
          settleWithAuth: true
          paymentHandleToken: 842778a0-03a2-11e9-8eb2-f2801f1b9fd1
          availableToSettle: 0
          customerIp: 111.111.111.111
          description: Consumer Purchase
          txnTime: '2018-12-11T16:33:49Z'
          paymentType: NETELLER
          status: RECEIVED
          currencyCode: CAD
          settlement:
            - string
          statusReason: string
          gatewayReconciliationId: QAAAAABHCI
          updatedTime: '2016-01-01T04:5:55Z'
          statusTime: '2016-01-01T04:55:55Z'
          availableToRefund: 25
          links:
            - string
          gatewayResponse:
            orderId: string
            merchantRefId: string
            totalAmount: 0
            currency: string
            lang: string
            customerId: string
            verificationLevel: '00'
            transactionId: string
            transactionType: Member to Merchant Transfer
            description: string
            status: pending
            proessor: string
          error:
            code: '1001'
            message: An internal error occurred.
            riskReasonCode: text
            details:
              - string
            fieldErrors:
              - string
            links:
              - string
          meta:
            numberOfRecords: 1
            limit: 10
            page: 1
          neteller:
            consumerId: john.doe@email.com
            consumerIdLocked: true
            detail1Description: description
            detail1Text: Details 1 text
      x-internal: true
    returnLinks:
      title: returnLinks
      type: object
      description: The URL endpoints to redirect the customer to after a redirection to an alternative payment or 3D Secure site. You can customize the return URL based on the transaction status.
      properties:
        rel:
          $ref: '#/components/schemas/rel'
        href:
          type: string
          description: The actual URL
        method:
          type: string
          description: The HTTP method
      required:
        - rel
        - href
      x-internal: true
    settlements:
      title: settlements
      type: object
      example:
        amount: 100
        txnTime: '2020-03-19T06:38:07.000+0000'
        merchantRefNum: 4a33324e-ae23-4c48-955b-33ee189933f3
        id: 67869d92-4df3-455b-80f4-780abbce41b6
        status: COMPLETED
      properties:
        amount:
          type: number
          example: 100
          description: This is the amount to be settled.
        txnTime:
          type: string
          example: '2020-03-19T06:38:07.000+0000'
        merchantRefNum:
          type: string
          example: 4a33324e-ae23-4c48-955b-33ee189933f3
          description: This is the merchant reference number created by you and submitted as part of the request. It must be unique for each request.
        id:
          type: string
          example: 67869f92-4df1-455b-80f4-780abbce4103
          description: This is settelement Id.
        status:
          type: string
          example: COMPLETED
          description: This is the status of transaction.
      required:
        - amount
        - merchantRefNum
        - id
      x-examples:
        Example 1:
          amount: 100
          txnTime: '2020-03-19T06:38:07.000+0000'
          merchantRefNum: 4a33324e-ae23-4c48-955b-33ee189933f3
          id: 67863d92-4df1-455b-80f4-780abbce41b6
          status: COMPLETED
      x-internal: true
      x-stoplight:
        id: 4b78b3d74c955
    paymentHandleStatus:
      title: paymentHandleStatus
      enum:
        - INITIATED
        - PAYABLE
        - FAILED
        - EXPIRED
        - COMPLETED
      type: string
      description: |
        This is the status of the payment handle.
      example: PAYABLE
      x-stoplight:
        id: aa331a2cbabe5
      x-internal: true
    status:
      title: status
      readOnly: true
      enum:
        - RECEIVED
        - INITIATED
        - PENDING
        - PROCESSING
        - FAILED
        - CANCELLED
        - EXPIRED
        - COMPLETED
      type: string
      description: |
        This is the status of the transaction request.
      example: PENDING
      x-stoplight:
        id: aa131a2cba81f
      x-internal: true
    transactionType:
      title: transactionType
      enum:
        - Member to Merchant Transfer
        - Merchant to Member Transfer
      type: string
      description: The type of transaction.
      x-internal: true
    paymentSCTtransactionType:
      title: transactionType1
      enum:
        - PAYMENT
        - STANDALONE_CREDIT
      type: string
      description: This specifies the transaction type for which the Payment Handle is created.
      x-stoplight:
        id: 46d3cf6636ed4
      x-internal: true
    usage:
      title: usage
      enum:
        - SINGLE_USE
      type: string
      description: This specifies how the Payment Handle will be used for Payments.
      example: SINGLE_USE
      x-internal: true
    verificationLevel:
      title: verificationLevel
      enum:
        - '00'
        - '01'
        - '10'
        - '11'
      type: string
      description: the verification level of the member and payment instrument.
      x-internal: true
    gatewayResponseStatus:
      title: gatewayResponseStatus
      x-stoplight:
        id: t15n3jxxe8py4
      type: object
      properties:
        status:
          type: string
          description: |
            Possible values:

            pending

            cancelled

            failed - The order was not paid.

            paid

            expired - The order had expired (default: 15 mins)
      x-internal: true
  securitySchemes:
    httpBasic:
      type: http
      scheme: basic
security:
  - httpBasic: []
tags:
  - name: Payments
    description: ''
  - name: Standalone Credits
    description: ''
