openapi: 3.0.0
servers:
  - url: 'https://api.test.paysafe.com/customervault'
    variables: {}
info:
  title: Paysafe Customer Vault API
  description:
    $ref: ../docs/CustomerVaultAPI.md
  contact: {}
  version: '1.0'
paths:
  /v1/applepaysingleusetokens:
    post:
      tags:
        - Single-Use Tokens
      summary: Create an Apple Pay Single-Use Token
      description: |-
        <a name="applepaysingleusetokens" title="Apple Pay Single-Use Tokens"></a><a name="applepaysingleusetokenrequest" title="Apple Pay Single-Use Token Request"></a>
        For payment requests coming from mobile devices you need a specific API key to retrieve single-use tokens from the Customer Vault. This API key is different from the server-to-server API key that you use to process all other Paysafe API requests. See [Where to Find Your API Key](https://developer.paysafe.com/en/api-docs/payments-api/reference-information/using-your-api-keys/) for more information.

        This is how you submit an Apple Pay single-use token creation request. In the response, you will find a *paymentToken* value to include with your Authorization or Purchase request in the [Card Payments](https://developer.paysafe.com/en/cards-api) API.

        You have to generate a new single-use token for each Apple Pay transaction you wish to process.
      operationId: create-applePay-single-use-token
      parameters:
        - name: Content-Type
          schema:
            $ref: '#/components/schemas/contentType'
          in: header
          required: true
          description: application/json
      requestBody:
        $ref: '#/components/requestBodies/applePaySingleUseTokens'
      responses:
        '200':
          $ref: '#/components/responses/applePaySingleUseTokens200'
        '400':
          $ref: '#/components/responses/error400'
      deprecated: false
  /v1/googlepaysingleusetokens:
    post:
      tags:
        - Single-Use Tokens
      summary: Create a Google Pay Single-Use Token
      description: |-
        <a name="googlepaysingleusetokens" title="Google Pay Single-Use Tokens"></a><a name="googlepaymentapisingleusetokenrequest" title="Google Pay Single-Use Token Request"></a>

        For payment requests coming from mobile devices you need a specific API key to retrieve single-use tokens from the Customer Vault. This API key is different from the server-to-server API key that you use to process all other Paysafe API requests. See [Where to Find Your API Key](https://developer.paysafe.com/en/api-docs/payments-api/reference-information/using-your-api-keys/) for more information.

        This is how you submit a Google Pay single-use token creation request. In the response, you will find a *paymentToken* value to include with your Authorization or Purchase request in the [Card Payments](https://developer.paysafe.com/en/cards-api) API.

        Note the following in the response:

        * If *paymentMethod* = *TOKENIZED_CARD*, this indicates that the card is an Android Pay card.

        * If *paymentMethod* = *CARD_ON_FILE*, this indicates that the card is on file with Google after having been used at Google for some other purpose (e.g., Google Play).

        You have to generate a new single-use token for each Google Pay transaction you wish to process.
      operationId: create-googlePay-single-use-token
      parameters:
        - name: Content-Type
          schema:
            $ref: '#/components/schemas/contentType'
          in: header
          required: true
          description: application/json
      responses:
        '200':
          $ref: '#/components/responses/googlePaySingleUseTokens200'
        '400':
          $ref: '#/components/responses/error400'
      deprecated: false
      requestBody:
        $ref: '#/components/requestBodies/googlePaySingleUseTokens'
  /v1/singleusetokens:
    post:
      tags:
        - Single-Use Tokens
      summary: Create a Card Single-Use Token
      description: |-
        <a name="singleusetokens" title="Single-Use Tokens"></a><a name="singleusetokenrequest" title="Single-Use Token Request"></a>

        For payment requests coming from mobile devices you need a specific API key to retrieve single-use tokens from the Customer Vault. This API key is different from the server-to-server API key that you use to process all other Paysafe API requests. See [Where to Find Your API Key](https://developer.paysafe.com/en/api-docs/payments-api/reference-information/using-your-api-keys/) for more information.

        This is how you submit a card single-use token creation request. In the response, you will find a *paymentToken* value to include with your Authorization or Purchase request in the [Card Payments](https://developer.paysafe.com/en/cards-api) API.

        You have to generate a new single-use token for each card transaction you wish to process.
      operationId: create-card-single-use-token
      parameters: []
      responses:
        '200':
          $ref: '#/components/responses/singleUseTokens200'
        '400':
          $ref: '#/components/responses/error400'
      deprecated: false
      requestBody:
        $ref: '#/components/requestBodies/cardCreateSingleUseToken'
  /v1/singleusetokens/search:
    post:
      tags:
        - Single-Use Tokens
      summary: Get a Card Single-Use Token
      description: |-
        <a name="singleusetokens" title="Single-Use Tokens"></a><a name="getcardsingleusetokenrequest" title="Lookup a Card Single-Use Token"></a>

        This is how you look up a token using a card single-use token.

        **Note:** This endpoint should be called from your server as it requires server-to-server API key.
      operationId: get-card-single-use-token
      parameters:
        - name: Content-Type
          schema:
            $ref: '#/components/schemas/contentType'
          in: header
          required: true
          description: application/json
      responses:
        '200':
          $ref: '#/components/responses/singleUseTokensSearch200'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      deprecated: false
      requestBody:
        $ref: '#/components/requestBodies/singleUseTokensSearch'
  /v1/achsingleusetokens:
    post:
      tags:
        - Direct Debit Single-Use Tokens
      summary: Create an ACH Single-Use Token
      description: |-
        <a name="achsingleusetokens" title="ACH Single-Use Tokens"></a><a name="achsingleusetokenrequest" title="ACH Single-Use Token Request"></a>

        For payment requests coming from mobile devices you need a specific API key to retrieve single-use tokens from the Customer Vault. This API key is different from the server-to-server API key that you use to process all other Paysafe API requests. See [Where to Find Your API Key](https://developer.paysafe.com/en/api-docs/payments-api/reference-information/using-your-api-keys/) for more information.

        This is how you submit an ACH single-use token creation request. In the response, you will find a *paymentToken* value to include with your Direct Debit Purchase or Standalone Credit request in the [Direct Debit](https://developer.paysafe.com/en/direct-debit/api/) API or when accepting Direct Debit payments using the [Paysafe Checkout](https://developer.paysafe.com/en/sdks/paysafe-checkout/overview/).

        You have to generate a new single-use token for each ACH transaction you wish to process.
      operationId: create-ACH-single-use-token
      parameters:
        - name: Content-Type
          schema:
            $ref: '#/components/schemas/contentType'
          in: header
          required: true
          description: application/json
      responses:
        '200':
          $ref: '#/components/responses/achSingleuseTokens200'
        '400':
          $ref: '#/components/responses/error400'
      deprecated: false
      requestBody:
        $ref: '#/components/requestBodies/achSingleuseTokens'
  /v1/eftsingleusetokens:
    post:
      tags:
        - Direct Debit Single-Use Tokens
      summary: Create an EFT Single-Use Token
      description: |-
        <a name="eftsingleusetokens" title="EFT Single-Use Tokens"></a><a name="eftsingleusetokenrequest" title="EFT Single-Use Token Request"></a>

        For payment requests coming from mobile devices you need a specific API key to retrieve single-use tokens from the Customer Vault. This API key is different from the server-to-server API key that you use to process all other Paysafe API requests. See [Where to Find Your API Key](https://developer.paysafe.com/en/api-docs/payments-api/reference-information/using-your-api-keys/) for more information.

        This is how you submit an EFT single-use token creation request. In the response, you will find a *paymentToken* value to include with your Direct Debit Purchase or Standalone Credit request in the [Direct Debit](https://developer.paysafe.com/en/direct-debit/api/) API or when accepting Direct Debit payments using the [Paysafe Checkout](https://developer.paysafe.com/en/sdks/paysafe-checkout/overview/).

        You have to generate a new single-use token for each EFT transaction you wish to process.
      operationId: create-EFT-single-use-token
      parameters:
        - name: Content-Type
          schema:
            $ref: '#/components/schemas/contentType'
          in: header
          required: true
          description: application/json
      responses:
        '200':
          $ref: '#/components/responses/eftSingleUseTokens200'
        '400':
          $ref: '#/components/responses/error400'
      deprecated: false
      requestBody:
        $ref: '#/components/requestBodies/eftSingleUseTokens'
  '/v1/profiles/{profileId}/singleuseprofiles':
    post:
      tags:
        - Profile Single-Use Tokens
      summary: Create a Profile Single-Use Token
      description: |-
        <a name="profilesingleusetokenrequest" title="Profile Single-Use Token Request"></a>

        This is how you submit a profile single-use token creation request. In the response, you will find a paymentToken value to include with your invocation of the [setup function of Paysafe Checkout](https://developer.paysafe.com/en/sdks/paysafe-checkout/setup-function/).
      operationId: create-profile-single-use-token
      parameters:
        - name: profileId
          in: path
          description: This is the ID of the profile for which the profile single-use token will be created.
          required: true
          style: simple
          schema:
            type: string
            example: a7b218e7-290a-4434-aea2-a1f985fc26c0
      responses:
        '200':
          $ref: '#/components/responses/profilesSingleUseProfiles200'
        '400':
          $ref: '#/components/responses/error400'
      deprecated: false
      requestBody:
        $ref: '#/components/requestBodies/singleUseTokensSearch'
  /monitor:
    get:
      summary: Verify That the Service Is Accessible
      description: |-
        <a name="verifyservice" title="Verify Service"></a>

        This call returns a status of READY if the API is available.
      operationId: verify-the-service-is-accessible
      parameters: []
      responses:
        '200':
          $ref: '#/components/responses/monitor200'
      deprecated: false
      security: []
      tags:
        - Monitor
      x-internal: false
  /v1/profiles:
    post:
      summary: Create a Profile
      description: |-
        <a name="profilesrequest" title="Profiles Request"></a>
        <a name="createprofilerequest" title="Create a Profile"></a>

        You can create profiles using the following 8 flows:

        1. Submit a simple profile creation request.

        **Note:** The *paymentToken* returned in the response to a profile creation request cannot be used for payment requests.

        2. Submit a profile creation request that includes the recipient object.

        **Note:** The *paymentToken* returned in the response to a profile creation request cannot be used for payment requests.

        3. Submit a profile creation request using a card.

        **Note:** Only the paymentToken returned in the cards array in the response can be used for payment requests with the Card Payments API. The top-level paymentToken in the profile response is not valid for payment requests.

        4. Submit a profile creation request using a single-use token.

        **Note:** You can use this request to convert a single-use payment token to a permanent token, but before doing so you should usethe Card Payments API to verify that the single-use token is valid.Note: Only the paymentToken returned in the cards object in the response can be used for payment requests with the Card Payments API. The top-level paymentToken in the profile response is not valid for payment requests.

        5. This is how you submit a profile creation request using an ACH bank account.

        **Note:** Only the paymentToken returned in the achBankAccounts array in the response can be used for requests with the Direct Debit API. The top-level paymentToken in the profile response is not valid for payment requests.

        6. Submit a profile creation request using an ACH single-use token.

        **Note:** Only the paymentToken returned in the achBankAccounts object in the response can be used for requests with the Direct Debit API. The top-level paymentToken in the profile response is not valid for payment requests.

        7. This is how you submit a profile creation request using an ACH bank account.

        **Note:** Only the paymentToken returned in the achBankAccounts array in the response can be used for requests with the Direct Debit API. The top-level paymentToken in the profile response is not valid for payment requests.

        8. Submit a profile creation request using an EFT bank account.

        **Note:** Only the paymentToken returned in the eftBankAccounts array in the response can be used for requests with the Direct Debit API. The top-level paymentToken in the profile response is not valid for payment requests.
      operationId: create-profile
      parameters:
        - name: Content-Type
          schema:
            $ref: '#/components/schemas/contentType'
          in: header
          required: true
          description: application/json
      responses:
        '201':
          $ref: '#/components/responses/profiles201'
        '400':
          $ref: '#/components/responses/error400'
      deprecated: false
      tags:
        - Profiles
      requestBody:
        $ref: '#/components/requestBodies/profiles'
    get:
      summary: Get Profile Using Merchant Customer ID
      description: |-
        <a name="profilesrequest" title="Profiles Request"></a><a name="getprofilerequest" title="Look Up a Profile"></a>

        This is how you look up a profile using the Merchant Customer ID that was used in the original request.
      operationId: get-profile-using-merchantCustomerId
      parameters:
        - schema:
            type: string
          in: query
          name: merchantCustomerId
          description: This is a customer ID that the merchant provided with the profile creation request for their own internal customer identification..
          required: true
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/profiles200'
        '400':
          $ref: '#/components/responses/error400'
      tags:
        - Profiles
  '/v1/profiles/{profile_id}':
    get:
      summary: Get Profile
      description: |-
        <a name="profilesrequest" title="Profiles Request"></a><a name="getprofilerequest" title="Look Up a Profile"></a>

        This is how you look up a profile using the ID returned in the response to the original request.
      operationId: get-profile
      parameters:
        - name: profile_id
          in: path
          description: This is the profile ID returned in the response (in NETBANX this is called the Consumer ID).
          required: true
          style: simple
          schema:
            type: string
            example: a7b218e7-290a-4434-aea2-a1f985fc26c0
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/profiles200'
      deprecated: false
      tags:
        - Profiles
    put:
      summary: Update a Profile
      description: |-
        <a name="profilesrequest" title="Profiles Request"></a><a name="updateprofilerequest" title="Update a Profile"></a>

        This is how you update a profile.

        **Note:** You must provide all of the elements of the profile when you are updating it, including the elements that are not changing. Elements that are part of an existing profile but that are not included in the update request will be set to *null* in the resulting profile, with the exception of the *status* element.
      operationId: update-profile
      parameters:
        - name: profile_id
          in: path
          description: This is the profile ID returned in the response (in NETBANX this is called the Consumer ID).
          required: true
          style: simple
          schema:
            type: string
            example: a7b218e7-290a-4434-aea2-a1f985fc26c0
        - name: Content-Type
          schema:
            $ref: '#/components/schemas/contentType'
          in: header
          required: true
          description: application/json
      responses:
        '200':
          $ref: '#/components/responses/profiles200'
        '400':
          $ref: '#/components/responses/error400'
      deprecated: false
      tags:
        - Profiles
      requestBody:
        $ref: '#/components/requestBodies/profilesUpdate'
    delete:
      summary: Delete a Profile
      description: |-
        <a name="profilesrequest" title="Profiles Request"></a><a name="deleteprofilerequest" title="Delete a Profile"></a>

        This is how you delete a profile.
      operationId: delete-profile
      parameters:
        - name: profile_id
          in: path
          description: This is the profile ID returned in the response (in NETBANX this is called the Consumer ID).
          required: true
          style: simple
          schema:
            type: string
            example: a7b218e7-290a-4434-aea2-a1f985fc26c0
      responses:
        '200':
          description: ''
          headers: {}
          content: {}
      deprecated: false
      tags:
        - Profiles
  '/v1/profiles/{profile_id}/addresses':
    post:
      summary: Create an Address
      description: |-
        <a name="addressesrequest" title="Addresses Request"></a><a name="createaddressrequest" title="Create an Address"></a>

        This is how you submit an address creation request.
      operationId: create-address
      parameters:
        - name: profile_id
          in: path
          description: This is the ID of the profile to which you are adding an address.
          required: true
          style: simple
          schema:
            type: string
            example: a5f1889d-f1be-4bbf-941d-fd9b8d09d5b1
        - name: Content-Type
          schema:
            $ref: '#/components/schemas/contentType'
          in: header
          required: true
          description: application/json
      responses:
        '201':
          $ref: '#/components/responses/profilesAddresses200'
        '400':
          $ref: '#/components/responses/error400'
      deprecated: false
      tags:
        - Addresses
      requestBody:
        $ref: '#/components/requestBodies/profilesAddresses'
  '/v1/profiles/{profile_id}/addresses/{address_id}':
    get:
      summary: Get Address
      description: |-
        <a name="addressesrequest" title="Addresses Request"></a><a name="getaddressrequest" title="Look Up an Address"></a>

        This is how you look up an address using the ID returned in the response to the original request.
      operationId: get-address
      parameters:
        - name: profile_id
          in: path
          description: This is the profile ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: a7b218e7-290a-4434-aea2-a1f985fc26c0
        - name: address_id
          in: path
          description: This is the address ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: 6a275b7c-6f11-4ed1-ae77-21071724574a
      responses:
        '200':
          $ref: '#/components/responses/profilesAddresses200'
      deprecated: false
      tags:
        - Addresses
    put:
      summary: Update an Address
      description: |-
        <a name="addressesrequest" title="Addresses Request"></a><a name="updateaddressrequest" title="Update an Address"></a>

        This is how you update an address.

        **Note:** You must provide all of the elements of the address when you are updating it, including the elements that are not changing. Elements that are part of an existing address but that are not included in the update request will be set to *null* in the resulting address.
      operationId: update-address
      parameters:
        - name: profile_id
          in: path
          description: This is the profile ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: a7b218e7-290a-4434-aea2-a1f985fc26c0
        - name: address_id
          in: path
          description: This is the address ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: 6a275b7c-6f11-4ed1-ae77-21071724574a
        - name: Content-Type
          schema:
            $ref: '#/components/schemas/contentType'
          in: header
          required: true
          description: application/json
      responses:
        '200':
          $ref: '#/components/responses/profilesAddresses200'
        '400':
          $ref: '#/components/responses/error400'
      deprecated: false
      tags:
        - Addresses
      requestBody:
        $ref: '#/components/requestBodies/profilesAddresses'
    delete:
      summary: Delete an Address
      description: |-
        <a name="addressesrequest" title="Addresses Request"></a><a name="deleteaddressrequest" title="Delete an Address"></a>

        This is how you delete an address.
      operationId: delete-address
      parameters:
        - name: profile_id
          in: path
          description: This is the profile ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: a7b218e7-290a-4434-aea2-a1f985fc26c0
        - name: address_id
          in: path
          description: This is the address ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: 6a275b7c-6f11-4ed1-ae77-21071724574a
      responses:
        '200':
          description: ''
          headers: {}
          content: {}
      deprecated: false
      tags:
        - Addresses
  '/v1/profiles/{profile_id}/cards':
    post:
      summary: Create a Card
      description: |-
        <a name="cardsrequest" title="Cards Request"></a><a name="createcardrequest" title="Create a Card"></a>

        This is how you submit a card creation request. The *paymentToken* returned in the response can be used for payment requests in the [Card Payments API](https://developer.paysafe.com/en/cards/api/#/reference/0/authorizations/authorization).

        **Note:** Although the *billingAddressID* parameter is optional, it is recommended that you include it when you create the card because Authorization or Purchase requests in the [Card Payments API](https://developer.paysafe.com/en/payments/cards/api/#/introduction/overview) that use the resulting payment token will fail AVS checks unless there is a billing address associated with it. If you do not include it when creating the card, you should then update the card with the *billingAddressId* at a later time before using it for transaction requests.
      operationId: create-card
      parameters:
        - name: profile_id
          in: path
          description: This is the ID of the profile to which you are adding a card.
          required: true
          style: simple
          schema:
            type: string
            example: a5f1889d-f1be-4bbf-941d-fd9b8d09d5b1
      responses:
        '201':
          $ref: '#/components/responses/cards201'
        '400':
          $ref: '#/components/responses/error400'
      deprecated: false
      tags:
        - Cards
      requestBody:
        $ref: '#/components/requestBodies/cards'
  '/v1/profiles/{profile_id}/cards/{card_id}':
    get:
      summary: Get Card
      description: |-
        <a name="cardsrequest" title="Cards Request"></a><a name="getcardrequest" title="Look Up a Card"></a>

        This is how you look up a card using the ID returned in the response to the original request.
      operationId: get-card
      parameters:
        - name: profile_id
          in: path
          description: This is the profile ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: a7b218e7-290a-4434-aea2-a1f985fc26c0
        - name: card_id
          in: path
          description: This is the card ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: 6dcc704e-106a-4fb3-98e2-f138ba5f16a1
      responses:
        '200':
          $ref: '#/components/responses/cards200'
      deprecated: false
      tags:
        - Cards
    put:
      summary: Update a Card
      description: |-
        <a name="cardsrequest" title="Cards Request"></a><a name="updatecardrequest" title="Update a Card"></a>

        You can update card in the following 2 flows:

        1. Simple update

        **Note:** You must provide all of the elements of the card when you are updating it, including the elements that are not changing. Elements that are part of an existing card but that are not included in the update request will be set to null in the resulting card, with the exception of the *cardNum* element.

        2. Update a card using a single-use token.

        **Note:** The existing card and corresponding billing details will be updated based on the information stored for the single-use token. For example, if an existing card has billing details information but the single-use token does not, this operation will remove the existing billing details from the card.
      operationId: update-card
      parameters:
        - name: profile_id
          in: path
          description: This is the profile ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: a7b218e7-290a-4434-aea2-a1f985fc26c0
        - name: card_id
          in: path
          description: This is the card ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: 6dcc704e-106a-4fb3-98e2-f138ba5f16a1
        - name: Content-Type
          schema:
            $ref: '#/components/schemas/contentType'
          in: header
          required: true
          description: application/json
      responses:
        '200':
          $ref: '#/components/responses/cards200'
        '400':
          $ref: '#/components/responses/error400'
      deprecated: false
      tags:
        - Cards
      requestBody:
        $ref: '#/components/requestBodies/cardsUpdate'
    delete:
      summary: Delete a Card
      description: |-
        <a name="cardsrequest" title="Cards Request"></a><a name="deletecardrequest" title="Delete a Card"></a>

        This is how you delete a card.
      operationId: delete-card
      parameters:
        - name: profile_id
          in: path
          description: This is the profile ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: a7b218e7-290a-4434-aea2-a1f985fc26c0
        - name: card_id
          in: path
          description: This is the card ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: 6dcc704e-106a-4fb3-98e2-f138ba5f16a1
      responses:
        '200':
          description: ''
          headers: {}
          content: {}
      deprecated: false
      tags:
        - Cards
  '/v1/profiles/{profile_id}/achbankaccounts':
    post:
      summary: Create an ACH Bank Account
      description: |-
        <a name="achbankaccountsrequest" title="ACH Bank Accounts Request"></a><a name="createachbankaccountrequest" title="Create an ACH Bank Account"></a>

        This is how you submit an ACH bank account creation request. The *paymentToken* returned in the response can be used for payment requests in the [Direct Debit API](https://developer.paysafe.com/en/direct-debit/api/#/reference/0/purchases).

        You can also submit an ACH bank account creation request using an ACH single-use token. The paymentToken returned in the response can be used for payment requests in the Direct Debit API.
      operationId: create-ACH-bank-account
      parameters:
        - name: profile_id
          in: path
          description: This is the ID of the profile to which you are adding an ACH bank account.
          required: true
          style: simple
          schema:
            type: string
            example: a5f1889d-f1be-4bbf-941d-fd9b8d09d5b1
        - name: Content-Type
          schema:
            $ref: '#/components/schemas/contentType'
          in: header
          required: true
          description: application/json
      responses:
        '201':
          $ref: '#/components/responses/achBankAccounts200'
        '400':
          $ref: '#/components/responses/error400'
      deprecated: false
      tags:
        - ACH Bank Accounts
      requestBody:
        $ref: '#/components/requestBodies/achBankAccounts'
  '/v1/profiles/{profile_id}/achbankaccounts/{bank_account_id}':
    get:
      summary: Get ACH Bank Account
      description: |-
        <a name="achbankaccountsrequest" title="ACH Bank Accounts Request"></a><a name="getachbankaccountrequest" title="Look Up an ACH Bank Account"></a>

        This is how you look up an ACH bank account using the ID returned in the response to the original request.
      operationId: get-ACH-bank-account
      parameters:
        - name: profile_id
          in: path
          description: This is the profile ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: a7b218e7-290a-4434-aea2-a1f985fc26c0
        - name: bank_account_id
          in: path
          description: This is the bank account ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: 6a275b7c-6f11-4ed1-ae77-21071724574a
      responses:
        '200':
          $ref: '#/components/responses/achBankAccounts200'
      deprecated: false
      tags:
        - ACH Bank Accounts
    put:
      summary: Update an ACH Bank Account
      description: |-
        <a name="achbankaccountsrequest" title="ACH Bank Accounts Request"></a><a name="updateachbankaccountrequest" title="Update an ACH Bank Account"></a>

        This is how you update an ACH bank account.

        **Note:** You must provide all of the elements of the bank account when you are updating it, including the elements that are not changing. Elements not included will be set to null in the resulting bank account, with the exception of the *accountNumber* element.
      operationId: update-ACH-bank-account
      parameters:
        - name: profile_id
          in: path
          description: This is the profile ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: a7b218e7-290a-4434-aea2-a1f985fc26c0
        - name: bank_account_id
          in: path
          description: This is the bank account ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: 6a275b7c-6f11-4ed1-ae77-21071724574a
        - name: Content-Type
          schema:
            $ref: '#/components/schemas/contentType'
          in: header
          required: true
          description: application/json
      responses:
        '200':
          $ref: '#/components/responses/achBankAccounts200'
        '400':
          $ref: '#/components/responses/error400'
      deprecated: false
      tags:
        - ACH Bank Accounts
      requestBody:
        $ref: '#/components/requestBodies/achBankAccounts'
    delete:
      summary: Delete an ACH Bank Account
      description: |-
        <a name="achbankaccountsrequest" title="ACH Bank Accounts Request"></a><a name="deleteachbankaccountrequest" title="Delete an ACH Bank Account"></a>

        This is how you delete an ACH bank account.
      operationId: delete-ACH-bank-account
      parameters:
        - name: profile_id
          in: path
          description: This is the profile ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: a7b218e7-290a-4434-aea2-a1f985fc26c0
        - name: bank_account_id
          in: path
          description: This is the bank account ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: 6a275b7c-6f11-4ed1-ae77-21071724574a
      responses:
        '200':
          description: ''
          headers: {}
          content: {}
      deprecated: false
      tags:
        - ACH Bank Accounts
  '/v1/profiles/{profile_id}/bacsbankaccounts':
    post:
      summary: Create a BACS Bank Account
      description: |-
        <a name="bacsbankaccountsrequest" title="BACS Bank Accounts Request"></a><a name="createbacsbankaccountrequest" title="Create a BACS Bank Account"></a>

        This is how you submit a BACS bank account creation request.

        **Note:** The *paymentToken* returned in the response **cannot** be used for requests in the [Direct Debit API](https://developer.paysafe.com/en/direct-debit/api/#/reference/0/purchases). 
        In the case of BACS bank accounts, you must use the *paymentToken* returned in the response to the [BACS mandate creation request](https://developer.paysafe.com/en/vault/api/#/reference/0/mandates/create-a-bacs-mandate) for the mandate associated with this BACS bank account.
      operationId: create-BACS-bank-account
      parameters:
        - name: profile_id
          in: path
          description: This is the ID of the profile to which you are adding a BACS bank account.
          required: true
          style: simple
          schema:
            type: string
            example: a5f1889d-f1be-4bbf-941d-fd9b8d09d5b1
        - name: Content-Type
          schema:
            $ref: '#/components/schemas/contentType'
          in: header
          required: true
          description: application/json
      responses:
        '201':
          $ref: '#/components/responses/bacsBankAccounts200'
        '400':
          $ref: '#/components/responses/error400'
      deprecated: false
      tags:
        - BACS Bank Accounts
      requestBody:
        $ref: '#/components/requestBodies/bacsBankAccounts'
  '/v1/profiles/{profile_id}/bacsbankaccounts/{bank_account_id}':
    get:
      summary: Get BACS Bank Account
      description: |-
        <a name="bacsbankaccountsrequest" title="BACS Bank Accounts Request"></a><a name="getbacsbankaccountrequest" title="Look Up a BACS Bank Account"></a>

        This is how you look up a BACS bank account using the ID returned in the response to the original request.
      operationId: get-BACS-bank-account
      parameters:
        - name: profile_id
          in: path
          description: This is the profile ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: a7b218e7-290a-4434-aea2-a1f985fc26c0
        - name: bank_account_id
          in: path
          description: This is the bank account ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: 6a275b7c-6f11-4ed1-ae77-21071724574a
      responses:
        '200':
          $ref: '#/components/responses/bacsBankAccounts200'
      deprecated: false
      tags:
        - BACS Bank Accounts
    put:
      summary: Update a BACS Bank Account
      description: |-
        <a name="bacsbankaccountsrequest" title="BACS Bank Accounts Request"></a><a name="updatebacsbankaccountrequest" title="Update a BACS Bank Account"></a>

        This is how you update a BACS bank account.

        **Note:** <ul><li>Any attributes that cannot be null that are not included in the request will be unchanged.</li><li>Any attributes that can be null that are not included in the request will be set to null.</li><li> The *sortCode* and *accountNumber* elements can be updated only if the bank account does not have any associated mandates.</li><li>Any mandate associated with this bank account cannot be updated with this request.</li></ul>
      operationId: update-BACS-bank-account
      parameters:
        - name: profile_id
          in: path
          description: This is the profile ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: a7b218e7-290a-4434-aea2-a1f985fc26c0
        - name: bank_account_id
          in: path
          description: This is the bank account ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: 6a275b7c-6f11-4ed1-ae77-21071724574a
        - name: Content-Type
          schema:
            $ref: '#/components/schemas/contentType'
          in: header
          required: true
          description: application/json
      responses:
        '200':
          $ref: '#/components/responses/bacsBankAccounts200'
        '400':
          $ref: '#/components/responses/error400'
      deprecated: false
      tags:
        - BACS Bank Accounts
      requestBody:
        $ref: '#/components/requestBodies/bacsBankAccounts'
    delete:
      summary: Delete a BACS Bank Account
      description: |-
        <a name="bacsbankaccountsrequest" title="BACS Bank Accounts Request"></a><a name="deletebacsbankaccountrequest" title="Delete a BACS Bank Account"></a>

        This is how you delete a BACS bank account.
      operationId: delete-BACS-bank-account
      parameters:
        - name: profile_id
          in: path
          description: This is the profile ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: a7b218e7-290a-4434-aea2-a1f985fc26c0
        - name: bank_account_id
          in: path
          description: This is the bank account ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: 6a275b7c-6f11-4ed1-ae77-21071724574a
      responses:
        '200':
          description: ''
          headers: {}
          content: {}
      deprecated: false
      tags:
        - BACS Bank Accounts
  '/v1/profiles/{profile_id}/eftbankaccounts':
    post:
      summary: Create an EFT Bank Account
      description: |-
        <a name="eftbankaccountsrequest" title="EFT Bank Accounts Request"></a><a name="createeftbankaccountrequest" title="Create an EFT Bank Account"></a>

        This is how you submit an EFT bank account creation request. The *paymentToken* returned in the response can be used for payment requests in the [Direct Debit API](https://developer.paysafe.com/en/direct-debit/api/#/reference/0/purchases).

        You can also submit an EFT bank account creation request using an EFT single-use token. The paymentToken returned in the response can be used for payment requests in the Direct Debit API.
      operationId: create-EFT-bank-account
      parameters:
        - name: profile_id
          in: path
          description: This is the ID of the profile to which you are adding an EFT bank account.
          required: true
          style: simple
          schema:
            type: string
            example: a5f1889d-f1be-4bbf-941d-fd9b8d09d5b1
        - name: Content-Type
          schema:
            $ref: '#/components/schemas/contentType'
          in: header
          required: true
          description: application/json
      responses:
        '201':
          $ref: '#/components/responses/eftBankAccounts200'
        '400':
          $ref: '#/components/responses/error400'
      deprecated: false
      tags:
        - EFT Bank Accounts
      requestBody:
        $ref: '#/components/requestBodies/eftBankAccounts'
  '/v1/profiles/{profile_id}/eftbankaccounts/{bank_account_id}':
    get:
      summary: Get EFT Bank Account
      description: |-
        <a name="eftbankaccountsrequest" title="EFT Bank Accounts Request"></a><a name="geteftbankaccountrequest" title="Look Up an EFT Bank Account"></a>

        This is how you look up an EFT bank account using the ID returned in the response to the original request.
      operationId: get-EFT-bank-account
      parameters:
        - name: profile_id
          in: path
          description: This is the profile ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: a7b218e7-290a-4434-aea2-a1f985fc26c0
        - name: bank_account_id
          in: path
          description: This is the bank account ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: 6a275b7c-6f11-4ed1-ae77-21071724574a
      responses:
        '200':
          $ref: '#/components/responses/eftBankAccounts200'
      deprecated: false
      tags:
        - EFT Bank Accounts
    put:
      summary: Update an EFT Bank Account
      description: |-
        <a name="eftbankaccountsrequest" title="EFT Bank Accounts Request"></a><a name="updateeftbankaccountrequest" title="Update an EFT Bank Account"></a>

        This is how you update an EFT bank account.

        **Note:** You must provide all of the elements of the bank account when you are updating it, including the elements that are not changing. Elements not included will be set to null in the resulting bank account, with the exception of the *accountNumber* element.
      operationId: update-EFT-bank-account
      parameters:
        - name: profile_id
          in: path
          description: This is the profile ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: a7b218e7-290a-4434-aea2-a1f985fc26c0
        - name: bank_account_id
          in: path
          description: This is the bank account ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: 6a275b7c-6f11-4ed1-ae77-21071724574a
        - name: Content-Type
          schema:
            $ref: '#/components/schemas/contentType'
          in: header
          required: true
          description: application/json
      responses:
        '200':
          $ref: '#/components/responses/eftBankAccounts200'
        '400':
          $ref: '#/components/responses/error400'
      deprecated: false
      tags:
        - EFT Bank Accounts
      requestBody:
        $ref: '#/components/requestBodies/eftBankAccounts'
    delete:
      summary: Delete an EFT Bank Account
      description: |-
        <a name="eftbankaccountsrequest" title="EFT Bank Accounts Request"></a><a name="deleteeftbankaccountrequest" title="Delete an EFT Bank Account"></a>

        This is how you delete an EFT bank account.
      operationId: delete-EFT-bank-account
      parameters:
        - name: profile_id
          in: path
          description: This is the profile ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: a7b218e7-290a-4434-aea2-a1f985fc26c0
        - name: bank_account_id
          in: path
          description: This is the bank account ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: 6a275b7c-6f11-4ed1-ae77-21071724574a
      responses:
        '200':
          description: ''
          headers: {}
          content: {}
      deprecated: false
      tags:
        - EFT Bank Accounts
  '/v1/profiles/{profile_id}/sepabankaccounts':
    post:
      summary: Create a SEPA Bank Account
      description: |-
        <a name="sepabankaccountsrequest" title="SEPA Bank Accounts Request"></a><a name="createsepabankaccountrequest" title="Create a SEPA Bank Account"></a>

        This is how you submit a SEPA bank account creation request.

        **Note:** The *paymentToken* returned in the response **cannot** be used for requests in the [Direct Debit API](https://developer.paysafe.com/en/direct-debit/api/#/reference/0/purchases). 
        In the case of SEPA bank accounts, you must use the *paymentToken* returned in the response to the [SEPA mandate creation request](https://developer.paysafe.com/en/vault/api/#/reference/0/mandates/create-a-sepa-mandate) for the mandate associated with this SEPA bank account.
      operationId: createa-SEPA-bank-account
      parameters:
        - name: profile_id
          in: path
          description: This is the ID of the profile to which you are adding a SEPA bank account.
          required: true
          style: simple
          schema:
            type: string
            example: a5f1889d-f1be-4bbf-941d-fd9b8d09d5b1
        - name: Content-Type
          schema:
            $ref: '#/components/schemas/contentType'
          in: header
          required: true
          description: application/json
      responses:
        '200':
          $ref: '#/components/responses/sepaBankAccounts200'
        '400':
          $ref: '#/components/responses/error400'
      deprecated: false
      tags:
        - SEPA Bank Accounts
      requestBody:
        $ref: '#/components/requestBodies/sepaBankAccounts'
  '/v1/profiles/{profile_id}/sepabankaccounts/{bank_account_id}':
    get:
      summary: Get SEPA Bank Account
      description: |-
        <a name="sepabankaccountsrequest" title="SEPA Bank Accounts Request"></a><a name="getsepabankaccountrequest" title="Look Up a SEPA Bank Account"></a>

        This is how you look up a SEPA bank account using the ID returned in the response to the original request.
      operationId: get-SEPA-bank-account
      parameters:
        - name: profile_id
          in: path
          description: This is the profile ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: a7b218e7-290a-4434-aea2-a1f985fc26c0
        - name: bank_account_id
          in: path
          description: This is the bank account ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: 6a275b7c-6f11-4ed1-ae77-21071724574a
      responses:
        '200':
          $ref: '#/components/responses/sepaBankAccounts200'
      deprecated: false
      tags:
        - SEPA Bank Accounts
    put:
      summary: Update a SEPA Bank Account
      description: |-
        <a name="sepabankaccountsrequest" title="SEPA Bank Accounts Request"></a><a name="updatesepabankaccountrequest" title="Update a SEPA Bank Account"></a>

        This is how you update a SEPA bank account.

        **Note:** <ul><li>Any attributes that cannot be null that are not included in the request will be unchanged.</li><li>Any attributes that can be null that are not included in the request will be set to null.</li><li> The *iban* and *bic* elements can be updated only if the bank account does not have any associated mandates.</li><li>Any mandate associated with this bank account cannot be updated with this request.</li></ul>
      operationId: update-SEPA-bank-account
      parameters:
        - name: profile_id
          in: path
          description: This is the profile ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: a7b218e7-290a-4434-aea2-a1f985fc26c0
        - name: bank_account_id
          in: path
          description: This is the bank account ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: 6a275b7c-6f11-4ed1-ae77-21071724574a
        - name: Content-Type
          schema:
            $ref: '#/components/schemas/contentType'
          in: header
          required: true
          description: application/json
      responses:
        '200':
          $ref: '#/components/responses/sepaBankAccounts200'
        '400':
          $ref: '#/components/responses/error400'
      deprecated: false
      tags:
        - SEPA Bank Accounts
      requestBody:
        $ref: '#/components/requestBodies/sepaBankAccountsUpdate'
    delete:
      summary: Delete a SEPA Bank Account
      description: |-
        <a name="sepabankaccountsrequest" title="SEPA Bank Accounts Request"></a><a name="deletesepabankaccountrequest" title="Delete a SEPA Bank Account"></a>

        This is how you delete a SEPA bank account.
      operationId: delete-SEPA-bank-account
      parameters:
        - name: profile_id
          in: path
          description: This is the profile ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: a7b218e7-290a-4434-aea2-a1f985fc26c0
        - name: bank_account_id
          in: path
          description: This is the bank account ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: 6a275b7c-6f11-4ed1-ae77-21071724574a
      responses:
        '200':
          description: ''
          headers: {}
          content: {}
      deprecated: false
      tags:
        - SEPA Bank Accounts
  '/v1/profiles/{profile_id}/bacsbankaccounts/{bank_account_id}/mandates':
    post:
      summary: Create a BACS Mandate
      description: |-
        <a name="mandatesrequest" title="Mandates Request"></a><a name="createbacsmandaterequest" title="Create a BACS Mandate"></a>

        This is how you submit a BACS mandate creation request.

        **Note:** The *paymentToken* returned in the response here is used for BACS requests in the [Direct Debit API](https://developer.paysafe.com/en/direct-debit/api/#/reference/0/purchases), and **not** the *paymentToken* returned in the response to the [BACS bank account creation request](https://developer.paysafe.com/en/vault/api/#/reference/0/bacs-bank-accounts/create-a-bacs-bank-account).

        By default, the BACS mandate is created with the status of PENDING.
      operationId: create-BACS-mandate
      parameters:
        - name: profile_id
          in: path
          description: This is the ID of the profile to which the BACS bank account belongs.
          required: true
          style: simple
          schema:
            type: string
            example: a5f1889d-f1be-4bbf-941d-fd9b8d09d5b1
        - name: bank_account_id
          in: path
          description: This is the ID of the BACS bank account to which you are adding the mandate.
          required: true
          style: simple
          schema:
            type: string
            example: 6a275b7c-6f11-4ed1-ae77-21071724574a
        - name: Content-Type
          schema:
            $ref: '#/components/schemas/contentType'
          in: header
          required: true
          description: application/json
      responses:
        '200':
          $ref: '#/components/responses/mandates200'
        '400':
          $ref: '#/components/responses/error400'
      deprecated: false
      tags:
        - Mandates
      requestBody:
        $ref: '#/components/requestBodies/mandates'
  '/v1/profiles/{profile_id}/sepabankaccounts/{bank_account_id}/mandates':
    post:
      summary: Create a SEPA Mandate
      description: |-
        <a name="mandatesrequest" title="Mandates Request"></a><a name="createsepamandaterequest" title="Create a SEPA Mandate"></a>

        This is how you submit a SEPA mandate creation request.

        **Note:** The *paymentToken* returned in the response here is used for SEPA requests in the [Direct Debit API](https://developer.paysafe.com/en/direct-debit/api/#/reference/0/purchases), and **not** the *paymentToken* returned in the response to the [SEPA bank account creation request](https://developer.paysafe.com/en/vault/api/#/reference/0/sepa-bank-accounts/create-a-sepa-bank-account).

        By default, the SEPA mandate is created with the status of ACTIVE.
      operationId: create-SEPA-mandate
      parameters:
        - name: profile_id
          in: path
          description: This is the ID of the profile to which the SEPA bank account belongs.
          required: true
          style: simple
          schema:
            type: string
            example: a5f1889d-f1be-4bbf-941d-fd9b8d09d5b1
        - name: bank_account_id
          in: path
          description: This is the ID of the SEPA bank account to which you are adding the mandate.
          required: true
          style: simple
          schema:
            type: string
            example: 6a275b7c-6f11-4ed1-ae77-21071724574a
        - name: Content-Type
          schema:
            $ref: '#/components/schemas/contentType'
          in: header
          required: true
          description: application/json
      responses:
        '201':
          $ref: '#/components/responses/mandates200'
        '400':
          $ref: '#/components/responses/error400'
      deprecated: false
      tags:
        - Mandates
      requestBody:
        $ref: '#/components/requestBodies/mandates'
  '/v1/profiles/{profile_id}/mandates/{mandate_id}':
    get:
      summary: Get Mandate
      description: |-
        <a name="mandatesrequest" title="Mandates Request"></a><a name="getmandaterequest" title="Look Up a Mandate"></a>

        This is how you look up a mandate using the ID returned in the response to the original request.
      operationId: get-mandate
      parameters:
        - name: profile_id
          in: path
          description: This is the profile ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: a7b218e7-290a-4434-aea2-a1f985fc26c0
        - name: mandate_id
          in: path
          description: This is the mandate ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: e250fdeb-dceb-4953-9268-8305d06b9292
      responses:
        '200':
          $ref: '#/components/responses/mandates200'
      deprecated: false
      tags:
        - Mandates
    put:
      summary: Update a Mandate
      description: |-
        <a name="mandatesrequest" title="Mandates Request"></a><a name="updatemandaterequest" title="Update a Mandate"></a>

        This is how you update a mandate.

        **Note:** Only the *status* element can be updated.  Any other elements provided will be ignored. </br> The only valid status for a mandate update is CANCELLED.
      operationId: update-mandate
      parameters:
        - name: profile_id
          in: path
          description: This is the profile ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: a7b218e7-290a-4434-aea2-a1f985fc26c0
        - name: mandate_id
          in: path
          description: This is the mandate ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: e250fdeb-dceb-4953-9268-8305d06b9292
        - name: Content-Type
          schema:
            $ref: '#/components/schemas/contentType'
          in: header
          required: true
          description: application/json
      responses:
        '200':
          $ref: '#/components/responses/mandates200'
        '400':
          $ref: '#/components/responses/error400'
      deprecated: false
      tags:
        - Mandates
      requestBody:
        $ref: '#/components/requestBodies/mandatesUpdate'
    delete:
      summary: Delete a Mandate
      description: |-
        <a name="mandatesrequest" title="Mandates Request"></a><a name="deletemandaterequest" title="Delete a Mandate"></a>

        This is how you delete a mandate.
      operationId: deletea-mandate
      parameters:
        - name: profile_id
          in: path
          description: This is the profile ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: a7b218e7-290a-4434-aea2-a1f985fc26c0
        - name: mandate_id
          in: path
          description: This is the mandate ID returned in the response.
          required: true
          style: simple
          schema:
            type: string
            example: e250fdeb-dceb-4953-9268-8305d06b9292
      responses:
        '200':
          description: ''
          headers: {}
          content: {}
      deprecated: false
      tags:
        - Mandates
components:
  schemas:
    accountType:
      title: accountType
      enum:
        - CHECKING
        - LOAN
        - SAVINGS
      type: string
      description: This is the bank account type.
      example: CHECKING
      x-stoplight:
        id: c578d2b7c1b58
      x-internal: true
    achBankAccount:
      type: object
      x-internal: true
      x-stoplight:
        id: 2e3c35adc3846
      properties:
        nickName:
          type: string
          description: This is an alias for this bank account.
          example: John's Account
        accountHolderName:
          type: string
          description: This is the name of the customer or company that owns the bank account.
          example: Argon Corp.
        routingNumber:
          type: string
          description: 'For USD accounts, this is the 9-digit routing number of the customer’s bank.'
          example: '123456789'
        billingAddressId:
          type: string
          description: 'This is the Address ID returned in response to the request to create an address, which will be associated with this bank account.'
          example: 60022f38-fd17-4731-909c-923930d0d5d4
        accountType:
          $ref: '#/components/schemas/accountType'
        merchantRefNum:
          type: string
          description: This is the merchant reference number created by the merchant and submitted as part of the request. This value is only stored by the Paysafe system and has no bearing on the request.
          example: ACH888
        bankName:
          type: string
          description: The name of the bank
          example: Achtest Bank
      title: achBankAccountRoot
      description: ''
    achBankAccountResponse:
      allOf:
        - type: object
          properties:
            id:
              type: string
              description: This is the ID returned in the response. In NETBANX this is called the Consumer ID.
              example: a02e52c7-c991-4418-966a-b62989cb0eae
            status:
              $ref: '#/components/schemas/bankAccountStatus'
            lastDigits:
              type: string
              description: This is the last two digits of the bank account number.
              example: '01'
            paymentToken:
              type: string
              description: This is a token that represents the bank account and is returned in the response to the bank account creation request. It can be used in the place of bank account information in Direct Debit transactions.
              example: CNjEzMTM4NDg1
        - $ref: '#/components/schemas/achBankAccount'
      type: object
      title: achBankAccount
      description: 'The details for the [ACH Bank Account](/schemas/achBankAccountResponse)'
    achBankAccountSUT:
      title: achBankAccountSUT
      type: object
      description: ''
      x-stoplight:
        id: 31c8071751392
      x-internal: true
      properties:
        accountNumber:
          type: string
          description: This is the bank account number.
          example: '50557600'
        accountHolderName:
          type: string
          description: This is the name of the customer or company that owns the bank account.
          example: R. Dodson
        routingNumber:
          type: string
          description: 'For USD accounts, this is the 9-digit routing number of the bank.'
          example: '123456789'
        accountType:
          $ref: '#/components/schemas/accountType'
      required:
        - accountNumber
        - accountHolderName
        - routingNumber
        - accountType
    achSingleUseTokenResponse:
      title: achSingleUseToken
      type: object
      allOf:
        - $ref: '#/components/schemas/ddSingleUseToken'
        - type: object
          properties:
            achBankAccount:
              $ref: '#/components/schemas/achBankAccountSUT'
      description: 'This is the customer''s [ACH bank account information](/schemas/achSingleUseTokenResponse) used for SUT'
    address:
      allOf:
        - type: object
          properties:
            id:
              type: string
              description: This is the ID returned in the response. In NETBANX this is called the Consumer ID.
              example: a02e52c7-c991-4418-966a-b62989cb0eae
              readOnly: true
            status:
              $ref: '#/components/schemas/addressStatus'
        - $ref: '#/components/schemas/addressRoot'
      title: address
      x-internal: false
    addressRoot:
      allOf:
        - properties:
            nickName:
              type: string
              description: 'This is an alias defined by the customer for this address (e.g., "home address").'
              example: Home
            street:
              type: string
              description: 'This is the first line of the customer''s street address. **Note:** This is required only when the address is to be used in association with a bank account.'
              example: 100 Queen
            street2:
              type: string
              description: 'This is the second line of the customer''s street address, if required.'
              example: Unit 201
            city:
              type: string
              description: 'This is the city where the address is located. **Note:** This is required only when the address is to be used in association with a bank account.'
              example: Toronto
            zip:
              type: string
              description: 'This is the zip, postal, or post code of the customer''s address.'
              example: M5H 2N2
            country:
              type: string
              description: This is the country where the address is located.
              example: CA
            state:
              type: string
              description: This is the state/province/region in which the customer lives.
              example: 'ON'
            recipientName:
              type: string
              description: 'This is the name of the recipient at this address, if it is different from the name in the profile.'
              example: Jane Smith
            phone:
              type: string
              description: This is the recipient's phone number.
              example: 647-788-3901
            defaultShippingAddressIndicator:
              type: boolean
              description: Flag to mark this address as the default shipping address.
              example: true
      type: object
      x-stoplight:
        id: 1c55dcd5dd426
      title: address
      x-internal: true
    addressStatus:
      title: addressStatus
      enum:
        - ACTIVE
      type: string
      description: This is the status of the address request.
      example: ACTIVE
      x-stoplight:
        id: e8a3e9dde4470
      x-internal: true
    applePayCard:
      title: applePayCard
      type: object
      description: These are the details of the virtual card.
      x-stoplight:
        id: 136239a132464
      x-internal: true
      properties:
        lastDigits:
          type: string
          description: This is the last digits of the real card number.
          example: '1234'
        cardBin:
          type: string
          example: '411111'
          minLength: 6
          maxLength: 6
          description: The first digits of the DPAN (Device Primary Account Number)
        cardExpiry:
          $ref: '#/components/schemas/tokenExpiry'
        cardCategory:
          $ref: '#/components/schemas/cardCategory'
        cardType:
          $ref: '#/components/schemas/cardType'
        holderName:
          type: string
          description: This is the name of the card holder.
          example: Joe Smith
        status:
          type: string
          description: The card's status.
          example: ACTIVE
        tokenType:
          type: string
          enum:
            - APPLE_PAY
          example: APPLE_PAY
        applePay:
          $ref: '#/components/schemas/applePayToken'
      required:
        - holderName
    applePayDecryptedPaymentTokenRequest:
      title: applePayDecryptedPaymentTokenRequest
      x-stoplight:
        id: oawwd8tba7hr3
      type: object
      description: 'This is the decrypted [payment data object](/schemas/applePayPaymentTokenRequest) generated from the iOS device for Apple Pay.'
      x-internal: true
      properties:
        decryptedData:
          type: object
          properties:
            applicationPrimaryAccountNumber:
              type: string
              description: The DPAN of the ApplePay card.
              example: '5076020000000006'
            applicationExpirationDate:
              type: string
              description: The expiration date.
              example: '231111'
            currencyCode:
              type: string
              description: The currency code.
              example: '840'
            transactionAmount:
              type: string
              description: The transaction amount.
              example: '1499'
            cardholderName:
              type: string
              description: The cardholder's name.
              example: John Doe
            deviceManufacturerIdentifier:
              type: string
              description: The device manufacturer identifier.
              example: OPAY
            paymentDataType:
              type: string
              description: The payment data type.
              example: 3DSecure
            paymentData:
              type: object
              properties:
                onlinePaymentCryptogram:
                  type: string
                  example: PAYMENT_CRYPTOGRAM
                  description: The cryptogram for this payment.
                eciIndicator:
                  type: string
                  example: '7'
                  description: The ECI indicator.
    applePayHeader:
      title: applePayHeader
      required:
        - transactionId
        - ephemeralPublicKey
        - publicKeyHash
      type: object
      properties:
        transactionId:
          type: string
          description: 'This is the transaction identifier, generated on the device.'
          example: b53e22ef6669ce7f50951cfd6821908f4e679f050f5a551a1b5f6202253136ae
        ephemeralPublicKey:
          type: string
          description: 'This is the ephemeral public key bytes (X.509 encoded key bytes, Base64 encoded string).'
          example: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEB39YqvWZG0NOYjbkL5D61Mxip6uw23Q7m8gWgxL41k4fs0BgJ+MFcIGYOH86kAGL/wjiftDahRkUnzOGls2hzw==
        publicKeyHash:
          type: string
          description: This is a hash of the x.509 encoded public key bytes of the merchant's certificate as a Base64 encoded string.
          example: O5gJ/P5sQ7ufMZQXA7ccLoOkJ13VNknbu+4K0TaCQXE=
      description: This is additional version-dependent information used to decrypt and verify the payment.
      x-stoplight:
        id: 9e80363ffa669
      x-internal: true
    applePayHeaderRoot:
      title: applePayHeader
      type: object
      properties:
        transactionId:
          type: string
          description: 'This is the transaction identifier, generated on the device.'
          example: b53e22ef6669ce7f50951cfd6821908f4e679f050f5a551a1b5f6202253136ae
        publicKeyHash:
          type: string
          description: This is a hash of the x.509 encoded public key bytes of the merchant's certificate as a Base64 encoded string.
          example: O5gJ/P5sQ7ufMZQXA7ccLoOkJ13VNknbu+4K0TaCQXE=
      description: This is additional version-dependent information headerobject used to decrypt and verify the payment.
      x-stoplight:
        id: 9f0bee9583880
      x-internal: true
    applePayPaymentTokenRequest:
      title: applePayPaymentToken
      type: object
      description: 'This is the [payment data object](/schemas/applePayPaymentTokenRequest) generated from the iOS device for Apple Pay.'
      x-internal: true
      properties:
        version:
          type: string
          description: This is version information about the payments token.
          example: EC_v1
        data:
          type: string
          description: This is the encrypted payment data.
          example: <passkit_encrypted_payment_data>
        signature:
          type: string
          description: This is the signature of the payment and header data.
          example: <signature_for_payment_and_header_data>
        header:
          $ref: '#/components/schemas/applePayHeader'
      required:
        - version
        - data
        - signature
      x-stoplight:
        id: a0539b27d9b21
    applePayPaymentToken:
      title: applePayPaymentToken
      type: object
      description: ''
      x-stoplight:
        id: 0d276ad6a4682
      x-internal: true
      x-examples:
        Example 1:
          billingContact:
            addressLines:
              - "Address\_1"
              - "Address\_2"
            administrativeArea: QC
            countryCode: CA
            locality: Montreal
            postalCode: "H3Z\_3C1"
          token:
            paymentData:
              header:
                transactionId: 9937eeceab3cc080bf3d46ce6d5c40c4929ac75fed034604f19bbdcde9e51ab9
                publicKeyHash: px6Dx1+gfWGrv8fX/chSz+7Qv9eXz3tCXWNyaGFFw/0=
              signature: MIAGCSqGSIb3DQEHAqCAMIACAQExDzANBglghkgBZQMEAgEFADCABgkqhkiG9w0BBwEAAKCAMIID5DCCA4ugAwIBAgIIWdihvKr0480wCgYIKoZIzj0EAwIwejEuMCwGA1UEAwwlQXBwbGUgQXBwbGljYXRpb24gSW50ZWdyYXRpb24gQ0EgLSBHMzEmMCQGA1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMB4XDTIxMDQyMDE5MzcwMFoXDTI2MDQxOTE5MzY1OVowYjEoMCYGA1UEAwwfZWNjLXNtcC1icm9rZXItc2lnbl9VQzQtU0FOREJPWDEUMBIGA1UECwwLaU9TIFN5c3RlbXMxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEgjD9q8Oc914gLFDZm0US5jfiqQHdbLPgsc1LUmeY+M9OvegaJajCHkwz3c6OKpbC9q+hkwNFxOh6RCbOlRsSlaOCAhEwggINMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAUI/JJxE+T5O8n5sT2KGw/orv9LkswRQYIKwYBBQUHAQEEOTA3MDUGCCsGAQUFBzABhilodHRwOi8vb2NzcC5hcHBsZS5jb20vb2NzcDA0LWFwcGxlYWljYTMwMjCCAR0GA1UdIASCARQwggEQMIIBDAYJKoZIhvdjZAUBMIH+MIHDBggrBgEFBQcCAjCBtgyBs1JlbGlhbmNlIG9uIHRoaXMgY2VydGlmaWNhdGUgYnkgYW55IHBhcnR5IGFzc3VtZXMgYWNjZXB0YW5jZSBvZiB0aGUgdGhlbiBhcHBsaWNhYmxlIHN0YW5kYXJkIHRlcm1zIGFuZCBjb25kaXRpb25zIG9mIHVzZSwgY2VydGlmaWNhdGUgcG9saWN5IGFuZCBjZXJ0aWZpY2F0aW9uIHByYWN0aWNlIHN0YXRlbWVudHMuMDYGCCsGAQUFBwIBFipodHRwOi8vd3d3LmFwcGxlLmNvbS9jZXJ0aWZpY2F0ZWF1dGhvcml0eS8wNAYDVR0fBC0wKzApoCegJYYjaHR0cDovL2NybC5hcHBsZS5jb20vYXBwbGVhaWNhMy5jcmwwHQYDVR0OBBYEFAIkMAua7u1GMZekplopnkJxghxFMA4GA1UdDwEB/wQEAwIHgDAPBgkqhkiG92NkBh0EAgUAMAoGCCqGSM49BAMCA0cAMEQCIHShsyTbQklDDdMnTFB0xICNmh9IDjqFxcE2JWYyX7yjAiBpNpBTq/ULWlL59gBNxYqtbFCn1ghoN5DgpzrQHkrZgTCCAu4wggJ1oAMCAQICCEltL786mNqXMAoGCCqGSM49BAMCMGcxGzAZBgNVBAMMEkFwcGxlIFJvb3QgQ0EgLSBHMzEmMCQGA1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMB4XDTE0MDUwNjIzNDYzMFoXDTI5MDUwNjIzNDYzMFowejEuMCwGA1UEAwwlQXBwbGUgQXBwbGljYXRpb24gSW50ZWdyYXRpb24gQ0EgLSBHMzEmMCQGA1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE8BcRhBnXZIXVGl4lgQd26ICi7957rk3gjfxLk+EzVtVmWzWuItCXdg0iTnu6CP12F86Iy3a7ZnC+yOgphP9URaOB9zCB9DBGBggrBgEFBQcBAQQ6MDgwNgYIKwYBBQUHMAGGKmh0dHA6Ly9vY3NwLmFwcGxlLmNvbS9vY3NwMDQtYXBwbGVyb290Y2FnMzAdBgNVHQ4EFgQUI/JJxE+T5O8n5sT2KGw/orv9LkswDwYDVR0TAQH/BAUwAwEB/zAfBgNVHSMEGDAWgBS7sN6hWDOImqSKmd6+veuv2sskqzA3BgNVHR8EMDAuMCygKqAohiZodHRwOi8vY3JsLmFwcGxlLmNvbS9hcHBsZXJvb3RjYWczLmNybDAOBgNVHQ8BAf8EBAMCAQYwEAYKKoZIhvdjZAYCDgQCBQAwCgYIKoZIzj0EAwIDZwAwZAIwOs9yg1EWmbGG+zXDVspiv/QX7dkPdU2ijr7xnIFeQreJ+Jj3m1mfmNVBDY+d6cL+AjAyLdVEIbCjBXdsXfM4O5Bn/Rd8LCFtlk/GcmmCEm9U+Hp9G5nLmwmJIWEGmQ8Jkh0AADGCAYswggGHAgEBMIGGMHoxLjAsBgNVBAMMJUFwcGxlIEFwcGxpY2F0aW9uIEludGVncmF0aW9uIENBIC0gRzMxJjAkBgNVBAsMHUFwcGxlIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUwIIWdihvKr0480wDQYJYIZIAWUDBAIBBQCggZUwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMjEwNjExMTMwMTU4WjAqBgkqhkiG9w0BCTQxHTAbMA0GCWCGSAFlAwQCAQUAoQoGCCqGSM49BAMCMC8GCSqGSIb3DQEJBDEiBCCdxF0Rr6xqIwdzf0yNF2LvomhfYdG5balMKOzPu6vRlDAKBggqhkjOPQQDAgRGMEQCICXX3g9B5/8ZAac+H4aFCqolM99IwgtepLxN1/5/FtRrAiA+QiNqimtk16yIE7RR8rK8KihpzK0NKRu8iAOLn9zlFAAAAAAAAA==
              version: EC_v1
            paymentMethod:
              displayName: "Mastercard\_5505"
              network: mastercard
              type: credit
      deprecated: true
      properties:
        billingContact:
          $ref: '#/components/schemas/billingContact'
        token:
          type: object
          properties:
            paymentData:
              type: object
              properties:
                version:
                  type: string
                  description: This is version information about the payments token.
                  example: EC_v1
                signature:
                  type: string
                  description: This is the signature of the payment and header data.
                  example: <signature_for_payment_and_header_data>
                header:
                  $ref: '#/components/schemas/applePayHeaderRoot'
            paymentMethod:
              $ref: '#/components/schemas/paymentMethod'
    applePaySingleUseTokenResponse:
      title: applePaySingleUseToken
      type: object
      properties:
        id:
          type: string
          description: This is the ID returned in the response. In NETBANX this is called the Consumer ID.
          example: a02e52c7-c991-4418-966a-b62989cb0eae
        paymentToken:
          type: string
          description: 'This is the single-use payment token to use in the authorization or purchase request in the [Card Payments API](https://developer.paysafe.com/en/cards/api/#/reference/0/authorizations/authorization).'
          example: ABC4AFQQBC5UR5H
        timeToLiveSeconds:
          type: number
          description: 'This is the period of time the single-use token is valid before expiration, in seconds.'
          example: 899
        transaction:
          $ref: '#/components/schemas/transaction'
        applePayPaymentToken:
          $ref: '#/components/schemas/applePayPaymentToken'
        card:
          $ref: '#/components/schemas/applePayCard'
      required:
        - paymentToken
        - timeToLiveSeconds
      description: 'This is the [payment data object](/schemas/applePaySingleUseTokenResponse) response on Apple Pay token lookup.'
    applePayToken:
      title: applePayToken
      x-stoplight:
        id: 194c4d9290218
      type: object
      description: When tokenType=APPLE_PAY. Apple Pay token information. Returned when the stored payment method is an Apple Pay token.
      x-examples:
        Example 1:
          bin: '411111'
          lastDigits: '2345'
          expiry:
            month: 12
            year: 2020
          status: ACTIVE
      properties:
        bin:
          type: string
          description: The first 6 digits of the Apple Pay's DPAN (Device Primary Account Number) - Bank Identification Number (BIN)
          minLength: 6
          maxLength: 6
          example: '411111'
        lastDigits:
          type: string
          description: This is the last digits of the Apple Pay's token.
          minLength: 4
          maxLength: 4
          example: '2345'
        expiry:
          $ref: '#/components/schemas/tokenExpiry'
        status:
          $ref: '#/components/schemas/tokenStatus'
      x-internal: true
    bacsBankAccount:
      type: object
      x-internal: true
      x-stoplight:
        id: 15c6698f65886
      properties:
        nickName:
          type: string
          description: This is an alias for this bank account.
          example: Sally's Barclays Account
        accountHolderName:
          type: string
          description: This is the name of the customer or company that owns the bank account.
          example: Sally Barnes
        sortCode:
          type: string
          description: This is the 6-digit sort code that identifies the financial institution and branch of the customer’s bank.
          example: '086081'
        billingAddressId:
          type: string
          description: 'This is the address ID returned in response to the request to create an address, which will be associated with this bank account.'
          example: 60022f38-fd17-4731-909c-923930d0d5d4
        merchantRefNum:
          type: string
          description: This is the merchant reference number created by the merchant and submitted as part of the request. This value is only stored by the Paysafe system and has no bearing on the request.
          example: BACS888
      title: bacsBankAccountRoot
    bacsBankAccountResponse:
      allOf:
        - type: object
          properties:
            id:
              type: string
              description: This is the ID returned in the response. In NETBANX this is called the Consumer ID.
              example: a02e52c7-c991-4418-966a-b62989cb0eae
            status:
              $ref: '#/components/schemas/bankAccountStatus'
            lastDigits:
              type: string
              description: This is the last two digits of the bank account number.
              example: '01'
            paymentToken:
              type: string
              description: This is a token that represents the bank account and is returned in the response to the bank account creation request. It **cannot** be used in the place of bank account information in Direct Debit transactions. The *paymentToken* from the BACS mandate creation request must be used.
              example: CNjEzMTM4NDg1
            mandates:
              type: array
              description: 'This is one or more [mandates](/schemas/mandate) associated with the bank account.'
              items:
                $ref: '#/components/schemas/mandate'
        - $ref: '#/components/schemas/bacsBankAccount'
      title: bacsBankAccount
      description: 'The details for the [BACS Bank Account](/schemas/bacsBankAccountResponse)'
    bankAccountStatus:
      title: bankAccountStatus
      enum:
        - ACTIVE
        - INVALID
        - INACTIVE
      type: string
      description: This is the status of the bank acount request.
      example: ACTIVE
      x-stoplight:
        id: 6c543016ed73a
      x-internal: true
    bankProfile:
      title: bankProfile
      type: object
      description: This is some optional information about the customer.
      x-stoplight:
        id: 3fb8446fd83d5
      properties:
        firstName:
          type: string
          description: This is the customer's first name.
          example: John
        lastName:
          type: string
          description: This is the customer's last name.
          example: Smith
        email:
          type: string
          description: This is the customer's email address.
          example: john.smith@email.com
        dateOfBirth:
          $ref: '#/components/schemas/dateOfBirth'
      x-internal: true
    billingAddress:
      title: billingAddress
      type: object
      description: 'This the card [billing address](/schemas/billingAddress). **Note:** This object is optional, but when it is included, the *country* and *zip* fields are then required.'
      x-stoplight:
        id: b715cd6e6d580
      x-internal: false
      properties:
        nickName:
          type: string
          description: 'This is an alias defined by the customer for this address (e.g., "home address").'
        street:
          type: string
          description: This is the first line of the customer's street address.
          example: 100 Queen Street
        street2:
          type: string
          description: This is the second line of the customer's street address.
          example: '201'
        city:
          type: string
          description: This is the city where the address is located.
          example: Toronto
        country:
          type: string
          description: This is the country where the address is located.
          example: CA
        state:
          type: string
          description: This is the state/province/region of the customer's address.
          example: 'ON'
        zip:
          type: string
          description: This is the country of the customer's address.
          example: M5H 2N2
      required:
        - country
        - zip
    billingContact:
      type: object
      description: The billing contact details for ApplePay.
      x-internal: true
      properties:
        addressLines:
          type: array
          description: The address.
          items:
            type: string
        administrativeArea:
          type: string
          description: The administrative area.
        country:
          type: string
          description: The country name.
          example: USA
        countryCode:
          type: string
          description: The country code.
          example: US
        givenName:
          type: string
          description: The name.
          example: John
        familyName:
          type: string
          description: Family name of the billing contact.
          example: Doe
        locality:
          type: string
          description: The locality.
          example: Mad
        phoneticGivenName:
          type: string
          description: Phoenetic spelling of the name.
        phoneticFamilyName:
          type: string
          description: Phoenetic spelling of the family name.
        postalCode:
          type: string
          description: The postal code of the billing contact.
        subAdministrativeArea:
          type: string
          description: The sub administrative area.
        subLocality:
          type: string
          description: The sub locality.
      title: billingContact
    card:
      type: object
      x-internal: true
      x-stoplight:
        id: 838630c32cb9c
      title: card
      properties:
        nickName:
          type: string
          description: This is an alias defined by the customer for this card.
          example: John Corporate Card
        merchantRefNum:
          type: string
          description: 'This is the merchant’s own card identification, which can be included in the request if desired.'
          example: MC123
        holderName:
          type: string
          description: This is the name of the card holder.
          example: John Smith
        billingAddressId:
          type: string
          description: This is the ID returned in response to the creation of an address that will be associated with the card.
          example: 794b2b05-1a3b-4544-a59c-8612d0a4711e
        defaultCardIndicator:
          type: boolean
          description: This indicates whether this is the default card for the profile.
          example: false
        cardExpiry:
          $ref: '#/components/schemas/cardExpiry'
        issuingCountry:
          type: string
          example: US
          description: This is the issuing country of the card.
    cardArt:
      title: cardArt
      x-stoplight:
        id: 9sd8g10u9x9ul
      type: object
      description: Contains display information for a card
      properties:
        cardArtUrl:
          type: string
          description: URI that digitally represents the physical look of a card. This card art image can be used for presentation purposes in user experiences and is provided by Issuers.
          example: 'https://s3.ca-central-1.amazonaws.com/422941870073-aws-ies-ca-central-1-test-paysafe-hosted/networktoken/dev/visa/22af01f2bdf445e497895d502dd1f1ae.pdf'
          format: uri
        isCobranded:
          type: boolean
          description: Indicates whether the card is co-branded.
        cobrandedName:
          type: string
          description: '[Conditional] If isCobranded= true Name of the company partnering with an Issuer for a co-branded card.'
          example: Company Name
          readOnly: true
      required:
        - cardArtUrl
      x-examples:
        Example 1:
          cardArtUrl: 'https://s3.ca-central-1.amazonaws.com/422941870073-aws-ies-ca-central-1-test-paysafe-hosted/networktoken/dev/visa/22af01f2bdf445e497895d502dd1f1ae.pdf'
          isCobranded: true
          cobrandedName: Company Name
      x-internal: true
    cardResponse:
      allOf:
        - $ref: '#/components/schemas/cardResponseBase'
        - $ref: '#/components/schemas/tokenSearchCardAdditionalDetails'
    cardResponseBase:
      allOf:
        - properties:
            id:
              type: string
              description: This is the ID returned in the response. In NETBANX this is called the Consumer ID.
              example: a02e52c7-c991-4418-966a-b62989cb0eae
              readOnly: true
            status:
              $ref: '#/components/schemas/cardStatus'
            nickName:
              type: string
              description: This is an alias defined by the customer for this card.
              example: John Corporate Card
            paymentToken:
              type: string
              description: This is a token that represents the card and is returned in the response to the card creation request.
              example: CNjEzMTM4NDg1
            billingAddressId:
              type: string
              description: This is the ID returned in response to the creation of an address that will be associated with the card.
              example: 794b2b05-1a3b-4544-a59c-8612d0a4711e
            defaultCardIndicator:
              type: boolean
              description: This indicates whether this is the default card for the profile.
              example: false
            cardCategory:
              $ref: '#/components/schemas/cardCategory'
        - $ref: '#/components/schemas/cardRoot'
      type: object
      x-internal: true
    cardCreateResponse:
      allOf:
        - $ref: '#/components/schemas/cardResponseBase'
        - oneOf:
            - type: object
              description: When the supplied card is an actual card.
            - $ref: '#/components/schemas/tokenSearchCardApplePay'
      x-internal: true
    cardRequest:
      allOf:
        - type: object
          properties:
            cardNum:
              type: string
              description: This is the card number.
              example: '4111111111111111'
            accountId:
              type: string
              description: This is a merchant account ID (FMA) that the merchant provides and will be linked to the card from this request.
              example: '1002370290'
        - $ref: '#/components/schemas/card'
      type: object
      title: Card
      description: 'This is the customer''s [cardRequest](/schemas/cardRequest). information.'
      x-stoplight:
        id: 83db4b54adeab
      x-internal: true
    cardSUTRequest:
      title: Card with single use token
      description: 'This is the customer''s [cardSUTRequest](/schemas/cardSUTRequest). information.'
      x-stoplight:
        id: c17febade4e86
      type: object
      x-examples:
        Example 1:
          singleUseToken: SCasdAwdasada
          accountId: '1002370290'
          defaultCardIndicator: true
      properties:
        singleUseToken:
          type: string
          description: This is a merchant account ID (FMA) that the merchant provides and will be linked to the card from this request.
          example: SCasdAwdasada
        accountId:
          type: string
          description: This is a merchant account ID (FMA) that the merchant provides and will be linked to the card from this request.
          example: '1002370290'
        defaultCardIndicator:
          type: boolean
      x-internal: true
    cardSUTUpdateRequest:
      title: Card with single use token
      description: 'This is the customer''s [cardSUTRequest](/schemas/cardSUTRequest). information.'
      type: object
      x-examples:
        Example 1:
          singleUseToken: SCasdAwdasada
          accountId: '1002370290'
          defaultCardIndicator: true
      x-internal: true
      x-stoplight:
        id: d8d6aeea2f412
      properties:
        singleUseToken:
          type: string
          description: This is a merchant account ID (FMA) that the merchant provides and will be linked to the card from this request.
          example: SCasdAwdasada
        defaultCardIndicator:
          type: boolean
    cardSingleUseTokenResponse:
      title: cardSingleUseToken
      type: object
      x-internal: false
      description: 'The details for the [Card SingleUse Token](/schemas/cardSingleUseTokenResponse).'
      properties:
        id:
          type: string
          description: This is the ID returned in the response. In NETBANX this is called the Consumer ID.
          example: a02e52c7-c991-4418-966a-b62989cb0eae
        paymentToken:
          type: string
          description: This is the single-use payment token returned in the response to the single-use token creation request.
          example: ABC4AFQQBC5UR5H
        timeToLiveSeconds:
          type: number
          description: 'This is the period of time the single-use token is valid before expiration, in seconds.'
          example: 899
        billingAddress:
          $ref: '#/components/schemas/billingAddress'
        card:
          $ref: '#/components/schemas/singleUseTokenCardResponse'
      required:
        - paymentToken
        - timeToLiveSeconds
    cardTokenSearchResponse:
      title: cardTokenSearch
      type: object
      x-internal: false
      description: 'The details for the [Card SingleUse Token](/schemas/cardTokenSearchResponse).'
      properties:
        id:
          type: string
          description: This is the ID of the card single-use token.
          example: a02e52c7-c991-4418-966a-b62989cb0eae
        paymentToken:
          type: string
          description: This is payment token returned in the response to the request.
          example: SAec6TpEoNVQpbSM
        timeToLiveSeconds:
          type: number
          description: 'This is the period of time the single-use token is valid before expiration, in seconds.'
          example: 899
        isFromMultiUseToken:
          type: boolean
          description: This indicates whether the token was created from multi use token.
          example: true
        card:
          $ref: '#/components/schemas/tokenSearchCard'
      required:
        - id
        - paymentToken
        - timeToLiveSeconds
        - isFromMultiUseToken
    cardCategory:
      title: cardCategory
      enum:
        - CREDIT
        - DEBIT
        - PREPAID
        - UNKNOWN
      type: string
      description: This denotes the card category.
      example: CREDIT
      x-stoplight:
        id: cd3388eb7f50a
      x-internal: true
    cardExpiry:
      title: cardExpiry
      required:
        - month
        - year
      type: object
      properties:
        month:
          type: number
          example: 12
        year:
          type: number
          example: 2020
      description: 'This is the card [expiry date](/schemas/cardExpiry).'
      x-stoplight:
        id: 14fd2a077eed1
      x-internal: false
    cardLookup:
      allOf:
        - $ref: '#/components/schemas/cardRoot'
        - anyOf:
            - type: object
              description: '[Conditional] No value if it is a real card or create response.'
            - $ref: '#/components/schemas/tokenSearchCardApplePay'
            - $ref: '#/components/schemas/tokenSearchCardNetworkToken'
    cardRoot:
      type: object
      x-internal: true
      x-stoplight:
        id: 41d616c8d0f57
      title: card
      properties:
        holderName:
          type: string
          description: This is the name of the card holder.
          example: John Smith
        cardBin:
          type: string
          description: 'These are the first 6 digits of the card Bank Identification Number (BIN), i.e. the first 6 digits of the card number.'
          example: '411111'
        lastDigits:
          type: string
          description: This is the last digits of the card number.
          example: '1111'
        cardType:
          enum:
            - VI
          type: string
          description: This is the type of card associated with the profile.
          example: VI
        cardExpiry:
          $ref: '#/components/schemas/cardExpiry'
        issuingCountry:
          type: string
          description: This is the issuing country of the card.
          example: US
        status:
          $ref: '#/components/schemas/cardStatus'
      required:
        - holderName
        - cardBin
        - lastDigits
        - cardType
        - cardExpiry
    singleUseTokenCardResponse:
      type: object
      x-internal: true
      x-stoplight:
        id: 41d616c8d0f57
      title: card
      properties:
        cardBin:
          type: string
          description: 'These are the first 6 digits of the card Bank Identification Number (BIN), i.e. the first 6 digits of the card number.'
          example: '411111'
        lastDigits:
          type: string
          description: This is the last digits of the card number.
          example: '1111'
        cardExpiry:
          $ref: '#/components/schemas/cardExpiry'
        holderName:
          type: string
          description: This is the name of the card holder.
          example: John Smith
        cardType:
          $ref: '#/components/schemas/cardType'
        cardCategory:
          $ref: '#/components/schemas/cardCategory'
        issuingCountry:
          type: string
          description: This is the issuing country of the card.
          example: US
      required:
        - cardBin
        - lastDigits
        - cardType
        - cardExpiry
    cardStatus:
      title: cardStatus
      enum:
        - ACTIVE
        - SUSPENDED
      type: string
      description: This is the status of the card.
      example: ACTIVE
      x-stoplight:
        id: cd812dbbd1f5b
      x-internal: true
      readOnly: true
    cardType:
      title: cardType
      enum:
        - AM
        - DC
        - DI
        - MC
        - VI
      type: string
      description: This is the card brand.
      example: VI
      x-stoplight:
        id: 34e762b4e1275
      x-internal: true
    contentType:
      title: contentType
      x-stoplight:
        id: gx3bvvzyw2r2z
      enum:
        - application/json
      type: string
      example: application/json
      x-internal: true
    dateOfBirth:
      additionalProperties: false
      title: dateOfBirth
      required:
        - year
        - month
        - day
      type: object
      properties:
        year:
          type: number
          description: This is the birth year.
          example: 1981
        month:
          type: number
          description: This is the birth month.
          example: 10
        day:
          type: number
          description: This is the birth day.
          example: 24
      description: 'This is the [dateOfBirth](/schemas/dateOfBirth)'
      x-internal: false
    ddSingleUseToken:
      allOf:
        - properties:
            id:
              type: string
              description: This is the ID returned in the response.
              example: a02e52c7-c991-4418-966a-b62989cb0eae
              readOnly: true
            paymentToken:
              type: string
              description: This is the single-use payment token returned in the response to the request.
              example: SAec6TpEoNVQpbSM
              readOnly: true
            timeToLiveSeconds:
              type: number
              description: 'This is the period of time the single-use token is valid before expiration, in seconds.'
              example: 899
              readOnly: true
            profile:
              $ref: '#/components/schemas/bankProfile'
            billingAddress:
              $ref: '#/components/schemas/billingAddress'
      type: object
      x-internal: true
      title: ddSingleUseToken
    eftBankAccount:
      type: object
      x-internal: true
      description: ''
      x-stoplight:
        id: 9de0c965aef3f
      properties:
        nickName:
          type: string
          description: This is an alias for this bank account.
          example: John's Account
        accountHolderName:
          type: string
          description: This is the name of the customer or company that owns the bank account.
          example: Argon Corp.
        transitNumber:
          type: string
          description: This is the 5-digit transit number of the customer's bank branch.
          example: '25039'
        institutionId:
          type: string
          description: This is the 3-digit institution ID of the customer’s bank branch.
          example: '001'
        billingAddressId:
          type: string
          description: 'This is the address ID returned in response to the request to create an address, which will be associated with this bank account.'
          example: 60022f38-fd17-4731-909c-923930d0d5d4
        merchantRefNum:
          type: string
          description: This is the merchant reference number created by the merchant and submitted as part of the request.
          example: EFT888
      title: eftBankAccountRoot
    eftBankAccountSUT:
      title: eftBankAccount
      required:
        - accountNumber
        - accountHolderName
        - transitNumber
        - institutionId
      type: object
      properties:
        accountNumber:
          type: string
          description: This is the bank account number.
          example: '5002205'
        accountHolderName:
          type: string
          description: This is the name of the customer or company that owns the bank account.
          example: R. Smith
        transitNumber:
          type: string
          description: This is the 5-digit transit number of the customer's bank branch.
          example: '20250'
        institutionId:
          type: string
          description: This is the 3-digit institution ID of the customer’s bank branch.
          example: '001'
      description: ''
      x-stoplight:
        id: 48c8dd39fe3e7
      x-internal: true
    eftBankAccountResponse:
      title: eftBankAccount
      type: object
      allOf:
        - type: object
          properties:
            id:
              type: string
              description: This is the ID returned in the response. In NETBANX this is called the Consumer ID.
              example: a02e52c7-c991-4418-966a-b62989cb0eae
            status:
              $ref: '#/components/schemas/bankAccountStatus'
            lastDigits:
              type: string
              description: This is the last two digits of the bank account number.
              example: '01'
            paymentToken:
              type: string
              description: This is a token that represents the bank account and is returned in the response to the bank account creation request. It can be used in the place of bank account information in Direct Debit transactions.
              example: CNjEzMTM4NDg1
        - $ref: '#/components/schemas/eftBankAccount'
      description: 'The details for the [EFT Bank Account](/schemas/eftBankAccountResponse)'
    eftSingleUseTokenResponse:
      title: eftSingleUseToken
      type: object
      allOf:
        - $ref: '#/components/schemas/ddSingleUseToken'
        - type: object
          properties:
            eftBankAccount:
              $ref: '#/components/schemas/eftBankAccountSUT'
      description: 'The details for the [EFT SingleUse Token](/schemas/eftSingleUseTokenResponse)'
    error:
      type: object
      properties:
        code:
          type: string
          description: This is the error code.
          example: '1000'
        message:
          type: string
          description: This is a description of the error.
          example: An internal error occurred.
        details:
          type: array
          items:
            type: string
          description: These are details of any parameter value errors.
        fieldErrors:
          type: array
          description: These are fields with invalid data.
          items:
            $ref: '#/components/schemas/fieldError'
        links:
          type: array
          description: 'This is one or more rel/href pairs, where rel is "errorinfo", and href is the Developer Center URL containing a description of the error.'
          items:
            $ref: '#/components/schemas/linkError'
      readOnly: true
      description: 'Information about the [error](/schemas/error).'
      title: error
    fieldError:
      x-internal: true
      type: object
      properties:
        field:
          type: string
          description: This is the field with invalid data.
        error:
          type: string
          description: This is the description of the error.
      title: fieldError
    gender:
      title: gender
      enum:
        - F
        - M
      type: string
      description: This is the customer’s gender.
      example: M
      x-stoplight:
        id: 22d4536614cee
      x-internal: true
    googlePayCard:
      type: object
      description: These are the details of the virtual card.
      x-stoplight:
        id: ec4b655365872
      x-internal: true
      properties:
        status:
          type: string
          example: ACTIVE
        cardBin:
          type: string
          example: '411111'
        lastDigits:
          type: string
          example: '8298'
        cardType:
          type: string
          example: VI
        cardCategory:
          type: string
          example: Credit
      x-examples: {}
      title: googlePayCard
    googlePayPaymentToken:
      title: googlePayPaymentToken
      type: object
      description: 'This is the [payment data object](/schemas/googlePayPaymentToken) generated from the Android device for Google Pay.'
      x-stoplight:
        id: 7f34195d1640c
      x-internal: false
      deprecated: true
      properties:
        ephemeralPublicKey:
          type: string
          example: BCTSvnX1fF6b64NPlKwJl1r1dAfF0vAWHoktOS4CwH1BocAjnBHfHvKyX2CSM7jf7Cv1b6YfrQMkY9+hgE0dzgY=
          description: 'This is the ephemeral public key bytes (X.509 encoded key bytes, Base64 encoded string).'
        tag:
          type: string
          example: 8EKZt7vGFjtvuukkWlc5U93h+PBxjB7YKJF/w32Wfk8=
        paymentMethod:
          type: string
          example: CARD_ON_FILE
          description: The payment method. Either TOKENIZED_CARD or CARD_ON_FILE.
        messageId:
          type: string
          example: AH2EjtdtxE5P5FVoHjoVhVJiaslejbWZePOtu2G2nyZYJpZVIWeNV_tJYodBbX9iuZWMCUe_aBOVim6sKd1u2-KUSia5C9WNqGw7tTVy1epkqjxDhMBCnxQ6C8WJcMJ9luBWWjOnrHzb
        messageExpiration:
          type: string
          example: '1506708174199'
          description: The message expiration.
        authMethod:
          type: string
      required:
        - ephemeralPublicKey
        - tag
    googlePayPaymentTokenRequest:
      title: googlePayPaymentToken
      type: object
      properties:
        googlePayPaymentToken:
          oneOf:
            - $ref: '#/components/schemas/googlePaySingleUseTokenRequestV2'
            - $ref: '#/components/schemas/googlePaySingleUseTokenRequestV1'
      x-stoplight:
        id: a85d7fa7789c7
      x-internal: true
    googlePaySingleUseTokenResponse:
      title: googlePaySingleUseToken
      type: object
      properties:
        id:
          type: string
          description: This is the ID returned in the response. In NETBANX this is called the Consumer ID.
          example: a02e52c7-c991-4418-966a-b62989cb0eae
        paymentToken:
          type: string
          description: 'This is the single-use payment token to use in the authorization or purchase request in the [Card Payments API](https://developer.paysafe.com/en/cards/api/#/reference/0/authorizations/authorization).'
          example: GTCJskXfjWqo34U
        timeToLiveSeconds:
          type: number
          description: 'This is the period of time the single-use token is valid before expiration, in seconds.'
          example: 899
        googlePayPaymentToken:
          $ref: '#/components/schemas/googlePayPaymentToken'
        card:
          $ref: '#/components/schemas/googlePayCard'
      required:
        - paymentToken
        - timeToLiveSeconds
    googlePaySingleUseTokenRequestV2:
      type: object
      x-examples:
        Example request:
          apiVersionMinor: 0
          apiVersion: 2
          paymentMethodData:
            description: Skrill •••• 4597
            tokenizationData:
              type: PAYMENT_GATEWAY
              token: '{"signature":"MEUCIQCOBaF2OiX+m3iw1tMd3TBkJ4bO9CiKhvSKG9elDDDlXwIgGJCfxutVjCvPrcuMtzEc21asAVJHmkdaLTevoIXuC70\u003d","protocolVersion":"ECv1","signedMessage":"{\"encryptedMessage\":\"bzGaySH3i0KWgXnkLWlR82pSuVW+ziiOD0FOZ3PNq+7bshtRFZeGJsM3/L2Gs+F0EPnbIM2TDXMYGaFP89g1h23bZ/jGlp1Nw+a3qYI3tmo7zn/bOd5bw8u3ahoWCXB6JWe4bBZUHnMjhmOaN1mufUdH3dmf5kc1E7qY3ajzmCmkZr3AwGk2NtD+DZodt50gqWUC3G5W10VZeWwdazUVvEi/PPHJ4ZVl1ONsSYioITmRQQE4CDuLTZU5uICvGVGi61YpWlYBlfHgxr5uK+klaco9949n3UJ54ul8PaOe0Rx46KPveHIM/mefHjjnPj3K3f8LOhM6LBqsGgt707vv39MuF92fFoAEkzQ035iX3mmNAVbCKna/50Y3fiv2vWYh7QyIEeu2tc26rPv0FNkV+0ewsn0NnZIteX/Hxr6JH14GHUEjbkxLJrfFnn4VVQTvQLtjeg\\u003d\\u003d\",\"ephemeralPublicKey\":\"BAPING9pvMpDRhD3Ups4HX+ePz3FlfRq5VKgLpvQC4ScVjwNPINQaHsWne0NjgvQREa5xMJ4KdPXuNkUNQufVLc\\u003d\",\"tag\":\"nDtdbdu/D3LZbP7kGTNXeECjMAF/T0aS/LdVmFt7Bs8\\u003d\"}"}'
            type: CARD
            info:
              cardNetwork: MASTERCARD
              cardDetails: '4597'
              billingAddress:
                phoneNumber: '+15143802700'
                address3: ''
                sortingCode: ''
                address2: ''
                countryCode: CA
                address1: 3500 Boulevard de Maisonneuve Westmount Montreal Canada
                postalCode: H3Z 3C1
                name: John Doe
                locality: Westmount
                administrativeArea: QC
          shippingOptionData:
            id: shipping-001
          shippingAddress:
            address3: ''
            sortingCode: ''
            address2: ''
            countryCode: US
            address1: 2600 Michelson Drive
            postalCode: '92612'
            name: John Doe
            locality: ALTADENA
            administrativeArea: CA
      x-internal: true
      description: ''
      properties:
        apiVersionMinor:
          type: number
          description: The minor API version.
          example: 0
        apiVersion:
          type: number
          description: The API version.
          example: 2
        paymentMethodData:
          type: object
          description: The payment method details.
          properties:
            description:
              type: string
              description: Payment method description.
              example: Skrill *** *4597
            tokenizationData:
              type: object
              description: The tokenization data for Google Pay.
              properties:
                type:
                  type: string
                  description: The tokenization type.
                  example: PAYMENT_GATEWAY
                token:
                  type: string
                  description: This is the payment data object generated from the Android device for Google Pay.
                  example: '{\"signature\":\"MEUCIQCOBaF2OiX+m3iw1tMd3TBkJ4bO9CiKhvSKG9elDDDlXwIgGJCfxutVjCvPrcuMtzEc21asAVJHmkdaLTevoIXuC70\\u003d\",\"protocolVersion\":\"ECv1\",\"signedMessage\":\"{\\\"encryptedMessage\\\":\\\"bzGaySH3i0KWgXnkLWlR82pSuVW+ziiOD0FOZ3PNq+7bshtRFZeGJsM3/L2Gs+F0EPnbIM2TDXMYGaFP89g1h23bZ/jGlp1Nw+a3qYI3tmo7zn/bOd5bw8u3ahoWCXB6JWe4bBZUHnMjhmOaN1mufUdH3dmf5kc1E7qY3ajzmCmkZr3AwGk2NtD+DZodt50gqWUC3G5W10VZeWwdazUVvEi/PPHJ4ZVl1ONsSYioITmRQQE4CDuLTZU5uICvGVGi61YpWlYBlfHgxr5uK+klaco9949n3UJ54ul8PaOe0Rx46KPveHIM/mefHjjnPj3K3f8LOhM6LBqsGgt707vv39MuF92fFoAEkzQ035iX3mmNAVbCKna/50Y3fiv2vWYh7QyIEeu2tc26rPv0FNkV+0ewsn0NnZIteX/Hxr6JH14GHUEjbkxLJrfFnn4VVQTvQLtjeg\\\\u003d\\\\u003d\\\",\\\"ephemeralPublicKey\\\":\\\"BAPING9pvMpDRhD3Ups4HX+ePz3FlfRq5VKgLpvQC4ScVjwNPINQaHsWne0NjgvQREa5xMJ4KdPXuNkUNQufVLc\\\\u003d\\\",\\\"tag\\\":\\\"nDtdbdu/D3LZbP7kGTNXeECjMAF/T0aS/LdVmFt7Bs8\\\\u003d\\\"}\"}'
              required:
                - token
            type:
              type: string
              description: The payment method type.
              example: CARD
            info:
              type: object
              description: The payment method info.
              properties:
                cardNetwork:
                  type: string
                  description: The card network.
                  example: MASTERCARD
                cardDetails:
                  type: string
                  description: The card details.
                  example: '4597'
                billingAddress:
                  type: object
                  description: The billing address details.
                  properties:
                    phoneNumber:
                      type: string
                      description: The phone number.
                      example: '+15143802700'
                    address1:
                      type: string
                      description: Address line 1.
                      example: 3500 Boulevard de Maisonneuve Westmount Montreal Canada
                    address2:
                      type: string
                      description: 'Address line 2 '
                    address3:
                      type: string
                      description: Address line 3.
                    sortingCode:
                      type: string
                      description: The sorting code.
                    countryCode:
                      type: string
                      description: The country code.
                      example: CA
                    postalCode:
                      type: string
                      description: The postal code.
                      example: H3Z 3C1
                    name:
                      type: string
                      description: The name.
                      example: John Doe
                    locality:
                      type: string
                      description: The locality.
                      example: Westmount
                    administrativeArea:
                      type: string
                      description: 'The '
                      example: CA
        shippingOptionData:
          type: object
          description: Shippirng option details.
          properties:
            id:
              type: string
        shippingAddress:
          type: object
          description: The shipping address details.
          properties:
            name:
              type: string
              description: The name of the address.
              example: John Doe
            address1:
              type: string
              description: Address Line 1.
              example: 2600 Michelson Drive
            address2:
              type: string
              description: Address Line 2.
            address3:
              type: string
              description: Address Line 3
            sortingCode:
              type: string
              description: The sorting code
            countryCode:
              type: string
              description: 'The country '
              example: US
            postalCode:
              type: string
              description: The postal code.
              example: '92612'
            locality:
              type: string
              description: The locality.
              example: ALTADENA
            administrativeArea:
              type: string
              description: The administrative area.
              example: QC
      x-stoplight:
        id: b05c1536f0d57
      title: googlePayPaymentTokenV2
    googlePaySingleUseTokenRequestV1:
      type: object
      x-examples:
        Example request:
          signature: string
          protocolVersion: ECv1
          signedMessage: '{\"encryptedMessage\":\"0lT8.....s03d\"}'
      x-internal: true
      description: ''
      x-stoplight:
        id: a92c750cd964b
      title: googlePayPaymentTokenV1
      deprecated: true
      properties:
        signature:
          type: string
          description: 'Verifies that the message came from Google. It''s base64-encoded, and created with ECDSA by the intermediate signing key.'
          example: signature
        protocolVersion:
          type: string
          example: ECv1
          enum:
            - ECv1
          description: 'Verifies that the message came from Google. It''s base64-encoded, and created with ECDSA by the intermediate signing key.'
        signedMessage:
          type: string
          example: '{\"encryptedMessage\":\"0lT8.....s03d\"}'
          description: 'A JSON object serialized as an HTML-safe string that contains the encryptedMessage, ephemeralPublicKey, and tag. It''s serialized to simplify the signature verification process.'
    googlePayToken:
      title: googlePayToken
      type: object
      description: When tokenType=GOOGLE_PAY. Google Pay token information. Returned when the stored payment method is an Google Pay token.
      x-stoplight:
        id: 7b70235cec26d
      x-examples:
        Example 1:
          bin: '411111'
          lastDigits: '2345'
          expiry:
            month: 12
            year: 2020
          status: ACTIVE
      properties:
        bin:
          type: string
          description: The first 6 digits of the Google Pay's DPAN (Device Primary Account Number) - Bank Identification Number (BIN)
          maxLength: 6
          minLength: 6
          example: '411111'
        lastDigits:
          type: string
          description: This is the last digits of the Google Pay's token.
          minLength: 4
          maxLength: 4
          example: '2345'
        expiry:
          $ref: '#/components/schemas/tokenExpiry'
        status:
          $ref: '#/components/schemas/tokenStatus'
      x-internal: true
    linkError:
      type: object
      properties:
        rel:
          type: string
          example: errorinfo
          description: This is errorinfo.
          readOnly: true
        href:
          type: string
          example: 'https://developer.paysafe.com/en/rest-api/cards/test-and-go-live/card-errors/#ErrorCode1000'
          description: The Developer Center URL containing a description of the error.
          readOnly: true
      readOnly: true
      x-internal: true
      title: linkError
    locale:
      title: locale
      enum:
        - en_US
        - fr_CA
        - en_GB
      type: string
      description: This indicates the language of the profile.
      example: en_US
      x-stoplight:
        id: 7d0e43b3c1640
      x-internal: true
    mandate:
      title: mandate
      type: object
      properties:
        id:
          type: string
          description: This is the mandate ID returned in the response.
          example: e250fdeb-dceb-4953-9268-8305d06b9292
        reference:
          type: string
          description: This is the identifier of the mandate in the banking system.
          example: ABCDEF0987
        paymentToken:
          type: string
          description: This is a token returned in the response to the mandate creation request.
          example: MUwqiUNjndxxiFs
        status:
          $ref: '#/components/schemas/mandateStatus'
        statusChangeDate:
          type: string
          description: This is the date that the status was last changed.
          example: '2016-12-14T20:41:32Z'
      x-internal: false
      description: 'This contains the [mandate](/schemas/mandate) details.'
    mandateReference:
      title: mandate
      required:
        - reference
      type: object
      properties:
        reference:
          type: string
          description: This is the identifier of the mandate in the banking system.
          example: ABCDEF0987
      x-stoplight:
        id: 3e43261d3fc67
      x-internal: true
    mandateStatus:
      title: mandateStatus
      enum:
        - ACTIVE
        - INITIAL
        - PENDING
        - DECLINED
        - BATCHED
        - CANCELLED
        - REJECTED
        - DISPUTED
        - INACTIVE
      type: string
      description: This is the status of the mandate.
      example: ACTIVE
      x-stoplight:
        id: a4d07a04cc9e5
      x-internal: true
    networkToken:
      title: networkToken
      type: object
      description: When tokenType=NETWORK_TOKEN. Network token information. Returned when the stored payment method is an Network token.
      x-stoplight:
        id: c2216c0e4b96f
      x-examples:
        Example 1:
          bin: '4111111'
          lastDigits: '2346'
          expiry:
            month: 12
            year: 2020
          status: ACTIVE
          cardArt:
            cardArtUrl: 'https://s3.ca-central-1.amazonaws.com/422941870073-aws-ies-ca-central-1-test-paysafe-hosted/networktoken/dev/visa/22af01f2bdf445e497895d502dd1f1ae.pdf'
            isCobranded: true
            cobrandedName: Company Name
      properties:
        bin:
          type: string
          description: The first 6 digits of the Network token's DPAN (Device Primary Account Number) - Bank Identification Number (BIN)
          example: '411111'
          maxLength: 6
          minLength: 6
        lastDigits:
          type: string
          description: This is the last digits of the Network token's token.
          minLength: 4
          maxLength: 4
          example: '2346'
        expiry:
          $ref: '#/components/schemas/tokenExpiry'
        status:
          $ref: '#/components/schemas/tokenStatus'
        cardArt:
          $ref: '#/components/schemas/cardArt'
      x-internal: true
    paymentMethod:
      title: paymentMethod
      x-internal: true
      type: object
      description: The payment method details
      properties:
        displayName:
          type: string
          description: The display name of the payment method.
          example: Visa Debit 0224
        network:
          type: string
          description: The payment method network.
          example: visa
        type:
          type: string
          description: The payment method type
          example: debit
    profile:
      title: profile
      type: object
      x-internal: true
      properties:
        merchantCustomerId:
          type: string
          description: This is a customer ID that the merchant provides with the request for their own internal customer identification. This value must be unique for each customer belonging to a merchant. In NETBANX this is known as the Ref ID.
          example: mycustomer1
        locale:
          $ref: '#/components/schemas/locale'
        firstName:
          type: string
          description: This is the customer's first name.
          example: John
        middleName:
          type: string
          description: This is the customer's middle name.
          example: James
        lastName:
          type: string
          description: This is the customer's last name.
          example: Smith
        email:
          type: string
          description: This is the customer's email address.
          example: john.smith@email.com
        phone:
          type: string
          description: This is the customer's phone number.
          example: 777-444-8888
        ip:
          type: string
          description: This is the customer’s IP address.
          example: 192.0.126.111
        gender:
          $ref: '#/components/schemas/gender'
        nationality:
          type: string
          description: This is the customer’s nationality.
          example: Canadian
        cellPhone:
          type: string
          description: This is the customer’s cell phone number.
          example: 777-555-8888
        dateOfBirth:
          $ref: '#/components/schemas/dateOfBirth'
        recipient:
          $ref: '#/components/schemas/recipient'
      x-stoplight:
        id: 49c19f4a5b207
    profileAchBank:
      type: object
      x-examples:
        Example 1:
          accountHolderName: Argon Corp.
          accountNumber: '511221'
          routingNumber: '123456789'
          accountType: CHECKING
          billingAddress:
            nickName: Home
            street: 100 Queen
            street2: Unit 201
            city: Toronto
            zip: M5H 2N2
            country: CA
            state: 'ON'
      additionalProperties: false
      properties:
        accountHolderName:
          type: string
          description: This is the name of the customer or company that owns the bank account.
          example: Argon Corp.
        accountNumber:
          type: string
          description: This is the bank account number.
        routingNumber:
          type: string
          example: '123456789'
          description: 'For USD accounts, this is the 9-digit routing number of the customer’s bank.'
        accountType:
          $ref: '#/components/schemas/accountType'
        billingAddress:
          type: object
          description: 'This is the customer''s billing address. Note: This object is optional, but when it is included, the street, city, country, and zip fields are then required.'
          properties:
            nickName:
              type: string
              example: Home
              description: 'This is an alias defined by the customer for this address (e.g., "home address").'
            street:
              type: string
              description: 'This is the first line of the customer''s street address. Note: This is required only when the address is to be used in association with a bank account.'
              example: 100 Queen
            street2:
              type: string
              description: 'This is the second line of the customer''s street address, if required.'
              example: Unit 201
            city:
              type: string
              example: Toronto
              description: 'This is the city where the address is located. Note: This is required only when the address is to be used in association with a bank account.'
            zip:
              type: string
              description: 'This is the zip, postal, or post code of the customer''s address.'
              example: M5H 2N2
            country:
              type: string
              description: This is the country where the address is located.
              example: CA
            state:
              type: string
              description: |
                This is the state/province/region in which the customer lives.
              example: 'ON'
      x-internal: true
      description: This contains the ACH Bank details.
      title: achBankAccountProfile
    profileAchBankToken:
      type: object
      x-examples:
        Example 1:
          singleUseToken: D4VBx3EzOqlAi6k
      additionalProperties: false
      x-stoplight:
        id: 6f56133626550
      properties:
        singleUseToken:
          type: string
          description: This is the single-use payment token representing the bank account.
          example: D4VBx3EzOqlAi6k
      x-internal: true
      description: A token referring to the ACH Bank details.
      title: achBankAccountProfileToken
    profileCard:
      additionalProperties: false
      type: object
      x-examples:
        Example 1:
          cardNum: '4111111111111111'
          accountId: '1002370290'
          cardExpiry:
            month: 12
            year: 2020
          nickName: John Corporate Card
          merchantRefNum: MC123
          holderName: John Smith
          billingAddress:
            nickName: Home
            street: 100 Queen
            street2: Unit 201
            city: Toronto
            zip: M5H 2N2
            country: CA
            state: 'ON'
      description: |
        This is the customer's card information.
      x-internal: true
      properties:
        cardNum:
          type: string
          description: This is the card number.
          example: '4111111111111111'
        accountId:
          type: string
          description: This is a merchant account ID (FMA) that the merchant provides and will be linked to the card from this request.
          example: '1002370290'
        nickName:
          type: string
          description: This is an alias defined by the customer for this card.
          example: John Corporate Card
        merchantRefNum:
          type: string
          description: 'This is the merchant’s own card identification, which can be included in the request if desired.'
          example: MC123
        holderName:
          type: string
          description: This is the name of the card holder.
          example: John Smith
        defaultCardIndicator:
          type: boolean
          description: This indicates whether this is the default card for the profile.
          example: false
        cardExpiry:
          type: object
          description: This is the card expiry date.
          properties:
            month:
              type: number
              description: The card expiration month.
              example: 12
            year:
              type: number
              description: The card expiration year.
              example: 2023
          required:
            - month
            - year
        billingAddress:
          type: object
          description: 'This is the customer''s billing address. Note: This object is optional, but when it is included, the street, city, country, and zip fields are then required.'
          properties:
            nickName:
              type: string
              example: Home
              description: 'This is an alias defined by the customer for this address (e.g., "home address").'
            street:
              type: string
              description: 'This is the first line of the customer''s street address. Note: This is required only when the address is to be used in association with a bank account.'
              example: 100 Queen
            street2:
              type: string
              description: 'This is the second line of the customer''s street address, if required.'
              example: Unit 201
            city:
              type: string
              example: Toronto
              description: 'This is the city where the address is located. Note: This is required only when the address is to be used in association with a bank account.'
            zip:
              type: string
              description: 'This is the zip, postal, or post code of the customer''s address.'
              example: M5H 2N2
            country:
              type: string
              description: This is the country where the address is located.
              example: CA
            state:
              type: string
              description: |
                This is the state/province/region in which the customer lives.
              example: 'ON'
          required:
            - street
            - city
            - zip
            - country
      title: profileCard
    profileCardToken:
      additionalProperties: false
      type: object
      x-examples:
        Example 1:
          singleUseToken: abcdefg23d32d2
          accountId: '1004370290'
      x-internal: true
      description: |
        This is the customer's card information.
      properties:
        singleUseToken:
          type: string
          description: |
            This is the single-use token returned in response to a single-use token creation request.
          example: abcdefg23d32d2
        accountId:
          type: string
          description: This is a merchant account ID (FMA) that the merchant provides and will be linked to the card from this request.
          example: '1004370290'
      required:
        - singleUseToken
      title: profileCardToken
    profileEftBank:
      type: object
      x-examples:
        Example 1:
          nickName: John's Account
          accountHolderName: Argon Corp.
          accountNumber: '511221'
          transitNumber: '25039'
          institutionId: '001'
          billingAddress:
            nickName: Home
            street: 100 Queen
            street2: Unit 201
            city: Toronto
            zip: M5H 2N2
            country: CA
            state: 'ON'
      additionalProperties: false
      properties:
        nickName:
          type: string
          description: This is an alias for this bank account.
          example: John's Account
        accountHolderName:
          type: string
          description: This is the name of the customer or company that owns the bank account.
          example: Argon Corp.
        accountNumber:
          type: string
          description: This is the bank account number.
          example: '511221'
        transitNumber:
          type: string
          description: This is the 5-digit transit number of the customer's bank branch.
          example: '25039'
        institutionId:
          type: string
          description: This is the 3-digit institution ID of the customer’s bank branch.
          example: '001'
        billingAddress:
          type: object
          description: 'This is the customer''s billing address. Note: This object is optional, but when it is included, the street, city, country, and zip fields are then required.'
          properties:
            nickName:
              type: string
              example: Home
              description: 'This is an alias defined by the customer for this address (e.g., "home address").'
            street:
              type: string
              description: 'This is the first line of the customer''s street address. Note: This is required only when the address is to be used in association with a bank account.'
              example: 100 Queen
            street2:
              type: string
              description: 'This is the second line of the customer''s street address, if required.'
              example: Unit 201
            city:
              type: string
              example: Toronto
              description: 'This is the city where the address is located. Note: This is required only when the address is to be used in association with a bank account.'
            zip:
              type: string
              description: 'This is the zip, postal, or post code of the customer''s address.'
              example: M5H 2N2
            country:
              type: string
              description: This is the country where the address is located.
              example: CA
            state:
              type: string
              description: |
                This is the state/province/region in which the customer lives.
              example: 'ON'
      x-internal: true
      description: This contains the EFT Bank details.
      title: eftBankAccountProfile
    profileEftBankToken:
      type: object
      x-examples:
        Example 1:
          singleUseToken: D4VBx3EzOqlAi6k
      additionalProperties: false
      x-stoplight:
        id: ef93dbb098f2c
      properties:
        singleUseToken:
          type: string
          example: D4VBx3EzOqlAi6k
          description: This is the single-use payment token representing the bank account.
      x-internal: true
      description: A token referring to the EFT Bank details.
      title: eftBankAccountProfileToken
    profileResponse:
      allOf:
        - $ref: '#/components/schemas/profileRoot'
        - description: 'This is the customer''s [card](/schemas/card) information.'
          properties:
            cards:
              type: array
              items:
                $ref: '#/components/schemas/cardLookup'
      type: object
    profileCreateResponse:
      allOf:
        - $ref: '#/components/schemas/profileRoot'
        - description: 'This is the customer''s [card](/schemas/card) information.'
          properties:
            cards:
              type: array
              items:
                $ref: '#/components/schemas/cardCreateResponse'
      type: object
      x-internal: true
    profileRoot:
      allOf:
        - type: object
          properties:
            id:
              type: string
              description: This is the ID returned in the response. In NETBANX this is called the Consumer ID.
              example: a02e52c7-c991-4418-966a-b62989cb0eae
              readOnly: true
            paymentToken:
              type: string
              description: This is a token that represents the customer and is returned in the response to the profile request. This token cannot be used to make a payment.
              example: P0zPDqggWESaktW
              readOnly: true
            status:
              $ref: '#/components/schemas/profileStatus'
        - $ref: '#/components/schemas/profile'
        - type: object
          properties:
            addresses:
              type: array
              description: This is the customer's address.
              items:
                $ref: '#/components/schemas/address'
      title: profileRoot
      x-internal: true
    profileSingleUseTokenResponse:
      title: profileSingleUseToken
      type: object
      properties:
        id:
          type: string
          description: This is the ID returned in the response.
          example: a02e52c7-c991-4418-966a-b62989cb0eae
        paymentToken:
          type: string
          description: This is the single-use payment token returned in the response to the request.
          example: SAec6TpEoNVQpbSM
        timeToLiveSeconds:
          type: number
          description: 'This is the period of time the single-use token is valid before expiration, in seconds.'
          example: 899
        profileId:
          type: string
          description: This is the profile ID returned in the response based on which the profile single-use token is created.
          example: 2e31b3e3-122b-4ffe-bb7e-9b2202fe85fb
        status:
          $ref: '#/components/schemas/profileStatus'
        merchantCustomerId:
          type: string
          description: This is a customer ID that the merchant provides with the request for their own internal customer identification. This value must be unique for each customer belonging to a merchant. In NETBANX this is known as the Ref ID.
          example: mycustomer1
        locale:
          $ref: '#/components/schemas/locale'
        firstName:
          type: string
          description: This is the customer's first name.
          example: John
        middleName:
          type: string
          description: This is the customer's middle name.
          example: James
        lastName:
          type: string
          description: This is the customer's last name.
          example: Smith
        email:
          type: string
          description: This is the customer's email address.
          example: john.smith@email.com
        phone:
          type: string
          description: This is the customer's phone number.
          example: 777-444-8888
        ip:
          type: string
          description: This is the customer’s IP address.
          example: 192.0.126.111
        gender:
          $ref: '#/components/schemas/gender'
        nationality:
          type: string
          description: This is the customer’s nationality.
          example: Canadian
        cellPhone:
          type: string
          description: This is the customer’s cell phone number.
          example: 777-555-8888
        dateOfBirth:
          $ref: '#/components/schemas/dateOfBirth'
        addresses:
          type: array
          description: This is the customer's address.
          items:
            $ref: '#/components/schemas/address'
        cards:
          type: array
          description: This is the customer's card information.
          items:
            $ref: '#/components/schemas/singleUseProfileCard'
      required:
        - id
        - paymentToken
        - timeToLiveSeconds
        - profileId
    profileStatus:
      title: profileStatus
      enum:
        - ACTIVE
        - INITIAL
      type: string
      description: This is the status of the profile request.
      example: ACTIVE
      x-stoplight:
        id: 20941c0eeb11c
      x-internal: true
    recipient:
      type: object
      x-examples:
        Example 1:
          dateOfBirth:
            day: 29
            month: 1
            year: 2001
          zip: CB24 9AD
          lastName: Smith
          accountNumber: ABC1234567890
      x-internal: false
      description: 'When you add [recipient](/schemas/recipient) data to a profile, that data will be used in the authorization request if you use the payment token from a credit card associated with that profile.The recipient is deemed to be the person or party who has the contractual relationship with the merchant/financial institution. This may be different from the cardholder, e.g., in the case of a parent topping up a child''s savings account. Therefore, the fields should not be collected on the same page as cardholder information, but instead be passed in the background from the merchant’s records. **Note:** You can include recipient elements in your authorization request only if your Merchant Category Code is 6012 and your registered trading address is in the United Kingdom. All fields are optional. However, scheme fines may apply if data is consistently not supplied and chargebacks persist. If you have any questions, contact your account manager.'
      title: recipient
      properties:
        dateOfBirth:
          $ref: '#/components/schemas/dateOfBirth'
        zip:
          type: string
          description: This is the recipient's postcode.
          example: CB24 9AD
        lastName:
          type: string
          example: Smith
          description: |
            This is the recipient's last Name.
        accountNumber:
          type: string
          description: 'This is the recipient''s account number, e.g., a loan agreement number or customer ID.'
          example: ABC1234567890
      required:
        - dateOfBirth
    sepaBankAccount:
      title: sepaBankAccount
      type: object
      x-stoplight:
        id: 23de78148e45c
      x-internal: true
      properties:
        nickName:
          type: string
          description: This is an alias for this bank account.
          example: Sally's Barclays Account
        accountHolderName:
          type: string
          description: This is the name of the customer or company that owns the bank account.
          example: Sally Barnes
        bic:
          type: string
          description: This is the bank identification code.
          example: ABNANL2A
        billingAddressId:
          type: string
          description: 'This is the address ID returned in response to the request to create an address, which will be associated with this bank account.'
          example: 60022f38-fd17-4731-909c-923930d0d5d4
        merchantRefNum:
          type: string
          description: This is the merchant reference number created by the merchant and submitted as part of the request. This value is only stored by the Paysafe system and has no bearing on the request.
          example: SEPA888
    sepaBankAccountResponse:
      title: sepaBankAccount
      allOf:
        - type: object
          x-internal: false
          description: 'The details for the [SEPA Bank Account](/schemas/sepaBankAccountResponse)'
          properties:
            id:
              type: string
              description: This is the ID returned in the response. In NETBANX this is called the Consumer ID.
              example: a02e52c7-c991-4418-966a-b62989cb0eae
            status:
              $ref: '#/components/schemas/bankAccountStatus'
            lastDigits:
              type: string
              description: This is the last two digits of the bank account number.
              example: '01'
            paymentToken:
              type: string
              description: This is a token that represents the bank account and is returned in the response to the bank account creation request. It **cannot** be used in the place of bank account information in Direct Debit transactions. The *paymentToken* from the SEPA mandate creation request must be used.
              example: D8c4jEzMTM4NDg1
            mandates:
              type: array
              description: 'This is one or more [mandates](/schemas/mandate) associated with the bank account.'
              items:
                $ref: '#/components/schemas/mandate'
        - $ref: '#/components/schemas/sepaBankAccount'
      description: 'The details for the [SEPA Bank Account](/schemas/sepaBankAccountResponse)'
    singleUseProfileCard:
      title: singleUseProfileCard
      type: object
      x-stoplight:
        id: 0967ed6ec49b7
      x-internal: true
      properties:
        timeToLiveSeconds:
          type: number
          description: 'This is the period of time the card single-use token is valid before expiration, in seconds.'
          example: 899
        status:
          $ref: '#/components/schemas/cardStatus'
        id:
          type: string
          description: This is the ID of the card single-use token.
          example: 6a275b7c-6f11-4ed1-ae77-21071724574a
        cardBin:
          type: string
          description: 'These are the first 6 digits of the card Bank Identification Number (BIN), i.e. the first 6 digits of the card number.'
          example: '411111'
        lastDigits:
          type: string
          description: This is the last digits of the card number.
          example: '1111'
        holderName:
          type: string
          description: This is the name of the card holder.
          example: John Smith
        cardType:
          $ref: '#/components/schemas/cardType'
        paymentToken:
          type: string
          description: This is a token that represents the card and is returned in the response to the card creation request.
          example: CNjEzMTM4NDg1
        defaultCardIndicator:
          type: boolean
          description: 'This indicates whether this is the default card for the profile, and is returned in the response.'
          example: true
        cardId:
          type: string
          description: This is the ID of the card stored to the profile.
          example: 6de81e89-9058-4bdb-9f63-8eaaf2a34d95
        cardExpiry:
          $ref: '#/components/schemas/cardExpiry'
        '':
          oneOf:
            - type: object
              description: No value if the search token is a real card
            - $ref: '#/components/schemas/tokenSearchCardApplePay'
            - $ref: '#/components/schemas/tokenSearchCardNetworkToken'
      required:
        - timeToLiveSeconds
        - holderName
    singleUseTokenCard:
      title: singleUseTokenCard
      type: object
      description: These are the card details.
      x-stoplight:
        id: cf87654660fe3
      properties:
        holderName:
          type: string
          description: 'This is the name of the card holder. **Note:** It is **required** for *3DS2*, *Visa Direct* or *Mastercard MoneySend*.'
          example: John Smith
        cardNum:
          type: string
          description: This is the card number.
          example: '4111111111111111'
        cardExpiry:
          $ref: '#/components/schemas/cardExpiry'
        billingAddress:
          $ref: '#/components/schemas/billingAddress'
      required:
        - cardNum
        - cardExpiry
      x-internal: true
    tokenExpiry:
      title: tokenExpiry
      required:
        - month
        - year
      type: object
      properties:
        month:
          type: number
          example: 12
        year:
          type: number
          example: 2020
      description: 'This is the [expiry date](/schemas/tokenExpiry) of the DPAN (the token).'
      x-internal: true
    tokenStatus:
      title: tokenStatus
      enum:
        - ACTIVE
      type: string
      description: This is the status of the token.
      example: ACTIVE
      x-internal: true
    tokenSearchCard:
      title: tokenSearchCard
      type: object
      description: This is the customer's card information.
      x-stoplight:
        id: 5831d75ac3562
      x-internal: true
      properties:
        status:
          $ref: '#/components/schemas/cardStatus'
        id:
          type: string
          description: This is the ID of the card single-use token.
          example: 6a275b7c-6f11-4ed1-ae77-21071724574a
        cardBin:
          type: string
          description: 'These are the first 6 digits of the card Bank Identification Number (BIN), i.e. the first 6 digits of the card number.'
          example: '411111'
        lastDigits:
          type: string
          description: This is the last digits of the card number.
          example: '1111'
        holderName:
          type: string
          description: This is the name of the card holder.
          example: John Smith
        cardType:
          $ref: '#/components/schemas/cardType'
        cardCategory:
          $ref: '#/components/schemas/cardCategory'
        cardExpiry:
          $ref: '#/components/schemas/cardExpiry'
        ' ':
          $ref: '#/components/schemas/tokenSearchCardAdditionalDetails'
      required:
        - holderName
    tokenSearchCardAdditionalDetails:
      oneOf:
        - type: object
          description: No value if the search token is a real card
        - $ref: '#/components/schemas/tokenSearchCardApplePay'
        - $ref: '#/components/schemas/tokenSearchCardNetworkToken'
      x-internal: true
      description: The additional details for a card.
      title: ''
      x-stoplight:
        id: 5360e25c14548
    tokenSearchCardApplePay:
      type: object
      description: When the search token is Apple Pay token
      x-internal: true
      x-stoplight:
        id: fcbd1b3b58024
      properties:
        tokenType:
          type: string
          enum:
            - APPLE_PAY
        applePay:
          $ref: '#/components/schemas/applePayToken'
      title: Card with Apple Pay Token
    tokenSearchCardGooglePay:
      type: object
      description: When the search token is Google Pay token
      x-internal: true
      x-stoplight:
        id: 8998a95928b79
      properties:
        tokenType:
          type: string
          enum:
            - GOOGLE_PAY
        googlePay:
          $ref: '#/components/schemas/googlePayToken'
      title: Card with Google Pay Token
    tokenSearchCardNetworkToken:
      type: object
      description: When the search token is Network Token
      x-internal: true
      x-stoplight:
        id: 5811833c5f417
      title: Card with Network Token
      properties:
        tokenType:
          type: string
          enum:
            - NETWORK_TOKEN
          example: NETWORK_TOKEN
        networkToken:
          $ref: '#/components/schemas/networkToken'
    transaction:
      title: transaction
      type: object
      properties:
        amount:
          type: string
          description: 'This is the amount of the request, in minor units.'
          example: '1000'
        currencyCode:
          type: string
          description: This is the currency of the merchant account.
          example: USD
      description: These are the Apple Pay transaction details.
      x-stoplight:
        id: 9842c3be04f45
      x-internal: true
  securitySchemes:
    httpBasic:
      type: http
      scheme: basic
  parameters:
    fields:
      name: fields
      in: query
      required: false
      schema:
        enum:
          - addresses
          - cards
          - cards.billingaddress
          - contacts
          - prepaidcards
          - governmentdocs
          - creditlines
          - achbankaccounts
          - eftbankaccounts
          - bacsbankaccounts
          - sepabankaccounts
          - becsbankaccounts
          - recipient
          - vippreferredcard
          - sightlinecard
          - mandates
        example: 'cards,addresses'
        description: 'You can look up a profile along with its associated sub-components(cards,addresses,achbankaccounts,bacsbankaccounts,eftbankaccounts,sepabankaccounts) using one or more comma-separated values.'
        type: string
  requestBodies:
    applePaySingleUseTokens:
      content:
        application/json:
          schema:
            type: object
            properties:
              applePayPaymentToken:
                type: object
                properties:
                  billingContact:
                    $ref: '#/components/schemas/billingContact'
                  token:
                    type: object
                    description: The token data.
                    properties:
                      paymentData:
                        oneOf:
                          - $ref: '#/components/schemas/applePayDecryptedPaymentTokenRequest'
                          - $ref: '#/components/schemas/applePayPaymentTokenRequest'
                      transactionIdentifier:
                        type: string
                        description: The transaction identifier.
                      paymentMethod:
                        $ref: '#/components/schemas/paymentMethod'
          examples:
            Create single use Apple Pay token:
              value:
                applePayPaymentToken:
                  billingContact:
                    addressLines:
                      - 'New York City, 123 Str'
                    administrativeArea: MC
                    country: USA
                    countryCode: US
                    givenName: John
                    familyName: Doe
                    locality: Mad
                    phoneticGivenName: string
                    phoneticFamilyName: string
                    postalCode: MC-23
                    subAdministrativeArea: string
                    subLocality: string
                  token:
                    paymentData:
                      version: EC_v1
                      data: <passkit_encrypted_payment_data>
                      signature: <signature_for_payment_and_header_data>
                      header:
                        transactionId: b53e22ef6669ce7f50951cfd6821908f4e679f050f5a551a1b5f6202253136ae
                        ephemeralPublicKey: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEB39YqvWZG0NOYjbkL5D61Mxip6uw23Q7m8gWgxL41k4fs0BgJ+MFcIGYOH86kAGL/wjiftDahRkUnzOGls2hzw==
                        publicKeyHash: O5gJ/P5sQ7ufMZQXA7ccLoOkJ13VNknbu+4K0TaCQXE=
                    transactionIdentifier: string
                    paymentMethod:
                      displayName: Visa Debit 0224
                      network: visa
                      type: debit
            Create single use Apple Pay token with Decrypted data:
              value:
                applePayPaymentToken:
                  billingContact:
                    addressLines:
                      - 'New York City, 123 Str'
                    administrativeArea: MC
                    country: USA
                    countryCode: US
                    givenName: John
                    familyName: Doe
                    locality: Mad
                    phoneticGivenName: string
                    phoneticFamilyName: string
                    postalCode: MC-23
                    subAdministrativeArea: string
                    subLocality: string
                  token:
                    paymentData:
                      decryptedData:
                        applicationPrimaryAccountNumber: '5076020000000006'
                        applicationExpirationDate: '231111'
                        currencyCode: '840'
                        transactionAmount: '1499'
                        cardholderName: John Doe
                        deviceManufacturerIdentifier: OPAY
                        paymentDataType: 3DSecure
                        paymentData:
                          onlinePaymentCryptogram: Axoxoxoxoxo
                          eciIndicator: '7'
                    transactionIdentifier: string
                    paymentMethod:
                      displayName: Visa Debit 0224
                      network: visa
                      type: debit
    googlePaySingleUseTokens:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/googlePayPaymentTokenRequest'
          examples:
            Create a Google Pay single use token:
              value:
                googlePayPaymentToken:
                  apiVersionMinor: 0
                  apiVersion: 2
                  paymentMethodData: null
                  description: Skrill •••• 4597
                  tokenizationData:
                    type: PAYMENT_GATEWAY
                    token: '{"signature":"MEUCIQCOBaF2OiX+m3iw1tMd3TBkJ4bO9CiKhvSKG9elDDDlXwIgGJCfxutVjCvPrcuMtzEc21asAVJHmkdaLTevoIXuC70\u003d","protocolVersion":"ECv1","signedMessage":"{\"encryptedMessage\":\"bzGaySH3i0KWgXnkLWlR82pSuVW+ziiOD0FOZ3PNq+7bshtRFZeGJsM3/L2Gs+F0EPnbIM2TDXMYGaFP89g1h23bZ/jGlp1Nw+a3qYI3tmo7zn/bOd5bw8u3ahoWCXB6JWe4bBZUHnMjhmOaN1mufUdH3dmf5kc1E7qY3ajzmCmkZr3AwGk2NtD+DZodt50gqWUC3G5W10VZeWwdazUVvEi/PPHJ4ZVl1ONsSYioITmRQQE4CDuLTZU5uICvGVGi61YpWlYBlfHgxr5uK+klaco9949n3UJ54ul8PaOe0Rx46KPveHIM/mefHjjnPj3K3f8LOhM6LBqsGgt707vv39MuF92fFoAEkzQ035iX3mmNAVbCKna/50Y3fiv2vWYh7QyIEeu2tc26rPv0FNkV+0ewsn0NnZIteX/Hxr6JH14GHUEjbkxLJrfFnn4VVQTvQLtjeg\\u003d\\u003d\",\"ephemeralPublicKey\":\"BAPING9pvMpDRhD3Ups4HX+ePz3FlfRq5VKgLpvQC4ScVjwNPINQaHsWne0NjgvQREa5xMJ4KdPXuNkUNQufVLc\\u003d\",\"tag\":\"nDtdbdu/D3LZbP7kGTNXeECjMAF/T0aS/LdVmFt7Bs8\\u003d\"}"}'
                  type: CARD
                  info:
                    cardNetwork: MASTERCARD
                    cardDetails: '4597'
                    billingAddress:
                      phoneNumber: '+15143802700'
                      address3: ''
                      sortingCode: ''
                      address2: ''
                      countryCode: CA
                      address1: 3500 Boulevard de Maisonneuve Westmount Montreal Canada
                      postalCode: H3Z 3C1
                      name: John Doe
                      locality: Westmount
                      administrativeArea: QC
                shippingOptionData:
                  id: shipping-001
                shippingAddress:
                  address3: ''
                  sortingCode: ''
                  address2: ''
                  countryCode: US
                  address1: 2600 Michelson Drive
                  postalCode: '92612'
                  name: John Doe
                  locality: ALTADENA
                  administrativeArea: CA
            '[Deprecated] Create a Google Pay single use token':
              value:
                googlePayPaymentToken:
                  signature: signature
                  protocolVersion: ECv1
                  signedMessage:
                    '\"encryptedMessage\":\"0lT8.....s03d\"': null
    cardCreateSingleUseToken:
      content:
        application/json:
          schema:
            type: object
            properties:
              card:
                $ref: '#/components/schemas/singleUseTokenCard'
          examples:
            Create card single use token:
              value:
                card:
                  holderName: John Smith
                  cardNum: '4111111111111111'
                  cardExpiry:
                    month: 12
                    year: 2020
                  billingAddress:
                    nickName: string
                    street: 100 Queen Street
                    street2: '201'
                    city: Toronto
                    country: CA
                    state: 'ON'
                    zip: M5H 2N2
    singleUseTokensSearch:
      content:
        application/json:
          schema:
            type: object
            properties:
              paymentToken:
                type: string
                description: This is the payment token that you want to lookup for.
            required:
              - paymentToken
          examples:
            Search by payment token:
              value:
                paymentToken: string
    achSingleuseTokens:
      content:
        application/json:
          schema:
            type: object
            properties:
              profile:
                $ref: '#/components/schemas/bankProfile'
              achBankAccount:
                $ref: '#/components/schemas/achBankAccountSUT'
              billingAddress:
                $ref: '#/components/schemas/billingAddress'
          examples:
            Create single use Ach bank account token:
              value:
                profile:
                  firstName: John
                  lastName: Smith
                  email: john.smith@email.com
                  dateOfBirth:
                    year: 1981
                    month: 10
                    day: 24
                achBankAccount:
                  accountNumber: '50557600'
                  accountHolderName: R. Dodson
                  routingNumber: '123456789'
                  accountType: CHECKING
                billingAddress:
                  nickName: string
                  street: 100 Queen Street
                  street2: '201'
                  city: Toronto
                  country: CA
                  state: 'ON'
                  zip: M5H 2N2
    eftSingleUseTokens:
      content:
        application/json:
          schema:
            type: object
            properties:
              profile:
                $ref: '#/components/schemas/bankProfile'
              eftBankAccount:
                $ref: '#/components/schemas/eftBankAccountSUT'
              billingAddress:
                $ref: '#/components/schemas/billingAddress'
          examples:
            Create single use EFT bank account token:
              value:
                profile:
                  firstName: John
                  lastName: Smith
                  email: john.smith@email.com
                  dateOfBirth:
                    year: 1981
                    month: 10
                    day: 24
                eftBankAccount:
                  accountNumber: '5002205'
                  accountHolderName: R. Smith
                  transitNumber: '20250'
                  institutionId: '001'
                billingAddress:
                  nickName: string
                  street: 100 Queen Street
                  street2: '201'
                  city: Toronto
                  country: CA
                  state: 'ON'
                  zip: M5H 2N2
    profiles:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/profile'
              - type: object
                properties:
                  card:
                    oneOf:
                      - $ref: '#/components/schemas/profileCard'
                      - $ref: '#/components/schemas/profileCardToken'
                  achBankAccount:
                    oneOf:
                      - $ref: '#/components/schemas/profileAchBank'
                      - $ref: '#/components/schemas/profileAchBankToken'
                  eftBankAccount:
                    oneOf:
                      - $ref: '#/components/schemas/profileEftBank'
                      - $ref: '#/components/schemas/profileEftBankToken'
          examples:
            Create a Profile:
              value:
                merchantCustomerId: mycustomer1
                locale: en_US
                firstName: John
                middleName: James
                lastName: Smith
                dateOfBirth:
                  year: 1981
                  month: 10
                  day: 24
                email: john.smith@email.com
                phone: 777-444-8888
                ip: 192.0.126.111
                gender: M
                nationality: Canadian
                cellPhone: 777-555-8888
            Create a Profile with Recipient Data:
              value:
                merchantCustomerId: mycustomer1
                locale: en_US
                firstName: John
                middleName: James
                lastName: Smith
                dateOfBirth:
                  year: 1981
                  month: 10
                  day: 24
                email: john.smith@email.com
                phone: 777-444-8888
                ip: 192.0.126.111
                gender: M
                nationality: Canadian
                cellPhone: 777-555-8888
                recipient:
                  dateOfBirth:
                    year: 1981
                    month: 10
                    day: 24
                  zip: CB24 9AD
                  lastName: Smith
                  accountNumber: ABC1234567890
            Create a Profile Using a Card:
              value:
                merchantCustomerId: mycustomer1
                locale: en_US
                firstName: John
                middleName: James
                lastName: Smith
                dateOfBirth:
                  year: 1981
                  month: 10
                  day: 24
                email: john.smith@email.com
                phone: 777-444-8888
                ip: 192.0.126.111
                gender: M
                nationality: Canadian
                cellPhone: 777-555-8888
                card:
                  cardNum: '4111111111111111'
                  accountId: '1002370290'
                  cardExpiry:
                    month: 12
                    year: 2020
                  nickName: John Corporate Card
                  merchantRefNum: MC123
                  holderName: John Smith
                  billingAddress:
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
                    state: 'ON'
            Create a Profile Using a Single-Use Token:
              value:
                merchantCustomerId: mycustomer1
                locale: en_US
                firstName: John
                middleName: James
                lastName: Smith
                dateOfBirth:
                  year: 1981
                  month: 10
                  day: 24
                email: john.smith@email.com
                phone: 777-444-8888
                ip: 192.0.126.111
                gender: M
                nationality: Canadian
                cellPhone: 777-555-8888
                card:
                  singleUseToken: abcdefg23d32d2
                  accountId: '1004370290'
            Create a Profile Using an ACH Bank Account:
              value:
                merchantCustomerId: mycustomer1
                locale: en_US
                firstName: John
                middleName: James
                lastName: Smith
                dateOfBirth:
                  year: 1981
                  month: 10
                  day: 24
                email: john.smith@email.com
                phone: 777-444-8888
                ip: 192.0.126.111
                gender: M
                nationality: American
                achBankAccount:
                  accountHolderName: Argon Corp.
                  accountNumber: '511221'
                  routingNumber: '123456789'
                  accountType: CHECKING
                  billingAddress:
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
                    state: 'ON'
            Create a Profile Using an ACH Single-Use Token:
              value:
                merchantCustomerId: mycustomer1
                firstName: John
                middleName: James
                lastName: Smith
                email: john.smith@email.com
                phone: 777-444-8888
                ip: 192.0.126.111
                gender: M
                nationality: American
                achBankAccount:
                  singleUseToken: D4VBx3EzOqlAi6k
            Create a Profile Using an EFT Bank Account:
              value:
                merchantCustomerId: mycustomer1
                locale: en_US
                firstName: John
                lastName: Smith
                dateOfBirth:
                  year: 1981
                  month: 10
                  day: 24
                email: john.smith@email.com
                phone: 777-444-8888
                eftBankAccount:
                  nickName: John's Account
                  accountHolderName: Argon Corp.
                  accountNumber: '511221'
                  transitNumber: '25039'
                  institutionId: '001'
                  billingAddress:
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
                    state: 'ON'
            Create a Profile Using an EFT Single-Use Token:
              value:
                merchantCustomerId: mycustomer1
                firstName: John
                middleName: James
                lastName: Smith
                email: john.smith@email.com
                phone: 777-444-8888
                ip: 192.0.126.111
                gender: M
                nationality: Canadian
                cellPhone: 777-555-8888
                eftBankAccount:
                  singleUseToken: D4VBx3EzOqlAi6k
      description: ''
    profilesUpdate:
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  status:
                    $ref: '#/components/schemas/profileStatus'
              - $ref: '#/components/schemas/profile'
          examples:
            Update a profile:
              value:
                status: ACTIVE
                merchantCustomerId: mycustomer1
                locale: en_US
                firstName: John
                middleName: James
                lastName: Smith
                email: john.smith@email.com
                phone: 777-444-8888
                ip: 192.0.126.111
                gender: M
                nationality: Canadian
                cellPhone: 777-555-8888
                dateOfBirth:
                  year: 1981
                  month: 10
                  day: 24
                recipient:
                  dateOfBirth:
                    year: 1981
                    month: 12
                    day: 24
                  zip: CB24 9AD
                  lastName: Smith
                  accountNumber: ABC1234567890
    profilesAddresses:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/addressRoot'
          examples:
            Create new address:
              value:
                nickName: Home
                street: 100 Queen
                street2: Unit 201
                city: Toronto
                zip: M5H 2N2
                country: CA
                state: 'ON'
                recipientName: Jane Smith
                phone: 647-788-3901
                defaultShippingAddressIndicator: true
    cards:
      content:
        application/json:
          schema:
            anyOf:
              - $ref: '#/components/schemas/cardRequest'
              - $ref: '#/components/schemas/cardSUTRequest'
          examples:
            Create Card:
              value:
                cardNum: '4111111111111111'
                accountId: '1002370290'
                nickName: John Corporate Card
                merchantRefNum: MC123
                holderName: John Smith
                billingAddressId: 794b2b05-1a3b-4544-a59c-8612d0a4711e
                defaultCardIndicator: false
                cardExpiry:
                  month: '12'
                  year: 2020
                issuingCountry: US
            Create a Card Using a Single-Use Token:
              value:
                singleUseToken: SCasdAwdasada
                accountId: '1002370290'
                defaultCardIndicator: true
    cardsUpdate:
      content:
        application/json:
          schema:
            anyOf:
              - $ref: '#/components/schemas/card'
              - $ref: '#/components/schemas/cardSUTUpdateRequest'
          examples:
            Update a card:
              value:
                nickName: John Corporate Card
                merchantRefNum: MC123
                holderName: John Smith
                billingAddressId: 794b2b05-1a3b-4544-a59c-8612d0a4711e
                defaultCardIndicator: false
                cardExpiry:
                  month: 12
                  year: 2020
                issuingCountry: US
            Update card with payment token:
              value:
                singleUseToken: SCassdsad23
    achBankAccounts:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/achBankAccount'
              - type: object
                properties:
                  accountNumber:
                    type: string
                    description: This is the bank account number.
                    example: '1231235'
          examples:
            Create Ach bank account:
              value:
                nickName: John's Account
                accountHolderName: Argon Corp.
                routingNumber: '123456789'
                billingAddressId: 60022f38-fd17-4731-909c-923930d0d5d4
                accountType: CHECKING
                merchantRefNum: ACH888
                bankName: Achtest Bank
                accountNumber: '1231235'
    bacsBankAccounts:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/bacsBankAccount'
              - type: object
                properties:
                  accountNumber:
                    type: string
                    description: This is the bank account number.
                    example: '51120172'
                  mandates:
                    type: array
                    description: This is one or more mandates associated with the bank account.
                    items:
                      $ref: '#/components/schemas/mandateReference'
          examples:
            Create Bacs bank account:
              value:
                nickName: Sally's Barclays Account
                accountHolderName: Sally Barnes
                sortCode: '086081'
                billingAddressId: 60022f38-fd17-4731-909c-923930d0d5d4
                merchantRefNum: BACS888
                accountNumber: '51120172'
                mandates:
                  - reference: ABCDEF0987
    eftBankAccounts:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/eftBankAccount'
              - type: object
                properties:
                  accountNumber:
                    type: string
                    description: This is the bank account number.
                    example: '511201'
          examples:
            Create Eft bank account:
              value:
                nickName: John's Account
                accountHolderName: Argon Corp.
                transitNumber: '25039'
                institutionId: '001'
                billingAddressId: 60022f38-fd17-4731-909c-923930d0d5d4
                merchantRefNum: EFT888
                accountNumber: '511201'
    sepaBankAccounts:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/sepaBankAccount'
              - type: object
                properties:
                  iban:
                    type: string
                    description: This is the international bank account number.
                  mandates:
                    type: array
                    description: This is one or more mandates associated with the bank account.
                    items:
                      $ref: '#/components/schemas/mandateReference'
          examples:
            Create SEPA bank account:
              value:
                nickName: Sally's Barclays Account
                accountHolderName: Sally Barnes
                bic: ABNANL2A
                billingAddressId: 60022f38-fd17-4731-909c-923930d0d5d4
                merchantRefNum: SEPA888
                iban: string
                mandates:
                  - reference: ABCDEF0987
    sepaBankAccountsUpdate:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/sepaBankAccount'
              - type: object
                properties:
                  iban:
                    type: string
                    description: This is the international bank account number.
          examples:
            Update SEPA bank account:
              value:
                nickName: Sally's Barclays Account
                accountHolderName: Sally Barnes
                bic: ABNANL2A
                billingAddressId: 60022f38-fd17-4731-909c-923930d0d5d4
                merchantRefNum: SEPA888
                iban: string
    mandates:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/mandateReference'
          examples:
            Create a mandate:
              value:
                reference: ABCDEF0987
    mandatesUpdate:
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                $ref: '#/components/schemas/mandateStatus'
          examples:
            Update a mandate:
              value:
                status: ACTIVE
  responses:
    error400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            Field Error:
              value:
                error:
                  code: '5068'
                  message: Either you submitted a request that is missing a mandatory field or the value of a field does not match the format expected.
                  fieldErrors:
                    - field: paymentToken
                      error: no payment token in body
                  links:
                    - rel: errorinfo
                      href: 'https://developer.paysafe.com/en/rest-api/vault/test-and-go-live/vault-errors/#ErrorCode5068'
            Forbidden:
              value:
                error:
                  code: '5270'
                  message: The credentials provided with the request do not have permission to access the data requested.
                  details:
                    - Access is denied
                  links:
                    - rel: errorinfo
                      href: 'https://developer.paysafe.com/en/rest-api/vault/test-and-go-live/vault-errors/#ErrorCode5270'
            Unauthorized:
              value:
                error:
                  code: '5279'
                  message: Invalid credentials
                  details:
                    - The authentication credentials are invalid.
            Standard Error:
              value:
                error:
                  code: '7503'
                  message: Card number already in use - 13d81fa6-bae6-4bea-b19e-d1f73ee0d563
                  links:
                    - rel: errorinfo
                      href: 'https://developer.paysafe.com/en/rest-api/vault/test-and-go-live/vault-errors/#ErrorCode7503'
                links:
                  - rel: existing_entity
                    href: 'http://MON-TEST-APP-03.test.mon.paysafe.com:8412/customervault/v1/cards/13d81fa6-bae6-4bea-b19e-d1f73ee0d563'
            External Gateway error:
              value:
                error:
                  code: '1001'
                  message: External Gateway Error
                  details:
                    - An external gateway error occurred.
        application/xml:
          schema:
            $ref: '#/components/schemas/error'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/error'
    applePaySingleUseTokens200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/applePaySingleUseTokenResponse'
          examples:
            Stored Apple Pay token:
              value:
                id: a02e52c7-c991-4418-966a-b62989cb0eae
                paymentToken: ABC4AFQQBC5UR5H
                timeToLiveSeconds: 899
                transaction:
                  amount: '1000'
                  currencyCode: USD
                applePayPaymentToken:
                  billingContact:
                    addressLines:
                      - string
                    administrativeArea: string
                    country: USA
                    countryCode: US
                    givenName: John
                    familyName: Doe
                    locality: Mad
                    phoneticGivenName: string
                    phoneticFamilyName: string
                    postalCode: string
                    subAdministrativeArea: string
                    subLocality: string
                  token:
                    paymentData:
                      version: EC_v1
                      signature: <signature_for_payment_and_header_data>
                      header:
                        transactionId: b53e22ef6669ce7f50951cfd6821908f4e679f050f5a551a1b5f6202253136ae
                        publicKeyHash: O5gJ/P5sQ7ufMZQXA7ccLoOkJ13VNknbu+4K0TaCQXE=
                    paymentMethod:
                      displayName: Visa Debit 0224
                      network: visa
                      type: debit
                card:
                  lastDigits: '1234'
                  cardBin: '411111'
                  cardExpiry:
                    month: 12
                    year: 2020
                  cardCategory: CREDIT
                  cardType: VI
                  holderName: Joe Smith
                  status: ACTIVE
                  tokenType: APPLE_PAY
                  applePay:
                    bin: '411111'
                    lastDigits: '2345'
                    expiry:
                      month: 12
                      year: 2020
                    status: ACTIVE
    googlePaySingleUseTokens200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/googlePaySingleUseTokenResponse'
          examples:
            Stored Google Pay token:
              value:
                id: a02e52c7-c991-4418-966a-b62989cb0eae
                paymentToken: GTCJskXfjWqo34U
                timeToLiveSeconds: 899
                googlePayPaymentToken:
                  ephemeralPublicKey: BCTSvnX1fF6b64NPlKwJl1r1dAfF0vAWHoktOS4CwH1BocAjnBHfHvKyX2CSM7jf7Cv1b6YfrQMkY9+hgE0dzgY=
                  tag: 8EKZt7vGFjtvuukkWlc5U93h+PBxjB7YKJF/w32Wfk8=
                  paymentMethod: CARD_ON_FILE
                  messageId: AH2EjtdtxE5P5FVoHjoVhVJiaslejbWZePOtu2G2nyZYJpZVIWeNV_tJYodBbX9iuZWMCUe_aBOVim6sKd1u2-KUSia5C9WNqGw7tTVy1epkqjxDhMBCnxQ6C8WJcMJ9luBWWjOnrHzb
                  messageExpiration: '1506708174199'
                  authMethod: string
                card:
                  status: ACTIVE
                  cardBin: '411111'
                  lastDigits: '8298'
                  cardType: VI
                  cardCategory: Credit
    singleUseTokens200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/cardSingleUseTokenResponse'
          examples:
            Single Use token with card:
              value:
                paymentToken: ABC4AFQQBC5UR5H
                timeToLiveSeconds: 899
                card:
                  cardBin: '411111'
                  lastDigits: '1111'
                  holderName: John Smith
                  cardType: VI
                  cardExpiry:
                    month: 12
                    year: 2020
                  cardCategory: CREDIT
                  issuingCountry: US
                billingAddress:
                  nickName: string
                  street: 100 Queen Street
                  street2: '201'
                  city: Toronto
                  country: CA
                  state: 'ON'
                  zip: M5H 2N2
                id: a02e52c7-c991-4418-966a-b62989cb0eae
    singleUseTokensSearch200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/cardTokenSearchResponse'
          examples:
            Token Search with cards:
              value:
                id: a02e52c7-c991-4418-966a-b62989cb0eae
                paymentToken: SAec6TpEoNVQpbSM
                timeToLiveSeconds: 899
                isFromMultiUseToken: true
                card:
                  status: ACTIVE
                  id: 6a275b7c-6f11-4ed1-ae77-21071724574a
                  cardBin: '411111'
                  lastDigits: '1111'
                  holderName: John Smith
                  cardType: VI
                  cardCategory: CREDIT
                  cardExpiry:
                    month: 12
                    year: 2020
            Token Search with Apple Pay:
              value:
                id: a02e52c7-c991-4418-966a-b62989cb0eae
                paymentToken: SAec6TpEoNVQpbSM
                timeToLiveSeconds: 899
                isFromMultiUseToken: true
                card:
                  status: ACTIVE
                  id: 6a275b7c-6f11-4ed1-ae77-21071724574a
                  cardBin: '411111'
                  lastDigits: '1111'
                  holderName: John Smith
                  cardType: VI
                  cardCategory: CREDIT
                  cardExpiry:
                    month: 12
                    year: 2020
                  tokenType: APPLE_PAY
                  applePay:
                    bin: '411111'
                    lastDigits: '2345'
                    expiry:
                      month: 12
                      year: 2020
                    status: ACTIVE
            Token Search with Network Token:
              value:
                id: a02e52c7-c991-4418-966a-b62989cb0eae
                paymentToken: SAec6TpEoNVQpbSM
                timeToLiveSeconds: 899
                isFromMultiUseToken: true
                card:
                  status: ACTIVE
                  id: 6a275b7c-6f11-4ed1-ae77-21071724574a
                  cardBin: '411111'
                  lastDigits: '1111'
                  holderName: John Smith
                  cardType: VI
                  cardCategory: CREDIT
                  cardExpiry:
                    month: 12
                    year: 2020
                  tokenType: NETWORK_TOKEN
                  networkToken:
                    bin: '411111'
                    lastDigits: '2345'
                    expiry:
                      month: 12
                      year: 2020
                    status: ACTIVE
                    cardArt:
                      cardArtUrl: 'https://s3.ca-central-1.amazonaws.com/422941870073-aws-ies-ca-central-1-test-paysafe-hosted/networktoken/dev/visa/22af01f2bdf445e497895d502dd1f1ae.pdf'
                      isCobranded: true
                      cobrandedName: Company Name
    achSingleuseTokens200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/achSingleUseTokenResponse'
          examples:
            Stored Ach bank account:
              value:
                id: a02e52c7-c991-4418-966a-b62989cb0eae
                paymentToken: SAec6TpEoNVQpbSM
                timeToLiveSeconds: 899
                profile:
                  firstName: John
                  lastName: Smith
                  email: john.smith@email.com
                  dateOfBirth:
                    year: 1981
                    month: 10
                    day: 24
                billingAddress:
                  nickName: string
                  street: 100 Queen Street
                  street2: '201'
                  city: Toronto
                  country: CA
                  state: 'ON'
                  zip: M5H 2N2
                achBankAccount:
                  accountNumber: '50557600'
                  accountHolderName: R. Dodson
                  routingNumber: '123456789'
                  accountType: CHECKING
    eftSingleUseTokens200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/eftSingleUseTokenResponse'
          examples:
            Stored EFT bank account:
              value:
                id: a02e52c7-c991-4418-966a-b62989cb0eae
                paymentToken: SAec6TpEoNVQpbSM
                timeToLiveSeconds: 899
                profile:
                  firstName: John
                  lastName: Smith
                  email: john.smith@email.com
                  dateOfBirth:
                    year: 1981
                    month: 10
                    day: 24
                billingAddress:
                  nickName: string
                  street: 100 Queen Street
                  street2: '201'
                  city: Toronto
                  country: CA
                  state: 'ON'
                  zip: M5H 2N2
                eftBankAccount:
                  accountNumber: '5002205'
                  accountHolderName: R. Smith
                  transitNumber: '20250'
                  institutionId: '001'
    profilesSingleUseProfiles200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/profileSingleUseTokenResponse'
          examples:
            Profile token with cards:
              value:
                id: a02e52c7-c991-4418-966a-b62989cb0eae
                paymentToken: SAec6TpEoNVQpbSM
                timeToLiveSeconds: 899
                profileId: 2e31b3e3-122b-4ffe-bb7e-9b2202fe85fb
                status: ACTIVE
                merchantCustomerId: mycustomer1
                locale: en_US
                firstName: John
                middleName: James
                lastName: Smith
                email: john.smith@email.com
                phone: 777-444-8888
                ip: 192.0.126.111
                gender: M
                nationality: Canadian
                cellPhone: 777-555-8888
                dateOfBirth:
                  year: 1981
                  month: 10
                  day: 24
                addresses:
                  - id: a02e52c7-c991-4418-966a-b62989cb0eae
                    status: ACTIVE
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
                    state: 'ON'
                    recipientName: Jane Smith
                    phone: 647-788-3901
                    defaultShippingAddressIndicator: true
                cards:
                  - timeToLiveSeconds: 899
                    status: ACTIVE
                    id: 6a275b7c-6f11-4ed1-ae77-21071724574a
                    cardBin: '411111'
                    lastDigits: '1111'
                    holderName: John Smith
                    cardType: VI
                    paymentToken: CNjEzMTM4NDg1
                    defaultCardIndicator: true
                    cardId: 6de81e89-9058-4bdb-9f63-8eaaf2a34d95
                    cardExpiry:
                      month: 12
                      year: 2020
            Profile with Apple Pay:
              value:
                id: a02e52c7-c991-4418-966a-b62989cb0eae
                paymentToken: SAec6TpEoNVQpbSM
                timeToLiveSeconds: 899
                profileId: 2e31b3e3-122b-4ffe-bb7e-9b2202fe85fb
                status: ACTIVE
                merchantCustomerId: mycustomer1
                locale: en_US
                firstName: John
                middleName: James
                lastName: Smith
                email: john.smith@email.com
                phone: 777-444-8888
                ip: 192.0.126.111
                gender: M
                nationality: Canadian
                cellPhone: 777-555-8888
                dateOfBirth:
                  year: 1981
                  month: 10
                  day: 24
                addresses:
                  - id: a02e52c7-c991-4418-966a-b62989cb0eae
                    status: ACTIVE
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
                    state: 'ON'
                    recipientName: Jane Smith
                    phone: 647-788-3901
                    defaultShippingAddressIndicator: true
                cards:
                  - timeToLiveSeconds: 899
                    status: ACTIVE
                    id: 6a275b7c-6f11-4ed1-ae77-21071724574a
                    cardBin: '411111'
                    lastDigits: '1111'
                    holderName: John Smith
                    cardType: VI
                    paymentToken: CNjEzMTM4NDg1
                    defaultCardIndicator: true
                    cardId: 6de81e89-9058-4bdb-9f63-8eaaf2a34d95
                    cardExpiry:
                      month: 12
                      year: 2020
                    tokenType: APPLE_PAY
                    applePay:
                      bin: '411111'
                      lastDigits: '2345'
                      expiry:
                        month: 12
                        year: 2020
                      status: ACTIVE
            Profile with network token:
              value:
                id: a02e52c7-c991-4418-966a-b62989cb0eae
                paymentToken: SAec6TpEoNVQpbSM
                timeToLiveSeconds: 899
                profileId: 2e31b3e3-122b-4ffe-bb7e-9b2202fe85fb
                status: ACTIVE
                merchantCustomerId: mycustomer1
                locale: en_US
                firstName: John
                middleName: James
                lastName: Smith
                email: john.smith@email.com
                phone: 777-444-8888
                ip: 192.0.126.111
                gender: M
                nationality: Canadian
                cellPhone: 777-555-8888
                dateOfBirth:
                  year: 1981
                  month: 10
                  day: 24
                addresses:
                  - id: a02e52c7-c991-4418-966a-b62989cb0eae
                    status: ACTIVE
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
                    state: 'ON'
                    recipientName: Jane Smith
                    phone: 647-788-3901
                    defaultShippingAddressIndicator: true
                cards:
                  - timeToLiveSeconds: 899
                    status: ACTIVE
                    id: 6a275b7c-6f11-4ed1-ae77-21071724574a
                    cardBin: '411111'
                    lastDigits: '1111'
                    holderName: John Smith
                    cardType: VI
                    paymentToken: CNjEzMTM4NDg1
                    defaultCardIndicator: true
                    cardId: 6de81e89-9058-4bdb-9f63-8eaaf2a34d95
                    cardExpiry:
                      month: 12
                      year: 2020
                    tokenType: NETWORK_TOKEN
                    networkToken:
                      bin: '411111'
                      lastDigits: '2345'
                      expiry:
                        month: 12
                        year: 2020
                      status: ACTIVE
                      cardArt:
                        cardArtUrl: 'https://s3.ca-central-1.amazonaws.com/422941870073-aws-ies-ca-central-1-test-paysafe-hosted/networktoken/dev/visa/22af01f2bdf445e497895d502dd1f1ae.pdf'
                        isCobranded: true
                        cobrandedName: Company Name
    monitor200:
      description: ''
      content:
        application/json:
          schema:
            type: object
            required:
              - status
            properties:
              status:
                type: string
            example:
              status: READY
            x-stoplight:
              id: e3464c929d767
            x-internal: true
          examples:
            Monitoring:
              value:
                status: READY
    profiles200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/profileResponse'
          examples:
            Profile token with cards:
              value:
                id: a02e52c7-c991-4418-966a-b62989cb0eae
                paymentToken: P0zPDqggWESaktW
                status: ACTIVE
                merchantCustomerId: mycustomer1
                locale: en_US
                firstName: John
                middleName: James
                lastName: Smith
                email: john.smith@email.com
                phone: 777-444-8888
                ip: 192.0.126.111
                gender: M
                nationality: Canadian
                cellPhone: 777-555-8888
                dateOfBirth:
                  year: 1981
                  month: 10
                  day: 24
                recipient:
                  dateOfBirth:
                    year: 1981
                    month: 12
                    day: 24
                  zip: CB24 9AD
                  lastName: Smith
                  accountNumber: ABC1234567890
                addresses:
                  - id: a02e52c7-c991-4418-966a-b62989cb0eae
                    status: ACTIVE
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
                    state: 'ON'
                    recipientName: Jane Smith
                    phone: 647-788-3901
                    defaultShippingAddressIndicator: true
                cards:
                  - cardBin: '411111'
                    lastDigits: '1111'
                    holderName: John Smith
                    cardType: VI
                    cardExpiry:
                      month: 12
                      year: 2020
            Profile token with Apple Pay:
              value:
                id: a02e52c7-c991-4418-966a-b62989cb0eae
                paymentToken: P0zPDqggWESaktW
                status: ACTIVE
                merchantCustomerId: mycustomer1
                locale: en_US
                firstName: John
                middleName: James
                lastName: Smith
                email: john.smith@email.com
                phone: 777-444-8888
                ip: 192.0.126.111
                gender: M
                nationality: Canadian
                cellPhone: 777-555-8888
                dateOfBirth:
                  year: 1981
                  month: 10
                  day: 24
                recipient:
                  dateOfBirth:
                    year: 1981
                    month: 12
                    day: 24
                  zip: CB24 9AD
                  lastName: Smith
                  accountNumber: ABC1234567890
                addresses:
                  - id: a02e52c7-c991-4418-966a-b62989cb0eae
                    status: ACTIVE
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
                    state: 'ON'
                    recipientName: Jane Smith
                    phone: 647-788-3901
                    defaultShippingAddressIndicator: true
                cards:
                  - cardBin: '411111'
                    lastDigits: '1111'
                    holderName: John Smith
                    cardType: VI
                    cardExpiry:
                      month: 12
                      year: 2020
                    tokenType: APPLE_PAY
                    applePay:
                      bin: '411111'
                      lastDigits: '2345'
                      expiry:
                        month: 12
                        year: 2020
                      status: ACTIVE
            Profile token with Network Token:
              value:
                id: a02e52c7-c991-4418-966a-b62989cb0eae
                paymentToken: P0zPDqggWESaktW
                status: ACTIVE
                merchantCustomerId: mycustomer1
                locale: en_US
                firstName: John
                middleName: James
                lastName: Smith
                email: john.smith@email.com
                phone: 777-444-8888
                ip: 192.0.126.111
                gender: M
                nationality: Canadian
                cellPhone: 777-555-8888
                dateOfBirth:
                  year: 1981
                  month: 10
                  day: 24
                recipient:
                  dateOfBirth:
                    year: 1981
                    month: 12
                    day: 24
                  zip: CB24 9AD
                  lastName: Smith
                  accountNumber: ABC1234567890
                addresses:
                  - id: a02e52c7-c991-4418-966a-b62989cb0eae
                    status: ACTIVE
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
                    state: 'ON'
                    recipientName: Jane Smith
                    phone: 647-788-3901
                    defaultShippingAddressIndicator: true
                cards:
                  - cardBin: '411111'
                    lastDigits: '1111'
                    holderName: John Smith
                    cardType: VI
                    cardExpiry:
                      month: 12
                      year: 2020
                    tokenType: NETWORK_TOKEN
                    networkToken:
                      bin: '411111'
                      lastDigits: '2345'
                      expiry:
                        month: 12
                        year: 2020
                      status: ACTIVE
                      cardArt:
                        cardArtUrl: 'https://s3.ca-central-1.amazonaws.com/422941870073-aws-ies-ca-central-1-test-paysafe-hosted/networktoken/dev/visa/22af01f2bdf445e497895d502dd1f1ae.pdf'
                        isCobranded: true
                        cobrandedName: Company Name
    profiles201:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/profileCreateResponse'
          examples:
            Create a Profile:
              value:
                merchantCustomerId: mycustomer1
                locale: en_US
                firstName: John
                middleName: James
                lastName: Smith
                dateOfBirth:
                  year: 1981
                  month: 10
                  day: 24
                email: john.smith@email.com
                phone: 777-444-8888
                ip: 192.0.126.111
                gender: M
                nationality: Canadian
                cellPhone: 777-555-8888
            Create a Profile with Recipient Data:
              value:
                merchantCustomerId: mycustomer1
                locale: en_US
                firstName: John
                middleName: James
                lastName: Smith
                dateOfBirth:
                  year: 1981
                  month: 10
                  day: 24
                email: john.smith@email.com
                phone: 777-444-8888
                ip: 192.0.126.111
                gender: M
                nationality: Canadian
                cellPhone: 777-555-8888
                recipient:
                  dateOfBirth:
                    year: 1981
                    month: 10
                    day: 24
                  zip: CB24 9AD
                  lastName: Smith
                  accountNumber: ABC1234567890
            Create a Profile Using a Card:
              value:
                merchantCustomerId: mycustomer1
                locale: en_US
                firstName: John
                middleName: James
                lastName: Smith
                dateOfBirth:
                  year: 1981
                  month: 10
                  day: 24
                email: john.smith@email.com
                phone: 777-444-8888
                ip: 192.0.126.111
                gender: M
                nationality: Canadian
                cellPhone: 777-555-8888
                card:
                  cardNum: '4111111111111111'
                  accountId: '1002370290'
                  cardExpiry:
                    month: 12
                    year: 2020
                  nickName: John Corporate Card
                  merchantRefNum: MC123
                  holderName: John Smith
                  billingAddress:
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
                    state: 'ON'
            Create a Profile Using a Single-Use Token:
              value:
                merchantCustomerId: mycustomer1
                locale: en_US
                firstName: John
                middleName: James
                lastName: Smith
                dateOfBirth:
                  year: 1981
                  month: 10
                  day: 24
                email: john.smith@email.com
                phone: 777-444-8888
                ip: 192.0.126.111
                gender: M
                nationality: Canadian
                cellPhone: 777-555-8888
                card:
                  singleUseToken: abcdefg23d32d2
                  accountId: '1004370290'
            Create a Profile Using an ACH Bank Account:
              value:
                merchantCustomerId: mycustomer1
                locale: en_US
                firstName: John
                middleName: James
                lastName: Smith
                dateOfBirth:
                  year: 1981
                  month: 10
                  day: 24
                email: john.smith@email.com
                phone: 777-444-8888
                ip: 192.0.126.111
                gender: M
                nationality: American
                achBankAccount:
                  accountHolderName: Argon Corp.
                  accountNumber: '511221'
                  routingNumber: '123456789'
                  accountType: CHECKING
                  billingAddress:
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
                    state: 'ON'
            Create a Profile Using an ACH Single-Use Token:
              value:
                merchantCustomerId: mycustomer1
                firstName: John
                middleName: James
                lastName: Smith
                email: john.smith@email.com
                phone: 777-444-8888
                ip: 192.0.126.111
                gender: M
                nationality: American
                achBankAccount:
                  singleUseToken: D4VBx3EzOqlAi6k
            Create a Profile Using an EFT Bank Account:
              value:
                merchantCustomerId: mycustomer1
                locale: en_US
                firstName: John
                lastName: Smith
                dateOfBirth:
                  year: 1981
                  month: 10
                  day: 24
                email: john.smith@email.com
                phone: 777-444-8888
                eftBankAccount:
                  nickName: John's Account
                  accountHolderName: Argon Corp.
                  accountNumber: '511221'
                  transitNumber: '25039'
                  institutionId: '001'
                  billingAddress:
                    nickName: Home
                    street: 100 Queen
                    street2: Unit 201
                    city: Toronto
                    zip: M5H 2N2
                    country: CA
                    state: 'ON'
            Create a Profile Using an EFT Single-Use Token:
              value:
                merchantCustomerId: mycustomer1
                firstName: John
                middleName: James
                lastName: Smith
                email: john.smith@email.com
                phone: 777-444-8888
                ip: 192.0.126.111
                gender: M
                nationality: Canadian
                cellPhone: 777-555-8888
                eftBankAccount:
                  singleUseToken: D4VBx3EzOqlAi6k
    profilesAddresses200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/address'
          examples:
            Stored Address:
              value:
                id: 6a275b7c-6f11-4ed1-ae77-21071724574a
                status: ACTIVE
                nickName: Home
                street: 100 Queen
                street2: Unit 201
                city: Toronto
                zip: M5H 2N2
                country: CA
                state: 'ON'
                recipientName: Jane Smith
                phone: 647-788-3901
                defaultShippingAddressIndicator: true
    cards200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/cardResponse'
          examples:
            Card response:
              value:
                id: 6a275b7c-6f11-4ed1-ae77-21071724574a
                status: ACTIVE
                nickName: John Corporate Card
                holderName: John Smith
                cardBin: '411111'
                lastDigits: '1111'
                cardType: VI
                cardCategory: CREDIT
                paymentToken: CNjEzMTM4NDg1
                billingAddressId: 794b2b05-1a3b-4544-a59c-8612d0a4711e
                defaultCardIndicator: false
                cardExpiry:
                  month: 12
                  year: 2020
                issuingCountry: US
    cards201:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/cardCreateResponse'
          examples:
            Card response:
              value:
                id: 6a275b7c-6f11-4ed1-ae77-21071724574a
                status: ACTIVE
                nickName: John Corporate Card
                holderName: John Smith
                cardBin: '411111'
                lastDigits: '1111'
                cardType: VI
                cardCategory: CREDIT
                paymentToken: CNjEzMTM4NDg1
                billingAddressId: 794b2b05-1a3b-4544-a59c-8612d0a4711e
                defaultCardIndicator: false
                cardExpiry:
                  month: 12
                  year: 2020
                issuingCountry: US
    achBankAccounts200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/achBankAccountResponse'
          examples:
            Stored Ach bank account:
              value:
                id: a02e52c7-c991-4418-966a-b62989cb0eae
                status: ACTIVE
                lastDigits: '01'
                paymentToken: CNjEzMTM4NDg1
                nickName: John's Account
                accountHolderName: Argon Corp.
                routingNumber: '123456789'
                billingAddressId: 60022f38-fd17-4731-909c-923930d0d5d4
                accountType: CHECKING
                merchantRefNum: ACH888
                bankName: Achtest Bank
    bacsBankAccounts200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/bacsBankAccountResponse'
          examples:
            Stored Bacs bank account:
              value:
                id: a02e52c7-c991-4418-966a-b62989cb0eae
                status: ACTIVE
                lastDigits: '01'
                paymentToken: CNjEzMTM4NDg1
                mandates:
                  - id: e250fdeb-dceb-4953-9268-8305d06b9292
                    reference: ABCDEF0987
                    paymentToken: MUwqiUNjndxxiFs
                    status: ACTIVE
                    statusChangeDate: '2016-12-14T20:41:32Z'
                nickName: Sally's Barclays Account
                accountHolderName: Sally Barnes
                sortCode: '086081'
                billingAddressId: 60022f38-fd17-4731-909c-923930d0d5d4
                merchantRefNum: BACS888
    eftBankAccounts200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/eftBankAccountResponse'
          examples:
            Stored EFT bank account:
              value:
                id: a02e52c7-c991-4418-966a-b62989cb0eae
                status: ACTIVE
                lastDigits: '01'
                paymentToken: CNjEzMTM4NDg1
                nickName: John's Account
                accountHolderName: Argon Corp.
                transitNumber: '25039'
                institutionId: '001'
                billingAddressId: 60022f38-fd17-4731-909c-923930d0d5d4
                merchantRefNum: EFT888
    sepaBankAccounts200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/sepaBankAccountResponse'
          examples:
            Stored SEPA Bank account:
              value:
                id: a02e52c7-c991-4418-966a-b62989cb0eae
                status: ACTIVE
                lastDigits: '01'
                paymentToken: D8c4jEzMTM4NDg1
                mandates:
                  - id: e250fdeb-dceb-4953-9268-8305d06b9292
                    reference: ABCDEF0987
                    paymentToken: MUwqiUNjndxxiFs
                    status: ACTIVE
                    statusChangeDate: '2016-12-14T20:41:32Z'
                nickName: Sally's Barclays Account
                accountHolderName: Sally Barnes
                bic: ABNANL2A
                billingAddressId: 60022f38-fd17-4731-909c-923930d0d5d4
                merchantRefNum: SEPA888
    mandates200:
      description: ''
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/mandate'
              - type: object
                properties:
                  statusReason:
                    type: string
                    description: 'In the case of a REJECTED or DISPUTED status, a description of why the mandate was returned.'
                    example: Bank account closed
                  bankAccountId:
                    type: string
                    description: The bank account that this mandate belongs to.
                    example: '51120172'
          examples:
            Stored Mandate:
              value:
                id: e250fdeb-dceb-4953-9268-8305d06b9292
                reference: ABCDEF0987
                paymentToken: MUwqiUNjndxxiFs
                status: ACTIVE
                statusChangeDate: '2016-12-14T20:41:32Z'
                statusReason: Bank account closed
                bankAccountId: '51120172'
security:
  - httpBasic: []
tags:
  - name: Verify That The Service Is Accessible
  - name: Profiles
  - name: Addresses
  - name: Cards
  - name: ACH Bank Accounts
  - name: BACS Bank Accounts
  - name: EFT Bank Accounts
  - name: SEPA Bank Accounts
  - name: Mandates
  - name: Single-Use Tokens
  - name: Monitor
    description: |-
      **Notes:**

      <ul>
      <li> For payment requests coming from mobile devices you need a specific API key to retrieve single-use tokens from the Customer Vault. This API key is different from the server-to-server API key that you use to process all other Paysafe API requests. See [Where to Find Your API Key](https://developer.paysafe.com/en/rest-apis/reference-information/important-integration-concepts/using-your-api-key/#where-to-find-your-api-key) for more information.</li>
      <li> The single-use token is actually called token when created by the SDKs and  paymentToken when created by the Vault. Also called paymentToken when used with Card Payments API in an Auth; with Direct Debit API in a Purchase; and with APMs in a Payment.</li>
      </ul>
  - name: Direct Debit Single-Use Tokens
    description: '**Note:** For payment requests coming from mobile devices you need a specific API key to retrieve single-use tokens from the Customer Vault. This API key is different from the server-to-server API key that you use to process all other Paysafe API requests. See [Where to Find Your API Key](https://developer.paysafe.com/en/rest-apis/reference-information/important-integration-concepts/using-your-api-key/#where-to-find-your-api-key) for more information.'
  - name: Profile Single-Use Tokens
    description: '**Note:** The endpoints described here should be always consumed in the context of server-to-server communication and they require server-to-server API key.'
