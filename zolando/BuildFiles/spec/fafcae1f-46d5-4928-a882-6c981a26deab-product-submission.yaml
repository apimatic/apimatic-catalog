openapi: 3.0.0
info:
  version: "0.1.1"
  title: "Merchant Product Submission API"
  description: This service allows merchants to create their assortment in Zalando systems.
    Platform.
  x-audience: external-merchant
  x-api-id: 49e51b92-1b36-447f-adb1-be1305faaea6
paths:
  /merchants/{merchant_id}/product-submissions:
    post:
      summary: |
        Submits a product for creation
      description: |
        **Post a new Product Submission.**
          <br/><br/>
        A successful response to a product submission does not guarantee that the product will be created. Due to Zalando's high standards for data quality, each product must pass through multiple layers of both automatic and manual validation after submission. Should a product fail validation, you can resubmit a corrected version of the product data, which trigger a new validation process. The validation status may be fetched using another API ("Product Details").
          <br/><br/>

        **Please note:** If the product exists, only prices and stocks will be updated, while the rest of the submitted data will be ignored. The response will, however, not tell you if it was an update or a creation, because this cannot be determined when creating the product submission. To avoid this situation, other discovery APIs should be used, e.g. "Ean Match", and if the product already exists "Lightweight Creation" APIs are better options.
      tags:
        - Product Submissions
      security:
        - OAuth2: [products/write]
      parameters:
        - $ref: '#/components/parameters/merchant_id'
      requestBody:
        $ref: '#/components/requestBodies/ProductSubmissionBody'
      responses:
        '200':
          description: |
            the product was successfully submitted for creation
        '400':
          $ref: '#/components/responses/RequestError'
        default:
          $ref: '#/components/responses/GenericError'
components:
  schemas:
    ProductSubmission:
      description: |
        Product Submission is an attempt to create a product in Zalando systems.
      required:
        - product_model
        - outline
      properties:
        outline:
          description: |
            Please consult the Attributes API for a comprehensive list of outlines and their associated attributes.
          type: string
          example: trousers
        product_model:
          required:
            - merchant_product_model_id
            - product_model_attributes
            - product_configs
          properties:
            merchant_product_model_id:
              description: |
                An identifier the merchant can use for referring to the product model in our systems.
              type: string
              example: "47812AAS"
            product_model_attributes:
              example: {
                "name": "New Fancy Product 2.0",
                "brand_code": "5FX",
                "size_group": {
                  "size": "2MAE000A2A"
                },
                "target_age_groups": ["target_age_group_kid", "target_age_group_baby"],
                "target_genders": ["target_gender_female", "target_gender_male"]
              }
              type: object
            product_configs:
              type: array
              items:
                required:
                  - merchant_product_config_id
                  - product_config_attributes
                  - product_simples
                properties:
                  merchant_product_config_id:
                    description: |
                      An identifier the merchant can use for referring to the product config in our systems.
                    type: string
                    example: "411212"
                  product_config_attributes:
                    example: {
                      "color_code": "802",
                      "season_code": "fs18",
                      "media": [{"url": "https://zalando.com/1667531.jpg", "sort_key": 1}]
                    }
                    type: object
                  product_simples:
                    type: array
                    items:
                      required:
                        - merchant_product_simple_id
                        - product_simple_attributes
                      properties:
                        merchant_product_simple_id:
                          description: |
                            An identifier the merchant can use for referring to the product simple in our systems.
                          type: string
                          example: "WTC741-XL"
                        product_simple_attributes:
                          example: {
                            "ean": "4038671015234",
                            "size_codes": {
                              "size": "XL"
                            }
                          }
                          type: object
                          title: The Root Schema
    Problem:
      properties:
        type:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: 'about:blank'
        title:
          type: string
          description: |
            A short, summary of the problem type. Written in English and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized);
        status:
          type: integer
          format: int32
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurrence of the
            problem.
        instance:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
        body_errors:
          type: array
          description: |
            A list of errors in the body.
          items:
            type: object
            required:
              - path
            properties:
              path:
                type: string
                format: jsonpointer
                description: |
                  RFC 6901 JSON pointer to the property causing the error
              expected:
                type: string
                description: |
                  Expected type
              actual:
                type: string
                description: |
                  Actual type
              error:
                type: string
                description: |
                  Generic error
      example:
        {
          "type": "https://zalando.github.io/problem/constraint-violation",
          "title": "Service Unavailable",
          "status": 503,
          "detail": "Connection to database timed out"
        }
  parameters:
    merchant_id:
      name: merchant_id
      in: path
      description: Id of the merchant
      required: true
      schema:
        type: string
        format: string
  requestBodies:
    ProductSubmissionBody:
      description: A JSON representation of the product to be passed to Zalando's validation
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductSubmission'
  responses:
    RequestError:
      description: Request body is well formed and syntactically correct, but has semantic errors. Account hasn't been launched yet or refer to Attributes API.
      content:
        "application/problem+json":
          schema:
            $ref: '#/components/schemas/Problem'
    GenericError:
      description: Error occurred - see status code and problem object for more information.
      content:
        "application/problem+json":
          schema:
            $ref: '#/components/schemas/Problem'
  securitySchemes:
    merchant_platform:
      type: oauth2
      description: The Products service uses the OpenID Connect (OIDC) authentication layer
        of OAuth 2 to handle the client credentials process flow.
      flows:
        clientCredentials:
          tokenUrl: https://api-sandbox.merchants.zalando.com/auth/token
          scopes:
            products/write: Grants write access
