openapi: 3.0.0
info:
  version: "0.0.9"
  title: "Merchant Product Attributes API"
  description: This service enumerates and describes Zalando product attributes.
  x-audience: external-merchant
  x-api-id: 84689b31-793f-4583-91e5-9ab195be36ca
paths:
  /merchants/{merchant_id}/outlines:
    get:
      summary: |
        List sellable outlines for the merchant
      description: |
        Returns a list of product outlines that a given merchant can sell. The
        merchant can use these outlines to create a new product.
      tags:
        - Outlines
      security:
        - OAuth2: [products/attributes/read]
      parameters:
        - $ref: "#/components/parameters/merchant_id"
        - $ref: "#/components/parameters/query_paging_limit"
        - $ref: "#/components/parameters/paging_start_after_cursor"
        - $ref: "#/components/parameters/flow_id"
      responses:
        "200":
          $ref: "#/components/responses/OutlinesPagedResponse"
        default:
          $ref: "#/components/responses/GenericError"
  /merchants/{merchant_id}/outlines/{outline_label}:
    get:
      summary: "Return the outline"
      description: |
        Provide the structure of the outline.
      tags:
        - Outlines
      security:
        - OAuth2: [products/attributes/read]
      parameters:
        - $ref: "#/components/parameters/merchant_id"
        - $ref: "#/components/parameters/outline_label"
        - $ref: "#/components/parameters/flow_id"
      responses:
        "200":
          $ref: "#/components/responses/OutlinesPagedResponse"
        default:
          $ref: "#/components/responses/GenericError"

  /merchants/{merchant_id}/attribute-types/{type_label}:
    get:
      summary: "Returns the attribute type"
      tags:
        - Types
      security:
        - OAuth2: [products/attributes/read]
      parameters:
        - $ref: "#/components/parameters/merchant_id"
        - $ref: "#/components/parameters/type_label"
        - $ref: "#/components/parameters/flow_id"
      responses:
        "200":
          $ref: "#/components/responses/TypeResponse"
        default:
          $ref: "#/components/responses/GenericError"

  /merchants/{merchant_id}/attribute-types/{type_label}/attributes:
    get:
      summary: "List all attributes of the given attribute type"
      tags:
        - Attributes
      security:
        - OAuth2: [products/attributes/read]
      parameters:
        - $ref: "#/components/parameters/merchant_id"
        - $ref: "#/components/parameters/type_label"
        - $ref: "#/components/parameters/query_paging_limit"
        - $ref: "#/components/parameters/paging_start_after_cursor"
        - $ref: "#/components/parameters/flow_id"
      responses:
        "200":
          $ref: "#/components/responses/AttributesPagedResponse"
        default:
          $ref: "#/components/responses/GenericError"
  /merchants/{merchant_id}/attribute-types/{type_label}/attributes/{attribute_label}:
    get:
      summary: "Return a given attribute of the given attribute type"
      tags:
        - Attributes
      security:
        - OAuth2: [products/attributes/read]
      parameters:
        - $ref: "#/components/parameters/merchant_id"
        - $ref: "#/components/parameters/type_label"
        - $ref: "#/components/parameters/attribute_label"
        - $ref: "#/components/parameters/flow_id"
      responses:
        "200":
          $ref: "#/components/responses/AttributeResponse"
        default:
          $ref: "#/components/responses/GenericError"

components:
  schemas:
    Page:
      properties:
        next:
          description: |
            Details of the next page, if any.
          required:
            - start_after_cursor
            - href
          properties:
            start_after_cursor:
              type: string
              example: "26730e2c-fdab-476f-82bf-29e42f6e4b09"
            href:
              type: string
              example: "https://api.merchants.zalando.com/api/outlines?start_after_cursor=26730e2c-fdab-476f-82bf-29e42f6e4b09"
    Name:
      description: |
        Map of language to text, key must follow (rfc-2616, section
        3.10)[https://tools.ietf.org/html/rfc2616#section-3.10]

        This mapping is only a human readable name of the entity.
        Building logic dependant on this field should be avoided.
      additionalProperties:
        type: string
      example: { en: "The name", de: "Der Name", es: "El nombre" }
    Description:
      description: |
        Map of language to text, key must follow (rfc-2616, section
        3.10)[https://tools.ietf.org/html/rfc2616#section-3.10]

        This mapping is only a human readable description of the entity.
        Building logic dependant on the this field should be avoided.
      additionalProperties:
        type: string
      example: { en: Description, de: Beschreibung, es: Descripci√≥n }
    Outline:
      description: |
        Provides an outline of a product, etc., defining the types of attributes
        that must be present, and those which may be present, and also some
        optional additional constraints on the attributes of those types.
      required:
        - label
        - tiers
      properties:
        label:
          type: string
          example: "shoe"
        name:
          $ref: "#/components/schemas/Name"
        description:
          $ref: "#/components/schemas/Description"
        tiers:
          $ref: "#/components/schemas/Tiers"
    Tiers:
      properties:
        model:
          $ref: "#/components/schemas/OutlineTier"
        config:
          $ref: "#/components/schemas/OutlineTier"
        simple:
          $ref: "#/components/schemas/OutlineTier"
    OutlineTier:
      description: |
        Defines the optional and mandatory attributes and attribute constraints
        applied to a product at a given tier.
      required:
        - mandatory_types
        - optional_types
        - restricted_attributes
      properties:
        mandatory_types:
          description: |
            All mandatory types must present in the request body for successful
            product submission.
          type: array
          items:
            type: string
          example: ["mandatory_type_1", "mandatory_type_2"]
        optional_types:
          description: |
            Optional types will improve product quality, however are not
            required for submission.
          type: array
          items:
            type: string
          example: ["optional_type_1", "optional_type_2"]
        restricted_attributes:
          description: |
            List of restrictive attributes for mandatory/optional types.
          type: array
          items:
            $ref: "#/components/schemas/AttributePerType"
          example: [{ "type": { "label": "optional_type_1", "version": "1.0.0" }, "values": ["optional_type_1_value_1", "optional_type_1_value_2"] }]
        validation_hints:
          description: |
            List of validation hints.
          type: array
          items:
            $ref: "#/components/schemas/ValidationHint"
          example: [{ "type": { "label": "attribute_type_1"}, "related_types": [{"label": "attribute_type_2"}],"hint_type": "hint_type","description": {"en": "description"}}]
    TypeCardinality:
      description: |
        The allowed cardinality of this type when used - i.e. how many
        attributes of this type can be used.
      type: string
      x-extensible-enum:
        - one
        - many
      example: "one"
    TypeUsage:
      description: |
        How this type is to be used. Reference attributes established within
        this service, or Literal values provided.
      type: string
      x-extensible-enum:
        - literal
        - reference_by_label
        - reference_by_value
      example: "reference_by_label"
    TypeDefinition:
      description: |
        The specification of the actual type of this type.
      required:
        - type
      properties:
        type:
          type: string
          x-extensible-enum:
            - BooleanDefinition
            - StringDefinition
            - LocalizedStringDefinition
            - IntegerDefinition
            - DecimalDefinition
            - DatetimeDefinition
            - StructuredDefinition
        types:
          type: array
          items:
            required:
              - label
              - optional
            properties:
              label:
                type: string
              optional:
                type: boolean
      example: { "type": "LocalizedStringDefinition" }
    TypeVariants:
      description: |
        Allow aliases for types, when used it would be:
        "{type_label}.{type_variant}", this way it would be allowed to have the
        same type used multiple times in the same outline/attributes
        E.g: color.primary being color the type and primary the variant
      type: array
      items:
        required:
          - label
          - name
        properties:
          label:
            type: string
          name:
            $ref: "#/components/schemas/Name"
      example: [{ "label": "primary", "name": "Primary Type" }, { "label": "secondary", "name": "Secondary Type" }]
    Type:
      required:
        - label
        - name
        - definition
        - type_variants
        - cardinality
        - usage
      properties:
        label:
          type: string
          example: "color_code"
        name:
          $ref: "#/components/schemas/Name"
        description:
          $ref: "#/components/schemas/Description"
        cardinality:
          $ref: "#/components/schemas/TypeCardinality"
        usage:
          $ref: "#/components/schemas/TypeUsage"
        definition:
          $ref: "#/components/schemas/TypeDefinition"
        type_variants:
          $ref: "#/components/schemas/TypeVariants"
    Attribute:
      required:
        - label
        - value
        - name
      properties:
        label:
          type: string
          example: "color_code"
        name:
          $ref: "#/components/schemas/Name"
        value:
          $ref: "#/components/schemas/AttributeValue"
        _meta:
          $ref: "#/components/schemas/AttributeMeta"
    AttributeValue:
      description: |
        Holder for the value of an attribute.

        There must be one, and only one, of the following properties set, and
        this **must** match the definition of the Attribute's `Type.definition`.
      properties:
        boolean:
          type: boolean
        datetime:
          type: string
          format: date-time
        decimal:
          type: number
          format: float
        integer:
          type: integer
          format: int64
        string:
          type: string
        localized:
          type: object
          additionalProperties:
            type: string
        structure:
          type: object
      example:
        {
          "localized":
            {
              "fr": "gris fonc√©",
              "pt": "cinzento escuro",
              "cs": "tmavƒõ ≈°ed√°",
              "it": "grigio scuro",
              "nl": "Donkergrijs",
              "de": "dunkelgrau",
              "sv": "m√∂rkgr√•",
              "da": "m√∏rkegr√•",
              "en": "dark grey",
              "es": "gris oscuro",
              "fi": "tummanharmaa",
              "no": "m√∏rkegr√•",
              "pl": "ciemnoszary",
            },
        }
    AttributeMeta:
      type: object
      description: |
        Optional additional information for the attribute.
        There are no guarantees or fixed structure on this field.
    AttributePerType:
      type: object
      description: |
        Define a relation between an (outline, type) and its allowed values.
      properties:
        type:
          type: object
          properties:
            label:
              type: string
            version:
              type: string
        values:
          type: array
          items:
            type: string
    ValidationHint:
      type: object
      description: |
        An outline-specific validation hint for a given attribute. The purpose of the hints is to allow generating documentation for partners and transforming hints to JSON and XML schema automatically.
      properties:
          type:
            type: object
            properties:
              label:
                type: string
          related_types:
            type: array
            items:
              type: object
              properties:
                label:
                  type: string
          hint_type:
            type: string
          description:
            type: object
            additionalProperties:
              type: string

  parameters:
    flow_id:
      name: X-Flow-Id
      description: |
        A custom header that will be passed onto any further requests and can be
        used for diagnosing.
      in: header
      required: false
      schema:
        type: string
    merchant_id:
      name: merchant_id
      in: path
      description: Id of the merchant
      required: true
      schema:
        type: string
        format: string
    outline_label:
      name: outline_label
      in: path
      description: Label of the outline
      required: true
      schema:
        type: string
        format: string
    type_label:
      name: type_label
      in: path
      description: Label of the attribute type
      required: true
      schema:
        type: string
        format: string
    attribute_label:
      name: attribute_label
      in: path
      description: Label of the attribute
      required: true
      schema:
        type: string
        format: string
    query_paging_limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        default: 100
    paging_start_after_cursor:
      name: start_after_cursor
      in: query
      required: false
      schema:
        type: string
  responses:
    OutlinesPagedResponse:
      description: list of outlines
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/Page"
              - required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Outline"
    OutlineResponse:
      description: a single outline
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Outline"
    TypeResponse:
      description: a single attribute type
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Type"
    AttributeResponse:
      description: a single attribute
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Attribute"
    AttributesPagedResponse:
      description: list of attributes
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/Page"
              - required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Attribute"
    GenericError:
      description: |
        error occurred - see status code and problem object for more
        information.
      content:
        "application/problem+json":
          schema:
            $ref: "https://zalando.github.io/problem/schema.yaml#/Problem"
  securitySchemes:
    merchant_platform:
      type: oauth2
      description: The Products service uses the OpenID Connect (OIDC) authentication layer
        of OAuth 2 to handle the client credentials process flow.
      flows:
        clientCredentials:
          tokenUrl: https://api-sandbox.merchants.zalando.com/auth/token
          scopes:
            products/attributes/read: scope to read a product
