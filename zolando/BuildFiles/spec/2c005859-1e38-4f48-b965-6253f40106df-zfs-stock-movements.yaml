openapi: 3.0.0
info:
  version: 4.1.0
  x-api-id: "cc2c30ca-2969-403e-87b1-e27df78ed655"
  x-audience: "external-partner"
  title: "zDirect Platform ZFS Stock Movements API"
  description: |-
    The Stock Movements API is a service offered by Zalando Fulfillment Solutions (ZFS).

    The API makes ZFS business to business movements processes more transparent for partners.
    The API enables increased transparency for:
      - Inbound receive process
      - Outbound return process
      - Intra Community Movements (ICM)
      - Liquidation Data

    !!! note

      The retention time for data in this service is 100 days. After that, data may be deleted without notice.  
      Please note that this limitation has been removed for the new received items endpoint. Now it is 1 year.


    ## Inbound receive process

    The inbound receive process is the process of receiving items in the warehouse (goods receipt) that were delivered by any partner.

    Every item will get a unique ID the Quality Label (QL) that later identifies the item through all warehouse processes.

    ## Outbound return process

    The outbound return process is the process of returning items from the warehouse to the owning partner.

    The information is enhanced by the quality of the good, if it is known.

    ## Liquidation Data

      This call returns all items that have been liquidated for a merchant within a specified time frame.

    ```http
      GET /zfs/stock-movements/liquidated-items/{merchant_ID}?from=$FROM_DATE&to=$TO_DATE&purchase_order_number=$PURCHASE_ORDER_NUMBER
    ```
      **Note that>>**

      In exceptional scenarios such as system lags or integration delays,
    there is a possibility that `From` & `To` dates may not fecth 100% items which were liquidated in that duration. In such cases, we request you to retry the report in next 48 hours.

    ## Fetch strategy

    To get a constant stream of received events the partner has to call the endpoint in regular intervals.
    The client has to ensure that the intervals (`from` and `to` query parameter) will not lead to data gaps on client side.

    So partners can:

      * build a complete copy of received/returned items in it's database
      * Can read a "constant" stream of item receive/return information

    Limitations / Suggestions:

      * Use `GET /received-items/{merchant_id}?from=&to=` and `GET /returned-items/{merchant_id}?from=&to=` endpoints
      * Use fetch intervals between 15 and 60 minutes, this ensures that:
        * the data sets are not too big
        * the partner get regular updates
      * The request intervals must not have gaps in between
      * Request intervals are allowed to overlap. The client has to ensure to not consume received items more than once.
        * The `quality_label` is unique. It should be used to ensure to not consume `receive-items` more than once.
      * The query field `from` and `to` relates to `consumed_timestamp`
      * In case of every non `200` response the result should be ignored and refetched after interval of at least 2 minutes.
    
    ## Fetch strategy for the new received items endpoint (recommended)
    
    New received items endpoint unlike the deprecated one uses a cursor based pagination to fetch the data. Partners do
    not have to split requested time interval to smaller chunks. Thus we recommend the following way to retrieve the data:
      * Use `GET /received-items?merchant_id={merchant_id}` endpoint without cursor query parameter
      * Use received cursor (if not empty) from the response to fetch the next page of data (include the cursor in the next request)
      * Repeat the previous step until the cursor in the response is empty

    ## Intra Community Movements Report

    The Intra Community Movement (ICM) Report provides Cross Border Movements data of ZFS products, enabling ZFS Partners to
    perform Intrastat declarations whenever necessary.

    This API endpoint allows merchants to request for reports on the number of cross border,
    intra community movements for the specified date range.

    So partners can:

      * Fetch a report on all the cross border movements for the specified date range.
      * The date range reflects the time when the transaction was recorded in the API.

    Limitations / Suggestions:

      * Use `GET /intra-community-movements/{merchant-id}?from={from}&to={to}` endpoint
      * The report will be fetched for the specified date range.
      * Data is available from the month April 2020.
      * In case of every non `200` response the result should be ignored and refetched after interval of at least 2 minutes.
      * The `transaction_time` in the result reflects when the movements were processed in the warehouse.

servers:
  - url: "api.merchants.zalando.com/zfs/stock-movements"
    description: "Production instance"
  - url: "api-sandbox.merchants.zalando.com/zfs/stock-movements"
    description: "Sandbox instance for merchant center"

paths:
  "/received-items/{merchant-id}":
    get:
      deprecated: true
      summary: "Returns received items"
      description:  |-
        Returns all items received at Zalando warehouses from the specified partner in the given timeframe. <br /><br />

      security:
        - merchant_platform:
            - "zfs/received-item/read"
      parameters:
        - in: path
          name: "merchant-id"
          schema:
            type: string
            format: uuid
          description: merchant ID
          required: true
        - in: query
          name: from
          schema:
            $ref: "#/components/schemas/DateTime"
          description: Start timestamp for the query, restricted to now minus 100 days
          required: true
        - in: query
          name: to
          schema:
            $ref: "#/components/schemas/DateTime"
          description: End timestamp for the query, restricted to now minus 100 days
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReceivedItemsQueryResult"
        default:
          description: "A specific error occurred - see status code for more information."
          content:
            application/problem+json:
              schema:
                $ref: "https://opensource.zalando.com/problem/schema.yaml#/Problem"
  /received-items:
    get:
      summary: Retrieve inbounded items
      description: >-
        Returns all items inbounded at Zalando warehouses for specific `merchant-id` and `advice-ids`.
        Endpoint has no time range limitation, but to not overload the client, it provides cursor based pagination.
        The cursor is a string that is returned in the response and can be used to fetch the next page of results.
      security:
        - BearerAuth: [ partner-inbound-tracker.received.read ]
      parameters:
        - in: query
          name: merchant_id
          schema:
            type: string
            format: uuid
          example: 29809185-6a98-4691-a15b-e8d16839b6e8
          description: Merchant ID
          required: true
        - in: query
          name: zalando_advice_ids
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AdviceId'
          description: Zalando advice ids to filter inbounded items by. Returns items for all advice ids if not provided.
          required: false
        - in: query
          name: from
          schema:
            $ref: '#/components/schemas/DateTime'
          description: 'Start timestamp'
          required: false
        - in: query
          name: to
          schema:
            $ref: '#/components/schemas/DateTime'
          description: 'End timestamp'
          required: false
        - in: query
          name: cursor
          schema:
            type: string
          description: Cursor to paginate through results
          example: MjAxNy0wNy0yMVQxNzozMjoyOFoK
          required: false
        - in: query
          name: limit
          schema:
            type: string
            default: 100000
          description: Number of inbounded items to fetch. Maximum is 200000.
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundedItemsResponse'
        default:
          description: A specific error occurred - see status code for more information.
          content:
            application/problem+json:
              schema:
                $ref: 'https://opensource.zalando.com/restful-api-guidelines/problem-1.0.1.yaml#/Problem'
  "/returned-items/{merchant-id}":
    get:
      summary: "Returns returned items"
      description:  |-
        Returns all items returned from Zalando warehouses to the specified partner in the given timeframe.
      security:
        - OAuth2:
            - "zfs/returned-item/read"
      parameters:
        - in: path
          name: "merchant-id"
          schema:
            type: string
            format: uuid
          description: Merchant ID
          required: true
        - in: query
          name: from
          schema:
            $ref: "#/components/schemas/DateTime"
          description: Start timestamp for the query, restricted to now minus 100 days
          required: true
        - in: query
          name: to
          schema:
            $ref: "#/components/schemas/DateTime"
          description: End timestamp for the query, restricted to now minus 100 days
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/returnedItemsQueryResult"
        default:
          description: "A specific error occurred - see status code for more information."
          content:
              application/problem+json:
                schema:
                  $ref: "https://opensource.zalando.com/problem/schema.yaml#/Problem"
  "/intra-community-movements/{merchant-id}":
    get:
      summary: "Returns the ICM Report"
      description:  |
        Returns all the cross border, intra community movements matching the given query, ordered by movement date in ascending.
        This endpoint can be used by merchants to get access to all ICM Report data for a specified month.
      security:
        - merchant_platform:
          - "zfs/icm-reports/read"
      parameters:
        - in: path
          name: "merchant-id"
          schema:
            type: string
            format: uuid
          description: The Zalando specific UUID representing a merchant.
          required: true
        - in: query
          name: "from"
          schema:
            type: string
            format: date
          description: The start date for the query.
          example: "2020-04-01"
          required: true
        - in: query
          name: "to"
          schema:
            type: string
            format: date
          description: The end date (inclusive) for the query.
          example: "2020-04-10"
          required: true
      responses:
        200:
          description: |
            Returns a list of all the intra community movements in the requested month.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IcmReportResponse"
        default:
          description: "A specific error occurred - see status code for more information."
          content:
              application/problem+json:
                schema:
                  $ref: "https://opensource.zalando.com/problem/schema.yaml#/Problem"

  "/liquidated-items/{merchant-id}":
    get:
      summary: "Returns liquidation data"
      description: |-
        Returns all liquidated items from the specified partner in the given timeframe. <br /><br />
      security:
        - merchant_platform:
            - "zfs/liquidated-item/read"
      parameters:
        - in: path
          name: "merchant-id"
          schema:
            type: string
            format: uuid
          description: merchant ID
          required: true
        - in: query
          name: from
          schema:
            $ref: "#/components/schemas/Date"
          description: Start timestamp for the query, restricted to now minus 100 days
          required: true
        - in: query
          name: to
          schema:
            $ref: "#/components/schemas/Date"
          description: End timestamp for the query, restricted to now minus 100 days
          required: true
        - in: query
          name: purchase-order-number
          schema:
            type: string
          description: The purchase order number associated with that ownership transfer.
          required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LiquidatedItemsQueryResult"
        default:
          description: "A specific error occurred - see status code for more information."
          content:
            application/problem+json:
              schema:
                $ref: "https://opensource.zalando.com/problem/schema.yaml#/Problem"
components:
  securitySchemes:
    merchant_platform:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: "https://api-sandbox.merchants.zalando.com/auth/token"
          scopes:
            "zfs/received-item/read": "Access to ZFS received items of a merchant."
            "zfs/returned-item/read": "Access to ZFS returned items of a merchant."
            "zfs/icm-reports/read": "Access to ZFS ICM Reports of a merchant."
  schemas:
    ReceivedItemsQueryResult:
      type: object
      properties:
        "received_items":
          type: array
          items:
            $ref: "#/components/schemas/ReceivedItem"
    ReceivedItem:
      type: object
      description: "Received Item"
      properties:
        zalando_advice_id:
          allOf:
            - $ref: "#/components/schemas/AdviceId"
          description: "The ID of the advice the item belongs to."
        merchant_b2b_reference:
          type: string
          maxLength: 100
          nullable: true
          description: >-
            A merchant specific optional reference id or information for the
            advice (for example a merchant's order name or number)
          example: "reference"
        ean:
          $ref: "#/components/schemas/Ean13"
        parent:
          allOf:
            - $ref: "#/components/schemas/LoadingUnitParent"
          description: >-
            Either a loading unit container (box) or `null`. Returned as `null` only for
            old returned item records
          nullable: true
        quality_label:
          type: string
          description: "A unique identifier per EAN per item."
          example: "00014D02W8V"
        site_id:
          type: string
          format: uuid
          description: "Location ID of the warehouse that received the item. This property will be deprecated in the future. Use location_id instead."
          example: "29809185-6a98-4691-a15b-e8d16839b6e8"
        location_id:
          type: string
          format: uuid
          description: "Location ID of the warehouse that received the item."
          example: "29809185-6a98-4691-a15b-e8d16839b6e8"
        received_timestamp:
          allOf:
            - $ref: "#/components/schemas/DateTime"
          description: "Timestamp when actual receive has happened."
        consumed_timestamp:
          allOf:
            - $ref: "#/components/schemas/DateTime"
          description: "This timestamp represent the time the data record was made available through our system. It can deviate from `receive_timestamp` and relates directly to the query params `from`/ `to`."
        tour_number:
          type: string
          pattern: "^((WA|WE)-)?[0-9]{8}-[0-9]{4}-[A-Z1-9]{2,4}-[A-Z1-9]{2,4}$"
          description: "An ID identifiying the tour."
          example: "20181031-0015-SWI1-EF"
      required:
        - advice_id
        - consumed_timestamp
        - ean
        - merchant_b2b_reference
        - parent
        - quality_label
        - received_timestamp
        - tour_number
        - site_id
        - location_id
    InboundedItemsResponse:
      type: object
      properties:
        received_items:
          type: array
          items:
            $ref: '#/components/schemas/InboundedItem'
        next:
          type: string
          description: Cursor reference. Used to fetch the next page of results.
          example: MjAxNy0wNy0yMVQxNzozMjoyOFoK
    InboundedItem:
      type: object
      description: Inbounded Item
      properties:
        zalando_advice_id:
          allOf:
            - $ref: '#/components/schemas/AdviceId'
          description: The ID of the advice the item belongs to.
        ean:
          $ref: '#/components/schemas/Ean13'
        sku:
          type: string
          description: A product identifier.
        quality_label:
          type: string
          description: A unique identifier per EAN per item.
          example: 00014D02W8V
        location_id:
          type: string
          format: uuid
          description: Location ID of the warehouse that inbounded the item.
          example: 29809185-6a98-4691-a15b-e8d16839b6e8
        received_timestamp:
          allOf:
            - $ref: '#/components/schemas/DateTime'
          description: Timestamp when actual inbound has happened.
      required:
        - zalando_advice_id
        - ean
        - sku
        - quality_label
        - location_id
        - received_timestamp
    returnedItemsQueryResult:
      type: object
      properties:
        returned_items:
          type: array
          items:
            $ref: "#/components/schemas/returnedItem"
    returnedItem:
      type: object
      description: "Returned Item"
      properties:
        merchant_b2b_reference:
          type: string
          maxLength: 100
          nullable: true
          description: >-
            A merchant specific optional reference id or information for the
            advice (for example a merchant's order name or number)
          example: "reference"
        ean:
          $ref: "#/components/schemas/Ean13"
        parent:
          type: object
          properties:
            id:
              type: string
              example: "12"
          description: "Either a loading unit container (box) or `null`"
          nullable: true
          required:
            - id
        quality_label:
          type: string
          description: "A unique identifier per EAN per item."
          example: "00014D02W8V"
        location_id:
          type: string
          format: uuid
          description: "Location ID of the warehouse that was returning the item."
          example: "29809185-6a98-4691-a15b-e8d16839b6e8"
        shipped_timestamp:
          allOf:
            - $ref: "#/components/schemas/DateTime"
          description: "Timestamp when actual return has happened."
        consumed_timestamp:
          allOf:
            - $ref: "#/components/schemas/DateTime"
          description: "This timestamp represent the time the data record was made available through our system. It can deviate from `shipped_timestamp` and relates directly to the query params `from`/ `to`."
        zalando_shipment_number:
          type: string
          pattern: "^[0-9]{16}$"
          description: "An ID identifiying the return-to-partner tour."
          example: "1234567890123456"
        destination:
          allOf:
            - $ref: "#/components/schemas/Address"
          description: "Delivery destination address details."
        quality_category:
          description: "Defines the quality of an item."
          type: string
          x-extensible-enum:
            - A
            - B
            - C
            - D
        defect_levels:
          allOf:
              - $ref: "#/components/schemas/DefectLevels"
          description: "Hierarchical defect description of defected items."
          nullable: true
      required:
        - consumed_timestamp
        - ean
        - merchant_b2b_reference
        - quality_label
        - shipped_timestamp
        - zalando_shipment_number
        - location_id
        - quality_category
        - destination
        - defect_levels
        - parent
    LoadingUnitParent:
      type: object
      description: "Container element for a receivedItem or another loadingUnitParent"
      properties:
        id:
          type: string
        parent:
          $ref: "#/components/schemas/LoadingUnitParent"
      required:
        - id
        - parent
    IcmReportResponse:
      type: object
      properties:
        merchant_id:
          type: string
          format: uuid
          description: "Merchant ID"
        reports:
          type: array
          description: "A set of reports for each day of the specified month"
          items:
            $ref: "#/components/schemas/Report"
      required:
        - merchant_id
    Report:
      type: object
      description: "Intra Community Movement report"
      properties:
        transaction_date:
          type: string
          format: date
          description: "Transaction date of the movement."
          example: "2020-04-08"
        movements:
          type: array
          items:
            $ref: "#/components/schemas/Movement"
      required:
        - transaction_date
        - movements
    Movement:
      type: object
      description: "Intra Community Movement"
      properties:
        product_sku:
          type: string
          description: "Unique Identifier of the product."
        ean:
          $ref: "#/components/schemas/Ean13"
        quantity:
          type: integer
          format: int64
          description: "Quantity of the specific product defined by the ean been moved."
        source_stock_location:
          $ref: "#/components/schemas/StockLocation"
        destination_stock_location:
          $ref: "#/components/schemas/StockLocation"
        movement_type:
          type: string
          enum:
            - return_center_inbound
            - customer_return_inbound
            - manual_relocation
            - customer_order_relocation
            - automatic_relocation
            - customer_order_relocation_correction
          description: "Type of the movement."
        order_number:
          type: string
          description: "Identifier for the set of movements on a particular day between 2 locations."
      required:
        - product_sku
        - ean
        - quantity
        - destination_stock_location
        - source_stock_location
    StockLocation:
      type: object
      description: "Details of the Stock Location"
      properties:
        location_id:
          type: string
          format: uuid
          description: "Unique identifier for the Stock Location."
        name:
          type: string
          description: "The name / location of the Stock Location."
          example: "Erfurt"
        country_code:
          type: string
          description: "Country code in ISO 3166-1 alpha-2 of the country, the location is in."
          example: "DE"
      required:
        - location_id
        - name
        - country_code
    Ean13:
      type: string
      format: ean
      pattern: "^[0-9]{13}$"
      maxLength: 13
      description: "A 13-digit EAN"
      example: 0191476239145
    DateTime:
      type: string
      format: date-time
      description: Date time
      example: "2017-07-21T17:32:28Z"
    Date:
      type: string
      format: date
      description: Date
      example: '2018-03-17'
    AdviceId:
      type: string
      pattern: '^[0-9]{8}$'
      example: 99200001
    DefectLevels:
      type: object
      description: "Defines a detailed summary of the defect reason."
      properties:
        level_1:
          type: string
          description: defines a brief summary of the defect reason, not always present
        level_2:
          type: string
          description: defines a detailed summary of the defect reason, not always present
      required:
        - level_1
        - level_2
    Address:
      type: object
      description: "Destination address to which the items are sent."
      properties:
        city:
          type: string
        country_code:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        salutation:
          type: string
        street:
          type: string
        zip:
          type: string
      required:
        - city
        - country_code
        - first_name
        - last_name
        - salutation
        - street
        - zip
    LiquidatedItemsQueryResult:
      type: object
      properties:
        "liquidated_items":
          type: array
          items:
            $ref: "#/components/schemas/LiquidatedItem"
    LiquidatedItem:
      type: object
      description: "Liquidated Item"
      properties:
        merchant_name:
          type: string
          description: >-
            A merchant name
          example: "reference"
        merchant_id:
          type: string
          format: uuid
        purchase_order_number:
          type: string
          description: |
            The purchase order number associated with that ownership transfer.
          example: 'PO123'
        shipping_notice_number:
          type: string
          format: uuid
        ean:
          $ref: "#/components/schemas/Ean13"
        sku_simple:
          type: string
          format: sku
          maxLength: 50
          readOnly: true
          description: the Zalando Simple SKU found during validation for the given EAN
          example: TH341G023-K1100XL000
        quantity:
          type: integer
          format: int32
          minimum: 0
          description: The number of liquidated items
        stock_location_id:
          type: string
          format: uuid
          description: The stock location Id
        liquidation_date:
          $ref: "#/components/schemas/Date"
        reporting_date:
          $ref: "#/components/schemas/Date"
        average_price_per_item:
          type: number
          format: double
        total_price:
          type: number
          format: double

