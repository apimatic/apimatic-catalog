{
  "openapi": "3.0.0",
  "info": {
    "title": "Ebanx API",
    "version": "1.0.0"
  },
  "definitions": {
    "event": {
      "type": "object",
      "required": [
        "type",
        "amount"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "deposit",
            "withdraw",
            "transfer"
          ]
        },
        "amount": {
          "type": "number"
        },
        "origin": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        }
      },
      "example": {
        "type": "transfer",
        "amount": 20,
        "origin": "100",
        "destination": "200"
      }
    },
    "processedEvent": {
      "type": "object",
      "properties": {
        "destination": {
          "type": "object",
          "required": [
            "id",
            "balance"
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "balance": {
              "type": "number"
            }
          }
        },
        "origin": {
          "type": "object",
          "required": [
            "id",
            "balance"
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "balance": {
              "type": "number"
            }
          }
        }
      },
      "example": {
        "origin": {
          "id": "100",
          "balance": 0
        },
        "destination": {
          "id": "200",
          "balance": 20
        }
      }
    }
  },
  "paths": {
    "/health_check": {
      "get": {
        "description": "API health check",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          }
        }
      }
    },
    "/balance": {
      "get": {
        "description": "Gets the balance for a given account",
        "parameters": [
          {
            "in": "query",
            "name": "account_id",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "20"
                }
              }
            }
          },
          "404": {
            "description": "An account with the specified ID was not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              }
            }
          }
        }
      }
    },
    "/reset": {
      "post": {
        "description": "Completely resets data storage",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          }
        }
      }
    },
    "/event": {
      "post": {
        "description": "Publishes an event to be processed",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/event"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Event processed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/processedEvent"
                }
              }
            }
          },
          "404": {
            "description": "An origin account with the specified ID was not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (client error)",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}
