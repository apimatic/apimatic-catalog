{
	"info": {
		"_postman_id": "8d8feb2b-9bd4-4a3f-9584-3c920a114cc8",
		"name": "Payrix  Integrated REST API Developer Guide",
		"description": "Welcome to Payrix's REST API for online payment services.\n\nOur API enables you to integrate your business software with Payrix's payment processing and management solutions. Adhering to a RESTful architecture, it will give you fast, flexible and scalable integration.\n\nWe make it easy for you to expand your business's capabilities with services such as transaction processing and reporting, payer record management and payment scheduling. You'll soon be able to accept one-off and recurring payments from credit/debit cards and bank debits, plus BPAY in Australia and ACH in the USA.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7621802"
	},
	"item": [
		{
			"name": "Getting Started",
			"item": [],
			"description": "There will be five stages to your integration with Payrix:\n\n1. Discuss your requirements with us\n2. Apply for your sandbox account and API credentials\n3. Development\n4. Certification\n5. Production\n    \n\nSo to get started, talk to us about your business and technology requirements. Our team of payment specialists will ensure you have access to the solutions that meet your needs.\n\nThey will also assist with your application for a sandbox account and API credentials.\n\n# Contact Us\n\n- Australia: 1-800 183089\n- New Zealand: 0800 480054 or\n- USA: 844 517 5981\n    \n\n[sales@payrix.com.au](https://mailto:sales@payrix.com.au)\n\n- Technical Integration Support\n    \n\n[customerintegration@payrix.com.au](https://mailto:customerintegration@payrix.com.au)\n\n# Versioning\n\nA new version of the API will be issued for any breaking changes.\n\nThe addition of new fields to request and response models are not considered breaking changes. New fields can therefore be added at any time.\n\nPlease ensure that your result and model parsing software is able to handle the appearance of new fields.\n\n# üìë Special Notes\n\nAnywhere in documentation where you see the üìë symbol.  \nWe are highlighting some additional information that will be important either during of after your integration. Please pay extra attention to these notes.\n\n# Getting your API credentials\n\nIf you haven't done so yet, first look at the Getting Started section so you know what you're getting into, then contact us to apply for a sandbox (test) account. Once your application is approved, we'll send API credentials to your nominated contact email address. These will allow you to send us API requests that require authorization for your sandbox account only: different credentials are required for production (live) accounts, which are available only after your development is finished and has been certified by us.\n\nYour Sandbox API credentials will consist of a user name (also known as the BusinessID) and a password.  \nYou can use your sandbox details with the Run in Postman link above. Remember to set your language for the Examples.\n\n## Special Notes üìë\n\nThe BusinessID is the same ID you pass to us through the POST LOGIN API call.  \nBoth the username and password will change when you have live credentials.\n\nSandbox BusinessIDs are typically less than 90,000.  \nLive Business IDs are typically less than 20,000.\n\nOnce you are ready to go live you will also recive a LIVE URL, that will need to replace the Sandbox one you test with.\n\n# Sandbox URLs\n\nurl: [https://sandbox.rest.paymentsapi.io](https://sandbox.rest.paymentsapi.io)\n\nurl-auth: [https://sandbox.auth.paymentsapi.io](https://sandbox.auth.paymentsapi.io)\n\n# Production / Live URLs\n\nOnce you have finished development and testing, we will run a quick sign off with you.  \nAllowing you to demo your software and the touch between the two systems.\n\nOnce signed off we can provide live credentials and URLs.\n\nPlease reach out to your Account Manager or [customerintegration@payrix.com.au](https://mailto:customerintegration@payrix.com.au) to schedule the integration sign off.",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "üè¥ PCI Compliance ",
			"item": [],
			"description": "Every organisation that handles card payments must comply with the Payment Card Industry Data Security Standard (PCI DSS). Annual compliance is mandated by the payment card schemes and banks.\n\nPCI DSS is a global standard, helping to protect cardholder data and tackle the growing threat of security breaches. It sets the operational and technical requirements for organisations handling card payments, and for software developers and manufacturers of payment applications and devices.\n\nPayrix Integrated's entire infrastructure is fully compliant with PCI DSS - we are certified at Level 1, the highest level of compliance. We are independently audited annually for compliance by qualified security assessors.\n\n## What this means for you?\n\nYour integration with Payrix will need to comply with PCI DSS. To help you with your integration, any  API requests that require PCI Compliance Level 1 are flagged throughout this documentation with the üè¥ symbol. You will only be able to use these calls if you have AOC for PCI Compliance Level 1. \n\nWhilst Payrix is PCI DSS compliant, if your organisation accepts card payments then it must also be fully compliant. Non-compliance could make you responsible for any losses through fraud, and you may also face considerable fines from the card schemes and banks.\n\nThere are four levels of compliance, dependant on how many transactions you process in a year. Find out how your organisation can reach compliance at the [PCI Security Standards Council website](https://www.pcisecuritystandards.org/pci_security/maintaining_payment_security)\n\nThe Payrix team can also advise you on any aspect of your PCI DSS compliance - [contact](#5e519f4a-1513-45cc-893a-0e80148463de) our Sales Team, and they may refer you to our Risk and Fraud Team for further advice.",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "API Responses",
			"item": [],
			"description": "Succesful statuses are coded `200` or `201`.\n\nFor non-successful statuses the API returns a stand error model in the response body with details of the error:\n\n```\n{\n  \"errorCode\": string,\n  \"errorMessage\": string,\n  \"errorDetail\": string\n}\n```\nFor more information refer to [error model](#414c017a-82d2-4000-8b69-30404e38699f) \n\nBelow is a list of the HTTP status codes that this API can return.\n\n<div class=\"is-table-wrapper\">\n   <table>\n      <thead>\n         <tr>\n            <th>Status code</th>\n            <th>Status type</th>\n         </tr>\n      </thead>\n      <tbody>\n         <tr>\n            <td><code>200 (OK)</code></td>\n            <td>The API call was successful.</td>\n         </tr>\n         <tr>\n            <td><code>201 (OK created)</code></td>\n            <td>The API call was successful, and a new resource was created.</td>\n         </tr>\n         <tr>\n            <td><code>400 (bad request)</code></td>\n            <td>There is a format or data error in the request that you submitted - see error model in response body for details.</td>\n         </tr>\n         <tr>\n         <td><code>401 (unauthorised)</code></td>\n         <td>The authentication bearer token was missing, invalid or expired.</td>\n         </tr>\n         <tr>\n            <td><code>403 (forbidden)</code></td>\n            <td>You tried to access a resource that your credentials are not authorized to access.</td>\n         </tr>\n         <tr>\n            <td><code>404 (not found)</code></td>\n            <td>No resource was found matching the ID or reference you provided.</td>\n         </tr>\n         <tr>\n            <td><code>409 (conflict)</code></td>\n            <td>Some functions require you to provide a unique reference to identify a new resource - this status will be returned when you provide a reference that is not unique when using one of these functions.</td>\n         </tr>\n         <tr>\n            <td><code>429 (too many requests)</code></td>\n            <td>A small number of API functions can only be accessed a maximum number of times in a given time period.  For all functions that have such a limit, the function description below will provide the details of what the limits are.</td>\n         </tr>\n         <tr>\n            <td><code>500 (internal server error)</code></td>\n            <td>A temporary or unexpected fault occurred, you can try the request again at a later time.</td>\n         </tr>\n      </tbody>\n   </table>\n</div>",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "üîí Authorizing Your Request",
			"item": [
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"Username\":\"{{Api-Username}}\",\r\n\"Password\":\"{{Api-UserKey}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url-auth}}/login",
							"host": [
								"{{url-auth}}"
							],
							"path": [
								"login"
							]
						},
						"description": "Use to authenticate your user details with the API and retrieve a bearer token that need to be included in the `Authorization` HTTP header of every API function call.\r\n\r\n## Special Notes üìë\r\nPLEASE NOTE: Each token expires in 1 hour, after which you will need to login to get a new token.\r\n\r\n## Post Body\r\n\r\n| Parameter | Type | Description |\r\n| --- | --- | --- |\r\n| `Username` | string | Your API username |\r\n| `Password` | string | Your API password |\r\n\r\n## Response Body\r\n\r\n| Parameter | Type | Description |\r\n| --- | --- | --- |\r\n| `access_token` | string | The bear token to embed in the `Authorization` HTTP header of every API function call  |\r\n| `expires_in` | string | Number of seconds until the token will expire. Default: 3600 (1 hour)  |\r\n| `token_type` | constant | Will always be set to \"Bearer\" |\r\n"
					},
					"response": [
						{
							"name": "Login",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"Username\": \"{{Api-Username}}\",\n  \"Password\": \"{{Api-UserKey}}\"\n}"
								},
								"url": {
									"raw": "{{url-auth}}/login",
									"host": [
										"{{url-auth}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 20 Feb 2020 00:47:06 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Expect-CT",
									"value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "567c779e9ee2fe78-SYD"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IjM4NkM3N.....gs6yufdyfdiukgjfdsDD\"\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\"\n}"
						}
					]
				}
			],
			"description": "To send us API requests that require authorization, your requests must include an HTTP `Authorization` header containing a `Bearer` token that you get from our authentication endpoint. You get this token by sending a [Login](#c27e24c3-e14e-473a-a6c4-113db3ac2e7c) request containing your API credentials. If authentication is successful, then the response to the [Login](#c27e24c3-e14e-473a-a6c4-113db3ac2e7c) request will contain the token value, lifetime in seconds, and token type; for example:\n\n``` json\n{\n   \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IjM4NkM3N.....gs6yufdyfdiukgjfdsDD\",\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\"\n}\n\n```\n\nNote that for clarity, the length of the `access_token` value shown above is much shorter than the actual length of `Bearer` tokens that you will get from our authentication endpoint.\n\nUnlike your sandbox (test) account API credentials, `Bearer` tokens that you get from our authentication endpoint are valid for a short time only. This makes it much harder for someone else to impersonate you, but does mean that you need to request new `Bearer` tokens as older tokens expire.\n\nThis API uses Bearer Tokens for authentication.\n\n## Special Notes üìë\n\nPLEASE NOTE: All functions requiring an HTTP Authorization header containing a Bearer token MUST be called 'server side\" and CANNOT be called client side.\n\nThe [Login](#c27e24c3-e14e-473a-a6c4-113db3ac2e7c) function is used to obtain a token. Once obtained, the token must be provided in the `Authorization` HTTP header of every API function call in the format: `bearer xxxxxxxxxxxxx`.\n\nIf the token is missing, invalid or expired, HTTP status `401 (Unauthorized)` will be returned.\n\nEach token expires in 1 hour, after which you will need to login to get a new token.\n\nTokens can be up to 3000 characters long.\n\nAll functions requiring an HTTP Authorization header containing a Bearer token will be flagged throughout this document with the üîí.\n\nSandbox Auth URL =  \n[https://sandbox.auth.paymentsapi.io](https://sandbox.auth.paymentsapi.io)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Building a Webpage",
			"item": [],
			"description": "This quickstart guides you through building an example webpage to accept payment card details from payers.\r\n\r\nThe system will tokenize the data on this page, it can be used to either add the card details entered to an existing payer. Or it can be used to Make a live card transaction against those details.\r\n\r\n[POST Add or update a Payers card details via token üîí](#c2821a72-08f2-4e38-8722-dabc5dd50821)\r\n\r\n[POST Make a live tokenized card transaction üîí](#14654018-76b6-4b4b-9ecd-a8e89a3b7af7)\r\n\r\n\r\n## Including the JavaScript\r\n\r\nIn the `<head>` element of your webpage, add a `<script>` tag to include the JavaScript that is used to tokenize payment card details. For the following, replace `{{api-url}}` with either the sandbox (test) or production (live) URL for the REST API, as appropriate:\r\n\r\n```html\r\n<head>\r\n    <script src=\"https://code.jquery.com/jquery-3.2.1.min.js\" integrity=\"sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=\" crossorigin=\"anonymous\"></script>\r\n    <script src=\"{{api-url}}/js/tokenize-card\"></script>\r\n</head>\r\n```\r\n\r\n## Adding the &lt;form&gt; element\r\n\r\nIn the `<body>` element of your webpage, add a `<form>` tag to contain the elements used to accept payment card details from payers. The `<form>` tag must include a `data-integrapay` attribute with a value of `PaymentForm` to allow the imported JavaScript to identify this element.\r\n\r\nAfter the JavaScript has tokenized the payment card details, the `<form>` will be submitted automatically. This can be used to trigger further actions; for example, causing the payer's web browser to navigate to the URL specified for the `action` attribute (for the following, replace `{{action-url}}` with your own URL):\r\n\r\n```html\r\n<body>\r\n    <form data-integrapay=\"PaymentForm\" method=\"POST\" action=\"{{action-url}}\">\r\n    </form>\r\n</body>\r\n```\r\n\r\nAs well as tokenizing the payment card details, the JavaScript will clear the elements used to accept the card number and security code (CCV/CVV) values. This helps to reduce your PCI compliance obligations by ensuring that your web server does not receive confidential information about payment cards.\r\n\r\n## Adding your business key\r\n\r\nIn the `<form>` element, add a hidden `<input>` tag to specify the `BusinessKey` of the organisation for which the payment card details are to be tokenized. The business key is a \"public\" identifier that allows the tokenization to occur without prior authentication; the tokenized details can only be accessed with authentication and authorisation.\r\n\r\nThe `<input>` tag must include a `data-integrapay` atrribute with a value of `BusinessKey` to allow the imported JavaScript to identifiy this element. For the following, replace `{{business-key}}` with the business key for the organisation:\r\n\r\n```html\r\n<input data-integrapay=\"BusinessKey\" type=\"hidden\" value=\"{{business-key}}\" />\r\n```\r\n\r\n## Special Notes üìë\r\n\r\nPlease note the `BusinessKey` aka `BusinessGUID`can be obtained using the [Check your business details](#5c874aef-7bcc-40bf-9eef-d043de71c35a) call. This will change when changed over to the Live system.\r\n\r\nPLEASE NOTE CCV cannot be captured for recurring payments.\r\nYou can use the code below to hide the CCV input filed.\r\nCCV is still required for Live or ‚ÄúReal Time‚Äù transactions, therefore you may need two input fields. \r\n```html\r\n<input id=\"cardCvv\" type=\"hidden\" value=\"000\" data-integrapay=\"CardCcv\" />\r\n```\r\n\r\n\r\n## Adding a token placeholder\r\n\r\nIn the `<form>` element, add a hidden `<input>` tag as a placeholder for the token that is created when the JavaScript tokenizes the payment card details. The `<input>` tag must include a `data-integrapay` attribute with a value of `CardToken` to allow the imported JavaScript to identify this element.\r\n\r\nAfter the JavaScript has tokenized the payment card details, the `value` attribute of the `<input>` tag will contain the token for the card. To access the token, either specify an `id` attribute for the `<input>` tag and read it using your own JavaScript, or specify a `name` attribute to include the token as a parameter when the `<form>` is submitted, as follows:\r\n\r\n```html\r\n<input data-integrapay=\"CardToken\" name=\"CardToken\" type=\"hidden\" />\r\n```\r\n\r\n## Adding elements for card details\r\n\r\nIn the <`form`> element, add text `<input>` tags to accept cardholder name, card number and security code (CCV/CVV) values, and `<select>` tags to accept card expiry month and year values. For each of the `<input>` tags, include an `autocomplete` attribute with a value of `off` to help avoid the accidental storage of confidential information about payment cards, which in turn helps to reduce your PCI compliance obligations.\r\n\r\nThe `<input>` and `<select>` tags must include a `data-integrapay` attribute to allow the imported JavaScript to identify them, as follows:\r\n\r\nCard Detail | Element Type | Attribute Value\r\n--- | --- | ---\r\ncardholder name | `<input>` | CardName\r\ncard number | `<input>` | CardNumber\r\ncard expiry month | `<select>` | CardExpiryMonth\r\ncard expiry year | `<select>` | CardExpiryYear\r\nsecurity code | `<input>` | CardCcv *Only for RealTime Transactions\r\n\r\nAfter the JavaScript has tokenized the payment card details, it will clear the elements used to accept the card number and security code values. To access the values of the other elements, either specify an `id` attribute for the tags and read them using your own JavaScript, or specify a `name` attribute for the tags to include them as parameters when the `<form>` is submitted, as follows:\r\n\r\n```html\r\n<input data-integrapay=\"CardName\" name=\"CardName\" type=\"text\" autocomplete=\"off\" />\r\n<input data-integrapay=\"CardNumber\" type=\"text\" autocomplete=\"off\" />\r\n<select data-integrapay=\"CardExpiryMonth\" name=\"CardExpiryMonth\">\r\n    <!-- card expiry month options -->\r\n</select>\r\n<select data-integrapay=\"CardExpiryYear\" name=\"CardExpiryYear\">\r\n    <!-- card expiry year options -->\r\n</select>\r\n<input data-integrapay=\"CardCcv\" type=\"text\" autocomplete=\"off\" />\r\n```\r\n\r\nIn the `<select>` element for the card expiry month, add an `<option>` tag for each calendar month that includes a `<value>` attribute with a value of the month number as two digits left-padded with zero, from `01` for January to `12` for December. The display text for each `<option>` is your choice, but we recommend using either the two-digit month number, as appears on payment cards, or an abbreviated month name, as follows:\r\n\r\n```html\r\n<select data-integrapay=\"CardExpiryMonth\" name=\"CardExpiryMonth\">\r\n    <option value=\"01\">Jan</option>\r\n    <option value=\"02\">Feb</option>\r\n    <option value=\"03\">Mar</option>\r\n    <option value=\"04\">Apr</option>\r\n    <option value=\"05\">May</option>\r\n    <option value=\"06\">Jun</option>\r\n    <option value=\"07\">Jul</option>\r\n    <option value=\"08\">Aug</option>\r\n    <option value=\"09\">Sep</option>\r\n    <option value=\"10\">Oct</option>\r\n    <option value=\"11\">Nov</option>\r\n    <option value=\"12\">Dec</option>\r\n</select>\r\n```\r\n\r\nIn the `<select>` element for card expiry year, add an `<option>` tag for each of the next five or more years, starting with the current year, that includes a `value` attribute of the year as four digits. The display text for each `<option>` is your choice, but we recommend using the four-digit year, as follows (at the time of writing, the year was 2018):\r\n\r\n```html\r\n<select data-integrapay=\"CardExpiryYear\" name=\"CardExpiryYear\">\r\n    <option value=\"2018\">2018</option>\r\n    <option value=\"2019\">2019</option>\r\n    <option value=\"2020\">2020</option>\r\n    <option value=\"2021\">2021</option>\r\n    <option value=\"2022\">2022</option>\r\n</select>\r\n```\r\n\r\n## Adding the error indicator\r\n\r\nIn the `<form>` element, add a `<div>` tag to contain the error indicator that is used to notify the payer if any problems occur while the JavaScript tokenizes the payment card details. The `<div>` tag must include a `data-integrapay`  attribute with a value of `Errors` to allow the imported JavaScript to identify this element.\r\n\r\nNote that if payers are notified about problems that occurred during the tokenization process, then the `<form>` is *not*  submitted automatically by the JavaScript. This allows payers a chance the fix the problem and try again.\r\n\r\n```html\r\n<div data-integrapay=\"Errors\"></div>\r\n```\r\n\r\n## Adding the progress indicator\r\n\r\nIn the `<form>` element, add a `<div>` tag to contain the progress indicator that is displayed while the JavaScript tokenizes the payment card details. The `<div>` tag must include a `data-integrapay` attribute with a value of `Processing` to allow the imported JavaScript to identify this element.\r\n\r\nThe process of tokenizing the payment card details includes asynchronous communication between the payer's web browser and IntegraPay web services. This can take a few moments to complete, so a progress indicator is displayed automatically to let payers know that your webpage is busy, not broken.\r\n\r\n```html\r\n<div data-integrapay=\"Processing\"></div>\r\n```\r\n\r\n## Adding the submit button\r\n\r\nIn the `<form>` element, add a `<button>` tag to allow payers to submit their credit card details for tokenization. The `<button>` tag must include a `data-integrapay` attribute with a value of `SubmitButton` to allow the imported JavaScript to identify this element.\r\n\r\nTo allow the JavaScript to tokenize the credit card details before the `<form>` is submitted, **the `<button>` tag must include a `type` attribute with a value of `button`; *not* a value of `submit`**. If the wrong value is specified, then tokenization will *not* occur and your web server will receive confidential information about payment cards, raising your PCI compliance obligations.\r\n\r\nThe display text for the `<button>` is your choice, but should be chosen to indicate the purpose for which the tokenized payment card details will be used. For example, if the next action taken by your website is to process a payment using the tokenized details, then we suggest using `Process Payment` for the display text, as follows:\r\n\r\n```html\r\n<button data-integrapay=\"SubmitButton\" type=\"button\">Process Payment</button>\r\n```\r\n\r\n## Samples\r\n\r\nTo download sample payment card webpages, see our [GitHub repo](https://github.com/IntegraPay/RestApi/tree/master/Webpages).",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "BPAY",
			"item": [
				{
					"name": "Payers CRN üîí",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/accounts/bpay",
							"host": [
								"{{url}}"
							],
							"path": [
								"businesses",
								"{{business-id}}",
								"payers",
								"{{payer-reference}}",
								"accounts",
								"bpay"
							]
						},
						"description": "Returns a payer/customer's BPAY Customer Reference Number (CRN) if they have one assigned to your Business.\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>payer-reference</code></td>\r\n        <td>Your unique reference that identifies the payer</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n\r\n###### Response Body\r\n\r\n[BPAY CRN Model](#8f662739-e2d0-43a3-86de-c468d34c4e83)"
					},
					"response": [
						{
							"name": "Payer BPay CRN for default BillerCode",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/accounts/bpay",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"payers",
										"{{payer-reference}}",
										"accounts",
										"bpay"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 05 Jul 2018 03:05:49 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Kestrel",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								},
								{
									"key": "X-SourceFiles",
									"value": "=?UTF-8?B?QzpcVXNlcnNcamltLm1jbGVhblxTb3VyY2VcUmVwb3NcSW50ZWdyYVBheS5TeXN0ZW1zXEludGVncmFQYXkuQXBpLlB1YmxpY1xidXNpbmVzc2VzXDEyMDZccGF5ZXJzXFAxLVVOSVFVRS1SRUZcYWNjb3VudHNcYnBheQ==?=",
									"name": "X-SourceFiles",
									"description": "Custom header"
								}
							],
							"cookie": [],
							"body": "{\"bPayBillerCode\":\"888333\",\"bPayCRN\":\"100000496\"}"
						}
					]
				},
				{
					"name": "a CRN to an existing Payer üîí",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/accounts/bpay",
							"host": [
								"{{url}}"
							],
							"path": [
								"businesses",
								"{{business-id}}",
								"payers",
								"{{payer-reference}}",
								"accounts",
								"bpay"
							]
						},
						"description": "Assigns a BPAY Customer Reference Number (CRN) to a Customer within your business.\r\n\r\nIf the customer already has a BPAY CRN assigned then it will be returned and no new assignment will occur.\r\n\r\n\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>payer-reference</code></td>\r\n        <td>Your unique reference that identifies the payer</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Post Body\r\n\r\nEmpty\r\n\r\n###### Response Body\r\n\r\n[BPAY CRN Model](#8f662739-e2d0-43a3-86de-c468d34c4e83)"
					},
					"response": [
						{
							"name": "Payer BPay Assign CRN",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/accounts/bpay",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"payers",
										"{{payer-reference}}",
										"accounts",
										"bpay"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 05 Jul 2018 03:44:11 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Kestrel",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								},
								{
									"key": "X-SourceFiles",
									"value": "=?UTF-8?B?QzpcVXNlcnNcamltLm1jbGVhblxTb3VyY2VcUmVwb3NcSW50ZWdyYVBheS5TeXN0ZW1zXEludGVncmFQYXkuQXBpLlB1YmxpY1xidXNpbmVzc2VzXDEyMDZccGF5ZXJzXFAxLVVOSVFVRS1SRUZcYWNjb3VudHNcYnBheQ==?=",
									"name": "X-SourceFiles",
									"description": "Custom header"
								}
							],
							"cookie": [],
							"body": "{\"bPayBillerCode\":\"888333\",\"bPayCRN\":\"100000496\"}"
						}
					]
				},
				{
					"name": "all CRNS üîí",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/businesses/{{business-id}}/bpay",
							"host": [
								"{{url}}"
							],
							"path": [
								"businesses",
								"{{business-id}}",
								"bpay"
							]
						},
						"description": "Can be used for searching all BPAY CRNs that have been assigned to your business. A maximum of 200 payers can be returned in one call (see skip/take parameters below).\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Querystring Options\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>BillerCode</code></td>\r\n        <td>string</td>\r\n        <td>BPAY Biller Code</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>CRN</code></td>\r\n        <td>string</td>\r\n        <td>BPAY Unique Customer Reference Number (CRN)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>Reference</code></td>\r\n        <td>string</td>\r\n        <td>Unique reference for identifying the BPAY CRN assignment request</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>Description</code></td>\r\n        <td>string</td>\r\n        <td>Description of the purpose of the CRN</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>PayerReference</code></td>\r\n        <td>string</td>\r\n        <td>Your unique reference associated with a Payer</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>InvoiceType</code></td>\r\n        <td><a href=\"#821acfa4-fdb4-4552-8996-55cf034f4c23\">BPAY Invoice Type</a></td>\r\n        <td>Integrated accounting system invoice type</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>InvoiceId</code></td>\r\n        <td>string</td>\r\n        <td>The acocunting system's unique reference/id for an invoice</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>InvoiceReference</code></td>\r\n        <td>string</td>\r\n        <td>The reference to identify the invoice being paid within your systems</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>Amount</code></td>\r\n        <td>decimal</td>\r\n        <td><i>iCRNs Only</i> - the amount the iCRN was restricted to</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>ExpiryDate</code></td>\r\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">Date/Time</a></td>\r\n        <td><i>iCRNs Only</i> - the due date the iCRN was restricted to</td>\r\n    </tr>\r\n      <tr>\r\n        <td><code>Skip</code></td>\r\n        <td>integer</td>\r\n        <td>Number of records to not return (offset) when paging results (Default: 0)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>Take</code></td>\r\n        <td>integer</td>\r\n        <td>Number of records to return per call when paging results (Default: 200)</td>\r\n      </tr>\r\n     </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Response Body\r\n\r\n[BPAY CRN Search](#077bac18-f664-407a-b72d-4681e2dfc28e)"
					},
					"response": [
						{
							"name": "Find BPAY CRNS ALL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/bpay",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"bpay"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "Find BPAY CRNS with Skip and take",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/bpay?Skip=150&Take=500",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"bpay"
									],
									"query": [
										{
											"key": "Skip",
											"value": "150",
											"description": "Number of records to not return (offset) when paging results (Default: 0)"
										},
										{
											"key": "Take",
											"value": "500",
											"description": "Number of records to return per call when paging results (Default: 200)"
										}
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "and assign new CRN üîí",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Reference\":\"a01264a4-09b0-41e9-bfa9-5e58690fda63\",\r\n  \"Description\":\"Description of BPay reference\",\r\n  \"PayerReference\":\"P13-UNIQUE-REF\",\r\n  \"InvoiceType\": \"XERO\",\r\n  \"InvoiceId\":\"b5c45415-6910-4619-bd1d-762ac949ddc4\",\r\n  \"InvoiceReference\":\"99f82591-4173-41b2-8336-5ab963f9a820\",\r\n  \"restrictToAmount\":\"300.00\",\r\n  \"restrictToDueDate\":\"2019-11-18T22:00:00.00\",\r\n  \"Audit\":\r\n    {\r\n    \"Username\":\"YourApiUsername\",\r\n    \"UserIP\":\"YourIPAddress\"\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{url}}/businesses/{{business-id}}/bpay",
							"host": [
								"{{url}}"
							],
							"path": [
								"businesses",
								"{{business-id}}",
								"bpay"
							]
						},
						"description": "This function can be used to generate and assigned a new BPAY CRN or iCRN. \n\nDepending on what options you choose the CRN can be linked to a payer, a single transaction, or to an invoice in one of the accounting systems that are integrated with Payrix Integrated.\nThis method will also allow for restricting an iCRN by date, amount or both.\n\nIf a BPAY CRN has previously been assigned for the reference/invoice you have specified, the previous CRN will be returned.\n\n## Special Notes üìë\nThe restrict to date has a maximum of 365 days in the future.\n\nYour ‚ÄúRestriction‚Äù option, date, amount or date and amount is defined by the BPay account. You will only be able to use one option.\nPlease contact your account manager for further details. \n\n\n###### Route\n\n<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Parameter</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>business-id</code></td>\n        <td>The business you want to access</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n###### Post Body\n\n[BPAY CRN Request Model](#abb387ea-4ec8-4880-a6cc-17197ddf98be)\n\n###### Response Body\n\n[BPAY CRN Model](#8f662739-e2d0-43a3-86de-c468d34c4e83)"
					},
					"response": [
						{
							"name": "Generate and assign new iCRN üîí",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Reference\":\"a01264a4-09b0-41e9-bfa9-5e58690fda78\",\r\n  \"Description\":\"Description of BPay reference\",\r\n  \"PayerReference\":\"P13-UNIQUE-REF\",\r\n  \"restrictToAmount\":\"365.00\",\r\n  \"restrictToDueDate\":\"2019-11-18T22:00:00.00\",\r\n  \"Audit\":\r\n    {\r\n    \"Username\":\"YourApiUsername\",\r\n    \"UserIP\":\"YourIPAddress\"\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/bpay",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"bpay"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 05 Apr 2019 04:21:19 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Expect-CT",
									"value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "4c28bc0aeaa55dcc-BNE"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"billerCode\": \"333888\",\n    \"crn\": \"78608200002119\"\n}"
						}
					]
				}
			],
			"description": "## Special Notes üìë\r\nBPay have  branding guidelines on how the BPAY and BPAY View logos and word marks need to appear in various mediums, please refer to their documentation here: \r\n[BPAY Branding Guide](https://www.bpay.com.au/Help-Centre/Large-Business-Users/Brand-Guidelines-Logos.aspx)\r\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "BSB Search",
			"item": [
				{
					"name": "BSBsüîí",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/bsbs/{{country}}/{{BSB}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"bsbs",
								"{{country}}",
								"{{BSB}}"
							]
						},
						"description": "###### Route\n\n<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Parameter</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>country</code></td>\n        <td>3-digit ISO country code for the country in which the account is registered</td>\n      </tr>\n            <tr>\n        <td><code>bsb</code></td>\n        <td>Bank account branch identifier (e.g. BSB)</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n###### Response Body\n\n[BSB Model](#bed6411a-7a95-4747-9c6e-4a97968a747b)"
					},
					"response": [
						{
							"name": "BSB Lookup üîí",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/bsbs/{{country}}/{{BSB}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"bsbs",
										"{{country}}",
										"{{BSB}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 04 Feb 2019 04:14:07 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Expect-CT",
									"value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "4a3a4efeb9845d9c-BNE"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"bsb\": \"032045\",\n    \"branch\": \"275 George Street\",\n    \"country\": \"AUS\",\n    \"bank\": \"WBC\",\n    \"address\": \"275 George Street\",\n    \"suburb\": \"Sydney\",\n    \"state\": \"NSW\",\n    \"postCode\": \"2000\"\n}"
						}
					]
				}
			],
			"description": "Used for searching bank details, such as name and address, based on a BSB number.\n\n## Special Notes üìë\nThis data is currently only available in AUS and NZL.\n\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Business Details",
			"item": [
				{
					"name": "your business details üîí",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/businesses/{{business-id}}/status",
							"host": [
								"{{url}}"
							],
							"path": [
								"businesses",
								"{{business-id}}",
								"status"
							]
						},
						"description": "\r\n###### Route\r\n\r\nParameter |  Description\r\n--- | ---\r\n`business-id` | The business you want to access\r\n\r\n###### Response Body\r\n\r\n[Business Details Model](#ae576ad8-2d41-445d-8e85-00f657a7670d)\r\n"
					},
					"response": [
						{
							"name": "Business Info",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/status",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 29 Jun 2018 03:21:37 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Kestrel",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								},
								{
									"key": "X-SourceFiles",
									"value": "=?UTF-8?B?QzpcSW50ZWdyYVBheVxHaXRcSW50ZWdyYVBheS5TeXN0ZW1zXEludGVncmFQYXkuQXBpLlB1YmxpY1xidXNpbmVzc2VzXDEyMDZcc3RhdHVz?=",
									"name": "X-SourceFiles",
									"description": "Custom header"
								}
							],
							"cookie": [],
							"body": "{\n    \"businessId\": \"1234\",\n    \"businessName\": \"Test Business Ltd\",\n    \"status\": \"OK\"\n}"
						}
					]
				}
			],
			"description": "This function has two purposes:\r\nIt can be used as a way to check that your computer has an open communication path to the web service and is able to reach it.\r\nIt can also be used to check that the username/password you are using is for the correct business.\r\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Card Bin Search",
			"item": [
				{
					"name": "card issuer information üîí",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/card-bins/{{card-bin}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"card-bins",
								"{{card-bin}}"
							]
						},
						"description": "The first 6-digits of a credit card number is known as the Bank Identification Number (BIN). This function allows you to pass in a BIN number to obtain information on the card type and the bank and country who issued it.\r\n\r\n## Special Notes üìë\r\nThis data is provided to us on a regular basis. We will update this data as often as possible, but be aware that we do not guarantee the accuracy of all the data.\r\n\r\n[Card Bin Model](#b78492c2-8720-4351-b0d0-6d031c9ff9ee)"
					},
					"response": [
						{
							"name": "Get Card BIN",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/card-bins/{{card-bin}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"card-bins",
										"{{card-bin}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "CF-RAY",
									"value": "44e2f925ecd55db4-BNE",
									"name": "CF-RAY",
									"description": "Custom header"
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Aug 2018 05:34:56 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expect-CT",
									"value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"",
									"name": "Expect-CT",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "cloudflare",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"httpOnly": true,
									"domain": "paymentsapi.io",
									"path": "/",
									"secure": true,
									"value": "d3b8e3dd4bb4fe1dc774d59b03dd0a2a61532998355",
									"key": "__cfduid"
								}
							],
							"body": "{\"cardBin\":434404,\"countryID\":\"AUS\",\"cardBrand\":\"VISA\",\"cardType\":\"CREDIT\",\"cardCategory\":\"\",\"bank\":\"ANZ - AUSTRALIA AND NEW ZEALAND BANKING GROUP\"}"
						}
					]
				}
			]
		},
		{
			"name": "Invoices",
			"item": [
				{
					"name": "Add / Remove Invoice",
					"item": [
						{
							"name": "Add a new invoice üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJDOEY2OTg4RTM4RDRCNDlCRTQwQ0NGQkZBMUE2QTNBNTI0QkQ2ODFSUzI1NiIsInR5cCI6ImF0K2p3dCIsIng1dCI6IkxJOXBpT09OUzBtLVFNejctaHBxT2xKTDFvRSJ9.eyJuYmYiOjE2ODQyODM4OTUsImV4cCI6MTY4NDI4NzQ5NSwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3QucHltbnRzLmNvbS5hdTo4MDAxIiwiYXVkIjoiaW50ZWdyYXBheS5hcGkucHVibGljIiwiY2xpZW50X2lkIjoiaW50ZWdyYXBheS5hcGkucHVibGljLmNsaWVudCIsInN1YiI6IjE4OTkuMTIzNCIsImF1dGhfdGltZSI6MTY4NDI4Mzg5NSwiaWRwIjoibG9jYWwiLCJlbWFpbCI6ImNyYWlnLmNvbGxpbnNAcGF5cml4LmNvbS5hdSIsIkJ1c2luZXNzSUQiOiIxODk5IiwiQnVzaW5lc3NOYW1lIjoiQ3JhaWcgU2FuZGJveCIsIkJ1c2luZXNzVHlwZUlEIjoiMyIsIlVzZXJuYW1lIjoiMTg5OS4xMjM0Iiwicm9sZSI6WyJCUGF5LkFzc2lnbiIsIkJQYXkuU2VhcmNoIiwiQnVzaW5lc3MuU3RhdHVzIiwiQ29uZmlnLkNhcmRCaW5zIiwiSW52b2ljaW5nLlNhdmUiLCJJbnZvaWNpbmcuU2VhcmNoIiwiSW52b2ljaW5nLlZpZXciLCJQYXllci5BY2NvdW50LkRlbGV0ZSIsIlBheWVyLkFjY291bnQuU2F2ZS5BbGwiLCJQYXllci5BY2NvdW50LlNhdmUuQmFuayIsIlBheWVyLkFjY291bnQuU2F2ZS5CUGF5IiwiUGF5ZXIuQWNjb3VudC5TYXZlLkNhcmQiLCJQYXllci5BY2NvdW50LlNhdmUuQ2FyZC5Ub2tlbiIsIlBheWVyLkFjY291bnQuVmlldyIsIlBheWVyLkFkZCIsIlBheWVyLlNhdmUiLCJQYXllci5TYXZlLlN0YXR1cyIsIlBheWVyLlNjaGVkdWxpbmcuU2F2ZSIsIlBheWVyLlNjaGVkdWxpbmcuVmlldyIsIlBheWVyLlNlYXJjaCIsIlBheWVyLlZpZXciLCJSZXBvcnRzLlNldHRsZW1lbnQiLCJTY2hlZHVsaW5nLlNlYXJjaCIsIlRva2Vucy5HZW5lcmF0ZSIsIlRva2Vucy5WaWV3IiwiVHJhbnNhY3Rpb25zLlByb2Nlc3MuQ2FyZCIsIlRyYW5zYWN0aW9ucy5Qcm9jZXNzLkNhcmQuM0RTIiwiVHJhbnNhY3Rpb25zLlByb2Nlc3MuQ2FyZC5DYXB0dXJlIiwiVHJhbnNhY3Rpb25zLlByb2Nlc3MuQ2FyZC5GcmF1ZENoZWNrIiwiVHJhbnNhY3Rpb25zLlByb2Nlc3MuQ2FyZC5SZWZ1bmQiLCJUcmFuc2FjdGlvbnMuUHJvY2Vzcy5DYXJkLlN0b3JlZCIsIlRyYW5zYWN0aW9ucy5Qcm9jZXNzLkNhcmQuVG9rZW4iLCJUcmFuc2FjdGlvbnMuU2VhcmNoIiwiVHJhbnNhY3Rpb25zLlNlYXJjaC5OZXdTdGF0dXMiLCJUcmFuc2FjdGlvbnMuVmlldyJdLCJqdGkiOiJDQjlBRUQ4QTk0RTFGOTRCOEFBNTFGMTAwNjQyM0JEMyIsImlhdCI6MTY4NDI4Mzg5NSwic2NvcGUiOlsiaW50ZWdyYXBheS5hcGkucHVibGljIl0sImFtciI6WyJBdXRoZW50aWNhdGVkIl19.dJzOYvOuLbnOUrvZJJejt4dmBEqEJV1Nc21SnH8gAMSFfUNO1ABR7Xdbxm5SrzcGGx3-cJV9eIkC7IF1E3Q8RphUogQ6tEmjvQ7dvdVTpTJODuwU0YLGaalGiWipqpfGONiNYelevvwrLtUV4iN8cWl55ZjpY_MfJciijUdfWxksiPzftO6EhGGGawjsCBmTEuRqS7Ajr7EtzY4ampkt51ZUu3nVlCD-VwRhGV39sJrGHzmfsbrNh45PX1e0NwVLqpVu9vFq45X4lK3j3H8Iz_lEqFy-pl28dOVujH_0jDJJ67o6Tbs-_rByx1vNqcn1qf9yyGigCNLucZ6C2WokvA",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"invoiceId\": \"48624a42-5ec3-46b4-a4c1-27e29dc00b04\",\n    \"invoiceNumber\": \"INV-001\",\n    \"orderNumber\": \"ORD-001\",\n    \"date\": \"2023-05-12\",\n    \"dueDate\": \"2023-06-12\",\n    \"lines\": [\n        \"Goods and/or services\",\n        \"listed on invoice INV-001\"\n    ],\n    \"amount\": 100.00,\n    \"url\": \"https://www.payrix.com.au/\",\n    \"payer\": {\n        \"familyOrBusinessName\": \"Smith\",\n        \"givenName\": \"John\",\n        \"email\": \"no-reply@payrix.com.au\",\n        \"phone\": \"07 3040 4320\",\n        \"mobile\": \"0412 345 678\",\n        \"billingAddress\": {\n            \"line1\": \"Level 1, Building 2\",\n            \"line2\": \"2 Clunies Ross Court\",\n            \"suburb\": \"Eight Mile Plains\",\n            \"state\": \"Qld\",\n            \"postCode\": \"4113\",\n            \"country\": \"Australia\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/invoices",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"invoices"
									]
								},
								"description": "Adds a new invoice to the system.\r\n\r\nNot Idempotent - returns an error if an invoice with the same `InvoiceId` already exists.\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Post Body\r\n\r\n[Invoice Input Model](#613112c1-f874-49e8-bf98-f7861b5ab957)\r\n\r\n###### Response Body\r\n\r\n[Invoice Search Model](#efaaa1a7-f970-471e-9035-70a550b13d6d)\r\n"
							},
							"response": [
								{
									"name": "Add New Invoice Payment (Ex1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"invoiceId\": \"1284D7F6-C6C4-4567-B66F-263836F5507A\",\n  \"invoiceNumber\": \"INV-22222\",\n  \"orderNumber\": \"ORD-2222\",\n  \"date\": \"2018-06-12\",\n  \"dueDate\": \"2018-06-12\",\n  \"lines\": [\n    \"Goods and/or services\",\n    \"listed on invoice INV-2222222\"\n  ],\n  \"amount\": 2222.00,\n  \"url\": \"https://www.payrix.com.au/\",\n  \"payer\": {\n    \"familyOrBusinessName\": \"Smith\",\n    \"givenName\": \"John\",\n    \"email\": \"no-reply@payrix.com.au\",\n    \"phone\": \"07 3040 4320\",\n    \"mobile\": \"0412 345 678\",\n    \"billingAddress\": {\n      \"line1\": \"Level 1, Building 2\",\n      \"line2\": \"2 Clunies Ross Court\",\n      \"suburb\": \"Eight Mile Plains\",\n      \"state\": \"Qld\",\n      \"postCode\": \"4113\",\n      \"country\": \"Australia\"\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/invoices",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"invoices"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Void an existing invoice üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/invoices/{{invoice-id}}/void",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"invoices",
										"{{invoice-id}}",
										"void"
									]
								},
								"description": "Voids an existing invoice in the system.\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>invoice-id</code></td>\r\n        <td>The GUID that identifies the invoice</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Post Body\r\n\r\n[Invoice Void Model](#e37168b1-73b5-4604-a6de-20ad9f20fbc1)\r\n\r\n###### Response Body"
							},
							"response": []
						}
					],
					"description": "Regardless of if you are creating a new payer or referencing an existing payer, all requests must include at least an `Invoice Number`, `Order Number`, `Lines` and `Amount`. See [Invoice Input Model](#613112c1-f874-49e8-bf98-f7861b5ab957)\n\nFor more details on new and existing  players see: [Payers](#982c68a0-bd3b-45d6-afc4-ae2de24cc3f9)\n\n`InvoiceId` Is an optional GUID that uniquely identifies the invoice. If this value is not specified, a new GUID will be assigned to the invoice automatically.\n\nRequest with new payer:\n\n```json\n{\n  \"invoiceId\": \"1284D7F6-C6C4-4567-B66F-263836F5507A\",\n  \"invoiceNumber\": \"INV-001\",\n  \"orderNumber\": \"ORD-001\",\n  \"date\": \"2018-06-12\",\n  \"dueDate\": \"2018-06-12\",\n  \"lines\": [\n    \"Goods and/or services\",\n    \"listed on invoice INV-001\"\n  ],\n  \"amount\": 10.00,\n  \"url\": \"https://www.payrix.com.au/\",\n  \"payer\": {\n    \"familyOrBusinessName\": \"Smith\",\n    \"givenName\": \"John\",\n    \"email\": \"no-reply@payrix.com.au\",\n    \"phone\": \"07 3040 4320\",\n    \"mobile\": \"0412 345 678\",\n    \"billingAddress\": {\n      \"line1\": \"Level 1, Building 2\",\n      \"line2\": \"2 Clunies Ross Court\",\n      \"suburb\": \"Eight Mile Plains\",\n      \"state\": \"Qld\",\n      \"postCode\": \"4113\",\n      \"country\": \"Australia\"\n    }\n  }\n}\n```\n\nRequest with existing  payer:\n\n\n\n```json\n{\n  \"invoiceId\": \"1284D7F6-C6C4-4567-B66F-263836F5507A\",\n  \"invoiceNumber\": \"INV-001\",\n  \"orderNumber\": \"ORD-001\",\n  \"date\": \"2018-07-31\",\n  \"dueDate\": \"2018-10-12\",\n  \"lines\": [\n    \"Goods and/or services\",\n    \"listed on invoice INV-001\"\n  ],\n  \"amount\": 10.00,\n  \"url\": \"https://www.paryix.com.au/\",\n  \"payer\": {\n\"UniqueReference\": \"P1-UNIQUE-REF\"\n  }\n}\n```\n\n## Checking the result\n\nThe result is indicated by the response HTTP status code: `201` (`Created`) indicates that the Invoice was added successfully.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Find invoice Details",
					"item": [
						{
							"name": "Find details on specific invoice üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/invoices/{{invoice-reference}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"invoices",
										"{{invoice-reference}}"
									]
								},
								"description": "Returns information of a specific invoice\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>invoice-reference</code></td>\r\n        <td>The GUID that identifies the invoice</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Response Body\r\n\r\n[Invoice Search Model](#efaaa1a7-f970-471e-9035-70a550b13d6d)\r\n"
							},
							"response": []
						},
						{
							"name": "Search for multiple invoices üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/invoices",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"invoices"
									]
								},
								"description": "Used for searching all previously added invoices. A maximum of 200 invoices can be returned in one call (see skip/take parameters below).\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Querystring Options\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>invoiceId</code></td>\r\n        <td>guid</td>\r\n        <td>The GUID that identifies the invoice</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>invoiceNumber</code></td>\r\n        <td>string</td>\r\n        <td>The invoice number</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>invoiceStatus</code></td>\r\n        <td><a href=\"#2746d588-2895-4825-81a3-5f89408a5799\">Invoice Status Code</a></td>\r\n        <td>Search based on the current status of the invoice</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>statusTimeFrom</code></td>\r\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">ISO 8601 Date/Time</a></td>\r\n        <td>Search for invoice status changes on or after this date/time</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>statusTimeTo</code></td>\r\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">ISO 8601 Date/Time</a></td>\r\n        <td>Search for invoice status changes on or before this date/time</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>skip</code></td>\r\n        <td>integer</td>\r\n        <td>Number of records to not return (offset) when paging results (Default: 0)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>take</code></td>\r\n        <td>integer</td>\r\n        <td>Number of records to return per call when paging results (Default: 200)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n\r\n###### Response Body\r\n\r\n[Invoice Search Model](#efaaa1a7-f970-471e-9035-70a550b13d6d)"
							},
							"response": [
								{
									"name": "Search for multiple invoices ALL",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/invoices?invoiceId=1284D7F6-C6C4-4567-B66F-263836F5507A&invoiceStatus=PENDING",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"invoices"
											],
											"query": [
												{
													"key": "invoiceId",
													"value": "1284D7F6-C6C4-4567-B66F-263836F5507A",
													"description": "The GUID that identifies the invoice"
												},
												{
													"key": "invoiceStatus",
													"value": "PENDING",
													"description": "Search based on the current status of the invoice"
												}
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": null,
									"cookie": [],
									"body": null
								},
								{
									"name": "Search for multiple invoices with options",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/invoices?invoiceNumber=INV-001&invoiceStatus=PENDING",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"invoices"
											],
											"query": [
												{
													"key": "invoiceNumber",
													"value": "INV-001",
													"description": "The invoice number"
												},
												{
													"key": "invoiceStatus",
													"value": "PENDING",
													"description": "Search based on the current status of the invoice"
												}
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						}
					]
				}
			],
			"description": "Invoices allow for generation of a payment reminder URL, this can then be embedded in an email and sent to a client. The email holds the \"Pay Now\" button, that links to the hosted page for secure payments.\n\nThe invoices can remain in the system with multiple statuses including Pending, Over Due and Paid.\n\n\n\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Payers",
			"item": [
				{
					"name": "Add and Edit a Payer",
					"item": [
						{
							"name": "Add a new Payer üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n     \"UniqueReference\": \"P1-UNIQUE-REF\",\r\n      \"GroupReference\": \"P1-UNIQUE-REF\",\r\n      \"FamilyOrBusinessName\": \"Citizen\",\r\n      \"GivenName\": \"Jane\",\r\n      \"Email\": \"CustomerIntegration@payrix.com.au\",\r\n      \"Phone\": \"0733332222\",\r\n      \"Mobile\": \"0411228833\",\r\n      \"Address\": {\r\n        \"Line1\": \"1 Test St\",\r\n        \"Line2\": \"Test Bulding\",\r\n        \"Suburb\": \"Testville\",\r\n        \"State\": \"QLD\",\r\n        \"PostCode\": \"4001\",\r\n        \"Country\": null\r\n    },\r\n    \"ExtraInfo\": {\r\n      \"XeroAutoDebitEnabled\": false\r\n    },\r\n    \"Audit\": {\r\n      \"Username\": \"Example-User\",\r\n      \"UserIP\": \"1.2.3.4\"\r\n    }\r\n  }"
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/payers",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"payers"
									]
								},
								"description": "Adds a new payer to the system.\r\n\r\nNot Idempotent - returns an error if a payer with the same unique reference already exists.\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Post Body\r\n\r\n[Payer Input Model](#253a8278-5872-4808-b98c-634bb4fcc0da)\r\n\r\n###### Response Body\r\n\r\n[Payer ID Model](#f9988f13-3746-4ceb-aa20-8eb22d85883d)\r\n"
							},
							"response": [
								{
									"name": "Payer Add",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"UniqueReference\": \"P1-UNIQUE-REF\",\r\n    \"GroupReference\": \"P1-GROUP-REF\",\r\n    \"FamilyOrBusinessName\": \"Surname\",\r\n    \"GivenName\": \"First Name\",\r\n    \"Email\": \"test@test.com\",\r\n    \"Phone\": \"0733331111\",\r\n    \"Mobile\": \"0411123123\",\r\n    \"Address\": {\r\n      \"Line1\": \"1 Test St\",\r\n      \"Line2\": \"Test Building\",\r\n      \"Suburb\": \"Testville\",\r\n      \"State\": \"QLD\",\r\n      \"PostCode\": \"4001\",\r\n      \"Country\": \"AUS\"\r\n    },\r\n    \"ExtraInfo\": {\r\n      \"XeroAutoDebitEnabled\": false\r\n    },\r\n    \"Audit\": {\r\n      \"Username\": \"Example-User\",\r\n      \"UserIP\": \"1.2.3.4\"\r\n    }\r\n  }"
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/payers",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"payers"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"payerId\": \"135032\",\n    \"uniqueReference\": \"P1-UNIQUE-REF\"\n}"
								}
							]
						},
						{
							"name": "Update an existing payer üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n         \"UniqueReference\": \"P1-UNIQUE-REF\",\r\n      \"GroupReference\": \"P1-UNIQUE-REF\",\r\n      \"FamilyOrBusinessName\": \"Citizen\",\r\n      \"GivenName\": \"Jane\",\r\n      \"Email\": \"CustomerIntegration@payrix.com.au\",\r\n      \"Phone\": \"0733332222\",\r\n      \"Mobile\": \"0411228833\",\r\n      \"Address\": {\r\n        \"Line1\": \"1 Test St\",\r\n        \"Line2\": \"Test Bulding\",\r\n        \"Suburb\": \"Testville\",\r\n        \"State\": \"QLD\",\r\n        \"PostCode\": \"4001\",\r\n        \"Country\": null\r\n    },\r\n    \"ExtraInfo\": {\r\n      \"XeroAutoDebitEnabled\": false\r\n    },\r\n    \"Audit\": {\r\n      \"Username\": \"Example-User\",\r\n      \"UserIP\": \"1.2.3.4\"\r\n    }\r\n  }"
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"payers",
										"{{payer-reference}}"
									]
								},
								"description": "Updates the payer with the given unique reference with the details provided.\r\n\r\nIdempotent - if a payer with the unique reference doesn't exist it will be created.\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>payer-reference</code></td>\r\n        <td>Your unique reference that identifies the payer</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Post Body\r\n\r\n[Payer Input Model](#253a8278-5872-4808-b98c-634bb4fcc0da)\r\n\r\n###### Response Body\r\n\r\n[Payer ID Model](#f9988f13-3746-4ceb-aa20-8eb22d85883d)\r\n"
							},
							"response": [
								{
									"name": "Payer Update",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"UniqueReference\": \"P1-UNIQUE-REF\",\r\n    \"GroupReference\": \"P1-GROUP-REF\",\r\n    \"FamilyOrBusinessName\": \"Surname\",\r\n    \"GivenName\": \"First Name\",\r\n    \"Email\": \"test@test.com\",\r\n    \"Phone\": \"0733332222\",\r\n    \"Mobile\": \"0411123123\",\r\n    \"Address\": {\r\n      \"Line1\": \"1 Test St\",\r\n      \"Line2\": \"Test Building\",\r\n      \"Suburb\": \"Testville\",\r\n      \"State\": \"QLD\",\r\n      \"PostCode\": \"4001\",\r\n      \"Country\": \"AUS\"\r\n    },\r\n    \"ExtraInfo\": {\r\n      \"XeroAutoDebitEnabled\": false\r\n    },\r\n    \"Audit\": {\r\n      \"Username\": \"Example-User\",\r\n      \"UserIP\": \"1.2.3.4\"\r\n    }\r\n  }"
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"payers",
												"{{payer-reference}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"payerId\": \"135032\",\n    \"uniqueReference\": \"P1-UNIQUE-REF\"\n}"
								}
							]
						},
						{
							"name": "Change a Payers status üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"NewStatus\": \"A\",\r\n    \"NewStatusChangeDate\": null,\r\n    \"Audit\": {\r\n      \"Username\": \"Example-User\",\r\n      \"UserIP\": \"1.2.3.4\"\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/status",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"payers",
										"{{payer-reference}}",
										"status"
									]
								},
								"description": "Allows you to change the processing status of an existing payer.  It can be used to set a payer to Active, Suspended or Cancelled statuses.\r\n\r\n## Special Notes üìë\r\nSome statuses are restricted due to processing reasons, so some statues will not be able to be changed by using this function.\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>payer-reference</code></td>\r\n        <td>Your unique reference that identifies the payer</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Post Body\r\n\r\n[Payer Change Status Model](#f37feb2e-c02d-4650-abab-5c1fc7d7cb19)\r\n\r\n###### Response Body"
							},
							"response": []
						},
						{
							"name": "Add or update a Payers bank account details üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"AccountBranch\": \"123456\",\r\n    \"AccountNumber\": \"123456789\",\r\n    \"AccountName\": \"Test Bank Account\",\r\n    \"AccountType\": null,\r\n    \"Audit\": {\r\n      \"Username\": \"Example-User\",\r\n      \"UserIP\": \"1.2.3.4\"\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/accounts/bank-account",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"payers",
										"{{payer-reference}}",
										"accounts",
										"bank-account"
									]
								},
								"description": "Used to save a bank account to the given payer for use with scheduled debits.\n\nA payer can only have one payment method account - calling this function will replace any existing bank account or card attached to this payer with the new bank account.\n\nIdempotent - if the payer already has a payment method it will be replaced, otherwise a new account will be added.\n\nüìë If there is no transaction on saved payment details for 12 months, the payer status will be changed to ‚ÄúCancelled ‚Äì cancelled due to inactivity ‚Äú. 1 month after this (13 months total), payment details will be removed. After 12 months transactions will not be possible unless Payer Status is changed.\n\nPlease note if using this call as part of electronic Direct Debit Request (eDDR) or to update bank details please review [compliance documentation here.](https://resource-center.payrix.com.au/PARC/risk-and-compliance-guide)\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td><div><code>business-id</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>The business you want to access</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>payer-reference</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>Your unique reference that identifies the payer</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr></tbody></table>\n\n###### Post Body\n\n[Bank Account Model](#f843b64f-e84d-4e39-a671-d7aa5d2025d1)\n\n###### Response Body\n\n[Account Search Model](#be087bf1-a38a-4aff-ae04-bd30cf6e9ee6)"
							},
							"response": [
								{
									"name": "Payer Accounts Add/Update - Bank Account",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"AccountBranch\": \"123456\",\r\n    \"AccountNumber\": \"123456789\",\r\n    \"AccountName\": \"Test Bank Account\",\r\n    \"AccountType\": null,\r\n    \"Audit\": {\r\n      \"Username\": \"Example-User\",\r\n      \"UserIP\": \"1.2.3.4\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/accounts/bank-account",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"payers",
												"{{payer-reference}}",
												"accounts",
												"bank-account"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"accountId\": \"135032-3\",\n    \"type\": \"BANKACCOUNT\",\n    \"card\": null,\n    \"bankAccount\": {\n        \"accountBranch\": \"123456\",\n        \"accountNumber\": \"123xxx789\",\n        \"accountName\": \"Test Bank Account\",\n        \"accountType\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Add or update a Payers card details üîíüè¥",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"CardNumber\": \"4111111111111111\",\r\n    \"CardholderName\": \"TEST CARD\",\r\n    \"ExpiryYear\": 2027,\r\n    \"ExpiryMonth\": 11,\r\n    \"Ccv\": null,\r\n    \"Audit\": {\r\n      \"Username\": \"Example-User\",\r\n      \"UserIP\": \"1.2.3.4\"\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/accounts/card",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"payers",
										"{{payer-reference}}",
										"accounts",
										"card"
									]
								},
								"description": "Used to save a credit/debit card account to the given payer for use with scheduled debits and/or real-time payments.\n\nA payer can only have one payment method account - calling this function will replace any existing bank account or card attached to this payer with the new card.\n\nIdempotent - if the payer already has a payment method it will be replaced, otherwise a new account will be added.\n\nüìë If there is no transaction on saved payment details for 12 months, the payer status will be changed to ‚ÄúCancelled ‚Äì cancelled due to inactivity ‚Äú. 1 month after this (13 months total), payment details will be removed. After 12 months transactions will not be possible unless Payer Status is changed.\n\n**üè¥ WARNING: This request can directly accept payment card details. If you do so, then your integration CANNOT be certified unless your system is PCI DSS complaint. See the** [**PCI Compliance**](#e519347a-a7b0-4622-9e17-fed5bd2dc364) **section for more details üè¥**\n\n###### Route\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td><code>business-id</code></td><td>The business you want to access</td></tr><tr><td><code>payer-reference</code></td><td>Your unique reference that identifies the payer</td></tr></tbody></table>\n\n###### Post Body\n\n[Card Model](#4fbcd7c2-8508-46fa-8b96-c978a29deac2)\n\n###### Response Body\n\n[Account Search Model](#be087bf1-a38a-4aff-ae04-bd30cf6e9ee6)"
							},
							"response": [
								{
									"name": "Payer Accounts Add/Update - Card",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"CardNumber\": \"4111111111111111\",\r\n    \"CardholderName\": \"TEST CARD\",\r\n    \"ExpiryYear\": 2027,\r\n    \"ExpiryMonth\": 11,\r\n    \"Ccv\": null,\r\n    \"Audit\": {\r\n      \"Username\": \"Example-User\",\r\n      \"UserIP\": \"1.2.3.4\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/accounts/card",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"payers",
												"{{payer-reference}}",
												"accounts",
												"card"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"accountId\": \"135032-3\",\n    \"type\": \"CARD\",\n    \"card\": {\n        \"cardNumber\": \"411111xxxxxx1111\",\n        \"cardholderName\": \"TEST CARD\",\n        \"cardExpires\": \"2027-11-01T00:00:00\",\n        \"cardType\": \"Visa\"\n    },\n    \"bankAccount\": null\n}"
								}
							]
						},
						{
							"name": "Add or update a Payers card details via token üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"CardToken\": \"59ceb5f71800406285b9d9543a9f40fe\",\r\n\t\"Audit\": {\r\n\t\t\"Username\": \"Example-User\",\r\n\t\t\"UserIP\": \"1.2.3.4\"\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/accounts/card/token",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"payers",
										"{{payer-reference}}",
										"accounts",
										"card",
										"token"
									]
								},
								"description": "This endpoint is used for Payrix's \"Add To Vault\" service which works in conjunction with our JavaScript-based card tokenization functions to give you the ability to attach a card to one of your existing payers without the sensitive card information passing through your servers, which frees you from a significant portion of the PCI Compliance obligations.\n\nTo use this function simply send through the Token you receive when the payment details form that you have wired-up with our JavaScript library is posted-back to your server.\n\nüìë If there is no transaction on saved payment details for 12 months, the payer status will be changed to ‚ÄúCancelled ‚Äì cancelled due to inactivity ‚Äú. 1 month after this (13 months total), payment details will be removed. After 12 months transactions will not be possible unless Payer Status is changed.\n\nA payer can only have one payment method account - calling this function will replace any existing bank account or card attached to this payer with the new card.\n\n## Route\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td><code>business-id</code></td><td>The business you want to access</td></tr><tr><td><code>payer-reference</code></td><td>Your unique reference that identifies the payer</td></tr></tbody></table>\n\n###### Post Body\n\n[Card Payer Account Token Model](#73611904-e63d-4b15-9587-4d641fd42c4e)\n\n###### Response Body\n\n[Account Search Model](#be087bf1-a38a-4aff-ae04-bd30cf6e9ee6)"
							},
							"response": [
								{
									"name": "Add or update a Payers card details via token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"CardToken\": \"ebf672b8090e49cc815a140fc24b1e74\",\r\n    \"Audit\": {\r\n      \"Username\": \"Example-User\",\r\n      \"UserIP\": \"1.2.3.4\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/accounts/card/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"payers",
												"{{payer-reference}}",
												"accounts",
												"card",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\r\n    \"accountId\": \"139842-3\",\r\n    \"type\": \"CARD\",\r\n    \"card\": {\r\n        \"cardNumber\": \"411111xxxxxx1111\",\r\n        \"cardholderName\": \"TEST CARD\",\r\n        \"cardExpires\": \"2027-11-01T00:00:00\",\r\n        \"cardType\": \"Visa\"\r\n    },\r\n    \"bankAccount\": null\r\n}"
								}
							]
						}
					],
					"description": "This function allows you to add a new payer record or update the details of an existing one. Whether a new payer is added or an existing one is updated is determined by the value you provide for the \"payerUniqueID\" parameter. If a payer with this ID already exists within our database for your business then their details will be updated, and if not a new payer record will be added.\n\n## Assigning an identifier\n\nEach time you add a new payer, you must assign them a `UniqueReference` value that identifies them uniquely within your account. We are *not* able to do this for you. Whenever possible, we recommend assigning the same unique identifier that you use to identify the payer within your own system. If you cannot use your own unique identifier, then we recommend generating a new [GUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) value.\n\nAs well as a `UniqueReference` value that must be unique, you can also assign a `GroupReference` value that can be the same for two or more payers. You can use this to group together payers and retrieve them all at once; for example, by sending us a [Payer Search](#bfb569d2-1858-4510-a97a-c9e6802d8a87) request. One common use of this feature is to support individual payers who have saved multiple payment methods; for example two or more payment cards and/or bank accounts. By adding new payers with different `UniqueReference` values but the same `GroupReference` value, you can retrieve a list of all the saved payment methods for that individual, allow them to select one, and then accept a payment using the `UniqueReference` associated with the selected payer.\n\n## Specifying the payer name\n\nWe do *not* distinguish between individual and business payers, but to promote consistency the [Payer Input Model](#253a8278-5872-4808-b98c-634bb4fcc0da) that is used to add new payers accepts `FamilyOrBusinessName` and `GivenName` values.\n\nFor a new business payer, specify the business name as `FamilyOrBusinessName` and do *not* specify the `GivenName` value; for example:\n\n```json\n{\n    ...\n    \"FamilyOrBusinessName\": \"Payrix Australia\",\n    ...\n}\n```\n\nFor a new individual payer, specify their surname as `FamilyOrBusinessName` and their given name as the `GivenName` value; for example, for `Jane A Citizen`:\n\n```json\n{\n    ...\n    \"FamilyOrBusinessName\": \"Citizen\",\n    \"GivenName\": \"Jane\",\n    ...\n}\n```\n\n## Sending the request\n\nUse the `Bearer` token to send us an authorized [POST Add a new Payer](#18425722-4aa3-45cf-9b28-65926620bf32) request containing the details of the payer. It must include at least a `UniqueReference` and the `FamilyOrBusinessName`; whenever possible, we recommend also including an `Email` address, and a `Phone` and/or `Mobile` phone number; for example:\n\n```json\n{\n    \"UniqueReference\": \"PAYER-1\",\n    \"FamilyOrBusinessName\": \"Payrix Australia\",\n    \"Email\": \"sales@payrix.com.au\",\n    \"Phone\": \"07 3040 4320\"\n}\n```\n\nIf you do not specify a value for `GroupReference` explicitly, then it will be initialized automatically to match the `UniqueReference` value.\n\n## Checking the result\n\nThe result is indicated by the response HTTP status code: `200` (`OK`) indicates that the new payer was added successfully. The [Payer ID Model](#f9988f13-3746-4ceb-aa20-8eb22d85883d) object that comprises the response body contains both the `UniqueReference` that you specified and a Payrix-specific `PayerID` for cross-referencing purposes only: it *cannot* be used when you send us API requests to specify payers.\n\n## Special Notes üìë\n\nIf a Payer has no payments for 365 days, their status will be changed from \"Active\" to \"Cancelled due to inactivity\", they will then remain in the system for a further 30 days, after which their payment methods will be permanently deleted. Unless their account is reactivated.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Delete a Payer",
					"item": [
						{
							"name": "Remove a Payers payment methods üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/accounts",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"payers",
										"{{payer-reference}}",
										"accounts"
									],
									"query": [
										{
											"key": "username",
											"value": "Example-User",
											"disabled": true
										},
										{
											"key": "userip",
											"value": "1.2.3.4",
											"disabled": true
										}
									]
								},
								"description": "Removes all bank accounts or cards from the given payer. Note this will only remove the payment details. NOT the payer themselves. \r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>payer-reference</code></td>\r\n        <td>Your unique reference that identifies the payer</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Querystring Options\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>username</code></td>\r\n        <td>string(50)</td>\r\n        <td>For auditing purposes - Name/reference of a user, or process identifier, from your system which initiated the API call</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>userIP</code></td>\r\n        <td>string(20)</td>\r\n        <td>For auditing purposes - IP address of the user or process from your system which initiated the API call</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Response Body"
							},
							"response": []
						}
					]
				},
				{
					"name": "Search Payer Details",
					"item": [
						{
							"name": "Look up a specific Payers details üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"payers",
										"{{payer-reference}}"
									]
								},
								"description": "Returns information of a specific payer\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>payer-reference</code></td>\r\n        <td>Your unique reference that identifies the payer</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Response Body\r\n\r\n[Payer Search Model](#7101dbfb-8bb0-4da0-a8a6-df6d756e37f0)"
							},
							"response": [
								{
									"name": "Payer Lookup",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"payers",
												"{{payer-reference}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"business\": {\n        \"businessId\": \"1234\",\n        \"businessName\": \"Test Business Ltd\"\n    },\n    \"payerId\": \"135032\",\n    \"status\": \"ACTIVE\",\n    \"statusCode\": \"A\",\n    \"statusDescription\": \"Active\",\n    \"statusChangeDate\": null,\n    \"createdTime\": \"2018-06-29T03:24:56.14+00:00\",\n    \"schedule\": null,\n    \"uniqueReference\": \"P1-UNIQUE-REF\",\n    \"groupReference\": \"P1-GROUP-REF\",\n    \"familyOrBusinessName\": \"Surname\",\n    \"givenName\": \"First Name\",\n    \"email\": \"test@test.com\",\n    \"phone\": \"0733332222\",\n    \"mobile\": \"0411123123\",\n    \"address\": {\n        \"line1\": \"1 Test St\",\n        \"line2\": \"Test Building\",\n        \"suburb\": \"Testville\",\n        \"state\": \"QLD\",\n        \"postCode\": \"4001\",\n        \"country\": \"AUS\"\n    },\n    \"extraInfo\": {\n        \"xeroAutoDebitEnabled\": false\n    }\n}"
								}
							]
						},
						{
							"name": "Search for multiple Payers üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/payers",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"payers"
									]
								},
								"description": "Used for searching all previously added payers. A maximum of 200 payers can be returned in one call (see skip/take parameters below).\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Querystring Options\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>payerId</code></td>\r\n        <td>string</td>\r\n        <td>Search on our unique payer ID</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>uniqueReference</code></td>\r\n        <td>string</td>\r\n        <td>Search on the unique reference you set for the payer</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>groupReference</code></td>\r\n        <td>string</td>\r\n        <td>Search on the group reference you set for the payer</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>familyOrBusinessName</code></td>\r\n        <td>string</td>\r\n        <td>Search on the family/last name or business name of the payer</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>givenName</code></td>\r\n        <td>string</td>\r\n        <td>Search on the given/first name of the payer</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>email</code></td>\r\n        <td><a href=\"#918cc722-4378-4cce-8997-8e14a8378e55\">Email Address</a></td>\r\n        <td>Search on the email address of the payer</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>phone</code></td>\r\n        <td><a href=\"#e90f5f16-06a6-42b7-9c90-044a8ca5bbbc\">Phone Number</a></td>\r\n        <td>Search on the phone number of the payer</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>mobile</code></td>\r\n        <td><a href=\"#e90f5f16-06a6-42b7-9c90-044a8ca5bbbc\">Phone Number</a></td>\r\n        <td>Search on the mobile (cell) phone number of the payer</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>status</code></td>\r\n        <td><a href=\"#e3ac32c2-93fa-4d67-b922-ced05cfbc74d\">Payer Status Code</a></td>\r\n        <td>Search based on the current processing status of the payer (single or list - for lists reference the field multiple times in the querystring, e.g.: ?status=A&status=S&status=C-SPS etc.)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>createdFrom</code></td>\r\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">ISO 8601 Date/Time</a></td>\r\n        <td>Search for payers added on or after this date/time</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>createdTo</code></td>\r\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">ISO 8601 Date/Time</a></td>\r\n        <td>Search for payers that have had a change to their status occur before this date/time</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>statusChangeFrom</code></td>\r\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">ISO 8601 Date/Time</a></td>\r\n        <td>Search for payers that have had a change to their status occur on or after this date/time.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>statusChangeTo</code></td>\r\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">ISO 8601 Date/Time</a></td>\r\n        <td>Search for payers that have had a change to their status occur on or before this date/time.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>skip</code></td>\r\n        <td>integer</td>\r\n        <td>Number of records to not return (offset) when paging results (Default: 0)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>take</code></td>\r\n        <td>integer</td>\r\n        <td>Number of records to return per call when paging results (Default: 200)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Response Body\r\n\r\n[Payer Search Model](#7101dbfb-8bb0-4da0-a8a6-df6d756e37f0)\r\n"
							},
							"response": [
								{
									"name": "Payer Search ALL",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/payers",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"payers"
											],
											"query": [
												{
													"key": "uniqueReference",
													"value": "P1-UNIQUE-REF",
													"description": "Search on the unique reference you set for the payer",
													"disabled": true
												},
												{
													"key": "phone",
													"value": "0733331111",
													"description": "Search on the phone number of the payer",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "[\n    {\n        \"business\": {\n            \"businessId\": \"1234\",\n      \"businessName\": \"Test Business Ltd\"\n        },\n        \"payerId\": \"135032\",\n        \"status\": \"ACTIVE\",\n        \"statusCode\": \"A\",\n        \"statusDescription\": \"Active\",\n        \"statusChangeDate\": null,\n        \"createdTime\": \"2018-06-29T03:24:56.14+00:00\",\n        \"schedule\": null,\n        \"uniqueReference\": \"P1-UNIQUE-REF\",\n        \"groupReference\": \"P1-GROUP-REF\",\n        \"familyOrBusinessName\": \"Surname\",\n        \"givenName\": \"First Name\",\n        \"email\": \"test@test.com\",\n        \"phone\": \"0733332222\",\n        \"mobile\": \"0411123123\",\n        \"address\": {\n            \"line1\": \"1 Test St\",\n            \"line2\": \"Test Building\",\n            \"suburb\": \"Testville\",\n            \"state\": \"QLD\",\n            \"postCode\": \"4001\",\n            \"country\": \"AUS\"\n        },\n        \"extraInfo\": {\n            \"xeroAutoDebitEnabled\": false\n        }\n    },\n  {\n        \"business\": {\n            \"businessId\": \"1234\",\n            \"businessName\": \"Test Business Ltd\"\n        },\n        \"payerId\": \"114868\",\n        \"status\": \"SUSPENDED\",\n        \"statusCode\": \"S-INC\",\n        \"statusDescription\": \"Suspended - Incomplete Setup\",\n        \"statusChangeDate\": null,\n        \"createdTime\": \"2016-04-21T12:26:55.933+00:00\",\n        \"schedule\": {\n            \"scheduleType\": \"LIMITED\",\n            \"frequency\": \"FORTNIGHTLY\",\n            \"amount\": 50,\n            \"frequencyDay\": 4,\n            \"limitToTransactionCount\": 6,\n            \"limitToTransactionAmount\": null,\n            \"templateId\": null,\n            \"templateName\": null\n        },\n        \"uniqueReference\": \"P2-UNIQUE-REF\",\n        \"groupReference\": \"P2-GROUP-REF\",\n        \"familyOrBusinessName\": \"Surname\",\n        \"givenName\": \"Another Name\",\n        \"email\": \"test@test.com.au\",\n        \"phone\": null,\n        \"mobile\": null,\n        \"address\": null,\n        \"extraInfo\": {\n            \"xeroAutoDebitEnabled\": false\n        }\n    }\n]"
								},
								{
									"name": "Search for multiple Payers with options",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/payers?email\t=test@test.com&skip=150&take=200",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"payers"
											],
											"query": [
												{
													"key": "email\t",
													"value": "test@test.com",
													"description": "earch on the email address of the payer"
												},
												{
													"key": "skip",
													"value": "150",
													"description": "Number of records to not return (offset) when paging results (Default: 0)"
												},
												{
													"key": "take",
													"value": "200",
													"description": "Number of records to return per call when paging results (Default: 200)"
												}
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Look up a Payers payment options üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/accounts",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"payers",
										"{{payer-reference}}",
										"accounts"
									]
								},
								"description": "Returns details of any accounts attached to the given payer\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>payer-reference</code></td>\r\n        <td>Your unique reference that identifies the payer</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Response Body\r\n\r\n[Account Search Model](#be087bf1-a38a-4aff-ae04-bd30cf6e9ee6)\r\n"
							},
							"response": [
								{
									"name": "Payer Accounts Search (Card)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/accounts",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"payers",
												"{{payer-reference}}",
												"accounts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "[\n    {\n        \"accountId\": \"135032-3\",\n        \"type\": \"CARD\",\n        \"bankAccount\": null,\n        \"card\": {\n            \"cardNumber\": \"411111xxxxxx1111\",\n            \"cardholderName\": \"TEST CARD\",\n            \"cardExpires\": \"2027-11-01T00:00:00\",\n            \"cardType\": \"Visa\"\n        }\n    }"
								},
								{
									"name": "Payer Accounts Search (Bank Account)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/accounts",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"payers",
												"{{payer-reference}}",
												"accounts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "[\n    {\n        \"accountId\": \"135032-3\",\n        \"type\": \"BANKACCOUNT\",\n        \"bankAccount\": {\n            \"accountBranch\": \"123456\",\n            \"accountNumber\": \"123xxx789\",\n            \"accountName\": \"Test Bank Account\",\n            \"accountType\": null\n        },\n        \"card\": null\n    }\n]"
								}
							]
						}
					],
					"description": "This function is used to lookup the details of existing payers.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Reports",
			"item": [
				{
					"name": "Run the Settlements Report üîí",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/businesses/{{business-id}}/reports/settlements/?timeFrom=2018-11-08T00:00:12%2B10:00&timeTo=2018-12-08T23:59:00%2B10:00'",
							"host": [
								"{{url}}"
							],
							"path": [
								"businesses",
								"{{business-id}}",
								"reports",
								"settlements",
								""
							],
							"query": [
								{
									"key": "timeFrom",
									"value": "2018-11-08T00:00:12%2B10:00"
								},
								{
									"key": "timeTo",
									"value": "2018-12-08T23:59:00%2B10:00'"
								}
							]
						},
						"description": "This function can be used to obtain information about your settlement payments. It includes listing all transactions, fees and miscellaneous items that make up the settlement, with each amount that was added to, and deducted from, your settlement.\r\n\r\nThe function requires you to specify a date range via the querystring to search settlements for.  The date range allows you to specify a time with time zone to search settlements relative to dates in your country. \r\nTo search for settlements a single day include time range from 12:00am to 11:59pm, e.g.:\r\n\r\n`?timeFrom=2018-07-08T00:00:00+10:00&timeTo=2018-07-08T23:59:00+10:00`\r\n\r\n## Special Notes üìë\r\nSearching with a date range of more than 31 days is not supported.\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Querystring Options\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>timeFrom</code><strong>*</strong></td>\r\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">ISO 8601 Date/Time</a></td>\r\n        <td>Search for settlements processed from this date/time.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>timeTo</code><strong>*</strong></td>\r\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">ISO 8601 Date/Time</a></td>\r\n        <td>Search for settlements processed on or before this date/time.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n__*__ Required\r\n\r\n###### Response Body\r\n\r\n[Settlement Model](#e1ba34a6-5f66-4c35-822a-7369e8b8dce4)\r\n"
					},
					"response": [
						{
							"name": "Settlements Report",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/reports/settlements/?timeFrom=2018-07-08T00:00:12%2B10:00&timeTo=2018-07-08T23:59:00%2B10:00",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"reports",
										"settlements",
										""
									],
									"query": [
										{
											"key": "timeFrom",
											"value": "2018-07-08T00:00:12%2B10:00"
										},
										{
											"key": "timeTo",
											"value": "2018-07-08T23:59:00%2B10:00"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[\n    {\n        \"business\": {\n            \"businessId\": \"1234\",\n            \"businessName\": \"Example Business Ltd\"\n        },\n        \"settlementId\": \"121118\",\n        \"settlementTime\": \"2018-07-08T21:29:12.71+10:00\",\n        \"settlementAmount\": 63.32,\n        \"settlementCurrency\": \"AUD\",\n        \"transactions\": [\n            {\n                \"settlementType\": \"SETTLEMENT\",\n                \"amountSettled\": 99.8,\n                \"feesDeducted\": -0.2,\n                \"business\": {\n                    \"businessId\": \"1234\",\n                    \"businessName\": \"Example Business Ltd\"\n                },\n                \"time\": \"2018-07-08T21:29:01.59+10:00\",\n                \"transactionId\": \"121113\",\n                \"secondaryTransactionId\": \"RT71494\",\n                \"reference\": \"b1r1ref\",\n                \"description\": null,\n                \"scheduleReference\": null,\n                \"amount\": 100,\n                \"amountRequested\": 100,\n                \"amountRefunded\": 0,\n                \"currency\": \"AUD\",\n                \"type\": \"RT\",\n                \"typeDescription\": \"Realtime Payment - Website\",\n                \"statusCode\": \"S\",\n                \"subStatusCode\": null,\n                \"statusDescription\": \"Settled\",\n                \"paymentMethod\": \"MASTERCARD\",\n                \"payer\": null,\n                \"card\": {\n                    \"cardNumber\": \"555555xxxxxx4444\",\n                    \"cardholderName\": \"Example Realtime Txn One\",\n                    \"cardExpires\": \"2021-03-01T00:00:00\",\n                    \"cardType\": \"Mastercard\"\n                },\n                \"bankAccount\": null\n            },\n            {\n                \"settlementType\": \"REFUND\",\n                \"amountSettled\": -0.5,\n                \"feesDeducted\": -0.5,\n                \"business\": {\n                    \"businessId\": \"1234\",\n                    \"businessName\": \"Example Business Ltd\"\n                },\n                \"time\": \"2018-07-08T21:29:01.933+10:00\",\n                \"transactionId\": \"121114\",\n                \"secondaryTransactionId\": \"RT71495\",\n                \"reference\": \"b1r2ref\",\n                \"description\": null,\n                \"scheduleReference\": null,\n                \"amount\": 250.75,\n                \"amountRequested\": 250.75,\n                \"amountRefunded\": 250.75,\n                \"currency\": \"AUD\",\n                \"type\": \"RT\",\n                \"typeDescription\": \"Realtime Payment - Website\",\n                \"statusCode\": \"RF\",\n                \"subStatusCode\": null,\n                \"statusDescription\": \"Refunded\",\n                \"paymentMethod\": \"VISA\",\n                \"payer\": null,\n                \"card\": {\n                    \"cardNumber\": \"401288xxxxxx1881\",\n                    \"cardholderName\": \"Example Realtime Txn Two\",\n                    \"cardExpires\": \"2022-07-01T00:00:00\",\n                    \"cardType\": \"Visa\"\n                },\n                \"bankAccount\": null\n            },\n            {\n                \"settlementType\": \"REJECTION\",\n                \"amountSettled\": -2.75,\n                \"feesDeducted\": -2.75,\n                \"business\": {\n                    \"businessId\": \"1234\",\n                    \"businessName\": \"Example Business Ltd\"\n                },\n                \"time\": \"2018-07-08T21:29:02.377+10:00\",\n                \"transactionId\": \"121115\",\n                \"secondaryTransactionId\": \"RT71496\",\n                \"reference\": \"b1r3ref\",\n                \"description\": \"Example real-time transaction\",\n                \"scheduleReference\": null,\n                \"amount\": 250.61,\n                \"amountRequested\": 250.61,\n                \"amountRefunded\": 0,\n                \"currency\": \"AUD\",\n                \"type\": \"RT\",\n                \"typeDescription\": \"Realtime Payment - Website\",\n                \"statusCode\": \"R\",\n                \"subStatusCode\": \"R1\",\n                \"statusDescription\": \"Rejected: Insufficient Funds\",\n                \"paymentMethod\": \"VISA\",\n                \"payer\": null,\n                \"card\": {\n                    \"cardNumber\": \"411111xxxxxx1111\",\n                    \"cardholderName\": \"Example Realtime Txn Three\",\n                    \"cardExpires\": \"2021-11-01T00:00:00\",\n                    \"cardType\": \"Visa\"\n                },\n                \"bankAccount\": null\n            },\n            {\n                \"settlementType\": \"SETTLEMENT\",\n                \"amountSettled\": 9.8,\n                \"feesDeducted\": -1.2,\n                \"business\": {\n                    \"businessId\": \"1234\",\n                    \"businessName\": \"Example Business Ltd\"\n                },\n                \"time\": \"2018-07-08T21:29:12.493+10:00\",\n                \"transactionId\": \"121116\",\n                \"secondaryTransactionId\": null,\n                \"reference\": \"b1ba1\",\n                \"description\": null,\n                \"scheduleReference\": null,\n                \"amount\": 11,\n                \"amountRequested\": 11,\n                \"amountRefunded\": 0,\n                \"currency\": \"AUD\",\n                \"type\": \"PDB\",\n                \"typeDescription\": \"Payer Debit - Bank Account\",\n                \"statusCode\": \"S\",\n                \"subStatusCode\": null,\n                \"statusDescription\": \"Settled\",\n                \"paymentMethod\": \"BANKACCOUNT\",\n                \"payer\": {\n                    \"payerId\": \"139470\",\n                    \"uniqueReference\": \"B1-P1-U\",\n                    \"groupReference\": \"B1-P1-G\",\n                    \"familyOrBusinessName\": \"Example\",\n                    \"givenName\": \"Person\",\n                    \"address\": null,\n                    \"email\": null,\n                    \"phone\": null,\n                    \"mobile\": null\n                },\n                \"card\": null,\n                \"bankAccount\": {\n                    \"accountBranch\": \"064417\",\n                    \"accountNumber\": \"11xx11\",\n                    \"accountName\": \"Example Person\",\n                    \"accountType\": null\n                }\n            },\n            {\n                \"settlementType\": \"SETTLEMENT\",\n                \"amountSettled\": 11.97,\n                \"feesDeducted\": -0.03,\n                \"business\": {\n                    \"businessId\": \"1234\",\n                    \"businessName\": \"Example Business Ltd\"\n                },\n                \"time\": \"2018-07-08T21:29:12.497+10:00\",\n                \"transactionId\": \"121117\",\n                \"secondaryTransactionId\": null,\n                \"reference\": \"b1cc1\",\n                \"description\": null,\n                \"scheduleReference\": null,\n                \"amount\": 12,\n                \"amountRequested\": 12,\n                \"amountRefunded\": 0,\n                \"currency\": \"AUD\",\n                \"type\": \"PDC\",\n                \"typeDescription\": \"Payer Debit - Credit Card\",\n                \"statusCode\": \"S\",\n                \"subStatusCode\": null,\n                \"statusDescription\": \"Settled\",\n                \"paymentMethod\": \"MASTERCARD\",\n                \"payer\": {\n                    \"payerId\": \"139471\",\n                    \"uniqueReference\": \"B1-P2-U\",\n                    \"groupReference\": \"B1-P2-G\",\n                    \"familyOrBusinessName\": \"Example\",\n                    \"givenName\": \"Person\",\n                    \"address\": null,\n                    \"email\": null,\n                    \"phone\": null,\n                    \"mobile\": null\n                },\n                \"card\": {\n                    \"cardNumber\": \"510510xxxxxx5100\",\n                    \"cardholderName\": \"Example Person\",\n                    \"cardExpires\": \"2030-10-01T00:00:00\",\n                    \"cardType\": \"Mastercard\"\n                },\n                \"bankAccount\": null\n            }\n        ],\n        \"ledgers\": [\n            {\n                \"settlementType\": \"BILL\",\n                \"dateIncurred\": \"2018-07-08T10:00:00+10:00\",\n                \"description\": \"Example Bill One\",\n                \"amountSettled\": -20\n            },\n            {\n                \"settlementType\": \"BILL\",\n                \"dateIncurred\": \"2018-07-08T10:00:00+10:00\",\n                \"description\": \"Example Bill Two\",\n                \"amountSettled\": -25\n            },\n            {\n                \"settlementType\": \"BILL\",\n                \"dateIncurred\": \"2018-07-08T10:00:00+10:00\",\n                \"description\": \"Monthly Fee\",\n                \"amountSettled\": -10\n            }\n        ]\n    },\n    {\n        \"business\": {\n            \"businessId\": \"1234\",\n            \"businessName\": \"Example Business Ltd\"\n        },\n        \"settlementId\": \"121119\",\n        \"settlementTime\": \"2018-07-08T22:29:12.71+10:00\",\n        \"settlementAmount\": 989,\n        \"settlementCurrency\": \"AUD\",\n        \"transactions\": [\n            {\n                \"settlementType\": \"SETTLEMENT\",\n                \"amountSettled\": 999,\n                \"feesDeducted\": -1,\n                \"business\": {\n                    \"businessId\": \"1234\",\n                    \"businessName\": \"Example Business Ltd\"\n                },\n                \"time\": \"2018-07-08T21:29:01.59+10:00\",\n                \"transactionId\": \"121188\",\n                \"secondaryTransactionId\": \"RT71713\",\n                \"reference\": \"b1r1ref2\",\n                \"description\": null,\n                \"scheduleReference\": null,\n                \"amount\": 1000,\n                \"amountRequested\": 1000,\n                \"amountRefunded\": 0,\n                \"currency\": \"AUD\",\n                \"type\": \"RT\",\n                \"typeDescription\": \"Realtime Payment - Website\",\n                \"statusCode\": \"S\",\n                \"subStatusCode\": null,\n                \"statusDescription\": \"Settled\",\n                \"paymentMethod\": \"MASTERCARD\",\n                \"payer\": null,\n                \"card\": {\n                    \"cardNumber\": \"555555xxxxxx4444\",\n                    \"cardholderName\": \"Example Realtime Txn One\",\n                    \"cardExpires\": \"2021-03-01T00:00:00\",\n                    \"cardType\": \"Mastercard\"\n                },\n                \"bankAccount\": null\n            }\n        ],\n        \"ledgers\": [\n            {\n                \"settlementType\": \"BILL\",\n                \"dateIncurred\": \"2018-07-08T10:00:00+10:00\",\n                \"description\": \"New Bill\",\n                \"amountSettled\": -10\n            }\n        ]\n    }\n]"
						}
					]
				},
				{
					"name": "Run the Settlements Report (Detailed) üîí",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/businesses/{{business-id}}/reports/settlements-detailed/?timeFrom=2018-11-08T00:00:12%2B10:00&timeTo=2018-12-08T23:59:00%2B10:00'",
							"host": [
								"{{url}}"
							],
							"path": [
								"businesses",
								"{{business-id}}",
								"reports",
								"settlements-detailed",
								""
							],
							"query": [
								{
									"key": "timeFrom",
									"value": "2018-11-08T00:00:12%2B10:00"
								},
								{
									"key": "timeTo",
									"value": "2018-12-08T23:59:00%2B10:00'"
								}
							]
						},
						"description": "This function can be used to obtain detailed information about your settlement payments. It is similar to the above Settlement Report function, however, this one provides a further level of breakdown whereby it lists each item associated with settled transactions (such as fees) separately.\r\n\r\nThe function requires you to specify a date range via the querystring to search settlements for.  The date range allows you to specify a time with time zone to search settlements relative to dates in your country. \r\nTo search for settlements a single day include time range from 12:00am to 11:59pm, e.g.:\r\n\r\n`?timeFrom=2018-07-08T00:00:00+10:00&timeTo=2018-07-08T23:59:00+10:00`\r\n\r\n## Special Notes üìë\r\nSearching with a date range of more than 31 days is not supported.\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Querystring Options\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>timeFrom</code><strong>*</strong></td>\r\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">ISO 8601 Date/Time</a></td>\r\n        <td>Search for settlements processed from this date/time.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>timeTo</code><strong>*</strong></td>\r\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">ISO 8601 Date/Time</a></td>\r\n        <td>Search for settlements processed on or before this date/time.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n__*__ Required\r\n\r\n###### Response Body\r\n\r\n[Settlement (Detailed) Model](#f2c24a50-f148-4b2a-a5ef-565e6eba3c53)\r\n"
					},
					"response": [
						{
							"name": "Settlements (Detailed) Report",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/reports/settlements-detailed/?timeFrom=2018-07-08T00:00:12%2B10:00&timeTo=2018-07-08T23:59:00%2B10:00",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"reports",
										"settlements-detailed",
										""
									],
									"query": [
										{
											"key": "timeFrom",
											"value": "2018-07-08T00:00:12%2B10:00"
										},
										{
											"key": "timeTo",
											"value": "2018-07-08T23:59:00%2B10:00"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[\n    {\n      \"business\": {\n        \"businessId\": \"1533\",\n        \"businessName\": \"xUnit Rest Bus1 (T)\"\n      },\n      \"settlementId\": \"185777\",\n      \"settlementTime\": \"2021-02-11T16:52:11.55+10:00\",\n      \"settlementAmount\": 63.32,\n      \"settlementCurrency\": \"AUD\",\n      \"ledgers\": [\n        {\n          \"ledgerId\": \"1606114\",\n          \"settlementType\": \"BILL\",\n          \"settlementTypeId\": 303,\n          \"dateIncurred\": \"2021-02-11T10:00:00+10:00\",\n          \"description\": \"Example Bill One\",\n          \"amountSettled\": -20.0,\n          \"transaction\": null\n        },\n        {\n          \"ledgerId\": \"1606115\",\n          \"settlementType\": \"BILL\",\n          \"settlementTypeId\": 303,\n          \"dateIncurred\": \"2021-02-11T10:00:00+10:00\",\n          \"description\": \"Example Bill Two\",\n          \"amountSettled\": -25.0,\n          \"transaction\": null\n        },\n        {\n          \"ledgerId\": \"1606116\",\n          \"settlementType\": \"BILL\",\n          \"settlementTypeId\": 303,\n          \"dateIncurred\": \"2021-02-11T10:00:00+10:00\",\n          \"description\": \"Monthly Fee\",\n          \"amountSettled\": -10.0,\n          \"transaction\": null\n        },\n        {\n          \"ledgerId\": \"1606117\",\n          \"settlementType\": \"SETTLEMENT\",\n          \"settlementTypeId\": 1003,\n          \"dateIncurred\": \"2021-02-11T10:00:00+10:00\",\n          \"description\": \"Payer Real-time Card Transaction\",\n          \"amountSettled\": 100.0,\n          \"transaction\": {\n            \"business\": {\n              \"businessId\": \"1533\",\n              \"businessName\": \"xUnit Rest Bus1 (T)\"\n            },\n            \"time\": \"2021-02-11T16:51:50.217+10:00\",\n            \"transactionId\": \"185772\",\n            \"secondaryTransactionId\": \"RT119511\",\n            \"reference\": \"b1r1ref\",\n            \"description\": null,\n            \"scheduleReference\": null,\n            \"amount\": 100.0,\n            \"amountRequested\": 100.0,\n            \"amountRefunded\": 0.0,\n            \"currency\": \"AUD\",\n            \"type\": \"RT\",\n            \"typeDescription\": \"Realtime Payment - Website\",\n            \"statusCode\": \"S\",\n            \"subStatusCode\": null,\n            \"statusDescription\": \"Settled\",\n            \"paymentMethod\": \"MASTERCARD\",\n            \"payer\": null,\n            \"card\": {\n              \"cardNumber\": \"555555xxxxxx4444\",\n              \"cardholderName\": \"Example Realtime Txn One\",\n              \"cardExpires\": \"2021-03-01T00:00:00\",\n              \"cardType\": \"Mastercard\"\n            },\n            \"bankAccount\": null,\n            \"rejectionRecovery\": null,\n            \"verification\": null\n          }\n        },\n        {\n          \"ledgerId\": \"1606118\",\n          \"settlementType\": \"FEE\",\n          \"settlementTypeId\": 413,\n          \"dateIncurred\": \"2021-02-11T10:00:00+10:00\",\n          \"description\": \"BillerNetCollection _ RealtimeMerchantRateMastercard $0, 0.20%\",\n          \"amountSettled\": -0.2,\n          \"transaction\": {\n            \"business\": {\n              \"businessId\": \"1533\",\n              \"businessName\": \"xUnit Rest Bus1 (T)\"\n            },\n            \"time\": \"2021-02-11T16:51:50.217+10:00\",\n            \"transactionId\": \"185772\",\n            \"secondaryTransactionId\": \"RT119511\",\n            \"reference\": \"b1r1ref\",\n            \"description\": null,\n            \"scheduleReference\": null,\n            \"amount\": 100.0,\n            \"amountRequested\": 100.0,\n            \"amountRefunded\": 0.0,\n            \"currency\": \"AUD\",\n            \"type\": \"RT\",\n            \"typeDescription\": \"Realtime Payment - Website\",\n            \"statusCode\": \"S\",\n            \"subStatusCode\": null,\n            \"statusDescription\": \"Settled\",\n            \"paymentMethod\": \"MASTERCARD\",\n            \"payer\": null,\n            \"card\": {\n              \"cardNumber\": \"555555xxxxxx4444\",\n              \"cardholderName\": \"Example Realtime Txn One\",\n              \"cardExpires\": \"2021-03-01T00:00:00\",\n              \"cardType\": \"Mastercard\"\n            },\n            \"bankAccount\": null,\n            \"rejectionRecovery\": null,\n            \"verification\": null\n          }\n        },\n        {\n          \"ledgerId\": \"1606119\",\n          \"settlementType\": \"SETTLEMENT\",\n          \"settlementTypeId\": 1003,\n          \"dateIncurred\": \"2021-02-11T10:00:00+10:00\",\n          \"description\": \"Payer Real-time Card Transaction\",\n          \"amountSettled\": 250.75,\n          \"transaction\": {\n            \"business\": {\n              \"businessId\": \"1533\",\n              \"businessName\": \"xUnit Rest Bus1 (T)\"\n            },\n            \"time\": \"2021-02-11T16:52:00.117+10:00\",\n            \"transactionId\": \"185773\",\n            \"secondaryTransactionId\": \"RT119512\",\n            \"reference\": \"b1r2ref\",\n            \"description\": null,\n            \"scheduleReference\": null,\n            \"amount\": 250.75,\n            \"amountRequested\": 250.75,\n            \"amountRefunded\": 250.75,\n            \"currency\": \"AUD\",\n            \"type\": \"RT\",\n            \"typeDescription\": \"Realtime Payment - Website\",\n            \"statusCode\": \"RF\",\n            \"subStatusCode\": null,\n            \"statusDescription\": \"Refunded\",\n            \"paymentMethod\": \"VISA\",\n            \"payer\": null,\n            \"card\": {\n              \"cardNumber\": \"401288xxxxxx1881\",\n              \"cardholderName\": \"Example Realtime Txn Two\",\n              \"cardExpires\": \"2022-07-01T00:00:00\",\n              \"cardType\": \"Visa\"\n            },\n            \"bankAccount\": null,\n            \"rejectionRecovery\": null,\n            \"verification\": null\n          }\n        },\n        {\n          \"ledgerId\": \"1606120\",\n          \"settlementType\": \"FEE\",\n          \"settlementTypeId\": 412,\n          \"dateIncurred\": \"2021-02-11T10:00:00+10:00\",\n          \"description\": \"BillerNetCollection _ RealtimeMerchantRateVisa $0, 0.20%\",\n          \"amountSettled\": -0.5,\n          \"transaction\": {\n            \"business\": {\n              \"businessId\": \"1533\",\n              \"businessName\": \"xUnit Rest Bus1 (T)\"\n            },\n            \"time\": \"2021-02-11T16:52:00.117+10:00\",\n            \"transactionId\": \"185773\",\n            \"secondaryTransactionId\": \"RT119512\",\n            \"reference\": \"b1r2ref\",\n            \"description\": null,\n            \"scheduleReference\": null,\n            \"amount\": 250.75,\n            \"amountRequested\": 250.75,\n            \"amountRefunded\": 250.75,\n            \"currency\": \"AUD\",\n            \"type\": \"RT\",\n            \"typeDescription\": \"Realtime Payment - Website\",\n            \"statusCode\": \"RF\",\n            \"subStatusCode\": null,\n            \"statusDescription\": \"Refunded\",\n            \"paymentMethod\": \"VISA\",\n            \"payer\": null,\n            \"card\": {\n              \"cardNumber\": \"401288xxxxxx1881\",\n              \"cardholderName\": \"Example Realtime Txn Two\",\n              \"cardExpires\": \"2022-07-01T00:00:00\",\n              \"cardType\": \"Visa\"\n            },\n            \"bankAccount\": null,\n            \"rejectionRecovery\": null,\n            \"verification\": null\n          }\n        },\n        {\n          \"ledgerId\": \"1606121\",\n          \"settlementType\": \"REFUND\",\n          \"settlementTypeId\": 2003,\n          \"dateIncurred\": \"2021-02-12T02:52:00+10:00\",\n          \"description\": \"Refund (Card)\",\n          \"amountSettled\": -250.75,\n          \"transaction\": {\n            \"business\": {\n              \"businessId\": \"1533\",\n              \"businessName\": \"xUnit Rest Bus1 (T)\"\n            },\n            \"time\": \"2021-02-11T16:52:00.117+10:00\",\n            \"transactionId\": \"185773\",\n            \"secondaryTransactionId\": \"RT119512\",\n            \"reference\": \"b1r2ref\",\n            \"description\": null,\n            \"scheduleReference\": null,\n            \"amount\": 250.75,\n            \"amountRequested\": 250.75,\n            \"amountRefunded\": 250.75,\n            \"currency\": \"AUD\",\n            \"type\": \"RT\",\n            \"typeDescription\": \"Realtime Payment - Website\",\n            \"statusCode\": \"RF\",\n            \"subStatusCode\": null,\n            \"statusDescription\": \"Refunded\",\n            \"paymentMethod\": \"VISA\",\n            \"payer\": null,\n            \"card\": {\n              \"cardNumber\": \"401288xxxxxx1881\",\n              \"cardholderName\": \"Example Realtime Txn Two\",\n              \"cardExpires\": \"2022-07-01T00:00:00\",\n              \"cardType\": \"Visa\"\n            },\n            \"bankAccount\": null,\n            \"rejectionRecovery\": null,\n            \"verification\": null\n          }\n        },\n        {\n          \"ledgerId\": \"1606122\",\n          \"settlementType\": \"FEE\",\n          \"settlementTypeId\": 402,\n          \"dateIncurred\": \"2021-02-11T10:00:00+10:00\",\n          \"description\": \"BillerNetCollection _ RealtimeTransactionFeeCreditCardRejection $2.75, 0%\",\n          \"amountSettled\": -2.75,\n          \"transaction\": {\n            \"business\": {\n              \"businessId\": \"1533\",\n              \"businessName\": \"xUnit Rest Bus1 (T)\"\n            },\n            \"time\": \"2021-02-11T16:52:01.237+10:00\",\n            \"transactionId\": \"185774\",\n            \"secondaryTransactionId\": \"RT119513\",\n            \"reference\": \"b1r3ref\",\n            \"description\": null,\n            \"scheduleReference\": null,\n            \"amount\": 250.61,\n            \"amountRequested\": 250.61,\n            \"amountRefunded\": 0.0,\n            \"currency\": \"AUD\",\n            \"type\": \"RT\",\n            \"typeDescription\": \"Realtime Payment - Website\",\n            \"statusCode\": \"R\",\n            \"subStatusCode\": \"R1\",\n            \"statusDescription\": \"Rejected: Insufficient Funds\",\n            \"paymentMethod\": \"VISA\",\n            \"payer\": null,\n            \"card\": {\n              \"cardNumber\": \"411111xxxxxx1111\",\n              \"cardholderName\": \"Example Realtime Txn Three\",\n              \"cardExpires\": \"2021-11-01T00:00:00\",\n              \"cardType\": \"Visa\"\n            },\n            \"bankAccount\": null,\n            \"rejectionRecovery\": null,\n            \"verification\": null\n          }\n        },\n        {\n          \"ledgerId\": \"1606123\",\n          \"settlementType\": \"SETTLEMENT\",\n          \"settlementTypeId\": 1001,\n          \"dateIncurred\": \"2021-02-11T10:00:00+10:00\",\n          \"description\": \"Payer Bank Account Debit\",\n          \"amountSettled\": 11.0,\n          \"transaction\": {\n            \"business\": {\n              \"businessId\": \"1533\",\n              \"businessName\": \"xUnit Rest Bus1 (T)\"\n            },\n            \"time\": \"2021-02-11T16:52:11.363+10:00\",\n            \"transactionId\": \"185775\",\n            \"secondaryTransactionId\": null,\n            \"reference\": \"b1ba1\",\n            \"description\": null,\n            \"scheduleReference\": null,\n            \"amount\": 11.0,\n            \"amountRequested\": 11.0,\n            \"amountRefunded\": 0.0,\n            \"currency\": \"AUD\",\n            \"type\": \"PDB\",\n            \"typeDescription\": \"Payer Debit - Bank Account\",\n            \"statusCode\": \"S\",\n            \"subStatusCode\": null,\n            \"statusDescription\": \"Settled\",\n            \"paymentMethod\": \"BANKACCOUNT\",\n            \"payer\": {\n              \"payerId\": \"152159\",\n              \"uniqueReference\": \"B1-P1-U\",\n              \"groupReference\": \"B1-P1-G\",\n              \"familyOrBusinessName\": \"Citizen\",\n              \"givenName\": \"Jane\",\n              \"address\": null,\n              \"email\": null,\n              \"phone\": null,\n              \"mobile\": null\n            },\n            \"card\": null,\n            \"bankAccount\": {\n              \"accountBranch\": \"064417\",\n              \"accountNumber\": \"11xx11\",\n              \"accountName\": \"Jane Citizen\",\n              \"accountType\": null\n            },\n            \"rejectionRecovery\": null,\n            \"verification\": null\n          }\n        },\n        {\n          \"ledgerId\": \"1606124\",\n          \"settlementType\": \"FEE\",\n          \"settlementTypeId\": 101,\n          \"dateIncurred\": \"2021-02-11T10:00:00+10:00\",\n          \"description\": \"BillerNetCollection _ TransactionFeeBankAccount $1.20, 0%\",\n          \"amountSettled\": -1.2,\n          \"transaction\": {\n            \"business\": {\n              \"businessId\": \"1533\",\n              \"businessName\": \"xUnit Rest Bus1 (T)\"\n            },\n            \"time\": \"2021-02-11T16:52:11.363+10:00\",\n            \"transactionId\": \"185775\",\n            \"secondaryTransactionId\": null,\n            \"reference\": \"b1ba1\",\n            \"description\": null,\n            \"scheduleReference\": null,\n            \"amount\": 11.0,\n            \"amountRequested\": 11.0,\n            \"amountRefunded\": 0.0,\n            \"currency\": \"AUD\",\n            \"type\": \"PDB\",\n            \"typeDescription\": \"Payer Debit - Bank Account\",\n            \"statusCode\": \"S\",\n            \"subStatusCode\": null,\n            \"statusDescription\": \"Settled\",\n            \"paymentMethod\": \"BANKACCOUNT\",\n            \"payer\": {\n              \"payerId\": \"152159\",\n              \"uniqueReference\": \"B1-P1-U\",\n              \"groupReference\": \"B1-P1-G\",\n              \"familyOrBusinessName\": \"Citizen\",\n              \"givenName\": \"Jane\",\n              \"address\": null,\n              \"email\": null,\n              \"phone\": null,\n              \"mobile\": null\n            },\n            \"card\": null,\n            \"bankAccount\": {\n              \"accountBranch\": \"064417\",\n              \"accountNumber\": \"11xx11\",\n              \"accountName\": \"Jane Citizen\",\n              \"accountType\": null\n            },\n            \"rejectionRecovery\": null,\n            \"verification\": null\n          }\n        },\n        {\n          \"ledgerId\": \"1606125\",\n          \"settlementType\": \"SETTLEMENT\",\n          \"settlementTypeId\": 1002,\n          \"dateIncurred\": \"2021-02-11T10:00:00+10:00\",\n          \"description\": \"Payer Card Debit\",\n          \"amountSettled\": 12.0,\n          \"transaction\": {\n            \"business\": {\n              \"businessId\": \"1533\",\n              \"businessName\": \"xUnit Rest Bus1 (T)\"\n            },\n            \"time\": \"2021-02-11T16:52:11.387+10:00\",\n            \"transactionId\": \"185776\",\n            \"secondaryTransactionId\": null,\n            \"reference\": \"b1cc1\",\n            \"description\": null,\n            \"scheduleReference\": null,\n            \"amount\": 12.0,\n            \"amountRequested\": 12.0,\n            \"amountRefunded\": 0.0,\n            \"currency\": \"AUD\",\n            \"type\": \"PDC\",\n            \"typeDescription\": \"Payer Debit - Credit Card\",\n            \"statusCode\": \"S\",\n            \"subStatusCode\": null,\n            \"statusDescription\": \"Settled\",\n            \"paymentMethod\": \"MASTERCARD\",\n            \"payer\": {\n              \"payerId\": \"152160\",\n              \"uniqueReference\": \"B1-P2-U\",\n              \"groupReference\": \"B1-P2-G\",\n              \"familyOrBusinessName\": \"Surname\",\n              \"givenName\": \"John\"\n              \"email\": null,\n              \"phone\": null,\n              \"mobile\": null\n            },\n            \"card\": {\n              \"cardNumber\": \"510510xxxxxx5100\",\n              \"cardholderName\": \"John Surname\",\n              \"cardExpires\": \"2030-10-01T00:00:00\",\n              \"cardType\": \"Mastercard\"\n            },\n            \"bankAccount\": null,\n            \"rejectionRecovery\": null,\n            \"verification\": null\n          }\n        },\n        {\n          \"ledgerId\": \"1606126\",\n          \"settlementType\": \"FEE\",\n          \"settlementTypeId\": 202,\n          \"dateIncurred\": \"2021-02-11T10:00:00+10:00\",\n          \"description\": \"BillerNetCollection _ CreditCardMerchantRateMastercard $0, 0.24%\",\n          \"amountSettled\": -0.03,\n          \"transaction\": {\n            \"business\": {\n              \"businessId\": \"1533\",\n              \"businessName\": \"xUnit Rest Bus1 (T)\"\n            },\n            \"time\": \"2021-02-11T16:52:11.387+10:00\",\n            \"transactionId\": \"185776\",\n            \"secondaryTransactionId\": null,\n            \"reference\": \"b1cc1\",\n            \"description\": null,\n            \"scheduleReference\": null,\n            \"amount\": 12.0,\n            \"amountRequested\": 12.0,\n            \"amountRefunded\": 0.0,\n            \"currency\": \"AUD\",\n            \"type\": \"PDC\",\n            \"typeDescription\": \"Payer Debit - Credit Card\",\n            \"statusCode\": \"S\",\n            \"subStatusCode\": null,\n            \"statusDescription\": \"Settled\",\n            \"paymentMethod\": \"MASTERCARD\",\n            \"payer\": {\n              \"payerId\": \"152160\",\n              \"uniqueReference\": \"B1-P2-U\",\n              \"groupReference\": \"B1-P2-G\",\n              \"familyOrBusinessName\": \"Citizen\",\n              \"givenName\": \"John\",\n              \"address\": null,\n              \"email\": null,\n              \"phone\": null,\n              \"mobile\": null\n            },\n            \"card\": {\n              \"cardNumber\": \"510510xxxxxx5100\",\n              \"cardholderName\": \"John Citizen\",\n              \"cardExpires\": \"2030-10-01T00:00:00\",\n              \"cardType\": \"Mastercard\"\n            },\n            \"bankAccount\": null,\n            \"rejectionRecovery\": null,\n            \"verification\": null\n          }\n        }\n      ]\n    }\n  ]"
						}
					]
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Scheduled Future Payments",
			"item": [
				{
					"name": "Create New Schedule",
					"item": [
						{
							"name": "Schedule a single payment üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Date\": \"2022-04-27\",\r\n    \"Amount\": 33.75,\r\n    \"Reference\": \"Scheduled-Payment-001\",\r\n    \"Description\": \"This is the first scheduled payment\",\r\n    \"SubBusinessId\": null,\r\n    \"ServiceDate\": \"2022-03-01T10:00:00+10:00\",\r\n    \"Audit\": {\r\n      \"Username\": \"Example-User\",\r\n      \"UserIP\": \"1.2.3.4\"\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/payers/P10000-UNIQUE-REF/schedules/payments",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"payers",
										"P10000-UNIQUE-REF",
										"schedules",
										"payments"
									]
								},
								"description": "\r\nAdds a single payment to the default schedule for an existing payer that will be processed at a future time. If the payer does not have a processing status of `ACTIVE` on the scheduled date, then the payment will not be processed. See the [Change a Payers status](#8188cb84-cf5f-469e-b51f-406d4dbc761a)  request for more details.\r\n\r\nThere is a limit of 25 transactions, per Payer, per day.\r\n\r\nWhenever possible, we recommend keeping your system simple and efficient by using only the default schedule for payers. However, there are some scenarios that require payers to have multiple schedules, each having a different set of future payments. To allow this, the URL above supports the inclusion of an optional `schedule-reference` route, as follows:\r\n\r\n`.../schedules/{{schedule-reference}}/payments`\r\n\r\nIf you think that you might require payers to have multiple schedules, then we ask that you first [contact us](#5e519f4a-1513-45cc-893a-0e80148463de) to discuss your requirements before using this feature. We'll try our best to keep your system as simple and efficient as we can!\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>payer-reference</code></td>\r\n        <td>Your unique reference that identifies the payer</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Post Body\r\n\r\n[Schedule Payment Model](#6627b71d-507d-4554-a26d-1e460ad71ef1)\r\n\r\n###### Response Body\r\n\r\n[Schedule Payment Result Model](#95490de3-e561-4934-adfa-fba34d37e261)\r\n"
							},
							"response": [
								{
									"name": "Schedule Single Payment",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Date\": \"2022-06-27\",\r\n    \"Amount\": 33.75,\r\n    \"Reference\": \"Scheduled-Payment-001\",\r\n    \"Description\": \"This is the first scheduled payment\",\r\n    \"SubBusinessId\": null,\r\n    \"Audit\": {\r\n      \"Username\": \"Example-User\",\r\n      \"UserIP\": \"1.2.3.4\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/schedules/payments",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"payers",
												"{{payer-reference}}",
												"schedules",
												"payments"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"scheduledPaymentId\": \"213813\"\n}"
								}
							]
						},
						{
							"name": "Schedule multiple future payments üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ScheduleType\": \"LIMITED\",\n    \"StartDate\": \"2022-04-07\",\n    \"Amount\": 50.88,\n    \"Frequency\": \"MONTHLY\",\n    \"FrequencyDay\": 3,\n    \"LimitToTransactionCount\": 7,\n    \"LimitToTransactionAmount\": null,\n    \"RemoveAllPaymentsBeforeStartDate\": null,\n    \"TemplateId\": null,\n    \"Audit\": {\n      \"Username\": \"Example-User\",\n      \"UserIP\": \"1.2.3.4\"\n    }\n}"
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/schedules/",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"payers",
										"{{payer-reference}}",
										"schedules",
										""
									]
								},
								"description": "Adds multiple payments to the default schedule for an existing payer that will be processed at a future time. If the payer does not have a processing status of `ACTIVE` on the scheduled date, then the payment will not be processed. See the [Change a Payers status](#8188cb84-cf5f-469e-b51f-406d4dbc761a) request for more details.\r\n\r\nWhenever possible, we recommend keeping your system simple and efficient by using only the default schedule for payers. However, there are some scenarios that require payers to have multiple schedules, each having a different set of future payments. To allow this, the URL above supports the inclusion of an optional `schedule-reference` route, as follows:\r\n\r\n`.../schedules/{{schedule-reference}}`\r\n\r\nIf you think that you might require payers to have multiple schedules, then we ask that you first [contact us](#5e519f4a-1513-45cc-893a-0e80148463de) to discuss your requirements before using this feature. We'll try our best to keep your system as simple and efficient as we can!\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>payer-reference</code></td>\r\n        <td>Your unique reference that identifies the payer</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Post Body\r\n\r\n[Schedule Generate Model](#5b73ab32-fe9b-464f-ba9b-1558b09ad9e2)\r\n\r\n###### Response Body"
							},
							"response": [
								{
									"name": "Schedule Generate (Unending)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ScheduleType\": \"UNENDING\",\n    \"StartDate\": \"2022-06-07\",\n    \"Amount\": 100,\n    \"Frequency\": \"FORTNIGHTLY\",\n    \"FrequencyDay\": 5,\n    \"RemoveAllPaymentsBeforeStartDate\": true,\n    \"Audit\": {\n        \"Username\": \"Example-User\",\n        \"UserIP\": \"1.2.3.4\"\n    }\n}"
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/schedules/",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"payers",
												"{{payer-reference}}",
												"schedules",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Length",
											"value": "0",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Date",
											"value": "Fri, 29 Jun 2018 04:59:40 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Kestrel",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET",
											"name": "X-Powered-By",
											"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
										},
										{
											"key": "X-SourceFiles",
											"value": "=?UTF-8?B?QzpcSW50ZWdyYVBheVxHaXRcSW50ZWdyYVBheS5TeXN0ZW1zXEludGVncmFQYXkuQXBpLlB1YmxpY1xidXNpbmVzc2VzXDEyMDZccGF5ZXJzXFAxLVVOSVFVRS1SRUZcc2NoZWR1bGVzXA==?=",
											"name": "X-SourceFiles",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Schedule Generate (Limited By Total)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ScheduleType\": \"LIMITED\",\n    \"StartDate\": \"2022-06-07\",\n    \"Amount\": 100,\n    \"Frequency\": \"WEEKLY\",\n    \"FrequencyDay\": 2,\n    \"LimitToTransactionCount\": null,\n    \"LimitToTransactionAmount\": 1100,\n    \"RemoveAllPaymentsBeforeStartDate\": null,\n    \"TemplateId\": null,\n    \"Audit\": {\n        \"Username\": \"Example-User\",\n        \"UserIP\": \"1.2.3.4\"\n    }\n}"
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/schedules/",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"payers",
												"{{payer-reference}}",
												"schedules",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Length",
											"value": "0",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Date",
											"value": "Fri, 29 Jun 2018 04:56:51 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Kestrel",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET",
											"name": "X-Powered-By",
											"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
										},
										{
											"key": "X-SourceFiles",
											"value": "=?UTF-8?B?QzpcSW50ZWdyYVBheVxHaXRcSW50ZWdyYVBheS5TeXN0ZW1zXEludGVncmFQYXkuQXBpLlB1YmxpY1xidXNpbmVzc2VzXDEyMDZccGF5ZXJzXFAxLVVOSVFVRS1SRUZcc2NoZWR1bGVzXA==?=",
											"name": "X-SourceFiles",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Schedule Generate (Limited By Count)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ScheduleType\": \"LIMITED\",\n    \"StartDate\": \"2022-06-07\",\n    \"Amount\": 750.88,\n    \"Frequency\": \"MONTHLY\",\n    \"FrequencyDay\": 3,\n    \"LimitToTransactionCount\": 7,\n    \"LimitToTransactionAmount\": null,\n    \"RemoveAllPaymentsBeforeStartDate\": null,\n    \"TemplateId\": null,\n    \"Audit\": {\n        \"Username\": \"Example-User\",\n        \"UserIP\": \"1.2.3.4\"\n    }\n}"
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/schedules/",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"payers",
												"{{payer-reference}}",
												"schedules",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Length",
											"value": "0",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Date",
											"value": "Fri, 29 Jun 2018 04:54:41 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Kestrel",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET",
											"name": "X-Powered-By",
											"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
										},
										{
											"key": "X-SourceFiles",
											"value": "=?UTF-8?B?QzpcSW50ZWdyYVBheVxHaXRcSW50ZWdyYVBheS5TeXN0ZW1zXEludGVncmFQYXkuQXBpLlB1YmxpY1xidXNpbmVzc2VzXDEyMDZccGF5ZXJzXFAxLVVOSVFVRS1SRUZcc2NoZWR1bGVzXA==?=",
											"name": "X-SourceFiles",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Delete Schedule",
					"item": [
						{
							"name": "Delete Single Payment üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/schedules/payments/{{scheduled-payment-id}}/?username=Example-User&userip=1.2.3.4",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"payers",
										"{{payer-reference}}",
										"schedules",
										"payments",
										"{{scheduled-payment-id}}",
										""
									],
									"query": [
										{
											"key": "username",
											"value": "Example-User"
										},
										{
											"key": "userip",
											"value": "1.2.3.4"
										}
									]
								},
								"description": "Deletes a single payment that is currently scheduled for this payer based on our unique scheduled payment ID.\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>payer-reference</code></td>\r\n        <td>Your unique reference that identifies the payer</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>scheduled-payment-id</code></td>\r\n        <td>Our unique ID of the payment that you wish to look up information of</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Querystring Options\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>username</code></td>\r\n        <td>string</td>\r\n        <td>For auditing purposes - Name/reference of a user, or process identifier, from your system which initiated the API call</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>userIP</code></td>\r\n        <td>string</td>\r\n        <td>For auditing purposes - IP address of the user or process from your system which initiated the API call</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Response Body"
							},
							"response": []
						},
						{
							"name": "Delete All Payments üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/schedules/?username=Example-User&userip=1.2.3.4",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"payers",
										"{{payer-reference}}",
										"schedules",
										""
									],
									"query": [
										{
											"key": "username",
											"value": "Example-User"
										},
										{
											"key": "userip",
											"value": "1.2.3.4"
										}
									]
								},
								"description": "Deletes all payments currently scheduled for this payer\r\n\r\nWhenever possible, we recommend keeping your system simple and efficient by using only the default schedule for payers. However, there are some scenarios that require payers to have multiple schedules, each having a different set of future payments. To allow this, the URL above supports the inclusion of an optional `schedule-reference` route, as follows:\r\n\r\n`.../schedules/{{schedule-reference}}`\r\n\r\nIf you think that you might require payers to have multiple schedules, then we ask that you first [contact us](#5e519f4a-1513-45cc-893a-0e80148463de) to discuss your requirements before using this feature. We'll try our best to keep your system as simple and efficient as we can!\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>payer-reference</code></td>\r\n        <td>Your unique reference that identifies the payer</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Querystring Options\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>username</code></td>\r\n        <td>string</td>\r\n        <td>For auditing purposes - Name/reference of a user, or process identifier, from your system which initiated the API call</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>userIP</code></td>\r\n        <td>string</td>\r\n        <td>For auditing purposes - IP address of the user or process from your system which initiated the API call</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Response Body"
							},
							"response": []
						}
					]
				},
				{
					"name": "Change Schedule Amount",
					"item": [
						{
							"name": "Change Payment Amounts üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ScheduledPaymentId\": \"213866\",\r\n    \"NewAmount\": 200.95,\r\n    \"ChangeAllFuturePayments\": false,\r\n    \"Audit\": {\r\n      \"Username\": \"Example-User\",\r\n      \"UserIP\": \"1.2.3.4\"\r\n    }\r\n}\r\n"
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/schedules/",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"payers",
										"{{payer-reference}}",
										"schedules",
										""
									]
								},
								"description": "Lets you change the amount of a single scheduled payment, with the option to also change the amount of all future payments scheduled after that payment.\r\n\r\nOur unique ScheduledPaymentId is required to identity the payment to change - you can obtain this by doing a scheduled payment search.\r\n\r\nWhenever possible, we recommend keeping your system simple and efficient by using only the default schedule for payers. However, there are some scenarios that require payers to have multiple schedules, each having a different set of future payments. To allow this, the URL above supports the inclusion of an optional `schedule-reference` route, as follows:\r\n\r\n`.../schedules/{{schedule-reference}}`\r\n\r\nIf you think that you might require payers to have multiple schedules, then we ask that you first [contact us](#5e519f4a-1513-45cc-893a-0e80148463de) to discuss your requirements before using this feature. We'll try our best to keep your system as simple and efficient as we can!\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>payer-reference</code></td>\r\n        <td>Your unique reference that identifies the payer</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Post Body\r\n\r\n[Schedule Change Amounts Model](#17afa275-af15-4e18-bfd2-6f5467e162fd)\r\n\r\n###### Response Body"
							},
							"response": []
						}
					]
				},
				{
					"name": "Find Schedule Details",
					"item": [
						{
							"name": "Look up a scheduled payment üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/schedules/payments/{{scheduled-payment-id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"payers",
										"{{payer-reference}}",
										"schedules",
										"payments",
										"{{scheduled-payment-id}}"
									]
								},
								"description": "Returns information on an individual scheduled payment\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>payer-reference</code></td>\r\n        <td>Your unique reference that identifies the payer</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>scheduled-payment-id</code></td>\r\n        <td>Our unique ID of the payment that you wish to look up information of</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Response Body\r\n\r\n[Schedule Search Model](#9e0531e0-5c54-44a4-b07d-30f5bf22be69)\r\n"
							},
							"response": [
								{
									"name": "Scheduled Payment Lookup",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/schedules/payments/{{scheduled-payment-id}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"payers",
												"{{payer-reference}}",
												"schedules",
												"payments",
												"{{scheduled-payment-id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"scheduledPaymentId\": \"213813\",\n    \"business\": {\n        \"businessId\": \"1234\",\n        \"businessName\": \"Test Business Ltd\"\n    },\n    \"date\": \"2020-06-27T00:00:00\",\n    \"amount\": 33.75,\n    \"reference\": \"Scheduled-Payment-001\",\n    \"description\": \"This is the first scheduled payment\",\n    \"scheduleReference\": null,\n    \"isIndividualPayment\": true,\n    \"subBusinessId\": null,\n    \"payer\": {\n        \"payerId\": \"135032\",\n        \"uniqueReference\": \"P1-UNIQUE-REF\",\n        \"groupReference\": \"P1-GROUP-REF\",\n        \"familyOrBusinessName\": \"Surname\",\n        \"givenName\": \"First Name\",\n        \"status\": \"ACTIVE\"\n    }\n}"
								}
							]
						},
						{
							"name": "Find a Payers scheduled payments üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/schedules/payments",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"payers",
										"{{payer-reference}}",
										"schedules",
										"payments"
									]
								},
								"description": "Search on all scheduled payments currently assigned to the given payer.\r\n\r\nWhenever possible, we recommend keeping your system simple and efficient by using only the default schedule for payers. However, there are some scenarios that require payers to have multiple schedules, each having a different set of future payments. To allow this, the URL above supports the inclusion of an optional `schedule-reference` route, as follows:\r\n\r\n`.../schedules/{{schedule-reference}}/payments`\r\n\r\nIf you think that you might require payers to have multiple schedules, then we ask that you first [contact us](#5e519f4a-1513-45cc-893a-0e80148463de) to discuss your requirements before using this feature. We'll try our best to keep your system as simple and efficient as we can!\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>payer-reference</code></td>\r\n        <td>Your unique reference that identifies the payer</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Querystring Options\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>scheduledPaymentId</code></td>\r\n        <td>string</td>\r\n        <td>Search based on the unique ID that identifies each scheduled payment</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>reference</code></td>\r\n        <td>string</td>\r\n        <td>Search on the reference you provided for the payment</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>description</code></td>\r\n        <td>string</td>\r\n        <td>Search on the description you provided for the payment</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>scheduleReference</code></td>\r\n        <td>string</td>\r\n        <td>Search for any schedule references you provided for scheduled payments</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>amountFrom</code></td>\r\n        <td>decimal</td>\r\n        <td>Search for payments that are greater than or equal to this amount</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>amountTo</code></td>\r\n        <td>decimal</td>\r\n        <td>Search for payments that are less than or equal to this amount</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>dateFrom</code></td>\r\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">ISO 8601 Date/Time</a></td>\r\n        <td>Search for transaction processed from this date/time. PLEASE NOTE: timeFrom is REQUIRED for all searches where a \"reference\" is not supplied.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>dateTo</code></td>\r\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">ISO 8601 Date/Time</a></td>\r\n        <td>Search for payments that are scheduled before or after this date</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>isIndividualPayment</code></td>\r\n        <td>boolean</td>\r\n        <td>Set to True to search only for payments that were individually scheduled. Set to False to return only payments automatically generated as part of a payment schedule. Do not set or set to Null to return all payments.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>skip</code></td>\r\n        <td>integer</td>\r\n        <td>Number of records to not return (offset) when paging results (Default: 0)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>take</code></td>\r\n        <td>integer</td>\r\n        <td>Number of records to return per call when paging results (Default: 200)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Response Body\r\n\r\n[Schedule Search Model](#9e0531e0-5c54-44a4-b07d-30f5bf22be69)\r\n"
							},
							"response": [
								{
									"name": "Scheduled Payments Search (Payer)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/schedules/payments",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"payers",
												"{{payer-reference}}",
												"schedules",
												"payments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "[\n    {\n        \"scheduledPaymentId\": \"213893\",\n        \"business\": {\n            \"businessId\": \"1234\",\n      \"businessName\": \"Test Business Ltd\"\n        },\n        \"date\": \"2021-07-05T00:00:00\",\n        \"amount\": 100.5,\n        \"reference\": null,\n        \"description\": null,\n        \"scheduleReference\": null,\n        \"isIndividualPayment\": false,\n        \"subBusinessId\": null,\n        \"payer\": {\n            \"payerId\": \"135032\",\n            \"uniqueReference\": \"P1-UNIQUE-REF\",\n            \"groupReference\": \"P1-GROUP-REF\",\n            \"familyOrBusinessName\": \"Surname\",\n            \"givenName\": \"First Name\",\n            \"status\": \"ACTIVE\"\n        }\n    },\n    {\n        \"scheduledPaymentId\": \"213894\",\n        \"business\": {\n            \"businessId\": \"1234\",\n      \"businessName\": \"Test Business Ltd\"\n        },\n        \"date\": \"2021-08-03T00:00:00\",\n        \"amount\": 100.5,\n        \"reference\": null,\n        \"description\": null,\n        \"scheduleReference\": null,\n        \"isIndividualPayment\": false,\n        \"subBusinessId\": null,\n        \"payer\": {\n            \"payerId\": \"135032\",\n            \"uniqueReference\": \"P1-UNIQUE-REF\",\n            \"groupReference\": \"P1-GROUP-REF\",\n            \"familyOrBusinessName\": \"Surname\",\n            \"givenName\": \"First Name\",\n            \"status\": \"ACTIVE\"\n        }\n    },\n    {\n        \"scheduledPaymentId\": \"213895\",\n        \"business\": {\n            \"businessId\": \"1234\",\n      \"businessName\": \"Test Business Ltd\"\n        },\n        \"date\": \"2021-09-03T00:00:00\",\n        \"amount\": 100.5,\n        \"reference\": null,\n        \"description\": null,\n        \"scheduleReference\": null,\n        \"isIndividualPayment\": false,\n        \"subBusinessId\": null,\n        \"payer\": {\n            \"payerId\": \"135032\",\n            \"uniqueReference\": \"P1-UNIQUE-REF\",\n            \"groupReference\": \"P1-GROUP-REF\",\n            \"familyOrBusinessName\": \"Surname\",\n            \"givenName\": \"First Name\",\n            \"status\": \"ACTIVE\"\n        }\n    }\n]"
								},
								{
									"name": "Find a Payers scheduled payments with options",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/schedules/payments?isIndividualPayment=1&amountFrom=1.00&amountTo=100.00",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"payers",
												"{{payer-reference}}",
												"schedules",
												"payments"
											],
											"query": [
												{
													"key": "isIndividualPayment",
													"value": "1",
													"description": "Set to True to search only for payments that were individually scheduled. Set to False to return only payments automatically generated as part of a payment schedule. Do not set or set to Null to return all payments."
												},
												{
													"key": "amountFrom",
													"value": "1.00",
													"description": "Search for payments that are greater than or equal to this amount"
												},
												{
													"key": "amountTo",
													"value": "100.00",
													"description": "Search for payments that are less than or equal to this amount"
												}
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Search all scheduled payments üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/scheduled-payments?dateFrom=2018-06-09T11:07:15+10:00&dateTo=2018-12-09T11:07:15+10:00",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"scheduled-payments"
									],
									"query": [
										{
											"key": "dateFrom",
											"value": "2018-06-09T11:07:15+10:00",
											"description": "Search for transaction processed from this date/time. PLEASE NOTE: timeFrom is REQUIRED for all searches where a \"reference\" is not supplied."
										},
										{
											"key": "dateTo",
											"value": "2018-12-09T11:07:15+10:00",
											"description": "Search for payments that are scheduled before or after this date"
										}
									]
								},
								"description": "Used for searching all types of scheduled payments (payments that have not yet been processed, but are scheduled to be processed in the future). A maximum of 200 payments can be returned in one call (see skip/take parameters below).\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Querystring Options\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>scheduledPaymentId</code></td>\r\n        <td>string</td>\r\n        <td>Search based on the unique ID that identifies each scheduled payment</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>reference</code></td>\r\n        <td>string</td>\r\n        <td>Search on the reference you provided for the payment</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>description</code></td>\r\n        <td>string</td>\r\n        <td>Search on the description you provided for the payment</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>scheduleReference</code></td>\r\n        <td>string</td>\r\n        <td>Search for any schedule references you provided for scheduled payments</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>amountFrom</code></td>\r\n        <td>decimal</td>\r\n        <td>Search for payments that are greater than or equal to this amount</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>amountTo</code></td>\r\n        <td>decimal</td>\r\n        <td>Search for payments that are less than or equal to this amount</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>dateFrom</code></td>\r\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">ISO 8601 Date/Time</a></td>\r\n        <td>Search for transaction processed from this date/time. PLEASE NOTE: timeFrom is REQUIRED for all searches where a \"reference\" is not supplied.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>dateTo</code></td>\r\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">ISO 8601 Date/Time</a></td>\r\n        <td>Search for payments that are scheduled before or after this date</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>isIndividualPayment</code></td>\r\n        <td>boolean</td>\r\n        <td>Set to True to search only for payments that were individually scheduled. Set to False to return only payments automatically generated as part of a payment schedule. Do not set or set to Null to return all payments.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>skip</code></td>\r\n        <td>integer</td>\r\n        <td>Number of records to not return (offset) when paging results (Default: 0)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>take</code></td>\r\n        <td>integer</td>\r\n        <td>Number of records to return per call when paging results (Default: 200)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Response Body\r\n\r\n[Schedule Search Model](#9e0531e0-5c54-44a4-b07d-30f5bf22be69)\r\n"
							},
							"response": [
								{
									"name": "Scheduled Payments Search ALL",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/scheduled-payments",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"scheduled-payments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "[\n    {\n        \"scheduledPaymentId\": \"213898\",\n        \"business\": {\n            \"businessId\": \"1234\",\n          \"businessName\": \"Test Business Ltd\"\n        },\n        \"date\": \"2018-06-29T00:00:00\",\n        \"amount\": 75,\n        \"reference\": \"Pmt-Reference-001\",\n        \"description\": \"This is a scheduled payment\",\n        \"scheduleReference\": null,\n        \"isIndividualPayment\": true,\n        \"subBusinessId\": null,\n        \"payer\": {\n            \"payerId\": \"114868\",\n            \"uniqueReference\": \"114868\",\n            \"groupReference\": \"114868\",\n            \"familyOrBusinessName\": \"Smith\",\n            \"givenName\": \"John\",\n            \"status\": \"ACTIVE\"\n        }\n    },\n    {\n        \"scheduledPaymentId\": \"213893\",\n        \"business\": {\n            \"businessId\": \"1234\",\n          \"businessName\": \"Test Business Ltd\"\n        },\n        \"date\": \"2021-07-05T00:00:00\",\n        \"amount\": 100.5,\n        \"reference\": null,\n        \"description\": null,\n        \"scheduleReference\": null,\n        \"isIndividualPayment\": false,\n        \"subBusinessId\": null,\n        \"payer\": {\n            \"payerId\": \"135032\",\n            \"uniqueReference\": \"P1-UNIQUE-REF\",\n            \"groupReference\": \"P1-GROUP-REF\",\n            \"familyOrBusinessName\": \"Surname\",\n            \"givenName\": \"First Name\",\n            \"status\": \"ACTIVE\"\n        }\n    },\n    {\n        \"scheduledPaymentId\": \"213894\",\n        \"business\": {\n            \"businessId\": \"1234\",\n          \"businessName\": \"Test Business Ltd\"\n        },\n        \"date\": \"2021-08-03T00:00:00\",\n        \"amount\": 100.5,\n        \"reference\": null,\n        \"description\": null,\n        \"scheduleReference\": null,\n        \"isIndividualPayment\": false,\n        \"subBusinessId\": null,\n        \"payer\": {\n            \"payerId\": \"135032\",\n            \"uniqueReference\": \"P1-UNIQUE-REF\",\n            \"groupReference\": \"P1-GROUP-REF\",\n            \"familyOrBusinessName\": \"Surname\",\n            \"givenName\": \"First Name\",\n            \"status\": \"ACTIVE\"\n        }\n    },\n    {\n        \"scheduledPaymentId\": \"213895\",\n        \"business\": {\n            \"businessId\": \"1234\",\n          \"businessName\": \"Test Business Ltd\"\n        },\n        \"date\": \"2021-09-03T00:00:00\",\n        \"amount\": 100.5,\n        \"reference\": null,\n        \"description\": null,\n        \"scheduleReference\": null,\n        \"isIndividualPayment\": false,\n        \"subBusinessId\": null,\n        \"payer\": {\n            \"payerId\": \"135032\",\n            \"uniqueReference\": \"P1-UNIQUE-REF\",\n            \"groupReference\": \"P1-GROUP-REF\",\n            \"familyOrBusinessName\": \"Surname\",\n            \"givenName\": \"First Name\",\n            \"status\": \"ACTIVE\"\n        }\n    }\n]"
								},
								{
									"name": "Search all scheduled payments with options",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/scheduled-payments?dateFrom=2018-06-09T11:07:15+10:00&dateTo=2018-12-09T11:07:15+10:00",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"scheduled-payments"
											],
											"query": [
												{
													"key": "dateFrom",
													"value": "2018-06-09T11:07:15+10:00",
													"description": "Search for transaction processed from this date/time. PLEASE NOTE: timeFrom is REQUIRED for all searches where a \"reference\" is not supplied."
												},
												{
													"key": "dateTo",
													"value": "2018-12-09T11:07:15+10:00",
													"description": "Search for payments that are scheduled before or after this date"
												}
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						}
					]
				}
			],
			"description": "Recurring payments are Credit Card and Bank Debit (ACH) transactions that are scheduled to be processed on the current or future date.\n\nDepending on the functionality of the software integrating, the scheduling of transactions may be controlled by the integrated application or by the Payrix Payment Scheduler.\n\nMost CRM and ERP systems already contain the information regarding the Payer and when they are to be debited. In this case, transaction requests are typically passed on the morning they are due to be debited via the POST Schedule a single payment or POST Schedule multiple future payments functions.\n\nTo process a transaction ASAP, it is possible to schedule for \"today\", this transaction will be picked up in the next available processing run. If the transaction is received after the last processing run for the day has started, it will be processed in the next available run. typically, the morning of the next business day.\n\nIf you would prefer to use the Payrix scheduler, you would use the POST Schedule multiple future payments to set up the original payment schedule, the utilise the POST Schedule a single payment, POST Schedule a single payment and PATCH Change Payment Amounts functions to deal with exceptions. Alternatively, if exceptions are rare, you could choose to allow the users to make changes manually through the Payrix portal application.\n\nPlease be aware you will need to add the Payrix Terms and Conditions to your page for the Payer to agree to.\n\nAn alternative method of setting up schedules in the Payrix Payment Scheduler is to utilise the eDDR page which allows users to enter biographical and payment details, select a schedule and agree to Terms and Conditions on a single PCI compliant page hosted by Payrix.\n\n## Special Notes üìë\n\nUp until the time the Payrix process is run for the day, Scheduled transactions may be altered or removed. Once a scheduled transaction is picked up for processing by Payrix, the transaction may not be removed, and can only be refunded once the transaction has been processed by the bank.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Transactions",
			"item": [
				{
					"name": "Create Card Transaction",
					"item": [
						{
							"name": "Make a live card transaction üîíüè¥",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ProcessType\": \"COMPLETE\",\r\n    \"Reference\": \"REAL-TIME-TXN-101\",\r\n    \"Description\": \"This is an example real-time transaction\",\r\n    \"Amount\": 10.25,\r\n    \"CardToken\": null,\r\n    \"Card\": {\r\n      \"CardNumber\": \"4111111111111111\",\r\n      \"CardholderName\": \"TEST Card\",\r\n      \"ExpiryYear\": 2023,\r\n      \"ExpiryMonth\": 10,\r\n      \"Ccv\": \"123\"\r\n    },\r\n    \"Payer\": null,\r\n    \"Audit\": {\r\n    \"Username\": \"Example-User\",\r\n      \"UserIP\": \"1.2.3.4\"\r\n    }\r\n  }"
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/transactions/card-payments",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"transactions",
										"card-payments"
									]
								},
								"description": "This function submits a single credit card payment to the bank and returns a result in real-time. The payment can be a complete payment that will be processed and the funds settled to the business, or it can be a pre-authorisation that will hold the funds until you [Process a pre authorised card transaction](#18cec791-7643-47be-8f0d-b36d44c0e366) or the pre-authorisation expires.\r\n\r\nPlease note you have the option to [Tokenize Card](#b7f07cda-0595-4885-a5e1-4f3d2228c57f) and to  [Make a live tokenized card transaction](#14654018-76b6-4b4b-9ecd-a8e89a3b7af7)\r\n\r\nUsually transactions will be processed by the bank and a result returned to you within a couple of seconds, however delays in the bank networks can occur from time to time so you should ideally enable your system to be able to wait up to 90 seconds to get a transaction result.\r\n\r\n**üè¥ WARNING: This request can directly accept payment card details. If you do so, then your integration CANNOT be certified unless your system is PCI DSS complaint. See the [PCI Compliance](#e519347a-a7b0-4622-9e17-fed5bd2dc364) section for more details üè¥**\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Post Body\r\n\r\n[Card Transaction Model](#2ff1a7b1-eedc-4e70-9a61-b49d2ebf915e)\r\n\r\n###### Response Body\r\n\r\n[Transaction Result Model](#7828289b-5a94-4c43-81c3-cf955e6e16bd)"
							},
							"response": [
								{
									"name": "Real-time Card Transaction (Complete)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ProcessType\": \"COMPLETE\",\r\n    \"Reference\": \"REAL-TIME-TXN-001\",\r\n    \"Description\": \"This is an example real-time transaction\",\r\n    \"Amount\": 100.25,\r\n    \"CardToken\": null,\r\n    \"Card\": {\r\n      \"CardNumber\": \"4111111111111111\",\r\n      \"CardholderName\": \"TEST Card\",\r\n      \"ExpiryYear\": 2023,\r\n      \"ExpiryMonth\": 10,\r\n      \"Ccv\": \"123\"\r\n    },\r\n    \"Payer\": null,\r\n    \"Audit\": {\r\n\t\t\"Username\": \"Example-User\",\r\n    \t\"UserIP\": \"1.2.3.4\"\r\n    }\r\n  }"
										},
										"url": {
											"raw": "https://sandbox.rest.paymentsapi.io/businesses/{{business-id}}/transactions/card-payments",
											"protocol": "https",
											"host": [
												"sandbox",
												"rest",
												"paymentsapi",
												"io"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"transactions",
												"card-payments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"transactionId\": \"RT549168\",\n    \"reference\": \"REAL-TIME-TXN-001\",\n    \"statusCode\": \"S\",\n    \"subStatusCode\": null,\n    \"statusDescription\": null,\n    \"processedAmount\": 100.25,\n    \"cardType\": \"Visa\"\n}"
								},
								{
									"name": "Real-time Card Transaction (Pre-auth)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ProcessType\": \"PREAUTH\",\r\n    \"Reference\": \"REAL-TIME-TXN-002\",\r\n    \"Description\": \"This is an example pre-auth real-time transaction\",\r\n    \"Amount\": 200,\r\n    \"CardToken\": null,\r\n    \"Card\": {\r\n      \"CardNumber\": \"5555555555554444\",\r\n      \"CardholderName\": \"TEST CARD\",\r\n      \"ExpiryYear\": 2023,\r\n      \"ExpiryMonth\": 10,\r\n      \"Ccv\": \"123\"\r\n    },\r\n    \"Payer\": null,\r\n    \"Audit\": {\r\n\t\t\"Username\": \"Example-User\",\r\n    \t\"UserIP\": \"1.2.3.4\"\r\n    }\r\n  }"
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/transactions/card-payments",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"transactions",
												"card-payments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"transactionId\": \"RT549170\",\n    \"reference\": \"REAL-TIME-TXN-002\",\n    \"statusCode\": \"S\",\n    \"subStatusCode\": null,\n    \"statusDescription\": null,\n    \"processedAmount\": 200,\n    \"cardType\": \"Mastercard\"\n}"
								},
								{
									"name": "Real-time Card Transaction (Rejected transaction)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ProcessType\": \"COMPLETE\",\r\n    \"Reference\": \"REAL-TIME-TXN-003\",\r\n    \"Description\": \"This is an example rejected real-time transaction\",\r\n    \"Amount\": 20.61,\r\n    \"CardToken\": null,\r\n    \"Card\": {\r\n      \"CardNumber\": \"4012888888881881\",\r\n      \"CardholderName\": \"TEST Card\",\r\n      \"ExpiryYear\": 2028,\r\n      \"ExpiryMonth\": 3,\r\n      \"Ccv\": \"123\"\r\n    },\r\n    \"Payer\": null,\r\n    \"Audit\": {\r\n\t\t\"Username\": \"Example-User\",\r\n    \t\"UserIP\": \"1.2.3.4\"\r\n    }\r\n  }"
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/transactions/card-payments",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"transactions",
												"card-payments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"transactionId\": \"RT549171\",\n    \"reference\": \"REAL-TIME-TXN-003\",\n    \"statusCode\": \"F\",\n    \"subStatusCode\": \"R1\",\n    \"statusDescription\": \"Insufficient Funds\",\n    \"processedAmount\": 20.61,\n    \"cardType\": \"Mastercard\"\n}"
								}
							]
						},
						{
							"name": "Make a live tokenized card transaction üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ProcessType\": \"COMPLETE\",\r\n    \"Reference\": \"REAL-TIME-TXN-100\",\r\n    \"Description\": \"This is an example real-time transaction\",\r\n    \"Amount\": 100.25,\r\n    \"CardToken\": \"cbd86c35289249eb86759453cea4025b\",\r\n    \"ServiceDate\": \"2022-03-01T10:00:00+10:00\",\r\n    \"Payer\": {\r\n    \t\"uniqueReference\": \"A306026D-0B4B-479F-9716-256152C8D310\",\r\n    \t\"groupReference\":\"A306026D-0B4B-479F-9716-256152C8D310\",\r\n    \t\"familyOrBusinessName\":\"Surname\",\r\n    \t\"givenName\":\"First Name\",\r\n    \t\"billingAddress\":{\"Line1\": \"1 Test St\",\"Line2\": \"Test Building\",\"Suburb\": \"Testville\",\"State\": \"QLD\",\"PostCode\": \"4001\",\"Country\": \"AUS\" },\r\n    \t\"email\":\"test@test.com\",\r\n    \t\"phone\":\"0733331111\",\r\n    \t\"savePayer\":\"true\"\r\n    },\r\n    \"Audit\": {\r\n\t\t\"Username\": \"Example-User\",\r\n    \t\"UserIP\": \"1.2.3.4\"\r\n    }\r\n  }"
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/transactions/card-payments/token",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"transactions",
										"card-payments",
										"token"
									]
								},
								"description": "This function submits a single credit card payment to the bank and returns a result in real-time. The payment can be a complete payment that will be processed and the funds settled to the business, or it can be a pre-authorisation that will hold the funds until you [Process a pre authorised card transaction](#18cec791-7643-47be-8f0d-b36d44c0e366) or the pre-authorisation expires.\r\n\r\nThis call requires a token generated from the Tokenize Card endpoint. For more details on how to tokenize the card please click [here](#b7f07cda-0595-4885-a5e1-4f3d2228c57f).\r\n\r\nUsually transactions will be processed by the bank and a result returned to you within a couple of seconds, however delays in the bank networks can occur from time to time so you should ideally enable your system to be able to wait up to 90 seconds to get a transaction result.\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Post Body\r\n\r\n[Tokenized Card Transaction Model](#8f36ff42-8738-4287-8ca0-ffccf00d8521)\r\n\r\n###### Response Body\r\n\r\n[Transaction Result Model](#7828289b-5a94-4c43-81c3-cf955e6e16bd)"
							},
							"response": [
								{
									"name": "Real-time Card Transaction (Rejected transaction)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ProcessType\": \"COMPLETE\",\r\n    \"Reference\": \"REAL-TIME-TXN-003\",\r\n    \"Description\": \"This is an example rejected real-time transaction\",\r\n    \"Amount\": 20.61,\r\n    \"CardToken\": \"6040ac298a41417bb19f263158043918\",\r\n    \"Payer\": null,\r\n    \"Audit\": {\r\n\t\t\"Username\": \"Example-User\",\r\n    \t\"UserIP\": \"1.2.3.4\"\r\n    }\r\n  }"
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/transactions/card-payments/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"transactions",
												"card-payments",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"transactionId\": \"59583\",\n    \"reference\": \"REAL-TIME-TXN-003\",\n    \"statusCode\": \"F\",\n    \"subStatusCode\": \"R1\",\n    \"statusDescription\": \"Insufficient Funds\",\n    \"processedAmount\": 20.61\n}"
								},
								{
									"name": "Real-time Card Transaction (Pre-auth)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ProcessType\": \"PREAUTH\",\r\n    \"Reference\": \"REAL-TIME-TXN-002\",\r\n    \"Description\": \"This is an example pre-auth real-time transaction\",\r\n    \"Amount\": 200,\r\n    \"CardToken\": \"6040ac298a41417bb19f263158043918\",\r\n    \"Payer\": null,\r\n    \"Audit\": {\r\n\t\t\"Username\": \"Example-User\",\r\n    \t\"UserIP\": \"1.2.3.4\"\r\n    }\r\n  }"
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/transactions/card-payments/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"transactions",
												"card-payments",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"transactionId\": \"59582\",\n    \"reference\": \"REAL-TIME-TXN-002\",\n    \"statusCode\": \"S\",\n    \"subStatusCode\": null,\n    \"statusDescription\": null,\n    \"processedAmount\": 200\n}"
								},
								{
									"name": "Real-time Card Transaction (Complete)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ProcessType\": \"COMPLETE\",\r\n    \"Reference\": \"REAL-TIME-TXN-001\",\r\n    \"Description\": \"This is an example real-time transaction\",\r\n    \"Amount\": 100.25,\r\n    \"CardToken\": \"6040ac298a41417bb19f263158043918\",\r\n    \"Payer\": null,\r\n    \"Audit\": {\r\n\t\t\"Username\": \"Example-User\",\r\n    \t\"UserIP\": \"1.2.3.4\"\r\n    }\r\n  }"
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/transactions/card-payments/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"transactions",
												"card-payments",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"transactionId\": \"59581\",\n    \"reference\": \"REAL-TIME-TXN-001\",\n    \"statusCode\": \"S\",\n    \"subStatusCode\": null,\n    \"statusDescription\": \"Successful\",\n    \"processedAmount\": 100.25\n}"
								},
								{
									"name": "Pre Auth Real-time Card Transaction",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ProcessType\": \"COMPLETE\",\r\n    \"Reference\": \"REAL-TIME-TXN-001\",\r\n    \"Description\": \"This is an example real-time transaction\",\r\n    \"Amount\": 100.25,\r\n    \"CardToken\": \"6040ac298a41417bb19f263158043918\",\r\n    \"Payer\": null,\r\n    \"Audit\": {\r\n    \"Username\": \"Example-User\",\r\n      \"UserIP\": \"1.2.3.4\"\r\n    }\r\n  }"
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/transactions/card-payments/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"transactions",
												"card-payments",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\r\n    \"ProcessType\": \"PREAUTH\",\r\n    \"Reference\": \"PREAUTH-TXN-111\",\r\n    \"Description\": \"This is an example Pre Auth transaction\",\r\n    \"Amount\": 99.50,\r\n    \"CardToken\": \"6040ac298a41417bb19f263158043918\",\r\n    \"Payer\": null,\r\n    \"Audit\": {\r\n    \"Username\": \"Example-User\",\r\n      \"UserIP\": \"1.2.3.4\"\r\n    }\r\n  }"
								}
							]
						},
						{
							"name": "Refund a live card transaction üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Reference\": \"REFUND-TXN-111\",\r\n    \"Description\": \"This is a refund example\",\r\n    \"Amount\": 10.25,\r\n    \"Audit\": {\r\n      \"Username\": \"Example-User\",\r\n    \t\"UserIP\": \"1.2.3.4\"\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/transactions/card-payments/{{transaction-id}}/refunds",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"transactions",
										"card-payments",
										"{{transaction-id}}",
										"refunds"
									]
								},
								"description": "Used to refund all or part of a previously processed card transaction\n\n**Please note that the API Refund function is not available by default. \n\nThe ability to process refunds depends on what type of merchant account you have, and approval by Payrix's Risk and Fraud team.\n\nFor further information please [contact us](#5e519f4a-1513-45cc-893a-0e80148463de).\n\n###### Route\n\n<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Parameter</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>business-id</code></td>\n        <td>The business you want to access</td>\n      </tr>\n      <tr>\n        <td><code>'bankReference' OR 'transactionID'</code></td>\n        <td>The transaction reference provided to you from the bank/gateway that processed the transaction eg RT123456 or Payrix's unique identifier for the transaction</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n###### Post Body\n\n[Card Transaction Update Model](#a5c13037-6a2c-4828-9f03-078008a4fe92)\n\n###### Response Body\n\n[Transaction Result Model](#7828289b-5a94-4c43-81c3-cf955e6e16bd)"
							},
							"response": []
						},
						{
							"name": "Process a pre-authorised card transaction üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Reference\": \"PREAUTH-TXN-111\",\r\n    \"Description\": \"This is a capture example\",\r\n    \"Audit\": {\r\n        \"Username\": \"Example-User\",\r\n         \"UserIP\": \"1.2.3.4\"\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/transactions/card-payments/{{transaction-id}}/captures",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"transactions",
										"card-payments",
										"{{transaction-id}}",
										"captures"
									]
								},
								"description": "Capture the funds from a previously pre-authorized card transaction\n\n\n###### Route\n\n<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Parameter</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>business-id</code></td>\n        <td>The business you want to access</td>\n      </tr>\n      <tr>\n        <td><code>transaction-id</code></td>\n        <td>Payrix's unique identifier for the transaction</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n###### Post Body\n\n[Card Transaction Update Model](#a5c13037-6a2c-4828-9f03-078008a4fe92)\n\n###### Response Body\n\n[Transaction Result Model](#7828289b-5a94-4c43-81c3-cf955e6e16bd)"
							},
							"response": [
								{
									"name": "Capture Card Transaction",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Reference\": \"CAPTURE-REF-001\",\r\n    \"Description\": \"This is a capture example\",\r\n    \"Amount\": null,\r\n    \"Audit\": {\r\n      \"Username\": \"Example-User\",\r\n    \t\"UserIP\": \"1.2.3.4\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/transactions/card-payments/122354/captures",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"transactions",
												"card-payments",
												"122354",
												"captures"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 29 Jun 2018 06:23:52 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Kestrel",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked",
											"name": "Transfer-Encoding",
											"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET",
											"name": "X-Powered-By",
											"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
										},
										{
											"key": "X-SourceFiles",
											"value": "=?UTF-8?B?QzpcSW50ZWdyYVBheVxHaXRcSW50ZWdyYVBheS5TeXN0ZW1zXEludGVncmFQYXkuQXBpLlB1YmxpY1xidXNpbmVzc2VzXDEyMDZcdHJhbnNhY3Rpb25zXGNhcmQtcGF5bWVudHNcUlQ1OTU4MlxjYXB0dXJlcw==?=",
											"name": "X-SourceFiles",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"transactionId\": \"9217\",\n    \"reference\": \"CAPTURE-REF-001\",\n    \"statusCode\": \"S\",\n    \"subStatusCode\": null,\n    \"statusDescription\": \"Successful\",\n    \"processedAmount\": 200\n}"
								},
								{
									"name": "Process a pre-authorised card transaction üîí",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Reference\": \"PREAUTH-TXN-111\",\r\n    \"Description\": \"This is a capture example\",\r\n    \"Audit\": {\r\n        \"Username\": \"Example-User\",\r\n         \"UserIP\": \"1.2.3.4\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/transactions/card-payments/{{transaction-id}}/captures",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"transactions",
												"card-payments",
												"{{transaction-id}}",
												"captures"
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Reverse (cancel) a pre-authorised card transaction üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Reference\": \"REVERSE-TXN-111\",\r\n    \"Description\": \"This is a reversal example\",\r\n    \"Audit\": {\r\n      \"Username\": \"Example-User\",\r\n    \t\"UserIP\": \"1.2.3.4\"\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/transactions/card-payments/{{transaction-id}}/reversals",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"transactions",
										"card-payments",
										"{{transaction-id}}",
										"reversals"
									]
								},
								"description": "Used to reverse (cancel) a pre-auth transaction that has not been captured yet.  This will release the held funds back to the cardholder.\n\n** PLEASE NOTE: It is not possible to perform a partial reversal - the entire amount of the original authorization must be reversed.\n\n\nFor further information please [contact us](#5e519f4a-1513-45cc-893a-0e80148463de).\n\n###### Route\n\n<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Parameter</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>business-id</code></td>\n        <td>The business you want to access</td>\n      </tr>\n      <tr>\n        <td><code>'bankReference' OR 'transactionID'</code></td>\n        <td>The transaction reference provided to you from the bank/gateway that processed the transaction eg RT123456 or Payrix's unique identifier for the transaction</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n###### Post Body\n\n[Card Transaction Update Model](#a5c13037-6a2c-4828-9f03-078008a4fe92)\n\n###### Response Body\n\n[Transaction Result Model](#7828289b-5a94-4c43-81c3-cf955e6e16bd)"
							},
							"response": []
						}
					],
					"description": "This quickstart guides you through accepting card payments using tokenized payment card details.\n\n## Getting a token for the card details\n\nYou can help to reduce your PCI compliance obligations by ensuring that your system does not receive confidential information about payment cards. To do so, we recommended making a webpage to allow your payers to enter their payment card details via their web browser. This webpage can then use our JavaScript to tokenize the details to us directly, avoiding your system entirely. See the [Building a Webpage](#ecd1736d-29f4-459f-b500-a996c8dee11e) quickstart for more details.\n\n## Sending the request\n\nOnce you have the \"card token\" that represents the details of the payment card, use the `Bearer` token to send us an authorized [POST Make a live tokenized card transaction](#14654018-76b6-4b4b-9ecd-a8e89a3b7af7) request containing the \"card token\" and other details of the payment. It must include at least the `ProcessType`, a unique `Reference`, and the `Amount` for the payment; whenever possible, we recommended also including a `Description`; for example:\n\n``` json\n{\n    \"ProcessType\": \"COMPLETE\",\n    \"Reference\": \"INV-1-PAY-1\",\n    \"Description\": \"Invoice 1 Payment 1\",\n    \"Amount\": 10.00,\n    \"CardToken\": \"0123456789abcdef0123456789abcdef\"\n}\n\n ```\n\nIf you asked for payer-paid fees in your Payrix account application, then you do _not_ need to include customer surcharges in the value of `Amount` as these are added automatically when your request is processed.\n\n## Amount\n\nWhen using the test API, the transaction amount gives you the ability to test both successful and failed payments. When the transaction amount has zero cents or a number of cents other than the ones listed below, the test transaction will always be successful. If you provide one of the following numbers for the number of cents you will receive a transaction failed response with the corresponding reason:\n\n- 31 = Invalid Account\n- 54 = Expired card - **Card Only**\n- 51 = Declined\n- 61 = Insufficient Funds\n- 96 = Technical failure - **Card Only**\n    \n\n## Checking the result\n\nThe payment result is _not_ indicated by the response HTTP status code. If we receive a [POST Make a live tokenized card transaction](#14654018-76b6-4b4b-9ecd-a8e89a3b7af7) request and can process it, then the response HTTP status code will be `200` (`OK`) regardless of whether the payment was approved or declined. To check the payment result, inspect the `StatusCode` value of the [Transaction Result](#7828289b-5a94-4c43-81c3-cf955e6e16bd) object that comprises the response body: `S` means the payment succeeded (was approved); `F` means it failed (was declined). See the [Card Transaction Status Code](#0575e464-6926-42d8-9aef-7efb47776a99) list for all possible status codes.\n\nFor declined payments, additional details about why it failed are provided in the `SubStatusCode` and `StatusDescription` values of the [Transaction Result](#7828289b-5a94-4c43-81c3-cf955e6e16bd) object; for example:\n\n``` json\n{\n    \"TransactionId\": \"12345\",\n    \"Reference\": \"INV-1-PAY-1\",\n    \"StatusCode\": \"F\",\n    \"SubStatusCode\": \"R1\",\n    \"StatusDescription\": \"Insufficient Funds\",\n    \"ProcessedAmount\": 10.48\n}\n\n ```\n\nSee the [Transaction Sub-Status Code](#b02dad21-6aa7-4876-a2b7-d7c4e2d8226f) list for all possible sub-status codes.\n\nIf payer fees have been enabled for your account, then the `ProcessedAmount` value in the response will be greater than the `Amount` value in your request: the difference being the fees charged to the payer. You can use payer fees to, for example, add surcharges for different payment card types without the risk of accessing confidential information about payment cards, which helps to reduce your PCI compliance obligations.\n\n# üìë Special Notes\n\nExample Cards Numbers. Please note thes ecan only be used in Sandbox.\n\n<table><tbody><tr><th>Card Type</th><th>Test Card Numbers</th></tr><tr><td><div><code>VISA</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>4111111111111111<br>4012888888881881<br>4242424242424242</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>Mastercard</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>5353535353535351<br>5555555555554444<br>5105105105105100<br>2221000000000009<br>2720990000000007</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>AMEX</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>378282246310005<br>371449635398431<br>378734493671000</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>Discover</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>6011111111111117<br>6011000990139424</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>JCB</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>3530111333300000<br>3566002020360505</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>Diners</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>30569309025904<br>38520000023237</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr></tbody></table>\n\nCVC: Any 3-digit number\n\nExpiry Date: Any Future Date.\n\nBank accounts: Please use any numbers that match the rules for your country.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Saved Card Transaction",
					"item": [
						{
							"name": "Process a transaction using saved card details üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ProcessType\": \"COMPLETE\",\r\n    \"Reference\": \"Transaction-001\",\r\n    \"Amount\": 100.75,\r\n    \"Description\": \"This is a test transaction\",\r\n    \"ServiceDate\": \"2022-03-01T10:00:00+10:00\",\r\n    \"Audit\": {\r\n      \"Username\": \"Example-User\",\r\n      \"UserIP\": \"1.2.3.4\"\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/transactions/card",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"payers",
										"{{payer-reference}}",
										"transactions",
										"card"
									]
								},
								"description": "Processes a real-time card transaction on the card account currently registered to the payer.\r\n\r\n## Special Notes üìë\r\nPlease use card number 4111111111111111 when testing this call.\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>payer-reference</code></td>\r\n        <td>Your unique reference that identifies the payer</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Post Body\r\n\r\n[Stored Card Transaction Model](#0415fb4b-43e5-468f-bf39-853432a71e44)\r\n\r\n###### Response Body\r\n\r\n[Transaction Result Model](#7828289b-5a94-4c43-81c3-cf955e6e16bd)\r\n"
							},
							"response": [
								{
									"name": "Payer Stored Card Transaction",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ProcessType\": \"COMPLETE\",\r\n    \"Reference\": \"Transaction-001\",\r\n    \"Amount\": 100.75,\r\n    \"Description\": \"This is a test transaction\",\r\n    \"Audit\": {\r\n      \"Username\": \"Example-User\",\r\n      \"UserIP\": \"1.2.3.4\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/payers/{{payer-reference}}/transactions/card",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"payers",
												"{{payer-reference}}",
												"transactions",
												"card"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"transactionId\": \"71403\",\n    \"reference\": \"Transaction-001\",\n    \"statusCode\": \"S\",\n    \"subStatusCode\": null,\n    \"statusDescription\": null,\n    \"processedAmount\": 100.75\n}"
								}
							]
						}
					],
					"description": "This quickstart guides you through making a transaction using a payers saved card details.\n\n## Sending the request\n\nUse the `Bearer` token to send us an authorized [POST Process a transaction using saved card details](#220402de-e5bf-43c5-8a71-7410706c7654) request containing the details of the transaction.  \nIt must include at least the `ProcessType`, a unique `Reference`, and the `Amount` for the payment; whenever possible, we recommended also including a `Description`; for example:\n\n``` json\n{\n    \"ProcessType\": \"COMPLETE\",\n    \"Reference\": \"Transaction-001\",\n    \"Amount\": 100.75,\n    \"Description\": \"This is a test transaction\",\n    \"Audit\": {\n      \"Username\": \"Example-User\",\n      \"UserIP\": \"1.2.3.4\"\n    }\n}\n\n ```\n\nInformation regarding Enums can be found here: [ProcessType Enums](#f73a0e2f-1664-4b80-9199-dd6edd93f667)\n\nIf you asked for payer-paid fees in your Payrix account application, then you do _not_ need to include customer surcharges in the value of `Amount` as these are added automatically when your request is processed.\n\n## Checking the payment result\n\nThe payment result is _not_ indicated by the response HTTP status code. If we receive a [POST Make a live card transaction](#7321df17-1479-4261-b20f-6afe4ba489cd) request and can process it, then the response HTTP status code will be `200` (`OK`) regardless of whether the payment was approved or declined. The check the payment result, inspect the `StatusCode` value of the [Transaction Result](#7828289b-5a94-4c43-81c3-cf955e6e16bd) object that comprises the response body: `S` means the payment succeeded (was approved); `F` means it failed (was declined). See the [Card Transaction Status Code](#0575e464-6926-42d8-9aef-7efb47776a99) list for all possible status codes.\n\nFor declined payments, additional details about why it failed are provided in the `SubStatusCode` and `StatusDescription` values of the [Transaction Result](#7828289b-5a94-4c43-81c3-cf955e6e16bd) object; for example:\n\n``` json\n{\n    \"TransactionId\": \"12345\",\n    \"Reference\": \"Transaction-001\",\n    \"StatusCode\": \"F\",\n    \"SubStatusCode\": \"R1\",\n    \"StatusDescription\": \"Insufficient Funds\",\n    \"ProcessedAmount\": 10.48\n}\n\n ```\n\nSee the [Transaction Sub-Status Code](#b02dad21-6aa7-4876-a2b7-d7c4e2d8226f) list for all possible sub-status codes.\n\nIf payer fees have been enabled for your account, then the `ProcessedAmount` value in the response will be greater than the `Amount` value in your request: the difference being the fees charged to the payer. You can use payer fees to, for example, add surcharges for different payment card types without the risk of accessing confidential information about payment cards, which helps to reduce your PCI compliance obligations.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Fraud Checking",
					"item": [
						{
							"name": "Fraud Check üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Token\": \"f4111d25-82d3-4743-87f4-cbf7a8e7972f\",\r\n    \"SessionId\": \"abc12345678901234567890123456789\",\r\n    \"TransactionAmount\": 20.78,\r\n    \"IpAddress\": \"111.222.333.444\",\r\n    \"Payer\": {\r\n      \"FamilyOrBusinessName\": null,\r\n      \"GivenName\": null,\r\n      \"BillingAddress\": null,\r\n      \"Email\": \"test@test.com\",\r\n      \"Phone\": null\r\n    },\r\n    \"AirlineInfo\": null,\r\n    \"HotelInfo\": null,\r\n    \"CallbackUrl\": \"https://tester.com.au/test.aspx?p1=asdfasdf&p2=asdfasdf\",\r\n    \"Audit\": null\r\n}"
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/transactions/card-payments/fraud-check",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"transactions",
										"card-payments",
										"fraud-check"
									]
								},
								"description": "Performs a fraud check to determine the risk of process a transaction based on the details of a card you have previously tokenized, and information on the transaction you pass into this function.\r\n\r\nThis function returns a status to let you know if the transaction is ok to process immediately, requires additional fraud checking or the use of 3-D Secure, or if the transaction should not be processed at all due to high risk of fraud.\r\n\r\nTesting Fraud Check responses via API is controlled via the cents value of the transaction\r\nFor example, $10.65\r\n\r\n*\t66 ‚Äì 69 cents \t= ‚ÄòEscalate‚Äô\r\n*\t62 cents   \t\t  = ‚ÄòReview‚Äô\r\n*\t63 cents\t\t    = ‚ÄôDecline‚Äô\r\n*\t64 cents\t\t    = ‚ÄòError‚Äô\r\n*\t65 cents\t\t    = ‚ÄòException‚Äô\r\n* $300 - $400     = 'USE3DS'\r\n*\tAll others \t\t  = ‚ÄòApprove‚Äô\r\n\r\nNB When tokenizing a card use: 4111111111111111\r\n\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Post Body\r\n\r\n[Fraud Check Model](#9be15e39-08c0-447f-b938-a258ef225178)\r\n\r\n###### Response Body\r\n\r\n[Fraud Check Result Model](#21599873-9159-428e-a631-04050d3a9764)\r\n"
							},
							"response": [
								{
									"name": "Fraud check",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Token\": \"f4111d25-82d3-4743-87f4-cbf7a8e7972f\",\r\n    \"SessionId\": \"abc12345678901234567890123456789\",\r\n    \"TransactionAmount\": 20.78,\r\n    \"IpAddress\": \"110.1.13.121\",\r\n    \"Payer\": {\r\n      \"FamilyOrBusinessName\": null,\r\n      \"GivenName\": null,\r\n      \"BillingAddress\": null,\r\n      \"Email\": \"test@test.com\",\r\n      \"Phone\": null\r\n    },\r\n    \"AirlineInfo\": null,\r\n\t\"HotelInfo\": null,\r\n    \"CallbackUrl\": \"https://tester.com.au/test.aspx?p1=asdfasdf&p2=asdfasdf\",\r\n    \"Audit\": null\r\n}"
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/transactions/card-payments/fraud-check",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"transactions",
												"card-payments",
												"fraud-check"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\r\n    \"result\": \"PROCEED\",\r\n    \"resultMessage\": \"Low Risk Transaction - OK to proceed\",\r\n    \"redirectUrl\": null\r\n  }"
								},
								{
									"name": "Fraud Check Failed 3D Secure with Airline Infoüîí",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Token\": \"f4111d25-82d3-4743-87f4-cbf7a8e7972j\",\r\n    \"SessionId\": \"abc12345678901234567890123456789\",\r\n    \"TransactionAmount\": 8000.78,\r\n    \"IpAddress\": \"110.1.13.121\",\r\n    \"Payer\": {\r\n      \"FamilyOrBusinessName\": null,\r\n      \"GivenName\": null,\r\n      \"BillingAddress\": null,\r\n      \"Email\": \"test@test.com\",\r\n      \"Phone\": null\r\n    },\r\n    \"AirlineInfo\": {\r\n    \"carrier\": \"QANTAS\",\r\n    \"flightCode\": \"QF0135\",\r\n    \"flightDate\":\"2018-12-10\",\r\n    \"isReturnTicket\":\"False\",\r\n    \"origin\":\"BNE\",\r\n    \"destinations\":\"CHC\",\r\n    },\r\n    \"HotelInfo\": null,\r\n    \"CallbackUrl\": \"https://tester.com.au/test.aspx?p1=asdfasdf&p2=asdfasdf\",\r\n    \"Audit\": null\r\n}"
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/transactions/card-payments/fraud-check",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"transactions",
												"card-payments",
												"fraud-check"
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Fraud Check Data Collector HTML",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-key}}/services/fraud-check-div/?sessionId={{session-id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-key}}",
										"services",
										"fraud-check-div",
										""
									],
									"query": [
										{
											"key": "sessionId",
											"value": "{{session-id}}"
										}
									]
								},
								"description": "Used in conjunction with the card-payments/fraud-check function to obtain a HTML snippet with a DIV tag which contains code for a JavaScript Data Collector which collects pertinent information about your customer for performing the fraud check.\r\n\r\nThis DIV tag must be embedded into one of your webpages once you have established a session with your customer, but before you call the fraud-check function.\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-key</code></td>\r\n        <td>Your unique Key (GUID) which identifies your business</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Querystring Options\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>session-id</code></td>\r\n        <td>guid</td>\r\n        <td>A globally unique ID which identifies the session of your user. must be between 10 and 32 characters, contain no spaces, and contain no symbols expect - and _. It is recommended that you use a GUID with the \"-\" removed, or used your web server's session id. This id must be the same as the session ID your provided to the JavaScript Fraud Data Collector (see our Fraud Management Guide for more information on this).</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Response Body"
							},
							"response": [
								{
									"name": "Fraud Check Data Collector Html",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-key}}/services/fraud-check-div/?sessionId=12345678901234567",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-key}}",
												"services",
												"fraud-check-div",
												""
											],
											"query": [
												{
													"key": "sessionId",
													"value": "12345678901234567"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "html",
									"header": [],
									"cookie": [],
									"body": "<div class='kaxsdc' data-event='load'>\n    <script type='text/javascript' src='https://ssl.kaptcha.com/collect/sdk?m=100000&s=12345678901234567'></script>\n    <img src='https://ssl.kaptcha.com/logo.gif?m=100000&s=asdfasdfasdfasdf' />\n    <script type='text/javascript'>var client=new ka.ClientSDK(); client.autoLoadEvents();</script>\n</div>"
								}
							]
						},
						{
							"name": "3-D Secure Result Lookup üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/transactions/card-payments/3dsecure/result/?token={{card-token}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"transactions",
										"card-payments",
										"3dsecure",
										"result",
										""
									],
									"query": [
										{
											"key": "token",
											"value": "{{card-token}}"
										}
									]
								},
								"description": "If you have used 3-D Secure to validate a transaction (through the use of the \"Fraud Check\" function), your customer will be redirected to 3-D Secure and then back to your website if they complete the process.\r\n\r\nOnce they have been redirected back to your website, you can call this function from your server to check whether the 3-D Secure validation was successful, and whether or not it is ok to proceed with the payment.\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Querystring Options\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>token</code></td>\r\n        <td>string</td>\r\n        <td>Token for a card that you previously tokenized and used with the Fraud Check function</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Response Body\r\n\r\n[3-D Secure Authorization Result Model](#ae615ef3-6b49-450c-b7a2-59086ea150fa)"
							},
							"response": [
								{
									"name": "3-D Secure Result Lookup",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/transactions/card-payments/3dsecure/result/?token={{card-token}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"transactions",
												"card-payments",
												"3dsecure",
												"result",
												""
											],
											"query": [
												{
													"key": "token",
													"value": "{{card-token}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\r\n    \"status\": \"AUTHORISED\"\r\n  }"
								}
							]
						}
					],
					"description": "## Getting the data collector\n\nTo use our fraud checking, you *must* use a webpage to accept payment card details from payers. (If you are not doing so already, see the [Building a Webpage](#ecd1736d-29f4-459f-b500-a996c8dee11e) quickstart for more details. This allows us to provide you with a fraud check data collector that gathers information automatically about payers; for example, approximate geographic locations and source IP addresses.\n\nTo get the data collector, send us a [Fraud Check Data Collector HTML](#e4e9f0b5-4c85-4629-bca6-7a7dd7a30575) request, which does *not* need to be authorized. A new data collector *must* be used for each payment attempt, so each time your webpage is displayed, you *must* send us a new [Fraud Check Data Collector HTML](#e4e9f0b5-4c85-4629-bca6-7a7dd7a30575) request. For each attempt made by the same payer during a single session, specify the same `session-id` in the request.\n\nIf the response HTTP status code is `200` (`OK`) then the response body contains the fraud check data collector as an HTML `<div>` element, which in turn contains other HTML tags; for example:\n\n```html\n<div class='kaxsdc' data-event='load'>\n    <script type='text/javascript' src='https://ssl.kaptcha.com/collect/sdk?m=100000&s=12345678901234567'></script>\n    <img src='https://ssl.kaptcha.com/logo.gif?m=100000&s=12345678901234567' />\n    <script type='text/javascript'>var client=new ka.ClientSDK(); client.autoLoadEvents();</script>\n</div>\n```\n\nThe outer HTML element of the data collector will always be a `<div>`, but its attributes and the other HTML tags it contains may change with each [Fraud Check Data Collector HTML](#e4e9f0b5-4c85-4629-bca6-7a7dd7a30575) request. It is therefore important that you **do *not* save and reuse the data collector &lt;div&gt; element** for your webpage.\n\n## Adding the data collector\n\nIn the `<body>` element of your webpage, add the entire response body for the [Fraud Check Data Collector HTML](#e4e9f0b5-4c85-4629-bca6-7a7dd7a30575) request that you sent us. As explained above, this will be a `<div>` tag that has attributes and/or contains other HTML elements comprising our fraud check data collector. If you don't have a reason to do otherwise, we recommend adding this `<div>` tag immediately prior to the `</body>` tag in your webpage.\n\nOnce you have the \"card token\" that represents the details of the payment card, use the `Bearer` token to send us an authorized [Fraud Check](#b155fd3b-9075-483b-aa4c-d437f6ae179b) request containing the \"card token\" and other details of the payment. It must include at least the `SessionId`, the `TransactionAmount`, and payer `IpAddress` and `Email` details; to support 3-D Secure, a `CallbackUrl` is also required; for example:\n\n```json\n{\n    \"Token\": \"0123456789abcdef0123456789abcdef\",\n    \"SessionId\": \"12345678901234567\",\n    \"TransactionAmount\": 10.00,\n    \"IpAddress\": \"1.2.3.4\",\n    \"Payer\": {\n        \"Email\": \"jane.citizen@example.com\"\n    },\n    \"CallbackUrl\": \"https://my.domain/3d-secure-callback?id=1a2b3c4d5e6f\"\n}\n```\n\nIf you asked for payer-paid fees in your Payrix account application, then you do *not* need to include customer surcharges in the value of `TransactionAmount` as these are added automatically when your request is processed.\n\n## Checking the fraud check response\n\nThe fraud check result is *not* indicated by the response HTTP status code. If we receive a [Fraud Check](#b155fd3b-9075-483b-aa4c-d437f6ae179b) request and can process it, then the response HTTP status code will be `200` (`OK`) regardless of whether or not fraud is suspected. To check the fraud check result, inspect the `Result` value of the [Fraud Check Result](#2d471978-1a7b-44f5-bdd7-b05b04b8a21d) object that comprises the response body: `PROCEED` means there is minimal risk of fraud; `USE3DS` means that you should use 3-D Secure; other values indicate an increased risk of fraud. See the [Fraud Check Result](#2d471978-1a7b-44f5-bdd7-b05b04b8a21d) list for all possible results.\n\nAdditional details about the fraud check result are provided in the `ResultMessage` and `RedirectUrl` values of the [Fraud Check Result](#2d471978-1a7b-44f5-bdd7-b05b04b8a21d) object; for example:\n\n```json\n{\n    \"Result\": \"PROCEED\",\n    \"ResultMessage\": \"Low Risk Transaction - OK to proceed\",\n    \"RedirectUrl\": null\n}\n```\n\n## Using 3-D Secure\n\nIf the value of `Result` in the response to your [Fraud Check Result](#2d471978-1a7b-44f5-bdd7-b05b04b8a21d) request is `USE3DS`, then 3-D Secure cardholder authentication is available. It is *not* available if the value of `Result` is something else. The use of 3-D Secure when available was not enforced at the time of writing, but we recommend doing so whenever possible, and may require its use when available in the future.\n\nTo use 3-D Secure, redirect the payer's web browser to the URL provided as the value of `RedirectUrl` in the response to your [Fraud Check Result](#2d471978-1a7b-44f5-bdd7-b05b04b8a21d) request. Once cardholder authentication is complete, the payer's web browser will be redirected back to the URL you specified as the value of `CallbackUrl` in your [Fraud Check](#b155fd3b-9075-483b-aa4c-d437f6ae179b) request.\n\nWhen your callback URL is activated, check the 3-D Secure result by sending us an authorized [3-D Secure Result Lookup](#6a40fa57-1f22-4c91-bacd-0b8297bea256) request. The result is *not* indicated by the response HTTP status code. If we receive your request and can process it, the response HTTP status code will be `200` (`OK`) regardless of whether or not the cardholder was authenticated. To check the result, inspect the `Status` value of the [3-D Secure](#6a40fa57-1f22-4c91-bacd-0b8297bea256) object that comprises the response body: `AUTHORISED` means that the cardholder was authenticated; other values indicate an increased risk of fraud. See the [3-D Secure Authorization Status](#15ed18a7-ccf9-4e19-84b6-ba0cf39e61db) list for all possible statuses.\n\n## Accepting the payment\n\nOur fraud checking allows you to gauge the risk of accepting payments. At the time of writing, it remains up to you to decide whether or not to continue with accepting the payment; however, we may restrict which payments can be accepted based on risk in the future.\n\nTo accept the payment, send us an authorized [POST Make a live card transaction](#7321df17-1479-4261-b20f-6afe4ba489cd) request containing the \"card token\" and other details of the payment, and then check the payment result. See the [Create Card Transaction](#c3aa5a48-bb84-4ec9-9a52-a2d15ad83f6f) quickstart for more details.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Status Changes",
					"item": [
						{
							"name": "Search for transaction status changes üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/transactions/new",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"transactions",
										"new"
									]
								},
								"description": "This function is used to get a set of all transactions for your business that have had a change of transaction status so the details of the transaction can be updated within your own systems.\n\nIt needs to be used in conjunction with the \"New Status Acknowledgement\" function below. Only transactions processed within the last 90 days will be returned by this function.\n\nA maximum of 1000 transactions can be returned in one call (see skip/take parameters below).\n\n## Special Notes üìë\n\nPLEASE NOTE: This function will only allow you to retrieve your transaction results once per hour.  It can return up to 1000 transactions per call - once all your waiting transaction results have been returned, or the function returns the same results due to not acknowledging the previous transactions you downloaded, you will need to wait an hour until you can retrieve any results from the function again.\n\nIf you call the function again within that hour it will return HTTP Status Code `429 (Too Many Requests)`.  Payment processing for most transaction types only occurs a few times per day, so there is no benefit in calling this transaction more frequently than once per hour.\n\n###### Route\n\n<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Parameter</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>business-id</code></td>\n        <td>The business you want to access</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n###### Querystring Options\n\n<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Parameter</th>\n        <th>Type</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n<tr>\n        <td><code>type</code></td>\n        <td><a href=\"#78300ea2-0ac8-4047-a1b4-c1738535c1d8\">Transaction Type</a></td>\n        <td>Search for specific types of transactions (single or list - for lists reference the field multiple times in the querystring, e.g.: ?type=PDB&amp;type=PDC&amp;type=RT etc.)</td>\n      </tr>\n      <tr>\n        <td><code>status</code></td>\n        <td><a href=\"#746c23f5-c501-4736-910e-9ceba8fd5e79\">Transaction Status</a></td>\n        <td>Search for transactions with specific statuses (single or list - for lists reference the field multiple times in the querystring, e.g.: ?status=C&amp;status=S&amp;status=R etc.)</td>\n      </tr>\n      <tr>\n        <td><code>source</code></td>\n        <td><a href=\"#2cfab69e-f3e1-4688-bdf3-4ed59e891202\">Transaction Source</a></td>\n        <td>Search for transactions initiated via specific sources</td>\n      </tr>\n      <tr>\n        <td><code>skip</code></td>\n        <td>integer</td>\n        <td>Number of records to not return (offset) when paging results (Default: 0)</td>\n      </tr>\n      <tr>\n        <td><code>take</code></td>\n        <td>integer</td>\n        <td>Number of records to return per call when paging results (Default: 500)</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n###### Response Body\n\n[Transaction Search Model](#364e4e5d-e6f4-4f63-b4d3-6e4c1dd9ed73)"
							},
							"response": [
								{
									"name": "New Transaction Status Updates Search ALL",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/transactions/new",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"transactions",
												"new"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "[\n    {\n        \"business\": {\n            \"businessId\": \"1234\",\n            \"businessName\": \"Test Business Ltd\"\n        },\n        \"time\": \"2018-06-29T06:07:01.153+00:00\",\n        \"transactionId\": \"121435\",\n        \"secondaryTransactionId\": \"RT59581\",\n        \"reference\": \"REAL-TIME-TXN-001\",\n        \"description\": \"This is an example real-time transaction\",\n        \"scheduleReference\": null,\n        \"amount\": 100.25,\n        \"amountRequested\": 100.25,\n        \"amountRefunded\": 10,\n        \"currency\": \"AUD\",\n        \"type\": \"RT\",\n        \"typeDescription\": \"Realtime Payment - Website\",\n        \"statusCode\": \"C\",\n        \"subStatusCode\": \"RF\",\n        \"statusDescription\": \"Cleared\",\n        \"paymentMethod\": \"VISA\",\n        \"payer\": null,\n        \"card\": {\n            \"cardNumber\": \"411111xxxxxx1111\",\n            \"cardholderName\": \"TEST Card\",\n            \"cardExpires\": \"2023-10-01T00:00:00\",\n            \"cardType\": \"Visa\"\n        },\n        \"bankAccount\": null,\n        \"rejectionRecovery\": null, \n        \"verification\": null \n    },\n    {\n        \"business\": {\n            \"businessId\": \"1234\",\n            \"businessName\": \"Test Business Ltd\"\n        },\n        \"time\": \"2018-06-29T06:20:30.35+00:00\",\n        \"transactionId\": \"121436\",\n        \"secondaryTransactionId\": \"RT59582\",\n        \"reference\": \"REAL-TIME-TXN-002\",\n        \"description\": \"This is an example pre-auth real-time transaction\",\n        \"scheduleReference\": null,\n        \"amount\": 200,\n        \"amountRequested\": 200,\n        \"amountRefunded\": 0,\n        \"currency\": \"AUD\",\n        \"type\": \"RT\",\n        \"typeDescription\": \"Realtime Payment - Website\",\n        \"statusCode\": \"C\",\n        \"subStatusCode\": null,\n        \"statusDescription\": \"Cleared\",\n        \"paymentMethod\": \"MASTERCARD\",\n        \"payer\": null,\n        \"card\": {\n            \"cardNumber\": \"555555xxxxxx4444\",\n            \"cardholderName\": \"TEST CARD\",\n            \"cardExpires\": \"2023-10-01T00:00:00\",\n            \"cardType\": \"Mastercard\"\n        },\n        \"bankAccount\": null,\n        \"rejectionRecovery\": null, \n        \"verification\": null \n\n    },\n    {\n        \"business\": {\n            \"businessId\": \"1234\",\n            \"businessName\": \"Test Business Ltd\"\n        },\n        \"time\": \"2018-06-29T06:39:28.973+00:00\",\n        \"transactionId\": \"121437\",\n        \"secondaryTransactionId\": \"RT59583\",\n        \"reference\": \"REAL-TIME-TXN-003\",\n        \"description\": \"This is an example rejected real-time transaction\",\n        \"scheduleReference\": null,\n        \"amount\": 20.61,\n        \"amountRequested\": 20.61,\n        \"amountRefunded\": 0,\n        \"currency\": \"AUD\",\n        \"type\": \"RT\",\n        \"typeDescription\": \"Realtime Payment - Website\",\n        \"statusCode\": \"R\",\n        \"subStatusCode\": \"R1\",\n        \"statusDescription\": \"Rejected: Insufficient Funds\",\n        \"paymentMethod\": \"VISA\",\n        \"payer\": null,\n        \"card\": {\n            \"cardNumber\": \"401288xxxxxx1881\",\n            \"cardholderName\": \"TEST Card\",\n            \"cardExpires\": \"2028-03-01T00:00:00\",\n            \"cardType\": \"Visa\"\n        },\n        \"bankAccount\": null,\n        \"rejectionRecovery\": null, \n        \"verification\": null \n    }\n]"
								},
								{
									"name": "Search for transaction status changes with options",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/transactions/new?type=PDB",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"transactions",
												"new"
											],
											"query": [
												{
													"key": "type",
													"value": "PDB",
													"description": "earch for specific types of transactions (single or list - for lists reference the field multiple times in the querystring, e.g.: ?type=PDB&type=PDC&type=RT etc.)"
												}
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Acknowledge transaction status change üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"TransactionId\": \"121435\",\r\n    \"StatusCode\": \"C\",\r\n    \"Audit\": {\r\n\t\t\"Username\": \"Example-User\",\r\n    \t\"UserIP\": \"1.2.3.4\"\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/transactions/new",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"transactions",
										"new"
									]
								},
								"description": "This function notifies us that the details downloaded for a transaction via the \"New Status Search\" function above have been received and processed by you so they won't be downloaded again the next time the \"New Status Search\" function is called.\r\n\r\n## Special Notes üìë\r\nPLEASE NOTE:  As there is always the possibility of this call failing due to network dropouts etc., it is recommended that you make your system able to handle transaction results being downloaded a second time from the \"New Status Search\" function (i.e. so your system will ignore a result update for a transaction if it is downloaded again after you have already processed that result).\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Post Body\r\n\r\n[Transaction Status Update Received Model](#fe8262ee-2b37-4bed-ba54-40078ac0871d)\r\n\r\n###### Response Body"
							},
							"response": []
						}
					]
				},
				{
					"name": "Find Transaction Details",
					"item": [
						{
							"name": "Transaction Search üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/transactions/?timeFrom=2018-06-28T05:13:14%2B10:00",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"transactions",
										""
									],
									"query": [
										{
											"key": "timeFrom",
											"value": "2018-06-28T05:13:14%2B10:00"
										}
									]
								},
								"description": "Used for searching all types of previously processed transactions. A maximum of 200 transactions can be returned in one call (see skip/take parameters below).\n\n###### Route\n\n<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Parameter</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>business-id</code></td>\n        <td>The business you want to access</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n###### Querystring Options\n\n<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Parameter</th>\n        <th>Type</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>transactionId</code></td>\n        <td>int</td>\n        <td>Payrix's unique identifier for the transaction</td>\n      </tr>\n      <tr>\n        <td><code>reference</code></td>\n        <td>string</td>\n        <td>Search on the reference you provided for the payment</td>\n      </tr>\n      <tr>\n        <td><code>description</code></td>\n        <td>string</td>\n        <td>Search descriptions you provided for your payments</td>\n      </tr>\n      <tr>\n        <td><code>scheduleReference</code></td>\n        <td>string</td>\n        <td>Search for any schedule references you provided for scheduled payments</td>\n      </tr>\n      <tr>\n        <td><code>timeFrom</code></td>\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">ISO 8601 Date/Time</a></td>\n        <td>Search for transaction processed from this date/time. PLEASE NOTE: timeFrom is REQUIRED for all searches where a \"reference\" is not supplied.</td>\n      </tr>\n      <tr>\n        <td><code>timeTo</code></td>\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">ISO 8601 Date/Time</a></td>\n        <td>Search for transaction processed before this date/time</td>\n      </tr>\n      <tr>\n        <td><code>type</code></td>\n        <td><a href=\"#78300ea2-0ac8-4047-a1b4-c1738535c1d8\">Transaction Type</a></td>\n        <td>Search for specific types of transactions (single or list - for lists reference the field multiple times in the querystring, e.g.: ?type=PDB&amp;type=PDC&amp;type=RT etc.)</td>\n      </tr>\n      <tr>\n        <td><code>status</code></td>\n        <td><a href=\"#746c23f5-c501-4736-910e-9ceba8fd5e79\">Transaction Status</a></td>\n        <td>Search for transactions with specific statuses (single or list - for lists reference the field multiple times in the querystring, e.g.: ?status=C&amp;status=S&amp;status=R etc.)</td>\n      </tr>\n      <tr>\n        <td><code>subStatus</code></td>\n        <td><a href=\"#b02dad21-6aa7-4876-a2b7-d7c4e2d8226f\">Transaction Sub Status</a></td>\n        <td>Search for transactions with specific sub statuses (single or list - for lists reference the field multiple times in the querystring, e.g.: ?SubStatus=R1&amp;SubStatus=R2&amp;SubStatus=R3 etc.)</td>\n      </tr>\n      <tr>\n        <td><code>amountFrom</code></td>\n        <td>decimal</td>\n        <td>Search for transactions with processed amount greater than or equal to this amount</td>\n      </tr>\n      <tr>\n        <td><code>amountTo</code></td>\n        <td>decimal</td>\n        <td>Search for transactions with processed amount less than or equal to this amount</td>\n      </tr>\n      <tr>\n        <td><code>payerId</code></td>\n        <td>string</td>\n        <td>Search for transactions for a particular payer using our unique payer identifier</td>\n      </tr>\n      <tr>\n        <td><code>payerUniqueReference</code></td>\n        <td>string</td>\n        <td>Search for transactions for a particular payer using your unique payer reference</td>\n      </tr>\n      <tr>\n        <td><code>payerGroupReference</code></td>\n        <td>string</td>\n        <td>Search for transactions for particular payers using your payer group reference</td>\n      </tr>\n      <tr>\n        <td><code>source</code></td>\n        <td><a href=\"#2cfab69e-f3e1-4688-bdf3-4ed59e891202\">Transaction Source</a></td>\n        <td>Search for transactions initiated via specific sources</td>\n      </tr>\n      <tr>\n        <td><code>skip</code></td>\n        <td>integer</td>\n        <td>Number of records to not return (offset) when paging results (Default: 0)</td>\n      </tr>\n      <tr>\n        <td><code>take</code></td>\n        <td>integer</td>\n        <td>Number of records to return per call when paging results (Default: 200)</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n###### Response Body\n\n[Transaction Search Model](#364e4e5d-e6f4-4f63-b4d3-6e4c1dd9ed73)"
							},
							"response": [
								{
									"name": "Transaction Search ALL",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/transactions/?timeFrom=2018-06-28T05:13:14%2B10:00",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"transactions",
												""
											],
											"query": [
												{
													"key": "timeFrom",
													"value": "2018-06-28T05:13:14%2B10:00"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "[\n    {\n        \"business\": {\n            \"businessId\": \"1234\",\n            \"businessName\": \"Test Business Ltd\"\n        },\n        \"time\": \"2018-06-29T06:07:01.153+00:00\",\n        \"transactionId\": \"121435\",\n        \"secondaryTransactionId\": \"RT59581\",\n        \"reference\": \"REAL-TIME-TXN-001\",\n        \"description\": \"This is an example real-time transaction\",\n        \"scheduleReference\": null,\n        \"amount\": 100.25,\n        \"amountRequested\": 100.25,\n        \"amountRefunded\": 10,\n        \"currency\": \"AUD\",\n        \"type\": \"RT\",\n        \"typeDescription\": \"Realtime Payment - Website\",\n        \"statusCode\": \"C\",\n        \"subStatusCode\": \"RF\",\n        \"statusDescription\": \"Cleared\",\n        \"paymentMethod\": \"VISA\",\n        \"payer\": null,\n        \"card\": {\n            \"cardNumber\": \"411111xxxxxx1111\",\n            \"cardholderName\": \"TEST Card\",\n            \"cardExpires\": \"2023-10-01T00:00:00\",\n            \"cardType\": \"Visa\"\n        },\n        \"bankAccount\": null\n    },\n    {\n        \"business\": {\n            \"businessId\": \"1234\",\n            \"businessName\": \"Test Business Ltd\"\n        },\n        \"time\": \"2018-06-29T06:20:30.35+00:00\",\n        \"transactionId\": \"121436\",\n        \"secondaryTransactionId\": \"RT59582\",\n        \"reference\": \"REAL-TIME-TXN-002\",\n        \"description\": \"This is an example pre-auth real-time transaction\",\n        \"scheduleReference\": null,\n        \"amount\": 200,\n        \"amountRequested\": 200,\n        \"amountRefunded\": 0,\n        \"currency\": \"AUD\",\n        \"type\": \"RT\",\n        \"typeDescription\": \"Realtime Payment - Website\",\n        \"statusCode\": \"C\",\n        \"subStatusCode\": null,\n        \"statusDescription\": \"Cleared\",\n        \"paymentMethod\": \"MASTERCARD\",\n        \"payer\": null,\n        \"card\": {\n            \"cardNumber\": \"555555xxxxxx4444\",\n            \"cardholderName\": \"TEST CARD\",\n            \"cardExpires\": \"2023-10-01T00:00:00\",\n            \"cardType\": \"Mastercard\"\n        },\n        \"bankAccount\": null\n    },\n    {\n        \"business\": {\n            \"businessId\": \"1234\",\n      \"businessName\": \"Test Business Ltd\"\n        },\n        \"time\": \"2018-06-29T06:39:28.973+00:00\",\n        \"transactionId\": \"121437\",\n        \"secondaryTransactionId\": \"RT59583\",\n        \"reference\": \"REAL-TIME-TXN-003\",\n        \"description\": \"This is an example rejected real-time transaction\",\n        \"scheduleReference\": null,\n        \"amount\": 20.61,\n        \"amountRequested\": 20.61,\n        \"amountRefunded\": 0,\n        \"currency\": \"AUD\",\n        \"type\": \"RT\",\n        \"typeDescription\": \"Realtime Payment - Website\",\n        \"statusCode\": \"R\",\n        \"subStatusCode\": \"R1\",\n        \"statusDescription\": \"Rejected: Insufficient Funds\",\n        \"paymentMethod\": \"VISA\",\n        \"payer\": null,\n        \"card\": {\n            \"cardNumber\": \"401288xxxxxx1881\",\n            \"cardholderName\": \"TEST Card\",\n            \"cardExpires\": \"2028-03-01T00:00:00\",\n            \"cardType\": \"Visa\"\n        },\n        \"bankAccount\": null\n    }\n]"
								},
								{
									"name": "Transaction Search  with options",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/transactions/?timeFrom=2018-06-28T05:13:14%2B10:00&status=S",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"transactions",
												""
											],
											"query": [
												{
													"key": "timeFrom",
													"value": "2018-06-28T05:13:14%2B10:00"
												},
												{
													"key": "status",
													"value": "S",
													"description": "Search for transactions with specific statuses (single or list - for lists reference the field multiple times in the querystring, e.g.: ?status=C&status=S&status=R etc.)"
												}
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Transaction Lookup üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/transactions/{{transaction-id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"transactions",
										"{{transaction-id}}"
									]
								},
								"description": "Used to lookup details of a single previously processed transaction\n\n###### Route\n\n<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Parameter</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>business-id</code></td>\n        <td>The business you want to access</td>\n      </tr>\n      <tr>\n        <td><code>transaction-id</code></td>\n        <td>Payrix's unique identifier for the transaction</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n###### Response Body\n\n[Transaction Search Model](#364e4e5d-e6f4-4f63-b4d3-6e4c1dd9ed73)"
							},
							"response": [
								{
									"name": "Transaction Lookup",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/transactions/1203317",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"transactions",
												"1203317"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"business\": {\n        \"businessId\": \"1234\",\n    \"businessName\": \"Test Business Ltd\"\n    },\n    \"time\": \"2018-06-29T06:07:01.153+00:00\",\n    \"transactionId\": \"121435\",\n    \"secondaryTransactionId\": \"1203317\",\n    \"reference\": \"REAL-TIME-TXN-001\",\n    \"description\": \"This is an example real-time transaction\",\n    \"scheduleReference\": null,\n    \"amount\": 100.25,\n    \"amountRequested\": 100.25,\n    \"amountRefunded\": 10,\n    \"currency\": \"AUD\",\n    \"type\": \"RT\",\n    \"typeDescription\": \"Realtime Payment - Website\",\n    \"statusCode\": \"C\",\n    \"subStatusCode\": \"RF\",\n    \"statusDescription\": \"Cleared\",\n    \"paymentMethod\": \"VISA\",\n    \"payer\": null,\n    \"card\": {\n        \"cardNumber\": \"411111xxxxxx1111\",\n        \"cardholderName\": \"TEST Card\",\n        \"cardExpires\": \"2023-10-01T00:00:00\",\n        \"cardType\": \"Visa\"\n    },\n    \"bankAccount\": null\n}"
								}
							]
						},
						{
							"name": "Search live card transactions üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/transactions/card-payments/?reference={{transaction-reference}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"transactions",
										"card-payments",
										""
									],
									"query": [
										{
											"key": "reference",
											"value": "{{transaction-reference}}",
											"description": "The unique reference you provided to identify the transaction"
										}
									]
								},
								"description": "Used to search previously processed real-time card transactions and return the results.\r\nThis function can be used to lookup a transaction using your reference if you were unable to receive or record the results of a previous transaction submit.\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Querystring Options\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>reference</code></td>\r\n        <td>string</td>\r\n        <td>The unique reference you provided to identify the transaction</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Response Body\r\n\r\n[Transaction Result Model](#98328d5b-e4f9-4eea-8d0d-fecbe4a962d3)"
							},
							"response": [
								{
									"name": "Real-time Card Transaction Search",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/transactions/card-payments?reference=REAL-TIME-TXN-001",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"transactions",
												"card-payments"
											],
											"query": [
												{
													"key": "reference",
													"value": "REAL-TIME-TXN-001"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"transactionId\": \"1203317\",\n    \"reference\": \"REAL-TIME-TXN-001\",\n    \"statusCode\": \"S\",\n    \"subStatusCode\": null,\n    \"statusDescription\": \"Successful\",\n    \"processedAmount\": 100.25\n}"
								}
							]
						},
						{
							"name": "Look up single live card transaction üîí",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/transactions/card-payments/{{transaction-id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"transactions",
										"card-payments",
										"{{transaction-id}}"
									]
								},
								"description": "Can be used to lookup the processing result of a previously processed real-time card transaction\n\n###### Route\n\n<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Parameter</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>business-id</code></td>\n        <td>The business you want to access</td>\n      </tr>\n      <tr>\n        <td><code>transaction-id</code></td>\n        <td>Payrix's unique identifier for the transaction</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n###### Response Body\n\n[Transaction Result Model](#7828289b-5a94-4c43-81c3-cf955e6e16bd)"
							},
							"response": [
								{
									"name": "Real-time Card Transaction Lookup",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/transactions/card-payments/12457845",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"transactions",
												"card-payments",
												"12457845"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"transactionId\": \"59581\",\n    \"reference\": \"REAL-TIME-TXN-001\",\n    \"statusCode\": \"S\",\n    \"subStatusCode\": null,\n    \"statusDescription\": \"Successful\",\n    \"processedAmount\": 100.25\n}"
								}
							]
						},
						{
							"name": "Transaction Status History üîí ",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearer-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/transactions/statuses/?Reference=test",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"transactions",
										"statuses",
										""
									],
									"query": [
										{
											"key": "Reference",
											"value": "test"
										}
									]
								},
								"description": "Used to determine the full transaction lifecycle. Showing all \"From\" and \"To\" status changes for a specific Transaction ID or Reference.\n\nAll static transaction information can be found using the \n[Transaction Search](#4ff99326-bb8c-44a2-aa7a-81887b98a57f) \nor the [Transaction Lookup](#d4793679-1ed3-419e-96b3-3821cfa78061) endpoints\n\n\nRoute\n\n<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Parameter</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>business-id</code></td>\n        <td>The business you want to access</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n###### Querystring Options\n\n<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Parameter</th>\n        <th>Type</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>transactionId</code></td>\n        <td>int</td>\n        <td>Payrix's unique identifier for the transaction</td>\n      </tr>\n      <tr>\n        <td><code>reference</code></td>\n        <td>string</td>\n        <td>Search on the reference you provided for the payment</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n###### Response Body\n\n[Transaction Status History Model](#66ea7bdf-3714-4fb0-967a-9c2daabbeee7)"
							},
							"response": [
								{
									"name": "Transaction Status History üîí ",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/transactions/statuses/?Reference=test",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"transactions",
												"statuses",
												""
											],
											"query": [
												{
													"key": "Reference",
													"value": "test"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 05 Feb 2019 00:31:41 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Expect-CT",
											"value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "4a41468d38965d72-BNE"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"transactionId\": \"1149552\",\n        \"reference\": \"test\",\n        \"statusChangeTime\": \"2018-11-20T02:20:51.9346928+00:00\",\n        \"statusChangeFrom\": \"N\",\n        \"statusChangeFromDescription\": \"Not Submitted\",\n        \"statusChangeTo\": \"P\",\n        \"statusChangeToDescription\": \"Pending\"\n    },\n    {\n        \"transactionId\": \"1149552\",\n        \"reference\": \"test\",\n        \"statusChangeTime\": \"2018-11-22T12:02:01.6307632+00:00\",\n        \"statusChangeFrom\": \"P\",\n        \"statusChangeFromDescription\": \"Pending\",\n        \"statusChangeTo\": \"C\",\n        \"statusChangeToDescription\": \"Cleared\"\n    },\n    {\n        \"transactionId\": \"1149552\",\n        \"reference\": \"test\",\n        \"statusChangeTime\": \"2018-11-22T12:02:07.6668311+00:00\",\n        \"statusChangeFrom\": \"C\",\n        \"statusChangeFromDescription\": \"Cleared\",\n        \"statusChangeTo\": \"S\",\n        \"statusChangeToDescription\": \"Settled\"\n    }\n]"
								}
							]
						}
					]
				},
				{
					"name": "Point-of-Sale",
					"item": [
						{
							"name": "Register a Point-of-Sale Transaction üîí",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ProcessType\": \"COMPLETE\",\r\n    \"TransactionType\": \"CASH\",\r\n    \"Time\": \"2018-09-27T16:45:20.4646152+10:00\",\r\n    \"Reference\": \"POS-0001\",\r\n    \"PreviousTransactionReference\": null,\r\n    \"Description\": \"xUnit Second Test POS Transactions\",\r\n    \"Amount\": 185.37,\r\n    \"CurrencyCode\": \"AUD\",\r\n    \"StatusCode\": \"S\",\r\n    \"SubStatusCode\": null,\r\n    \"StatusDescription\": \"POS-Processed-OK\",\r\n    \"Card\": {\r\n      \"MaskedCardNumber\": \"555555xxxxxx4444\",\r\n      \"CardholderName\": \"POS CARDHOLDER\",\r\n      \"ExpiryYear\": 2031,\r\n      \"ExpiryMonth\": 11,\r\n      \"CardType\": \"Mastercard\"\r\n    },\r\n    \"Payer\": {\r\n      \"UniqueReference\": \"pos.payer.1\",\r\n      \"GroupReference\": \"pos.g.payer.1\",\r\n      \"FamilyOrBusinessName\": \"Surname\",\r\n      \"GivenName\": \"Firstname\",\r\n      \"BillingAddress\": {\r\n        \"Line1\": \"1 POS Test St\",\r\n        \"Line2\": null,\r\n        \"Suburb\": \"Testville\",\r\n        \"State\": \"QLD\",\r\n        \"PostCode\": \"4000\",\r\n        \"Country\": null\r\n      },\r\n      \"Email\": \"test@test.com\",\r\n      \"Phone\": \"07 3333 1111\",\r\n      \"SavePayer\": false\r\n    },\r\n    \"SettlementDate\": \"2018-09-17T16:45:20.4654482+10:00\",\r\n    \"BankReference\": \"Pos-Bank-123456789\",\r\n    \"TerminalId\": \"TMR00000001\",\r\n    \"MerchantId\": \"Merchant-XYZ\",\r\n    \"ReceiptInfo\": \"-------- RECEIPT ---------\",\r\n    \"Audit\": {\r\n      \"Username\": \"Example\",\r\n      \"UserIP\": \"1.2.3.4\"\r\n    }\r\n  }"
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/transactions/point-of-sale",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"transactions",
										"point-of-sale"
									]
								},
								"description": "This function allows you to record a point-of-sale transaction that has been processed using one of your point-of-sale terminals.\n\nThis function can only be used for businesses that have been approved and set up with a point-of-sale account with Payrix.\n\n## Special Notes üìë\nPLEASE NOTE: This function performs duplicate detection on the \"Reference\" field - if we already have a transaction recorded with the Reference you provide, this function will return successful without adding a second transaction or updating the existing transaction.\n\nWARNING: Full card numbers must not be passed through to this function - this function is only for recording transactions already processed by a point-of-sale system, so only the masked card number (first 6 and last 4 digits) needs to be provided.\n\nTo retrieve previously posted transaction information please use the [Transaction Search](#4ff99326-bb8c-44a2-aa7a-81887b98a57f) or [Transaction Lookup](#d4793679-1ed3-419e-96b3-3821cfa78061) calls.\n\n###### Route\n\n<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Parameter</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>business-id</code></td>\n        <td>The business you want to access</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n###### Post Body\n\n[Point-of-Sale Transaction Model](#a099b4c2-f127-4981-a632-47ae8382a835)\n\n###### Response Body\n\n[Point-of-Sale Transaction Result Model](#9b015077-136f-46a6-b90e-09b00f55dff4)"
							},
							"response": [
								{
									"name": "Register a Point-of-Sale Transaction",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ProcessType\": \"COMPLETE\",\r\n    \"TransactionType\": \"CASH\",\r\n    \"Time\": \"2018-09-15T16:45:20.4646152+10:00\",\r\n    \"Reference\": \"POS-0001\",\r\n    \"PreviousTransactionReference\": null,\r\n    \"Description\": \"xUnit Second Test POS Transactions\",\r\n    \"Amount\": 185.37,\r\n    \"CurrencyCode\": \"AUD\",\r\n    \"StatusCode\": \"S\",\r\n    \"SubStatusCode\": null,\r\n    \"StatusDescription\": \"POS-Processed-OK\",\r\n    \"Card\": {\r\n      \"MaskedCardNumber\": \"555555xxxxxx4444\",\r\n      \"CardholderName\": \"POS CARDHOLDER\",\r\n      \"ExpiryYear\": 2031,\r\n      \"ExpiryMonth\": 11,\r\n      \"CardType\": \"Mastercard\"\r\n    },\r\n    \"Payer\": {\r\n      \"UniqueReference\": \"pos.payer.1\",\r\n      \"GroupReference\": \"pos.g.payer.1\",\r\n      \"FamilyOrBusinessName\": \"Surname\",\r\n      \"GivenName\": \"Firstname\",\r\n      \"BillingAddress\": {\r\n        \"Line1\": \"1 POS Test St\",\r\n        \"Line2\": null,\r\n        \"Suburb\": \"Testville\",\r\n        \"State\": \"QLD\",\r\n        \"PostCode\": \"4000\",\r\n        \"Country\": null\r\n      },\r\n      \"Email\": \"test@test.com\",\r\n      \"Phone\": \"07 3333 1111\",\r\n      \"SavePayer\": false\r\n    },\r\n    \"SettlementDate\": \"2018-09-17T16:45:20.4654482+10:00\",\r\n    \"BankReference\": \"Pos-Bank-123456789\",\r\n    \"TerminalId\": \"TMR00000001\",\r\n    \"MerchantId\": \"Merchant-XYZ\",\r\n    \"ReceiptInfo\": \"-------- RECEIPT ---------\",\r\n    \"Audit\": {\r\n      \"Username\": \"Example\",\r\n      \"UserIP\": \"1.2.3.4\"\r\n    }\r\n  }"
										},
										"url": {
											"raw": "{{url}}/businesses/{{business-id}}/transactions/point-of-sale",
											"host": [
												"{{url}}"
											],
											"path": [
												"businesses",
												"{{business-id}}",
												"transactions",
												"point-of-sale"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\r\n    \"transactionId\": \"POS-d64f21da150c4060aee8c954b0853659\",\r\n    \"reference\": \"POS-0001\"\r\n  }"
								}
							]
						}
					]
				},
				{
					"name": "Tokenize Card",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  Card : {\n    CardNumber : 4111111111111111,\n    CardholderName : \"TEST CARD\",\n    ExpiryYear : 2028,\n    ExpiryMonth : 1,\n    Ccv : \"123\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/businesses/{{business-key}}/services/tokenize-card",
							"host": [
								"{{url}}"
							],
							"path": [
								"businesses",
								"{{business-key}}",
								"services",
								"tokenize-card"
							]
						},
						"description": "**NB**\r\nThis method is used by the framework for infrastructure purposes only, and is not intended to be called from your code.\r\n\r\nPlease see the [Building a Webpage](#ecd1736d-29f4-459f-b500-a996c8dee11e) section for more information on tokens.\r\n\r\nIntended to be called client-side, this function uploads the details of a person's credit card directly to our servers and returns a token that can be used in place of the card information to process the payment on your server.\r\n\r\n## Special Notes üìë\r\nPLEASE NOTE: Tokenized cards are stored for 20 minutes only ‚Äì During that time, you can use it to process a payment, to add the card to a payer, or both.\r\nIf a payment on the card is not processed or the card details are not added to a payer within this time, the card will need to be tokenized again.\r\nAfter 20 minutes the token will expire, however if you have added the payment details to a Payer you will be able to [process a saved card transaction.]( #220402de-e5bf-43c5-8a71-7410706c7654)\r\n\r\n\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-key/GUID</code></td>\r\n        <td>Your `BusinessKey` aka `BusinessGUID` which identifies your business</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Request Body\r\n\r\n[Tokenize Card Model](#f6eba435-1511-474d-8067-1e0c1b01f884)\r\n\r\n###### Response Body\r\n\r\n[Card Token Model](#03a42d49-ab35-408d-bc71-81346a40dd3b)"
					},
					"response": []
				},
				{
					"name": "Refund a bank transaction üîí",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Reference\": \"REFUND-TXN-111\",\r\n    \"Description\": \"This is a refund example\",\r\n    \"Amount\": 10.25,\r\n    \"Audit\": {\r\n      \"Username\": \"Example-User\",\r\n    \t\"UserIP\": \"1.2.3.4\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{url}}/businesses/{{business-id}}/transactions/bank-payments/{{transaction-id}}/refunds",
							"host": [
								"{{url}}"
							],
							"path": [
								"businesses",
								"{{business-id}}",
								"transactions",
								"bank-payments",
								"{{transaction-id}}",
								"refunds"
							]
						},
						"description": "Used to refund all or part of a previously processed bank transaction\n\nBank debits refunds are not immediate and depending on time of submit may not be processed until next business day due to bank cutoffs times.\n\n**Please note that the API Refund function is not available by default. \n\nThe ability to process refunds depends on what type of merchant account you have, and approval by the Payrix Risk and Fraud team.\n\nFor further information please [contact us](#5e519f4a-1513-45cc-893a-0e80148463de).\n\n###### Route\n\n<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Parameter</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>business-id</code></td>\n        <td>The business you want to access</td>\n      </tr>\n      <tr>\n        <td><code>'transactionID'</code></td>\n        <td>Payrix's unique identifier for the transaction</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n###### Post Body\n\n[Transaction Update Model](#a5c13037-6a2c-4828-9f03-078008a4fe92)\n\n###### Response Body\n\n[Transaction Result Model](#7828289b-5a94-4c43-81c3-cf955e6e16bd)"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Hosted Services Tokens  ",
			"item": [
				{
					"name": "Generate HPP Token üîí",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJDOEY2OTg4RTM4RDRCNDlCRTQwQ0NGQkZBMUE2QTNBNTI0QkQ2ODFSUzI1NiIsInR5cCI6ImF0K2p3dCIsIng1dCI6IkxJOXBpT09OUzBtLVFNejctaHBxT2xKTDFvRSJ9.eyJuYmYiOjE2ODkwMzc5NDUsImV4cCI6MTY4OTA0MTU0NSwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3QucHltbnRzLmNvbS5hdTo4MDAxIiwiYXVkIjoiaW50ZWdyYXBheS5hcGkucHVibGljIiwiY2xpZW50X2lkIjoiaW50ZWdyYXBheS5hcGkucHVibGljLmNsaWVudCIsInN1YiI6IjE4OTkuMTIzNCIsImF1dGhfdGltZSI6MTY4OTAzNzk0NSwiaWRwIjoibG9jYWwiLCJlbWFpbCI6ImNyYWlnLmNvbGxpbnNAcGF5cml4LmNvbS5hdSIsIkJ1c2luZXNzSUQiOiIxODk5IiwiQnVzaW5lc3NOYW1lIjoiQ3JhaWcgU2FuZGJveCIsIkJ1c2luZXNzVHlwZUlEIjoiMyIsIlVzZXJuYW1lIjoiMTg5OS4xMjM0Iiwicm9sZSI6WyJCUGF5LkFzc2lnbiIsIkJQYXkuU2VhcmNoIiwiQnVzaW5lc3MuU3RhdHVzIiwiQ29uZmlnLkNhcmRCaW5zIiwiSW52b2ljaW5nLlNhdmUiLCJJbnZvaWNpbmcuU2VhcmNoIiwiSW52b2ljaW5nLlZpZXciLCJQYXllci5BY2NvdW50LkRlbGV0ZSIsIlBheWVyLkFjY291bnQuU2F2ZS5BbGwiLCJQYXllci5BY2NvdW50LlNhdmUuQmFuayIsIlBheWVyLkFjY291bnQuU2F2ZS5CUGF5IiwiUGF5ZXIuQWNjb3VudC5TYXZlLkNhcmQiLCJQYXllci5BY2NvdW50LlNhdmUuQ2FyZC5Ub2tlbiIsIlBheWVyLkFjY291bnQuVmlldyIsIlBheWVyLkFkZCIsIlBheWVyLlNhdmUiLCJQYXllci5TYXZlLlN0YXR1cyIsIlBheWVyLlNjaGVkdWxpbmcuU2F2ZSIsIlBheWVyLlNjaGVkdWxpbmcuVmlldyIsIlBheWVyLlNlYXJjaCIsIlBheWVyLlZpZXciLCJSZXBvcnRzLlNldHRsZW1lbnQiLCJTY2hlZHVsaW5nLlNlYXJjaCIsIlRva2Vucy5HZW5lcmF0ZSIsIlRva2Vucy5WaWV3IiwiVHJhbnNhY3Rpb25zLlByb2Nlc3MuQ2FyZCIsIlRyYW5zYWN0aW9ucy5Qcm9jZXNzLkNhcmQuM0RTIiwiVHJhbnNhY3Rpb25zLlByb2Nlc3MuQ2FyZC5DYXB0dXJlIiwiVHJhbnNhY3Rpb25zLlByb2Nlc3MuQ2FyZC5GcmF1ZENoZWNrIiwiVHJhbnNhY3Rpb25zLlByb2Nlc3MuQ2FyZC5SZWZ1bmQiLCJUcmFuc2FjdGlvbnMuUHJvY2Vzcy5DYXJkLlN0b3JlZCIsIlRyYW5zYWN0aW9ucy5Qcm9jZXNzLkNhcmQuVG9rZW4iLCJUcmFuc2FjdGlvbnMuU2VhcmNoIiwiVHJhbnNhY3Rpb25zLlNlYXJjaC5OZXdTdGF0dXMiLCJUcmFuc2FjdGlvbnMuVmlldyJdLCJqdGkiOiIzRDYyQjFDM0M5MjE0OUI4MjE4NzM3NjU0MzU1MzQ0NCIsImlhdCI6MTY4OTAzNzk0NSwic2NvcGUiOlsiaW50ZWdyYXBheS5hcGkucHVibGljIl0sImFtciI6WyJBdXRoZW50aWNhdGVkIl19.A_j0ZXBrflNOpIceE6Ch0LTSvC6UUwkEbgwPRw4eYHp43dunpXx9hQJwzbpjz70fMc8z8t4PW8ZeiSh29XVUdDA-HFG7bGGyD4x0LMtNJy-HT_wTk61dt0L4u6eexu1EnvMGuGTnMh7r6NeMLBNchQ8aEu71nv4l1UuOmaCgcUZWVrEbtrkLOjMMDmfMqkcGRzxkpnygSBhkI39Rjc8W3SPesu5f20FqlHp56Der7MXBsKkQ57c306ia1bvo5g9Zex7-I7oBsyuFh00NX3Dpn-DkVICDy2u68ru625jXjVAVfoGKoGE9XGzCYo6RzFB2259IWjMPsA9Q1-rBvXi5og",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\r\n    \"ReturnUrl\": \"https://www.payrix.com.au?txn=123456789\",\r\n    \"Template\": \"Basic\",\r\n    \"Transaction\": {\r\n      \"ProcessType\": \"COMPLETE\",\r\n      \"Reference\": \"HPP-TOKEN-001\",\r\n      \"Description\": \"Test HPP API Token\",\r\n      \"Amount\": 23.00,\r\n      \"ServiceDate\": \"2023-06-25T10:00:00+10:00\"\r\n    },\r\n    \"Payer\": {\r\n      \"UniqueReference\": \"HPP-TOKEN-PAYER-U-1\",\r\n      \"GroupReference\": \"HPP-TOKEN-PAYER-GRP-1\",\r\n      \"FamilyOrBusinessName\": \"Surname\",\r\n      \"GivenName\": \"First Name\",\r\n      \"Email\": \"payer.hpp.1@payrix.com.au\",\r\n      \"Phone\": \"0733332222\",\r\n      \"Mobile\": \"0411228833\",\r\n      \"Address\": {\r\n        \"Line1\": \"1 Test St\",\r\n        \"Line2\": null,\r\n        \"Suburb\": \"Testville\",\r\n        \"State\": \"QLD\",\r\n        \"PostCode\": \"4001\",\r\n        \"Country\": null\r\n      },\r\n      \"SavePayer\": false\r\n    },\r\n    \"Audit\": {\r\n      \"Username\": \"Token Example\",\r\n      \"UserIP\": \"1.2.3.4\"\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{url}}/businesses/{{business-id}}/services/tokens/hpp/",
							"host": [
								"{{url}}"
							],
							"path": [
								"businesses",
								"{{business-id}}",
								"services",
								"tokens",
								"hpp",
								""
							]
						},
						"description": "Generate a new token for use with the HPP (Hosted Payment Page) Service\n\n###### Route\n\n<p><br><br></p><p><br><br><br></p><p><br><br></p><table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td><code>business-id</code></td><td>The business you want to access</td></tr></tbody></table>\n\n###### Post Body\n\n[Token \\[HPP\\] Generate Model](#ecbb94ea-593c-4c89-aef9-6fdfc0301589)\n\n###### Response Body\n\n[Token Result](#98328d5b-e4f9-4eea-8d0d-fecbe4a962d3)"
					},
					"response": [
						{
							"name": "Generate HPP Token üîí",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ReturnUrl\": \"https://www.payrix.com.au?txn=123456789\",\r\n    \"Template\": \"Basic\",\r\n    \"Transaction\": {\r\n      \"ProcessType\": \"COMPLETE\",\r\n      \"Reference\": \"HPP-TOKEN-001\",\r\n      \"Description\": \"Test HPP API Token\",\r\n      \"Amount\": 23.00\r\n    },\r\n    \"Payer\": {\r\n      \"SavePayer\": true,\r\n      \"UniqueReference\": \"HPP-TOKEN-PAYER-U-1\",\r\n      \"GroupReference\": \"HPP-TOKEN-PAYER-GRP-1\",\r\n      \"FamilyOrBusinessName\": \"Surname\",\r\n      \"GivenName\": \"First Name\",\r\n      \"Email\": \"payer.hpp.1@payrix.com.au\",\r\n      \"Phone\": \"0733332222\",\r\n      \"Mobile\": \"0411228833\",\r\n      \"Address\": {\r\n        \"Line1\": \"1 Test St\",\r\n        \"Line2\": null,\r\n        \"Suburb\": \"Testville\",\r\n        \"State\": \"QLD\",\r\n        \"PostCode\": \"4001\",\r\n        \"Country\": null\r\n      }\r\n    },\r\n    \"Audit\": {\r\n      \"Username\": \"Token Example\",\r\n      \"UserIP\": \"1.2.3.4\"\r\n    }\r\n  }"
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/services/tokens/hpp/",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"services",
										"tokens",
										"hpp",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\r\n    \"token\": \"28e24e60-0fb8-44e2-918e-e38e038e52f3\",\r\n    \"redirectToUrl\": \"https://sandbox.paymentsapi.io/ui/hpp/api/28e24e60-0fb8-44e2-918e-e38e038e52f3\"\r\n}"
						}
					]
				},
				{
					"name": "Generate eDDR Token  üîí",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ReturnUrl\": \"https://www.payrix.com.au?ddr=123456789\",\r\n    \"Template\": \"Basic-eDDR\",\r\n    \"Payer\": {\r\n      \"UniqueReference\": \"P1-UNIQUE-REF\",\r\n      \"GroupReference\": \"P1-UNIQUE-REF\",\r\n      \"FamilyOrBusinessName\": \"Citizen\",\r\n      \"GivenName\": \"Jane\",\r\n      \"Email\": \"CustomerIntegration@payrix.com.au\",\r\n      \"Phone\": \"0733332222\",\r\n      \"Mobile\": \"0411228833\",\r\n      \"Address\": {\r\n        \"Line1\": \"1 Test St\",\r\n        \"Line2\": \"Test Bulding\",\r\n        \"Suburb\": \"Testville\",\r\n        \"State\": \"QLD\",\r\n        \"PostCode\": \"4001\",\r\n        \"Country\": null\r\n    \t   },\r\n      \"ExtraInfo\": \r\n      {\r\n      \"XeroAutoDebitEnabled\": true\t\r\n      },\r\n      \"OverrideExisting\": false,\r\n      \"RetainSchedule\": false\r\n    },\r\n    \"Schedule\": {\r\n\t\"scheduleType\": \"UNENDING\",\r\n\t\"startDate\": \"2022-07-09T11:07:15+00:00\",\r\n\t\"amount\": \"999.00\",\r\n\t\"frequency\": \"WEEKLY\",\r\n\t\"frequencyDay\": \"1\",\r\n\t},\r\n\t   \"Audit\": {\r\n      \"Username\": \"EddrTokenTests\",\r\n      \"UserIP\": \"444.888.000\"\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{url}}/businesses/{{business-id}}/services/tokens/eddr/",
							"host": [
								"{{url}}"
							],
							"path": [
								"businesses",
								"{{business-id}}",
								"services",
								"tokens",
								"eddr",
								""
							]
						},
						"description": "Generate a new token for use with the eDDR (Electronic Direct Debit Request) Service\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Post Body\r\n\r\n[Token [eDDR] Generate Model](#1388122d-6510-4d52-a634-453275722be5)\r\n\r\n###### Response Body\r\n\r\n[Token Result](#98328d5b-e4f9-4eea-8d0d-fecbe4a962d3)"
					},
					"response": [
						{
							"name": "Generate eDDR Token  üîí",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ReturnUrl\": \"https://www.payrix.com.au?ddr=123456789\",\r\n    \"Template\": \"Basic-eDDR\",\r\n    \"Payer\": {\r\n      \"UniqueReference\": \"EDDR-TOKEN-PAYER-U-1\",\r\n      \"GroupReference\": \"EDDR-TOKEN-PAYER-GRP-1\",\r\n      \"FamilyOrBusinessName\": \"Surname\",\r\n      \"GivenName\": \"FirstName\",\r\n      \"Email\": \"payer.eddr.1@payrix.com.au\",\r\n      \"Phone\": \"0733332222\",\r\n      \"Mobile\": \"0411228833\",\r\n      \"Address\": {\r\n        \"Line1\": \"1 Test St\",\r\n        \"Line2\": null,\r\n        \"Suburb\": \"Testville\",\r\n        \"State\": \"QLD\",\r\n        \"PostCode\": \"4001\",\r\n        \"Country\": null\r\n      },\r\n      \"OverrideExisting\": false\r\n    },\r\n    \"Schedule\": null,\r\n    \"Audit\": {\r\n      \"Username\": \"EddrTokenTests\",\r\n      \"UserIP\": \"444.888.000\"\r\n    }\r\n  }"
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/services/tokens/eddr/",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"services",
										"tokens",
										"eddr",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\r\n    \"token\": \"28e24e60-0fb8-44e2-918e-e38e038e52f3\",\r\n    \"redirectToUrl\": \"https://sandbox.paymentsapi.io/ui/eddr/api/28e43e60-0fb8-78e2-912e-e38e038e52f3\"\r\n}"
						}
					]
				},
				{
					"name": "Generate Vault Token  üîí",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ReturnUrl\": \"https://www.payrix.com.au?ddr=123456789\",\r\n    \"Payer\": {\r\n     \"UniqueReference\": \"P1-UNIQUE-REF\",\r\n      \"GroupReference\": \"P1-UNIQUE-REF\",\r\n      \"FamilyOrBusinessName\": \"Citizen\",\r\n      \"GivenName\": \"Jane\",\r\n      \"Email\": \"CustomerIntegration@payrix.com.au\",\r\n      \"Phone\": \"0733332222\",\r\n      \"Mobile\": \"0411228833\",\r\n      \"Address\": {\r\n        \"Line1\": \"1 Test St\",\r\n        \"Line2\": \"Test Bulding\",\r\n        \"Suburb\": \"Testville\",\r\n        \"State\": \"QLD\",\r\n        \"PostCode\": \"4001\",\r\n        \"Country\": null,\r\n\t\t\"AddIfNotExists\": true\r\n      },\r\n    },\r\n     \"Audit\": {\r\n      \"Username\": \"VaultTokenTests\",\r\n      \"UserIP\": \"444.888.000\"\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{url}}/businesses/{{business-id}}/services/tokens/vault/",
							"host": [
								"{{url}}"
							],
							"path": [
								"businesses",
								"{{business-id}}",
								"services",
								"tokens",
								"vault",
								""
							]
						},
						"description": "Generate a new token for use with the \"Add-To-Vault\" Service\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Post Body\r\n\r\n[Token [Vault] Generate Model](#dd0271a3-843a-4e5b-bbd7-a40c86e8e37f)\r\n\r\n###### Response Body\r\n\r\n[Token Result](#98328d5b-e4f9-4eea-8d0d-fecbe4a962d3)"
					},
					"response": [
						{
							"name": "Generate eDDR Token  üîí",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ReturnUrl\": \"https://www.payrix.com.au?ddr=123456789\",\r\n    \"Template\": \"Basic-eDDR\",\r\n    \"Payer\": {\r\n      \"UniqueReference\": \"EDDR-TOKEN-PAYER-U-1\",\r\n      \"GroupReference\": \"EDDR-TOKEN-PAYER-GRP-1\",\r\n      \"FamilyOrBusinessName\": \"Surname\",\r\n      \"GivenName\": \"FirstName\",\r\n      \"Email\": \"payer.eddr.1@payrix.com.au\",\r\n      \"Phone\": \"0733332222\",\r\n      \"Mobile\": \"0411228833\",\r\n      \"Address\": {\r\n        \"Line1\": \"1 Test St\",\r\n        \"Line2\": null,\r\n        \"Suburb\": \"Testville\",\r\n        \"State\": \"QLD\",\r\n        \"PostCode\": \"4001\",\r\n        \"Country\": null\r\n      },\r\n      \"OverrideExisting\": false\r\n    },\r\n    \"Schedule\": null,\r\n    \"Audit\": {\r\n      \"Username\": \"EddrTokenTests\",\r\n      \"UserIP\": \"444.888.000\"\r\n    }\r\n  }"
								},
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/services/tokens/eddr/",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"services",
										"tokens",
										"eddr",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\r\n    \"token\": \"28e24e60-0fb8-44e2-918e-e38e038e52f3\",\r\n    \"redirectToUrl\": \"https://sandbox.paymentsapi.io/ui/eddr/api/28e43e60-0fb8-78e2-912e-e38e038e52f3\"\r\n}"
						}
					]
				},
				{
					"name": "Token Lookup üîí",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/businesses/{{business-id}}/services/tokens/{{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"businesses",
								"{{business-id}}",
								"services",
								"tokens",
								"{{token}}"
							]
						},
						"description": "Used to lookup details of a single previously generated token.\r\n\r\n###### Route\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Parameter</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business-id</code></td>\r\n        <td>The business you want to access</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>token</code></td>\r\n        <td>The token (GUID) that you received by using one of the token generate endpoints</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n###### Response Body\r\n\r\n[Token Lookup Model](#38a9fb7f-df82-4ca9-82ef-1558ae196562)\r\n"
					},
					"response": [
						{
							"name": "Token Lookup üîí",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/businesses/{{business-id}}/services/tokens/{{token-guid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"businesses",
										"{{business-id}}",
										"services",
										"tokens",
										"{{token-guid}}"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\r\n    \"token\": \"28e24e60-0fb8-44e2-918e-e38e038e52f3\",\r\n    \"type\": \"HPP\",\r\n    \"time\": \"2019-03-03T18:02:00+10:00\",\r\n    \"status\": \"PROCESSED_SUCCESSFUL\",\r\n    \"statusDescription\": null,\r\n    \"returnUrl\": \"https://www.payrix.com.au?txn=123456789\",\r\n    \"redirectToUrl\": \"https://sandbox.paymentsapi.io/ui/hpp/api/28e24e60-0fb8-44e2-918e-e38e038e52f3\",\r\n    \"template\": \"479B33AD-EE41-4F30-A7B5-0A900A765D4E\",\r\n    \"templateName\": \"Basic\",\r\n    \"transaction\": {\r\n      \"business\": {\r\n        \"businessId\": \"1391\",\r\n        \"businessName\": \"xUnit Rest Bus1 (T)\"\r\n      },\r\n      \"time\": \"2019-03-03T18:01:37.307+10:00\",\r\n      \"transactionId\": \"132426\",\r\n      \"secondaryTransactionId\": \"RT80437\",\r\n      \"reference\": \"HPP-TOKEN-001\",\r\n      \"description\": \"Test HPP API Token\",\r\n      \"scheduleReference\": null,\r\n      \"amount\": 23.0,\r\n      \"amountRequested\": 23.0,\r\n      \"amountRefunded\": 0.0,\r\n      \"currency\": \"AUD\",\r\n      \"type\": \"RT\",\r\n      \"typeDescription\": \"Realtime Payment - Website\",\r\n      \"statusCode\": \"C\",\r\n      \"subStatusCode\": null,\r\n      \"statusDescription\": \"Cleared\",\r\n      \"paymentMethod\": \"MASTERCARD\",\r\n      \"payer\": {\r\n        \"payerId\": \"140448\",\r\n        \"uniqueReference\": \"HPP-TOKEN-PAYER-U-1\",\r\n        \"groupReference\": \"HPP-TOKEN-PAYER-GRP-1\",\r\n        \"familyOrBusinessName\": \"Surname\",\r\n        \"givenName\": \"First Name\",\r\n        \"address\": null,\r\n        \"email\": null,\r\n        \"phone\": null,\r\n        \"mobile\": null\r\n      },\r\n      \"card\": {\r\n        \"cardNumber\": \"555555xxxxxx4444\",\r\n        \"cardholderName\": \"HPP CC\",\r\n        \"cardExpires\": \"2027-11-01T00:00:00\",\r\n        \"cardType\": \"Mastercard\"\r\n      },\r\n      \"bankAccount\": null\r\n    },\r\n    \"payer\": {\r\n      \"business\": {\r\n        \"businessId\": \"1391\",\r\n        \"businessName\": \"xUnit Rest Bus1 (T)\"\r\n      },\r\n      \"payerId\": \"140448\",\r\n      \"status\": \"ACTIVE\",\r\n      \"statusCode\": \"A\",\r\n      \"statusDescription\": \"Active\",\r\n      \"statusChangeDate\": null,\r\n      \"createdTime\": \"2019-03-03T18:01:37.223+10:00\",\r\n      \"schedule\": null,\r\n      \"uniqueReference\": \"HPP-TOKEN-PAYER-U-1\",\r\n      \"groupReference\": \"HPP-TOKEN-PAYER-GRP-1\",\r\n      \"familyOrBusinessName\": \"Surname\",\r\n      \"givenName\": \"First Name\",\r\n      \"email\": \"payer.hpp.1@payrix.com.au\",\r\n      \"phone\": \"0411228833\",\r\n      \"mobile\": \"0411228833\",\r\n      \"address\": {\r\n        \"line1\": \"1 Test St\",\r\n        \"line2\": \"\",\r\n        \"suburb\": \"Testville\",\r\n        \"state\": \"QLD\",\r\n        \"postCode\": \"4883\",\r\n        \"country\": \"AUS\"\r\n      },\r\n      \"extraInfo\": {\r\n        \"xeroAutoDebitEnabled\": false\r\n      }\r\n    },\r\n    \"schedule\": null,\r\n    \"requestHpp\": {\r\n      \"returnUrl\": \"https://www.payrix.com.au/\",\r\n      \"template\": \"TEST-84d463\",\r\n      \"transaction\": {\r\n        \"processType\": \"COMPLETE\",\r\n        \"reference\": \"HPP-TOKEN-001\",\r\n        \"description\": \"Test HPP API Token\",\r\n        \"amount\": 23.00,\r\n        \"currencyCode\": \"AUD\"\r\n      },\r\n      \"payer\": {\r\n        \"savePayer\": true,\r\n        \"uniqueReference\": \"HPP-TOKEN-PAYER-U-1\",\r\n        \"groupReference\": \"HPP-TOKEN-PAYER-GRP-1\",\r\n        \"familyOrBusinessName\": \"Surname\",\r\n        \"givenName\": \"First name\",\r\n        \"email\": \"payer.hpp.1@payrix.com.au\",\r\n        \"phone\": \"0733332222\",\r\n        \"mobile\": \"0411228833\",\r\n        \"address\": {\r\n          \"line1\": \"1 Test St\",\r\n          \"line2\": null,\r\n          \"suburb\": \"Testville\",\r\n          \"state\": \"QLD\",\r\n          \"postCode\": \"4883\",\r\n          \"country\": null\r\n        }\r\n      },\r\n      \"audit\": {\r\n        \"username\": \"HppTokenTests\",\r\n        \"userIP\": \"1.2.3.4\"\r\n      }\r\n    },\r\n    \"events\": [\r\n      {\r\n        \"event\": \"WAITING\",\r\n        \"time\": \"2019-03-03T18:02:00+10:00\",\r\n        \"description\": null,\r\n        \"username\": \"API:  [HppTokenTests]\",\r\n        \"ip\": \"localhost [333.777.999]\"\r\n      },\r\n      {\r\n        \"event\": \"VALIDATED\",\r\n        \"time\": \"2019-03-03T18:02:00+10:00\",\r\n        \"description\": null,\r\n        \"username\": null,\r\n        \"ip\": \"\"\r\n      },\r\n      {\r\n        \"event\": \"PROCESSED_SUCCESSFUL\",\r\n        \"time\": \"2019-03-03T18:02:00+10:00\",\r\n        \"description\": null,\r\n        \"username\": null,\r\n        \"ip\": \"111.777.111.888\"\r\n      }\r\n    ]\r\n  }"
						}
					]
				}
			],
			"description": "These endpoints can be used to obtain single use tokens that can be used for Payrix's three types of hosted payment services:\n\n<ul><li><p>Hosted Payment Page (HPP) - used for processing real-time transactions.<br></p></li><li><p>Electronic Direct Debit Request (eDDR) - used for signing up and stored payer information with options available for different payment schedules, membership options, and terms and conditions.<br></p></li><li><p>Add-To-Vault - used to allow a customer to enter new credit card information for use with future payments.<br></p></li></ul>\n\nThese services can be used when you want to simplify your integration, and/or reduce your application risk and PCI Compliance scope, by redirecting your customers to our customizable hosted services webpages where they can entered their information which is then processed directly by Payrix.\n\nThe process for using the tokens is simply:\n\n<ol><li><p>Call one of the token generate endpoints to obtain a token and a redirect url.</p></li><li><p>Redirect your customer to the URL you received with the token</p></li><li><p>After your customer has completed the form we will redirect them bank to your website using your URL you provided when you generated the token.</p></li><li><p>Call the token lookup endpoint to obtains the result of the process.</p></li></ol>\n\n## Special Notes üìë\n\nPlease note the token is valid for 20 minutes.  \nYou may wish to use a landing page to trigger this if the page will not be completed as part of the flow.\n\nIf there is no transaction on saved payment details for 13 months, the payer status will be changed to ‚ÄúCancelled ‚Äì cancelled due to inactivity ‚Äú. 1 month after this (14 months total), payment details will be removed. After 13 months transactions will not be possible unless Payer Status is changed.",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "3-D Secure",
			"item": [
				{
					"name": "3-D Secure Finalize Transaction üîí",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/businesses/{{business-id}}/transactions/card-payments/finalize/{{redirect-id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"businesses",
								"{{business-id}}",
								"transactions",
								"card-payments",
								"finalize",
								"{{redirect-id}}"
							]
						},
						"description": "When using 3-D Secure, if the challenge scenario was triggered, once your customer is redirected back to your website after completing the verification process, you will need to call this function to finalize your transaction.\n\nIf the verification was completed successfully by your customer, when you call this function we will immediately submit the transaction to the bank and return the result of the transaction.\n\nIf the customer failed to complete the verification, when you call this function it will return a rejected transaction result with a sub-status code describing the 3-D Secure response, and the transaction will not be submitted to the bank.\n\n[See here](#faff43cd-5e44-471c-ad23-64a1fd28f90f) for more info on using 3-D.\n\n###### Route\n\n<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Parameter</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>business-id</code></td>\n        <td>The business you want to access</td>\n      </tr>\n      <tr>\n        <td><code>redirect-id</code></td>\n        <td>This must be set to the redirectId you received from the transaction result when you first attempted to process the transaction (<a href=\"#7828289b-5a94-4c43-81c3-cf955e6e16bd\">see here</a>).</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n###### Post Body\n\nNone\n\n###### Response Body\n\n[Transaction Result Model](#7828289b-5a94-4c43-81c3-cf955e6e16bd)"
					},
					"response": []
				}
			],
			"description": "3-D Secure (v2) is available for some business setups and regions. It can provide strong customer authentication which helps to mitigate the risk of fraud and chargebacks.\n\nThe 3-D Secure system will always attempt to a perform a ‚Äúfrictionless‚Äù authentication, which means that it will evaluate various factors related to your customer, including things such as the contact details provided, card information and location etc., to determine the risk of processing the transaction. If the 3-D Secure system deems the risk low, then a 3-D Secure approval is given without requiring any input from the customer, so the processing of the transaction can be completed seamlessly.\n\nHowever, if the 3-D Secure network deems that verification of the customer is necessary, the ‚Äúchallenge‚Äù scenario is initiated which requires your customer to be redirected to a page provided by the cardholder‚Äôs issuing bank, within which they will need to perform their banks process for verifying they are the legitimate cardholder and approve the transaction. If the customer successfully completes this verification, they will then be redirected back and the transaction can then be completed.\n\nIt is also possible for a frictionless rejection to occur in situations such as in the attempt to use a card that has already been linked to fraud, or if the card is no longer active, or is registered as lost or stolen. In this case an authorization failed response is immediately returned from the 3-D Secure system so the transaction cannot be processed, and we will return a rejected status.\n\n*Please Note:* Once 3-D Secure has been turned on for your account, use of 3-D Secure will be enforced for all your real-time transactions.\n\nThere are two ways by which you can process transactions using 3-D Secure:\n\n1.  Hosted Payment Page (HPP) card transactions\n2.  API triggered real-time card transactions\n    \n\n**3-D Secure with Hosted Payment Page (HPP) card transactions**\n\nIf you are using our HPP then all aspects of the 3-D Secure process is taken care of by us, and there is no need for you to do anything different with your HPP integration.\n\n**3-D Secure with API triggered real-time card transactions**\n\nBoth the provided card API function ([see here](#7321df17-1479-4261-b20f-6afe4ba489cd)) and the tokenized card API function ([see here](#14654018-76b6-4b4b-9ecd-a8e89a3b7af7)) support use of 3-D Secure.\n\nUsing 3-D Secure with these functions requires you to do these additional things:\n\n**1) Additional input fields** ‚Äì Provide values for these fields on the card transaction model ([see here](#2ff1a7b1-eedc-4e70-9a61-b49d2ebf915e) and [see here](#8f36ff42-8738-4287-8ca0-ffccf00d8521)):\n\n<ul><li><p>Payer.Email ‚Äì providing the email address of your customer becomes mandatory when processing 3-D Secure transactions. It is also recommended that you provide as much additional contact information on your customer as possible (e.g. address and phone number) as this can improve the chances for performing a frictionless authentication.</p></li><li><p>BrowserInfo ‚Äì in order for the card‚Äôs issuing bank to provide a challenge UI to your customer that is rendered appropriately for the device that your customer is using, the 3-D Secure system requires you to collect and pass-through information on the configuration of the browser that your customer is using.<br>(<a href=\"#b71b2258-d074-4ca9-8e8c-11c00e56c15c\">BrowserInfo Model here</a>)<br></p></li><li><p>CallbackUrl ‚Äì for handling of the challenge scenario, you must provide a URL for your website that your customer will be redirected back to after the verification process. The URL should contain an id/reference that uniquely identifies the transaction that you are attempting to process so you can pick up where you left off when the customer is redirected back to your site.</p></li></ul>\n\n**2) Handle Verification Redirect** ‚Äì When using 3-D Secure you can still receive the ‚ÄúS‚Äù, ‚ÄúF‚Äù and ‚ÄúR‚Äù transaction result statuses ([see here](#0575e464-6926-42d8-9aef-7efb47776a99)) such as in the case of frictionless authentication or errors. However, when using 3-D Secure you can also receive the ‚ÄúV‚Äù result status ‚Äì this means the challenge scenario has been triggered and you must redirect your customer to the URL that is included in the transaction response in the ‚ÄúredirectUrl‚Äù field ([see here](#7828289b-5a94-4c43-81c3-cf955e6e16bd)). When receiving this status, the transaction response will also include a ‚ÄúredirectId‚Äù field ‚Äì you will also need to store this value for use with completing the transaction when the customer is returned to your website (see Handle Callback below).\n\n**3) Handle Callback** ‚Äì if the challenge scenario was triggered, you need to set up your website to handle the callback that occurs when your customer is redirected back to your website after performing the verification. The customer will be returned to your website at whichever URL you provided for the ‚ÄúCallbackUrl‚Äù as described above. You will then need to retrieve the ‚ÄúredirectId‚Äù you received previously and use it to call our finalize transaction API ([see here](#e244f367-2fc6-4384-be31-6546bb951005)). When the finalize API is called, if the challenge verification was successful, we will immediately submit the transaction to the bank for processing and return the result to you. If the challenge verification failed, or was not completed, we will return the rejected status, along with one of the R20, R21, R22 or R23 3-D Secure related sub-status codes ([see here](#b02dad21-6aa7-4876-a2b7-d7c4e2d8226f)).\n\nIt is possible for your customer to abandon the process and not complete the challenge verification at all in which case you will not receive any callback. To handle this situation you may wish to implement some sort of timeout of your transactions to complete their status within your systems. If you wish you can use the finalize API for this purpose.\n\n**Testing**  \nWhen testing the 3DS MPI supports a few different card numbers for triggering different scenarios:\n\n*   4907639999909022 Frictionless Success\n*   5283901906612672 Frictionless Rejected (The Issuer is refusing the authentication)\n*   5283901901266672 Frictionless Fail (Failed Authentication)\n*   5100000000100006 Frictionless Attempts (Issuer is not responding)¬∑\n*   4918914107195005 Challenge Required (Usual test card numbers also trigger this)¬∑\n*   4001880000000055 Merchant Cancel\n*   2221000000000009 Decoupled Authentication\n\n\n\nIf a challenge is required on the ‚ÄúVerify your Payment‚Äù page if a code/ pin of \"555\" is entered the payment will complete successfully.  \nAny other 3 digit code can be used for a failed challenge.  \nBoth will trigger a redirect back to ‚ÄúCallbackUrl‚Äù.",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Card-On-File Compliance",
			"item": [],
			"description": "## Introduction\n\nIn an attempt to reduce fraud and improve customer experience and trust, Visa has introduced a Stored Credential Framework that both merchants and payment facilitators are obligated to adhere to as a way to enforce responsible usage of cardholder data. It introduces a number of policies and procedures relating to the processing of stored customer credit/debit card information that were previously not required.\n\nThis framework has already been rolled out globally, and will eventually become mandatory for all merchants and payment facilitators.\n\nFurther information on the framework can be found in this document from Visa: [Visa Stored Credential Framework](https://usa.visa.com/dam/VCOM/global/support-legal/documents/stored-credential-transaction-framework-vbs-10-may-17.pdf)\n\n## Framework Summary\n\nOne of the key points of this framework is the differentiation of these two ways that a transaction on a stored card can be triggered:\n\n*   **Customer Initiated Transaction (CIT)** - this is a payment on a stored card that has been actively triggered by your customer themselves (i.e. it involves the active participation of the cardholder).\n*   **Merchant Initiated Transaction (MIT)** - this is a payment on a stored card that you as the business have initiated yourself as part of collecting money based upon a pre-agreed contract between your business and the cardholder as part of whatever product or service you are providing them.\n    \n\nIn practice, the framework requires doing the following:\n\n1.  Specifying whether you are processing a CIT or MIT.\n2.  Specifying the type of authorization you are performing.\n3.  Linking all subsequent payments on a stored card using an authorization reference.\n    \n\n> This framework does include other elements relating to the upfront information you must provide your customer to inform them about when and how you will be charging their card, but that is not covered in this document.\n\n## Who is this Relevant For\n\nCurrently, these changes are only relevant to businesses using Payrix's APIs for real-time transaction processing where you are storing your customers card information yourself, and sending the full card information to Payrix when processing each real-time transaction.\n\nIf you are using Payrix's Payer-based functions, you don‚Äôt currently need to make any changes to support the new Framework because Payrix is able to perform the tracking of initial and subsequent transactions on the cards we have stored in our vault.\n\n## What You Need to Do\n\nTo be able to fulfil the obligations of the stored credential framework, we‚Äôve added the following 4 new input fields to our real-time API functions:\n\n  \n  \n  \n  \n\n<p><br><br></p><p><br><br><br></p><p></p><p></p><table><tbody><tr><th>Input Parameter</th><th>Description</th></tr><tr><td><code>CardAuthorizationReference</code></td><td>This is a reference that you need to provide each time you process a subsequent transaction on a stored card. You will receive this value as part of the result of the successful processing of the initial transaction on a newly stored card. See the ‚ÄúTransaction Flow‚Äù section below for more information.</td></tr><tr><td><code>CardAuthorizationType</code></td><td>Used to specify the nature of the authorization. See below for allowed values. <a href=\"#695e8363-6451-4d97-8ef3-ba35f0e67a95\">See here</a> for possible values.</td></tr><tr><td><code>CardStorageType</code></td><td>Used to specify if you are storing the card you are providing, and whether or not it is CIT or MIT. <a href=\"#72e87212-12d8-400c-9ad9-864714110469\">See here</a> for possible values.</td></tr><tr><td><code>RecurringReference</code></td><td><p>Required only when you are going to be processing ongoing payments on the stored card, this is some sort of reference or ID from your system that identifies whatever person, entity or contract for which you are going to process ongoing payments.<br><br></p><p>Whereby the ‚ÄúTransactionReference‚Äù field uniquely identifies each individual transaction you are processing, the ‚ÄúRecurringReference‚Äù field is intending to uniquely identify that which a set of going transactions is being processed for.</p></td></tr></tbody></table>\n\n## Transaction Flow\n\nYou‚Äôll need to follow these steps whenever you will be processing ongoing payments on a card you are already storing, or are intending to store:\n\n1.  If this is the first transaction you are processing on a card you have received:\n    *   Set the **RecurringReference** to an appropriate identifier from your system.\n    *   Set the **CardStorageType** based on whether you have already stored the card or not, and whether the customer initiated the transaction or not.\n    *   Set the **CardAuthorizationType** to ‚ÄúINITIAL‚Äù.\n    *   If the transaction is processed successfully, the transaction result you get back from our API will include a **CardAuthorizationReference** value. Store this value in your system against your card account record for linking future payments.\n2.  When you process a subsequent transaction on the stored card:\n    *   Set the **RecurringReference** to same reference you used for the initial transaction.\n    *   Set the **CardStorageType** to either ‚ÄúCIT_MERCHANT_STORED‚Äù or ‚ÄúMIT_MERCHANT_STORED‚Äù depending on whether the customer initiated the transaction or not.\n    *   Set the **CardAuthorizationType** to the appropriate value for the reason for the ongoing transaction.\n    *   Set the **CardAuthorizationReference** to the value you received from the result of the initial transaction on the card you are providing.\n\n> While we have mentioned Visa as being the initiating organisation of this framework, the same requirements apply for all card types, so follow the same process above for all other card types such as Mastercard and AMEX.",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Data Models",
			"item": [
				{
					"name": "3-D Secure Authorization Info",
					"item": [],
					"description": "<table><tbody><tr><th>Property</th><th>Type</th><th>Description</th></tr><tr><td><code>authVersion</code><b>*</b></td><td>string</td><td>This needs to be set to the version of the 3-D Secure service which was used to authenticate the transaction. Currently only 3-D Secure v2 is supported.</td></tr><tr><td><code>authEci</code><b>*</b></td><td>string</td><td><p>This is set to the Electronic Commerce Indicator (ECI) which indicates the outcome of the 3DS verification. Must be a two-digit number. Allowed values:<br></p><ul><li><p><code>00</code>: Mastercard - Authentication either failed or could not be attempted.</p></li><li><p><code>01</code>: Mastercard - Authentication was attempted but not completed.</p></li><li><p><code>02</code>: Mastercard - Authentication was successful.</p></li><li><p><code>04</code>: Mastercard - Data only transaction that can be sent to Mastercard.</p></li><li><p><code>05</code>: Visa/AMEX - Authentication was successful.</p></li><li><p><code>06</code>: Visa/AMEX - Authentication was attempted but not completed.</p></li><li><p><code>07</code>: Visa/AMEX - Authentication either failed or could not be attempted.</p></li></ul></td></tr><tr><td><code>authValue</code><b>*</b></td><td>string</td><td><p>This is set to the the cryptographic value that provides evidence of the outcome of a 3DS verification.<br></p><ul><li><p>Has a maximum of 28 characters and must be base-64 encoded.</p></li><li><p>For Visa authentications this is called: Cardholder Authentication Verification Value (CAVV).</p></li><li><p>For Mastercard authentications this is called: Universal Cardholder Authentication Field (UCAF).</p></li></ul></td></tr><tr><td><code>authTransactionId</code><b>*</b></td><td>string</td><td>This is set to the the unique authentication transaction identifier, generated by the issuer. It follows RFC 4122 UUID standard and is 36 characters in length.</td></tr></tbody></table>"
				},
				{
					"name": "3-D Secure Authorization Result",
					"item": [],
					"description": "<!DOCTYPE html>\n<html>\n<head>\n</head>\n<body>\n<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Type</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>status</code></td>\n        <td><a href=\"#15ed18a7-ccf9-4e19-84b6-ba0cf39e61db\">3D Secure Authorization Status</a></td>\n        <td>The result of the 3-D Secure verification</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n</body>\n</html>",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Account ID",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Type</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>accountId</code></td>\n        <td>string</td>\n        <td>Payrix's unique account identifier</td>\n      </tr>\n    </tbody>\n  </table>\n</div>",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Account Search",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Type</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>accountId</code></td>\n        <td>string</td>\n        <td>Payrix's unique account identifier</td>\n      </tr>\n      <tr>\n        <td><code>type</code></td>\n        <td><a href=\"#8d96ae29-2ae3-4c63-a1a1-7dc604db1d3f\">Account Type</a></td>\n        <td>The type of account</td>\n      </tr>\n      <tr>\n        <td><code>bankAccount</code></td>\n        <td><a href=\"#252b4223-a3d6-4690-bc3b-bdaca6ab8d7d\">Bank Account Search</a></td>\n        <td>The details of the bank account when <code>type</code> is <code>BANKACCOUNT</code></td>\n      </tr>\n      <tr>\n        <td><code>card</code></td>\n        <td><a href=\"#8250cfa8-1534-4f09-a449-26288371f56c\">Card Search</a></td>\n        <td>The details of the card when <code>type</code> is <code>CARD</code></td>\n      </tr>\n    </tbody>\n  </table>\n</div>",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Address",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>line1</code></td>\r\n        <td>string(100)</td>\r\n        <td>Building and street details (line 1)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>line2</code></td>\r\n        <td>string(100)</td>\r\n        <td>Building and street details (line 2)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>suburb</code></td>\r\n        <td>string(50)</td>\r\n        <td>City, suburb or town</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>state</code></td>\r\n        <td>string(50)</td>\r\n        <td>State or territory</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>postCode</code></td>\r\n        <td>string(20)</td>\r\n        <td>Postal or ZIP code</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>country</code></td>\r\n        <td>string(50)</td>\r\n        <td>Country name</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Audit",
					"item": [],
					"description": "Can be used to provide tracking information of the user of your system who is performing the action\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>username</code></td>\r\n        <td>string(50)</td>\r\n        <td>Name/reference of a user, or process identifier, from your system which initiated the API call</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>userIP</code></td>\r\n        <td>string(20)</td>\r\n        <td>IP address of the user or process from your system which initiated the API call</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Bank Account",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>accountBranch</code><strong>*</strong></td>\r\n        <td>integer(3..14)</td>\r\n        <td>Bank account branch identifier (e.g. BSB or routing number)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>accountNumber</code><strong>*</strong></td>\r\n        <td>integer(3..20)</td>\r\n        <td>Bank account number</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>accountName</code><strong>*</strong></td>\r\n        <td>string(4..50)</td>\r\n        <td>Account holder name</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>accountType</code></td>\r\n        <td><a href=\"#fc399f32-ab4a-4230-b961-70f56f9f426a\">Bank Account Type</a></td>\r\n        <td>Account type</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>audit</code></td>\r\n        <td><a href=\"#9e1c7bdd-f4ee-45aa-9f61-c9f1694fc73c\">Audit</a></td>\r\n        <td>Can be used to provide tracking information of the user of your system who is performing the action</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n__*__ Required",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Bank Account Search",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>accountBranch</code><strong>*</strong></td>\r\n        <td>string</td>\r\n        <td>Bank account branch identifier (e.g. BSB or routing number)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>accountNumber</code><strong>*</strong></td>\r\n        <td>string</td>\r\n        <td>Bank account number</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>accountName</code><strong>*</strong></td>\r\n        <td>string</td>\r\n        <td>Account holder name</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>accountType</code></td>\r\n        <td><a href=\"#4db792ba-b4b2-46d1-9b9b-0c981e2a4ddd\">Bank Account Type</a></td>\r\n        <td>Account type</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "BPAY CRN",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>billerCode</code></td>\r\n        <td>string</td>\r\n        <td>BPAY Biller Code</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>crn</code></td>\r\n        <td>string</td>\r\n        <td>BPAY Unique Customer Reference Number (CRN)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "BPAY CRN Request",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Type</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>reference</code><strong>*</strong></td>\n        <td>string</td>\n        <td>Unique reference for identifying each BPAY CRN assignment request - must be unique across BPay CRNs for your business.</td>\n      </tr>\n      <tr>\n        <td><code>description</code></td>\n        <td>string</td>\n        <td>You can specify a description to describe the purpose of the CRN.</td>\n      </tr>\n  <tr>\n        <td><code>payerReference</code></td>\n        <td>string</td>\n        <td>If you wish to link payments on this CRN to one of your existing Payrix payers you can specify their unique reference here.</td>\n      </tr>\n     <tr>\n        <td><code>invoiceType</code></td>\n        <td><a href=\"#821acfa4-fdb4-4552-8996-55cf034f4c23\">BPAY Invoice Type</a></td>\n        <td>If you want this CRN to be able to be used to pay invoices from one of the accounting systems Payrix is integrated with, your can set the accounting system here (Possible values: XERO, SALESFORCE). If used you must specify values for <code>invoiceId</code> and <code>invoiceReference</code>.</td>\n      </tr>\n         <tr>\n        <td><code>invoiceId</code><strong>^</strong></td>\n        <td>string</td>\n        <td>Required when using an <code>invoiceType</code> - this must be set to the acocunting system's unique reference/id for a single invoice to allow that invoice to be paid using the new CRN.  Our software will update the invoice in your accounting system by linking on this ID.</td>\n      </tr>\n<tr>\n    <td><code>invoiceReference</code><strong>^</strong></td>\n        <td>string</td>\n        <td>Required when using an <code>invoiceType</code> - this is a reference you can set to identify the invoice being paid within your systems.  It does not have to be unique or match an ID from your accounting system.</td>\n      </tr>\n      <tr>\n        <td><code>restrictToAmount</code></td>\n        <td>decimal</td>\n        <td><i>iCRNs Only</i> - if your account is enabled for iCRN (intelligent CRN) generation, you can specify an amount of money to restrict payments on the CRN too. The customer will not be allowed to make a BPAY payment for any other amount using this CRN.</td>\n      </tr>\n          <tr>\n        <td><code>restrictToDueDate</code></td>\n        <td>Date</td>\n        <td><i>iCRNs Only</i> - if your account is enabled for iCRN (intelligent CRN) generation, you can specify a due date so that customers will only be allowed to make BPAY payments on this CRN on or before the specified date. Maximum 365 days in the future from today.</td>\n      </tr>\n<tr>\n        <td><code>audit</code></td>\n        <td><a href=\"#9e1c7bdd-f4ee-45aa-9f61-c9f1694fc73c\">Audit</a></td>\n        <td>Can be used to provide tracking information of the user of your system who is performing the action</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n__*__ Required\n\n__^__ Conditional",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "BPAY CRN Search",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Type</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n    <tr>\n\t\t<td><code>business</code></td>\n\t\t<td><a href=\"#800f872a-ae86-4d33-a5cd-d35a3784e15b\">Business</a></td>\n\t\t<td>Info of the business the BPAY CRN is attached to.</td>\n\t</tr>\n\t<tr>\n\t\t<td><code>billerCode</code></td>\n\t\t<td>string</td>\n\t\t<td>BPAY Biller Code</td>\n\t</tr>\n\t<tr>\n\t\t<td><code>CRN</code></td>\n\t\t<td>string</td>\n\t\t<td>BPAY Unique Customer Reference Number (CRN)</td>\n\t</tr>\n\t<tr>\n\t\t<td><code>reference</code></td>\n\t\t<td>string</td>\n\t\t<td>Unique reference for identifying the BPAY CRN assignment request.</td>\n\t</tr>\n\t<tr>\n\t\t<td><code>description</code></td>\n\t\t<td>string</td>\n\t\t<td>Description of the purpose of the CRN.</td>\n\t</tr>\n\t<tr>\n\t\t<td><code>invoiceType</code></td>\n\t\t<td><a href=\"#821acfa4-fdb4-4552-8996-55cf034f4c23\">BPAY Invoice Type</a></td>\n\t\t<td>If this CRN was generated for the purpose of paying an invoice from one of the accounting systems Payrix is integrated with, this contains the name of the system.</td>\n\t</tr>\n\t<tr>\n\t\t<td><code>invoiceId</code></td>\n\t\t<td>string</td>\n\t\t<td>For CRNs with an <code>invoiceType</code>, this is set to the acocunting system's unique reference/id for a single invoice to allow that invoice to be paid using the new CRN.  Our software will update the invoice in your accounting system by linking on this ID.</td>\n\t</tr>\n\t<tr>\n\t\t<td><code>invoiceReference</code></td>\n\t\t<td>string</td>\n\t\t<td>For CRNs with an <code>invoiceType</code>, this is the reference to identify the invoice being paid within your systems.  It does not have to be unique or match an ID from your accounting system.</td>\n\t</tr>\n\t<tr>\n\t\t<td><code>restrictToAmount</code></td>\n\t\t<td>decimal</td>\n\t\t<td><i>iCRNs Only</i> - the amount the iCRN was restricted to. The customer will not be allowed to make a BPAY payment for any other amount using this CRN.</td>\n\t</tr>\n\t<tr>\n\t\t<td><code>restrictToDueDate</code></td>\n\t\t<td>Date</td>\n\t\t<td><i>iCRNs Only</i> - the due date the iCRN was restricted to.  Customers will only be allowed to make BPAY payments on this CRN on or before the specified date.</td>\n\t</tr>\n\t<tr>\n\t\t<td><code>payer</code></td>\n\t\t<td><a href=\"#02567e2e-9b6a-43a6-83c5-870526bf7646\">Payer Basic Info</a></td>\n\t\t<td>If the CRN was assigned to one of your existings payers, this will contain details of the payer.</td>\n\t</tr>\n\t<tr>\n\t\t<td><code>assignedTime</code></td>\n\t\t<td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">Date/Time</a></td>\n\t\t<td>Date/time that the BPAY CRN was generated and assigned.</td>\n\t</tr>\n\t<tr>\n\t\t<td><code>assignedType</code></td>\n\t\t<td><a href=\"#30593871-4d84-40ab-bfe1-3967be71c81e\">BPAY Assignment Type</a></td>\n\t\t<td>Type/method of CRN assignment.</td>\n\t</tr>\n\t<tr>\n\t\t<td><code>assignedVia</code></td>\n\t\t<td>string</td>\n\t\t<td>Description of the system/method by which the BPAY CRN was generated and assigned.</td>\n\t</tr>\n    </tbody>\n  </table>\n</div>",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Browser Info",
					"item": [],
					"description": "<em>3-D Secure Only</em> - When using 3-D Secure, in order for the card's issuing bank to provide a challenge UI to your customer that is rendered appropriately for the device that your customer is using, the 3-D Secure system requires you to collect and pass-through information on the following information about the browser that your customer is using.\n\n\n<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Type</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n<tr>\n\t<td><code>UserAgent</code></td>\n\t<td>string</td>\n\t<td>The value of the <em>\"user-agent\"</em> HTTP header.</td>\n</tr>\n<tr>\n\t<td><code>AcceptHeader</code></td>\n\t<td>string</td>\n\t<td>The value of the <em>\"accept\"</em> HTTP header.</td>\n</tr>\n<tr>\n\t<td><code>Language</code></td>\n\t<td>string</td>\n\t<td>Name of the browser language as defined in IETF BCP47.\n\nCan be obtained from the <em>\"navigator.language\"</em> javascript property.</td>\n</tr>\n<tr>\n\t<td><code>TimeZone</code></td>\n\t<td>string</td>\n\t<td>Defined as the number of minutes between UTC Time and cardholder's browser local time.\n\nCan be obtained from the <em>\"new Date().getTimezoneOffset();\"</em> javascript function.</td>\n</tr>\n<tr>\n\t<td><code>ColorDepth</code></td>\n\t<td>int</td>\n\t<td>The bit depth of the colour palette for displaying images, in bits per pixel.\n\nCan be obtained from the <em>\"screen.colorDepth\"</em> javascript property.</td>\n</tr>\n<tr>\n\t<td><code>ScreenHeight</code></td>\n\t<td>int</td>\n\t<td>Total height of the Cardholder‚Äôs screen in pixels.\n\nCan be obtained from the <em>\"screen.height\"</em> javascript property.</td>\n</tr>\n<tr>\n\t<td><code>ScreenWidth</code></td>\n\t<td>int</td>\n\t<td>Total width of the cardholder‚Äôs screen in pixels.\n\nCan be obtained from the <em>\"screen.width\"</em> javascript property.</td>\n</tr>\n<tr>\n\t<td><code>JavaEnabled</code></td>\n\t<td>boolean</td>\n\t<td>Whether for not the cardholder's browser is able to execute Java.\n\nCan be obtained from the <em>\"navigator.javaEnabled\"</em> javascript property.</td>\n</tr>\n    </tbody>\n  </table>\n</div>"
				},
				{
					"name": "Business Info",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>businessId</code></td>\r\n        <td>string</td>\r\n        <td>ID of the associated business</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>businessName</code></td>\r\n        <td>string</td>\r\n        <td>Name of the associated business</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Business Details",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>businessId</code></td>\r\n        <td>string</td>\r\n        <td>ID of the associated business</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>businessName</code></td>\r\n        <td>string</td>\r\n        <td>Name of the associated business</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>status</code></td>\r\n        <td><a href=\"#ae18df06-8bb4-488a-839b-ab0dfb72b30d\">Business Status</a></td>\r\n        <td>Current status of the business</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>businessKey / GUID </code></td>\r\n        <td>string</td>\r\n        <td>GUID that identifies your business which is used for some of our hosted payment services</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Card",
					"item": [],
					"description": "<p><br><br></p><p><br><br><br></p><p><br><br></p><table><tbody><tr><th>Property</th><th>Type</th><th>Description</th></tr><tr><td><code>cardNumber</code><b>\\*</b></td><td>integer(14,16)</td><td>Full card number (PAN) - numbers only, no spaces</td></tr><tr><td><code>cardholderName</code><b>\\*</b></td><td>string(3,50)</td><td>Name of the cardholder as shown on the card</td></tr><tr><td><code>expiryYear</code><b>\\*</b></td><td>integer(4)</td><td>Year of the card's expiry date, from 2010 to 2070</td></tr><tr><td><code>expiryMonth</code><b>\\*</b></td><td>integer(1,2)</td><td>Month of the card's expiry date, from 1 to 12, no leading 0s.</td></tr><tr><td><code>ccv</code><b>\\*</b></td><td>string(3,4)</td><td>CCV/CVV number on the card (3 or 4 digit number)</td></tr><tr><td><code>audit</code></td><td><a href=\"#9e1c7bdd-f4ee-45aa-9f61-c9f1694fc73c\">Audit</a></td><td>Can be used to provide tracking information of the user of your system who is performing the action</td></tr></tbody></table>\n\n\\* Required",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Card Bin",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Type</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>cardBin</code></td>\n        <td>integer(6)</td>\n        <td>The 6-digit card BIN number that you searched for</td>\n      </tr>\n      <tr>\n        <td><code>countryID</code></td>\n        <td>string</td>\n        <td>3-digit ISO country code for the country in which the card was issued</td>\n      </tr>\n      <tr>\n        <td><code>cardBrand</code></td>\n        <td><a href=\"#f1137925-1203-43b7-b20f-4ebcf0cee82f\">Card Brand</a></td>\n        <td>Will be one of the card brand eg: VISA, MASTERCARD, AMERICAN EXPRESS etc</td>\n      </tr>\n      <tr>\n        <td><code>cardType</code></td>\n        <td>String</td>\n        <td>Credit / Debit etc</td>\n      </tr>\n      <tr>\n        <td><code>cardCategory</code></td>\n        <td>string</td>\n        <td>Will contain a description if the bank has registered this card for a specific purpose</td>\n      </tr>\n      <tr>\n        <td><code>bank</code></td>\n        <td>string</td>\n        <td>The name of the bank through which the card was issued</td>\n      </tr>\n    </tbody>\n  </table>\n</div>",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Card Search",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>cardNumber</code></td>\r\n        <td>string</td>\r\n        <td>Card number (PAN) - first 6 and last 4 digits only (rest masked with 'x')</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>cardholderName</code></td>\r\n        <td>string</td>\r\n        <td>Cardholder's name</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>cardExpires</code></td>\r\n        <td>date</td>\r\n        <td>Card expiry date</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>cardType</code></td>\r\n        <td><a href=\"#f1137925-1203-43b7-b20f-4ebcf0cee82f\">Card Type</a></td>\r\n        <td>Type/issuer of card</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Card Transaction",
					"item": [],
					"description": "<table><tbody><tr><th>Property</th><th>Type</th><th>Description</th></tr><tr><td><div><code>processType</code><b>\\\\\\*</b></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><a href=\"#f73a0e2f-1664-4b80-9199-dd6edd93f667\" target=\"_self\" url=\"#f73a0e2f-1664-4b80-9199-dd6edd93f667\">Card Transaction Process Type</a></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>How the transaction is to be processed</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>reference</code><b>\\\\\\*</b></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>string(100)</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>Unique reference you provide to identify the transaction (must be unique across all your transactions)</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>amount</code><b>\\\\\\*</b></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>decimal</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>Amount of the transaction (include decimal point for currencies with cents)</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>description</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>string (128)</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>You can provide additional information to describe the transaction</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>source</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>string</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>This is used only for special case scenarios - Payrix will inform you if your business needs to provide anything for this field.</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>card</code><b>\\\\\\*</b></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><a href=\"#4fbcd7c2-8508-46fa-8b96-c978a29deac2\" target=\"_self\" url=\"#4fbcd7c2-8508-46fa-8b96-c978a29deac2\">Card</a><a href=\"https://null\" target=\"_blank\" url=\"https://null\"></a></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>Details of the credit card being charged.</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>payer</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><a href=\"#40065eff-57dd-4393-9cba-b349cf2fac76\" target=\"_self\" url=\"#40065eff-57dd-4393-9cba-b349cf2fac76\">Card Transaction Payer</a></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>Details of the payer/customer making the transaction. PLEASE NOTE: It is recommended that you pass through as many of the details of the payer that you have for the purposes of reducing the risk of fraud and chargebacks.</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>audit</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><a href=\"#9e1c7bdd-f4ee-45aa-9f61-c9f1694fc73c\" target=\"_self\" url=\"#9e1c7bdd-f4ee-45aa-9f61-c9f1694fc73c\">Audit</a></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>Can be used to provide tracking information of the user of your system who is performing the action</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>callbackUrl</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>URL</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><i>3-D Secure Only</i> - if you are using 3-D Secure, you need to supply a URL to which your customer will be redirected back to if they where required to perform a challenge verification (<a href=\"#faff43cd-5e44-471c-ad23-64a1fd28f90f\" target=\"_self\" url=\"#faff43cd-5e44-471c-ad23-64a1fd28f90f\">see here</a>)</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>browserInfo</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><a href=\"#b71b2258-d074-4ca9-8e8c-11c00e56c15c\" target=\"_self\" url=\"#b71b2258-d074-4ca9-8e8c-11c00e56c15c\">BrowserInfo</a></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><i>3-D Secure Only</i> - if you are using 3-D Secure, in order for the card‚Äôs issuing bank to provide a challenge UI to your customer that is rendered appropriately for the device that your customer is using, the 3-D Secure system requires you to collect and pass-through information on the configuration of the browser that your customer is using (<a href=\"#faff43cd-5e44-471c-ad23-64a1fd28f90f\" target=\"_self\" url=\"#faff43cd-5e44-471c-ad23-64a1fd28f90f\">see here</a>)</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>recurringReference</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>string(100)</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><p><a href=\"#eec38929-7677-459c-81db-707dfe64e3bf\" target=\"_self\" url=\"#eec38929-7677-459c-81db-707dfe64e3bf\"><i>CIT/MIT Field</i></a>- Relevant only when you are going to be processing ongoing payments on the stored card, this is some sort of reference or ID from your system that identifies whatever person, entity or contract for which you are going to process ongoing payments.<br><br></p><p>Whereby the ‚ÄúTransactionReference‚Äù field uniquely identifies each individual transaction you are processing, the ‚ÄúRecurringReference‚Äù field is intending to uniquely identify that which a set of going transactions is being processed for.</p></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>cardStorageType</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><a href=\"#72e87212-12d8-400c-9ad9-864714110469\" target=\"_self\" url=\"#72e87212-12d8-400c-9ad9-864714110469\">CardStorageType</a></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><a href=\"#eec38929-7677-459c-81db-707dfe64e3bf\" target=\"_self\" url=\"#eec38929-7677-459c-81db-707dfe64e3bf\"><i>CIT/MIT Field</i></a>- Used to specify if you are storing the card you are providing, and whether or not it is a customer initiated transaction (CIT) or a merchant initiated transaction (MIT).</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>cardAuthorizationType</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><a href=\"#695e8363-6451-4d97-8ef3-ba35f0e67a95\" target=\"_self\" url=\"#695e8363-6451-4d97-8ef3-ba35f0e67a95\">CardAuthorizationType</a></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><a href=\"#eec38929-7677-459c-81db-707dfe64e3bf\" target=\"_self\" url=\"#eec38929-7677-459c-81db-707dfe64e3bf\"><i>CIT/MIT Field</i></a>- Used to specify the nature of the authorization.</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>cardAuthorizationReference</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>string (100)</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><a href=\"#eec38929-7677-459c-81db-707dfe64e3bf\" target=\"_self\" url=\"#eec38929-7677-459c-81db-707dfe64e3bf\"><i>CIT/MIT Field</i></a>- This is a reference that you provide each time you process a subsequent transaction on a stored card. You will receive this value as part of the result of the successful processing of the initial transaction on a newly stored card.</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>profile</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>integer (must be 1, 2)</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>For use with businesses using fee profiling functions to specify which fee set they wish to be charged for this transaction.</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>use3ds</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>boolean</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>If your business has been enabled for optional 3-D Secure useage, you can set this field to true to trigger the 3-D Secure authentication process when the transaction is submitted. When using this field you will be required to provided all the 3-D Secure related fields above (namely \"callbackUrl\", \"browserInfo\" and \"payer.email\").</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>threeDSecureResult</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><a href=\"#ab12abbb-2ef1-4468-9af5-89581ac0ab96\" target=\"_self\" url=\"#ab12abbb-2ef1-4468-9af5-89581ac0ab96\">3-D Secure Authorization Info</a></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>If your business has been enabled for self-serve 3-D Secure via an external MPI, once you have completed a successful 3-D Secure authorization from within your systems, you can provide all the results of the authentication through this field.</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr></tbody></table>\n\n\\* Required",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Card Transaction Payer",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>uniqueReference</code></td>\r\n        <td>string</td>\r\n        <td>Unique reference to identify the payer within your systems (only required if saving the payer)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>groupReference</code></td>\r\n        <td>string</td>\r\n        <td>A secondary reference to identify the payer within your systems that doesn't need to be unique (only required if saving the payer)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>familyOrBusinessName</code></td>\r\n        <td>string</td>\r\n        <td>Family/last name or business name of the payer</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>givenName</code></td>\r\n        <td>string</td>\r\n        <td>Given/first name of the payer</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>billingAddress</code></td>\r\n        <td><a href=\"#20abc30f-bdd5-41d0-bbb3-24673442e432\">Address</a></td>\r\n        <td>Billing address of the payer</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>email</code></td>\r\n        <td><a href=\"#918cc722-4378-4cce-8997-8e14a8378e55\">Email Address</a></td>\r\n        <td>Email address of the payer</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>phone</code></td>\r\n        <td><a href=\"#e90f5f16-06a6-42b7-9c90-044a8ca5bbbc\">Phone number</a></td>\r\n        <td>Phone number of the payer</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>savePayer</code></td>\r\n        <td>boolean</td>\r\n        <td>If your account is enabled for payer storage can choose to save the payer for future payments (charges may apply)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Transaction Update",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>reference</code><strong>*</strong></td>\r\n        <td>string(100)</td>\r\n        <td>Unique transaction reference to identify the transaction update in your system</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>description</code></td>\r\n        <td>string (128)</td>\r\n        <td>You can provide extra information to describe the reason for the update</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>amount</code></td>\r\n        <td>decimal</td>\r\n        <td>Amount to be applied to the transaction.  If not provided the full amount of the transaction will be applied. <i>Please Note: For reversals the amount is ignored.</i></td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>audit</code></td>\r\n        <td><a href=\"#9e1c7bdd-f4ee-45aa-9f61-c9f1694fc73c\">Audit</a></td>\r\n        <td>Can be used to provide tracking information of the user of your system who is performing the action</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n__*__ Required\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Card Token",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>token</code></td>\r\n        <td>string</td>\r\n        <td>Token that card be used in place of credit card details</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Card Payer Account Token",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>CardToken</code></td>\r\n        <td>string</td>\r\n        <td>The Token you receive when the payment details form that you have wired-up with our JavaScript library is posted-back to your server.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>audit</code></td>\r\n        <td><a href=\"#9e1c7bdd-f4ee-45aa-9f61-c9f1694fc73c\">Audit</a></td>\r\n        <td>Optional information to allow you to audit the use of your data.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Error",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>errorCode</code></td>\r\n        <td><a href=\"#ce918f92-0978-4a99-8b10-a56f87034da5\">Error Code</a></td>\r\n        <td>Code, number, or name identifier for the type of error (can be used for programmatic parsing and usage)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>errorMessage</code></td>\r\n        <td>string</td>\r\n        <td>Human readable message describing the error (should never be used programmatically)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>errorDetail</code></td>\r\n        <td>string</td>\r\n        <td>Some types of errors may contain additional data that is relevant to the issue</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Fraud Check",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>token</code><strong>*</strong></td>\r\n        <td>string</td>\r\n        <td>The token you received for a card you previously tokenzied using our JavaScript services</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>sessionId</code><strong>*</strong></td>\r\n        <td>string(10,32)</td>\r\n        <td>A globally unique ID which identifies the session of your user. must be between 10 and 32 characters, contain no spaces, and contain no symbols expect - and _. It is recommended that you use a GUID with the \"-\" removed, or used your web server's session id. This id must be the same as the session ID your provided to the JavaScript Fraud Data Collector (see our Fraud Management Guide for more information on this).</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>transactionAmount</code><strong>*</strong></td>\r\n        <td>decimal</td>\r\n        <td>The transaction amount that you intend to process</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>ipAddress</code><strong>*</strong></td>\r\n        <td>string</td>\r\n        <td>The IP Address of your customer/user</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>payer</code><strong>*</strong></td>\r\n        <td><a href=\"#1836a637-8184-45fb-8f92-80361bb62604\">Fraud Check Payer</a></td>\r\n        <td>Information you have gathered about your customer.  A minimum of the email address is required.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>airlineInfo</code></td>\r\n        <td><a href=\"#d9749cc5-0db4-4b2f-a162-450d4e9f5d56\">Fraud Check Airline Info</a></td>\r\n        <td>If you are processing airline tickets you need to specify these details.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>hotelInfo</code></td>\r\n        <td><a href=\"#b1f56a2d-1bfc-429d-9633-bc6766f9aa28\">Fraud Check Hotel Info</a></td>\r\n        <td>If you are processing a hotel booking you need to specify these details.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>callbackUrl</code></td>\r\n        <td>url</td>\r\n        <td>In case the risk of the transaction necessitates the use of 3-D Secure, you need to specify the URL within your website that your customer will be redirected back to once they have completed the 3-D Secure process.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>audit</code></td>\r\n        <td><a href=\"#9e1c7bdd-f4ee-45aa-9f61-c9f1694fc73c\">Audit</a></td>\r\n        <td>Can be used to provide tracking information of the user of your system who is performing the action</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n__*__ Required\r\n\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Fraud Check Payer",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>familyOrBusinessName</code></td>\r\n        <td>string</td>\r\n        <td>Family/last name or business name of the payer</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>givenName</code></td>\r\n        <td>string</td>\r\n        <td>Given/first name of the payer</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>billingAddress</code></td>\r\n        <td><a href=\"#20abc30f-bdd5-41d0-bbb3-24673442e432\">Address</a></td>\r\n        <td>Billing address of the payer</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>email</code><strong>*</strong></td>\r\n        <td><a href=\"#918cc722-4378-4cce-8997-8e14a8378e55\">Email Address</a></td>\r\n        <td>Email address of the payer</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>phone</code></td>\r\n        <td><a href=\"#e90f5f16-06a6-42b7-9c90-044a8ca5bbbc\">Phone Number</a></td>\r\n        <td>Phone number of the payer</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n__*__ Required\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Fraud Check Result",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>result</code></td>\r\n        <td><a href=\"#2d471978-1a7b-44f5-bdd7-b05b04b8a21d\">Fraud Check Result</a></td>\r\n        <td>The result of our evaluation of the risk of the transaction, and instructions for next step if applicable</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>resultMessage</code></td>\r\n        <td>string</td>\r\n        <td>A human readable description of the result of the fraud check (not intended for programmatic passing)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>redirectUrl</code></td>\r\n        <td>string</td>\r\n        <td>If the Result specifies that 3-D Secure should be used, this is the URL you need to redirect your customer to.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Fraud Check Airline Info",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>carrier</code><strong>*</strong></td>\r\n        <td>string</td>\r\n        <td>The carrier selling the ticket</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>flightCode</code><strong>*</strong></td>\r\n        <td>string</td>\r\n        <td>Airline code/number of the flight being purchased</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>flightDate</code><strong>*</strong></td>\r\n        <td>DateTime</td>\r\n        <td>The date on which the flight is departing</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>isReturnTicket</code><strong>*</strong></td>\r\n        <td>boolean</td>\r\n        <td>Whether or not a return ticket is being purchased</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>origin</code><strong>*</strong></td>\r\n        <td>string</td>\r\n        <td>Country or Airport of origin of the flight (2 or 3-letter ISO country code or 3-letter IATA airport code)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>destinations</code><strong>*</strong></td>\r\n        <td>string</td>\r\n        <td>Comma separated list of destination countries or airports of the flight (2-letter or 3-letter ISO country codes or 3-letter IATA airport codes)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n__*__ Required\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Fraud Check Hotel Info",
					"item": [],
					"description": "If you are running for fraud check for processing hotel reservations you need to specify these details.\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>guestName</code><strong>*</strong></td>\r\n        <td>string</td>\r\n        <td>Full name of the primary guest</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>guestCountryOfResidence</code><strong>*</strong></td>\r\n        <td>string</td>\r\n        <td>Country of residence of the primary guest (2-letter or 3-letter ISO country code)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>guestNationality</code><strong>*</strong></td>\r\n        <td>string</td>\r\n        <td>Nationality of the primary guest</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>numberOfGuests</code><strong>*</strong></td>\r\n        <td>integer</td>\r\n        <td>Number of guests the booking is for</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>durationOfStay</code><strong>*</strong></td>\r\n        <td>integer</td>\r\n        <td>Number of days being booked</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>checkInDateTime</code><strong>*</strong></td>\r\n        <td>DateTime</td>\r\n        <td>Date/time of check-in</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>hotelName</code><strong>*</strong></td>\r\n        <td>string</td>\r\n        <td>Name of the hotel the booking is for</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>hotelCity</code><strong>*</strong></td>\r\n        <td>string</td>\r\n        <td>City in which the hotel is located</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>hotelCountry</code><strong>*</strong></td>\r\n        <td>string</td>\r\n        <td>Country in which the hotel is located (2-letter or 3-letter ISO country code)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>hotelRoomType</code><strong>*</strong></td>\r\n        <td>string</td>\r\n        <td>Name/description of the type of room being booked</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n__*__ Required\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Invoice Input",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Type</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>invoiceId</code></td>\n        <td>guid</td>\n        <td>An optional GUID that uniquely identifies the invoice. If this value is not specified, a new GUID will be assigned to the invoice automatically.</td>\n      </tr>\n      <tr>\n        <td><code>originalInvoiceId</code></td>\n        <td>guid</td>\n        <td>An optional GUID that uniquely identifies the original invoice that was the basis for the current invoice. If specified, this must match the <code>invoiceId</code> of an existing invoice.</td>\n      </tr>\n      <tr>\n        <td><code>invoiceNumber</code><strong>*</strong></td>\n        <td>string(100)</td>\n        <td>The invoice number. It is suggested, but not required, that this is a unique identifier.</td>\n      </tr>\n      <tr>\n        <td><code>orderNumber</code></td>\n        <td>string(100)</td>\n        <td>An optional purchase order number or other identifier provided by the purchaser.</td>\n      </tr>\n      <tr>\n        <td><code>date</code><strong>*</strong></td>\n        <td>date</td>\n        <td>The date the invoice was issued.</td>\n      </tr>\n      <tr>\n        <td><code>dueDate</code><strong>*</strong></td>\n        <td>date</td>\n        <td>The date payment for the invoice is due.</td>\n      </tr>\n      <tr>\n        <td><code>lines</code><strong>*</strong></td>\n        <td>Collection(string)</td>\n        <td>The invoice line items, notes, and/or other information to display.</td>\n      </tr>\n      <tr>\n        <td><code>amount</code><strong>*</strong></td>\n        <td>decimal</td>\n        <td>The total amount payable, excluding Payrix-generated payer-paid fees.</td>\n      </tr>\n      <tr>\n        <td><code>url</code></td>\n        <td>string</td>\n        <td>An optional URL to your original invoice document.</td>\n      </tr>\n      <tr>\n        <td><code>payer</code><strong>*</strong></td>\n        <td><a href=\"#4be306e7-259c-4bae-a079-641ae9efd467\">Invoice Payer</a></td>\n        <td>The payer data required to create the invoice.</td>\n      </tr>\n      <tr>\n        <td><code>audit</code></td>\n        <td><a href=\"#9e1c7bdd-f4ee-45aa-9f61-c9f1694fc73c\">Audit</a></td>\n        <td>Optional information to allow you to audit the use of your data.</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n__*__ Required",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Invoice Payer",
					"item": [],
					"description": "| Property | Type | Description |\n| --- | --- | --- |\n| `uniqueReference`\\* | string(100) | A unique reference that identifies an existing payer. If specified, this value is the reference you provided when the existing payer was created, not a Payrix identifier. |\n| `familyOrBusinessName`** | string(50) | The family name of the payer, if the payer is a person; otherwise, the business name of the payer. |\n| `givenName` | string(50) | The given name of the payer, if the payer is a person; otherwise, do not specify this value. |\n| `email`** | [Email Address](#918cc722-4378-4cce-8997-8e14a8378e55) | The email address of the payer. |\n| `phone` | [Phone Number](#e90f5f16-06a6-42b7-9c90-044a8ca5bbbc) | The non-mobile phone number of the payer. |\n| `mobile` | [Phone Number](#e90f5f16-06a6-42b7-9c90-044a8ca5bbbc) | The mobile phone number of the payer. |\n| `billingAddress` | [Address](#20abc30f-bdd5-41d0-bbb3-24673442e432) | Billing address of the payer |\n\n\\* Required (and permitted only) if all other values are omitted.\n\n** Required if `uniqueReference` is not specified.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Invoice Search",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Type</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>invoiceId</code></td>\n        <td>guid</td>\n        <td>The GUID that uniquely identifies the invoice.</td>\n      </tr>\n      <tr>\n        <td><code>originalInvoiceId</code></td>\n        <td>guid</td>\n        <td>The optional GUID that uniquely identifies the original invoice that was the basis for the current invoice.</td>\n      </tr>\n      <tr>\n        <td><code>invoiceNumber</code></td>\n        <td>string(100)</td>\n        <td>The invoice number.</td>\n      </tr>\n      <tr>\n        <td><code>orderNumber</code></td>\n        <td>string(100)</td>\n        <td>The purchase order number or other identifier provided by the purchaser.</td>\n      </tr>\n      <tr>\n        <td><code>date</code></td>\n        <td>date</td>\n        <td>The date the invoice was issued.</td>\n      </tr>\n      <tr>\n        <td><code>dueDate</code></td>\n        <td>date</td>\n        <td>The date payment for the invoice is due.</td>\n      </tr>\n      <tr>\n        <td><code>lines</code></td>\n        <td>Collection(string)</td>\n        <td>The invoice line items, notes, and/or other information to display.</td>\n      </tr>\n      <tr>\n        <td><code>amount</code></td>\n        <td>decimal</td>\n        <td>The total amount payable, excluding Payrix-generated payer-paid fees.</td>\n      </tr>\n      <tr>\n        <td><code>url</code></td>\n        <td>string</td>\n        <td>The optional URL to your original invoice document.</td>\n      </tr>\n      <tr>\n        <td><code>payer</code></td>\n        <td><a href=\"#4be306e7-259c-4bae-a079-641ae9efd467\">Invoice Payer</a></td>\n        <td>The payer data for the invoice.</td>\n      </tr>\n      <tr>\n        <td><code>invoiceStatus</code></td>\n        <td><a href=\"#2746d588-2895-4825-81a3-5f89408a5799\">Invoice Status</a></td>\n        <td>The invoice status.</td>\n      </tr>\n      <tr>\n        <td><code>transactionId</code></td>\n        <td>int</td>\n        <td>If paid, the unique identifier of the successful transaction used to pay the invoice. This is an Payrix-specific identifier, not a reference provided by you.</td>\n      </tr>\n      <tr>\n        <td><code>events</code></td>\n        <td><a href=\"#5250f733-1db2-4cd6-9072-ad84c58639c1\">Invoice Event</a></td>\n        <td>Events associated with the invoice.</td>\n      </tr>\n    </tbody>\n  </table>\n</div>",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Invoice Void",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>audit</code></td>\r\n        <td><a href=\"#9e1c7bdd-f4ee-45aa-9f61-c9f1694fc73c\">Audit</a></td>\r\n        <td>Optional information to allow you to audit the use of your data.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Payer",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business</code></td>\r\n        <td><a href=\"#800f872a-ae86-4d33-a5cd-d35a3784e15b\">Business Info</a></td>\r\n        <td>Info of the business the payer is attached to.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>payerId</code></td>\r\n        <td>string</td>\r\n        <td>Our unique payer identifier.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>status</code></td>\r\n        <td><a href=\"#e3ac32c2-93fa-4d67-b922-ced05cfbc74d\">Payer Status</a></td>\r\n        <td>Overall current processing status of the payer (see the \"StatusCode\" field for more information on the payer status).</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>statusCode</code></td>\r\n        <td>string</td>\r\n        <td>Code for the current processing status of the payer.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>statusDescription</code></td>\r\n        <td>string</td>\r\n        <td>Human readable description of the meaning of the StatusCode.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>statusChangeDate</code></td>\r\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">DateTime</a></td>\r\n        <td>Date/Time on which the last change of status occured to the payer.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>createdTime</code></td>\r\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">DateTime</a></td>\r\n        <td>Date/Time when the payer was first added to the system.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>schedule</code></td>\r\n        <td><a href=\"#abdeeb98-86ba-4952-aac1-e20d08ca581e\">Payer Schedule Info</a></td>\r\n        <td>If the payer has a payment schedule generated for them this will contain the details of the schedule.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>audit</code></td>\r\n        <td><a href=\"#9e1c7bdd-f4ee-45aa-9f61-c9f1694fc73c\">Audit</a></td>\r\n        <td>Can be used to provide tracking information of the user of your system who is performing the action</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Payer Basic Info",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>payerId</code></td>\r\n        <td>string</td>\r\n        <td>Our unique payer identifier</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>uniqueReference</code></td>\r\n        <td>string</td>\r\n        <td>Unique reference that you provided to identify the payer within your systems</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>groupReference</code></td>\r\n        <td>string</td>\r\n        <td>Optional secondary reference to identify the payer within your systems that doesn't need to be unique (e.g. it can be used as a grouping reference for related payers)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>familyOrBusinessName</code></td>\r\n        <td>string</td>\r\n        <td>Family/last name or business name of the payer</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>givenName</code></td>\r\n        <td>string</td>\r\n        <td>Given/first name of the payer</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>status</code></td>\r\n        <td><a href=\"#e3ac32c2-93fa-4d67-b922-ced05cfbc74d\">Payer Status</a></td>\r\n        <td>Overall current processing status of the payer. The \"StatusCode\" field for more information on the payer status.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Payer Change Status",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>newStatus</code><strong>*</strong></td>\r\n        <td><a href=\"#6d811dac-3457-4e4f-bbd9-6d356105d94b\">Payer Change Status</a></td>\r\n        <td>Code for the status that you want to change the payer to.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>newStatusChangeDate</code></td>\r\n        <td>date</td>\r\n        <td>If you are changing the payer to one of the following statuses you need to provide the date on which with the status change will be triggered: A-UDS = Active - Until Date (Suspend), A-UDC = Active - Until Date (Cancel) , S-DTE = Suspend - Until Date</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>audit</code></td>\r\n        <td><a href=\"#9e1c7bdd-f4ee-45aa-9f61-c9f1694fc73c\">Audit</a></td>\r\n        <td>Can be used to provide tracking information of the user of your system who is performing the action</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n__*__ Required\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Payer Extra Info",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>xeroAutoDebitEnabled</code></td>\r\n        <td>boolean</td>\r\n        <td>Set to <code>true</code> if new Xero invoices for this payer should be automatically collected by scheduled debit (only usable if your business is set up with Xero integration).</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Payer ID",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Type</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>payerId</code></td>\n        <td>string</td>\n        <td>Payrix's unique payer identifier</td>\n      </tr>\n      <tr>\n        <td><code>uniqueReference</code></td>\n        <td>string</td>\n        <td>Unique reference that you provided to identify the payer within your systems</td>\n      </tr>\n    </tbody>\n  </table>\n</div>",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Payer Input",
					"item": [],
					"description": "| Property | Type | Description |\n| --- | --- | --- |\n| `uniqueReference`\\* | string(100) | Unique reference that identifies the payer within your systems. Must be unique within each business. |\n| `groupReference` | string(100) | Optional secondary reference to identify the payer within your systems that doesn't need to be unique (e.g. it can be used as a grouping reference for related payers) |\n| `familyOrBusinessName`\\* | string(50) | Family/last name or business name of the payer |\n| `givenName` | string(50) | Given/first name of the payer |\n| `email` | [Email Address](#918cc722-4378-4cce-8997-8e14a8378e55) | Email address of the payer |\n| `phone` | [Phone Number](#e90f5f16-06a6-42b7-9c90-044a8ca5bbbc) | Phone number of the payer |\n| `mobile` | [Phone Number](#e90f5f16-06a6-42b7-9c90-044a8ca5bbbc) | Mobile (cell) phone number of the payer |\n| `address` | [Address](#20abc30f-bdd5-41d0-bbb3-24673442e432) | Address of the payer |\n| `extraInfo` | [Payer Extra Info](#5a05af11-9248-4e71-a40d-65d564c42e08) | Optional additional settings that can be used to define the functions and services used with this payer |\n| `audit` | [Audit](#9e1c7bdd-f4ee-45aa-9f61-c9f1694fc73c) | Can be used to provide tracking information of the user of your system who is performing the action |\n\n\\* Required",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Payer Schedule Info",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>scheduleType</code></td>\r\n        <td><a href=\"#af9e395c-a2a0-49f5-b18d-6c89d227c3f4\">Schedule Type</a></td>\r\n        <td>Type of schedule that was generated</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>frequency</code></td>\r\n        <td><a href=\"#3759751d-f695-463a-b82c-e2520bfdf741\">Schedule Frequency</a></td>\r\n        <td>The frequency with which payments will be debited</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>amount</code></td>\r\n        <td>decimal</td>\r\n        <td>Amount of money that is to be debited for each payment in the schedule</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>frequencyDay</code></td>\r\n        <td>integer</td>\r\n        <td>Particular day on which each payment is to be scheduled relative to the frequency. For <code>WEEKLY</code> or <code>FORTNIGHTLY</code> schedules this is the day of the week (1 = Sunday, 2 = Monday, 3 = Tuesday, 4 = Wednesday, 5 = Thursday, 6 = Friday, 7 = Sunday). For <code>MONTHLY</code> schedules this is the day of the month (1 = 1st of month, 30 = 30th of month etc.)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>limitToTransactionCount</code></td>\r\n        <td>integer</td>\r\n        <td>For <code>LIMITED</code> schedule types only - the total number of payments that are to be debited</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>limitToTransactionAmount</code></td>\r\n        <td>decimal</td>\r\n        <td>For <code>LIMITED</code> schedule types only - total amount of money that is to be collected</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>templateId</code></td>\r\n        <td>string</td>\r\n        <td>If your business is using schedule templates - this is the ID of the template used to generate the schedule</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>templateName</code></td>\r\n        <td>string</td>\r\n        <td>If your business is using schedule templates - this is the name of the template used to generate the schedule</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Payer Search",
					"item": [],
					"description": "  \n  \n\n  \n  \n  \n\n  \n  \n\n| Property | Type | Description |\n| --- | --- | --- |\n| `business` | [Business](#800f872a-ae86-4d33-a5cd-d35a3784e15b) | Info of the business the payer is attached to |\n| `payerId` | string | Our unique payer identifier |\n| `uniqueReference` | string | Unique reference that you provided to identify the payer within your systems |\n| `groupReference` | string | Optional secondary reference to identify the payer within your systems that doesn't need to be unique (e.g. it can be used as a grouping reference for related payers) |\n| `familyOrBusinessName` | string | Family/last name or business name of the payer |\n| `givenName` | string | Given/first name of the payer |\n| `email` | [](#918cc722-4378-4cce-8997-8e14a8378e55)Email Address | Email address of the payer |\n| `phone` | [Phone Number](#e90f5f16-06a6-42b7-9c90-044a8ca5bbbc) | Phone number of the payer |\n| `mobile` | [Phone Number](#e90f5f16-06a6-42b7-9c90-044a8ca5bbbc) | Mobile (cell) phone number of the payer |\n| `address` | [](#20abc30f-bdd5-41d0-bbb3-24673442e432)Address | Address of the payer |\n| `extraInfo` | [Payer Extra Info](#5a05af11-9248-4e71-a40d-65d564c42e08) | Optional additional settings that can be used to define the funtions and services used with this payer |\n| `status` | [Payer Status](#e3ac32c2-93fa-4d67-b922-ced05cfbc74d) | Overall current processing status of the payer. The \"StatusCode\" field for more information on the payer status |\n| `statusCode` | [Payer Status Code](#1356883b-008e-4390-a72f-772264ff3dd6) | Code for the current processing status of the payer |\n| `statusDescription` | string | Human readable description of the meaning of the `statusCode` |\n| `statusChangeDate` | [DateTime](#12bbff50-aa66-440d-9af8-ec9c8b608fb0) | Date/Time on which the last change of status occured to the payer |\n| `createdTime` | [DateTime](#12bbff50-aa66-440d-9af8-ec9c8b608fb0) | Date/time when the payer was first added to the system |\n| `schedule` | [Payer Schedule](#abdeeb98-86ba-4952-aac1-e20d08ca581e) | If the payer has a payment schedule generated for them this will contain the details of the schedule |",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Point-of-Sale Card",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>maskedCardNumber</code><strong>*</strong></td>\r\n        <td>string(14,16)</td>\r\n        <td>\r\n        Masked number of the card that was processed including the first 6 and last 4 digits of the number (e.g. 411111xxxxxx1234).  The full card number must not be provided here, however the first 6 digits are required in order to determine the BIN of the card for settlement and fee charging\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>cardholderName</code><strong>*</strong></td>\r\n        <td>string(3,50)</td>\r\n        <td>Name of the cardholder as shown on the card</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>expiryYear</code><strong>*</strong></td>\r\n        <td>integer(4)</td>\r\n        <td>Year of the card's expiry date, from 2010 to 2070</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>expiryMonth</code><strong>*</strong></td>\r\n        <td>integer(1,2)</td>\r\n        <td>Month of the card's expiry date, from 1 to 12</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>cardType</code><strong>*</strong></td>\r\n        <td><a href=\"#f1137925-1203-43b7-b20f-4ebcf0cee82f\">Card Type</a></td>\r\n        <td>Type/issuer of the card</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n__*__ Required\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Point-of-Sale Transaction",
					"item": [],
					"description": "  \n  \n\n  \n  \n  \n\n  \n  \n\n| Property | Type | Description |\n| --- | --- | --- |\n| `processType`\\* | [Point-of-Sale Process Type](#500654ee-12a0-450f-8fc1-03813e2742ff) | The type of transaction that was processed |\n| `transactionType`\\* | [Point-of-Sale Transaction Type](#466cd0a7-ce9d-41ab-b506-a19e0ca4d156) | The payment method used for the transaction |\n| `time`\\* | [DateTime](#12bbff50-aa66-440d-9af8-ec9c8b608fb0) | Date/Time when the transaction was processed through your point-of-sale system |\n| `reference`\\* | string(100) | Unique reference you provide to identify the transaction (must be unique across all your transactions).  <br>  <br>  <br>  <br>  <br>PLEASE NOTE: This function performs duplicate detection on the \"Reference\" field - if we already have a transaction recorded with the Refernce you provide, this function will return successful without adding a second transaction or updating the existing transaction. |\n| `previousTransactionReference` | string(100) | For use with the 'REFUND' process type - this must be set to the \"Reference\" you originally provided for the transaction that you now want to refund. |\n| `description` | string(128) | You can provide additional information to describe the transaction here |\n| `amount`\\* | decimal | Amount of the transaction (include decimal point for currencies with cents) |\n| `statusCode`\\* | [Transaction Result Status Code](#0575e464-6926-42d8-9aef-7efb47776a99) | Code for the status of the transaction |\n| `subStatusCode` | [Transaction Sub-Status Code](#b02dad21-6aa7-4876-a2b7-d7c4e2d8226f) | Optional secondary code for the current status of the transaction that can provide more information on that particular status. |\n| `statusDescription` | string | Human readable description of the current status of the transaction |\n| `card` | [Point-of-Sale Card](#f5b2aaa7-6e00-4ff8-8de9-cf2e7036c9b5) | Information on the card processed. \\* Required for 'CARD' transaction types |\n| `payer` | [Card Transaction Payer](#40065eff-57dd-4393-9cba-b349cf2fac76) | Details of the payer/customer who made the transaction |\n| `settlementDate` | [DateTime](#12bbff50-aa66-440d-9af8-ec9c8b608fb0) | If your point-of-sale system provides the date on which funds for the transaction will be deposited, you can specify it here. |\n| `bankReference` | string(100) | The transaction reference provided to you from the bank/gateway that processed the transaction |\n| `terminalId` | string(100) | ID/Reference of the point-of-sale terminal used to process the transaction |\n| `merchantId` | string(100) | ID/Reference of the merchant being processed through the point-of-sale terminal |\n| `receiptInfo` | string(1024) | If you have any additional information related to the processing of the transaction for auditing/tracking purposes you can provide it here |\n| `audit` | [Audit](#9e1c7bdd-f4ee-45aa-9f61-c9f1694fc73c) | Can be used to provide tracking information of the user of your system who is performing the action |\n\n\\* Required",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Point-of-Sale Transaction Result",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Type</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>transactionId</code><strong>*</strong></td>\n        <td>string</td>\n        <td>Payrix's unique reference for the point-of-sale transaction operation</td>\n      </tr>\n      <tr>\n        <td><code>reference</code><strong>*</strong></td>\n        <td>string</td>\n        <td>The reference you provided for the point-of-sale transaction</td>\n      </tr>\n    </tbody>\n  </table>\n</div>",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Schedule Change Amounts",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>scheduledPaymentId</code><strong>*</strong></td>\r\n        <td>string</td>\r\n        <td>Our unique ID that identifies the scheduled payment you wish to change (can be obtained using one of the schedule search or lookup functions)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>newAmount</code><strong>*</strong></td>\r\n        <td>decimal</td>\r\n        <td>The amount you want to change the payment to</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>changeAllFuturePayments</code><strong>*</strong></td>\r\n        <td>boolean</td>\r\n        <td>Whether or not you want to change all payments scheduled for dates of the payment to the new amount (default: <code>false</code>)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>audit</code></td>\r\n        <td><a href=\"#9e1c7bdd-f4ee-45aa-9f61-c9f1694fc73c\">Audit</a></td>\r\n        <td>Can be used to provide tracking information of the user of your system who is performing the action</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n__*__ Required\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Schedule Generate",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Type</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>scheduleType</code><strong>*</strong></td>\n        <td><a href=\"#af9e395c-a2a0-49f5-b18d-6c89d227c3f4\">Schedule Type</a></td>\n        <td>Type of schedule you wish to generate (<code>UNENDING</code> or <code>LIMITED</code>)</td>\n      </tr>\n      <tr>\n        <td><code>startDate</code><strong>*</strong></td>\n        <td>date</td>\n        <td>That date on which the first payment in the schedule is to be generated (if the date is on a weekend it will automatically be set to the next business day)</td>\n      </tr>\n      <tr>\n        <td><code>amount</code><strong>*</strong></td>\n        <td>decimal</td>\n        <td>Amount of money that is to be debited for each payment in the schedule</td>\n      </tr>\n      <tr>\n        <td><code>frequency</code><strong>*</strong></td>\n        <td><a href=\"#3759751d-f695-463a-b82c-e2520bfdf741\">Schedule Frequency</a></td>\n        <td> Payment frequency of the schedule</td>\n      </tr>\n      <tr>\n        <td><code>frequencyDay</code></td>\n        <td>integer</td>\n        <td>Particular day on which each payment is to be scheduled relative to the frequency (if a date falls on a weekend it will automatically be set to the next business day). For <code>MONTHLY</code> schedules this needs to be set to the day of the month (1 to 31); For <code>WEEKLY</code> and <code>FORTNIGHTLY</code> schedules this needs to be the number of the day of the week (2 = Monday, 3 = Tuesday, 4 = Wednesday, 5 = Thursday, 6 = Friday); For all other schedule frequencies this value is ignored\n        For <code>WEEKLY</code> schedules, if this filed is not passed default of Monday will be used.\n        </td>\n      </tr>\n      <tr>\n        <td><code>limitToTransactionCount</code></td>\n        <td>integer [0-500]</td>\n        <td>For <code>LIMITED</code> schedule types only - the total number of payments that are to be debited (when generating a limited schedule you must set a value for <code>limitToTransactionCount</code> or <code>limitToTransactionAmount</code> but not both).</td>\n      </tr>\n      <tr>\n        <td><code>limitToTransactionAmount</code></td>\n        <td>decimal</td>\n        <td>For <code>LIMITED</code> schedule types only - total amount of money that is to be collected (when generating a limited schedule you must set a value for <code>limitToTransactionCount</code> or <code>limitToTransactionAmount</code> but not both).</td>\n      </tr>\n      <tr>\n        <td><code>removeAllPaymentsBeforeStartDate</code></td>\n        <td>boolean</td>\n        <td> Whether or not all currently scheduled payments for this payer before the given Start Date should be kept or not (Default: True). Possible values: <code>true</code> = any scheduled payments before the Start Date of the new schedule will be deleted (this effectively clears any existing schedule and replaces it with the newly generated one); <code>false</code> = payments before the start date of the newly generated schedule will be kept</td>\n      </tr>\n      <tr>\n        <td><code>templateId</code></td>\n        <td>string</td>\n        <td>Relevant only for businesses using customized scheduled templates - this can be set to the ID of one of your schedules templates</td>\n      </tr>\n      <tr>\n        <td><code>reference</code></td>\n        <td>string</td>\n        <td>You can provide a reference/ID from your system that identifies the payment, reference must be unique across the payer</td>\n      </tr>\n      <tr>\n        <td><code>description</code></td>\n        <td>string</td>\n        <td>You can provide a description from your system that identifies the payment</td>\n      </tr>\n      <tr>\n        <td><code>audit</code></td>\n        <td><a href=\"#9e1c7bdd-f4ee-45aa-9f61-c9f1694fc73c\">Audit</a></td>\n        <td>Can be used to provide tracking information of the user of your system who is performing the action</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n__*__ Required",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Schedule Payment",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Type</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>date</code><strong>*</strong></td>\n        <td>date</td>\n        <td>Date on which the payment is to be scheduled (must not be a date in the past)</td>\n      </tr>\n      <tr>\n        <td><code>amount</code><strong>*</strong></td>\n        <td>decimal</td>\n        <td>Amount of money that is to be debited from the payer</td>\n      </tr>\n      <tr>\n        <td><code>reference</code></td>\n        <td>string</td>\n        <td>You can provide a reference/ID from your system that identifies the payment, refrence must be unique across the payer</td>\n      </tr>\n      <tr>\n        <td><code>description</code></td>\n        <td>string</td>\n        <td>You can provide a description from your system that identifies the payment</td>\n      </tr>\n      <tr>\n        <td><code>subBusinessId</code></td>\n        <td>string</td>\n        <td>Only relevant for Head Office scenarios - if you wish to schedule a payment to be paid to one of your sub-businesses, you set the ID of that business here</td>\n      </tr>\n<tr>\n        <td><code>profile</code></td>\n        <td>integer (must be 1, 2)</td>\n        <td>For use with businesses using fee profiling functions to specify which fee set they wish to be charged for this transaction.</td>\n      </tr>\n<tr>\n        <td><code>serviceDate</code></td>\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">DateTime</a></td>\n        <td>Date the service will be provided, ie Booking date. Optional.</td>\n</tr>\n      <tr>\n        <td><code>audit</code></td>\n        <td><a href=\"#9e1c7bdd-f4ee-45aa-9f61-c9f1694fc73c\">Audit</a></td>\n        <td>Can be used to provide tracking information of the user of your system who is performing the action</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n__*__ Required",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Schedule Search",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>business</code></td>\r\n        <td><a href=\"#800f872a-ae86-4d33-a5cd-d35a3784e15b\">Business</a></td>\r\n        <td>Info of the business the payer is attached to</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>scheduledPaymentId</code></td>\r\n        <td>string</td>\r\n        <td>Unique ID that identifies each scheduled payment</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>date</code></td>\r\n        <td><a href = \"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">date</td>\r\n        <td>Date on which the payment is scheduled to be processed</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>amount</code></td>\r\n        <td>decimal</td>\r\n        <td>Amount of money that will be debited from the payer</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>reference</code></td>\r\n        <td>string</td>\r\n        <td>Your reference for the payment (if you provided one)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>description</code></td>\r\n        <td>string</td>\r\n        <td>Your description of the payment (if you provided one)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>scheduleReference</code></td>\r\n        <td>string</td>\r\n        <td>If you are using multiple schedules for each payer, this is the reference you provided to identify which schedule the payment belongs to</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>isIndividualPayment</code></td>\r\n        <td>boolean</td>\r\n        <td>Identifies if the payment was added individually (using the \"Schedule Single Payment\" function), or generated as part of an ongoing or limited schedule (using the \"Schedule Generate\" function)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>subBusinessId</code></td>\r\n        <td>string</td>\r\n        <td>Only relevant for Head Office scenarios - if you scheduled a payment to one of your sub-businesses, this is the ID of the business that will receive the money.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>payer</code></td>\r\n        <td><a href=\"#02567e2e-9b6a-43a6-83c5-870526bf7646\">Payer Basic Info</a></td>\r\n        <td>If payer details were associated with the transaction they will be shown here</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Schedule Payment Result",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>scheduledPaymentId</code></td>\r\n        <td>string</td>\r\n        <td>Unique ID that identifies the newly scheduled payment</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Settlement",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Type</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>business</code></td>\n        <td><a href=\"#800f872a-ae86-4d33-a5cd-d35a3784e15b\">Business</a></td>\n        <td>Info on the business the settlement was for</td>\n      </tr>\n      <tr>\n        <td><code>settlementId</code></td>\n        <td>string</td>\n        <td>Payrix's unique transaction identifier</td>\n      </tr>\n      <tr>\n        <td><code>settlementTime</code></td>\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">DateTime</a></td>\n        <td>Date/time the settlement was processed</td>\n      </tr>\n      <tr>\n        <td><code>settlementAmount</code></td>\n        <td>decimal</td>\n        <td>Total amount of the settlement that was paid into your account</td>\n      </tr>\n      <tr>\n        <td><code>settlementCurrency</code></td>\n        <td>string</td>\n        <td>Currency the transaction was processed in (ISO 3-character code)</td>\n      </tr>\n      <tr>\n        <td><code>transactions</code></td>\n        <td><a href=\"#838e7a32-f04a-42b9-8b0f-6f7fa0750351\">Settlement Transaction</a></td>\n        <td> A list of all transactions that impacted the settlement, including the amount settled for the transaction and any associated fees that were deducted from the settlement</td>\n      </tr>\n      <tr>\n        <td><code>ledgers</code></td>\n        <td><a href=\"#e9d83936-683b-45f0-b3d9-15e473442802\">Settlement Ledgers</a></td>\n        <td>A list of all instances of funds that were added to, or deducted from, the settlement that weren't directly related to a specific transaction (e.g. monthly fees, one-off bills and upfront settlement payments etc.)</td>\n      </tr>\n    </tbody>\n  </table>\n</div>",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Settlement (Detailed)",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Type</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>business</code></td>\n        <td><a href=\"#800f872a-ae86-4d33-a5cd-d35a3784e15b\">Business</a></td>\n        <td>Info on the business the settlement was for</td>\n      </tr>\n      <tr>\n        <td><code>settlementId</code></td>\n        <td>string</td>\n        <td>Payrix's unique transaction identifier</td>\n      </tr>\n      <tr>\n        <td><code>settlementTime</code></td>\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">DateTime</a></td>\n        <td>Date/time the settlement was processed</td>\n      </tr>\n      <tr>\n        <td><code>settlementAmount</code></td>\n        <td>decimal</td>\n        <td>Total amount of the settlement that was paid into your account</td>\n      </tr>\n      <tr>\n        <td><code>settlementCurrency</code></td>\n        <td>string</td>\n        <td>Currency the transaction was processed in (ISO 3-character code)</td>\n      </tr>\n      <tr>\n        <td><code>ledgers</code></td>\n        <td><a href=\"#9b496f38-8e5a-4366-bc52-8493d05c5466\">Settlement Ledgers (Detailed)</a></td>\n        <td>A list of all instances of funds that were added to, or deducted from, the settlement that you have received.  It includes transaction information along with associated fees, as well as items that weren't directly related to a specific transaction (e.g. monthly fees, one-off bills and upfront settlement payments etc.)</td>\n      </tr>\n    </tbody>\n  </table>\n</div>",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Settlement Transaction",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Type</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>settlementType</code></td>\n        <td><a href=\"#f4ba2572-13a8-4d1d-87bb-9826ae334d0f\">Settlement Type</a></td>\n        <td>The type of addition/deduction that impacted the settlement</td>\n      </tr>\n      <tr>\n        <td><code>amountSettled</code></td>\n        <td>decimal</td>\n        <td>The portion of the amount of the transactions that was settled to you</td>\n      </tr>\n      <tr>\n        <td><code>feesDeducted</code></td>\n        <td>decimal</td>\n        <td>If fees were deducted from the amount collected for the transaction before being settled to you, this is the total amount deducted</td>\n      </tr>\n      <tr>\n        <td><code>business</code></td>\n        <td><a href=\"#800f872a-ae86-4d33-a5cd-d35a3784e15b\">Business</a></td>\n        <td>Info of the business the transaction was processed for</td>\n      </tr>\n      <tr>\n        <td><code>time</code></td>\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">DateTime</a></td>\n        <td>Date/time when the transaction was first processed</td>\n      </tr>\n      <tr>\n        <td><code>transactionId</code></td>\n        <td>int</td>\n        <td>Payrix's unique transaction identifier</td>\n      </tr>\n      <tr>\n        <td><code>secondaryTransactionId</code></td>\n        <td>string</td>\n        <td>Payrix's secondary transaction identifier</td>\n      </tr>\n      <tr>\n        <td><code>reference</code></td>\n        <td>string</td>\n        <td>The reference you provided to identify the transaction</td>\n      </tr>\n      <tr>\n        <td><code>description</code></td>\n        <td>string</td>\n        <td>Shows any description you provided to identify the transaction</td>\n      </tr>\n      <tr>\n        <td><code>scheduleReference</code></td>\n        <td>string</td>\n        <td>If you set a schedule reference for the transaction it will be shown here</td>\n      </tr>\n      <tr>\n        <td><code>amount</code></td>\n        <td>decimal</td>\n        <td>The amount of the transaction that has been processed by the bank</td>\n      </tr>\n      <tr>\n        <td><code>amountRequested</code></td>\n        <td>decimal</td>\n        <td>The transaction amount you initially specified to be processed (this will match the \"Amount\" parameter above unless payer-paid fees were added to the transaction)</td>\n      </tr>\n      <tr>\n        <td><code>amountRefunded</code></td>\n        <td>decimal</td>\n        <td>If any refunds have been applied to the transaction their amount will be shown here</td>\n      </tr>\n      <tr>\n        <td><code>currency</code></td>\n        <td>string</td>\n        <td>Currency the transaction was processed in (ISO 3-character code)</td>\n      </tr>\n      <tr>\n        <td><code>type</code></td>\n        <td><a href=\"#78300ea2-0ac8-4047-a1b4-c1738535c1d8\">Transaction Type</a></td>\n        <td>Code for the type of transaction</td>\n      </tr>\n      <tr>\n        <td><code>typeDescription</code></td>\n        <td>string</td>\n        <td>Human readable description of the type of transaction</td>\n      </tr>\n      <tr>\n        <td><code>statusCode</code></td>\n        <td><a href=\"#746c23f5-c501-4736-910e-9ceba8fd5e79\">Transaction Status Code</a></td>\n        <td>Code of the current status of the transaction</td>\n      </tr>\n      <tr>\n        <td><code>statusDescription</code></td>\n        <td>string</td>\n        <td> Human readable description of the current status of the transaction</td>\n      </tr>\n      <tr>\n        <td><code>paymentMethod</code></td>\n        <td><a href=\"#a4609e65-247f-444a-892e-22751d85b5bf\">Payment Method</a></td>\n        <td>Name of the payment method used</td>\n      </tr>\n      <tr>\n        <td><code>payer</code></td>\n        <td><a href=\"#e265d55b-00ee-41c4-a117-6dfe3b1c02b3\">Transaction Search Payer</a></td>\n        <td>If payer details were associated with the transaction they will be shown here, null otherwise</td>\n      </tr>\n      <tr>\n        <td><code>card</code></td>\n        <td><a href=\"#8250cfa8-1534-4f09-a449-26288371f56c\">Card Search</a></td>\n        <td>If the transaction was paid by card, information on the card will be provided here, null otherwise</td>\n      </tr>\n      <tr>\n        <td><code>bankAccount</code></td>\n        <td><a href=\"#f843b64f-e84d-4e39-a671-d7aa5d2025d1\">Bank Account Search</a></td>\n        <td>If the transactions was paid from a bank account, information on the bank account will be provided here, null otherwise</td>\n      </tr>\n    </tbody>\n  </table>\n</div>",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Settlement Ledger",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>settlementType</code></td>\r\n        <td><a href=\"#f4ba2572-13a8-4d1d-87bb-9826ae334d0f\">Settlement Type</a></td>\r\n        <td>The type of addition/deduction that impacted the settlement</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>dateIncurred</code></td>\r\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">DateTime</a></td>\r\n        <td>Date on which the item was incurred</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>description</code></td>\r\n        <td>string</td>\r\n        <td>Description of the item</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>amountSettled</code></td>\r\n        <td>decimal</td>\r\n        <td>The portion of the amount of the transactions that was settled to you</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Settlement Ledger (Detailed)",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>ledgerId</code></td>\r\n        <td>string</td>\r\n        <td>Unique ID for this particular settlement item</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>settlementType</code></td>\r\n        <td><a href=\"#f4ba2572-13a8-4d1d-87bb-9826ae334d0f\">Settlement Type</a></td>\r\n        <td>The type of addition/deduction that impacted the settlement</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>settlementTypeId</code></td>\r\n        <td>integer</td>\r\n        <td>This can be used for additional identification of the type/category of the item</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>dateIncurred</code></td>\r\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">DateTime</a></td>\r\n        <td>Date on which the item was incurred</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>description</code></td>\r\n        <td>string</td>\r\n        <td>Description of the item</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>amountSettled</code></td>\r\n        <td>decimal</td>\r\n        <td>The amount this item either added to, or reduced, your total settlement</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>transaction</code></td>\r\n        <td><a href=\"#364e4e5d-e6f4-4f63-b4d3-6e4c1dd9ed73\">Transaction Search Model</a></td>\r\n        <td>If this item is directly associated with a transaction then full details of the transaction will be populated here, otherwise it will be null.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Stored Card Transaction",
					"item": [],
					"description": "  \n  \n\n  \n  \n  \n\n  \n  \n\n| Property | Type | Description |\n| --- | --- | --- |\n| `processType`\\* | [Card Process Type](#f73a0e2f-1664-4b80-9199-dd6edd93f667) | How the transaction is to be processed |\n| `reference`\\* | string(100) | Unique reference you provide to identify the transaction (must be unique across all your transactions) |\n| `amount`\\* | decimal | Amount of the transaction (include decimal point for currencies with cents). |\n| `description` | string | You can provide additional information to describe the transaction |\n| `serviceDate` | [DateTime](#12bbff50-aa66-440d-9af8-ec9c8b608fb0) | Date the service will be provided, ie Booking date. Optional. |\n| `audit` | [Audit](#9e1c7bdd-f4ee-45aa-9f61-c9f1694fc73c) | Can be used to provide tracking information of the user of your system who is performing the action |\n\n\\* Required",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Tokenize Card",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>card</code><strong>*</strong></td>\r\n        <td><a href=\"#4fbcd7c2-8508-46fa-8b96-c978a29deac2\">Card</a></td>\r\n        <td>Details of the card to be tokenized</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n__*__ Required\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Transaction Result",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Type</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>transactionId</code></td>\n        <td>string(100)</td>\n        <td>The transaction reference provided to you from the bank/gateway that processed the transaction</td>\n      </tr>\n      <tr>\n        <td><code>reference</code></td>\n        <td>string</td>\n        <td>Unique reference you provided to identify the transaction</td>\n      </tr>\n      <tr>\n        <td><code>statusCode</code></td>\n        <td><a href=\"#0575e464-6926-42d8-9aef-7efb47776a99\">Transaction Result Status Code</a></td>\n        <td>Code that specifies whether or not the transaction was successfully processed.</td>\n      </tr>\n      <tr>\n        <td><code>subStatusCode</code></td>\n        <td><a href=\"#b02dad21-6aa7-4876-a2b7-d7c4e2d8226f\">Transaction Sub-Status Code</a></td>\n        <td>Additional information describing the transaction result such as the reason for the rejection if the transaction could not be processed</td>\n      </tr>\n      <tr>\n        <td><code>statusDescription</code></td>\n        <td>string</td>\n        <td>Human readable description of the status result</td>\n      </tr>\n      <tr>\n        <td><code>processedAmount</code></td>\n        <td>decimal</td>\n        <td>Amount of the transaction that was processed</td>\n      </tr>\n       <tr>\n        <td><code>cardType</code></td>\n        <td><a href=\"#f1137925-1203-43b7-b20f-4ebcf0cee82f\">Card Type</a></td>\n        <td>Type of card</td>\n      </tr>\n      <tr>\n        <td><code>redirectId</code></td>\n        <td>string</td>\n        <td><em>3-D Secure Only</em> - if you are using 3-D Secure, and if the challenge scenario has been triggered, this will contain and ID that you need to store for later use with completing your transaction once your customer is redirected back to your website (<a href=\"#faff43cd-5e44-471c-ad23-64a1fd28f90f\">see here</a>).</td>\n      </tr>\n      <tr>\n        <td><code>redirectUrl</code></td>\n        <td>url</td>\n        <td><em>3-D Secure Only</em> - if you are using 3-D Secure, and if the challenge scenario has been triggered, this will contain the URL that you must redirect your customer to in order for them to complete the verification process (<a href=\"#faff43cd-5e44-471c-ad23-64a1fd28f90f\">see here</a>).</td>\n      </tr>\n    </tbody>\n  </table>\n</div>",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Transaction Search",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Type</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>business</code></td>\n        <td><a href=\"#ae18df06-8bb4-488a-839b-ab0dfb72b30d\">Business</a></td>\n        <td>Info of the business the payer is attached to</td>\n      </tr>\n      <tr>\n        <td><code>time</code></td>\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">DateTime</a></td>\n        <td>Date/Time when the transaction was first processed</td>\n      </tr>\n      <tr>\n        <td><code>transactionId</code></td>\n        <td>int</td>\n        <td>Payrix's unique transaction identifier</td>\n      </tr>\n      <tr>\n        <td><code>secondaryTransactionId</code></td>\n        <td>string</td>\n        <td>Payrix's secondary transaction identifier</td>\n      </tr>\n      <tr>\n        <td><code>reference</code></td>\n        <td>string</td>\n        <td>The reference you provided to identify the transaction</td>\n      </tr>\n      <tr>\n        <td><code>description</code></td>\n        <td>string</td>\n        <td>Shows any description you provided to identify the transaction</td>\n      </tr>\n      <tr>\n        <td><code>scheduleReference</code></td>\n        <td>string</td>\n        <td>If you set a schedule reference for the transaction it will be shown here</td>\n      </tr>\n      <tr>\n        <td><code>amount</code></td>\n        <td>decimal</td>\n        <td>The amount of the transaction that has been processed by the bank</td>\n      </tr>\n      <tr>\n        <td><code>amountRequested</code></td>\n        <td>decimal</td>\n        <td>The transaction amount you initially specified to be processed (this will match the \"Amount\" parameter above unless payer-paid fees were added to the transaction)</td>\n      </tr>\n      <tr>\n        <td><code>amountRefunded</code></td>\n        <td>decimal</td>\n        <td>If any refunds have been applied to the transaction their amount will be shown here</td>\n      </tr>\n      <tr>\n        <td><code>currency</code></td>\n        <td>string</td>\n        <td>Currency the transaction was processed in (ISO 3-character code)</td>\n      </tr>\n      <tr>\n        <td><code>type</code></td>\n        <td><a href=\"#78300ea2-0ac8-4047-a1b4-c1738535c1d8\">Transaction Type</a></td>\n        <td>Code for the type of transaction</td>\n      </tr>\n      <tr>\n        <td><code>typeDescription</code></td>\n        <td>string</td>\n        <td>Human readable description of the type of transaction</td>\n      </tr>\n      <tr>\n        <td><code>statusCode</code></td>\n        <td><a href=\"#746c23f5-c501-4736-910e-9ceba8fd5e79\">Transaction Status Code</a></td>\n        <td>Code of the current status of the transaction</td>\n      </tr>\n      <tr>\n        <td><code>subStatusCode</code></td>\n        <td><a href=\"#b02dad21-6aa7-4876-a2b7-d7c4e2d8226f\">Transaction Sub-Status Code</a></td>\n        <td>Secondary code for the current status of the transaction that can provide more information on that particular status (only some types of transactions will have a sub status).</td>\n      </tr>\n      <tr>\n        <td><code>statusDescription</code></td>\n        <td>string</td>\n        <td>Human readable description of the current status of the transaction</td>\n      </tr>\n      <tr>\n        <td><code>paymentMethod</code></td>\n        <td><a href=\"#a4609e65-247f-444a-892e-22751d85b5bf\">Payment Method</a></td>\n        <td>Name of the payment method used</td>\n      </tr>\n      <tr>\n        <td><code>payer</code></td>\n        <td><a href=\"#e265d55b-00ee-41c4-a117-6dfe3b1c02b3\">Transaction Search Payer</a></td>\n        <td>If payer details were associated with the transaction they will be shown here, null otherwise</td>\n      </tr>\n      <tr>\n        <td><code>card</code></td>\n        <td>Card Search</td>\n        <td>If the transaction was paid by card, information on the card will be provided here, null otherwise</td>\n      </tr>\n      <tr>\n        <td><code>bankAccount</code></td>\n        <td><a href=\"#f843b64f-e84d-4e39-a671-d7aa5d2025d1\">Bank Account Search</a></td>\n        <td>If the transactions was paid from a bank account, information on the bank account will be provided here, null otherwise</td>\n      </tr>\n      <tr>\n        <td><code>rejectionRecovery</code></td>\n        <td><a href=\"#fdbdb4ec-0857-4fa2-819b-0e7b7d33e71d\">Rejection Recovery Info</a></td>\n        <td>If you are using the \"PayUpNow\" service, this is will contain information on the processing status of any transactions that have been run through the service, null otherwise</td>\n      </tr>\n      <tr>\n        <td><code>source</code></td>\n        <td><a href=\"#2cfab69e-f3e1-4688-bdf3-4ed59e891202\">Transaction Source</a></td>\n        <td>Provides additional information on how the transaction was initiated (provided for special case transactions only)</td>\n      </tr>\n        <tr>\n        <td><code>verification</code></td>\n        <td><a>Verification Data</a></td>\n        <td>Reserved for future use as part of 3DS v2</td>\n      </tr>\n<tr>\n        <td><code>recurringReference</code></td>\n        <td>string(100)</td>\n        <td><em><a href=\"#eec38929-7677-459c-81db-707dfe64e3bf\">CIT/MIT Field</a></em> - Reference or ID from your system that you provided to identify whatever person, entity or contract for which you are going to process ongoing payments.</td>\n      </tr>\n<tr>\n        <td><code>cardStorageType</code></td>\n        <td><a href=\"#72e87212-12d8-400c-9ad9-864714110469\">CardStorageType</a></td>\n        <td><em><a href=\"#eec38929-7677-459c-81db-707dfe64e3bf\">CIT/MIT Field</a></em> - For card transactions this specifies the storage option for the card and whether or not the transaction is a customer initiated transaction (CIT) or a merchant initiated transaction (MIT).</td>\n      </tr>\n<tr>\n        <td><code>cardAuthorizationType</code></td>\n        <td><a href=\"#695e8363-6451-4d97-8ef3-ba35f0e67a95\">CardAuthorizationType</a></td>\n        <td><em><a href=\"#eec38929-7677-459c-81db-707dfe64e3bf\">CIT/MIT Field</a></em> - Used to specify the nature of the authorization.</td>\n      </tr>\n<tr>\n        <td><code>cardAuthorizationReference</code></td>\n        <td>string (100)</td>\n        <td><em><a href=\"#eec38929-7677-459c-81db-707dfe64e3bf\">CIT/MIT Field</a></em> - Reference provided by the processing gateway which identifies the card used for the purpose of linking recurring payments on the same card.</td>\n      </tr>\n<tr>\n        <td><code>profile</code></td>\n        <td>integer (either 1, 2, 3 or 4)</td>\n        <td>For use with businesses using fee profiling functions - this will be set to the number of the fee profile set chosen for this transaction when it was submitted.</td>\n      </tr>\n    </tbody>\n  </table>\n</div>",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Transaction Status History",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Type</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>transactionId</code></td>\n        <td>int</td>\n        <td>Payrix's unique transaction identifier</td>\n      </tr>\n       <tr>\n        <td><code>reference</code></td>\n        <td>string</td>\n        <td>The reference you provided to identify the transaction</td>\n      </tr>\n      <tr>\n        <td><code>statusChangeTime</code></td>\n        <td><a=href\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">Date/Time</a></td>\n        <td>Date/time the change occurred</a></td>\n      </tr>\n      <tr>\n        <td><code>statusChangeFrom</code></td>\n        <td>string</td>\n        <td><a href=\"#746c23f5-c501-4736-910e-9ceba8fd5e79\">Status Code Changed From</a></td>\n      </tr>\n      <tr>\n        <td><code>statusChangeFromDescription</code></td>\n        <td>string</td>\n        <td>Status Changed From Full Description</td>\n      </tr>\n      <tr>\n        <td><code>statusChangeTo</code></td>\n        <td>string</td>\n        <td><a href=\"#746c23f5-c501-4736-910e-9ceba8fd5e79\">Status Code Changed To</a></td>\n      </tr>\n      <tr>\n        <td><code>statusChangeToDescription</code></td>\n        <td>string</td>\n        <td>Status Changed To Full Description</td>\n      </tr>\n    </tbody>\n  </table>\n</div>",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Transaction Search Payer",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Type</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>payerId</code></td>\n        <td>string</td>\n        <td>Payrix's unique payer identifier</td>\n      </tr>\n      <tr>\n        <td><code>uniqueReference</code></td>\n        <td>string</td>\n        <td>Unique reference you provided to identify the payer</td>\n      </tr>\n      <tr>\n        <td><code>groupReference</code></td>\n        <td>string</td>\n        <td>secondary reference you provided to identify the payer</td>\n      </tr>\n      <tr>\n        <td><code>familyOrBusinessName</code></td>\n        <td>string</td>\n        <td>Payer's last name or company/business name if not a person</td>\n      </tr>\n      <tr>\n        <td><code>givenName</code></td>\n        <td>string</td>\n        <td>Payer's first name</td>\n      </tr>\n      <tr>\n        <td><code>address</code></td>\n        <td><a href=\"#20abc30f-bdd5-41d0-bbb3-24673442e432\">Address</a></td>\n        <td>Address of the payer</td>\n      </tr>\n      <tr>\n        <td><code>email</code></td>\n        <td><a href=\"#918cc722-4378-4cce-8997-8e14a8378e55\">Email Address</a></td>\n        <td>Payer's email</td>\n      </tr>\n      <tr>\n        <td><code>phone</code></td>\n        <td><a href=\"#e90f5f16-06a6-42b7-9c90-044a8ca5bbbc\">Phone Number</a></td>\n        <td>Payer's phone number</td>\n      </tr>\n      <tr>\n        <td><code>mobile</code></td>\n        <td><a href=\"#e90f5f16-06a6-42b7-9c90-044a8ca5bbbc\">Phone Number</a></td>\n        <td>Payer's mobile number</td>\n      </tr>\n    </tbody>\n  </table>\n</div>",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Transaction Status Update Received",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>transactionId</code></td>\r\n        <td>int</td>\r\n        <td>Our unique TransactionId that identifies the payment obtained from the \"New Status Search\".</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>statusCode</code></td>\r\n        <td><a href=\"#746c23f5-c501-4736-910e-9ceba8fd5e79\">Transaction Status Code</a></td>\r\n        <td>The \"StatusCode\" that the transaction had when you downloaded it from \"New Status Search\" - this is provided as a safety measure just in case the status of the transaction changes in the time between when the transaction details are downloaded and we are notified of the status being received and processed via this function.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>audit</code></td>\r\n        <td><a href=\"#9e1c7bdd-f4ee-45aa-9f61-c9f1694fc73c\">Audit</a></td>\r\n        <td>Can be used to provide tracking information of the user of your system who is performing the action</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Transaction Search Rejection Recovery",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>Status</code></td>\r\n        <td><a href=\"#b69619e4-9bb8-4799-a0a0-9e74b3014cf1\">Rejection Recovery Status</a></td>\r\n        <td>The current \"PayUpNow\" processing status.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>StatusTime</code></td>\r\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">DateTime</a></td>\r\n        <td>When avaiable, this is the date/time of the last event that caused the above status to be triggered.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>AssociatedTransactionId</code></td>\r\n        <td>string</td>\r\n        <td>- For rejected transactions which have triggered a \"PayUpNow\" request, if the customer has used the payment link to process a catchup transaction, this will be set to the ID of that catchup transaction.\r\n        - For transactions that are processed as a catchup transaction, this is the ID or the originally rejected transaction that this payment is a catchup for.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Token [HPP] Generate",
					"item": [],
					"description": "<table><tbody><tr><th>Property</th><th>Type</th><th>Description</th></tr><tr><td><code>returnUrl</code><b>*</b></td><td>string(500)</td><td>An optional string that specifies a URL in which to redirect the user after completion of the request.</td></tr><tr><td><code>template</code><b>*</b></td><td>string(255)</td><td>The Guid or Name of a custom HPP Template that Payrix staff have setup for you based on your businesses requirements.</td></tr><tr><td><code>ServiceDate</code></td><td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">DateTime</a></td><td>Start Date Service will be provided</td></tr><tr><td><code>transaction</code><b>*</b></td><td><a href=\"#080f30c3-be80-4a36-ad46-9bb072c760df\">Token [HPP] Transaction Model</a></td><td>Details of the real-time transaction that you want to process.</td></tr><tr><td><code>payer</code></td><td><a href=\"#8ed3c563-6f61-4b56-bbcd-98f06c46e2e1\">Token [HPP] Payer Model</a></td><td>Optional, but it is recommended that you provide as much payer information as possible to help prevent payment failures and chargebacks.</td></tr><tr><td><code>audit</code></td><td><a href=\"#9e1c7bdd-f4ee-45aa-9f61-c9f1694fc73c\">Audit</a></td><td>Can be used to provide tracking information of the user of your system who is performing the action.</td></tr></tbody></table>\n\n*   Required",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Token [HPP] Payer",
					"item": [],
					"description": "<table><tbody><tr><th>Property</th><th>Type</th><th>Description</th></tr><tr><td><div><code>uniqueReference</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>string(100)</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>Unique reference that identifies the payer within your systems. Must be unique within each business.<br>üìë If you provide an existing <code>uniqueReference</code> this transaction will be recorded against that payer.<br><i>[Required when saving payers]</i></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>groupReference</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>string(100)</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>Optional secondary reference to identify the payer within your systems that doesn't need to be unique (e.g. it can be used as a grouping reference for related payers)</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>familyOrBusinessName ^</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>string(50)</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>Family/last name or business name of the payer.<br><i>[Required when saving payers]<br>[^Required when accepting Digital Wallet]</i></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>givenName ^</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>string(50)</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>Given/first name of the payer<br><i>[^Required when accepting Digital Wallet]</i></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>email ^</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><a href=\"#918cc722-4378-4cce-8997-8e14a8378e55\" target=\"_self\" url=\"#918cc722-4378-4cce-8997-8e14a8378e55\">Email Address</a></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>Email address of the payer<br><i>[^Required when accepting Digital Wallet]</i></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>phone</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><a href=\"#e90f5f16-06a6-42b7-9c90-044a8ca5bbbc\" target=\"_self\" url=\"#e90f5f16-06a6-42b7-9c90-044a8ca5bbbc\">Phone Number</a></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>Phone number of the payer</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>mobile</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><a href=\"#e90f5f16-06a6-42b7-9c90-044a8ca5bbbc\" target=\"_self\" url=\"#e90f5f16-06a6-42b7-9c90-044a8ca5bbbc\">Phone Number</a></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>Mobile (cell) phone number of the payer</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>address</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><a href=\"#20abc30f-bdd5-41d0-bbb3-24673442e432\" target=\"_self\" url=\"#20abc30f-bdd5-41d0-bbb3-24673442e432\">Address</a></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>Address of the payer</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>extraInfo</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><a href=\"#5a05af11-9248-4e71-a40d-65d564c42e08\" target=\"_self\" url=\"#5a05af11-9248-4e71-a40d-65d564c42e08\">Payer Extra Info</a></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>Optional additional settings that can be used to define the functions and services used with this payer</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>savePayer ^</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>boolean</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>If your account is enabled for payer storage can choose to save the payer for future payments (charges may apply)<br><i>[^Property must be false to accept Digtal Wallet]</i></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr></tbody></table>\n\n\\* Required\n\n^ Conditional - required when implementing Digital Wallet Payment acceptance.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Token [HPP] Transaction",
					"item": [],
					"description": "  \n  \n\n  \n  \n  \n\n  \n  \n\n| Property | Type | Description |\n| --- | --- | --- |\n| `processType`\\* | [Card Process Type](#f73a0e2f-1664-4b80-9199-dd6edd93f667) | How the transaction is to be processed |\n| `reference`\\* | string(100) | Unique reference you provide to identify the transaction (must be unique across all your transactions) |\n| `amount`\\* | decimal | Amount of the transaction (include decimal point for currencies with cents). |\n| `description` | string | You can provide additional information to describe the transaction |\n\n\\* Required",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Token [eDDR] Generate",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Type</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>returnUrl</code><strong>*</strong></td>\n        <td>string(500)</td>\n        <td>An string that specifies a URL in which to redirect the user after completion of the request.</td>\n      </tr>\n      <tr>\n        <td><code>template</code><strong>*</strong></td>\n        <td>string(255)</td>\n        <td>The Guid or Name of a custom eDDR Template that Payrix staff have setup for you based on your businesses requirements.</td>\n      </tr>\n      <tr>\n        <td><code>payer</code><strong>*</strong></td>\n        <td><a href=\"#818ae26e-bcc3-4f93-99e0-30565243e312\">Token [eDDR] Payer Model</a></td>\n        <td>Information on the payer you wish to create an eDDR for.</td>\n      </tr>\n      <tr>\n        <td><code>schedule</code></td>\n        <td><a href=\"#5b73ab32-fe9b-464f-ba9b-1558b09ad9e2\">Schedule Generate Model</a></td>\n        <td>This can be used if you wish to define a preset schedule for this particular payer.</td>\n      </tr>\n      <tr>\n        <td><code>audit</code></td>\n        <td><a href=\"#9e1c7bdd-f4ee-45aa-9f61-c9f1694fc73c\">Audit</a></td>\n        <td>Can be used to provide tracking information of the user of your system who is performing the action.</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n__*__ Required",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Token [eDDR] Payer",
					"item": [],
					"description": "  \n  \n\n  \n  \n  \n\n  \n  \n\n| Property | Type | Description |\n| --- | --- | --- |\n| `uniqueReference`\\* | string(100) | Unique reference that identifies the payer within your systems. Must be unique within each business. |\n| `groupReference` | string(100) | Optional secondary reference to identify the payer within your systems that doesn't need to be unique (e.g. it can be used as a grouping reference for related payers) |\n| `familyOrBusinessName`\\* | string(50) | Family/last name or business name of the payer. |\n| `givenName` | string(50) | Given/first name of the payer |\n| `email` | [Email Address](#918cc722-4378-4cce-8997-8e14a8378e55) | Email address of the payer |\n| `phone` | [Phone Number](#e90f5f16-06a6-42b7-9c90-044a8ca5bbbc) | Phone number of the payer |\n| `mobile` | [Phone Number](#e90f5f16-06a6-42b7-9c90-044a8ca5bbbc) | Mobile (cell) phone number of the payer |\n| `address` | [Address](#20abc30f-bdd5-41d0-bbb3-24673442e432) | Address of the payer |\n| `extraInfo` | [Payer Extra Info](#5a05af11-9248-4e71-a40d-65d564c42e08) | Optional additional settings that can be used to define the functions and services used with this payer |\n| `overrideExisting` | boolean | When set to `false` _\\[default\\]_, if you already have a payer registered with the given uniqueReference, this API call with return a status code 409 (Conflict) response and no eDDR token will be generated. This is the default if no value is provided.  <br>  <br>  <br>When set to `true`, if you already have a payer registered with the given uniqueReference, the eDDR will be allowed to be processed and the existing payer details and setup will be overwritten/updated. |\n| `retainSchedule` | boolean | _This setting is applied only when the_ `_overrideExisting_` _option is set_ `_true_`_._  <br>  <br>  <br>When set to `false` _\\[default\\]_, the payer's existing schedule will be overwritten based on the scheduling options set for the API token and/or eDDR template.  <br>  <br>  <br>When set to `true`, any payment schedule that has currently been set up for your existing payer will be left as is. Any and all schedule generation options set for your API token and/or eDDR template will be ignored, therefore you should ensure that the eDDR template you use doesn't include schedule generation options because it could cause confusion for your customers. |\n\n\\* Required",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Token [Vault] Generate",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>returnUrl</code><strong>*</strong></td>\r\n        <td>string(500)</td>\r\n        <td>An string that specifies a URL in which to redirect the user after completion of the request.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>payer</code><strong>*</strong></td>\r\n        <td><a href=\"#649b730f-9830-468d-8bf9-ac39ae2cfdbc\">Token [Vault] Payer Model</a></td>\r\n        <td>Information on the payer you wish to save a payment method to.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>audit</code></td>\r\n        <td><a href=\"#9e1c7bdd-f4ee-45aa-9f61-c9f1694fc73c\">Audit</a></td>\r\n        <td>Can be used to provide tracking information of the user of your system who is performing the action.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n__*__ Required\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Token [Vault] Payer",
					"item": [],
					"description": "  \n  \n\n  \n  \n  \n\n  \n  \n\n| Property | Type | Description |\n| --- | --- | --- |\n| `uniqueReference`\\* | string(100) | Unique reference that identifies the payer within your systems. Must be unique within each business. |\n| `groupReference` | string(100) | Optional secondary reference to identify the payer within your systems that doesn't need to be unique (e.g. it can be used as a grouping reference for related payers) |\n| `familyOrBusinessName`**^** | string(50) | Family/last name or business name of the payer. |\n| `givenName` | string(50) | Given/first name of the payer |\n| `email` | [Email Address](#918cc722-4378-4cce-8997-8e14a8378e55) | Email address of the payer |\n| `phone` | [Phone Number](#e90f5f16-06a6-42b7-9c90-044a8ca5bbbc) | Phone number of the payer |\n| `mobile` | [Phone Number](#e90f5f16-06a6-42b7-9c90-044a8ca5bbbc) | Mobile (cell) phone number of the payer |\n| `address` | [Address](#20abc30f-bdd5-41d0-bbb3-24673442e432) | Address of the payer |\n| `extraInfo` | [Payer Extra Info](#5a05af11-9248-4e71-a40d-65d564c42e08) | Optional additional settings that can be used to define the functions and services used with this payer |\n| `AddIfNotExists` | boolean | When set to `false`, if you don't have a payer already registered with the given uniqueReference, this API call with return a status code 404 (Not Found) response and no Vault token will be generated. This is the default if no value is provided.  <br>  <br>  <br>When set to `true`, if you don't have a payer already registered with the given uniqueReference, a new payer will be created and the new payment method attached to it (any existing payer information will be overwritten with the details provided above). |\n\n\\* Required\n\n**^** Conditional - required when AddIfNotExists = true",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Token Lookup",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>token</code></td>\r\n        <td>guid</td>\r\n        <td>The unique token generate for use with a hosted service</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>type</code></td>\r\n        <td><a href=\"#7e870324-6e3c-4977-8045-2e64c1463564\">Token Type</a></td>\r\n        <td>The type of service the token was generated for</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>time</code></td>\r\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">DateTime</a></td>\r\n        <td>Date/Time when the token was generated</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>status</code></td>\r\n        <td><a href=\"#7e870324-6e3c-4977-8045-2e64c1463564\">Token Status</a></td>\r\n        <td>The current status of the token</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>statusDescription</code></td>\r\n        <td>string</td>\r\n        <td>Additional information on the token status (if any).</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>returnUrl</code></td>\r\n        <td>string</td>\r\n        <td>The URL that you provided when you generated the token that we use to redirect your customer back to your website after completion of the request.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>redirectToUrl</code></td>\r\n        <td>string</td>\r\n        <td>The URL we provided you along with the token which you use to redirect your customer to our hosted service.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>template</code></td>\r\n        <td>guid</td>\r\n        <td>The Guid/ID of the hosted services template that will be used with this token.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>templateName</code></td>\r\n        <td>string</td>\r\n        <td>The name of the hosted services template that will be used with this token</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>transaction</code></td>\r\n        <td><a href=\"#364e4e5d-e6f4-4f63-b4d3-6e4c1dd9ed73\">Transaction Search</a></td>\r\n        <td>If a transaction was generated through the use of this token, the full details of the transaction and its current status is included here.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>payer</code></td>\r\n        <td><a href=\"#e265d55b-00ee-41c4-a117-6dfe3b1c02b3\">Payer</a></td>\r\n        <td>If a payer was generated through the use of this token, the full details of the payer is included here.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>RequestHpp</code></td>\r\n        <td><a href=\"#ecbb94ea-593c-4c89-aef9-6fdfc0301589\">Token Generate HPP</a></td>\r\n        <td>Contains the contents of your original request to generate a HPP token.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>events</code></td>\r\n        <td><a href=\"#3f7bc56c-8734-4d68-934a-fe7900324be9\">Event</a></td>\r\n        <td>The events that have occured with this token.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n__*__ Required\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Token Result",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Type</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>token</code></td>\n        <td>guid</td>\n        <td>Payrix's unique ID that identifies the newly created token</td>\n      </tr>\n      <tr>\n        <td><code>redirectToUrl</code></td>\n        <td>URL</td>\n        <td>This is the page for Payrix's HPP/eDDR/Add-to-vault service that you need to redirect your customer to</td>\n      </tr>\n    </tbody>\n  </table>\n</div>",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Token Status",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>statusCode</code></td>\r\n        <td><a href=\"#e9e84da3-a75f-4faf-83e0-a594556033d7\">Token Status Code</a></td>\r\n        <td>The status of the token in relation to processing.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>statusDescription</code></td>\r\n        <td>string</td>\r\n        <td>A human readable description of the Status.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>transactionResult</code></td>\r\n        <td><a href=\"#7828289b-5a94-4c43-81c3-cf955e6e16bd\">Transaction Result</a></td>\r\n        <td>Result of a transaction process attempt.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>audit</code></td>\r\n        <td><a href=\"#9e1c7bdd-f4ee-45aa-9f61-c9f1694fc73c\">Audit</a></td>\r\n        <td>Optional information to allow you to audit the use of your data.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Token Event",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n    \t<tr>\r\n        <td><code>event</code></td>\r\n        <td><a href=\"#e9e84da3-a75f-4faf-83e0-a594556033d7\">Token Status</a></td>\r\n        <td>The event that has occured with the token.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>time</code></td>\r\n        <td><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">DateTime</a></td>\r\n        <td>The date/time of the Event.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>Description</code></td>\r\n        <td>string</td>\r\n        <td>A human readable description of the Event.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>username</code></td>\r\n        <td>string</td>\r\n        <td>Details of the user logged with the event (if any).</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>ip</code></td>\r\n        <td>string</td>\r\n        <td>The IP address logged with the event.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Tokenized Card Transaction",
					"item": [
						{
							"name": "New Request",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"response": []
						}
					],
					"description": "<table><tbody><tr><th>Property</th><th>Type</th><th>Description</th></tr><tr><td><div><code>processType</code><b>\\*</b></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><a href=\"#f73a0e2f-1664-4b80-9199-dd6edd93f667\" target=\"_self\" url=\"#f73a0e2f-1664-4b80-9199-dd6edd93f667\">Card Transaction Process Type</a></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>How the transaction is to be processed</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>reference</code><b>\\*</b></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>string(100)</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>Unique reference you provide to identify the transaction (must be unique across all your transactions)</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>amount</code><b>\\*</b></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>decimal</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>Amount of the transaction (include decimal point for currencies with cents)</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>description</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>string (128)</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>You can provide additional information to describe the transaction</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>cardToken</code><b>\\*</b></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>string</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>Token obtained from the 'Tokenize Card' function that can be used in place of the card details.</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>payer</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><a href=\"#40065eff-57dd-4393-9cba-b349cf2fac76\" target=\"_self\" url=\"#40065eff-57dd-4393-9cba-b349cf2fac76\">Card Transaction Payer</a></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>Details of the payer/customer making the transaction. PLEASE NOTE: It is recommended that you pass through as many of the details of the payer that you have for the purposes of reducing the risk of fraud and chargebacks.</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>source</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>string</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>This is used only for special case scenarios - Payrix will inform you if your business needs to provide anything for this field.</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>audit</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><a href=\"#9e1c7bdd-f4ee-45aa-9f61-c9f1694fc73c\" target=\"_self\" url=\"#9e1c7bdd-f4ee-45aa-9f61-c9f1694fc73c\">Audit</a></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>Can be used to provide tracking information of the user of your system who is performing the action</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>callbackUrl</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>URL</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><i>3-D Secure Only</i> - if you are using 3-D Secure, you need to supply a URL to which your customer will be redirected back to if they where required to perform a challenge verification (<a href=\"#faff43cd-5e44-471c-ad23-64a1fd28f90f\" target=\"_self\" url=\"#faff43cd-5e44-471c-ad23-64a1fd28f90f\">see here</a>)</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>browserInfo</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><a href=\"#b71b2258-d074-4ca9-8e8c-11c00e56c15c\" target=\"_self\" url=\"#b71b2258-d074-4ca9-8e8c-11c00e56c15c\">BrowserInfo</a></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><i>3-D Secure Only</i> - if you are using 3-D Secure, in order for the card‚Äôs issuing bank to provide a challenge UI to your customer that is rendered appropriately for the device that your customer is using, the 3-D Secure system requires you to collect and pass-through information on the configuration of the browser that your customer is using (<a href=\"#faff43cd-5e44-471c-ad23-64a1fd28f90f\" target=\"_self\" url=\"#faff43cd-5e44-471c-ad23-64a1fd28f90f\">see here</a>)</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>recurringReference</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>string(100)</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><p><a href=\"#eec38929-7677-459c-81db-707dfe64e3bf\" target=\"_self\" url=\"#eec38929-7677-459c-81db-707dfe64e3bf\"><i>CIT/MIT Field</i></a>- Relevant only when you are going to be processing ongoing payments on the stored card, this is some sort of reference or ID from your system that identifies whatever person, entity or contract for which you are going to process ongoing payments.<br><br></p><p>Whereby the ‚ÄúTransactionReference‚Äù field uniquely identifies each individual transaction you are processing, the ‚ÄúRecurringReference‚Äù field is intending to uniquely identify that which a set of going transactions is being processed for.</p></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>cardStorageType</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><a href=\"#72e87212-12d8-400c-9ad9-864714110469\" target=\"_self\" url=\"#72e87212-12d8-400c-9ad9-864714110469\">CardStorageType</a></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><a href=\"#eec38929-7677-459c-81db-707dfe64e3bf\" target=\"_self\" url=\"#eec38929-7677-459c-81db-707dfe64e3bf\"><i>CIT/MIT Field</i></a>- Used to specify if you are storing the card you are providing, and whether or not it is a customer initiated transaction (CIT) or a merchant initiated transaction (MIT).</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>cardAuthorizationType</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><a href=\"#695e8363-6451-4d97-8ef3-ba35f0e67a95\" target=\"_self\" url=\"#695e8363-6451-4d97-8ef3-ba35f0e67a95\">CardAuthorizationType</a></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><a href=\"#eec38929-7677-459c-81db-707dfe64e3bf\" target=\"_self\" url=\"#eec38929-7677-459c-81db-707dfe64e3bf\"><i>CIT/MIT Field</i></a>- Used to specify the nature of the authorization.</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>cardAuthorizationReference</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>string (100)</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><a href=\"#eec38929-7677-459c-81db-707dfe64e3bf\" target=\"_self\" url=\"#eec38929-7677-459c-81db-707dfe64e3bf\"><i>CIT/MIT Field</i></a>- This is a reference that you provide each time you process a subsequent transaction on a stored card. You will receive this value as part of the result of the successful processing of the initial transaction on a newly stored card.</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>profile</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>integer (must be 1, 2)</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>For use with businesses using fee profiling functions to specify which fee set they wish to be charged for this transaction.</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>serviceDate</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div><a href=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\" target=\"_self\" url=\"#12bbff50-aa66-440d-9af8-ec9c8b608fb0\">DateTime</a></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>Date the service will be provided, ie Booking date. Optional.</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr><tr><td><div><code>use3ds</code></div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>boolean</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td><td><div>If your business has been enabled for optional 3-D Secure useage, you can set this field to true to trigger the 3-D Secure authentication process when the transaction is submitted. When using this field you will be required to provided all the 3-D Secure related fields above (namely \"callbackUrl\", \"browserInfo\" and \"payer.email\").</div><div contenteditable=\"false\"><div><div><div></div></div></div><div></div></div></td></tr></tbody></table>\n\n\\* Required",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "BSB Search Model",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>bs</code></td>\r\n        <td>string</td>\r\n        <td>Bank account branch identifier (e.g. BSB or routing number)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>branch</code></td>\r\n        <td>string</td>\r\n        <td>Name of bank branch</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>country</code></td>\r\n        <td>string</td>\r\n        <td>Country name</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>bank</code></td>\r\n        <td>string</td>\r\n        <td>Name of Banking institution</td>\r\n      </tr>\r\n            <tr>\r\n        <td><code>address</code></td>\r\n        <td>string</td>\r\n        <td>Line 1 of the bank address</td>\r\n      </tr>\r\n            <tr>\r\n        <td><code>suburb</code></td>\r\n        <td>string</td>\r\n        <td>City, suburb or town</td>\r\n      </tr>\r\n            <tr>\r\n        <td><code>state</code></td>\r\n        <td>string</td>\r\n        <td>State or territory</td>\r\n      </tr>\r\n            <tr>\r\n        <td><code>postCode</code></td>\r\n        <td>string</td>\r\n        <td>Postal or ZIP code</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Data Types",
			"item": [
				{
					"name": "3-D Secure Authorization Status",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Value</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>AUTHORISED</code></td>\r\n        <td>Your customer completed the 3-D Secure processed correctly and verified they are the owner of the card [Liability Shift Successful]</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>ATTEMPTED</code></td>\r\n        <td>The 3-D Secure authorization process was initiated, but authorization by the customer was not deemed necessary, or could not be performed, by the 3-D Secure system [Liability Shift Successful]</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>ERROR</code></td>\r\n        <td>The 3-D Secure system itself had a error and was not able to complete the verification process</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>FAILED</code></td>\r\n        <td>Your customer was not able to complete the 3-D Secure verification so there is a risk that it is a fraudulent transaction</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>INVALID_TOKEN</code></td>\r\n        <td>The token you have attempted to lookup was not found or is not for a 3-D Secure registered transaction</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>NOT_COMPLETED</code></td>\r\n        <td>The customer did not attempt the 3-D Secure process and abandoned the transaction</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "3-D Secure Enrolment Check",
					"item": [],
					"description": "\r\n\r\n<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Value</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>FAILED</code></td>\r\n        <td>3-D Secure System failed to check the card - the 3-D Secure processor was not able to validate the card at this time</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>NOTENROLLED</code></td>\r\n        <td>The customer has a card that is not registered for 3-D Secure or is of a type that can't be authorized via 3-D Secure</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>OK</code></td>\r\n        <td>The customer has a card that supports 3-D Secure authorization, so you can proceed to redirect your customer to the 3-D Secure site</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>SERVICEUNAVAILABLE</code></td>\r\n        <td>A system error has occurred that has prevented the 3-D Secure check from being processed</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Account Type",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Value</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>BANKACCOUNT</code></td>\r\n        <td>Bank account</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>CARD</code></td>\r\n        <td>Payment card</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Bank Account Type",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Value</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>CHEQUE</code></td>\r\n        <td>Cheque account</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>SAVINGS</code></td>\r\n        <td>Savings account</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>UNSPECIFIED</code></td>\r\n        <td>No bank account type specified</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "BPAY Invoice Type",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Value</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>XERO</code></td>\r\n        <td>The BPAY CRN can be used to pay a specific XERO invoice (<code>InvoiceID</code> and <code>InvoiceReference</code> must be provided)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>SALESFORCE</code></td>\r\n        <td>The BPAY CRN can be used to pay a specific Salesforce invoice (<code>InvoiceID</code> and <code>InvoiceReference</code> must be provided)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "BPAY Assignment Type",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Value</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n\t<tr>\n        <td><code>UNSPECIFIED</code></td>\n        <td>No assignment method was specified</td>\n      </tr>\n      <tr>\n        <td><code>ADMIN</code></td>\n        <td>Internally assigned by Payrix Administration</td>\n      </tr>\n      <tr>\n        <td><code>CONSOLEPAYER</code></td>\n        <td>Assigned to a payer manually through the Console Website</td>\n      </tr>\n      <tr>\n        <td><code>CONSOLESCHEDULING</code></td>\n        <td>Assigned to a scheduled payment manually through the Console Website</td>\n      </tr>\n      <tr>\n        <td><code>API</code></td>\n        <td>Assigned using the REST API</td>\n      </tr>\n      <tr>\n        <td><code>EDDR</code></td>\n        <td>Assigned by the eDDR service</td>\n      </tr>\n      <tr>\n        <td><code>HPP</code></td>\n        <td>Assigned by the HPP service</td>\n      </tr>\n      <tr>\n        <td><code>XERO</code></td>\n        <td>Assigned to a specific Xero invoice</td>\n      </tr>\n      <tr>\n        <td><code>SALESFORCE</code></td>\n        <td>Assigned to a specific Salesforce Invoice</td>\n      </tr>\n    </tbody>\n  </table>\n</div>",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Business Status",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Value</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>INACTIVE</code></td>\r\n        <td>Inactive</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>OK</code></td>\r\n        <td>Active</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>PROVISIONAL</code></td>\r\n        <td>Provisional</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>WAITING_APPROVAL</code></td>\r\n        <td>Waiting approval</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Card Authorization Type",
					"item": [],
					"description": "Used to specify the nature of the authorization.  See below for allowed values.\n\n<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Value</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>ONEOFF</code></td>\n        <td>This is a one-off transaction where you have not stored, and will not be storing, the card details.</td>\n      </tr>\n      <tr>\n        <td><code>INITIAL</code></td>\n        <td>This is the first payment or authorization on a card that you have stored, or are intending to store, for future transactions.</td>\n      </tr>\n      <tr>\n        <td><code>RECURRING</code></td>\n        <td>Transactions processed at fixed, regular intervals not to exceed one year between transactions, representing an agreement between a cardholder and you to purchase goods or services provided over a period of time.</td>\n      </tr>\n      <tr>\n        <td><code>INSTALMENT</code></td>\n        <td>A single purchase of goods or services billed to a cardholder in multiple transactions, over a period of time agreed by the cardholder and you.</td>\n      </tr>\n      <tr>\n        <td><code>UNSCHEDULED</code></td>\n        <td>A transaction using a stored credential for a fixed or variable amount that does not occur on a scheduled or regularly occurring transaction date. This includes account top-ups triggered by balance thresholds.</td>\n      </tr>\n      <tr>\n        <td><code>INCREMENTAL</code></td>\n        <td>An incremental authorisation is typically found in hotel and car rental environments, where the cardholder has agreed to pay for any service incurred during the duration of the contract.\n\nAn incremental authorisation is where you need to seek authorisation of further funds in addition to what you have originally requested. A common scenario is additional services charged to the contract, such as extending a stay in a hotel.</td>\n      </tr>\n      <tr>\n        <td><code>DELAYED</code></td>\n        <td>A delayed charge is typically used in hotel, cruise lines and vehicle rental environments to perform a supplemental account charge after original services are rendered.</td>\n      </tr>\n      <tr>\n        <td><code>NOSHOW</code></td>\n        <td>A no-show is a transaction where you are enabled to charge for services which the cardholder entered into an agreement to purchase, but the cardholder did not meet the terms of the agreement.</td>\n      </tr>\n      <tr>\n        <td><code>REAUTH</code></td>\n        <td>Reauthorisation - a purchase made after the original purchase. A common scenario is delayed/split shipments.</td>\n      </tr>\n      <tr>\n        <td><code>RESUBMISSION</code></td>\n        <td>When the original purchase occurred, but you were not able to get authorisation at the time the goods or services were provided. It should only be used where the goods or services have already been provided, but the post-event authorisation request is declined for insufficient funds.</td>\n      </tr>\n    </tbody>\n  </table>\n</div>"
				},
				{
					"name": "Card Storage Type",
					"item": [],
					"description": "Used to specify if you are storing the card you are providing, and whether or not it is CIT or MIT (see here).  See below for allowed values.\n\n<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Value</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>CIT_ECOMMERCE</code></td>\n        <td>Customer Initiated Transaction in which your customer has just provided you new card details that you are not currently storing.\n\nIt is ECOMMERCE which means that your customer has entered their card information directly into your web-based or mobile-based application.</td>\n      </tr>\n      <tr>\n        <td><code>CIT_MOTO</code></td>\n        <td>Customer Initiated Transaction in which your customer has just provided you new card details that you are not currently storing.\n\nIt is MOTO which traditionally refers to ‚ÄúMail Order Telephone Order‚Äù meaning your customer provided their card information either by phone or a paper-based form, but it can also refer to any other method whereby the card information you are sending Payrix was obtained indirectly from the system that is now submitting the transaction.</td>\n      </tr>\n      <tr>\n        <td><code>CIT_MERCHANT_STORED</code></td>\n        <td>Customer Initiated Transaction in which you are sending Payrix card information that you currently have stored in your systems.</td>\n      </tr>\n      <tr>\n        <td><code>MIT_MERCHANT_STORED</code></td>\n        <td>Merchant Initiated Transaction in which you are sending Payrix card information that you currently have stored in your systems.</td>\n      </tr>   \n    </tbody>\n  </table>\n</div>"
				},
				{
					"name": "Card Transaction Process Type",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Value</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>COMPLETE</code></td>\n        <td>Full sale - Funds are fully collected and ready to be settled to your business</td>\n      </tr>\n      <tr>\n        <td><code>PREAUTH</code></td>\n        <td>Pre-authorisation only - Funds are reserved on the person's card and will not be collected until you use the Capture function. Pre-auths that aren't captured automatically expire (usually occurs within 2-3 days)</td>\n      </tr>\n      <tr>\n        <td><code>VERIFY</code></td>\n        <td>This allows you to perform a zero-dollar pre-authorisation for the purpose of checking that a particular card is valid and active.\n\nIt also assists in meeting card-on-file storage obligations, and customer-initiated-transaction/merchant-initiated-transaction mandates, by allowing you to verify a card using customer authentication before storage, and obtain a reference that can be provided with future recurring transactions on that card to link them to the initial authorisation.\n\nPLEASE NOTE: This ability is not currently available for all business setups and regions.  Please contact us if you wish to use this function to confirm its availability.</td>\n      </tr>\n    </tbody>\n  </table>\n</div>",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Card Type",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Value</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>AliPay</code></td>\r\n        <td>Alipay</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>Amex</code></td>\r\n        <td>American Express</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>Diners</code></td>\r\n        <td>Diners Club</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>Discover</code></td>\r\n        <td>Discover</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>JCB</code></td>\r\n        <td>JCB</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>Mastercard</code></td>\r\n        <td>Mastercard</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>PINDebit</code></td>\r\n        <td>PIN Debit</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>Unknown</code></td>\r\n        <td>Card type not known</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>Visa</code></td>\r\n        <td>Visa</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Date/Time",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Base Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td>string(25)</td>\r\n        <td>ISO 8601 format with UTC / timezone, excluding fractional seconds; e.g. <code>2018-01-09T11:07:15+00:00</code></td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Email Address",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Base Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td>string(254)</td>\r\n        <td>Regular expression: <code>[A-Za-z0-9!#$%&'&#42;+/=?^&#95;&#96;{&#124;}~-]+&#40;?:\\.[A-Za-z0-9!#$%&'&#42;+/=?^&#95;&#96;{&#124;}~-]+)&#42;@&#40;?:[A-Za-z0-9]&#40;?:[A-Za-z0-9-]&#42;[A-Za-z0-9])?\\.)+[A-Za-z0-9]&#40;?:[A-Za-z0-9-]&#42;[A-Za-z0-9])?</code></td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Error Code",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Value</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>BadRequest</code></td>\r\n        <td>The request details were not valid.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>DuplicateInvoice</code></td>\r\n        <td>An invoice with the same identifier already exists.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>DuplicatePayer</code></td>\r\n        <td>A payer with the same identifier already exists.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>DuplicateTransaction</code></td>\r\n        <td>A transaction with the same identifier already exists.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>Forbidden</code></td>\r\n        <td>Your login does not have permission to access that information.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>FunctionNotAllowed</code></td>\r\n        <td>The requested function cannot be used at this time.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>InternalServerError</code></td>\r\n        <td>A server-side error occurred during processing of your request.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>InvalidApiToken</code></td>\r\n        <td>The specified api token identifier is not valid for your request.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>InvalidBusiness</code></td>\r\n        <td>The specified business identifier is not valid for your request.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>InvalidInvoice</code></td>\r\n        <td>The specified invoice identifier is not valid for your request.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>InvalidPayer</code></td>\r\n        <td>The specified payer identifier is not valid for your request.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>InvalidPaymentMethod</code></td>\r\n        <td>The specified card, bank account or orther payment method information is not valid for your request.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>InvalidScheduledPayment</code></td>\r\n        <td>The specified scheduled payment identifier is not valid for your request.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>InvalidTemplate</code></td>\r\n        <td>The specified template identifier is not valid for your request.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>InvalidTransaction</code></td>\r\n        <td>The specified transaction identifier is not valid for your request.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>LimitsExceeded</code></td>\r\n        <td>One of the transaction processing limits set for you business has been exceeded.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>NotFound</code></td>\r\n        <td>No resource matching the specified identifier was found.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>ServiceUnavailable</code></td>\r\n        <td>The requested service is unavailable currently. Please try again later.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>ThreeDSecureException</code></td>\r\n        <td>An error occurred during 3-D Secure validation.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>Timeout</code></td>\r\n        <td>A requested operation could not be completed in a reasonable time.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>TooManyRequests</code></td>\r\n        <td>Your request rate has exceeded your permissible limits.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>TooManyTransactions</code></td>\r\n        <td>Your transaction rate has exceeded your permissible limits.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>Unauthorized</code></td>\r\n        <td>The requested operation requires authorization.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Fraud Check Result",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Value</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n    \t<tr>\r\n        <td><code>PROCEED</code></td>\r\n        <td>Minimal risk of fraud - it is ok to immediately proceed to process the payment</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>SUSPICIOUS_HIGH</code></td>\r\n        <td>Moderate risk of fraud - it is recommended that the transaction be reviewed or escalated</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>SUSPICIOUS_LOW</code></td>\r\n        <td>Moderate risk of fraud - it is recommended that the transaction be reviewed or escalated</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>DECLINE</code></td>\r\n        <td>High risk of fraud - the transaction should not be processed</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>USE3DS</code></td>\r\n        <td>Moderate to High risk of fraud - your customer needs to be redirected to the 3-D Secure site specified in the \"RedirectUrl\" parameter to mitigate the risk.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>NO3DS</code></td>\r\n        <td>Use of 3-D Secure is not possible as the enrollment status of the customer's card could not be completed. You can make a determination of whether or not you want to proceed with the transaction.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>ERROR</code></td>\r\n        <td>An error occurred while performing the fraud check and the risk of fraud was not able to be determined at this time</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Invoice Event Type",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Value</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>CREATED</code></td>\r\n        <td>An  invoice created event.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>EMAILED</code></td>\r\n        <td>An invoice emailed event (most recent email only).</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>PAID</code></td>\r\n        <td>An invoice paid event.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>VOIDED</code></td>\r\n        <td>An invoice voided event.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Invoice Status",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n    <th>InvoiceStatus</th>\n        <th>Value</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n<td>0</td>\n        <td><code>PENDING</code></td>\n        <td>The invoice has not been paid.</td>\n      </tr>\n      <tr>\n<td>1</td>\n        <td><code>PAID</code></td>\n        <td>The invoice has been paid.</td>\n      </tr>\n      <tr>\n<td>2</td>\n        <td><code>VOIDED</code></td>\n        <td>The invoice has been voided.</td>\n      </tr>\n      <tr>\n<td>3</td>\n        <td><code>OVERDUE</code></td>\n        <td>The invoice is overdue for payment.</td>\n      </tr>\n    </tbody>\n  </table>\n</div>",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Payer Change Status",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Value</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>A</code></td>\r\n        <td>Active</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>A-FNL</code></td>\r\n        <td>Active - Contract Finalised</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>A-NCT</code></td>\r\n        <td>Active - Unable to Contact</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>A-UDC</code><strong>*</strong></td>\r\n        <td>Active - Until Date (Cancel)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>A-UDS</code><strong>*</strong></td>\r\n        <td>Active - Until Date (Suspend)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>C</code></td>\r\n        <td>Cancelled</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>S</code></td>\r\n        <td>Suspended</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>S-DBC</code></td>\r\n        <td>Suspend - Debt Collection</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>S-DTE</code><strong>*</strong></td>\r\n        <td>Suspend - Until Date</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>S-INC</code></td>\r\n        <td>Suspend - Incomplete Setup</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>S-MRJ</code></td>\r\n        <td>Suspend - Multiple Rejections</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>S-NCT</code></td>\r\n        <td>Suspend - Unable to Contact</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n__*__ Use the `statusChangeDate` parameter with these statuses.\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Payer Status Code",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Value</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>A</code></td>\r\n        <td>Active</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>A-BPAY</code></td>\r\n        <td>Active - BPAY</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>A-CLP</code></td>\r\n        <td>Active - Cancellation Payment Plan</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>A-CRR</code></td>\r\n        <td>Active - Cancellation Request Revoked</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>A-EXT</code></td>\r\n        <td>Active - Extended Term</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>A-FNL</code></td>\r\n        <td>Active - Contract Finalised</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>A-NCE</code></td>\r\n        <td>Active - Unable to Contact (Extended)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>A-NCT</code></td>\r\n        <td>Active - Unable to Contact</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>A-NEW</code></td>\r\n        <td>Active - New</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>A-RNW</code></td>\r\n        <td>Active - Renewal</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>A-SPC</code></td>\r\n        <td>Active - Suspension Period Completed</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>A-UDC</code></td>\r\n        <td>Active - Until Date (Cancel)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>A-UDS</code></td>\r\n        <td>Active - Until Date (Suspend)</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>ALL-A</code><strong>*</strong></td>\r\n        <td>All Active Status Types</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>ALL-C</code><strong>*</strong></td>\r\n        <td>All Cancelled Status Types</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>ALL-S</code><strong>*</strong></td>\r\n        <td>All Suspended Status Types</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>C</code></td>\r\n        <td>Cancelled</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>C-ADM</code></td>\r\n        <td>Cancelled - Administration</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>C-CPS</code></td>\r\n        <td>Cancelled - Payment Stop By Customer</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>C-DED</code></td>\r\n        <td>Cancelled - Customer Deceased</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>C-INA</code></td>\r\n        <td>Cancelled - Cancelled due to inactivity</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>S</code></td>\r\n        <td>Suspended</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>S-BAC</code></td>\r\n        <td>Suspended - Bank Account Closed</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>S-BRR</code></td>\r\n        <td>Suspended - Waiting Bank Registration</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>S-CLM</code></td>\r\n        <td>Suspended - Claim</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>S-CRD</code></td>\r\n        <td>Suspended - Invalid Creditor Profile</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>S-DBC</code></td>\r\n        <td>Suspended - Debt Collection</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>S-DDR</code></td>\r\n        <td>Suspended - Invalid DDR provided</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>S-DTE</code></td>\r\n        <td>Suspended - Until Date</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>S-EXP</code></td>\r\n        <td>Suspended - Expired Credit Card</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>S-IBA</code></td>\r\n        <td>Suspended - Invalid Bank Account Number</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>S-IBB</code></td>\r\n        <td>Suspended - Invalid Bank Account BSB</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>S-ICC</code></td>\r\n        <td>Suspended - Invalid Credit Card Data</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>S-ICD</code></td>\r\n        <td>Suspended - Invalid Contact Details</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>S-INC</code></td>\r\n        <td>Suspended - Incomplete Setup</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>S-MOW</code></td>\r\n        <td>Suspended - Money Order</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>S-MRJ</code></td>\r\n        <td>Suspended - Multiple Rejections</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>S-NCT</code></td>\r\n        <td>Suspended - Unable to Contact</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>S-PCL</code></td>\r\n        <td>Suspended - Pending Cancellation</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n__*__ Available for payer search only\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Payer Status",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Value</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>ACTIVE</code></td>\r\n        <td>Active</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>CANCELLED</code></td>\r\n        <td>Cancelled</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>SUSPENDED</code></td>\r\n        <td>Suspended</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Payment Method",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Value</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>ALIPAY</code></td>\r\n        <td>Alipay</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>AMEX</code></td>\r\n        <td>American Express Card</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>BANKACCOUNT</code></td>\r\n        <td>Bank Account</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>BPAY</code></td>\r\n        <td>BPAY Payment</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>CUP</code></td>\r\n        <td>Cup</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>DINERS</code></td>\r\n        <td>Diners Club Card</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>DISCOVER</code></td>\r\n        <td>Discover Card</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>JCB</code></td>\r\n        <td>JCB Card</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>MASTERCARD</code></td>\r\n        <td>Mastercard</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>PINDEBIT</code></td>\r\n        <td>PIN Debit</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>VISA</code></td>\r\n        <td>Visa Card</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>CARD</code></td>\r\n        <td>Unidentified credit/debit card</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>CASH</code></td>\r\n        <td>Cash</td>\r\n      </tr>\r\n    <tr>\r\n        <td><code>CHEQUE</code></td>\r\n        <td>Cheque / check</td>\r\n      </tr>\r\n            <tr>\r\n        <td><code>STORECREDIT</code></td>\r\n        <td>Store credit / Credit Note</td>\r\n      </tr>\r\n            <tr>\r\n        <td><code>BANKTRANSFER</code></td>\r\n        <td>Bank Transfer / Direct Credit / ACH</td>\r\n      </tr>\r\n            <tr>\r\n        <td><code>INVOICEACCOUNT</code></td>\r\n        <td>Invoice / Account</td>\r\n      </tr>\r\n            <tr>\r\n        <td><code>PAYPAL</code></td>\r\n        <td>Paypal</td>\r\n      </tr>\r\n    <tr>\r\n        <td><code>APP</code></td>\r\n        <td>Application (e.g. Uber Eats, Clipp)</td>\r\n      </tr>\r\n      </tr>\r\n    <tr>\r\n        <td><code>GIFTCARD</code></td>\r\n        <td>Gift card / Gift voucher</td>\r\n      </tr>\r\n      </body>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Phone Number",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Base Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td>string(20)</td>\r\n        <td>Regular expression: <code>[0-9-+()\\s]{1,20}</code></td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Point-of-Sale Process Type",
					"item": [],
					"description": "| Value | Description |\r\n| --- | --- |\r\n| `COMPLETE` | Full sale - funds are fully collected/captured and ready to be settled to your business |\r\n| `REFUND` | A refund of a previously collected/captured transaction |\r\n| `CREDIT` | A credit of funds to a cardholder when there is no previous transaction that can be refunded (also known as a blind refund) |\r\n"
				},
				{
					"name": "Point-of-Sale Transaction Type",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Value</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>CARD</code></td>\n        <td>Credit/debit card</td>\n      </tr>\n      <tr>\n        <td><code>CASH</code></td>\n        <td>Cash</td>\n      </tr>\n\t\t<tr>\n        <td><code>CHEQUE</code></td>\n        <td>Cheque / check</td>\n      </tr>\n            <tr>\n        <td><code>STORECREDIT</code></td>\n        <td>Store credit / Credit Note</td>\n      </tr>\n            <tr>\n        <td><code>BANKTRANSFER</code></td>\n        <td>Bank Transfer / Direct Credit / ACH</td>\n      </tr>\n            <tr>\n        <td><code>INVOICEACCOUNT</code></td>\n        <td>Invoice / Account</td>\n      </tr>\n            <tr>\n        <td><code>PAYPAL</code></td>\n        <td>Paypal</td>\n      </tr>\n\t\t<tr>\n        <td><code>APP</code></td>\n        <td>Application (e.g. Uber Eats, Clipp)</td>\n      </tr>\n\t<tr>\n        <td><code>GIFTCARD</code></td>\n        <td>Gift card / Gift voucher</td>\n      </tr>\n    </tbody>\n  </table>\n</div>",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Rejection Recovery Status",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Value</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>W</code></td>\r\n        <td>Waiting - PayUpNow request has been sent out to for this transaction, but the customer has not yet actioned it.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>S</code></td>\r\n        <td>Successful - the customer received the PayUpNow request and has used the payment link to successfully process a catchup payment.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>R</code></td>\r\n        <td>Rejected - the customer received the PayUpNow request and has used the payment link but the transaction they attempted to process has rejected.  Note that the customer can continue to attempt to process the catch up payment again until the payment link is expired.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>E</code></td>\r\n        <td>Expired - the payment link on the PayUpNow request has expired without a successful payment being made, and it can no longer be used.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>C</code></td>\r\n        <td>Cancelled - the PayUpNow payment link has been cancelled and is no longer usable.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>PS</code></td>\r\n        <td>PayUp Successful - designates a successful transaction that was processed as a catchup payment for a previously rejected transaction.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>PR</code></td>\r\n        <td>PayUp Rejected - designates a rejected transaction that was an attempted catchup payment for a previously rejected transaction.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Schedule Frequency",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Value</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>DAILY</code></td>\r\n        <td>Once every day</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>WEEKLY</code></td>\r\n        <td>Once every week</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>FORTNIGHTLY</code></td>\r\n        <td>Once every two weeks</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>MONTHLY</code></td>\r\n        <td>Once every month</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Schedule Type",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Value</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>LIMITED</code></td>\r\n        <td>A schedule that is limited to a particular number of payments (set via the <code>limitToTransactionCount</code> parameter) or until a particular amount of money has been collected (set via the <code>limitToTransactionAmount</code> parameter).  For limited schedules, if a payment is rejected it will be re-added into the schedule to be attempted again.</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>UNENDING</code></td>\r\n        <td>Payments will continue to be debited at the given frequency until the payer is either cancelled or suspended or a new schedule is generated.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Settlement Type",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Value</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>BILL</code></td>\r\n        <td>Collection of funds for a one-off bill that was added to your account for a special service or circumstance</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>CHARGEBACK</code></td>\r\n        <td>Recovery of funds for a credit card chargeback</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>CLAIM</code></td>\r\n        <td>Recovery of funds for a bank account claim</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>EARLY_SETTLEMENT</code></td>\r\n        <td>Funds paid to you upfront if you are using our early settlement service</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>EARLY_SETTLEMENT_REPAY</code></td>\r\n        <td>Pay back of funds paid to you upfront if you are using our early settlement service</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>LATE_REJECTION</code></td>\r\n        <td>Recovery of funds for a transaction that was initially settled to you but was later rejected due to late notification by the bank</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>MISCELLANEOUS</code></td>\r\n        <td>Collection of fees for other types of non-transaction related services not included in the above categories</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>OTHER_TRANSACTION</code></td>\r\n        <td>Payment of funds or collection of fees for transaction activities not included in the above categories</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>REFUND</code></td>\r\n        <td>Recovery of funds from a refunded transaction</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>REJECTION</code></td>\r\n        <td>Collection of funds for a rejected transaction</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>SETTLEMENT</code></td>\r\n        <td>Payment of funds to you for a successful transaction process using our merchant facility</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>SETTLEMENT_DIRECT</code></td>\r\n        <td>Collection of funds for a transaction settled directly to you through use of your own merchant facilities</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>FEE</code></td>\r\n        <td>Incurred transaction fees</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Transaction Status",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Value</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>C</code></td>\n        <td>Cleared - Processed by Payrix and debited from Payers account</td>\n      </tr>\n      <tr>\n        <td><code>L</code></td>\n        <td>Late Rejection - Charge back in progress</td>\n      </tr>\n      <tr>\n        <td><code>LS</code></td>\n        <td>Late Rejection (Settled) - Charge back successful </td>\n      </tr>\n      <tr>\n        <td><code>N</code></td>\n        <td>Not Submitted - Scheduled transaction to be processed in next Debit Run</td>\n      </tr>\n      <tr>\n        <td><code>P</code></td>\n        <td>Pending - Scheduled transaction to be processed in next Processing Run</td>\n      </tr>\n      <tr>\n        <td><code>PRE</code></td>\n        <td>Pre-auth awaiting capture</td>\n      </tr>\n      <tr>\n        <td><code>R</code></td>\n        <td>Rejected - Transaction Failed</td>\n      </tr>\n      <tr>\n        <td><code>RF</code></td>\n        <td>Refunded</td>\n      </tr>\n      <tr>\n        <td><code>S</code></td>\n        <td>Settled</td>\n      </tr>\n    </tbody>\n  </table>\n</div>",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Transaction Result Status Code",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Value</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n\t\t<tr>\n        <td><code>S</code></td>\n        <td><b>Successful</b> - the transaction was processed successfully and the funds have been transferred.</td>\n      </tr>\n      <tr>\n        <td><code>F</code></td>\n        <td><b>Failed/Rejected/Declined</b> - The transaction reached the bank but the funds were not able to be obtained and the payment was dishonoured.  See the Transaction Sub Status Code for the reason for the transaction failing.</td>\n      </tr>\n      <tr>\n        <td><code>R</code></td>\n        <td><b>Unable to process - retry later</b> - the transaction was not processed, possibly due to bank unavailability or technical malfunction.  The transaction may be able to be processed at a later time (please note that if you wish to re-attempt to process the transaction again later you will need to provide a different transaction reference).</td>\n      </tr>\n      <tr>\n        <td><code>N</code></td>\n        <td><b>In Progress</b> - the transaction is still being processed and the result is not yet determined.</td>\n      </tr>\n<tr>\n        <td><code>V</code></td>\n        <td><b>Verification Required</b> - <em>3-D Secure Only</em> - if you are using 3-D Secure, this means the challenge scenario has been triggered and you must redirect your customer to the URL that is included in the transaction response (<a href=\"#faff43cd-5e44-471c-ad23-64a1fd28f90f\">see here</a>).</td>\n      </tr>\n    </tbody>\n  </table>\n</div>",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Transaction Sub-Status Code",
					"item": [],
					"description": "## Special Notes üìë\n\nA rejection fee will be charged if detailed below. If the Payer Status changes, and a transaction is scheduled when the Payer is in any status other than Active, the transaction fee will not be charged. If the transaction is not associated with a payer, and a rejection fee is possible, the rejection will always be charged.\n\n<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Value</th>\n        <th>Description</th>\n        <th>Payer Status Changed to</th>\n        <th>Rejection  Fee Possible?</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>R1</code></td>\n        <td>Insufficient funds</td>\n        <td>A</td>\n        <td>Yes</td>\n      </tr>\n      <tr>\n        <td><code>R2</code></td>\n        <td>Invalid bank account number</td>\n        <td>S-IBA</td>\n        <td>Yes</td>\n      </tr>\n      <tr>\n        <td><code>R3</code></td>\n        <td>Invalid credit card</td>\n        <td>S-ICC</td>\n        <td>Yes</td>\n      </tr>\n      <tr>\n        <td><code>R4</code></td>\n        <td>Expired credit card</td>\n        <td>S-EXP</td>\n        <td>Yes</td>\n      </tr>\n      <tr>\n        <td><code>R5</code></td>\n        <td>Invalid transaction</td>\n        <td>-</td>\n        <td>No</td>\n      </tr>\n      <tr>\n        <td><code>R6</code></td>\n        <td>Transaction declined</td>\n        <td>-</td>\n        <td>Yes</td>\n      </tr>\n      <tr>\n        <td><code>R7</code></td>\n        <td>Authority revoked by payer</td>\n        <td>C-CPS</td>\n        <td>Yes</td>\n      </tr>\n      <tr>\n        <td><code>R8</code></td>\n        <td>Payer deceased</td>\n        <td>C-DED</td>\n        <td>Yes</td>\n      </tr>\n      <tr>\n        <td><code>R9</code></td>\n        <td>Invalid bank account BSB</td>\n        <td>S-IBB</td>\n        <td>Yes</td>\n      </tr>\n      <tr>\n        <td><code>R10</code></td>\n        <td>Bank account closed</td>\n        <td>S-BAC</td>\n        <td>Yes</td>\n      </tr>\n      <tr>\n        <td><code>R11</code></td>\n        <td>Invalid payer contact details</td>\n        <td>S-ICD</td>\n        <td>Yes</td>\n      </tr>\n      <tr>\n        <td><code>R12</code></td>\n        <td>Direct debit claim</td>\n        <td>S-CLM</td>\n        <td>Yes</td>\n      </tr>\n      <tr>\n        <td><code>R13</code></td>\n        <td>Credit card chargeback</td>\n        <td>S-CLM</td>\n        <td>Yes</td>\n      </tr>\n      <tr>\n        <td><code>R14</code></td>\n        <td>Stolen/pick up card</td>\n        <td>S-ICC</td>\n        <td>Yes</td>\n      </tr>\n      <tr>\n        <td><code>R15</code></td>\n        <td>Limits exceeded</td>\n        <td>-</td>\n        <td>No</td>\n      </tr>\n      <tr>\n        <td><code>R16</code></td>\n        <td>Pre-auth expired</td>\n        <td>-</td>\n        <td>No</td>\n      </tr>\n      <tr>\n        <td><code>R17</code></td>\n        <td>Not processed (payer inactive)</td>\n        <td>-</td>\n        <td>No</td>\n      </tr>\n      <tr>\n        <td><code>R18</code></td>\n        <td>Fraud protection triggered</td>\n        <td>-</td>\n        <td>No</td>\n      </tr>\n      <tr>\n        <td><code>R19</code></td>\n        <td>Voided</td>\n        <td>-</td>\n        <td>No</td>\n      </tr>\n      <tr>\n        <td><code>R20</code></td>\n        <td>Fraud Check / 3-D Secure: Authentication Failed</td>\n        <td>-</td>\n        <td>No</td>\n      </tr>\n      <tr>\n        <td><code>R21</code></td>\n        <td>Fraud Check / 3-D Secure: Unable to Authenticate</td>\n        <td>-</td>\n        <td>No</td>\n      </tr>\n      <tr>\n        <td><code>R22</code></td>\n        <td>Fraud Check / 3-D Secure: Transaction Abandoned</td>\n        <td>-</td>\n        <td>No</td>\n      </tr>\n      <tr>\n        <td><code>R23</code></td>\n        <td>Fraud Check / 3-D Secure: Error Occurred</td>\n        <td>-</td>\n        <td>No</td>\n      </tr>\n      <tr>\n        <td><code>RF</code></td>\n        <td>Partially refunded</td>\n        <td></td>\n        <td>-</td>\n      </tr>\n      <tr>\n        <td><code>UR</code></td>\n        <td>Under review</td>\n        <td>-</td>\n        <td>-</td>\n      </tr>\n    </tbody>\n  </table>\n</div>",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Transaction Type",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\n  <table>\n    <thead>\n      <tr>\n        <th>Value</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><code>BD</code></td>\n        <td>Business fee debit</td>\n      </tr>\n      <tr>\n        <td><code>BPAY</code></td>\n        <td>BPAY payment</td>\n      </tr>\n      <tr>\n        <td><code>CST</code></td>\n        <td>Creditor settlement</td>\n      </tr>\n      <tr>\n        <td><code>PDB</code></td>\n        <td>Payer scheduled bank account debit</td>\n      </tr>\n      <tr>\n        <td><code>PDC</code></td>\n        <td>Payer scheduled credit card debit</td>\n      </tr>\n      <tr>\n        <td><code>PLN</code></td>\n        <td>Payer loan</td>\n      </tr>\n      <tr>\n        <td><code>POS</code></td>\n        <td>Point-of-sale card payments</td>\n      </tr>\n      <tr>\n        <td><code>RT</code></td>\n        <td>Real-time card payment</td>\n      </tr>\n      <tr>\n        <td><code>STL</code></td>\n        <td>Business settlement</td>\n      </tr>\n      <tr>\n        <td><code>STLU</code></td>\n        <td>Business upfront settlement</td>\n      </tr>\n      <tr>\n        <td><code>ZDA</code></td>\n        <td>Card verification (zero dollar authorization)</td>\n      </tr>\n    </tbody>\n  </table>\n</div>",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Transaction Source",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Value</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>IVR</code></td>\r\n        <td>The real-time transaction was initiated via an IVR phone system</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Token Type",
					"item": [],
					"description": "<div class=\"is-table-wrapper\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Value</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td><code>EDDR</code></td>\r\n        <td>Electronic direct debit request</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>HPP</code></td>\r\n        <td>Hosted payment page</td>\r\n      </tr>\r\n      <tr>\r\n        <td><code>VAULT</code></td>\r\n        <td>Hosted vault service</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Token Status Code",
					"item": [],
					"description": "| Value | Description |\n| --- | --- |\n| `WAITING` | Token URL not yet accessed |\n| `VALIDATED` | Token URL loaded |\n| `PROCESSED_SUCCESSFUL` | URL completed successfully |\n| `PROCESSED_REJECTED` | URL Opened, not completed and closed |\n| `ERROR` | Internal error received |\n| `FRAUD_CHECK_DECLINE` | Payment attempted but declined by Fraud check |\n| `FRAUD_CHECK_ERROR` | Payment attempted but Fraud Check error received |\n| `EXPIRED` | Token has expired and is no longer useable |",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "SOAP ‚Üí REST Conversion ",
			"item": [],
			"description": "The purpose of this section of the document is to guide you through moving from a SAOP integration to a RESTful integration.\n\nThe table below maps the SOAP Functions to the equivalent REST Function.\n\nREST offers you advanced documentation, support and functionality.\n\n| SOAP | REST |\n| --- | --- |\n| `PayerSave` | [POST Add a new Payer](#18425722-4aa3-45cf-9b28-65926620bf32) |\n| `PayerSavePaymentMethod` | [PUT Add or update a Payers bank account details](#79f31156-c35f-468a-8fa5-1a006b4cbf9e)  <br>[PUT Add or update a Payers card details](#488ca221-7768-4898-9458-6611d837dffe)  <br>[DELETE Remove a Payers payment methods](#610c7cc9-cbc5-40cd-a3bd-764cc67d1cd3) |\n| `PayerChangeStatus` | [PUT Change a Payers status](#8188cb84-cf5f-469e-b51f-406d4dbc761a) |\n| `PayerSearch / PayerSearchXml` | [GET Look up a specific Payers details](#4e45865e-7467-495a-9a21-87bfb9991b0e)  <br>[GET Search for multiple Payers](#5b76aef4-f360-4e4a-bfd7-49bec130f971)  <br>[GET Look up a Payers payment options](#e6b8e2bd-b96a-4e0b-aec9-5946b29efcc4) |\n| `ScheduleSinglePayment` | [POST Schedule a single payment](#4d877f1d-9149-4b1c-a68a-fc8e645bb975) |\n| `ScheduleTransactionWithAutoCreatePayer` | Not Available |\n| `ScheduleGenerate` | [POST Schedule multiple future payments](#3f248478-5809-4f57-90f3-bdf3d200513b) |\n| `ScheduleGenerate` | [DELETE Delete All Payments](https://null) |\n| `ScheduleRemoveSinglePayment` | [DELETE Delete Single Payment](#e944a6ec-0a9a-4c8f-90d5-5a72614e7bc4) |\n| `ScheduleChangeAmounts` | [PATCH Change Payment Amounts](#9c915b75-93ab-4343-9eba-91bc86b83035) |\n| `ScheduleSearch / ScheduleSearchXml` | [GET Look up a scheduled payment](#20399187-362a-46a8-973f-66badbcdf665)  <br>[GET Find a Payers scheduled payments](#359777b3-4ffe-464b-a120-67c3a3c062e8)  <br>[GET Search all scheduled payments](https://) |\n| `GETNewStatusUpdates / GetNewStatusUpdatesXml` | [GET Search for transaction status changes](https://) |\n| `GETNewStatusUpdatesByStatus / GetNewStatusUpdatesByStatusXml` | [GET Search for transaction status changes](#4e87eb46-2ed5-4469-9ab4-904b99a2a738) |\n| `SetNewStatusUpdateAsReceived` | [POST Acknowledge transaction status change](#75030710-b304-451f-8a47-c94e0e7829cd) |\n| `TransactionStatus` | [GET Transaction Lookup](#d4793679-1ed3-419e-96b3-3821cfa78061)  <br>[GET Search live card transactions](#0986efcc-2ba8-46bc-b436-bce88a4e1a6c)  <br>[GET Look up single live card transaction](#ac43557c-2b7a-4530-85cd-9f9af66ff790) |\n| `TransactionSearch / TransactionSearchXml` | [GET Transaction Search](#4ff99326-bb8c-44a2-aa7a-81887b98a57f) |\n| `CreditCardTransaction` | [POST Make a live card transaction](#7321df17-1479-4261-b20f-6afe4ba489cd) |\n| `CreditCardTransactionUpdate` | [POST Process a pre authorised card transaction](#18cec791-7643-47be-8f0d-b36d44c0e366) |\n| `StoredCreditCardTransaction` | [POST Process a transaction using saved card details](#220402de-e5bf-43c5-8a71-7410706c7654) |\n| `CheckService` | [GET Check your business details](#5c874aef-7bcc-40bf-9eef-d043de71c35a) |\n| `RefundTransaction` | [POST Refund a live card transaction](#8b39b171-7d6b-40e8-99eb-5644bb527376) |\n| `ChargeBusiness` | Not Available |\n| `ClearPayerOwingFees` | Not Available |\n| `WalletTransaction` | Not Available |",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "FAQ",
			"item": [],
			"description": "You can browse the topics below to find answers to Frequently Asked Questions.\r\n\r\n##### TEST CARDS\r\n\r\nYou can find details of test cards that can be used in sandbox <a href=\"#7811f629-130a-475e-b0e8-19a157742835\">here</a>\r\n\r\n\r\n##### Real Time Transaction life cycle\r\n\r\nReal Time transactions will receive a status of Settled or Rejected immediately after being processed.\r\nThe status will be returned in the response to the API. Please see the model for the specific API call being used.\r\n\r\n##### Scheduled Transaction life cycle\r\n\r\nRecurring Transactions will be scheduled and all being well the response to the API call would be 200.\r\nThis means the transaction has been scheduled successfully but will not indicate if funds have been collected. \r\nTo find if a transaction has been successful or rejected use the <a href=\"#79b5ccfc-9b20-4034-82b2-54a70dae2c7e\">status changes</a> endpoint to track how these change, from Pending to Cleared to Successful or Rejected.\r\n\r\n\r\n\r\n\r\n",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearer-token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}