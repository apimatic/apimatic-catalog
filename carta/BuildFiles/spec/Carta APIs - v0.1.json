{
  "openapi": "3.0.0",
  "info": {
    "title": "Carta APIs",
    "description": "Carta APIs",
    "version": "v1alpha1",
    "contact": {
      "name": "Carta - Developer Ecosystem Team",
      "email": "developers@carta.com"
    }
  },
  "tags": [
    {
      "name": "carta.proto.publicapi.compensation.v1alpha1.CompensationBenchmarksService"
    },
    {
      "name": "carta.proto.publicapi.corporations.v1alpha1.CorporationsService"
    },
    {
      "name": "carta.proto.publicapi.draftissuers.v1alpha1.DraftIssuersService"
    },
    {
      "name": "carta.proto.publicapi.files.v1alpha1.FileService"
    },
    {
      "name": "carta.proto.publicapi.infra.metadata.v1alpha1.MetadataService"
    },
    {
      "name": "carta.proto.publicapi.investors.capitalactivity.v1alpha1.CapitalActivityService"
    },
    {
      "name": "carta.proto.publicapi.investors.capitalization.v1alpha1.CapitalizationTablesService"
    },
    {
      "name": "carta.proto.publicapi.investors.firms.v1alpha1.FirmsService"
    },
    {
      "name": "carta.proto.publicapi.investors.funds.v1alpha1.FundsService"
    },
    {
      "name": "carta.proto.publicapi.investors.investments.v1alpha1.InvestmentsService"
    },
    {
      "name": "carta.proto.publicapi.investors.permissions.v1alpha1.PermissionsService"
    },
    {
      "name": "carta.proto.publicapi.investors.securities.v1alpha1.SecuritiesService"
    },
    {
      "name": "carta.proto.publicapi.investors.workflows.v1alpha1.WorkflowsService"
    },
    {
      "name": "carta.proto.publicapi.issuers.capitalization.v1alpha1.CapitalizationTableService"
    },
    {
      "name": "carta.proto.publicapi.issuers.draftsecurities.v1alpha1.DraftSecuritiesService"
    },
    {
      "name": "carta.proto.publicapi.issuers.securities.optionexercises.v1alpha1.ExerciseService"
    },
    {
      "name": "carta.proto.publicapi.issuers.securities.v1alpha1.SecuritiesService"
    },
    {
      "name": "carta.proto.publicapi.issuers.securitiestemplates.v1alpha1.SecuritiesTemplatesService"
    },
    {
      "name": "carta.proto.publicapi.issuers.v1alpha1.IssuersService"
    },
    {
      "name": "carta.proto.publicapi.opencaptables.v1alpha1.OpenCapTablesService"
    },
    {
      "name": "carta.proto.publicapi.products.v1alpha1.UserProductsService"
    },
    {
      "name": "carta.proto.publicapi.shareholder.portfolio.fundinvestments.v1alpha1.FundInvestmentService"
    },
    {
      "name": "carta.proto.publicapi.shareholder.portfolio.securities.v1alpha1.SecuritiesService"
    },
    {
      "name": "carta.proto.publicapi.shareholder.portfolio.securitytransactions.v1alpha1.SecurityTransactionsService"
    },
    {
      "name": "carta.proto.publicapi.shareholder.portfolio.v1alpha1.ShareholderPortfolioService"
    },
    {
      "name": "carta.proto.publicapi.users.v1alpha1.UserService"
    }
  ],
  "paths": {
    "/v1alpha1/corporations": {
      "get": {
        "summary": "List Corporations",
        "description": "Retrieve a list of corporations that a user has access to in Carta.",
        "operationId": "v1alpha1.corporations.listCorporations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1ListCorporationsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "pageSize",
            "description": "The maximum number of corporations to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 corporations will be returned.\n\nThe maximum value is 50; values above 50 will be coerced to 50.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "A page token received as `nextPageToken` in a previous List Corporations response. Provide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters must be kept consistent with those used in the request where the page token was obtained.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Corporations"
        ],
        "security": [
          {
            "OAuth2": [
              "read_corporation_info"
            ]
          }
        ]
      }
    },
    "/v1alpha1/corporations/{corporationId}/compensationBenchmarkAttributes": {
      "get": {
        "summary": "Get Compensation Benchmark Attributes",
        "description": "Retrieve all valid compensation benchmark attributes based on a corporation's plan in Carta Total Compensation.",
        "operationId": "v1alpha1.compensation.GetCompensationBenchmarkAttributes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1GetCompensationBenchmarkAttributesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "corporationId",
            "description": "The identifier of the corporation or issuer. Identifiers can be retrieved via the <a href=\"https://docs.carta.com/carta/reference/v1alpha1listcorporations\">List Corporations</a> endpoint.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Compensation"
        ],
        "security": [
          {
            "OAuth2": [
              "read_compensation_benchmarks"
            ]
          }
        ]
      }
    },
    "/v1alpha1/corporations/{corporationId}/compensationBenchmarks": {
      "get": {
        "summary": "Get Compensation Benchmarks",
        "description": "Retrieve all compensation benchmarks based on a corporation's compensation plan in Carta Total Compensation.",
        "operationId": "v1alpha1.compensation.GetCompensationBenchmarks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1GetCompensationBenchmarksResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "corporationId",
            "description": "The identifier of the corporation or issuer. Identifiers can be retrieved via the <a href=\"https://docs.carta.com/carta/reference/v1alpha1listcorporations\">List Corporations</a> endpoint.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postMoneyValuationBucket",
            "description": "The peer group used to segment the underlying data. Possible values can be retrieved from the `GetCompensationBenchmarkAttributes` endpoint.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "geoAdjustmentLocation",
            "description": "The location used to geo-adjust the benchmarks. Possible values can be retrieved from the `GetCompensationBenchmarkAttributes` endpoint.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobArea",
            "description": "The job area that the underlying data is segmented by. Possible values can be retrieved from the `GetCompensationBenchmarkAttributes` endpoint.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "compensationType",
            "description": "The compensation type of the benchmark. Possible values can be retrieved from the `GetCompensationBenchmarkAttributes` endpoint.\n\nAn empty `compensationType` returns benchmark values for all compensation types.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobSpecialization",
            "description": "The job specialization that the underlying data is segmented by. Possible values can be retrieved from the `GetCompensationBenchmarkAttributes` endpoint.\n\nAn empty `jobSpecialization` returns the benchmarks for the roll-up segment.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobLevel",
            "description": "The job level that the underlying data is segmented by. Possible values can be retrieved from the `GetCompensationBenchmarkAttributes` endpoint.\n\nAn empty job_level returns the benchmarks for all job levels.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "description": "The maximum number of benchmarks to return. The service may return fewer than this value.\n\nIf unspecified, at most 100 benchmarks will be returned.\n\nThe maximum value is 100; values above 100 will be coerced to 100.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "A page token received as `nextPageToken` in a previous Get Compensation Benchmarks response. Provide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters must be kept consistent with those used in the request where the page token was obtained.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Compensation"
        ],
        "security": [
          {
            "OAuth2": [
              "read_compensation_benchmarks"
            ]
          }
        ]
      }
    },
    "/v1alpha1/draftIssuers": {
      "post": {
        "summary": "Create Draft Issuer",
        "description": "Create a draft version of an issuer.",
        "operationId": "v1alpha1.draftIssuers.createDraftIssuer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1CreateDraftIssuerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1alpha1CreateDraftIssuerRequest"
              }
            }
          },
          "description": "The request for the CreateDraftIssuer endpoint.",
          "required": true
        },
        "tags": [
          "Draft Issuer"
        ],
        "security": [
          {
            "OAuth2": [
              "readwrite_draftissuers"
            ]
          }
        ]
      }
    },
    "/v1alpha1/draftIssuers/{id}": {
      "get": {
        "summary": "Get Draft Issuer",
        "description": "Retrieve a draft version of an issuer.",
        "operationId": "v1alpha1.draftIssuers.getDraftIssuer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1GetDraftIssuerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "The Draft Issuer's id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Draft Issuer"
        ],
        "security": [
          {
            "OAuth2": [
              "read_draftissuers",
              "readwrite_draftissuers"
            ]
          }
        ]
      }
    },
    "/v1alpha1/files:upload": {
      "post": {
        "summary": "Upload File",
        "description": "Synchronously upload a generic file as a binary payload.",
        "operationId": "v1alpha1.files.uploadFile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1UploadFileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1alpha1UploadFileRequest"
              }
            }
          },
          "description": "UploadFileRequest is the request object for the UploadFile method.",
          "required": true
        },
        "tags": [
          "Files"
        ],
        "security": [
          {
            "OAuth2": [
              "readwrite_file_upload"
            ]
          }
        ]
      }
    },
    "/v1alpha1/investors/firms": {
      "get": {
        "summary": "List Firms",
        "description": "Retrieves investment firms.",
        "operationId": "v1alpha1.investors.listFirms",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1ListFirmsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "pageSize",
            "description": "The maximum number of firms to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 firms will be returned.\n\nThe maximum value is 50; values above 50 will be coerced to 50.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "The page token received in a previous List Firms response. Submit this token to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `ListFirms` must match the call that received the page token.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Investors"
        ],
        "security": [
          {
            "OAuth2": [
              "read_investor_firms"
            ]
          }
        ]
      }
    },
    "/v1alpha1/investors/firms/{firmId}/funds": {
      "get": {
        "summary": "List Funds",
        "description": "Retrieves the investment funds of a given investment firm.",
        "operationId": "v1alpha1.investors.listFunds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1ListFundsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "firmId",
            "description": "The identifier of the firm holding the funds.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "description": "The maximum number of funds to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 funds will be returned.\n\nThe maximum value is 50; values above 50 will be coerced to 50.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "The page token received from a previous List Funds call. Provide this token to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `funds` must match the call that received the page token.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Investors"
        ],
        "security": [
          {
            "OAuth2": [
              "read_investor_funds"
            ]
          }
        ]
      }
    },
    "/v1alpha1/investors/firms/{firmId}/funds/{fundId}/investments": {
      "get": {
        "summary": "List Investments",
        "description": "Retrieve the company investments of a given investment fund.",
        "operationId": "v1alpha1.investors.listInvestments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1ListInvestmentsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "firmId",
            "description": "The identifier of the firm.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fundId",
            "description": "The identifier of the fund.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "description": "The maximum number of investments to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 investments will be returned.\n\nThe maximum value is 50; values above 50 will be coerced to 50.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "The page token received from a previous List Investments call. Provide this token to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to List Investments must match the call that received the page token.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Investors"
        ],
        "security": [
          {
            "OAuth2": [
              "read_investor_investments"
            ]
          }
        ]
      }
    },
    "/v1alpha1/investors/firms/{firmId}/funds/{fundId}/investments/{companyId}/capitalizationTables": {
      "get": {
        "summary": "List Capitalization Tables",
        "description": "Retrieves the capitalization tables for a given firm, fund, and investment company.",
        "operationId": "v1alpha1.investors.listCapitalizationTables",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1ListCapitalizationTablesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "firmId",
            "description": "The identifier of the firm.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fundId",
            "description": "The identifier of the fund.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "description": "The identifier of the investment company.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "description": "The maximum number of capitalization tables to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 capitalization tables will be returned.\n\nThe maximum value is 50; values above 50 will be coerced to 50.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "A page token, received from a previous List Capitalization Tables call. Provide this token to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `ListCapitalizationTables` must match the call that received the page token.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Investors"
        ],
        "security": [
          {
            "OAuth2": [
              "read_investor_capitalizationtables"
            ]
          }
        ]
      }
    },
    "/v1alpha1/investors/firms/{firmId}/funds/{fundId}/investments/{companyId}/capitalizationTables/{capitalizationTableId}": {
      "get": {
        "summary": "Get Capitalization Table",
        "description": "Retrieve a capitalization table for a given firm, fund, and investment.",
        "operationId": "v1alpha1.investors.getCapitalizationTable",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publicapiinvestorscapitalizationv1alpha1GetCapitalizationTableResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "firmId",
            "description": "The identifier of the firm.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fundId",
            "description": "The identifier of the fund.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "description": "The identifier of the investment company.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "capitalizationTableId",
            "description": "The identifier of the capitalization table.\n\nFor a company's primary capitalization table, this is the same as companyId.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asOfDate",
            "description": "Retrieve capitalization table state as of given date. Expected format for this date is [ISO 8601 complete calendar date](https://en.wikipedia.org/wiki/ISO_8601#Calendar_dates); i.e., 'YYYY-MM-DD'\n\nRetrieve capitalization table state as of given date. Expected format for this date is [ISO 8601 complete calendar date](https://en.wikipedia.org/wiki/ISO_8601#Calendar_dates); i.e., 'YYYY-MM-DD'",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Investors"
        ],
        "security": [
          {
            "OAuth2": [
              "read_investor_capitalizationtables"
            ]
          }
        ]
      }
    },
    "/v1alpha1/investors/firms/{firmId}/funds/{fundId}/investments/{companyId}/stakeholderCapitalizationTables/{capitalizationTableId}": {
      "get": {
        "summary": "Get Stakeholder Capitalization Table",
        "description": "Retrieve an investor's stakeholder capitalization table.",
        "operationId": "v1alpha1.investors.getStakeholderCapitalizationTable",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publicapiinvestorscapitalizationv1alpha1GetStakeholderCapitalizationTableResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "firmId",
            "description": "The identifier of the firm.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fundId",
            "description": "The identifier of the fund.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "description": "The identifier of the investment company.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "capitalizationTableId",
            "description": "The identifier of the capitalization table.\n\nFor a company's primary capitalization table, this is the same as companyId.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asOfDate",
            "description": "Retrieve stakeholder capitalization table state as of given `as_of_date`. Format:  'YYYY-MM-DD'\n\nRetrieve stakeholder capitalization table state as of given `asOfDate`, specified as an [ISO-8601 calendar date](https://en.wikipedia.org/wiki/ISO_8601) in the format of 'YYYY-MM-DD'.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageToken",
            "description": "A page token, received from a previous Get Stakeholder Capitalization Table call. Provide this token to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `GetStakeholderCapitalizationTable` must match the call that received the page token.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "description": "The maximum number of StakeholderGroups to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 StakeholderGroups will be returned.\n\nThe maximum value is 50; values above 50 will be coerced to 50.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "tags": [
          "Investors"
        ],
        "security": [
          {
            "OAuth2": [
              "read_investor_stakeholdercapitalizationtable"
            ]
          }
        ]
      }
    },
    "/v1alpha1/investors/firms/{firmId}/funds/{fundId}/investments/{investmentId}/certificates": {
      "get": {
        "summary": "List Certificates",
        "description": "Retrieve certificates issued by an investment company to a fund within a firm.\n\nScope: `read_investor_securities`",
        "operationId": "v1alpha1.investors.listCertificates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publicapiinvestorssecuritiesv1alpha1ListCertificatesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "firmId",
            "description": "The identifier of the firm.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fundId",
            "description": "The identifier of the fund or `-` to list certificates across all funds under the firm specified by `firmId`.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "investmentId",
            "description": "The identifier of the investment or `-` to list certificates across all company investments under the fund specified by `firmId` and `fundId`.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asOfDate",
            "description": "*Deprecated*\n\nReturn certificates with issue dates on or after this date, specified as an [ISO 8601 extended format calendar date](https://en.wikipedia.org/wiki/ISO_8601#Calendar_dates), i.e. 'YYYY-MM-DD'.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "description": "The maximum number of certificates to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 certificates will be returned.\n\nThe maximum value is 100; values above 100 will be coerced to 100.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "A page token received as `nextPageToken` in a previous `ListCertificates` response. Provide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `ListCertificates` must match the call that provided the page token.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Investors - Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "read_investor_securities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/investors/firms/{firmId}/funds/{fundId}/investments/{investmentId}/convertibleNotes": {
      "get": {
        "summary": "List Convertible Notes",
        "description": "Retrieve convertible notes issued by an investment company to a fund within a firm.\n\nScope: `read_investor_securities`",
        "operationId": "v1alpha1.investors.listConvertibleNotes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publicapiinvestorssecuritiesv1alpha1ListConvertibleNotesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "firmId",
            "description": "The identifier of the firm.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fundId",
            "description": "The identifier of the fund or `-` to list convertible notes across all funds under the firm specified by `firm_id`.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "investmentId",
            "description": "The identifier of the investment or `-` to list convertible notes across all company investments under the fund specified by `firmId` and `fundId`.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asOfDate",
            "description": "*Deprecated*\n\nReturn convertible notes with issue dates on or after this date, specified as an [ISO 8601 extended format calendar date](https://en.wikipedia.org/wiki/ISO_8601#Calendar_dates), i.e. 'YYYY-MM-DD'.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "description": "The maximum number of convertible notes to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 convertible notes will be returned.\n\nThe maximum value is 100; values above 100 will be coerced to 100.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "A page token received as `nextPageToken` in a previous `ListConvertibleNotes` response. Provide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `ListConvertibleNotes` must match the call that provided the page token.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Investors - Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "read_investor_securities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/investors/firms/{firmId}/funds/{fundId}/investments/{investmentId}/warrants": {
      "get": {
        "summary": "List Warrants",
        "description": "Retrieve investment warrants issued by an investment company to a fund within a firm.\n\nScope: `read_investor_securities`",
        "operationId": "v1alpha1.investors.listWarrants",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publicapiinvestorssecuritiesv1alpha1ListWarrantsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "firmId",
            "description": "The identifier of the firm.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fundId",
            "description": "The identifier of the fund or `-` to list warrants across all funds under the firm specified by `firmId`.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "investmentId",
            "description": "The identifier of the investment or `-` to list warrants across all company investments under the fund specified by `firmId` and `fundId`.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asOfDate",
            "description": "*Deprecated*\n\nReturn warrants with issue dates on or after this date, specified as an [ISO 8601 extended format calendar date](https://en.wikipedia.org/wiki/ISO_8601#Calendar_dates), i.e. 'YYYY-MM-DD'.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "description": "The maximum number of warrants to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 warrants will be returned.\n\nThe maximum value is 100; values above 100 will be coerced to 100.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "A page token received as `nextPageToken` in a previous `ListWarrants` response. Provide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `ListWarrants` must match the call that provided the page token.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Investors - Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "read_investor_securities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/issuers": {
      "get": {
        "summary": "List Issuers",
        "description": "Retrieve issuers.",
        "operationId": "v1alpha1.issuers.listIssuers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1ListIssuersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "pageSize",
            "description": "The maximum number of issuers to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 issuers will be returned.\n\nThe maximum value is 50; values above 50 will be coerced to 50.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "A page token received as `nextPageToken` in a previous List Issuers response. Provide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters must be kept consistent with those used in the request where the page token was obtained.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Issuers"
        ],
        "security": [
          {
            "OAuth2": [
              "read_issuer_info"
            ]
          }
        ]
      }
    },
    "/v1alpha1/issuers/{id}": {
      "get": {
        "summary": "Get Issuer",
        "description": "Retrieve an issuer.",
        "operationId": "v1alpha1.issuers.getIssuer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1GetIssuerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "The identifier of the issuer to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Issuers"
        ],
        "security": [
          {
            "OAuth2": [
              "read_issuer_info"
            ]
          }
        ]
      }
    },
    "/v1alpha1/issuers/{issuerId}/capitalizationTable": {
      "get": {
        "summary": "Get Capitalization Table",
        "description": "Retrieves an issuer's capitalization table.",
        "operationId": "v1alpha1.issuers.getCapitalizationTable",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publicapiissuerscapitalizationv1alpha1GetCapitalizationTableResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "issuerId",
            "description": "The identifier of the issuer.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asOfDate",
            "description": "Retrieves the capitalization table as of the given date, specified as an [ISO 8601 extended format calendar date](https://en.wikipedia.org/wiki/ISO_8601#Calendar_dates), i.e. 'YYYY-MM-DD'.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Issuers - Capitalization"
        ],
        "security": [
          {
            "OAuth2": [
              "read_issuer_capitalizationtablesummary"
            ]
          }
        ]
      }
    },
    "/v1alpha1/issuers/{issuerId}/certificates": {
      "get": {
        "summary": "List Certificates",
        "description": "Retrieve certificates.",
        "operationId": "v1alpha1.issuers.listCertificates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1ListCertificatesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "issuerId",
            "description": "The identifier of the issuer owning the certificates to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "description": "The maximum number of certificates to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 funds will be returned.\n\nThe maximum value is 50; values above 50 will be coerced to 50.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "A page token received as `nextPageToken` in a previous List Certificates response. Provide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `certificates` must match the call that provided the page token.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Issuers - Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "read_issuer_securities",
              "readwrite_issuer_securities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/issuers/{issuerId}/certificates/{id}": {
      "get": {
        "summary": "Get Certificate",
        "description": "Retrieve a certificate.",
        "operationId": "v1alpha1.issuers.getCertificate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1GetCertificateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "issuerId",
            "description": "The identifier of the issuer owning the certificate to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The identifier of the certificate to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Issuers - Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "read_issuer_securities",
              "readwrite_issuer_securities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/issuers/{issuerId}/convertibleNotes": {
      "get": {
        "summary": "List Convertible Notes",
        "description": "Retrieve convertible notes.",
        "operationId": "v1alpha1.issuers.listConvertibleNotes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1ListConvertibleNotesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "issuerId",
            "description": "The identifier of the issuer owning the convertible notes to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "description": "The maximum number of convertible notes to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 convertible notes will be returned.\n\nThe maximum value is 50; values above 50 will be coerced to 50.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "A page token received as `nextPageToken` in a previous `ListConvertibleNotes` response. Provide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `ListConvertibleNotes` must match the call that provided the page token.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Issuers - Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "read_issuer_securities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/issuers/{issuerId}/convertibleNotes/{id}": {
      "get": {
        "summary": "Get Convertible Note",
        "description": "Retrieve convertible note.",
        "operationId": "v1alpha1.issuers.getConvertibleNote",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1GetConvertibleNoteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "issuerId",
            "description": "The identifier of the issuer owning the convertible note to retrieve",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The identifier of the convertible note to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Issuers - Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "read_issuer_securities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/issuers/{issuerId}/draftOptionGrantSets/{draftOptionGrantSetId}/draftOptionGrants": {
      "post": {
        "summary": "Create a Draft Option Grant",
        "description": "Creates a Draft Option Grant",
        "operationId": "v1alpha1.issuers.draftsecurities.createDraftOptionGrant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1CreateDraftOptionGrantResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "issuerId",
            "description": "The identifier of the issuer of the grant.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "draftOptionGrantSetId",
            "description": "The identifier of the draft option grant set will contain the draft option grant. \n The “LATEST” string can be used as an `draft_option_grant_set_id` in case you don’t want to pin a specific draft option grant set. \n By using LATEST, it will look for the most recently created draft option grant set for the issuer, and create the draft option grant in that set. \n If no draft option grant set exists, it will create a new draft option grant set and use it.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "draftOptionGrant": {
                    "stockOptionType": "STOCK_OPTION_TYPE_ISO",
                    "grantReason": "GRANT_REASON_NEW_HIRE",
                    "quantity": {
                      "value": "1000.0"
                    },
                    "earlyExercise": false,
                    "exercisePrice": {
                      "currency_code": "USD",
                      "amount": {
                        "value": "100.0"
                      }
                    },
                    "stakeholder": {
                      "name": "Jane Doe",
                      "email": "jane.doe@example.com",
                      "employeeId": "adsfc123",
                      "type": "STAKEHOLDER_TYPE_INDIVIDUAL",
                      "relationship": "STAKEHOLDER_RELATIONSHIP_EMPLOYEE"
                    },
                    "compliance": {
                      "countryOfResidency": {
                        "value": "USA"
                      },
                      "stateOfResidency": {
                        "value": "US-CA"
                      }
                    },
                    "notes": "Additional note about drafting",
                    "createTime": {
                      "value": "2024-02-29T18:18:00Z"
                    },
                    "updateTime": {
                      "value": "2024-02-29T18:18:00Z"
                    },
                    "vesting": {
                      "templateId": "6eeb0b6f-84c4-4071-8d94-9f0cefd59230",
                      "startDate": {
                        "year": 2024,
                        "month": 2,
                        "day": 29
                      }
                    }
                  }
                },
                "properties": {
                  "draftOptionGrant": {
                    "$ref": "#/components/schemas/v1alpha1DraftOptionGrant",
                    "description": "The draft option grant to be created"
                  }
                },
                "description": "The request for the CreateDraftOptionGrant endpoint.",
                "required": [
                  "draftOptionGrant"
                ]
              }
            }
          },
          "required": true
        },
        "tags": [
          "Issuers - Draft Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "readwrite_issuer_draftsecurities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/issuers/{issuerId}/draftOptionGrantSets/{draftOptionGrantSetId}/draftOptionGrants/{draftOptionGrantId}": {
      "get": {
        "summary": "Get Draft Option Grant",
        "description": "Retrieve a Draft Option Grant",
        "operationId": "v1alpha1.issuers.draftsecurities.getDraftOptionGrant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1GetDraftOptionGrantResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "issuerId",
            "description": "The identifier of the issuer of the grant.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "draftOptionGrantSetId",
            "description": "The identifier of the draft option grant set that contains the requested draft option grant.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "draftOptionGrantId",
            "description": "The identifier of the requested draft option grant.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Issuers - Draft Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "read_issuer_draftsecurities",
              "readwrite_issuer_draftsecurities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/issuers/{issuerId}/fairMarketValues": {
      "get": {
        "summary": "List Fair Market Values",
        "description": "Retrieve fair market values.",
        "operationId": "v1alpha1.issuers.listFairMarketValues",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1ListFairMarketValuesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "issuerId",
            "description": "The identifier of the issuer whose fair market values are being retrieved.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "description": "The maximum number of fair market values to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 fair market values will be returned.\n\nThe maximum value is 50; values above 50 will be coerced to 50.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "A page token received as `nextPageToken` in a previous List Fair Market Values response. Provide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters must be kept consistent with those used in the request where the page token was obtained.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Issuers"
        ],
        "security": [
          {
            "OAuth2": [
              "read_issuer_valuations"
            ]
          }
        ]
      }
    },
    "/v1alpha1/issuers/{issuerId}/optionExercises": {
      "get": {
        "summary": "List Option Exercises",
        "description": "Retrieve option exercises.",
        "operationId": "v1alpha1.issuers.listOptionExercises",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1ListOptionExercisesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "issuerId",
            "description": "The identifier of the issuer that issued the option exercises to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "description": "The maximum number of option exercises to return. The service may return fewer than this value. If unspecified, at most 25 option exercises will be returned. The maximum value is 100; values above 100 will be coerced to 100.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "A page token received as `nextPageToken` in a previous List Option Exercises response. Provide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `optionGrants` must match the call that provided the page token.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Issuers - Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "read_issuer_securities",
              "readwrite_issuer_securities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/issuers/{issuerId}/optionExercises/{exerciseId}:updateMoneyMovement": {
      "post": {
        "summary": "Update Money Movement",
        "description": "Updates money movement information for an option exercise.",
        "operationId": "v1alpha1.issuers.updateMoneyMovement",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1UpdateMoneyMovementResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "issuerId",
            "description": "The identifier of the issuer that issued the option exercises to update money movement information for.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exerciseId",
            "description": "The identifier of the option exercise to update money movement information for.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "moneyMovement": {
                    "$ref": "#/components/schemas/v1alpha1OptionExerciseMoneyMovement",
                    "description": "The money movement information to update."
                  }
                },
                "description": "The request for the UpdateMoneyMovement endpoint."
              }
            }
          },
          "required": true
        },
        "tags": [
          "Issuers - Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "readwrite_issuer_securities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/issuers/{issuerId}/optionExercises/{exerciseId}:updateTaxWithholding": {
      "post": {
        "summary": "Update Tax Withholding",
        "description": "Updates tax withholding information for an option exercise.",
        "operationId": "v1alpha1.issuers.updateTaxWithholding",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1UpdateTaxWithholdingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "issuerId",
            "description": "The identifier of the issuer that issued the option exercises to update tax withholding information for.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exerciseId",
            "description": "The identifier of the option exercise to update tax withholding information for.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "taxWithholdings": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/v1alpha1OptionExerciseTaxWithholdingLineItem"
                    },
                    "description": "The tax withholdings information to update."
                  }
                },
                "description": "The request for the UpdateTaxWithholding endpoint."
              }
            }
          },
          "required": true
        },
        "tags": [
          "Issuers - Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "readwrite_issuer_securities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/issuers/{issuerId}/optionGrants": {
      "get": {
        "summary": "List Option Grants",
        "description": "Retrieve option grants.",
        "operationId": "v1alpha1.issuers.listOptionGrants",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1ListOptionGrantsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "issuerId",
            "description": "The identifier of the issuer that issued the option grants to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "description": "The maximum number of option grants to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 funds will be returned.\n\nThe maximum value is 50; values above 50 will be coerced to 50.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "A page token received as `nextPageToken` in a previous List Option Grants response. Provide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `optionGrants` must match the call that provided the page token.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Issuers - Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "read_issuer_securities",
              "readwrite_issuer_securities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/issuers/{issuerId}/optionGrants/{id}": {
      "get": {
        "summary": "Get Option Grant",
        "description": "Retrieves an option grant.",
        "operationId": "v1alpha1.issuers.getOptionGrant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1GetOptionGrantResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "issuerId",
            "description": "The identifier of the issuer that issued the option grant.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The identifier of the option grant to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Issuers - Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "read_issuer_securities",
              "readwrite_issuer_securities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/issuers/{issuerId}/pointsOfContact": {
      "get": {
        "summary": "List Points of Contact",
        "description": "Retrieve points of contact for a given issuer.",
        "operationId": "v1alpha1.issuers.listPointsOfContact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1ListPointsOfContactResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "issuerId",
            "description": "The identifier of the issuer whose points of contact are being retrieved.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Issuers"
        ],
        "security": [
          {
            "OAuth2": [
              "read_issuer_info"
            ]
          }
        ]
      }
    },
    "/v1alpha1/issuers/{issuerId}/restrictedStockAwards": {
      "get": {
        "summary": "List Restricted Stock Awards",
        "description": "Retrieve restricted stock awards.",
        "operationId": "v1alpha1.issuers.listRestrictedStockAwards",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1ListRestrictedStockAwardsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "issuerId",
            "description": "The identifier of the issuer owning the restricted stock awards to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "description": "The maximum number of restricted stock awards to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 funds will be returned.\n\nThe maximum value is 50; values above 50 will be coerced to 50.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "A page token received as `nextPageToken` in a previous List Restricted Stock Awards response. Provide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `restrictedStockAwards` must match the call that provided the page token.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Issuers - Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "read_issuer_securities",
              "readwrite_issuer_securities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/issuers/{issuerId}/restrictedStockAwards/{id}": {
      "get": {
        "summary": "Get Restricted Stock Award",
        "description": "Retrieve a restricted stock award.",
        "operationId": "v1alpha1.issuers.getRestrictedStockAward",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1GetRestrictedStockAwardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "issuerId",
            "description": "The identifier of the issuer owning the restricted stock award to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The identifier of the restricted stock award to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Issuers - Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "read_issuer_securities",
              "readwrite_issuer_securities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/issuers/{issuerId}/restrictedStockUnits": {
      "get": {
        "summary": "List Restricted Stock Units",
        "description": "Retrieve restricted stock units.",
        "operationId": "v1alpha1.issuers.listRestrictedStockUnits",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1ListRestrictedStockUnitsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "issuerId",
            "description": "The identifier of the issuer owning the restricted stock units to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "description": "The maximum number of restricted stock units to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 funds will be returned.\n\nThe maximum value is 50; values above 50 will be coerced to 50.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "A page token received as `nextPageToken` in a previous List Restricted Stock Units response. Provide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `restrictedStockUnits` must match the call that provided the page token.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Issuers - Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "read_issuer_securities",
              "readwrite_issuer_securities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/issuers/{issuerId}/restrictedStockUnits/{id}": {
      "get": {
        "summary": "Get Restricted Stock Unit",
        "description": "Retrieve a restricted stock unit.",
        "operationId": "v1alpha1.issuers.getRestrictedStockUnit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1GetRestrictedStockUnitResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "issuerId",
            "description": "The identifier of the issuer owning the restricted stock unit to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The identifier of the restricted stock unit.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Issuers - Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "read_issuer_securities",
              "readwrite_issuer_securities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/issuers/{issuerId}/shareClasses": {
      "get": {
        "summary": "List Share Classes",
        "description": "Retrieve share classes.",
        "operationId": "v1alpha1.issuers.listShareClasses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1ListShareClassesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "issuerId",
            "description": "The identifier of the issuer that has issued the share classes to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asOfDate",
            "description": "Retrieve share classes as of the given date. Expected format for this date is [ISO 8601 complete calendar date](https://en.wikipedia.org/wiki/ISO_8601#Calendar_dates); i.e., 'YYYY-MM-DD'\n\nRetrieves share classes as of the given date, specified as an [ISO 8601 extended format calendar date](https://en.wikipedia.org/wiki/ISO_8601#Calendar_dates), i.e. 'YYYY-MM-DD'.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "description": "The maximum number of share classes to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 share classes will be returned.\n\nThe maximum value is 50; values above 50 will be coerced to 50.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "A page token received as `nextPageToken` in a previous List Share Classes response. Provide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters must be kept consistent with those used in the request where the page token was obtained.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Issuers"
        ],
        "security": [
          {
            "OAuth2": [
              "read_issuer_shareclasses"
            ]
          }
        ]
      }
    },
    "/v1alpha1/issuers/{issuerId}/stakeholderCapitalizationTable": {
      "get": {
        "summary": "Get Stakeholder Capitalization Table",
        "description": "Retrieve an issuer's stakeholder capitalization table.",
        "operationId": "v1alpha1.issuers.getStakeholderCapitalizationTable",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publicapiissuerscapitalizationv1alpha1GetStakeholderCapitalizationTableResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "issuerId",
            "description": "The identifier of the issuer whose stakeholder capitalization table is being retrieved.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asOfDate",
            "description": "Retrieve stakeholder capitalization table state as of given `as_of_date`. Format:  'YYYY-MM-DD'\n\nRetrieve stakeholder capitalization table state as of given `asOfDate`, specified as an [ISO-8601 calendar date](https://en.wikipedia.org/wiki/ISO_8601) in the format of 'YYYY-MM-DD'.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "description": "The maximum number of StakeholderGroups to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 StakeholderGroups will be returned.\n\nThe maximum value is 100; values above 100 will be coerced to 100.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "A page token, received from a previous Get Stakeholder Capitalization Table call. Provide this token to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `GetStakeholderCapitalizationTable` must match the call that received the page token.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Issuers - Capitalization"
        ],
        "security": [
          {
            "OAuth2": [
              "read_issuer_stakeholdercapitalizationtable"
            ]
          }
        ]
      }
    },
    "/v1alpha1/issuers/{issuerId}/stakeholders": {
      "get": {
        "summary": "List Stakeholders",
        "description": "Retrieve stakeholders.",
        "operationId": "v1alpha1.issuers.listStakeholders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1ListStakeholdersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "issuerId",
            "description": "The identifier of the issuer owning the stakeholders to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "description": "The maximum number of stakeholders to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 stakeholders will be returned.\n\nThe maximum value is 50; values above 50 will be coerced to 50.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "A page token received as `nextPageToken` in a previous List Stakeholders response. Provide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters must be kept consistent with those used in the request where the page token was obtained.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Issuers"
        ],
        "security": [
          {
            "OAuth2": [
              "read_issuer_stakeholders"
            ]
          }
        ]
      }
    },
    "/v1alpha1/issuers/{issuerId}/stakeholders/{id}": {
      "get": {
        "summary": "Get Stakeholder",
        "description": "Retrieve a stakeholder.",
        "operationId": "v1alpha1.issuers.getStakeholder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1GetStakeholderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "issuerId",
            "description": "The identifier of the issuer owning the stakeholder to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The identifier of the stakeholder to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Issuers"
        ],
        "security": [
          {
            "OAuth2": [
              "read_issuer_stakeholders"
            ]
          }
        ]
      }
    },
    "/v1alpha1/issuers/{issuerId}/vestingScheduleTemplates": {
      "get": {
        "summary": "List Vesting Schedule Templates",
        "description": "Retrieve vesting schedule templates.",
        "operationId": "v1alpha1.issuers.listVestingScheduleTemplates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1ListVestingScheduleTemplatesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "issuerId",
            "description": "The identifier of the issuer that has issued the share classes to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "description": "The maximum number of vesting schedule templates to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 vesting schedule templates will be returned.\n\nThe maximum value is 50; values above 50 will be coerced to 50.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "A page token received as `nextPageToken` in a previous List Vesting Schedule Templates response. Provide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters must be kept consistent with those used in the request where the page token was obtained.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Issuers"
        ],
        "security": [
          {
            "OAuth2": [
              "read_issuer_securitiestemplates"
            ]
          }
        ]
      }
    },
    "/v1alpha1/openCapTables": {
      "post": {
        "summary": "Upload Open Cap Table",
        "description": "Upload an [Open Cap Table Format (OCF)](https://github.com/Open-Cap-Table-Coalition/Open-Cap-Format-OCF) package in binary format to be processed.\n\nIf the OCF package is successfully uploaded, the `OpenCapTablesService` will begin processing the data with the goal of onboarding the Issuer and its related data on to the Carta platform.\n\nSupplying an OCF package to this endpoint will result in the creation of an Open Cap Table record to track the progress of processing the data from the OCF package. This record will be returned in the case of a successful response. This record can also be queried via the `GetCapTable` endpoint.",
        "operationId": "v1alpha1.openCapTables.uploadOpenCapTable",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1UploadOpenCapTableResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiHttpBody"
              }
            }
          },
          "description": "The raw HTTP body.",
          "required": true
        },
        "tags": [
          "Open Cap Table"
        ],
        "security": [
          {
            "OAuth2": [
              "readwrite_opencaptables"
            ]
          }
        ]
      }
    },
    "/v1alpha1/openCapTables/{id}": {
      "get": {
        "summary": "Get Open Cap Table",
        "description": "Get an Open Cap Table record related to a previously uploaded OCF package.\n\nThis endpoint will return a record detailing the status of the processing of an Open Cap Table that was previously uploaded.",
        "operationId": "v1alpha1.openCapTables.getOpenCapTable",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1GetOpenCapTableResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "The open cap table's id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Open Cap Table"
        ],
        "security": [
          {
            "OAuth2": [
              "read_opencaptables",
              "readwrite_opencaptables"
            ]
          }
        ]
      }
    },
    "/v1alpha1/portfolios": {
      "get": {
        "summary": "List Shareholder Portfolios",
        "description": "Retrieve shareholder portfolios.",
        "operationId": "v1alpha1.portfolios.issuers.listPortfolios",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1ListPortfoliosResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "pageSize",
            "description": "The maximum number of portfolios to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 portfolios will be returned.\n\nThe maximum value is 50; values above 50 will be coerced to 50.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "A page token received as `nextPageToken` in a previous List Portfolios response. Provide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `portfolios` must match the call that provided the page token.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Portfolios"
        ],
        "security": [
          {
            "OAuth2": [
              "read_portfolio_info"
            ]
          }
        ]
      }
    },
    "/v1alpha1/portfolios/{portfolioId}": {
      "get": {
        "summary": "Get Shareholder Portfolio",
        "description": "Retrieve a portfolio.",
        "operationId": "v1alpha1.portfolios.issuers.getPortfolio",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1GetPortfolioResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "portfolioId",
            "description": "The identifier of the portfolio to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Portfolios"
        ],
        "security": [
          {
            "OAuth2": [
              "read_portfolio_info"
            ]
          }
        ]
      }
    },
    "/v1alpha1/portfolios/{portfolioId}/fundInvestmentDocuments": {
      "get": {
        "summary": "List Fund Investment Documents",
        "description": "Retrieve fund investment documents for a portfolio. Fund investments documents are shared with limited partners of funds.",
        "operationId": "v1alpha1.portfolios.listFundInvestmentDocuments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1ListFundInvestmentDocumentsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "portfolioId",
            "description": "The ID of the portfolio for which to retrieve fund investment documents.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageToken",
            "description": "The page token received from a previous List Fund Documents call. Provide this token to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to List Fund Documents must match the call that received the page token.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "description": "The maximum number of fund investment documents to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 documents will be returned.\n\nThe maximum value is 50; values above 50 will be coerced to 50.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fundId",
            "description": "The ID of the fund for which to retrieve fund investment documents.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "effectiveDateAfter",
            "description": "Return fund documents with effective dates on or after this date, specified as an [ISO 8601 extended format calendar date](https://en.wikipedia.org/wiki/ISO_8601#Calendar_dates), i.e. 'YYYY-MM-DD'.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "effectiveDateBefore",
            "description": "Return fund documents with effective dates on or before this date, specified as an [ISO 8601 extended format calendar date](https://en.wikipedia.org/wiki/ISO_8601#Calendar_dates), i.e. 'YYYY-MM-DD'.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sharedDateAfter",
            "description": "Return fund documents with shared dates on or after this date, specified as an [ISO 8601 extended format calendar date](https://en.wikipedia.org/wiki/ISO_8601#Calendar_dates), i.e. 'YYYY-MM-DD'.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sharedDateBefore",
            "description": "Return fund documents with shared dates on or before this date, specified as an [ISO 8601 extended format calendar date](https://en.wikipedia.org/wiki/ISO_8601#Calendar_dates), i.e. 'YYYY-MM-DD'.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Portfolios - Fund Investments"
        ],
        "security": [
          {
            "OAuth2": [
              "read_portfolio_fundinvestmentdocuments"
            ]
          }
        ]
      }
    },
    "/v1alpha1/portfolios/{portfolioId}/fundInvestmentDocuments/{documentId}:download": {
      "get": {
        "summary": "Download Fund Investment Document",
        "description": "Download a fund investment document for a portfolio. Fund investments documents are shared with limited partners of funds.",
        "operationId": "v1alpha1.portfolios.downloadFundInvestmentDocument",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1DownloadFundInvestmentDocumentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "portfolioId",
            "description": "The ID of the portfolio holding the fund investment document.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "description": "The ID of the fund investment document to download.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Portfolios - Fund Investments"
        ],
        "security": [
          {
            "OAuth2": [
              "read_portfolio_fundinvestmentdocuments"
            ]
          }
        ]
      }
    },
    "/v1alpha1/portfolios/{portfolioId}/issuers": {
      "get": {
        "summary": "List Portfolio Issuers",
        "description": "Retrieve issuers in a portfolio",
        "operationId": "v1alpha1.portfolios.issuers.listPortfolioIssuers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1ListPortfolioIssuersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "portfolioId",
            "description": "The identifier of the portfolio whose issuers are to be retrieved.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "description": "The maximum number of issuers to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 issuers will be returned.\n\nThe maximum value is 50; values above 50 will be coerced to 50.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "A page token received as `nextPageToken` in a previous List Portfolio Issuers response. Provide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `issuers` must match the call that provided the page token.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Portfolios"
        ],
        "security": [
          {
            "OAuth2": [
              "read_portfolio_info"
            ]
          }
        ]
      }
    },
    "/v1alpha1/portfolios/{portfolioId}/issuers/{issuerId}/certificates": {
      "get": {
        "summary": "List Certificates",
        "description": "Retrieve certificates.",
        "operationId": "v1alpha1.portfolios.issuers.listCertificates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1ListCertificatesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "portfolioId",
            "description": "The identifier of the portfolio holding the certificates to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issuerId",
            "description": "The identifier of the issuer that has issued the certificates to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "description": "The maximum number of certificates to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 certificates will be returned.\n\nThe maximum value is 50; values above 50 will be coerced to 50.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "A page token received as `nextPageToken` in a previous List Certificates response. Provide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `certificates` must match the call that provided the page token.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Portfolios - Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "read_portfolio_securities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/portfolios/{portfolioId}/issuers/{issuerId}/certificates/{certificateId}": {
      "get": {
        "summary": "Get Certificate",
        "description": "Retrieve a certificate.",
        "operationId": "v1alpha1.portfolios.issuers.getCertificate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1GetCertificateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "portfolioId",
            "description": "The identifier of the portfolio holding the certificate to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issuerId",
            "description": "The identifier of the issuer that has issued the certificate.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "certificateId",
            "description": "The identifier of the certificate to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Portfolios - Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "read_portfolio_securities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/portfolios/{portfolioId}/issuers/{issuerId}/convertibleNotes": {
      "get": {
        "summary": "List Convertible Notes",
        "description": "Retrieve convertible notes.",
        "operationId": "v1alpha1.portfolios.issuers.listConvertibleNotes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1ListConvertibleNotesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "portfolioId",
            "description": "The identifier of the portfolio holding the convertible note to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issuerId",
            "description": "The identifier of the issuer owning the convertible notes to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "description": "The maximum number of convertible notes to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 convertible notes will be returned.\n\nThe maximum value is 100; values above 100 will be coerced to 100.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "A page token received as `nextPageToken` in a previous `ListConvertibleNotes` response. Provide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `ListConvertibleNotes` must match the call that provided the page token.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Portfolios - Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "read_portfolio_securities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/portfolios/{portfolioId}/issuers/{issuerId}/convertibleNotes/{id}": {
      "get": {
        "summary": "Get Convertible Note",
        "description": "Retrieve a convertible note.",
        "operationId": "v1alpha1.portfolios.issuers.getConvertibleNote",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1GetConvertibleNoteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "portfolioId",
            "description": "The identifier of the portfolio holding the convertible note to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issuerId",
            "description": "The identifier of the issuer owning the convertible note to retrieve",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The identifier of the convertible note to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Portfolios - Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "read_portfolio_securities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/portfolios/{portfolioId}/issuers/{issuerId}/fairMarketValue": {
      "get": {
        "summary": "Get Fair Market Value for Portfolio Issuer",
        "description": "Retrieve the current fair market value of an issuer in a portfolio",
        "operationId": "v1alpha1.portfolios.issuers.getFairMarketValue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1GetFairMarketValueResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "portfolioId",
            "description": "The identifier of the portfolio with holdings from the issuer whose fair market value is being retrieved.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issuerId",
            "description": "The identifier of the issuer whose fair market value is being retrieved.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Portfolios"
        ],
        "security": [
          {
            "OAuth2": [
              "read_portfolio_issuervaluations"
            ]
          }
        ]
      }
    },
    "/v1alpha1/portfolios/{portfolioId}/issuers/{issuerId}/optionGrants": {
      "get": {
        "summary": "List Option Grants",
        "description": "Retrieve option grants.",
        "operationId": "v1alpha1.portfolios.issuers.listOptionGrants",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1ListOptionGrantsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "portfolioId",
            "description": "The identifier of the portfolio holding the option grants to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issuerId",
            "description": "The identifier of the issuer that has issued the option grants to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "description": "The maximum number of option grants to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 option grants will be returned.\n\nThe maximum value is 50; values above 50 will be coerced to 50.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "A page token received as `nextPageToken` in a previous List Option Grants response. Provide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `optionGrants` must match the call that provided the page token.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Portfolios - Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "read_portfolio_securities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/portfolios/{portfolioId}/issuers/{issuerId}/optionGrants/{optionGrantId}": {
      "get": {
        "summary": "Get Option Grant",
        "description": "Retrieve an option grant.",
        "operationId": "v1alpha1.portfolios.issuers.getOptionGrant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1GetOptionGrantResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "portfolioId",
            "description": "The identifier of the portfolio holding the option grant.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issuerId",
            "description": "The identifier of the issuer that has issued the option grant.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optionGrantId",
            "description": "The identifier of the option grant to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Portfolios - Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "read_portfolio_securities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/portfolios/{portfolioId}/issuers/{issuerId}/restrictedStockAwards": {
      "get": {
        "summary": "List Restricted Stock Awards",
        "description": "Retrieve restricted stock awards.",
        "operationId": "v1alpha1.portfolios.issuers.listRestrictedStockAwards",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1ListRestrictedStockAwardsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "portfolioId",
            "description": "The identifier of the portfolio holding the restricted stock awards to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issuerId",
            "description": "The identifier of the issuer that has issued the restricted stock awards to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "description": "he maximum number of restricted stock awards to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 restricted stock awards will be returned.\n\nThe maximum value is 50; values above 50 will be coerced to 50.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "A page token received as `nextPageToken` in a previous List Restricted Stock Awards response. Provide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `restrictedStockAwards` must match the call that provided the page token.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Portfolios - Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "read_portfolio_securities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/portfolios/{portfolioId}/issuers/{issuerId}/restrictedStockAwards/{restrictedStockAwardId}": {
      "get": {
        "summary": "Get Restricted Stock Award",
        "description": "Retrieve a restricted stock award.",
        "operationId": "v1alpha1.portfolios.issuers.getRestrictedStockAward",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1GetRestrictedStockAwardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "portfolioId",
            "description": "The identifier of the portfolio holding the restricted stock award to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issuerId",
            "description": "The identifier of the issuer that has issued the restricted stock award to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "restrictedStockAwardId",
            "description": "The identifier of the restricted stock award to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Portfolios - Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "read_portfolio_securities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/portfolios/{portfolioId}/issuers/{issuerId}/restrictedStockUnits": {
      "get": {
        "summary": "List Restricted Stock Units",
        "description": "Retrieve restricted stock units.",
        "operationId": "v1alpha1.portfolios.issuers.listRestrictedStockUnits",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1ListRestrictedStockUnitsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "portfolioId",
            "description": "The identifier of the portfolio holding the restricted stock units to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issuerId",
            "description": "The identifier of the issuer that has issued the restricted stock units to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "description": "The maximum number of restricted stock units to return. The service may return fewer than this value.\n\nIf unspecified, at most 25 restricted stock units will be returned.\n\nThe maximum value is 50; values above 50 will be coerced to 50.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "A page token, received from a previous `ListRestrictedStockUnits` call.\nProvide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `ListRestrictedStockUnits` must match the call that provided the page \\\ntoken.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Portfolios - Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "read_portfolio_securities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/portfolios/{portfolioId}/issuers/{issuerId}/restrictedStockUnits/{restrictedStockUnitId}": {
      "get": {
        "summary": "Get Restricted Stock Unit",
        "description": "Retrieve a restricted stock unit.",
        "operationId": "v1alpha1.portfolios.issuers.getRestrictedStockUnit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1GetRestrictedStockUnitResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "portfolioId",
            "description": "The identifier of the portfolio holding the restricted stock unit to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issuerId",
            "description": "The identifier of the issuer that has issued the restricted stock unit to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "restrictedStockUnitId",
            "description": "The identifier of the restricted stock unit to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Portfolios - Securities"
        ],
        "security": [
          {
            "OAuth2": [
              "read_portfolio_securities"
            ]
          }
        ]
      }
    },
    "/v1alpha1/portfolios/{portfolioId}/issuers/{issuerId}/securityTransactions": {
      "get": {
        "summary": "List Security Transactions",
        "description": "Retrieve security transactions related to portfolio.",
        "operationId": "v1alpha1.portfolios.issuers.listSecurityTransactions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1ListSecurityTransactionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "portfolioId",
            "description": "The portfolio id of the portfolio for which security transactions are to be retrieved.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issuerId",
            "description": "The identifier of the issuer for which security transactions are to be retrieved.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "description": "The maximum number of security transactions to return. The service may return fewer than this value.\n\nIf unspecified, at most 50 security transactions will be returned.\n\nThe maximum value is 1000; values above 1000 will be coerced to 1000.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "A URL-encoded page token received as `nextPageToken` in a previous List Security Transactions response.\n\nProvide this to retrieve the subsequent page.\n\n\nWhen paginating, all other parameters provided to `securityTransactions` must match the call that provided the page token.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Portfolios - Security Transactions"
        ],
        "security": [
          {
            "OAuth2": [
              "read_portfolio_transactions"
            ]
          }
        ]
      }
    },
    "/v1alpha1/user": {
      "get": {
        "summary": "Get Current User",
        "description": "Retrieve the current user.",
        "operationId": "v1alpha1.user.getCurrentUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1alpha1GetCurrentUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are omitted or if provided fields fail validation.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "401": {
            "description": "Returned if a valid `Authorization` header has not been included with the request.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "500": {
            "description": "Returned if an unexpected internal server error is encountered.",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "OAuth2": [
              "read_user_info"
            ]
          }
        ]
      }
    }
  },
  "security": [
    {
      "OAuth2": [
        
      ]
    }
  ],
  "servers": [
    {
      "url": "https://api.playground.carta.team",
      "description": "Test Carta API Platform environment"
    },
    {
      "url": "https://mock-api.carta.com",
      "description": "Mock Carta API Platform environment"
    },
    {
      "url": "https://api.carta.com",
      "description": "Production Carta API Platform environment"
    }
  ],
  "components": {
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "description": "OAuth 2.0 Authorization Code Flow",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://<LOGIN_BASE_URL>/o/authorize/",
            "tokenUrl": "https://<LOGIN_BASE_URL>/o/access_token/",
            "scopes": {
              "read_draftissuers": "Read information about draft issuers",
              "read_investor_capitalizationtables": "Read information about the capitalization tables of investor investments",
              "read_investor_firms": "Read information about investor firms",
              "read_investor_funds": "Read information about investor funds",
              "read_investor_investments": "Read information about investor investments",
              "read_investor_stakeholdercapitalizationtable": "Read stakeholder-level capitalization table information about an investment company",
              "read_issuer_capitalizationtablesummary": "Read aggregated summary information of an issuer's capitalization table",
              "read_issuer_draftsecurities": "Read draft securities for an issuer",
              "read_issuer_info": "Read information about an issuer",
              "read_issuer_securities": "Read securities in an issuer's capitalization table",
              "read_issuer_securitiestemplates": "Read securities templates for an issuer",
              "read_issuer_shareclasses": "Read share class information for an issuer",
              "read_issuer_stakeholdercapitalizationtable": "Read stakeholder capitalization table for an issuer",
              "read_issuer_stakeholders": "Read information about a shareholder that has received equity from an issuer",
              "read_issuer_valuations": "Read valuation information about an issuer",
              "read_portfolio_fundinvestmentdocuments": "Read fund investment documents for a portfolio",
              "read_portfolio_info": "Read information about a portfolio and the issuers held within that portfolio",
              "read_portfolio_issuervaluations": "Read valuation information for issuers within a portfolio",
              "read_portfolio_securities": "Read securities issued to a portfolio",
              "read_portfolio_transactions": "Read transactions related to a portfolio",
              "read_user_info": "Read the information of the current user.",
              "readwrite_draftissuers": "Read and modify information about draft issuers",
              "readwrite_issuer_draftsecurities": "Read and modify draft securities for an issuer",
              "readwrite_issuer_securities": "Read and modify securities in an issuer's capitalization table"
            }
          }
        }
      }
    },
    "schemas": {
      "CapitalizationTableCapitalizationTableType": {
        "type": "string",
        "enum": [
          "CAPITALIZATION_TABLE_TYPE_UNSPECIFIED",
          "PRIMARY",
          "PRO_FORMA"
        ],
        "default": "CAPITALIZATION_TABLE_TYPE_UNSPECIFIED",
        "description": "Types of capitalization table.\n\n - CAPITALIZATION_TABLE_TYPE_UNSPECIFIED: Denotes the absence of a value\n - PRIMARY: The primary capitalization table for a company\n - PRO_FORMA: A pro forma capitalization table for a company"
      },
      "apiHttpBody": {
        "type": "object",
        "properties": {
          "contentType": {
            "type": "string",
            "description": "The HTTP Content-Type header value specifying the content type of the body."
          },
          "data": {
            "type": "string",
            "format": "byte",
            "description": "The HTTP request/response body as raw binary."
          },
          "extensions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/protobufAny"
            },
            "description": "Application specific response metadata. Must be set in the first response\nfor streaming APIs."
          }
        },
        "description": "Message that represents an arbitrary HTTP body. It should only be used for\npayload formats that can't be represented as JSON, such as raw binary or\nan HTML page.\n\n\nThis message can be used both in streaming and non-streaming API methods in\nthe request as well as the response.\n\nIt can be used as a top-level request field, which is convenient if one\nwants to extract parameters from either the URL or HTTP template into the\nrequest fields and also want access to the raw HTTP body.\n\nExample:\n\n    message GetResourceRequest {\n      // A unique request id.\n      string request_id = 1;\n\n      // The raw HTTP body is bound to this field.\n      google.api.HttpBody http_body = 2;\n\n    }\n\n    service ResourceService {\n      rpc GetResource(GetResourceRequest)\n        returns (google.api.HttpBody);\n      rpc UpdateResource(google.api.HttpBody)\n        returns (google.protobuf.Empty);\n\n    }\n\nExample with streaming methods:\n\n    service CaldavService {\n      rpc GetCalendar(stream google.api.HttpBody)\n        returns (stream google.api.HttpBody);\n      rpc UpdateCalendar(stream google.api.HttpBody)\n        returns (stream google.api.HttpBody);\n\n    }\n\nUse of this type only changes how the request and response bodies are\nhandled, all other features will continue to work unchanged."
      },
      "issuersdraftsecuritiesv1alpha1Stakeholder": {
        "type": "object",
        "example": {
          "name": "Jane Doe",
          "email": "jane.doe@example.com",
          "employeeId": "adsfc123",
          "type": "STAKEHOLDER_TYPE_INDIVIDUAL",
          "relationship": "STAKEHOLDER_RELATIONSHIP_EMPLOYEE"
        },
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the stakeholder to whom this security will be issued.",
            "maxLength": 256,
            "minLength": 1
          },
          "email": {
            "type": "string",
            "description": "The email of the stakeholder to whom this security will be issued.",
            "maxLength": 100,
            "minLength": 1
          },
          "employeeId": {
            "type": "string",
            "description": "The employee id of the stakeholder in the HR partner system.",
            "maxLength": 100
          },
          "type": {
            "$ref": "#/components/schemas/v1alpha1StakeholderType",
            "description": "The type of the stakeholder."
          },
          "relationship": {
            "$ref": "#/components/schemas/issuersdraftsecuritiesv1alpha1StakeholderRelationship",
            "description": "The relationship of the stakeholder to the issuer."
          }
        },
        "description": "Details of a stakeholder",
        "title": "Details of a stakeholder"
      },
      "issuersdraftsecuritiesv1alpha1StakeholderRelationship": {
        "type": "string",
        "enum": [
          "STAKEHOLDER_RELATIONSHIP_UNSPECIFIED",
          "STAKEHOLDER_RELATIONSHIP_ADVISOR",
          "STAKEHOLDER_RELATIONSHIP_EX_ADVISOR",
          "STAKEHOLDER_RELATIONSHIP_BOARD_MEMBER",
          "STAKEHOLDER_RELATIONSHIP_CONSULTANT",
          "STAKEHOLDER_RELATIONSHIP_EX_CONSULTANT",
          "STAKEHOLDER_RELATIONSHIP_EMPLOYEE",
          "STAKEHOLDER_RELATIONSHIP_EX_EMPLOYEE",
          "STAKEHOLDER_RELATIONSHIP_EXECUTIVE",
          "STAKEHOLDER_RELATIONSHIP_FOUNDER",
          "STAKEHOLDER_RELATIONSHIP_INVESTOR",
          "STAKEHOLDER_RELATIONSHIP_INTERNATIONAL_EMPLOYEE",
          "STAKEHOLDER_RELATIONSHIP_OFFICER",
          "STAKEHOLDER_RELATIONSHIP_OTHER"
        ],
        "default": "STAKEHOLDER_RELATIONSHIP_UNSPECIFIED",
        "description": "- STAKEHOLDER_RELATIONSHIP_UNSPECIFIED: Denotes the absence of a value\n - STAKEHOLDER_RELATIONSHIP_ADVISOR: Advisor\n - STAKEHOLDER_RELATIONSHIP_EX_ADVISOR: Ex-Advisor\n - STAKEHOLDER_RELATIONSHIP_BOARD_MEMBER: Board Member\n - STAKEHOLDER_RELATIONSHIP_CONSULTANT: Consultant\n - STAKEHOLDER_RELATIONSHIP_EX_CONSULTANT: Ex-Consultant\n - STAKEHOLDER_RELATIONSHIP_EMPLOYEE: Employee\n - STAKEHOLDER_RELATIONSHIP_EX_EMPLOYEE: Ex-Employee\n - STAKEHOLDER_RELATIONSHIP_EXECUTIVE: Executive\n - STAKEHOLDER_RELATIONSHIP_FOUNDER: Founder\n - STAKEHOLDER_RELATIONSHIP_INVESTOR: Investor\n - STAKEHOLDER_RELATIONSHIP_INTERNATIONAL_EMPLOYEE: International Employee\n - STAKEHOLDER_RELATIONSHIP_OFFICER: Officer\n - STAKEHOLDER_RELATIONSHIP_OTHER: Other",
        "title": "Relationship of stakeholder to the issuer"
      },
      "issuersdraftsecuritiesv1alpha1StockOptionType": {
        "type": "string",
        "enum": [
          "STOCK_OPTION_TYPE_UNSPECIFIED",
          "STOCK_OPTION_TYPE_ISO",
          "STOCK_OPTION_TYPE_NSO",
          "STOCK_OPTION_TYPE_INTL",
          "STOCK_OPTION_TYPE_EMI",
          "STOCK_OPTION_TYPE_CSOP",
          "STOCK_OPTION_TYPE_102_CG",
          "STOCK_OPTION_TYPE_102_OI",
          "STOCK_OPTION_TYPE_NON_TRUSTEE",
          "STOCK_OPTION_TYPE_3I",
          "STOCK_OPTION_TYPE_UNAPPROVED"
        ],
        "default": "STOCK_OPTION_TYPE_UNSPECIFIED",
        "description": "- STOCK_OPTION_TYPE_UNSPECIFIED: Unspecified\n - STOCK_OPTION_TYPE_ISO: Incentive Stock Option\n - STOCK_OPTION_TYPE_NSO: Non-qualified Stock Option\n - STOCK_OPTION_TYPE_INTL: International Stock Option\n - STOCK_OPTION_TYPE_EMI: Employee Management Incentive\n - STOCK_OPTION_TYPE_CSOP: Company Share Option Plan\n - STOCK_OPTION_TYPE_102_CG: 102 Capital Gains Track\n - STOCK_OPTION_TYPE_102_OI: 102 Ordinary Income Track\n - STOCK_OPTION_TYPE_NON_TRUSTEE: Non-Trustee Stock Option\n - STOCK_OPTION_TYPE_3I: 3(i) Stock Option\n - STOCK_OPTION_TYPE_UNAPPROVED: Unapproved Stock Option",
        "title": "The type of the option grant"
      },
      "protobufAny": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
          }
        },
        "additionalProperties": {
          
        },
        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
      },
      "publicapiinvestorscapitalizationv1alpha1CapitalizationTable": {
        "type": "object",
        "example": {
          "id": "2d5ed165-bad3-40cf-8982-6309efac0989",
          "firmId": "7af7123a-2ee9-4e31-a173-54b8f9159426",
          "fundId": "09051fa3-fe71-4613-9bfb-e5bfa396cfea",
          "companyId": "bc495a05-bd5b-451e-bdfc-88eea3fccfe8",
          "name": "Primary",
          "type": "PRIMARY",
          "asOfDate": {
            "value": "2021-01-01"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "example": "2d5ed165-bad3-40cf-8982-6309efac0989",
            "description": "The identifier of the capitalization table.\n\nA company's primary capitalization table can be retrieved by reusing the `companyId` value here. Pro forma capitalization tables have unique identifiers.",
            "maxLength": 50,
            "minLength": 1
          },
          "firmId": {
            "type": "string",
            "example": "7af7123a-2ee9-4e31-a173-54b8f9159426",
            "description": "The identifier of the firm holding the investment.",
            "maxLength": 50,
            "minLength": 1
          },
          "fundId": {
            "type": "string",
            "example": "09051fa3-fe71-4613-9bfb-e5bfa396cfea",
            "description": "The identifier of the fund holding the investment.",
            "maxLength": 50,
            "minLength": 1
          },
          "companyId": {
            "type": "string",
            "example": "bc495a05-bd5b-451e-bdfc-88eea3fccfe8",
            "description": "The identifier of the company.",
            "maxLength": 50,
            "minLength": 1
          },
          "name": {
            "type": "string",
            "example": "Primary",
            "description": "The name of the capitalization table. Primary capitalization tables are named Primary. Pro forma capitalization tables have user defined names.",
            "maxLength": 1000,
            "minLength": 1
          },
          "type": {
            "$ref": "#/components/schemas/CapitalizationTableCapitalizationTableType",
            "example": "PRIMARY",
            "description": "The type of capitalization table."
          },
          "asOfDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "example": {
              "value": "2021-01-01"
            },
            "description": "The date as of which the capitalization table is based. This is more relevant for pro forma capitalization tables, where this field will represent the date the pro forma was created. For primary capitalization tables, this field will default to the date when the capitalization table was retrieved (i.e., today's date)."
          }
        },
        "description": "High level information about a capitalization table under an investment company a user has access to in their investment firm.",
        "required": [
          "id",
          "firmId",
          "fundId",
          "companyId",
          "name",
          "type",
          "asOfDate"
        ]
      },
      "publicapiinvestorscapitalizationv1alpha1GetCapitalizationTableResponse": {
        "type": "object",
        "properties": {
          "capitalizationTable": {
            "$ref": "#/components/schemas/v1alpha1CapitalizationTableData",
            "description": "The top-level capitalization table object."
          }
        },
        "description": "The response from the Get Capitalization Table endpoint.",
        "title": "The response from the Get Capitalization Table endpoint",
        "required": [
          "capitalizationTable"
        ]
      },
      "publicapiinvestorscapitalizationv1alpha1GetStakeholderCapitalizationTableResponse": {
        "type": "object",
        "properties": {
          "stakeholderCapitalizationTable": {
            "$ref": "#/components/schemas/publicapiinvestorscapitalizationv1alpha1StakeholderCapitalizationTable",
            "description": "Stakeholder Capitalization table."
          },
          "nextPageToken": {
            "type": "string",
            "example": "ODMxMw==",
            "description": "A page token, which can be provided as the value of the `pageToken` query parameter to retrieve the next page. If this field is omitted, there are no subsequent pages."
          }
        },
        "description": "The response for the GetStakeholderCapitalizationTable endpoint.",
        "required": [
          "stakeholderCapitalizationTable"
        ]
      },
      "publicapiinvestorscapitalizationv1alpha1Stakeholder": {
        "type": "object",
        "example": {
          "stakeholderId": "5375",
          "stakeholderName": "Krakatoa Ventures Fund I, L.P.",
          "summary": {
            "fullyDilutedShares": {
              "value": "4422567"
            },
            "outstandingShares": {
              "value": "4422567.00000000000000000000"
            }
          },
          "shareClassSummaries": [
            {
              "shareClassID": 10,
              "outstandingShares": {
                "value": "566035.00000000000000000000"
              },
              "fullyDilutedShares": {
                "value": "566035"
              },
              "cashRaised": {
                "currency_code": "USD",
                "amount": {
                  "value": "150000.0700000000000000000000"
                }
              }
            },
            {
              "shareClassID": 104,
              "outstandingShares": {
                "value": "2217191.00000000000000000000"
              },
              "fullyDilutedShares": {
                "value": "2217191"
              },
              "cashRaised": {
                "currency_code": "USD",
                "amount": {
                  "value": "1000000.000000000000000000000"
                }
              }
            },
            {
              "shareClassID": 105,
              "outstandingShares": {
                "value": "1639341.00000000000000000000"
              },
              "fullyDilutedShares": {
                "value": "1639341"
              },
              "cashRaised": {
                "currency_code": "USD",
                "amount": {
                  "value": "1999999.680000000000000000000"
                }
              }
            }
          ],
          "optionPoolSummaries": [
            {
              "name": "Equity Incentive Plan",
              "optionPoolId": 3,
              "shareClassId": 9,
              "outstandingEquityAwardDerivatives": {
                "value": "0"
              },
              "outstandingCommittedRsas": {
                "value": "0"
              }
            }
          ],
          "warrantBlockSummaries": [
            {
              "warrantBlockId": 2,
              "name": "Series Seed II Warrants",
              "shareClassId": 11,
              "cashRaised": {
                "currency_code": "USD",
                "amount": {
                  "value": "0"
                }
              },
              "fullyDilutedShares": {
                "value": "0"
              },
              "outstandingWarrants": {
                "value": "0"
              }
            },
            {
              "warrantBlockId": 1,
              "name": "Series Seed Warrants",
              "shareClassId": 10,
              "cashRaised": {
                "currency_code": "USD",
                "amount": {
                  "value": "0"
                }
              },
              "fullyDilutedShares": {
                "value": "0"
              },
              "outstandingWarrants": {
                "value": "0"
              }
            }
          ],
          "noteBlockSummaries": [
            {
              "noteBlockId": "4",
              "cashRaised": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "1075000.00"
                }
              },
              "principal": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "1075000.00"
                }
              },
              "interest": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "382524.65"
                }
              },
              "outstanding_debt": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "1457524.65"
                }
              }
            }
          ]
        },
        "properties": {
          "stakeholderId": {
            "type": "string",
            "description": "The identifier of the stakeholder.",
            "maxLength": 50,
            "minLength": 1
          },
          "stakeholderName": {
            "type": "string",
            "description": "The name of the stakeholder.",
            "maxLength": 500,
            "minLength": 1
          },
          "summary": {
            "$ref": "#/components/schemas/publicapiinvestorscapitalizationv1alpha1StakeholderCapitalizationTableSummary",
            "description": "A high-level capitalization table summary scoped to the stakeholder."
          },
          "shareClassSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiinvestorscapitalizationv1alpha1StakeholderShareClassSummary"
            },
            "description": "Per share class summary information scoped to the stakeholder.",
            "maxItems": 500
          },
          "optionPoolSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiinvestorscapitalizationv1alpha1StakeholderOptionPoolSummary"
            },
            "description": "Per option pool summary information scoped to the stakeholder.",
            "maxItems": 200
          },
          "warrantBlockSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiinvestorscapitalizationv1alpha1StakeholderWarrantBlockSummary"
            },
            "description": "Per warrant block summary information scoped to the stakeholder.",
            "maxItems": 200
          },
          "noteBlockSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiinvestorscapitalizationv1alpha1StakeholderNoteBlockSummary"
            },
            "description": "Per note block summary scoped to the stakeholder.",
            "maxItems": 200
          }
        },
        "title": "Capitalization information for an individual stakeholder.",
        "required": [
          "stakeholderId",
          "stakeholderName",
          "summary"
        ]
      },
      "publicapiinvestorscapitalizationv1alpha1StakeholderCapitalizationTable": {
        "type": "object",
        "example": {
          "id": "2d5ed165-bad3-40cf-8982-6309efac0989",
          "company_id": "bc495a05-bd5b-451e-bdfc-88eea3fccfe8",
          "asOfDate": "2022-01-01",
          "stakeholderGroups": [
            {
              "stakeholderGroupId": "1",
              "stakeholderGroupName": "Krakatoa Ventures",
              "stakeholders": [
                {
                  "stakeholderId": "5375",
                  "stakeholderName": "Krakatoa Ventures Fund I, L.P.",
                  "summary": {
                    "fullyDilutedShares": {
                      "value": "4422567"
                    },
                    "outstandingShares": {
                      "value": "4422567.00000000000000000000"
                    }
                  },
                  "shareClassSummaries": [
                    {
                      "shareClassID": 10,
                      "outstandingShares": {
                        "value": "566035.00000000000000000000"
                      },
                      "fullyDilutedShares": {
                        "value": "566035"
                      },
                      "cashRaised": {
                        "currency_code": "USD",
                        "amount": {
                          "value": "150000.0700000000000000000000"
                        }
                      }
                    },
                    {
                      "shareClassID": 104,
                      "outstandingShares": {
                        "value": "2217191.00000000000000000000"
                      },
                      "fullyDilutedShares": {
                        "value": "2217191"
                      },
                      "cashRaised": {
                        "currency_code": "USD",
                        "amount": {
                          "value": "1000000.000000000000000000000"
                        }
                      }
                    },
                    {
                      "shareClassID": 105,
                      "outstandingShares": {
                        "value": "1639341.00000000000000000000"
                      },
                      "fullyDilutedShares": {
                        "value": "1639341"
                      },
                      "cashRaised": {
                        "currency_code": "USD",
                        "amount": {
                          "value": "1999999.680000000000000000000"
                        }
                      }
                    }
                  ],
                  "optionPoolSummaries": [
                    {
                      "name": "Equity Incentive Plan",
                      "optionPoolId": 3,
                      "shareClassId": 9,
                      "outstandingEquityAwardDerivatives": {
                        "value": "0"
                      },
                      "outstandingCommittedRsas": {
                        "value": "0"
                      }
                    }
                  ],
                  "warrantBlockSummaries": [
                    {
                      "warrantBlockId": 2,
                      "name": "Series Seed II Warrants",
                      "shareClassId": 11,
                      "cashRaised": {
                        "currency_code": "USD",
                        "amount": {
                          "value": "0"
                        }
                      },
                      "fullyDilutedShares": {
                        "value": "0"
                      },
                      "outstandingWarrants": {
                        "value": "0"
                      }
                    },
                    {
                      "warrantBlockId": 1,
                      "name": "Series Seed Warrants",
                      "shareClassId": 10,
                      "cashRaised": {
                        "currency_code": "USD",
                        "amount": {
                          "value": "0"
                        }
                      },
                      "fullyDilutedShares": {
                        "value": "0"
                      },
                      "outstandingWarrants": {
                        "value": "0"
                      }
                    }
                  ],
                  "noteBlockSummaries": [
                    {
                      "noteBlockId": "4",
                      "cashRaised": {
                        "currencyCode": {
                          "value": "USD"
                        },
                        "amount": {
                          "value": "1075000.00"
                        }
                      },
                      "principal": {
                        "currencyCode": {
                          "value": "USD"
                        },
                        "amount": {
                          "value": "1075000.00"
                        }
                      },
                      "interest": {
                        "currencyCode": {
                          "value": "USD"
                        },
                        "amount": {
                          "value": "382524.65"
                        }
                      },
                      "outstanding_debt": {
                        "currencyCode": {
                          "value": "USD"
                        },
                        "amount": {
                          "value": "1457524.65"
                        }
                      }
                    }
                  ]
                }
              ],
              "summary": {
                "fullyDilutedShares": {
                  "value": "4422567"
                },
                "cashRaised": {
                  "currency_code": "USD",
                  "amount": {
                    "value": "3149999.750000000000000000000"
                  }
                },
                "outstandingShares": {
                  "value": "4422567.00000000000000000000"
                }
              },
              "shareClassSummaries": [
                {
                  "shareClassID": 10,
                  "outstandingShares": {
                    "value": "566035.00000000000000000000"
                  },
                  "fullyDilutedShares": {
                    "value": "566035"
                  },
                  "cashRaised": {
                    "currency_code": "USD",
                    "amount": {
                      "value": "150000.0700000000000000000000"
                    }
                  }
                },
                {
                  "shareClassID": 104,
                  "outstandingShares": {
                    "value": "2217191.00000000000000000000"
                  },
                  "fullyDilutedShares": {
                    "value": "2217191"
                  },
                  "cashRaised": {
                    "currency_code": "USD",
                    "amount": {
                      "value": "1000000.000000000000000000000"
                    }
                  }
                },
                {
                  "shareClassID": 105,
                  "outstandingShares": {
                    "value": "1639341.00000000000000000000"
                  },
                  "fullyDilutedShares": {
                    "value": "1639341"
                  },
                  "cashRaised": {
                    "currency_code": "USD",
                    "amount": {
                      "value": "1999999.680000000000000000000"
                    }
                  }
                }
              ],
              "optionPoolSummaries": [
                {
                  "name": "Equity Incentive Plan",
                  "optionPoolId": 3,
                  "shareClassId": 9,
                  "outstandingEquityAwardDerivatives": {
                    "value": "0"
                  },
                  "outstandingCommittedRsas": {
                    "value": "0"
                  }
                }
              ],
              "warrantBlockSummaries": [
                {
                  "warrantBlockId": 2,
                  "name": "Series Seed II Warrants",
                  "shareClassId": 11,
                  "cashRaised": {
                    "currency_code": "USD",
                    "amount": {
                      "value": "0"
                    }
                  },
                  "fullyDilutedShares": {
                    "value": "0"
                  },
                  "outstandingWarrants": {
                    "value": "0"
                  }
                },
                {
                  "warrantBlockId": 1,
                  "name": "Series Seed Warrants",
                  "shareClassId": 10,
                  "cashRaised": {
                    "currency_code": "USD",
                    "amount": {
                      "value": "0"
                    }
                  },
                  "fullyDilutedShares": {
                    "value": "0"
                  },
                  "outstandingWarrants": {
                    "value": "0"
                  }
                }
              ],
              "noteBlockSummaries": [
                {
                  "noteBlockId": "4",
                  "cashRaised": {
                    "currencyCode": {
                      "value": "USD"
                    },
                    "amount": {
                      "value": "1075000.00"
                    }
                  },
                  "principal": {
                    "currencyCode": {
                      "value": "USD"
                    },
                    "amount": {
                      "value": "1075000.00"
                    }
                  },
                  "interest": {
                    "currencyCode": {
                      "value": "USD"
                    },
                    "amount": {
                      "value": "382524.65"
                    }
                  },
                  "outstanding_debt": {
                    "currencyCode": {
                      "value": "USD"
                    },
                    "amount": {
                      "value": "1457524.65"
                    }
                  }
                }
              ]
            }
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "example": "2d5ed165-bad3-40cf-8982-6309efac0989",
            "description": "The identifier of the capitalization table.",
            "maxLength": 50,
            "minLength": 1
          },
          "companyId": {
            "type": "string",
            "example": "bc495a05-bd5b-451e-bdfc-88eea3fccfe8",
            "description": "The identifier of the company.",
            "maxLength": 50,
            "minLength": 1
          },
          "asOfDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "Data returned in the response reflects the state of the capitalization table as of this date, specified as an [ISO 8601 extended format calendar date](https://en.wikipedia.org/wiki/ISO_8601#Calendar_dates), i.e. 'YYYY-MM-DD'."
          },
          "stakeholderGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiinvestorscapitalizationv1alpha1StakeholderGroup"
            },
            "description": "List of stakeholder groups."
          }
        },
        "description": "The top-level object that encapsulates an investment company's stakeholder capitalization information.",
        "required": [
          "id",
          "companyId",
          "asOfDate"
        ]
      },
      "publicapiinvestorscapitalizationv1alpha1StakeholderCapitalizationTableSummary": {
        "type": "object",
        "example": {
          "fullyDilutedShares": {
            "value": "61399310.00"
          },
          "outstandingShares": {
            "value": "16328224.00"
          },
          "cashRaised": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "20261050.79"
            }
          }
        },
        "properties": {
          "fullyDilutedShares": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "Total common share equivalent of the company for this stakeholder. This includes all outstanding and issued shares, and those that would be included if all options and warrants were exercised."
          },
          "outstandingShares": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "Undiluted outstanding shares quantity. This is the sum of all `outstandingShares` across all `ShareClassSummary` objects."
          },
          "cashRaised": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "Total cash amount raised."
          }
        },
        "description": "Summary information about the capitalization table.",
        "required": [
          "fullyDilutedShares",
          "outstandingShares",
          "cashRaised"
        ]
      },
      "publicapiinvestorscapitalizationv1alpha1StakeholderGroup": {
        "type": "object",
        "example": {
          "stakeholderGroupId": "1",
          "stakeholderGroupName": "Krakatoa Ventures",
          "stakeholders": [
            {
              "stakeholderId": "5375",
              "stakeholderName": "Krakatoa Ventures Fund I, L.P.",
              "summary": {
                "fullyDilutedShares": {
                  "value": "4422567"
                },
                "outstandingShares": {
                  "value": "4422567.00000000000000000000"
                }
              },
              "shareClassSummaries": [
                {
                  "shareClassID": 10,
                  "outstandingShares": {
                    "value": "566035.00000000000000000000"
                  },
                  "fullyDilutedShares": {
                    "value": "566035"
                  },
                  "cashRaised": {
                    "currency_code": "USD",
                    "amount": {
                      "value": "150000.0700000000000000000000"
                    }
                  }
                },
                {
                  "shareClassID": 104,
                  "outstandingShares": {
                    "value": "2217191.00000000000000000000"
                  },
                  "fullyDilutedShares": {
                    "value": "2217191"
                  },
                  "cashRaised": {
                    "currency_code": "USD",
                    "amount": {
                      "value": "1000000.000000000000000000000"
                    }
                  }
                },
                {
                  "shareClassID": 105,
                  "outstandingShares": {
                    "value": "1639341.00000000000000000000"
                  },
                  "fullyDilutedShares": {
                    "value": "1639341"
                  },
                  "cashRaised": {
                    "currency_code": "USD",
                    "amount": {
                      "value": "1999999.680000000000000000000"
                    }
                  }
                }
              ],
              "optionPoolSummaries": [
                {
                  "name": "Equity Incentive Plan",
                  "optionPoolId": 3,
                  "shareClassId": 9,
                  "outstandingEquityAwardDerivatives": {
                    "value": "0"
                  },
                  "outstandingCommittedRsas": {
                    "value": "0"
                  }
                }
              ],
              "warrantBlockSummaries": [
                {
                  "warrantBlockId": 2,
                  "name": "Series Seed II Warrants",
                  "shareClassId": 11,
                  "cashRaised": {
                    "currency_code": "USD",
                    "amount": {
                      "value": "0"
                    }
                  },
                  "fullyDilutedShares": {
                    "value": "0"
                  },
                  "outstandingWarrants": {
                    "value": "0"
                  }
                },
                {
                  "warrantBlockId": 1,
                  "name": "Series Seed Warrants",
                  "shareClassId": 10,
                  "cashRaised": {
                    "currency_code": "USD",
                    "amount": {
                      "value": "0"
                    }
                  },
                  "fullyDilutedShares": {
                    "value": "0"
                  },
                  "outstandingWarrants": {
                    "value": "0"
                  }
                }
              ],
              "noteBlockSummaries": [
                {
                  "noteBlockId": "4",
                  "cashRaised": {
                    "currencyCode": {
                      "value": "USD"
                    },
                    "amount": {
                      "value": "1075000.00"
                    }
                  },
                  "principal": {
                    "currencyCode": {
                      "value": "USD"
                    },
                    "amount": {
                      "value": "1075000.00"
                    }
                  },
                  "interest": {
                    "currencyCode": {
                      "value": "USD"
                    },
                    "amount": {
                      "value": "382524.65"
                    }
                  },
                  "outstanding_debt": {
                    "currencyCode": {
                      "value": "USD"
                    },
                    "amount": {
                      "value": "1457524.65"
                    }
                  }
                }
              ]
            }
          ],
          "summary": {
            "fullyDilutedShares": {
              "value": "4422567"
            },
            "cashRaised": {
              "currency_code": "USD",
              "amount": {
                "value": "3149999.750000000000000000000"
              }
            },
            "outstandingShares": {
              "value": "4422567.00000000000000000000"
            }
          },
          "shareClassSummaries": [
            {
              "shareClassID": 10,
              "outstandingShares": {
                "value": "566035.00000000000000000000"
              },
              "fullyDilutedShares": {
                "value": "566035"
              },
              "cashRaised": {
                "currency_code": "USD",
                "amount": {
                  "value": "150000.0700000000000000000000"
                }
              }
            },
            {
              "shareClassID": 104,
              "outstandingShares": {
                "value": "2217191.00000000000000000000"
              },
              "fullyDilutedShares": {
                "value": "2217191"
              },
              "cashRaised": {
                "currency_code": "USD",
                "amount": {
                  "value": "1000000.000000000000000000000"
                }
              }
            },
            {
              "shareClassID": 105,
              "outstandingShares": {
                "value": "1639341.00000000000000000000"
              },
              "fullyDilutedShares": {
                "value": "1639341"
              },
              "cashRaised": {
                "currency_code": "USD",
                "amount": {
                  "value": "1999999.680000000000000000000"
                }
              }
            }
          ],
          "optionPoolSummaries": [
            {
              "name": "Equity Incentive Plan",
              "optionPoolId": 3,
              "shareClassId": 9,
              "outstandingEquityAwardDerivatives": {
                "value": "0"
              },
              "outstandingCommittedRsas": {
                "value": "0"
              }
            }
          ],
          "warrantBlockSummaries": [
            {
              "warrantBlockId": 2,
              "name": "Series Seed II Warrants",
              "shareClassId": 11,
              "cashRaised": {
                "currency_code": "USD",
                "amount": {
                  "value": "0"
                }
              },
              "fullyDilutedShares": {
                "value": "0"
              },
              "outstandingWarrants": {
                "value": "0"
              }
            },
            {
              "warrantBlockId": 1,
              "name": "Series Seed Warrants",
              "shareClassId": 10,
              "cashRaised": {
                "currency_code": "USD",
                "amount": {
                  "value": "0"
                }
              },
              "fullyDilutedShares": {
                "value": "0"
              },
              "outstandingWarrants": {
                "value": "0"
              }
            }
          ],
          "noteBlockSummaries": [
            {
              "noteBlockId": "4",
              "cashRaised": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "1075000.00"
                }
              },
              "principal": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "1075000.00"
                }
              },
              "interest": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "382524.65"
                }
              },
              "outstanding_debt": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "1457524.65"
                }
              }
            }
          ]
        },
        "properties": {
          "stakeholderGroupId": {
            "type": "string",
            "description": "The identifier of the stakeholder group.",
            "maxLength": 50,
            "minLength": 1
          },
          "stakeholderGroupName": {
            "type": "string",
            "description": "The name of the stakeholder group.",
            "maxLength": 1000,
            "minLength": 1
          },
          "stakeholders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiinvestorscapitalizationv1alpha1Stakeholder"
            },
            "description": "The list of stakeholders in this stakeholder group.",
            "maxItems": 100
          },
          "summary": {
            "$ref": "#/components/schemas/publicapiinvestorscapitalizationv1alpha1StakeholderCapitalizationTableSummary",
            "description": "A capitalization table summary scoped to the stakeholder group."
          },
          "shareClassSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiinvestorscapitalizationv1alpha1StakeholderShareClassSummary"
            },
            "description": "Per share class summary information scoped to the stakeholder group.",
            "maxItems": 200
          },
          "optionPoolSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiinvestorscapitalizationv1alpha1StakeholderOptionPoolSummary"
            },
            "description": "Per option pool summary information scoped to the stakeholder group.",
            "maxItems": 200
          },
          "warrantBlockSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiinvestorscapitalizationv1alpha1StakeholderWarrantBlockSummary"
            },
            "description": "Per warrant block summary information scoped to the stakeholder group.",
            "maxItems": 200
          },
          "noteBlockSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiinvestorscapitalizationv1alpha1StakeholderNoteBlockSummary"
            },
            "description": "Per note block summary scoped to the stakeholder group.",
            "maxItems": 200
          }
        },
        "description": "A grouping of individual stakeholders used to compute capitalization calculations. All stakeholders within a group are considered when computing capitalization calculations.\n\nThese groupings of individual stakeholders are disjoint sets; i.e., a stakeholder can only belong to a single stakeholder group.",
        "title": "A grouping of individual stakeholders used to compute capitalization calculations.",
        "required": [
          "stakeholderGroupId",
          "stakeholderGroupName"
        ]
      },
      "publicapiinvestorscapitalizationv1alpha1StakeholderNoteBlockSummary": {
        "type": "object",
        "example": {
          "noteBlockId": "4",
          "cashRaised": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "1075000.00"
            }
          },
          "principal": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "1075000.00"
            }
          },
          "interest": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "382524.65"
            }
          },
          "outstanding_debt": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "1457524.65"
            }
          }
        },
        "properties": {
          "noteBlockId": {
            "type": "string",
            "description": "The identifier of the note block.",
            "maxLength": 50,
            "minLength": 1
          },
          "cashRaised": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The cash raised for the note block."
          },
          "principal": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The total outstanding principal for the note block. The outstanding debt for the note block is the `principal` plus the `interest`."
          },
          "interest": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "Total interest for the note block. The outstanding debt for the note block is the `principal` plus the `interest`."
          },
          "outstandingDebt": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "Total outstanding debt for the note block. The outstanding debt for the note block is the `principal` plus the `interest`."
          },
          "name": {
            "type": "string",
            "description": "The name of the note block.",
            "maxLength": 1000
          }
        },
        "description": "Note block summary information scoped to a specific stakeholder.",
        "required": [
          "noteBlockId",
          "cashRaised",
          "principal",
          "interest",
          "name"
        ]
      },
      "publicapiinvestorscapitalizationv1alpha1StakeholderOptionPoolSummary": {
        "type": "object",
        "example": {
          "optionPoolId": "3",
          "name": "Equity Incentive Plan",
          "shareClassId": "10",
          "outstandingEquityAwardDerivatives": {
            "value": "3725634.0"
          },
          "outstandingCommittedRestrictedStockAwards": {
            "value": "0"
          }
        },
        "properties": {
          "optionPoolId": {
            "type": "string",
            "description": "The identifier of the option pool.",
            "maxLength": 50,
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "The name of the option pool.",
            "maxLength": 100,
            "minLength": 1
          },
          "shareClassId": {
            "type": "string",
            "description": "The identifier of the share class used by the option pool to issue equity.",
            "maxLength": 50,
            "minLength": 1
          },
          "outstandingEquityAwardDerivatives": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "Outstanding equity award derivatives. This includes:\n - Option Grants\n - Restricted Stock Units (RSUs)\n - Stock Appreciation Rights (SARs)\n - Cash Bonus Unit (CBUs)\n - International equity awards",
            "title": "Outstanding equity award derivatives. This includes:\n- Option Grants\n- Restricted Stock Units (RSU)\n- Stock Appreciation Rights (SAR)\n- Cash Bonus Unit (CBU)\n- International equity awards"
          },
          "outstandingCommittedRestrictedStockAwards": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "Board approved but unissued Restricted Stock Awards (RSAs)."
          }
        },
        "description": "Option pool summary scoped to a specific stakeholder.",
        "required": [
          "optionPoolId",
          "name",
          "shareClassId",
          "outstandingEquityAwardDerivatives",
          "outstandingCommittedRestrictedStockAwards"
        ]
      },
      "publicapiinvestorscapitalizationv1alpha1StakeholderShareClassSummary": {
        "type": "object",
        "example": {
          "shareClassId": "10",
          "name": "Common",
          "fullyDilutedShares": {
            "value": "5603645.00"
          },
          "outstandingShares": {
            "value": "5603645.00"
          },
          "cashRaised": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "1159354.84"
            }
          }
        },
        "properties": {
          "shareClassId": {
            "type": "string",
            "description": "The identifier of the share class.",
            "maxLength": 50,
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "The name of the share class.",
            "maxLength": 1000,
            "minLength": 1
          },
          "fullyDilutedShares": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The fully diluted certificated shares for the share class. See [this Support article](https://support.carta.com/s/article/authorized-outstanding-issued-fully-diluted-shares) for information on fully diluted shares in a share class."
          },
          "outstandingShares": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The total outstanding certificates in the share class. See [this Support article](https://support.carta.com/s/article/authorized-outstanding-issued-fully-diluted-shares) for information on outstanding shares in a share class."
          },
          "cashRaised": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "Total currency amount raised for share class."
          }
        },
        "description": "Share class summary scoped to a specific stakeholder. This includes all certificated, non-certificated and RSAs with an issue date.",
        "required": [
          "shareClassId",
          "name",
          "fullyDilutedShares",
          "outstandingShares",
          "cashRaised"
        ]
      },
      "publicapiinvestorscapitalizationv1alpha1StakeholderWarrantBlockSummary": {
        "type": "object",
        "example": {
          "warrantBlockId": "1",
          "name": "Series Seed Warrants",
          "shareClassId": "10",
          "fullyDilutedShares": {
            "value": "3029344.00"
          },
          "outstandingWarrants": {
            "value": "3029344.00"
          },
          "cashRaised": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "1075000.00"
            }
          }
        },
        "properties": {
          "warrantBlockId": {
            "type": "string",
            "description": "The identifier of the warrant block.",
            "maxLength": 50,
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "The name of the warrant block.",
            "maxLength": 1000,
            "minLength": 1
          },
          "shareClassId": {
            "type": "string",
            "description": "The identifier of the share class for this warrant block.",
            "maxLength": 50,
            "minLength": 1
          },
          "fullyDilutedShares": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "Common share equivalents if all warrants converted to shares."
          },
          "outstandingWarrants": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "Outstanding warrants quantity."
          },
          "cashRaised": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The cash raised across all warrants."
          }
        },
        "description": "Warrant block summary scoped to a specific stakeholder.",
        "required": [
          "warrantBlockId",
          "name",
          "shareClassId",
          "fullyDilutedShares",
          "outstandingWarrants",
          "cashRaised"
        ]
      },
      "publicapiinvestorssecuritiesv1alpha1Certificate": {
        "type": "object",
        "example": {
          "firmId": "0c481821-3bc8-42a5-94cd-a2c89d88429d",
          "firmName": "Krakatoa Ventures",
          "fundId": "6c26b46f-6515-4685-a438-9811c607788a",
          "fundName": "Krakatoa Ventures Fund I, L.P.",
          "companyId": "a44b42cb-d16a-4427-8dd2-d33083fb638a",
          "companyName": "Meetly",
          "currentStakeholderId": "11",
          "id": "143",
          "securityLabel": "CS-10",
          "shareClassId": "64",
          "shareClassName": "Common (certificated)",
          "issueDate": {
            "value": "2024-05-24"
          },
          "quantity": {
            "value": "1000.0"
          },
          "pricePerShare": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "50.0"
            }
          },
          "canceledDate": {
            "value": "2026-05-24"
          },
          "terminationDate": {
            "value": "2030-05-24"
          },
          "lastModifiedDatetime": {
            "value": "2024-07-30T09:31:57.000000Z"
          }
        },
        "properties": {
          "firmId": {
            "type": "string",
            "example": "0c481821-3bc8-42a5-94cd-a2c89d88429d",
            "description": "The identifier of the investment firm that holds the certificate.",
            "maxLength": 50,
            "minLength": 1
          },
          "firmName": {
            "type": "string",
            "example": "Krakatoa Ventures",
            "description": "The name of the investment firm that holds the certificate.",
            "maxLength": 1000,
            "minLength": 1
          },
          "fundId": {
            "type": "string",
            "example": "6c26b46f-6515-4685-a438-9811c607788a",
            "description": "The identifier of the investment fund that manages the certificate.",
            "maxLength": 50,
            "minLength": 1
          },
          "fundName": {
            "type": "string",
            "example": "Krakatoa Ventures Fund I, L.P.",
            "description": "The name of the investment fund that manages the certificate.",
            "maxLength": 1000,
            "minLength": 1
          },
          "companyId": {
            "type": "string",
            "example": "a44b42cb-d16a-4427-8dd2-d33083fb638a",
            "description": "The identifier of the company that issued the certificate.",
            "maxLength": 50,
            "minLength": 1
          },
          "companyName": {
            "type": "string",
            "example": "Meetly",
            "description": "The name of the company that issued the certificate.",
            "maxLength": 1000,
            "minLength": 1
          },
          "currentStakeholderId": {
            "type": "string",
            "example": "11",
            "description": "The identifier of the stakeholder currently holding the certificate.",
            "maxLength": 50,
            "minLength": 1
          },
          "id": {
            "type": "string",
            "example": "143",
            "description": "The identifier of the certificate.",
            "maxLength": 50,
            "minLength": 1
          },
          "securityLabel": {
            "type": "string",
            "example": "CS-10",
            "description": "The label representing the certificate.",
            "maxLength": 50,
            "minLength": 1
          },
          "shareClassId": {
            "type": "string",
            "example": "64",
            "description": "The identifier of the share class of the shares held in the certificate.",
            "maxLength": 50,
            "minLength": 1
          },
          "shareClassName": {
            "type": "string",
            "example": "Common (certificated)",
            "description": "The name of the share class of the shares held in the certificate.",
            "maxLength": 1000,
            "minLength": 1
          },
          "issueDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "example": {
              "value": "2024-05-24"
            },
            "description": "The date the certificate was issued."
          },
          "quantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "example": {
              "value": "1000.0"
            },
            "description": "The number of shares in the certificate."
          },
          "pricePerShare": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "example": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "50.0"
              }
            },
            "description": "The price of each share in the certificate."
          },
          "canceledDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "example": {
              "value": "2026-05-24"
            },
            "description": "The date the certificate was canceled."
          },
          "terminationDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "example": {
              "value": "2030-05-24"
            },
            "description": "The date the certificate was terminated."
          }
        },
        "description": "A certificate.",
        "required": [
          "quantity",
          "pricePerShare"
        ]
      },
      "publicapiinvestorssecuritiesv1alpha1ConvertibleNote": {
        "type": "object",
        "example": {
          "firmId": "0c481821-3bc8-42a5-94cd-a2c89d88429d",
          "firmName": "Krakatoa Ventures",
          "fundId": "6c26b46f-6515-4685-a438-9811c607788a",
          "fundName": "Krakatoa Ventures Fund I, L.P.",
          "companyId": "a44b42cb-d16a-4427-8dd2-d33083fb638a",
          "companyName": "Meetly",
          "currentStakeholderId": "7",
          "id": "1",
          "securityLabel": "CN-3",
          "issueDate": {
            "value": "2024-05-24"
          },
          "conversionDate": {
            "value": "2024-05-24"
          },
          "canceledDate": {
            "value": "2024-05-24"
          },
          "cashPaid": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "10000.0"
            }
          },
          "maturityDate": {
            "value": "2024-05-24"
          },
          "interest": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "50.0"
            }
          },
          "noteBlock": {
            "id": "4",
            "name": "Bridge 2014",
            "prefix": "CN",
            "noteType": "CONVERTIBLE_DEBT",
            "status": "EXECUTED"
          },
          "interestAccrualPeriod": "INTEREST_ACCRUAL_PERIOD_MONTHLY_FIRST_OF_MONTH",
          "interestRate": {
            "value": "3.0"
          },
          "interestCompoundingPeriod": "ANNUALLY",
          "dayCountBasis": "COUNT_ACTUAL_360",
          "priceCap": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "12000.0"
            }
          },
          "discountPercentage": {
            "value": "0.5"
          },
          "changeInControlPercent": {
            "value": "0.5"
          },
          "conversionTrigger": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "500.0"
            }
          },
          "canceledQuantity": {
            "value": "1000.0"
          }
        },
        "properties": {
          "firmId": {
            "type": "string",
            "example": "0c481821-3bc8-42a5-94cd-a2c89d88429d",
            "description": "The identifier of the investment firm that holds the convertible note.",
            "maxLength": 50,
            "minLength": 1
          },
          "firmName": {
            "type": "string",
            "example": "Krakatoa Ventures",
            "description": "The name of the investment firm that holds the convertible note.",
            "maxLength": 1000,
            "minLength": 1
          },
          "fundId": {
            "type": "string",
            "example": "6c26b46f-6515-4685-a438-9811c607788a",
            "description": "The identifier of the investment fund that manages the convertible note.",
            "maxLength": 50,
            "minLength": 1
          },
          "fundName": {
            "type": "string",
            "example": "Krakatoa Ventures Fund I, L.P.",
            "description": "The name of the investment fund that manages the convertible note.",
            "maxLength": 1000,
            "minLength": 1
          },
          "companyId": {
            "type": "string",
            "example": "a44b42cb-d16a-4427-8dd2-d33083fb638a",
            "description": "The identifier of the company that issued the convertible note.",
            "maxLength": 50,
            "minLength": 1
          },
          "companyName": {
            "type": "string",
            "example": "Meetly",
            "description": "The name of the company that issued the convertible note.",
            "maxLength": 1000,
            "minLength": 1
          },
          "currentStakeholderId": {
            "type": "string",
            "example": "7",
            "description": "The identifier of the stakeholder currently holding the convertible note.",
            "maxLength": 50,
            "minLength": 1
          },
          "id": {
            "type": "string",
            "example": "1",
            "description": "The identifier of the convertible note.",
            "maxLength": 50,
            "minLength": 1
          },
          "securityLabel": {
            "type": "string",
            "example": "CN-3",
            "description": "The label representing the convertible note.",
            "maxLength": 50,
            "minLength": 1
          },
          "issueDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "example": {
              "value": "2024-05-24"
            },
            "description": "The date the convertible note was issued."
          },
          "conversionDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "example": {
              "value": "2024-05-24"
            },
            "description": "The date the convertible note was converted to a certificate."
          },
          "canceledDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "example": {
              "value": "2024-05-24"
            },
            "description": "The date the convertible note was canceled."
          },
          "cashPaid": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "example": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "10000.0"
              }
            },
            "description": "The amount of cash that the stakeholder paid for the convertible note.\n\nFor example, if the stakeholder invested $10,000, then $10,000 is the `cash_paid`. This field is also known as `principal`."
          },
          "maturityDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "example": {
              "value": "2024-05-24"
            },
            "description": "The date on which the convertible note matures.\n\nAt maturity, the convertible note's `cash_paid` and `interest` must be paid back if the convertible note hasn't converted into equity."
          },
          "interest": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "example": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "50.0"
              }
            },
            "description": "The accrued interest for the convertible note."
          },
          "noteBlock": {
            "$ref": "#/components/schemas/publicapiinvestorssecuritiesv1alpha1NoteBlock",
            "example": {
              "id": "0c481821-3bc8-42a5-94cd-a2c89d88429d",
              "name": "Bridge 2014",
              "prefix": "CN",
              "noteType": "CONVERTIBLE_DEBT",
              "status": "EXECUTED"
            },
            "description": "The note block associated with the convertible note."
          },
          "interestAccrualPeriod": {
            "$ref": "#/components/schemas/publicapiinvestorssecuritiesv1alpha1InterestAccrualPeriod",
            "example": "INTEREST_ACCRUAL_PERIOD_MONTHLY_FIRST_OF_MONTH",
            "description": "The length of time over which the interest due to the lender is calculated."
          },
          "interestRate": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "example": {
              "value": "3.0"
            },
            "description": "The annual interest rate that the note accrues."
          },
          "interestCompoundingPeriod": {
            "$ref": "#/components/schemas/publicapiinvestorssecuritiesv1alpha1InterestCompoundingPeriod",
            "example": "ANNUALLY",
            "description": "The interest compounding period of the convertible note."
          },
          "dayCountBasis": {
            "$ref": "#/components/schemas/publicapiinvestorssecuritiesv1alpha1DayCountBasis",
            "example": "COUNT_ACTUAL_360",
            "description": "The standardized way of counting the number of days between two dates."
          },
          "priceCap": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "example": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "12000.0"
              }
            },
            "description": "The valuation cap sets a maximum value at which a convertible security will convert into equity in the financing round.\n\nThis valuation cap stands regardless of the valuation of the financing round."
          },
          "discountPercentage": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "example": {
              "value": "0.5"
            },
            "description": "The discount applied to the price per share when the note holder will purchase shares in the next fundraising round. 1 represents 1%."
          },
          "changeInControlPercent": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "example": {
              "value": "0.5"
            },
            "description": " Denotes any premium or multiplier applied to the `cash_paid` in the event of a change in control prior to the maturity date. 1 represents 1%."
          },
          "conversionTrigger": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "example": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "500.0"
              }
            },
            "description": "For convertibles to convert into the next equity round, terms may be included that specify that the round be of a certain size for the convertible to convert."
          },
          "canceledQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "example": {
              "value": "1000.0"
            },
            "description": "The quantity of shares in this convertible note that were canceled"
          }
        },
        "description": "A convertible note.",
        "required": [
          "cashPaid",
          "interest",
          "noteBlock",
          "interestCompoundingPeriod",
          "dayCountBasis"
        ]
      },
      "publicapiinvestorssecuritiesv1alpha1DayCountBasis": {
        "type": "string",
        "enum": [
          "DAY_COUNT_BASIS_UNSPECIFIED",
          "COUNT_30_360",
          "COUNT_ACTUAL_360",
          "COUNT_ACTUAL_365"
        ],
        "default": "DAY_COUNT_BASIS_UNSPECIFIED",
        "description": "- DAY_COUNT_BASIS_UNSPECIFIED: Denotes the absence of a value."
      },
      "publicapiinvestorssecuritiesv1alpha1Exercise": {
        "type": "object",
        "example": {
          "id": "c6f330fae169ecc765707c4804a9a120",
          "quantity": {
            "value": "500.0"
          },
          "exerciseDate": {
            "value": "2024-05-24"
          },
          "status": "COMPLETE",
          "type": "CASHLESS"
        },
        "properties": {
          "id": {
            "type": "string",
            "example": "c6f330fae169ecc765707c4804a9a120",
            "description": "The identifier of the exercise.",
            "maxLength": 50,
            "minLength": 1
          },
          "quantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "example": {
              "value": "500.0"
            },
            "description": "The number of shares requested to be exercised."
          },
          "exerciseDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "example": {
              "value": "2024-05-24"
            },
            "description": "The date when the exercise request initiated."
          },
          "status": {
            "$ref": "#/components/schemas/publicapiinvestorssecuritiesv1alpha1ExerciseStatus",
            "example": "COMPLETE",
            "description": "The status of the exercise."
          },
          "type": {
            "$ref": "#/components/schemas/publicapiinvestorssecuritiesv1alpha1ExerciseType",
            "example": "CASHLESS",
            "description": "The type of exercise request."
          }
        },
        "description": "An exercise.",
        "required": [
          "quantity",
          "exerciseDate",
          "status",
          "type"
        ]
      },
      "publicapiinvestorssecuritiesv1alpha1ExerciseStatus": {
        "type": "string",
        "enum": [
          "EXERCISE_STATUS_UNSPECIFIED",
          "PENDING",
          "COMPLETE",
          "CANCELED"
        ],
        "default": "EXERCISE_STATUS_UNSPECIFIED",
        "description": "The status of an exercise.\n\n - EXERCISE_STATUS_UNSPECIFIED: Denotes the absence of a value.\n - PENDING: The exercise is in pending state.\n - COMPLETE: The exercise is complete and a warrant was issued.\n - CANCELED: The exercise is cancelled."
      },
      "publicapiinvestorssecuritiesv1alpha1ExerciseType": {
        "type": "string",
        "enum": [
          "EXERCISE_TYPE_UNSPECIFIED",
          "CASH",
          "CASHLESS",
          "NET",
          "BLENDED"
        ],
        "default": "EXERCISE_TYPE_UNSPECIFIED",
        "description": "The type of an exercise request.\n\n - EXERCISE_TYPE_UNSPECIFIED: Denotes the absence of a value.\n - CASH: The cost of exercise was covered in cash.\n - CASHLESS: The cost of exercise was covered by selling shares.\n - NET: The cost of exercise was covered by withholding shares.\n - BLENDED: The cost of exercise was covered by a combination of cash and selling of shares."
      },
      "publicapiinvestorssecuritiesv1alpha1InterestAccrualPeriod": {
        "type": "string",
        "enum": [
          "INTEREST_ACCRUAL_PERIOD_UNSPECIFIED",
          "INTEREST_ACCRUAL_PERIOD_DAILY",
          "INTEREST_ACCRUAL_PERIOD_WEEKLY",
          "INTEREST_ACCRUAL_PERIOD_MONTHLY",
          "INTEREST_ACCRUAL_PERIOD_MONTHLY_FIRST_OF_MONTH",
          "INTEREST_ACCRUAL_PERIOD_SEMI_ANNUALLY",
          "INTEREST_ACCRUAL_PERIOD_ANNUALLY",
          "INTEREST_ACCRUAL_PERIOD_QUARTERLY_CALENDAR",
          "INTEREST_ACCRUAL_PERIOD_SEMI_ANNUALLY_CALENDAR",
          "INTEREST_ACCRUAL_PERIOD_ANNUALLY_CALENDAR"
        ],
        "default": "INTEREST_ACCRUAL_PERIOD_UNSPECIFIED",
        "description": "The length of time over which the interest due to the lender is calculated.\n\n - INTEREST_ACCRUAL_PERIOD_UNSPECIFIED: Denotes the absence of a value."
      },
      "publicapiinvestorssecuritiesv1alpha1InterestCompoundingPeriod": {
        "type": "string",
        "enum": [
          "INTEREST_COMPOUNDING_PERIOD_UNSPECIFIED",
          "SIMPLE",
          "DAILY",
          "MONTHLY",
          "SEMI_ANNUALLY",
          "ANNUALLY",
          "QUARTERLY_CALENDAR"
        ],
        "default": "INTEREST_COMPOUNDING_PERIOD_UNSPECIFIED",
        "description": "The enumerated string defining if the interest accrual is compounding or not, and the period used in calculating compounded interest. \nSimple interest is calculated only on the principal amount of the loan, while compound interest is calculated on the principal amount and also on the accumulated interest of the previous period.\n\n - INTEREST_COMPOUNDING_PERIOD_UNSPECIFIED: Denotes the absence of a value."
      },
      "publicapiinvestorssecuritiesv1alpha1ListCertificatesResponse": {
        "type": "object",
        "properties": {
          "certificates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiinvestorssecuritiesv1alpha1Certificate"
            },
            "description": "The certificates returned in the `ListCertificates` response."
          },
          "nextPageToken": {
            "type": "string",
            "example": "eyJwYWdlX3NpemUiOiAxMCwgImFzX29mX2RhdGUiOiAiMjAyNC0wNi0xMVQwMDowMDowMC4wMDAwMDBaIiwgImluZGV4IjogMCwgImlubmVyX3BhZ2VfdG9rZW4iOiAiZXlKc2FXMXBkQ0k2SURFd0xDQWliRzlqWVhScGIyNGlPaUF3TENBaWNYVmxjbmxmY21WeGRXVnpkRjlwWkNJNklDSXhNak5sTkRVMk55MWxPRGxpTFRFeVpETXRZVFExTmkwME1qWTJNVFF4TnpRd01EQWlmUT09IiwgImlubmVyX3BhZ2Vfb2Zmc2V0IjogMH0=",
            "description": "Submit the `nextPageToken` string as `pageToken` in a subsequent request to retrieve the next page. If the `ListCertificates` response omits `nextPageToken`, then there are no subsequent pages."
          }
        },
        "description": "The response from the `ListCertificates` endpoint."
      },
      "publicapiinvestorssecuritiesv1alpha1ListConvertibleNotesResponse": {
        "type": "object",
        "properties": {
          "convertibleNotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiinvestorssecuritiesv1alpha1ConvertibleNote"
            },
            "description": "The convertible notes returned in the `ListConvertibleNotes` response."
          },
          "nextPageToken": {
            "type": "string",
            "example": "eyJwYWdlX3NpemUiOiAxMCwgImFzX29mX2RhdGUiOiAiMjAyNC0wNi0xMVQwMDowMDowMC4wMDAwMDBaIiwgImluZGV4IjogMCwgImlubmVyX3BhZ2VfdG9rZW4iOiAiZXlKc2FXMXBkQ0k2SURFd0xDQWliRzlqWVhScGIyNGlPaUF3TENBaWNYVmxjbmxmY21WeGRXVnpkRjlwWkNJNklDSXhNak5sTkRVMk55MWxPRGxpTFRFeVpETXRZVFExTmkwME1qWTJNVFF4TnpRd01EQWlmUT09IiwgImlubmVyX3BhZ2Vfb2Zmc2V0IjogMH0=",
            "description": "Submit the `nextPageToken` string as `pageToken` in a subsequent request to retrieve the next page. If the `ListConvertibleNotes` response omits `nextPageToken`, then there are no subsequent pages."
          }
        },
        "description": "The response from the `ListConvertibleNotes` endpoint."
      },
      "publicapiinvestorssecuritiesv1alpha1ListWarrantsResponse": {
        "type": "object",
        "properties": {
          "warrants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiinvestorssecuritiesv1alpha1Warrant"
            },
            "description": "The warrants returned in the `ListWarrants` response."
          },
          "nextPageToken": {
            "type": "string",
            "example": "eyJwYWdlX3NpemUiOiAxMCwgImFzX29mX2RhdGUiOiAiMjAyNC0wNi0xMVQwMDowMDowMC4wMDAwMDBaIiwgImluZGV4IjogMCwgImlubmVyX3BhZ2VfdG9rZW4iOiAiZXlKc2FXMXBkQ0k2SURFd0xDQWliRzlqWVhScGIyNGlPaUF3TENBaWNYVmxjbmxmY21WeGRXVnpkRjlwWkNJNklDSXhNak5sTkRVMk55MWxPRGxpTFRFeVpETXRZVFExTmkwME1qWTJNVFF4TnpRd01EQWlmUT09IiwgImlubmVyX3BhZ2Vfb2Zmc2V0IjogMH0=",
            "description": "Submit the `nextPageToken` string as `pageToken` in a subsequent request to retrieve the next page. If the `ListWarrants` response omits `nextPageToken`, then there are no subsequent pages."
          }
        },
        "description": "The response from the `ListWarrants` endpoint."
      },
      "publicapiinvestorssecuritiesv1alpha1NoteBlock": {
        "type": "object",
        "example": {
          "id": "4",
          "name": "Bridge 2014",
          "prefix": "CN",
          "noteType": "CONVERTIBLE_DEBT",
          "status": "EXECUTED"
        },
        "properties": {
          "id": {
            "type": "string",
            "example": "4",
            "description": "The identifier of the note block.",
            "maxLength": 50,
            "minLength": 1
          },
          "name": {
            "type": "string",
            "example": "Bridge 2014",
            "description": "The name of the note block.",
            "maxLength": 1000,
            "minLength": 1
          },
          "prefix": {
            "type": "string",
            "example": "CN",
            "description": "The prefix of the note block.",
            "maxLength": 1000,
            "minLength": 1
          },
          "noteType": {
            "$ref": "#/components/schemas/publicapiinvestorssecuritiesv1alpha1NoteType",
            "example": "CONVERTIBLE_DEBT",
            "description": "The type of the note related to the note block."
          },
          "status": {
            "$ref": "#/components/schemas/publicapiinvestorssecuritiesv1alpha1NoteBlockStatus",
            "example": "EXECUTED",
            "description": "The status of the note block."
          }
        },
        "description": "A note block associated with a convertible note.",
        "required": [
          "noteType",
          "status"
        ]
      },
      "publicapiinvestorssecuritiesv1alpha1NoteBlockStatus": {
        "type": "string",
        "enum": [
          "NOTE_BLOCK_STATUS_UNSPECIFIED",
          "EXECUTED",
          "DRAFT",
          "INACTIVE"
        ],
        "default": "NOTE_BLOCK_STATUS_UNSPECIFIED",
        "description": "The status of the note block.\n\n - NOTE_BLOCK_STATUS_UNSPECIFIED: Denotes the absence of a value."
      },
      "publicapiinvestorssecuritiesv1alpha1NoteType": {
        "type": "string",
        "enum": [
          "NOTE_TYPE_UNSPECIFIED",
          "DEBT",
          "CONVERTIBLE_DEBT",
          "CONVERTIBLE_EQUITY",
          "SAFE"
        ],
        "default": "NOTE_TYPE_UNSPECIFIED",
        "description": "The type of the note related to the note block.\n\n - NOTE_TYPE_UNSPECIFIED: Denotes the absence of a value."
      },
      "publicapiinvestorssecuritiesv1alpha1VestingSchedule": {
        "type": "object",
        "example": {
          "name": "1/48, 1Y cliff",
          "lastModifiedDate": {
            "value": "2024-05-24"
          },
          "startDate": {
            "value": "2022-05-24"
          },
          "endDate": {
            "value": "2026-05-24"
          }
        },
        "properties": {
          "name": {
            "type": "string",
            "example": "1/48, 1Y cliff",
            "description": "The name of the vesting schedule.",
            "maxLength": 1000,
            "minLength": 1
          },
          "lastModifiedDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "example": {
              "value": "2024-05-24"
            },
            "description": "The date the vesting schedule was last modified."
          },
          "startDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "example": {
              "value": "2022-05-24"
            },
            "description": "The start date of the vesting schedule."
          },
          "endDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "example": {
              "value": "2026-05-24"
            },
            "description": "The end date of the vesting schedule.\n\nThis considers forfeitures, cancellations and expirations."
          }
        },
        "description": "A vesting schedule.",
        "required": [
          "lastModifiedDate"
        ]
      },
      "publicapiinvestorssecuritiesv1alpha1Warrant": {
        "type": "object",
        "example": {
          "firmId": "0c481821-3bc8-42a5-94cd-a2c89d88429d",
          "firmName": "Krakatoa Ventures",
          "fundId": "6c26b46f-6515-4685-a438-9811c607788a",
          "fundName": "Krakatoa Ventures Fund I, L.P.",
          "companyId": "a44b42cb-d16a-4427-8dd2-d33083fb638a",
          "companyName": "Meetly",
          "currentStakeholderId": "12",
          "id": "144",
          "securityLabel": "PSW-6",
          "issueDate": {
            "value": "2024-05-24"
          },
          "quantity": {
            "value": "1000.0"
          },
          "pricePerShare": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "50.0"
            }
          },
          "canceledDate": {
            "value": "2026-05-24"
          },
          "warrantBlock": {
            "id": "1022",
            "name": "Series Seed Warrants",
            "prefix": "PSW",
            "shareClassId": "65",
            "shareClassName": "Series Seed Preferred (PS)",
            "boardApprovalDate": {
              "value": "2030-05-24"
            },
            "exercisePrice": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "5000.0"
              }
            }
          },
          "vestingSchedule": {
            "name": "1/48, 1Y cliff",
            "lastModifiedDate": {
              "value": "2024-05-24"
            },
            "startDate": {
              "value": "2022-05-24"
            },
            "endDate": {
              "value": "2026-05-24"
            }
          },
          "exercises": [
            {
              "id": "c6f330fae169ecc765707c4804a9a120",
              "quantity": {
                "value": "500.0"
              },
              "exerciseDate": {
                "value": "2024-05-24"
              },
              "status": "COMPLETE",
              "type": "CASHLESS"
            }
          ],
          "canceledQuantity": {
            "value": "500.0"
          },
          "expiredQuantity": {
            "value": "500.0"
          }
        },
        "properties": {
          "firmId": {
            "type": "string",
            "example": "0c481821-3bc8-42a5-94cd-a2c89d88429d",
            "description": "The identifier of the investment firm that holds the warrant.",
            "maxLength": 50,
            "minLength": 1
          },
          "firmName": {
            "type": "string",
            "example": "Krakatoa Ventures",
            "description": "The name of the investment firm that holds the warrant.",
            "maxLength": 1000,
            "minLength": 1
          },
          "fundId": {
            "type": "string",
            "example": "6c26b46f-6515-4685-a438-9811c607788a",
            "description": "The identifier of the investment fund that manages the warrant.",
            "maxLength": 50,
            "minLength": 1
          },
          "fundName": {
            "type": "string",
            "example": "Krakatoa Ventures Fund I, L.P.",
            "description": "The name of the investment fund that manages the warrant.",
            "maxLength": 1000,
            "minLength": 1
          },
          "companyId": {
            "type": "string",
            "example": "a44b42cb-d16a-4427-8dd2-d33083fb638a",
            "description": "The identifier of the company that issued the warrant.",
            "maxLength": 50,
            "minLength": 1
          },
          "companyName": {
            "type": "string",
            "example": "Meetly",
            "description": "The name of the company that issued the warrant.",
            "maxLength": 1000,
            "minLength": 1
          },
          "currentStakeholderId": {
            "type": "string",
            "example": "12",
            "description": "The identifier of the stakeholder currently holding the warrant.",
            "maxLength": 50,
            "minLength": 1
          },
          "id": {
            "type": "string",
            "example": "144",
            "description": "The identifier of the warrant.",
            "maxLength": 50,
            "minLength": 1
          },
          "securityLabel": {
            "type": "string",
            "example": "PSW-6",
            "description": "The label representing the warrant.",
            "maxLength": 50,
            "minLength": 1
          },
          "issueDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "example": {
              "value": "2024-05-24"
            },
            "description": "The date the warrant was issued."
          },
          "quantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "example": {
              "value": "1000.0"
            },
            "description": "The number of shares in the warrant."
          },
          "pricePerShare": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "example": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "50.0"
              }
            },
            "description": "The price of each share in the warrant."
          },
          "canceledDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "example": {
              "value": "2026-05-24"
            },
            "description": "The date the warrant was canceled."
          },
          "warrantBlock": {
            "$ref": "#/components/schemas/publicapiinvestorssecuritiesv1alpha1WarrantBlock",
            "example": {
              "id": "740885f3-392a-4bd7-a59f-39be6eb5207f",
              "name": "Series Seed Warrants",
              "prefix": "PSW",
              "shareClassId": "ed3a0b6e-09ae-4df1-b74c-a35a2218fdc1",
              "shareClassName": "Series Seed Preferred (PS)",
              "boardApprovalDate": {
                "value": "2030-05-24"
              },
              "exercisePrice": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "5000.0"
                }
              }
            },
            "description": "The warrant block associated with the warrant."
          },
          "vestingSchedule": {
            "$ref": "#/components/schemas/publicapiinvestorssecuritiesv1alpha1VestingSchedule",
            "example": {
              "name": "1/48, 1Y cliff",
              "lastModifiedDate": {
                "value": "2024-05-24"
              },
              "startDate": {
                "value": "2022-05-24"
              },
              "endDate": {
                "value": "2026-05-24"
              }
            },
            "description": "The vesting schedule of the warrant."
          },
          "exercises": {
            "type": "array",
            "example": [
              {
                "id": "1680588a-cd2d-44cd-8f96-9fa5051b454b",
                "quantity": {
                  "value": "500.0"
                },
                "exerciseDate": {
                  "value": "2024-05-24"
                },
                "status": "COMPLETE",
                "type": "CASHLESS"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/publicapiinvestorssecuritiesv1alpha1Exercise"
            },
            "description": "The list of all exercises associated with the warrant."
          },
          "canceledQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "example": {
              "value": "500.0"
            },
            "description": "The quantity of shares in this warrant that were canceled."
          },
          "expiredQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "example": {
              "value": "500.0"
            },
            "description": "The quantity of shares in this warrant that were expired."
          }
        },
        "description": "A warrant.",
        "required": [
          "quantity",
          "pricePerShare",
          "warrantBlock",
          "exercises"
        ]
      },
      "publicapiinvestorssecuritiesv1alpha1WarrantBlock": {
        "type": "object",
        "example": {
          "id": "1022",
          "name": "Series Seed Warrants",
          "prefix": "PSW",
          "shareClassId": "65",
          "shareClassName": "Series Seed Preferred (PS)",
          "boardApprovalDate": {
            "value": "2030-05-24"
          },
          "exercisePrice": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "5000.0"
            }
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "example": "1022",
            "description": "The identifier of the warrant block.",
            "maxLength": 50,
            "minLength": 1
          },
          "name": {
            "type": "string",
            "example": "Series Seed Warrants",
            "description": "The name of the warrant block.",
            "maxLength": 1000,
            "minLength": 1
          },
          "prefix": {
            "type": "string",
            "example": "PSW",
            "description": "The prefix of the warrant block.",
            "maxLength": 1000,
            "minLength": 1
          },
          "shareClassId": {
            "type": "string",
            "example": "65",
            "description": "The identifier of the share class of the shares held in the warrant block.",
            "maxLength": 50,
            "minLength": 1
          },
          "shareClassName": {
            "type": "string",
            "example": "Series Seed Preferred (PS)",
            "description": "The name of the share class of the shares held in the warrant block.",
            "maxLength": 1000,
            "minLength": 1
          },
          "boardApprovalDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "example": {
              "value": "2030-05-24"
            },
            "description": "The date the warrant block was approved by the board."
          },
          "exercisePrice": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "example": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "5000.0"
              }
            },
            "description": "The exercise price of the warrant block."
          }
        },
        "description": "A warrant block."
      },
      "publicapiissuerscapitalizationv1alpha1CapitalizationTable": {
        "type": "object",
        "example": {
          "issuerId": "7",
          "asOfDate": {
            "value": "2021-01-01"
          },
          "summary": {
            "fullyDilutedShares": {
              "value": "61399310.00"
            },
            "outstandingShares": {
              "value": "16328224.00"
            },
            "cashRaised": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "20261050.79"
              }
            }
          },
          "shareClassSummaries": [
            {
              "shareClassId": "10",
              "optionPoolIds": [
                "3"
              ],
              "fullyDilutedShares": {
                "value": "5603645.00"
              },
              "outstandingShares": {
                "value": "5603645.00"
              },
              "cashRaised": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "1159354.84"
                }
              }
            }
          ],
          "optionPoolSummaries": [
            {
              "optionPoolId": "3",
              "shareClassId": "9",
              "fullyDilutedShares": {
                "value": "44871088.00"
              },
              "outstandingEquityAwardDerivatives": {
                "value": "3725634.0"
              },
              "outstandingCommittedRestrictedStockAwards": {
                "value": "0"
              },
              "name": "Equity Incentive Plan",
              "authorizedShares": {
                "value": "45000000"
              }
            }
          ],
          "warrantBlockSummaries": [
            {
              "warrantBlockId": "1",
              "shareClassId": "10",
              "fullyDilutedShares": {
                "value": "3029344.00"
              },
              "outstandingWarrants": {
                "value": "3029344.00"
              },
              "cashRaised": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "1075000.00"
                }
              }
            }
          ],
          "noteBlockSummaries": [
            {
              "noteBlockId": "4",
              "cashRaised": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "1075000.00"
                }
              },
              "principal": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "1075000.00"
                }
              },
              "interest": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "382524.65"
                }
              }
            }
          ]
        },
        "properties": {
          "issuerId": {
            "type": "string",
            "example": "7",
            "description": "The identifier of the issuer.",
            "maxLength": 50,
            "minLength": 1
          },
          "asOfDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "Data returned in the response reflects the state of the capitalization table as of this date, specified as an [ISO 8601 extended format calendar date](https://en.wikipedia.org/wiki/ISO_8601#Calendar_dates), i.e. 'YYYY-MM-DD'."
          },
          "summary": {
            "$ref": "#/components/schemas/v1alpha1CapitalizationTableSummary",
            "description": "Summary information about the capitalization table."
          },
          "shareClassSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1ShareClassSummary"
            },
            "description": "Per share class summary information.",
            "maxItems": 500
          },
          "optionPoolSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1OptionPoolSummary"
            },
            "description": "Per option pool summary information.",
            "maxItems": 200
          },
          "warrantBlockSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1WarrantBlockSummary"
            },
            "description": "Per warrant block summary information.",
            "maxItems": 200
          },
          "noteBlockSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1NoteBlockSummary"
            },
            "description": "Per note block summary information.",
            "maxItems": 200
          }
        },
        "description": "The top-level capitalization table object.",
        "required": [
          "issuerId",
          "summary"
        ]
      },
      "publicapiissuerscapitalizationv1alpha1GetCapitalizationTableResponse": {
        "type": "object",
        "properties": {
          "capitalizationTable": {
            "$ref": "#/components/schemas/publicapiissuerscapitalizationv1alpha1CapitalizationTable",
            "description": "The capitalization table object."
          }
        },
        "description": "The response from the Get Capitalization Table endpoint.",
        "required": [
          "capitalizationTable"
        ]
      },
      "publicapiissuerscapitalizationv1alpha1GetStakeholderCapitalizationTableResponse": {
        "type": "object",
        "properties": {
          "stakeholderCapitalizationTable": {
            "$ref": "#/components/schemas/publicapiissuerscapitalizationv1alpha1StakeholderCapitalizationTable",
            "description": "Stakeholder Capitalization table."
          },
          "nextPageToken": {
            "type": "string",
            "example": "ODMxMw==",
            "description": "A page token, which can be provided as the value of the `pageToken` query parameter to retrieve the next page. If this field is omitted, there are no subsequent pages."
          }
        },
        "description": "The response for the GetStakeholderCapitalizationTable endpoint.",
        "required": [
          "stakeholderCapitalizationTable"
        ]
      },
      "publicapiissuerscapitalizationv1alpha1Stakeholder": {
        "type": "object",
        "example": {
          "stakeholderId": "5375",
          "stakeholderName": "Krakatoa Ventures Fund I, L.P.",
          "summary": {
            "fullyDilutedShares": {
              "value": "4422567"
            },
            "outstandingShares": {
              "value": "4422567.00000000000000000000"
            }
          },
          "shareClassSummaries": [
            {
              "shareClassID": 10,
              "outstandingShares": {
                "value": "566035.00000000000000000000"
              },
              "fullyDilutedShares": {
                "value": "566035"
              },
              "cashRaised": {
                "currency_code": "USD",
                "amount": {
                  "value": "150000.0700000000000000000000"
                }
              }
            },
            {
              "shareClassID": 104,
              "outstandingShares": {
                "value": "2217191.00000000000000000000"
              },
              "fullyDilutedShares": {
                "value": "2217191"
              },
              "cashRaised": {
                "currency_code": "USD",
                "amount": {
                  "value": "1000000.000000000000000000000"
                }
              }
            },
            {
              "shareClassID": 105,
              "outstandingShares": {
                "value": "1639341.00000000000000000000"
              },
              "fullyDilutedShares": {
                "value": "1639341"
              },
              "cashRaised": {
                "currency_code": "USD",
                "amount": {
                  "value": "1999999.680000000000000000000"
                }
              }
            }
          ],
          "optionPoolSummaries": [
            {
              "name": "Equity Incentive Plan",
              "optionPoolId": 3,
              "shareClassId": 9,
              "outstandingEquityAwardDerivatives": {
                "value": "0"
              },
              "outstandingCommittedRsas": {
                "value": "0"
              }
            }
          ],
          "warrantBlockSummaries": [
            {
              "warrantBlockId": 2,
              "name": "Series Seed II Warrants",
              "shareClassId": 11,
              "cashRaised": {
                "currency_code": "USD",
                "amount": {
                  "value": "0"
                }
              },
              "fullyDilutedShares": {
                "value": "0"
              },
              "outstandingWarrants": {
                "value": "0"
              }
            },
            {
              "warrantBlockId": 1,
              "name": "Series Seed Warrants",
              "shareClassId": 10,
              "cashRaised": {
                "currency_code": "USD",
                "amount": {
                  "value": "0"
                }
              },
              "fullyDilutedShares": {
                "value": "0"
              },
              "outstandingWarrants": {
                "value": "0"
              }
            }
          ],
          "noteBlockSummaries": [
            {
              "noteBlockId": "4",
              "cashRaised": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "1075000.00"
                }
              },
              "principal": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "1075000.00"
                }
              },
              "interest": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "382524.65"
                }
              },
              "outstanding_debt": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "1457524.65"
                }
              }
            }
          ]
        },
        "properties": {
          "stakeholderId": {
            "type": "string",
            "description": "The identifier of the stakeholder.",
            "maxLength": 50,
            "minLength": 1
          },
          "stakeholderName": {
            "type": "string",
            "description": "The name of the stakeholder.",
            "maxLength": 500,
            "minLength": 1
          },
          "summary": {
            "$ref": "#/components/schemas/publicapiissuerscapitalizationv1alpha1StakeholderCapitalizationTableSummary",
            "description": "A high-level capitalization table summary scoped to the stakeholder."
          },
          "shareClassSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiissuerscapitalizationv1alpha1StakeholderShareClassSummary"
            },
            "description": "Per share class summary information scoped to the stakeholder.",
            "maxItems": 500
          },
          "optionPoolSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiissuerscapitalizationv1alpha1StakeholderOptionPoolSummary"
            },
            "description": "Per option pool summary information scoped to the stakeholder.",
            "maxItems": 200
          },
          "warrantBlockSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiissuerscapitalizationv1alpha1StakeholderWarrantBlockSummary"
            },
            "description": "Per warrant block summary information scoped to the stakeholder.",
            "maxItems": 200
          },
          "noteBlockSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiissuerscapitalizationv1alpha1StakeholderNoteBlockSummary"
            },
            "description": "Per note block summary scoped to the stakeholder.",
            "maxItems": 200
          }
        },
        "title": "Capitalization information for an individual stakeholder.",
        "required": [
          "stakeholderId",
          "stakeholderName",
          "summary"
        ]
      },
      "publicapiissuerscapitalizationv1alpha1StakeholderCapitalizationTable": {
        "type": "object",
        "example": {
          "issuerId": "7",
          "asOfDate": "2022-01-01",
          "stakeholderGroups": [
            {
              "stakeholderGroupId": "1",
              "stakeholderGroupName": "Krakatoa Ventures",
              "stakeholders": [
                {
                  "stakeholderId": "5375",
                  "stakeholderName": "Krakatoa Ventures Fund I, L.P.",
                  "summary": {
                    "fullyDilutedShares": {
                      "value": "4422567"
                    },
                    "outstandingShares": {
                      "value": "4422567.00000000000000000000"
                    }
                  },
                  "shareClassSummaries": [
                    {
                      "shareClassID": 10,
                      "outstandingShares": {
                        "value": "566035.00000000000000000000"
                      },
                      "fullyDilutedShares": {
                        "value": "566035"
                      },
                      "cashRaised": {
                        "currency_code": "USD",
                        "amount": {
                          "value": "150000.0700000000000000000000"
                        }
                      }
                    },
                    {
                      "shareClassID": 104,
                      "outstandingShares": {
                        "value": "2217191.00000000000000000000"
                      },
                      "fullyDilutedShares": {
                        "value": "2217191"
                      },
                      "cashRaised": {
                        "currency_code": "USD",
                        "amount": {
                          "value": "1000000.000000000000000000000"
                        }
                      }
                    },
                    {
                      "shareClassID": 105,
                      "outstandingShares": {
                        "value": "1639341.00000000000000000000"
                      },
                      "fullyDilutedShares": {
                        "value": "1639341"
                      },
                      "cashRaised": {
                        "currency_code": "USD",
                        "amount": {
                          "value": "1999999.680000000000000000000"
                        }
                      }
                    }
                  ],
                  "optionPoolSummaries": [
                    {
                      "name": "Equity Incentive Plan",
                      "optionPoolId": 3,
                      "shareClassId": 9,
                      "outstandingEquityAwardDerivatives": {
                        "value": "0"
                      },
                      "outstandingCommittedRsas": {
                        "value": "0"
                      }
                    }
                  ],
                  "warrantBlockSummaries": [
                    {
                      "warrantBlockId": 2,
                      "name": "Series Seed II Warrants",
                      "shareClassId": 11,
                      "cashRaised": {
                        "currency_code": "USD",
                        "amount": {
                          "value": "0"
                        }
                      },
                      "fullyDilutedShares": {
                        "value": "0"
                      },
                      "outstandingWarrants": {
                        "value": "0"
                      }
                    },
                    {
                      "warrantBlockId": 1,
                      "name": "Series Seed Warrants",
                      "shareClassId": 10,
                      "cashRaised": {
                        "currency_code": "USD",
                        "amount": {
                          "value": "0"
                        }
                      },
                      "fullyDilutedShares": {
                        "value": "0"
                      },
                      "outstandingWarrants": {
                        "value": "0"
                      }
                    }
                  ],
                  "noteBlockSummaries": [
                    {
                      "noteBlockId": "4",
                      "cashRaised": {
                        "currencyCode": {
                          "value": "USD"
                        },
                        "amount": {
                          "value": "1075000.00"
                        }
                      },
                      "principal": {
                        "currencyCode": {
                          "value": "USD"
                        },
                        "amount": {
                          "value": "1075000.00"
                        }
                      },
                      "interest": {
                        "currencyCode": {
                          "value": "USD"
                        },
                        "amount": {
                          "value": "382524.65"
                        }
                      },
                      "outstanding_debt": {
                        "currencyCode": {
                          "value": "USD"
                        },
                        "amount": {
                          "value": "1457524.65"
                        }
                      }
                    }
                  ]
                }
              ],
              "summary": {
                "fullyDilutedShares": {
                  "value": "4422567"
                },
                "cashRaised": {
                  "currency_code": "USD",
                  "amount": {
                    "value": "3149999.750000000000000000000"
                  }
                },
                "outstandingShares": {
                  "value": "4422567.00000000000000000000"
                }
              },
              "shareClassSummaries": [
                {
                  "shareClassID": 10,
                  "outstandingShares": {
                    "value": "566035.00000000000000000000"
                  },
                  "fullyDilutedShares": {
                    "value": "566035"
                  },
                  "cashRaised": {
                    "currency_code": "USD",
                    "amount": {
                      "value": "150000.0700000000000000000000"
                    }
                  }
                },
                {
                  "shareClassID": 104,
                  "outstandingShares": {
                    "value": "2217191.00000000000000000000"
                  },
                  "fullyDilutedShares": {
                    "value": "2217191"
                  },
                  "cashRaised": {
                    "currency_code": "USD",
                    "amount": {
                      "value": "1000000.000000000000000000000"
                    }
                  }
                },
                {
                  "shareClassID": 105,
                  "outstandingShares": {
                    "value": "1639341.00000000000000000000"
                  },
                  "fullyDilutedShares": {
                    "value": "1639341"
                  },
                  "cashRaised": {
                    "currency_code": "USD",
                    "amount": {
                      "value": "1999999.680000000000000000000"
                    }
                  }
                }
              ],
              "optionPoolSummaries": [
                {
                  "name": "Equity Incentive Plan",
                  "optionPoolId": 3,
                  "shareClassId": 9,
                  "outstandingEquityAwardDerivatives": {
                    "value": "0"
                  },
                  "outstandingCommittedRsas": {
                    "value": "0"
                  }
                }
              ],
              "warrantBlockSummaries": [
                {
                  "warrantBlockId": 2,
                  "name": "Series Seed II Warrants",
                  "shareClassId": 11,
                  "cashRaised": {
                    "currency_code": "USD",
                    "amount": {
                      "value": "0"
                    }
                  },
                  "fullyDilutedShares": {
                    "value": "0"
                  },
                  "outstandingWarrants": {
                    "value": "0"
                  }
                },
                {
                  "warrantBlockId": 1,
                  "name": "Series Seed Warrants",
                  "shareClassId": 10,
                  "cashRaised": {
                    "currency_code": "USD",
                    "amount": {
                      "value": "0"
                    }
                  },
                  "fullyDilutedShares": {
                    "value": "0"
                  },
                  "outstandingWarrants": {
                    "value": "0"
                  }
                }
              ],
              "noteBlockSummaries": [
                {
                  "noteBlockId": "4",
                  "cashRaised": {
                    "currencyCode": {
                      "value": "USD"
                    },
                    "amount": {
                      "value": "1075000.00"
                    }
                  },
                  "principal": {
                    "currencyCode": {
                      "value": "USD"
                    },
                    "amount": {
                      "value": "1075000.00"
                    }
                  },
                  "interest": {
                    "currencyCode": {
                      "value": "USD"
                    },
                    "amount": {
                      "value": "382524.65"
                    }
                  },
                  "outstanding_debt": {
                    "currencyCode": {
                      "value": "USD"
                    },
                    "amount": {
                      "value": "1457524.65"
                    }
                  }
                }
              ]
            }
          ]
        },
        "properties": {
          "issuerId": {
            "type": "string",
            "example": "7",
            "description": "The identifier of the issuer.",
            "maxLength": 50,
            "minLength": 1
          },
          "asOfDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "Data returned in the response reflects the state of the capitalization table as of this date, specified as an [ISO 8601 extended format calendar date](https://en.wikipedia.org/wiki/ISO_8601#Calendar_dates), i.e. 'YYYY-MM-DD'."
          },
          "stakeholderGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiissuerscapitalizationv1alpha1StakeholderGroup"
            },
            "description": "List of stakeholder groups."
          }
        },
        "description": "The top-level object that encapsulates an issuer's stakeholder capitalization information.",
        "required": [
          "issuerId",
          "asOfDate"
        ]
      },
      "publicapiissuerscapitalizationv1alpha1StakeholderCapitalizationTableSummary": {
        "type": "object",
        "example": {
          "fullyDilutedShares": {
            "value": "61399310.00"
          },
          "outstandingShares": {
            "value": "16328224.00"
          },
          "cashRaised": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "20261050.79"
            }
          }
        },
        "properties": {
          "fullyDilutedShares": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "Total common share equivalent of the company for this stakeholder. This includes all outstanding and issued shares, and those that would be included if all options and warrants were exercised."
          },
          "outstandingShares": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "Undiluted outstanding shares quantity. This is the sum of all `outstandingShares` across all `ShareClassSummary` objects."
          },
          "cashRaised": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "Total cash amount raised."
          }
        },
        "description": "Summary information about the capitalization table.",
        "required": [
          "fullyDilutedShares",
          "outstandingShares",
          "cashRaised"
        ]
      },
      "publicapiissuerscapitalizationv1alpha1StakeholderGroup": {
        "type": "object",
        "example": {
          "stakeholderGroupId": "1",
          "stakeholderGroupName": "Krakatoa Ventures",
          "stakeholders": [
            {
              "stakeholderId": "5375",
              "stakeholderName": "Krakatoa Ventures Fund I, L.P.",
              "summary": {
                "fullyDilutedShares": {
                  "value": "4422567"
                },
                "outstandingShares": {
                  "value": "4422567.00000000000000000000"
                }
              },
              "shareClassSummaries": [
                {
                  "shareClassID": 10,
                  "outstandingShares": {
                    "value": "566035.00000000000000000000"
                  },
                  "fullyDilutedShares": {
                    "value": "566035"
                  },
                  "cashRaised": {
                    "currency_code": "USD",
                    "amount": {
                      "value": "150000.0700000000000000000000"
                    }
                  }
                },
                {
                  "shareClassID": 104,
                  "outstandingShares": {
                    "value": "2217191.00000000000000000000"
                  },
                  "fullyDilutedShares": {
                    "value": "2217191"
                  },
                  "cashRaised": {
                    "currency_code": "USD",
                    "amount": {
                      "value": "1000000.000000000000000000000"
                    }
                  }
                },
                {
                  "shareClassID": 105,
                  "outstandingShares": {
                    "value": "1639341.00000000000000000000"
                  },
                  "fullyDilutedShares": {
                    "value": "1639341"
                  },
                  "cashRaised": {
                    "currency_code": "USD",
                    "amount": {
                      "value": "1999999.680000000000000000000"
                    }
                  }
                }
              ],
              "optionPoolSummaries": [
                {
                  "name": "Equity Incentive Plan",
                  "optionPoolId": 3,
                  "shareClassId": 9,
                  "outstandingEquityAwardDerivatives": {
                    "value": "0"
                  },
                  "outstandingCommittedRsas": {
                    "value": "0"
                  }
                }
              ],
              "warrantBlockSummaries": [
                {
                  "warrantBlockId": 2,
                  "name": "Series Seed II Warrants",
                  "shareClassId": 11,
                  "cashRaised": {
                    "currency_code": "USD",
                    "amount": {
                      "value": "0"
                    }
                  },
                  "fullyDilutedShares": {
                    "value": "0"
                  },
                  "outstandingWarrants": {
                    "value": "0"
                  }
                },
                {
                  "warrantBlockId": 1,
                  "name": "Series Seed Warrants",
                  "shareClassId": 10,
                  "cashRaised": {
                    "currency_code": "USD",
                    "amount": {
                      "value": "0"
                    }
                  },
                  "fullyDilutedShares": {
                    "value": "0"
                  },
                  "outstandingWarrants": {
                    "value": "0"
                  }
                }
              ],
              "noteBlockSummaries": [
                {
                  "noteBlockId": "4",
                  "cashRaised": {
                    "currencyCode": {
                      "value": "USD"
                    },
                    "amount": {
                      "value": "1075000.00"
                    }
                  },
                  "principal": {
                    "currencyCode": {
                      "value": "USD"
                    },
                    "amount": {
                      "value": "1075000.00"
                    }
                  },
                  "interest": {
                    "currencyCode": {
                      "value": "USD"
                    },
                    "amount": {
                      "value": "382524.65"
                    }
                  },
                  "outstanding_debt": {
                    "currencyCode": {
                      "value": "USD"
                    },
                    "amount": {
                      "value": "1457524.65"
                    }
                  }
                }
              ]
            }
          ],
          "summary": {
            "fullyDilutedShares": {
              "value": "4422567"
            },
            "cashRaised": {
              "currency_code": "USD",
              "amount": {
                "value": "3149999.750000000000000000000"
              }
            },
            "outstandingShares": {
              "value": "4422567.00000000000000000000"
            }
          },
          "shareClassSummaries": [
            {
              "shareClassID": 10,
              "outstandingShares": {
                "value": "566035.00000000000000000000"
              },
              "fullyDilutedShares": {
                "value": "566035"
              },
              "cashRaised": {
                "currency_code": "USD",
                "amount": {
                  "value": "150000.0700000000000000000000"
                }
              }
            },
            {
              "shareClassID": 104,
              "outstandingShares": {
                "value": "2217191.00000000000000000000"
              },
              "fullyDilutedShares": {
                "value": "2217191"
              },
              "cashRaised": {
                "currency_code": "USD",
                "amount": {
                  "value": "1000000.000000000000000000000"
                }
              }
            },
            {
              "shareClassID": 105,
              "outstandingShares": {
                "value": "1639341.00000000000000000000"
              },
              "fullyDilutedShares": {
                "value": "1639341"
              },
              "cashRaised": {
                "currency_code": "USD",
                "amount": {
                  "value": "1999999.680000000000000000000"
                }
              }
            }
          ],
          "optionPoolSummaries": [
            {
              "name": "Equity Incentive Plan",
              "optionPoolId": 3,
              "shareClassId": 9,
              "outstandingEquityAwardDerivatives": {
                "value": "0"
              },
              "outstandingCommittedRsas": {
                "value": "0"
              }
            }
          ],
          "warrantBlockSummaries": [
            {
              "warrantBlockId": 2,
              "name": "Series Seed II Warrants",
              "shareClassId": 11,
              "cashRaised": {
                "currency_code": "USD",
                "amount": {
                  "value": "0"
                }
              },
              "fullyDilutedShares": {
                "value": "0"
              },
              "outstandingWarrants": {
                "value": "0"
              }
            },
            {
              "warrantBlockId": 1,
              "name": "Series Seed Warrants",
              "shareClassId": 10,
              "cashRaised": {
                "currency_code": "USD",
                "amount": {
                  "value": "0"
                }
              },
              "fullyDilutedShares": {
                "value": "0"
              },
              "outstandingWarrants": {
                "value": "0"
              }
            }
          ],
          "noteBlockSummaries": [
            {
              "noteBlockId": "4",
              "cashRaised": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "1075000.00"
                }
              },
              "principal": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "1075000.00"
                }
              },
              "interest": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "382524.65"
                }
              },
              "outstanding_debt": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "1457524.65"
                }
              }
            }
          ]
        },
        "properties": {
          "stakeholderGroupId": {
            "type": "string",
            "description": "The identifier of the stakeholder group.",
            "maxLength": 50,
            "minLength": 1
          },
          "stakeholderGroupName": {
            "type": "string",
            "description": "The name of the stakeholder group.",
            "maxLength": 1000,
            "minLength": 1
          },
          "stakeholders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiissuerscapitalizationv1alpha1Stakeholder"
            },
            "description": "The list of stakeholders in this stakeholder group.",
            "maxItems": 100
          },
          "summary": {
            "$ref": "#/components/schemas/publicapiissuerscapitalizationv1alpha1StakeholderCapitalizationTableSummary",
            "description": "A capitalization table summary scoped to the stakeholder group."
          },
          "shareClassSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiissuerscapitalizationv1alpha1StakeholderShareClassSummary"
            },
            "description": "Per share class summary information scoped to the stakeholder group.",
            "maxItems": 200
          },
          "optionPoolSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiissuerscapitalizationv1alpha1StakeholderOptionPoolSummary"
            },
            "description": "Per option pool summary information scoped to the stakeholder group.",
            "maxItems": 200
          },
          "warrantBlockSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiissuerscapitalizationv1alpha1StakeholderWarrantBlockSummary"
            },
            "description": "Per warrant block summary information scoped to the stakeholder group.",
            "maxItems": 200
          },
          "noteBlockSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiissuerscapitalizationv1alpha1StakeholderNoteBlockSummary"
            },
            "description": "Per note block summary scoped to the stakeholder group.",
            "maxItems": 200
          }
        },
        "description": "A grouping of individual stakeholders used to compute capitalization calculations. All stakeholders within a group are considered when computing capitalization calculations.\n\nThese groupings of individual stakeholders are disjoint sets; i.e., a stakeholder can only belong to a single stakeholder group.",
        "title": "A grouping of individual stakeholders used to compute capitalization calculations.",
        "required": [
          "stakeholderGroupId",
          "stakeholderGroupName"
        ]
      },
      "publicapiissuerscapitalizationv1alpha1StakeholderNoteBlockSummary": {
        "type": "object",
        "example": {
          "noteBlockId": "4",
          "cashRaised": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "1075000.00"
            }
          },
          "principal": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "1075000.00"
            }
          },
          "interest": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "382524.65"
            }
          },
          "outstanding_debt": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "1457524.65"
            }
          }
        },
        "properties": {
          "noteBlockId": {
            "type": "string",
            "description": "The identifier of the note block.",
            "maxLength": 50,
            "minLength": 1
          },
          "cashRaised": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The cash raised for the note block."
          },
          "principal": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The total outstanding principal for the note block. The outstanding debt for the note block is the `principal` plus the `interest`."
          },
          "interest": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "Total interest for the note block. The outstanding debt for the note block is the `principal` plus the `interest`."
          },
          "outstandingDebt": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "Total outstanding debt for the note block. The outstanding debt for the note block is the `principal` plus the `interest`."
          },
          "name": {
            "type": "string",
            "description": "The name of the note block.",
            "maxLength": 1000
          }
        },
        "description": "Note block summary information scoped to a specific stakeholder.",
        "required": [
          "noteBlockId",
          "cashRaised",
          "principal",
          "interest",
          "name"
        ]
      },
      "publicapiissuerscapitalizationv1alpha1StakeholderOptionPoolSummary": {
        "type": "object",
        "example": {
          "optionPoolId": "3",
          "name": "Equity Incentive Plan",
          "shareClassId": "10",
          "outstandingEquityAwardDerivatives": {
            "value": "3725634.0"
          },
          "outstandingCommittedRestrictedStockAwards": {
            "value": "0"
          }
        },
        "properties": {
          "optionPoolId": {
            "type": "string",
            "description": "The identifier of the option pool.",
            "maxLength": 50,
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "The name of the option pool.",
            "maxLength": 100,
            "minLength": 1
          },
          "shareClassId": {
            "type": "string",
            "description": "The identifier of the share class used by the option pool to issue equity.",
            "maxLength": 50,
            "minLength": 1
          },
          "outstandingEquityAwardDerivatives": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "Outstanding equity award derivatives. This includes:\n - Option Grants\n - Restricted Stock Units (RSUs)\n - Stock Appreciation Rights (SARs)\n - Cash Bonus Unit (CBUs)\n - International equity awards",
            "title": "Outstanding equity award derivatives. This includes:\n- Option Grants\n- Restricted Stock Units (RSU)\n- Stock Appreciation Rights (SAR)\n- Cash Bonus Unit (CBU)\n- International equity awards"
          },
          "outstandingCommittedRestrictedStockAwards": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "Board approved but unissued Restricted Stock Awards (RSAs)."
          }
        },
        "description": "Option pool summary scoped to a specific stakeholder.",
        "required": [
          "optionPoolId",
          "name",
          "shareClassId",
          "outstandingEquityAwardDerivatives",
          "outstandingCommittedRestrictedStockAwards"
        ]
      },
      "publicapiissuerscapitalizationv1alpha1StakeholderShareClassSummary": {
        "type": "object",
        "example": {
          "shareClassId": "10",
          "name": "Common",
          "fullyDilutedShares": {
            "value": "5603645.00"
          },
          "outstandingShares": {
            "value": "5603645.00"
          },
          "cashRaised": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "1159354.84"
            }
          }
        },
        "properties": {
          "shareClassId": {
            "type": "string",
            "description": "The identifier of the share class.",
            "maxLength": 50,
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "The name of the share class.",
            "maxLength": 1000,
            "minLength": 1
          },
          "fullyDilutedShares": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The fully diluted certificated shares for the share class. See [this Support article](https://support.carta.com/s/article/authorized-outstanding-issued-fully-diluted-shares) for information on fully diluted shares in a share class."
          },
          "outstandingShares": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The total outstanding certificates in the share class. See [this Support article](https://support.carta.com/s/article/authorized-outstanding-issued-fully-diluted-shares) for information on outstanding shares in a share class."
          },
          "cashRaised": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "Total currency amount raised for share class."
          }
        },
        "description": "Share class summary scoped to a specific stakeholder. This includes all certificated, non-certificated and RSAs with an issue date.",
        "required": [
          "shareClassId",
          "name",
          "fullyDilutedShares",
          "outstandingShares",
          "cashRaised"
        ]
      },
      "publicapiissuerscapitalizationv1alpha1StakeholderWarrantBlockSummary": {
        "type": "object",
        "example": {
          "warrantBlockId": "1",
          "name": "Series Seed Warrants",
          "shareClassId": "10",
          "fullyDilutedShares": {
            "value": "3029344.00"
          },
          "outstandingWarrants": {
            "value": "3029344.00"
          },
          "cashRaised": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "1075000.00"
            }
          }
        },
        "properties": {
          "warrantBlockId": {
            "type": "string",
            "description": "The identifier of the warrant block.",
            "maxLength": 50,
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "The name of the warrant block.",
            "maxLength": 1000,
            "minLength": 1
          },
          "shareClassId": {
            "type": "string",
            "description": "The identifier of the share class for this warrant block.",
            "maxLength": 50,
            "minLength": 1
          },
          "fullyDilutedShares": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "Common share equivalents if all warrants converted to shares."
          },
          "outstandingWarrants": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "Outstanding warrants quantity."
          },
          "cashRaised": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The cash raised across all warrants."
          }
        },
        "description": "Warrant block summary scoped to a specific stakeholder.",
        "required": [
          "warrantBlockId",
          "name",
          "shareClassId",
          "fullyDilutedShares",
          "outstandingWarrants",
          "cashRaised"
        ]
      },
      "publicapiissuerssecuritiesv1alpha1Certificate": {
        "type": "object",
        "example": {
          "id": "34",
          "issuerId": "7",
          "stakeholderId": "4903",
          "shareClassName": "Series Seed Preferred",
          "issueDate": {
            "value": "2013-04-10"
          },
          "quantity": {
            "value": "150000"
          },
          "securityLabel": "PS-2",
          "pricePerShare": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "0.27"
            }
          },
          "lastModifiedDatetime": {
            "value": "2024-07-30T09:31:57.000000Z"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the certificate.",
            "maxLength": 50
          },
          "issuerId": {
            "type": "string",
            "description": "The identifier of the issuer owning the certificate.",
            "maxLength": 50,
            "minLength": 1
          },
          "stakeholderId": {
            "type": "string",
            "description": "The identifier of the stakeholder holding the certificate.",
            "maxLength": 50
          },
          "shareClassName": {
            "type": "string",
            "description": "The name of the share class for the shares held in this certificate.",
            "maxLength": 100
          },
          "issueDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the certificate was issued."
          },
          "quantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares in the certificate."
          },
          "securityLabel": {
            "type": "string",
            "description": "The label representing this security (certificate).",
            "maxLength": 50
          },
          "pricePerShare": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The cost of each share in the certificate."
          },
          "canceledDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the certificate was canceled."
          },
          "canceledQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares in the certificate that were canceled."
          },
          "returnedToPoolQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares in the certificate that were returned to the pool."
          },
          "returnedToTreasuryQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares in the certificate that were annulled, but not returned to the pool."
          }
        },
        "description": "A certificate is a record of ownership of a company's shares."
      },
      "publicapiissuerssecuritiesv1alpha1ConvertibleNote": {
        "type": "object",
        "example": {
          "id": "1",
          "issuerId": "7",
          "stakeholderId": "4903",
          "securityLabel": "CN-3",
          "issueDatetime": {
            "value": "2024-05-24T09:00:00.000000Z"
          },
          "conversionDatetime": {
            "value": "2024-06-24T09:00:00.000000Z"
          },
          "canceledDatetime": {
            "value": "2024-05-24T09:00:00.000000Z"
          },
          "cashPaid": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "10000.0"
            }
          },
          "maturityDatetime": {
            "value": "2024-05-24T09:00:00.000000Z"
          },
          "interest": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "50.0"
            }
          },
          "noteBlock": {
            "id": "4",
            "name": "Bridge 2014",
            "prefix": "CN",
            "noteType": "CONVERTIBLE_DEBT",
            "status": "EXECUTED"
          },
          "interestAccrualPeriod": "INTEREST_ACCRUAL_PERIOD_MONTHLY_FIRST_OF_MONTH",
          "interestRate": {
            "value": "3.0"
          },
          "interestCompoundingPeriod": "ANNUALLY",
          "dayCountBasis": "COUNT_ACTUAL_360",
          "priceCap": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "12000.0"
            }
          },
          "discountPercentage": {
            "value": "0.5"
          },
          "changeInControlPercent": {
            "value": "0.5"
          },
          "conversionTrigger": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "500.0"
            }
          },
          "canceledQuantity": {
            "value": "500.0"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "example": "1",
            "description": "The identifier of the convertible note.",
            "maxLength": 50,
            "minLength": 1
          },
          "issuerId": {
            "type": "string",
            "example": "7",
            "description": "The identifier of the issuer owning the convertible note.",
            "title": "The identifier of the issuer owning the convertible note",
            "maxLength": 50,
            "minLength": 1
          },
          "stakeholderId": {
            "type": "string",
            "example": "4903",
            "description": "The identifier of the stakeholder holding the convertible note.",
            "maxLength": 50
          },
          "securityLabel": {
            "type": "string",
            "example": "CN-3",
            "description": "The label representing this security (convertible note).",
            "maxLength": 50,
            "minLength": 1
          },
          "issueDatetime": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDateTime",
            "example": {
              "value": "2024-05-24T09:00:00.000000Z"
            },
            "description": "The date and time the convertible note was issued."
          },
          "conversionDatetime": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDateTime",
            "example": {
              "value": "2024-06-24T09:00:00.000000Z"
            },
            "description": "The date and time the convertible note was converted to a certificate."
          },
          "canceledDatetime": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDateTime",
            "example": {
              "value": "2024-05-24T09:00:00.000000Z"
            },
            "description": "The date and time the convertible note was canceled."
          },
          "cashPaid": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "example": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "10000.0"
              }
            },
            "description": "The amount of cash that the stakeholder paid for the convertible note.\n\nFor example, if the stakeholder invested $10,000, then $10,000 is the `cash_paid`. This field is also known as `principal`."
          },
          "maturityDatetime": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDateTime",
            "example": {
              "value": "2024-05-24T09:00:00.000000Z"
            },
            "description": "The date and time on which the convertible note matures.\n\nAt maturity, the convertible note's `cash_paid` and `interest` must be paid back if the convertible note hasn't converted into equity."
          },
          "interest": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "example": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "50.0"
              }
            },
            "description": "The accrued interest for the convertible note."
          },
          "noteBlock": {
            "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1NoteBlock",
            "example": {
              "id": "0c481821-3bc8-42a5-94cd-a2c89d88429d",
              "name": "Bridge 2014",
              "prefix": "CN",
              "noteType": "CONVERTIBLE_DEBT",
              "status": "EXECUTED"
            },
            "description": "The note block associated with the convertible note."
          },
          "interestAccrualPeriod": {
            "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1InterestAccrualPeriod",
            "example": "INTEREST_ACCRUAL_PERIOD_MONTHLY_FIRST_OF_MONTH",
            "description": "The length of time over which the interest due to the lender is calculated."
          },
          "interestRate": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "example": {
              "value": "3.0"
            },
            "description": "The annual interest rate that the note accrues."
          },
          "interestCompoundingPeriod": {
            "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1InterestCompoundingPeriod",
            "example": "ANNUALLY",
            "description": "The interest compounding period of the convertible note."
          },
          "dayCountBasis": {
            "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1DayCountBasis",
            "example": "COUNT_ACTUAL_360",
            "description": "The standardized way of counting the number of days between two dates."
          },
          "priceCap": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "example": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "12000.0"
              }
            },
            "description": "The valuation cap sets a maximum value at which a convertible security will convert into equity in the financing round.\n\nThis valuation cap stands regardless of the valuation of the financing round."
          },
          "discountPercentage": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "example": {
              "value": "0.5"
            },
            "description": "The discount applied to the price per share when the note holder will purchase shares in the next fundraising round. 1 represents 1%."
          },
          "changeInControlPercent": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "example": {
              "value": "0.5"
            },
            "description": " Denotes any premium or multiplier applied to the `cash_paid` in the event of a change in control prior to the maturity date. 1 represents 1%."
          },
          "conversionTrigger": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "example": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "500.0"
              }
            },
            "description": "For convertibles to convert into the next equity round, terms may be included that specify that the round be of a certain size for the convertible to convert."
          },
          "canceledQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "example": {
              "value": "500.0"
            },
            "description": "The quantity of shares in this convertible note that were canceled"
          }
        },
        "description": "A convertible note.",
        "required": [
          "issueDatetime",
          "cashPaid",
          "interest",
          "noteBlock",
          "interestCompoundingPeriod",
          "dayCountBasis"
        ]
      },
      "publicapiissuerssecuritiesv1alpha1DayCountBasis": {
        "type": "string",
        "enum": [
          "DAY_COUNT_BASIS_UNSPECIFIED",
          "COUNT_30_360",
          "COUNT_ACTUAL_360",
          "COUNT_ACTUAL_365"
        ],
        "default": "DAY_COUNT_BASIS_UNSPECIFIED",
        "description": "- DAY_COUNT_BASIS_UNSPECIFIED: Denotes the absence of a value."
      },
      "publicapiissuerssecuritiesv1alpha1Exercise": {
        "type": "object",
        "example": {
          "quantity": {
            "value": "2400"
          },
          "fairMarketValueAsOfDate": {
            "value": "2017-10-25"
          },
          "exerciseDate": {
            "value": "2017-10-25"
          },
          "status": "STATUS_COMPLETE",
          "certificateId": "2951",
          "exerciseType": "CASH_EXERCISE",
          "exerciseId": "23HcT4iVfrgYUaJF9txHTaH"
        },
        "properties": {
          "quantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares requested to be exercised."
          },
          "fairMarketValueAsOfDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date of the fair market value relevant to this exercise."
          },
          "exerciseDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date when the exercise request was initiated."
          },
          "status": {
            "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1ExerciseStatus",
            "description": "The status of the exercise request."
          },
          "certificateId": {
            "type": "string",
            "description": "The identifier of the certificate that was issued. This field is set if the exercise has been completed and a certificate has been issued."
          },
          "exerciseType": {
            "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1ExerciseType",
            "description": "The type of exercise request."
          },
          "qualified": {
            "type": "boolean",
            "description": "*Deprecated*\n\nTrue if the exercise option grant type is ISO. False otherwise.",
            "title": "*Deprecated*"
          },
          "exerciseId": {
            "type": "string",
            "description": "The identifier of the exercise.",
            "maxLength": 50
          }
        },
        "description": "The list of all exercises associated with this grant."
      },
      "publicapiissuerssecuritiesv1alpha1ExerciseStatus": {
        "type": "string",
        "enum": [
          "EXERCISE_STATUS_UNSPECIFIED",
          "STATUS_PENDING",
          "STATUS_COMPLETE",
          "STATUS_CANCELED"
        ],
        "default": "EXERCISE_STATUS_UNSPECIFIED",
        "description": "Enumeration of exercise status.\n\n - EXERCISE_STATUS_UNSPECIFIED: Denotes the absence of a value\n - STATUS_PENDING: The exercise is in a pending state.\n - STATUS_COMPLETE: The exercise is complete and a certificate was issued.\n - STATUS_CANCELED: The exercise is canceled."
      },
      "publicapiissuerssecuritiesv1alpha1ExerciseType": {
        "type": "string",
        "enum": [
          "EXERCISE_TYPE_UNSPECIFIED",
          "CASH_EXERCISE",
          "CASHLESS_EXERCISE",
          "NET_EXERCISE",
          "BLENDED"
        ],
        "default": "EXERCISE_TYPE_UNSPECIFIED",
        "description": "Enumeration of exercise types.\n\n - EXERCISE_TYPE_UNSPECIFIED: Denotes the absence of a value\n - CASH_EXERCISE: The cost of exercise was covered in cash.\n - CASHLESS_EXERCISE: The cost of exercise was covered by selling shares.\n - NET_EXERCISE: The cost of exercise was covered by withholding shares.\n - BLENDED: The cost of exercise was covered by a combination of cash and selling of shares."
      },
      "publicapiissuerssecuritiesv1alpha1GetCertificateResponse": {
        "type": "object",
        "properties": {
          "certificate": {
            "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1Certificate",
            "description": "The requested certificate from the specified issuer."
          }
        },
        "description": "The response from the Get Certificate endpoint."
      },
      "publicapiissuerssecuritiesv1alpha1GetConvertibleNoteResponse": {
        "type": "object",
        "properties": {
          "convertibleNote": {
            "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1ConvertibleNote",
            "description": "The requested convertible note from the specified issuer."
          }
        },
        "description": "The response from the `GetConvertibleNote` endpoint."
      },
      "publicapiissuerssecuritiesv1alpha1GetOptionGrantResponse": {
        "type": "object",
        "properties": {
          "optionGrant": {
            "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1OptionGrant",
            "description": "The requested option grant issued by the specified issuer."
          }
        },
        "description": "The response from the Get Option Grant endpoint."
      },
      "publicapiissuerssecuritiesv1alpha1GetRestrictedStockAwardResponse": {
        "type": "object",
        "properties": {
          "restrictedStockAward": {
            "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1RestrictedStockAward",
            "description": "The requested restricted stock award from the specified issuer."
          }
        },
        "description": "The response from the Get Restricted Stock Award endpoint."
      },
      "publicapiissuerssecuritiesv1alpha1GetRestrictedStockUnitResponse": {
        "type": "object",
        "properties": {
          "restrictedStockUnit": {
            "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1RestrictedStockUnit",
            "description": "The requested restricted stock unit from the specified issuer."
          }
        },
        "description": "The response from the Get Restricted Stock Unit endpoint."
      },
      "publicapiissuerssecuritiesv1alpha1InterestAccrualPeriod": {
        "type": "string",
        "enum": [
          "INTEREST_ACCRUAL_PERIOD_UNSPECIFIED",
          "INTEREST_ACCRUAL_PERIOD_DAILY",
          "INTEREST_ACCRUAL_PERIOD_WEEKLY",
          "INTEREST_ACCRUAL_PERIOD_MONTHLY",
          "INTEREST_ACCRUAL_PERIOD_MONTHLY_FIRST_OF_MONTH",
          "INTEREST_ACCRUAL_PERIOD_SEMI_ANNUALLY",
          "INTEREST_ACCRUAL_PERIOD_ANNUALLY",
          "INTEREST_ACCRUAL_PERIOD_QUARTERLY_CALENDAR",
          "INTEREST_ACCRUAL_PERIOD_SEMI_ANNUALLY_CALENDAR",
          "INTEREST_ACCRUAL_PERIOD_ANNUALLY_CALENDAR"
        ],
        "default": "INTEREST_ACCRUAL_PERIOD_UNSPECIFIED",
        "description": "The length of time over which the interest due to the lender is calculated.\n\n - INTEREST_ACCRUAL_PERIOD_UNSPECIFIED: Denotes the absence of a value."
      },
      "publicapiissuerssecuritiesv1alpha1InterestCompoundingPeriod": {
        "type": "string",
        "enum": [
          "INTEREST_COMPOUNDING_PERIOD_UNSPECIFIED",
          "SIMPLE",
          "DAILY",
          "MONTHLY",
          "SEMI_ANNUALLY",
          "ANNUALLY",
          "QUARTERLY_CALENDAR"
        ],
        "default": "INTEREST_COMPOUNDING_PERIOD_UNSPECIFIED",
        "description": "The enumerated string defining if the interest accrual is compounding or not, and the period used in calculating compounded interest.\nSimple interest is calculated only on the principal amount of the loan, while compound interest is calculated on the principal amount and also on the accumulated interest of the previous period.\n\n - INTEREST_COMPOUNDING_PERIOD_UNSPECIFIED: Denotes the absence of a value."
      },
      "publicapiissuerssecuritiesv1alpha1ListCertificatesResponse": {
        "type": "object",
        "properties": {
          "certificates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1Certificate"
            },
            "description": "The vesting schedules from the specified issuer."
          },
          "nextPageToken": {
            "type": "string",
            "example": "NDY=",
            "description": "Submit the `nextPageToken` string as `pageToken` in a subsequent request to retrieve the next page.\n\nIf the response omits `nextPageToken`, then there are no subsequent pages."
          }
        },
        "description": "The response from the List Certificates endpoint."
      },
      "publicapiissuerssecuritiesv1alpha1ListConvertibleNotesResponse": {
        "type": "object",
        "properties": {
          "convertibleNotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1ConvertibleNote"
            },
            "description": "The convertible notes returned in the `ListConvertibleNotes` response."
          },
          "nextPageToken": {
            "type": "string",
            "example": "ODMxMw==",
            "description": "Submit the `nextPageToken` string as `pageToken` in a subsequent request to retrieve the next page. If the `ListConvertibleNotes` response omits `nextPageToken`, then there are no subsequent pages."
          }
        },
        "description": "The response from the `ListConvertibleNotes` endpoint."
      },
      "publicapiissuerssecuritiesv1alpha1ListOptionGrantsResponse": {
        "type": "object",
        "properties": {
          "optionGrants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1OptionGrant"
            },
            "description": "The vesting schedules from the specified issuer."
          },
          "nextPageToken": {
            "type": "string",
            "example": "Nzg2Mg==",
            "description": "Submit the `nextPageToken` string as `pageToken` in a subsequent request to retrieve the next page.\n\nIf the response omits `nextPageToken`, then there are no subsequent pages."
          }
        },
        "description": "The response for the ListOptionGrants endpoint."
      },
      "publicapiissuerssecuritiesv1alpha1ListRestrictedStockAwardsResponse": {
        "type": "object",
        "properties": {
          "restrictedStockAwards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1RestrictedStockAward"
            },
            "description": "The restricted stock awards from the specified issuer."
          },
          "nextPageToken": {
            "type": "string",
            "example": "ODMxMw==",
            "description": "Submit the `nextPageToken` string as `pageToken` in a subsequent request to retrieve the next page.\n\nIf the response omits `nextPageToken`, then there are no subsequent pages."
          }
        },
        "description": "The response from the List Restricted Stock Awards endpoint."
      },
      "publicapiissuerssecuritiesv1alpha1ListRestrictedStockUnitsResponse": {
        "type": "object",
        "properties": {
          "restrictedStockUnits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1RestrictedStockUnit"
            },
            "description": "The restricted stock units from the specified issuer."
          },
          "nextPageToken": {
            "type": "string",
            "example": "ODU3NA==",
            "description": "Submit the `nextPageToken` string as `pageToken` in a subsequent request to retrieve the next page.\n\nIf the response omits `nextPageToken`, then there are no subsequent pages."
          }
        },
        "description": "The response from the List Restricted Stock Units endpoint."
      },
      "publicapiissuerssecuritiesv1alpha1NoteBlock": {
        "type": "object",
        "example": {
          "id": "4",
          "name": "Bridge 2014",
          "prefix": "CN",
          "noteType": "CONVERTIBLE_DEBT",
          "status": "EXECUTED"
        },
        "properties": {
          "id": {
            "type": "string",
            "example": "4",
            "description": "The identifier of the note block.",
            "maxLength": 50,
            "minLength": 1
          },
          "name": {
            "type": "string",
            "example": "Bridge 2014",
            "description": "The name of the note block.",
            "maxLength": 1000,
            "minLength": 1
          },
          "prefix": {
            "type": "string",
            "example": "CN",
            "description": "The prefix of the note block.",
            "maxLength": 1000
          },
          "noteType": {
            "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1NoteType",
            "example": "CONVERTIBLE_DEBT",
            "description": "The type of the note related to the note block."
          },
          "status": {
            "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1NoteBlockStatus",
            "example": "EXECUTED",
            "description": "The status of the note block."
          }
        },
        "description": "A note block associated with a convertible note.",
        "required": [
          "noteType",
          "status"
        ]
      },
      "publicapiissuerssecuritiesv1alpha1NoteBlockStatus": {
        "type": "string",
        "enum": [
          "NOTE_BLOCK_STATUS_UNSPECIFIED",
          "EXECUTED",
          "DRAFT",
          "INACTIVE"
        ],
        "default": "NOTE_BLOCK_STATUS_UNSPECIFIED",
        "description": "The status of the note block.\n\n - NOTE_BLOCK_STATUS_UNSPECIFIED: Denotes the absence of a value."
      },
      "publicapiissuerssecuritiesv1alpha1NoteType": {
        "type": "string",
        "enum": [
          "NOTE_TYPE_UNSPECIFIED",
          "DEBT",
          "CONVERTIBLE_DEBT",
          "CONVERTIBLE_EQUITY",
          "SAFE"
        ],
        "default": "NOTE_TYPE_UNSPECIFIED",
        "description": "The type of the note related to the note block.\n\n - NOTE_TYPE_UNSPECIFIED: Denotes the absence of a value."
      },
      "publicapiissuerssecuritiesv1alpha1OptionGrant": {
        "type": "object",
        "example": {
          "id": "2513",
          "issuerId": "7",
          "stakeholderId": "4923",
          "equityIncentivePlanName": "EquityIncentivePlan",
          "issueDate": {
            "value": "2013-01-31"
          },
          "vestingStartDate": {
            "value": "2012-10-02"
          },
          "boardApprovalDate": {
            "value": "2013-01-31"
          },
          "stakeholderAcceptanceDate": {
            "value": "2014-04-04"
          },
          "grantExpirationDate": {
            "value": "2023-01-30"
          },
          "isoNsoSplit": false,
          "stockOptionType": "ISO",
          "quantity": {
            "value": "45000"
          },
          "outstandingQuantity": {
            "value": "42600"
          },
          "vestedQuantity": {
            "value": "45000"
          },
          "exercisedQuantity": {
            "value": "2400"
          },
          "exercisePrice": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "0.17"
            }
          },
          "securityLabel": "ES-12",
          "earlyExercisable": true,
          "vestingEvents": [
            {
              "id": "1988",
              "vestDate": {
                "value": "2013-10-02"
              },
              "quantity": {
                "value": "11250"
              },
              "isoQuantity": {
                "value": "0"
              },
              "nsoQuantity": {
                "value": "11250"
              },
              "performanceCondition": false,
              "vested": true,
              "maxQuantity": {
                "value": "11250"
              },
              "targetQuantity": {
                "value": "11250"
              },
              "vestedQuantity": {
                "value": "11250"
              }
            }
          ],
          "exercises": [
            {
              "quantity": {
                "value": "2400"
              },
              "fairMarketValueAsOfDate": {
                "value": "2017-10-25"
              },
              "exerciseDate": {
                "value": "2017-10-25"
              },
              "status": "STATUS_COMPLETE",
              "certificateId": "2951",
              "exerciseType": "CASH_EXERCISE",
              "qualified": true,
              "exerciseId": "23HcT4iVfrgYUaJF9txHTaH"
            }
          ],
          "vestingSchedule": {
            "name": "1/24 Cliff",
            "lastModifiedDate": {
              "value": "2022-01-31"
            },
            "startDate": {
              "value": "2022-01-31"
            },
            "endDate": {
              "value": "2024-01-31"
            }
          },
          "lastModifiedDatetime": {
            "value": "2024-07-30T09:31:57.000000Z"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the option grant.",
            "maxLength": 50
          },
          "issuerId": {
            "type": "string",
            "description": "The identifier of the issuer that issued the option grant.",
            "maxLength": 50
          },
          "stakeholderId": {
            "type": "string",
            "description": "The identifier of the stakeholder that holds the option grant.",
            "maxLength": 50
          },
          "equityIncentivePlanName": {
            "type": "string",
            "description": "The name of the equity incentive plan (i.e., option plan) associated with this option grant.",
            "maxLength": 100
          },
          "issueDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the option grant was issued."
          },
          "vestingStartDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the option grant began vesting."
          },
          "boardApprovalDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the option grant received board approval."
          },
          "stakeholderAcceptanceDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the option grant was accepted by the stakeholder."
          },
          "canceledDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date when this option grant was canceled."
          },
          "grantExpirationDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The expiration date of the option grant (commonly 10 years from the grant issuance date)."
          },
          "lastExercisableDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The last date the stakeholder can exercise the option grant."
          },
          "disqualificationDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date this option grant became disqualified."
          },
          "isoNsoSplit": {
            "type": "boolean",
            "description": "True if the grant has ISO/NSO split. False otherwise.\n\nLearn more about [the ISO $100K limit and ISO/NSO splits](https://support.carta.com/s/article/100k-rule)."
          },
          "stockOptionType": {
            "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1StockOptionType",
            "description": "The stock option type at time of issuance. For grants issued as ISO that subsequently failed to meet ISO qualifications, the type will remain ISO. Refer to the disqualification date for information regarding the disqualification of the grant's ISO shares."
          },
          "quantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The total number of options in the grant."
          },
          "outstandingQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The total quantity of stock options from this grant that have not been exercised, expired, forfeited, or canceled"
          },
          "vestedQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The total quantity of stock options from this grant that have vested."
          },
          "exercisedQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The total quantity of stock options from this grant that have been exercised into shares."
          },
          "exercisePrice": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The exercise price of the options in the grant."
          },
          "securityLabel": {
            "type": "string",
            "description": "The label representing this security (option grant).",
            "maxLength": 50
          },
          "earlyExercisable": {
            "type": "boolean",
            "description": "True if the option grant is eligible for early exercising; false if the option grant is not eligible for early exercising."
          },
          "vestingEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1OptionGrantVestingEvent"
            },
            "description": "The list of all vesting events associated with this grant. For time based vesting events, both past and future vesting details will be available. For performance and milestone based vesting, only achieved vesting events will be available."
          },
          "exercises": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1Exercise"
            },
            "description": "The list of all exercises associated with this grant."
          },
          "terminationDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date that the option grant was terminated. This commonly matches the date the company's relationship with the stakeholder was terminated."
          },
          "vestingSchedule": {
            "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1VestingSchedule",
            "description": "The vesting schedule information associated with the restricted stock award."
          },
          "canceledQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of options in the grant that were canceled."
          },
          "forfeitedQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of options in the grant that were forfeited."
          },
          "expiredQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of options in the grant that expired."
          },
          "returnedToPoolQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of options in the grant that were returned to the pool."
          },
          "returnedToTreasuryQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of options in the grant that were annulled, but not returned to the pool."
          }
        },
        "description": "An option grant is a contract that gives an employee the right to purchase a company's stock at a set price."
      },
      "publicapiissuerssecuritiesv1alpha1OptionGrantVestingEvent": {
        "type": "object",
        "example": {
          "id": "1988",
          "vestDate": {
            "value": "2013-10-02"
          },
          "quantity": {
            "value": "11250"
          },
          "isoQuantity": {
            "value": "0"
          },
          "nsoQuantity": {
            "value": "11250"
          },
          "performanceCondition": false,
          "vested": true,
          "maxQuantity": {
            "value": "11250"
          },
          "targetQuantity": {
            "value": "11250"
          },
          "vestedQuantity": {
            "value": "11250"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the option grant vesting event.",
            "maxLength": 50
          },
          "vestDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date of the vesting event.\n\nFor milestone-based vesting events, `vestDate` will be omitted until the security has vested."
          },
          "quantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares being vested in this vesting event by this event’s date.\n\n*Deprecated: use `maxQuantity`, `targetQuantity`, `vestedQuantity` fields instead.*\n\nFor vesting events from strictly time-based vesting schedules, this field will be the amount of shares vesting in the tranche represented by this vesting event, regardless of whether the tranche has actually vested.\n\nFor vesting events with performance conditions, this field will be set to either:\n- if the performance condition has not been achieved, the maximum quantity of shares that could be vested\n- if the performance condition has been achieved, the target quantity of shares that are vested based on the payout details of the performance condition",
            "title": "The number of shares being vested in this vesting event by this event’s date. Deprecated."
          },
          "isoQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The total number of ISOs vested in this vesting event."
          },
          "nsoQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The total number of NSOs vested in this vesting event."
          },
          "performanceCondition": {
            "type": "boolean",
            "description": "Indicates that this vesting event has associated performance or milestone vesting conditions.\n\n`performanceCondition` will be `true` for milestone- and performance-based vesting events.\n\nFor performance-based vesting events, `performanceCondition` indicates that a performance condition exists, not that it has been met."
          },
          "vested": {
            "type": "boolean",
            "description": "Indicates that this vesting event has vested."
          },
          "maxQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The maximum number of shares vested in this vesting event.\n\nFor vesting events with performance conditions, this value will be based on the maximum payout defined within the performance condition.\n\nFor regular time-based vesting events, this value will be equivalent to the target_payout field.",
            "title": "The maximum number of shares vested in this vesting event."
          },
          "targetQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The target number of shares vested in this vesting event.\n\nThe target number of shares reflects the number of shares that have vested or should vest within the vesting event independent of any performance condition payout details.\n\nIf this vesting event has no performance condition, then this value will reflect the value that is or will be in the `vestedQuantity` field.",
            "title": "The target number of shares vested in this vesting event."
          },
          "vestedQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The actual number of shares vested in this vesting event.\n\nThis value will only be set if the vesting event is actually vested (i.e., the `vested` field is `true`). Otherwise, if the vesting event is unvested, then this value will be unset.",
            "title": "The actual number of shares vested in this vesting event."
          }
        },
        "description": "An option grant vesting event."
      },
      "publicapiissuerssecuritiesv1alpha1RestrictedStockAward": {
        "type": "object",
        "example": {
          "id": "1191",
          "issuerId": "7",
          "stakeholderId": "6113",
          "equityIncentivePlanName": "2016 Equity Incentive Plan",
          "shareClassName": "Common",
          "issueDate": {
            "value": "2016-08-25"
          },
          "vestingStartDate": {
            "value": "2016-08-25"
          },
          "boardApprovalDate": {
            "value": "2016-12-01"
          },
          "stakeholderAcceptanceDate": {
            "value": "2017-02-27"
          },
          "canceledDate": {
            "value": "2022-05-02"
          },
          "quantity": {
            "value": "200000"
          },
          "vestedQuantity": {
            "value": "200000"
          },
          "securityLabel": "CS-16",
          "pricePerShare": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "0.01"
            }
          },
          "vestingEvents": [
            {
              "id": "1988",
              "vestDate": {
                "value": "2018-02-27"
              },
              "quantity": {
                "value": "200000"
              },
              "performanceCondition": false,
              "vested": true,
              "maxQuantity": {
                "value": "200000"
              },
              "targetQuantity": {
                "value": "200000"
              },
              "vestedQuantity": {
                "value": "200000"
              }
            }
          ],
          "vestingSchedule": {
            "name": "1/24 Cliff",
            "lastModifiedDate": {
              "value": "2022-01-31"
            },
            "startDate": {
              "value": "2022-01-31"
            },
            "endDate": {
              "value": "2024-01-31"
            }
          },
          "lastModifiedDatetime": {
            "value": "2024-07-30T09:31:57.000000Z"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the restricted stock award.",
            "maxLength": 50
          },
          "issuerId": {
            "type": "string",
            "description": "The identifier of the issuer owning the restricted stock award.",
            "maxLength": 50,
            "minLength": 1
          },
          "stakeholderId": {
            "type": "string",
            "description": "The identifier of the stakeholder that holds the restricted stock award.",
            "maxLength": 50
          },
          "equityIncentivePlanName": {
            "type": "string",
            "description": "The name of the equity incentive plan (i.e., option plan) associated with this restricted stock award.",
            "maxLength": 100
          },
          "shareClassName": {
            "type": "string",
            "description": "The name of the share class that this restricted stock award belongs to.",
            "maxLength": 50
          },
          "issueDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the restricted stock award was issued."
          },
          "vestingStartDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The start date of the vesting period for the restricted stock award."
          },
          "boardApprovalDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the restricted stock award received board approval."
          },
          "stakeholderAcceptanceDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the restricted stock award was accepted by the stakeholder."
          },
          "canceledDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the restricted stock award was canceled."
          },
          "terminationDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the restricted stock award was terminated. This commonly matches the date the company's relationship with the stakeholder was terminated."
          },
          "quantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of restricted stock units in the award."
          },
          "vestedQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of vested shares in the stock award."
          },
          "securityLabel": {
            "type": "string",
            "description": "The label representing this security (restricted stock award).",
            "maxLength": 50
          },
          "pricePerShare": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The cost of each share in the restricted stock award."
          },
          "vestingEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1RestrictedStockAwardVestingEvent"
            },
            "description": "The list of all vesting events associated with the restricted stock award."
          },
          "vestingSchedule": {
            "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1VestingSchedule",
            "description": "The vesting schedule information associated with the restricted stock award."
          },
          "canceledQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares in the restricted stock award that were canceled."
          },
          "returnedToPoolQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares in the restricted stock award that were returned to the pool."
          },
          "returnedToTreasuryQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares in the restricted stock award that were annulled, but not returned to the pool."
          }
        },
        "description": "A restricted stock award is a grant of company shares."
      },
      "publicapiissuerssecuritiesv1alpha1RestrictedStockAwardVestingEvent": {
        "type": "object",
        "example": {
          "id": "1988",
          "vestDate": {
            "value": "2017-08-25"
          },
          "quantity": {
            "value": "50000"
          },
          "performanceCondition": false,
          "vested": true,
          "maxQuantity": {
            "value": "50000"
          },
          "targetQuantity": {
            "value": "50000"
          },
          "vestedQuantity": {
            "value": "50000"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the restricted stock award vesting event.",
            "maxLength": 50
          },
          "vestDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date of the vesting event. For milestone-based vesting events, `vestDate` will be omitted until the security has vested."
          },
          "quantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares being vested in this vesting event by this event’s date.\n\n*Deprecated: use `maxQuantity`, `targetQuantity`, `vestedQuantity` fields instead.*\n\nFor vesting events from strictly time-based vesting schedules, this field will be the amount of shares vesting in the tranche represented by this vesting event, regardless of whether the tranche has actually vested.\n\nFor vesting events with performance conditions, this field will be set to either:\n- if the performance condition has not been achieved, the maximum quantity of shares that could be vested\n- if the performance condition has been achieved, the target quantity of shares that are vested based on the payout details of the performance condition",
            "title": "The number of shares being vested in this vesting event by this event’s date. Deprecated."
          },
          "performanceCondition": {
            "type": "boolean",
            "description": "Indicates that this vesting event has associated performance or milestone vesting conditions.\n\n`performanceCondition` will be `true` for milestone- and performance-based vesting events.\n\nFor performance-based vesting events, `performanceCondition` indicates that a performance condition exists, not that it has been met."
          },
          "vested": {
            "type": "boolean",
            "description": "Indicates that this vesting event has vested."
          },
          "maxQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The maximum number of shares vested in this vesting event.\n\nFor vesting events with performance conditions, this value will be based on the maximum payout defined within the performance condition.\n\nFor regular time-based vesting events, this value will be equivalent to the target_payout field.",
            "title": "The maximum number of shares vested in this vesting event."
          },
          "targetQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The target number of shares vested in this vesting event.\n\nThe target number of shares reflects the number of shares that have vested or should vest within the vesting event independent of any performance condition payout details.\n\nIf this vesting event has no performance condition, then this value will reflect the value that is or will be in the `vestedQuantity` field.",
            "title": "The target number of shares vested in this vesting event."
          },
          "vestedQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The actual number of shares vested in this vesting event.\n\nThis value will only be set if the vesting event is actually vested (i.e., the `vested` field is `true`). Otherwise, if the vesting event is unvested, then this value will be unset.",
            "title": "The actual number of shares vested in this vesting event."
          }
        },
        "description": "Restricted stock award vesting event information."
      },
      "publicapiissuerssecuritiesv1alpha1RestrictedStockUnit": {
        "type": "object",
        "example": {
          "id": "8550",
          "issuerId": "7",
          "stakeholderId": "6113",
          "equityIncentivePlanName": "2015 Equity Incentive Plan",
          "issueDate": {
            "value": "2015-06-01"
          },
          "vestingStartDate": {
            "value": "2015-06-01"
          },
          "boardApprovalDate": {
            "value": "2015-06-01"
          },
          "stakeholderAcceptanceDate": {
            "value": "2017-02-27"
          },
          "quantity": {
            "value": "1500"
          },
          "vestedQuantity": {
            "value": "1500"
          },
          "releasedQuantity": {
            "value": "200"
          },
          "releasePricePerShare": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "0.78"
            }
          },
          "netSettledQuantity": {
            "value": "145"
          },
          "securityLabel": "ES-136",
          "vestingEvents": [
            {
              "id": "1988",
              "vestDate": {
                "value": "2016-06-01"
              },
              "quantity": {
                "value": "375"
              },
              "performanceCondition": false,
              "vested": true,
              "maxQuantity": {
                "value": "375"
              },
              "targetQuantity": {
                "value": "375"
              },
              "vestedQuantity": {
                "value": "375"
              }
            }
          ],
          "settlements": [
            {
              "settlementDate": {
                "value": "2016-08-19"
              },
              "releaseQuantity": {
                "value": "200"
              },
              "saleQuantity": {
                "value": "200"
              },
              "withholdingQuantity": {
                "value": "55"
              },
              "netSettlementQuantity": {
                "value": "145"
              },
              "settlementPrice": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "0.78"
                }
              },
              "certificateId": "78",
              "certificateLabel": "CS-124"
            }
          ],
          "vestingSchedule": {
            "name": "1/24 Cliff",
            "lastModifiedDate": {
              "value": "2022-01-31"
            },
            "startDate": {
              "value": "2015-06-01"
            },
            "endDate": {
              "value": "2024-01-31"
            }
          },
          "lastModifiedDatetime": {
            "value": "2024-07-30T09:31:57.000000Z"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the restricted stock unit.",
            "maxLength": 50,
            "minLength": 1
          },
          "issuerId": {
            "type": "string",
            "description": "The identifier of the issuer owning the restricted stock unit.",
            "maxLength": 50,
            "minLength": 1
          },
          "stakeholderId": {
            "type": "string",
            "description": "The identifier of the stakeholder that received the restricted stock unit.",
            "maxLength": 50
          },
          "equityIncentivePlanName": {
            "type": "string",
            "description": "The name of the equity incentive plan (i.e., option plan) associated with the restricted stock unit.",
            "maxLength": 100
          },
          "issueDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the restricted stock unit was issued."
          },
          "vestingStartDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The start date of the vesting period for the restricted stock unit, specified as an [ISO 8601 extended format calendar date](https://en.wikipedia.org/wiki/ISO_8601#Calendar_dates), i.e. 'YYYY-MM-DD'."
          },
          "boardApprovalDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the restricted stock unit received board approval."
          },
          "stakeholderAcceptanceDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the restricted stock unit was accepted by the stakeholder, specified as an [ISO 8601 extended format calendar date](https://en.wikipedia.org/wiki/ISO_8601#Calendar_dates), i.e. 'YYYY-MM-DD'."
          },
          "quantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The total quantity of shares in the restricted stock unit grant."
          },
          "vestedQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The total quantity of restricted stock units in the grant that have been vested."
          },
          "releasedQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The total quantity of restricted stock units in the grant that has been settled."
          },
          "releasePricePerShare": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The price of each share that has been released from the restricted stock unit grant."
          },
          "netSettledQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The total quantity of restricted stock units in this grant that have been released to the stakeholder."
          },
          "securityLabel": {
            "type": "string",
            "description": "The label representing this security (restricted stock unit).",
            "maxLength": 50
          },
          "vestingEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1RestrictedStockUnitVestingEvent"
            },
            "description": "The list of all vesting events associated with these restricted stock units."
          },
          "canceledDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the restricted stock unit was canceled."
          },
          "terminationDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the restricted stock unit was terminated."
          },
          "settlements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1RestrictedStockUnitSettlement"
            },
            "description": "The list of all settlements associated with these restricted stock units."
          },
          "vestingSchedule": {
            "$ref": "#/components/schemas/publicapiissuerssecuritiesv1alpha1VestingSchedule",
            "description": "The vesting schedule information associated with the restricted stock unit."
          },
          "canceledQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares in the restricted stock unit that were canceled."
          },
          "forfeitedQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares in the restricted stock unit that were forfeited."
          },
          "expiredQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares in the restricted stock unit that expired."
          },
          "returnedToPoolQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares in the restricted stock unit that were returned to the pool."
          },
          "returnedToTreasuryQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares in the restricted stock unit that were annulled, but not returned to the pool."
          }
        },
        "description": "A restricted stock unit is a grant of company shares."
      },
      "publicapiissuerssecuritiesv1alpha1RestrictedStockUnitSettlement": {
        "type": "object",
        "example": {
          "settlementDate": {
            "value": "2016-08-19"
          },
          "releaseQuantity": {
            "value": "200"
          },
          "saleQuantity": {
            "value": "200"
          },
          "withholdingQuantity": {
            "value": "55"
          },
          "netSettlementQuantity": {
            "value": "145"
          },
          "settlementPrice": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "0.78"
            }
          },
          "certificateId": "78",
          "certificateLabel": "CS-124"
        },
        "properties": {
          "settlementDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date of the settlement."
          },
          "releaseQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The quantity released during the settlement."
          },
          "saleQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The quantity sold in a cashless transaction to cover the cost of the settlement."
          },
          "withholdingQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The quantity withheld during the settlement."
          },
          "netSettlementQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The net quantity settled after quantities are sold or withheld."
          },
          "settlementPrice": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The price to settle one unit of the RSU."
          },
          "certificateId": {
            "type": "string",
            "description": "The resource identifier for the certificate that was generated as part of the transaction.",
            "maxLength": 1000,
            "minLength": 1
          },
          "certificateLabel": {
            "type": "string",
            "description": "The label of the certificate that was generated as part of the transaction (e.g. CS-107)."
          }
        },
        "description": "Restricted stock unit settlement information."
      },
      "publicapiissuerssecuritiesv1alpha1RestrictedStockUnitVestingEvent": {
        "type": "object",
        "example": {
          "id": "1988",
          "vestDate": {
            "value": "2016-06-01"
          },
          "quantity": {
            "value": "375"
          },
          "performanceCondition": false,
          "vested": true,
          "maxQuantity": {
            "value": "375"
          },
          "targetQuantity": {
            "value": "375"
          },
          "vestedQuantity": {
            "value": "375"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the restricted stock unit vesting event.",
            "maxLength": 50
          },
          "vestDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date of the vesting event. For milestone-based vesting events, `vestDate` will be omitted until the security has vested."
          },
          "quantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares being vested in this vesting event by this event’s date.\n\n*Deprecated: use `maxQuantity`, `targetQuantity`, `vestedQuantity` fields instead.*\n\nFor vesting events from strictly time-based vesting schedules, this field will be the amount of shares vesting in the tranche represented by this vesting event, regardless of whether the tranche has actually vested.\n\nFor vesting events with performance conditions, this field will be set to either:\n- if the performance condition has not been achieved, the maximum quantity of shares that could be vested\n- if the performance condition has been achieved, the target quantity of shares that are vested based on the payout details of the performance condition",
            "title": "The number of shares being vested in this vesting event by this event’s date. Deprecated."
          },
          "performanceCondition": {
            "type": "boolean",
            "description": "Indicates that this vesting event has associated performance or milestone vesting conditions.\n\n`performanceCondition` will be `true` for milestone- and performance-based vesting events.\n\nFor performance-based vesting events, `performanceCondition` indicates that a performance condition exists, not that it has been met."
          },
          "vested": {
            "type": "boolean",
            "description": "Indicates that this vesting event has vested."
          },
          "maxQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The maximum number of shares vested in this vesting event.\n\nFor vesting events with performance conditions, this value will be based on the maximum payout defined within the performance condition.\n\nFor regular time-based vesting events, this value will be equivalent to the target_payout field.",
            "title": "The maximum number of shares vested in this vesting event."
          },
          "targetQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The target number of shares vested in this vesting event.\n\nThe target number of shares reflects the number of shares that have vested or should vest within the vesting event independent of any performance condition payout details.\n\nIf this vesting event has no performance condition, then this value will reflect the value that is or will be in the `vestedQuantity` field.",
            "title": "The target number of shares vested in this vesting event."
          },
          "vestedQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The actual number of shares vested in this vesting event.\n\nThis value will only be set if the vesting event is actually vested (i.e., the `vested` field is `true`). Otherwise, if the vesting event is unvested, then this value will be unset.",
            "title": "The actual number of shares vested in this vesting event."
          }
        },
        "description": "Restricted stock unit vesting event information."
      },
      "publicapiissuerssecuritiesv1alpha1StockOptionType": {
        "type": "string",
        "enum": [
          "STOCK_OPTION_TYPE_UNSPECIFIED",
          "ISO",
          "NSO",
          "OTHER"
        ],
        "default": "STOCK_OPTION_TYPE_UNSPECIFIED",
        "description": "Enumeration of stock option grant types.\n\n - STOCK_OPTION_TYPE_UNSPECIFIED: Denotes the absence of a value\n - ISO: The stock options are incentive stock options (ISOs).\n - NSO: The stock options are non-qualified stock options (NSOs).\n - OTHER: The stock options are neither ISOs nor NSOs."
      },
      "publicapiissuerssecuritiesv1alpha1VestingSchedule": {
        "type": "object",
        "example": {
          "name": "1/24 Cliff",
          "lastModifiedDate": {
            "value": "2022-01-31"
          },
          "startDate": {
            "value": "2022-01-31"
          },
          "endDate": {
            "value": "2024-01-31"
          }
        },
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the vesting schedule.",
            "maxLength": 500
          },
          "lastModifiedDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the vesting schedule was last modified."
          },
          "startDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The start date of the vesting schedule."
          },
          "endDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The end date of the vesting schedule."
          }
        },
        "description": "Restricted stock award vesting event information."
      },
      "publicapiissuersv1alpha1FairMarketValue": {
        "type": "object",
        "example": {
          "id": "string",
          "effectiveDate": {
            "value": "2014-03-17"
          },
          "expirationDate": {
            "value": "2015-03-16"
          },
          "staleDate": {
            "value": "2015-03-16"
          },
          "shareClassValuations": [
            {
              "shareClassId": "9",
              "shareClassName": "Common",
              "common": true,
              "price": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "0.20"
                }
              }
            }
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "An identifier for the 409A fair market values.",
            "maxLength": 50
          },
          "effectiveDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date that this fair market valuation takes effect."
          },
          "expirationDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date that this fair market valuation will expire."
          },
          "staleDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date that this fair market valuation becomes stale."
          },
          "shareClassValuations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1ShareClassValuation"
            },
            "description": "A list of fair market values for each share class.",
            "maxItems": 500
          }
        },
        "description": "The fair market value contains the accepted values of an issuer's stock, specified on a per-share class basis. These values come from the 409A reports that Carta has for the issuer."
      },
      "publicapiissuersv1alpha1Issuer": {
        "type": "object",
        "example": {
          "id": "611",
          "legalName": "MangoCart, Inc.",
          "doingBusinessAsName": "MangoCart",
          "website": "http://www.example.com/mangocart"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the issuer.",
            "maxLength": 50
          },
          "legalName": {
            "type": "string",
            "description": "The legal name of the issuer.",
            "maxLength": 1000
          },
          "doingBusinessAsName": {
            "type": "string",
            "description": "The operating, or doing business as (DBA), name of the issuer.",
            "maxLength": 1000
          },
          "website": {
            "type": "string",
            "description": "The URL of the issuer’s website.",
            "maxLength": 1000
          }
        },
        "description": "An issuer."
      },
      "publicapiissuersv1alpha1Stakeholder": {
        "type": "object",
        "example": {
          "id": "4902",
          "issuerId": "7",
          "fullName": "Emily Wilson",
          "email": "emily@esharesinc.com",
          "employeeId": "1213511",
          "relationship": "STAKEHOLDER_RELATIONSHIP_EMPLOYEE"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the stakeholder.",
            "maxLength": 50
          },
          "issuerId": {
            "type": "string",
            "description": "An identifier for the issuer related to the stakeholder.",
            "maxLength": 50
          },
          "fullName": {
            "type": "string",
            "description": "The stakeholder's full legal name.",
            "maxLength": 1000
          },
          "email": {
            "type": "string",
            "description": "The stakeholder's email.",
            "maxLength": 1000
          },
          "employeeId": {
            "type": "string",
            "description": "An employee identifier for the stakeholder, if it exists.",
            "maxLength": 50
          },
          "relationship": {
            "$ref": "#/components/schemas/publicapiissuersv1alpha1StakeholderRelationship",
            "description": "The relationship of the stakeholder with the issuer."
          }
        },
        "description": "A stakeholder is any person or entity who holds an outstanding security."
      },
      "publicapiissuersv1alpha1StakeholderRelationship": {
        "type": "string",
        "enum": [
          "STAKEHOLDER_RELATIONSHIP_UNSPECIFIED",
          "ADVISOR",
          "EX_ADVISOR",
          "BOARD_MEMBER",
          "CONSULTANT",
          "EX_CONSULTANT",
          "EMPLOYEE",
          "EX_EMPLOYEE",
          "EXECUTIVE",
          "FOUNDER",
          "INTERNATIONAL_EMPLOYEE",
          "INVESTOR",
          "OFFICER",
          "OTHER"
        ],
        "default": "STAKEHOLDER_RELATIONSHIP_UNSPECIFIED",
        "description": "The relationship of the stakeholder with the draft issuer.\n\n - STAKEHOLDER_RELATIONSHIP_UNSPECIFIED: Conventional default for enums. Do not use this.\n - ADVISOR: Stakeholder is an advisor\n - EX_ADVISOR: Stakeholder is an ex-advisor\n - BOARD_MEMBER: Stakeholder is a board member\n - CONSULTANT: Stakeholder is a consultant\n - EX_CONSULTANT: Stakeholder is an ex-consultant\n - EMPLOYEE: Stakeholder is an employee\n - EX_EMPLOYEE: Stakeholder is an ex-employee\n - EXECUTIVE: Stakeholder is an executive\n - FOUNDER: Stakeholder is a founder\n - INTERNATIONAL_EMPLOYEE: Stakeholder is an international employee\n - INVESTOR: Stakeholder is an investor\n - OFFICER: Stakeholder is an officer\n - OTHER: Stakeholder has some other type of relationship"
      },
      "rpcStatus": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/protobufAny"
            }
          }
        }
      },
      "securitiesoptionexercisesv1alpha1StockOptionType": {
        "type": "string",
        "enum": [
          "STOCK_OPTION_TYPE_UNSPECIFIED",
          "ISO",
          "NSO",
          "OTHER"
        ],
        "default": "STOCK_OPTION_TYPE_UNSPECIFIED",
        "description": "Enumeration of stock option grant types.\n\n - STOCK_OPTION_TYPE_UNSPECIFIED: Denotes the absence of a value\n - ISO: The stock options are incentive stock options (ISOs).\n - NSO: The stock options are non-qualified stock options (NSOs).\n - OTHER: The stock options are neither ISOs nor NSOs."
      },
      "shareholderportfoliosecuritiesv1alpha1Certificate": {
        "type": "object",
        "example": {
          "id": "2942",
          "issuerId": "7",
          "stakeholderId": "6113",
          "shareClassName": "Common",
          "issueDate": {
            "value": "2017-09-04"
          },
          "quantity": {
            "value": "1000"
          },
          "securityLabel": "CS-18",
          "pricePerShare": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "0.05"
            }
          },
          "lastModifiedDatetime": {
            "value": "2024-07-30T09:31:57.000000Z"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the certificate.",
            "maxLength": 50
          },
          "issuerId": {
            "type": "string",
            "description": "The identifier of the issuer owning the certificate.",
            "maxLength": 50,
            "minLength": 1
          },
          "stakeholderId": {
            "type": "string",
            "description": "The identifier of the stakeholder that holds the certificate.",
            "maxLength": 50
          },
          "shareClassName": {
            "type": "string",
            "description": "The name of the share class for the shares held in this certificate.",
            "maxLength": 100
          },
          "issueDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the certificate was issued."
          },
          "quantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares in the certificate."
          },
          "securityLabel": {
            "type": "string",
            "description": "The label representing this security (certificate).",
            "maxLength": 50
          },
          "pricePerShare": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The cost of each share in the certificate."
          },
          "canceledDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date when this certificate was canceled."
          },
          "canceledQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares in the certificate that were canceled."
          },
          "returnedToPoolQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares in the certificate that were returned to the pool."
          },
          "returnedToTreasuryQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares in the certificate that were annulled, but not returned to the pool."
          }
        },
        "description": "A certificate is a record of ownership of a company's shares."
      },
      "shareholderportfoliosecuritiesv1alpha1ConvertibleNote": {
        "type": "object",
        "example": {
          "id": "1",
          "issuerId": "7",
          "stakeholderId": "4903",
          "securityLabel": "CN-3",
          "issueDatetime": {
            "value": "2024-05-24T09:00:00.000000Z"
          },
          "conversionDatetime": {
            "value": "2024-06-24T09:00:00.000000Z"
          },
          "canceledDatetime": {
            "value": "2024-05-24T09:00:00.000000Z"
          },
          "cashPaid": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "10000.0"
            }
          },
          "maturityDatetime": {
            "value": "2024-05-24T09:00:00.000000Z"
          },
          "interest": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "50.0"
            }
          },
          "noteBlock": {
            "id": "4",
            "name": "Bridge 2014",
            "prefix": "CN",
            "noteType": "CONVERTIBLE_DEBT",
            "status": "EXECUTED"
          },
          "interestAccrualPeriod": "INTEREST_ACCRUAL_PERIOD_MONTHLY_FIRST_OF_MONTH",
          "interestRate": {
            "value": "3.0"
          },
          "interestCompoundingPeriod": "ANNUALLY",
          "dayCountBasis": "COUNT_ACTUAL_360",
          "priceCap": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "12000.0"
            }
          },
          "discountPercentage": {
            "value": "0.5"
          },
          "changeInControlPercent": {
            "value": "0.5"
          },
          "conversionTrigger": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "500.0"
            }
          },
          "canceledQuantity": {
            "value": "500.0"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "example": "1",
            "description": "The identifier of the convertible note.",
            "maxLength": 50,
            "minLength": 1
          },
          "issuerId": {
            "type": "string",
            "example": "7",
            "description": "The identifier of the issuer owning the convertible note.",
            "title": "The identifier of the issuer owning the convertible note",
            "maxLength": 50,
            "minLength": 1
          },
          "stakeholderId": {
            "type": "string",
            "example": "4903",
            "description": "The identifier of the stakeholder holding the convertible note.",
            "maxLength": 50
          },
          "securityLabel": {
            "type": "string",
            "example": "CN-3",
            "description": "The label representing this security (convertible note).",
            "maxLength": 50,
            "minLength": 1
          },
          "issueDatetime": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDateTime",
            "example": {
              "value": "2024-05-24T09:00:00.000000Z"
            },
            "description": "The date and time the convertible note was issued."
          },
          "conversionDatetime": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDateTime",
            "example": {
              "value": "2024-06-24T09:00:00.000000Z"
            },
            "description": "The date and time the convertible note was converted to a certificate."
          },
          "canceledDatetime": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDateTime",
            "example": {
              "value": "2024-05-24T09:00:00.000000Z"
            },
            "description": "The date and time the convertible note was canceled."
          },
          "cashPaid": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "example": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "10000.0"
              }
            },
            "description": "The amount of cash that the stakeholder paid for the convertible note.\n\nFor example, if the stakeholder invested $10,000, then $10,000 is the `cash_paid`. This field is also known as `principal`."
          },
          "maturityDatetime": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDateTime",
            "example": {
              "value": "2024-05-24T09:00:00.000000Z"
            },
            "description": "The date and time on which the convertible note matures.\n\nAt maturity, the convertible note's `cash_paid` and `interest` must be paid back if the convertible note hasn't converted into equity."
          },
          "interest": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "example": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "50.0"
              }
            },
            "description": "The accrued interest for the convertible note."
          },
          "noteBlock": {
            "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1NoteBlock",
            "example": {
              "id": "0c481821-3bc8-42a5-94cd-a2c89d88429d",
              "name": "Bridge 2014",
              "prefix": "CN",
              "noteType": "CONVERTIBLE_DEBT",
              "status": "EXECUTED"
            },
            "description": "The note block associated with the convertible note."
          },
          "interestAccrualPeriod": {
            "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1InterestAccrualPeriod",
            "example": "INTEREST_ACCRUAL_PERIOD_MONTHLY_FIRST_OF_MONTH",
            "description": "The length of time over which the interest due to the lender is calculated."
          },
          "interestRate": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "example": {
              "value": "3.0"
            },
            "description": "The annual interest rate that the note accrues."
          },
          "interestCompoundingPeriod": {
            "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1InterestCompoundingPeriod",
            "example": "ANNUALLY",
            "description": "The interest compounding period of the convertible note."
          },
          "dayCountBasis": {
            "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1DayCountBasis",
            "example": "COUNT_ACTUAL_360",
            "description": "The standardized way of counting the number of days between two dates."
          },
          "priceCap": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "example": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "12000.0"
              }
            },
            "description": "The valuation cap sets a maximum value at which a convertible security will convert into equity in the financing round.\n\nThis valuation cap stands regardless of the valuation of the financing round."
          },
          "discountPercentage": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "example": {
              "value": "0.5"
            },
            "description": "The discount applied to the price per share when the note holder will purchase shares in the next fundraising round. 1 represents 1%."
          },
          "changeInControlPercent": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "example": {
              "value": "0.5"
            },
            "description": " Denotes any premium or multiplier applied to the `cash_paid` in the event of a change in control prior to the maturity date. 1 represents 1%."
          },
          "conversionTrigger": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "example": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "500.0"
              }
            },
            "description": "For convertibles to convert into the next equity round, terms may be included that specify that the round be of a certain size for the convertible to convert."
          },
          "canceledQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "example": {
              "value": "500.0"
            },
            "description": "The quantity of shares in this convertible note that were canceled"
          }
        },
        "description": "A convertible note.",
        "required": [
          "issueDatetime",
          "cashPaid",
          "interest",
          "noteBlock",
          "interestCompoundingPeriod",
          "dayCountBasis"
        ]
      },
      "shareholderportfoliosecuritiesv1alpha1DayCountBasis": {
        "type": "string",
        "enum": [
          "DAY_COUNT_BASIS_UNSPECIFIED",
          "COUNT_30_360",
          "COUNT_ACTUAL_360",
          "COUNT_ACTUAL_365"
        ],
        "default": "DAY_COUNT_BASIS_UNSPECIFIED",
        "description": "- DAY_COUNT_BASIS_UNSPECIFIED: Denotes the absence of a value."
      },
      "shareholderportfoliosecuritiesv1alpha1Exercise": {
        "type": "object",
        "example": {
          "quantity": {
            "value": "500"
          },
          "fairMarketValueAsOfDate": {
            "value": "2019-09-30"
          },
          "exerciseDate": {
            "value": "2019-09-30"
          },
          "status": "STATUS_COMPLETE",
          "certificateId": "43",
          "exerciseType": "CASH_EXERCISE",
          "qualified": true,
          "exerciseId": "23HcT4iVfrgYUaJF9txHTaH",
          "withheldQuantity": {
            "value": "50"
          },
          "settledQuantity": {
            "value": "50"
          }
        },
        "properties": {
          "quantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares requested to be exercised."
          },
          "fairMarketValueAsOfDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date of the fair market value relevant to this exercise."
          },
          "exerciseDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date when the exercise request was initiated."
          },
          "status": {
            "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1ExerciseStatus",
            "description": "The status of the exercise request."
          },
          "certificateId": {
            "type": "string",
            "description": "The id of the certificate that was issued.\nThis field is set if the exercise has been completed and a certificate has been issued."
          },
          "exerciseType": {
            "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1ExerciseType",
            "description": "The type of the exercise request."
          },
          "qualified": {
            "type": "boolean",
            "description": "*Deprecated*\n\nTrue if the exercise option grant type is ISO. False otherwise.",
            "title": "*Deprecated*"
          },
          "exerciseId": {
            "type": "string",
            "description": "The identifier of the option exercise.",
            "title": "The identifier of the option exercise",
            "maxLength": 50
          },
          "withheldQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares withheld by the issuer as payment for the holder’s tax obligation resulting from a transaction."
          },
          "settledQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares ultimately delivered to the holder as a result of converting the derivative security, net of any shares withheld by the issuer as payment for the holder’s tax obligation."
          }
        },
        "description": "Information about an exercise."
      },
      "shareholderportfoliosecuritiesv1alpha1ExerciseStatus": {
        "type": "string",
        "enum": [
          "EXERCISE_STATUS_UNSPECIFIED",
          "STATUS_PENDING",
          "STATUS_COMPLETE",
          "STATUS_CANCELED"
        ],
        "default": "EXERCISE_STATUS_UNSPECIFIED",
        "description": "Enumeration of exercise status.\n\n - EXERCISE_STATUS_UNSPECIFIED: Denotes the absence of a value\n - STATUS_PENDING: The exercise is in a pending state.\n - STATUS_COMPLETE: The exercise is complete and a certificate was issued.\n - STATUS_CANCELED: The exercise is canceled."
      },
      "shareholderportfoliosecuritiesv1alpha1ExerciseType": {
        "type": "string",
        "enum": [
          "EXERCISE_TYPE_UNSPECIFIED",
          "CASH_EXERCISE",
          "CASHLESS_EXERCISE",
          "NET_EXERCISE",
          "BLENDED"
        ],
        "default": "EXERCISE_TYPE_UNSPECIFIED",
        "description": "Enumeration of exercise types.\n\n - EXERCISE_TYPE_UNSPECIFIED: Denotes the absence of a value\n - CASH_EXERCISE: The cost of exercise was covered in cash.\n - CASHLESS_EXERCISE: The cost of exercise was covered by selling shares.\n - NET_EXERCISE: The cost of exercise was covered by withholding shares.\n - BLENDED: The cost of exercise was covered by a combination of cash and selling of shares."
      },
      "shareholderportfoliosecuritiesv1alpha1GetCertificateResponse": {
        "type": "object",
        "properties": {
          "certificate": {
            "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1Certificate",
            "description": "The requested certificate from the specified portfolio."
          }
        },
        "description": "The response from the Get Certificate endpoint."
      },
      "shareholderportfoliosecuritiesv1alpha1GetConvertibleNoteResponse": {
        "type": "object",
        "properties": {
          "convertibleNote": {
            "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1ConvertibleNote",
            "description": "The requested convertible note from the specified issuer."
          }
        },
        "description": "The response from the `GetConvertibleNote` endpoint."
      },
      "shareholderportfoliosecuritiesv1alpha1GetOptionGrantResponse": {
        "type": "object",
        "properties": {
          "optionGrant": {
            "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1OptionGrant",
            "description": "The requested option grant issued by the specified portfolio."
          }
        },
        "description": "The response from the Get Option Grant endpoint."
      },
      "shareholderportfoliosecuritiesv1alpha1GetRestrictedStockAwardResponse": {
        "type": "object",
        "properties": {
          "restrictedStockAward": {
            "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1RestrictedStockAward",
            "description": "The requested restricted stock award from the specified portfolio."
          }
        },
        "description": "The response from the Get Restricted Stoc kAward endpoint."
      },
      "shareholderportfoliosecuritiesv1alpha1GetRestrictedStockUnitResponse": {
        "type": "object",
        "properties": {
          "restrictedStockUnit": {
            "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1RestrictedStockUnit",
            "description": "The requested restricted stock unit from the specified portfolio."
          }
        },
        "description": "The response from the Get Restricted Stock Unit endpoint."
      },
      "shareholderportfoliosecuritiesv1alpha1InterestAccrualPeriod": {
        "type": "string",
        "enum": [
          "INTEREST_ACCRUAL_PERIOD_UNSPECIFIED",
          "INTEREST_ACCRUAL_PERIOD_DAILY",
          "INTEREST_ACCRUAL_PERIOD_WEEKLY",
          "INTEREST_ACCRUAL_PERIOD_MONTHLY",
          "INTEREST_ACCRUAL_PERIOD_MONTHLY_FIRST_OF_MONTH",
          "INTEREST_ACCRUAL_PERIOD_SEMI_ANNUALLY",
          "INTEREST_ACCRUAL_PERIOD_ANNUALLY",
          "INTEREST_ACCRUAL_PERIOD_QUARTERLY_CALENDAR",
          "INTEREST_ACCRUAL_PERIOD_SEMI_ANNUALLY_CALENDAR",
          "INTEREST_ACCRUAL_PERIOD_ANNUALLY_CALENDAR"
        ],
        "default": "INTEREST_ACCRUAL_PERIOD_UNSPECIFIED",
        "description": "The length of time over which the interest due to the lender is calculated.\n\n - INTEREST_ACCRUAL_PERIOD_UNSPECIFIED: Denotes the absence of a value."
      },
      "shareholderportfoliosecuritiesv1alpha1InterestCompoundingPeriod": {
        "type": "string",
        "enum": [
          "INTEREST_COMPOUNDING_PERIOD_UNSPECIFIED",
          "SIMPLE",
          "DAILY",
          "MONTHLY",
          "SEMI_ANNUALLY",
          "ANNUALLY",
          "QUARTERLY_CALENDAR"
        ],
        "default": "INTEREST_COMPOUNDING_PERIOD_UNSPECIFIED",
        "description": "The enumerated string defining if the interest accrual is compounding or not, and the period used in calculating compounded interest.\nSimple interest is calculated only on the principal amount of the loan, while compound interest is calculated on the principal amount and also on the accumulated interest of the previous period.\n\n - INTEREST_COMPOUNDING_PERIOD_UNSPECIFIED: Denotes the absence of a value."
      },
      "shareholderportfoliosecuritiesv1alpha1ListCertificatesResponse": {
        "type": "object",
        "properties": {
          "certificates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1Certificate"
            },
            "description": "The vesting schedules from the specified portfolio."
          },
          "nextPageToken": {
            "type": "string",
            "example": "NDY=",
            "description": "Submit the `nextPageToken` string as `pageToken` in a subsequent request to retrieve the next page.\n\nIf the List Certificates response omits `nextPageToken`, then there are no subsequent pages."
          }
        },
        "description": "The response from the List Certificates endpoint."
      },
      "shareholderportfoliosecuritiesv1alpha1ListConvertibleNotesResponse": {
        "type": "object",
        "properties": {
          "convertibleNotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1ConvertibleNote"
            },
            "description": "The convertible notes returned in the `ListConvertibleNotes` response."
          },
          "nextPageToken": {
            "type": "string",
            "example": "ODMxMw==",
            "description": "Submit the `nextPageToken` string as `pageToken` in a subsequent request to retrieve the next page. If the `ListConvertibleNotes` response omits `nextPageToken`, then there are no subsequent pages."
          }
        },
        "description": "The response from the `ListConvertibleNotes` endpoint."
      },
      "shareholderportfoliosecuritiesv1alpha1ListOptionGrantsResponse": {
        "type": "object",
        "properties": {
          "optionGrants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1OptionGrant"
            },
            "description": "The vesting schedules from the specified portfolio."
          },
          "nextPageToken": {
            "type": "string",
            "example": "ODMxMw==",
            "description": "Submit the `nextPageToken` string as `pageToken` in a subsequent request to retrieve the next page. If the List Option Grants response omits `nextPageToken`, then there are no subsequent pages."
          }
        },
        "description": "The response from the List Option Grants endpoint."
      },
      "shareholderportfoliosecuritiesv1alpha1ListRestrictedStockAwardsResponse": {
        "type": "object",
        "properties": {
          "restrictedStockAwards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1RestrictedStockAward"
            },
            "description": "The restricted stock awards from the specified portfolio."
          },
          "nextPageToken": {
            "type": "string",
            "example": "NDY=",
            "description": "Submit the `nextPageToken` string as `pageToken` in a subsequent request to retrieve the next page.\n\nIf the List Restricted Stock Awards response omits `nextPageToken`, then there are no subsequent pages."
          }
        },
        "description": "The response from the List Restricted Stock Awards endpoint."
      },
      "shareholderportfoliosecuritiesv1alpha1ListRestrictedStockUnitsResponse": {
        "type": "object",
        "properties": {
          "restrictedStockUnits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1RestrictedStockUnit"
            },
            "description": "The restricted stock units from the specified portfolio."
          },
          "nextPageToken": {
            "type": "string",
            "example": "NDY=",
            "description": "Submit the `nextPageToken` string as `pageToken` in a subsequent request to retrieve the next page.\n\nIf the List Restricted Stock Units response omits `nextPageToken`, then there are no subsequent pages."
          }
        },
        "description": "The response from the List Restricted Stock Units endpoint."
      },
      "shareholderportfoliosecuritiesv1alpha1NoteBlock": {
        "type": "object",
        "example": {
          "id": "4",
          "name": "Bridge 2014",
          "prefix": "CN",
          "noteType": "CONVERTIBLE_DEBT",
          "status": "EXECUTED"
        },
        "properties": {
          "id": {
            "type": "string",
            "example": "4",
            "description": "The identifier of the note block.",
            "maxLength": 50,
            "minLength": 1
          },
          "name": {
            "type": "string",
            "example": "Bridge 2014",
            "description": "The name of the note block.",
            "maxLength": 1000,
            "minLength": 1
          },
          "prefix": {
            "type": "string",
            "example": "CN",
            "description": "The prefix of the note block.",
            "maxLength": 1000
          },
          "noteType": {
            "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1NoteType",
            "example": "CONVERTIBLE_DEBT",
            "description": "The type of the note related to the note block."
          },
          "status": {
            "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1NoteBlockStatus",
            "example": "EXECUTED",
            "description": "The status of the note block."
          }
        },
        "description": "A note block associated with a convertible note.",
        "required": [
          "noteType",
          "status"
        ]
      },
      "shareholderportfoliosecuritiesv1alpha1NoteBlockStatus": {
        "type": "string",
        "enum": [
          "NOTE_BLOCK_STATUS_UNSPECIFIED",
          "EXECUTED",
          "DRAFT",
          "INACTIVE"
        ],
        "default": "NOTE_BLOCK_STATUS_UNSPECIFIED",
        "description": "The status of the note block.\n\n - NOTE_BLOCK_STATUS_UNSPECIFIED: Denotes the absence of a value."
      },
      "shareholderportfoliosecuritiesv1alpha1NoteType": {
        "type": "string",
        "enum": [
          "NOTE_TYPE_UNSPECIFIED",
          "DEBT",
          "CONVERTIBLE_DEBT",
          "CONVERTIBLE_EQUITY",
          "SAFE"
        ],
        "default": "NOTE_TYPE_UNSPECIFIED",
        "description": "The type of the note related to the note block.\n\n - NOTE_TYPE_UNSPECIFIED: Denotes the absence of a value."
      },
      "shareholderportfoliosecuritiesv1alpha1OptionGrant": {
        "type": "object",
        "example": {
          "id": "7856",
          "issuerId": "7",
          "stakeholderId": "4923",
          "equityIncentivePlanName": "2014 Equity Incentive Plan",
          "issueDate": {
            "value": "2014-02-07"
          },
          "vestingStartDate": {
            "value": "2014-02-07"
          },
          "boardApprovalDate": {
            "value": "2014-02-07"
          },
          "stakeholderAcceptanceDate": {
            "value": "2016-08-23"
          },
          "grantExpirationDate": {
            "value": "2024-02-06"
          },
          "isoNsoSplit": false,
          "stockOptionType": "ISO",
          "quantity": {
            "value": "12000"
          },
          "outstandingQuantity": {
            "value": "1200"
          },
          "vestedQuantity": {
            "value": "1200"
          },
          "exercisedQuantity": {
            "value": "500"
          },
          "exercisePrice": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "0.64"
            }
          },
          "securityLabel": "ES-20",
          "earlyExercisable": true,
          "vestingEvents": [
            {
              "id": "1988",
              "vestDate": {
                "value": "2015-02-07"
              },
              "quantity": {
                "value": "3000"
              },
              "isoQuantity": {
                "value": "3000"
              },
              "nsoQuantity": {
                "value": "0"
              },
              "performanceCondition": false,
              "vested": true
            }
          ],
          "exercises": [
            {
              "quantity": {
                "value": "500"
              },
              "fairMarketValueAsOfDate": {
                "value": "2019-09-30"
              },
              "exerciseDate": {
                "value": "2019-09-30"
              },
              "status": "STATUS_COMPLETE",
              "certificateId": "43",
              "exerciseType": "CASH_EXERCISE",
              "qualified": true,
              "exerciseId": "23HcT4iVfrgYUaJF9txHTaH"
            }
          ],
          "terminationDate": {
            "value": "2020-02-07"
          },
          "vestingSchedule": {
            "name": "1/24 Cliff",
            "lastModifiedDate": {
              "value": "2022-01-31"
            },
            "startDate": {
              "value": "2022-01-31"
            },
            "endDate": {
              "value": "2024-01-31"
            }
          },
          "lastModifiedDatetime": {
            "value": "2024-07-30T09:31:57.000000Z"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the option grant.",
            "maxLength": 50
          },
          "issuerId": {
            "type": "string",
            "description": "The identifier of the issuer that issued the option grant.",
            "maxLength": 50
          },
          "stakeholderId": {
            "type": "string",
            "description": "The identifier of the stakeholder that holds the option grant.",
            "maxLength": 50
          },
          "equityIncentivePlanName": {
            "type": "string",
            "description": "The name of the equity incentive plan (i.e., option plan) associated with this option grant.",
            "maxLength": 100
          },
          "issueDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the option grant was issued."
          },
          "vestingStartDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the option grant began vesting."
          },
          "boardApprovalDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the option grant received board approval."
          },
          "stakeholderAcceptanceDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the option grant was accepted by the stakeholder."
          },
          "canceledDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date when this option grant was canceled."
          },
          "grantExpirationDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date when the option grant expires (usually 10 years from the issuance date of the grant)."
          },
          "lastExercisableDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The last date the option grant can be exercised by the stakeholder."
          },
          "disqualificationDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date when this option grant became disqualified."
          },
          "isoNsoSplit": {
            "type": "boolean",
            "description": "True if the grant has ISO/NSO split. False otherwise.\n\nLearn more about [the ISO $100K limit and ISO/NSO splits](https://support.carta.com/s/article/100k-rule)."
          },
          "stockOptionType": {
            "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1StockOptionType",
            "description": "The stock option type at time of issuance. For grants issued as ISO that subsequently failed to meet ISO qualifications, the type will remain ISO. Refer to the disqualification date for information regarding the disqualification of the grant's ISO shares."
          },
          "quantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The total number of options in the grant."
          },
          "outstandingQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The total quantity of stock options from this grant that have not been exercised, expired, forfeited, or canceled."
          },
          "vestedQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The total quantity of stock options from this grant that have vested."
          },
          "exercisedQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The total quantity of stock options from this grant that have been exercised into shares."
          },
          "exercisePrice": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The exercise price of the options in the grant."
          },
          "securityLabel": {
            "type": "string",
            "description": "The label representing this security (option grant).",
            "maxLength": 50
          },
          "earlyExercisable": {
            "type": "boolean",
            "description": "True if the option grant is eligible for early exercising; false if the option grant is not eligible for early exercising."
          },
          "vestingEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1OptionGrantVestingEvent"
            },
            "description": "The list of all vesting events associated with this grant. For time based vesting events, both past and future \nvesting details will be available. For performance and milestone based vesting, only achieved vesting events \nwill be available."
          },
          "exercises": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1Exercise"
            },
            "description": "The list of all exercises associated with this grant."
          },
          "terminationDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date when this option grant was terminated."
          },
          "vestingSchedule": {
            "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1VestingSchedule",
            "description": "The vesting schedule information associated with this grant."
          },
          "canceledQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of options in the grant that were canceled."
          },
          "forfeitedQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of options in the grant that were forfeited."
          },
          "expiredQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of options in the grant that expired."
          },
          "returnedToPoolQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of options in the grant that were returned to the pool."
          },
          "returnedToTreasuryQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of options in the grant that were annulled, but not returned to the pool."
          }
        },
        "description": "An option grant is a contract that gives an employee the right to purchase a company's stock at a set price."
      },
      "shareholderportfoliosecuritiesv1alpha1OptionGrantVestingEvent": {
        "type": "object",
        "example": {
          "id": "1988",
          "vestDate": {
            "value": "2013-10-02"
          },
          "quantity": {
            "value": "11250"
          },
          "isoQuantity": {
            "value": "0"
          },
          "nsoQuantity": {
            "value": "11250"
          },
          "performanceCondition": false,
          "vested": true,
          "maxQuantity": {
            "value": "11250"
          },
          "targetQuantity": {
            "value": "11250"
          },
          "vestedQuantity": {
            "value": "11250"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the option grant vesting event.",
            "maxLength": 50
          },
          "vestDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date of the vesting event.\n\nFor milestone-based vesting events, `vestDate` will be omitted until the security has vested."
          },
          "quantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares being vested in this vesting event by this event’s date.\n\n*Deprecated: use `maxQuantity`, `targetQuantity`, and `vestedQuantity` fields instead.*\n\nFor vesting events from strictly time-based vesting schedules, this field will be the amount of shares vesting in the tranche represented by this vesting event, regardless of whether the tranche has actually vested.\n\nFor vesting events with performance conditions, this field will be set to either:\n- if the performance condition has not been achieved, the maximum quantity of shares that could be vested\n- if the performance condition has been achieved, the target quantity of shares that are vested based on the payout details of the performance condition",
            "title": "The number of shares being vested in this vesting event by this event’s date. Deprecated."
          },
          "isoQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The total number of ISOs vested in this vesting event."
          },
          "nsoQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The total number of NSOs vested in this vesting event."
          },
          "performanceCondition": {
            "type": "boolean",
            "description": "Indicates that this vesting event has associated performance or milestone vesting conditions.\n\n`performanceCondition` will be `true` for milestone- and performance-based vesting events.\n\nFor performance-based vesting events, `performanceCondition` indicates that a performance condition exists, not that it has been met."
          },
          "vested": {
            "type": "boolean",
            "description": "Indicates that this vesting event has vested."
          },
          "maxQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The maximum number of shares vested in this vesting event.\n\nFor vesting events with performance conditions, this value will be based on the maximum payout defined within the performance condition.\n\nFor regular time-based vesting events, this value will be equivalent to the target_payout field.",
            "title": "The maximum number of shares vested in this vesting event."
          },
          "targetQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The target number of shares vested in this vesting event.\n\nThe target number of shares reflects the number of shares that have vested or should vest within the vesting event independent of any performance condition payout details.\n\nIf this vesting event has no performance condition, then this value will reflect the value that is or will be in the `vestedQuantity` field.",
            "title": "The target number of shares vested in this vesting event."
          },
          "vestedQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The actual number of shares vested in this vesting event.\n\nThis value will only be set if the vesting event is actually vested (i.e., the `vested` field is `true`). Otherwise, if the vesting event is unvested, then this value will be unset.",
            "title": "The actual number of shares vested in this vesting event."
          }
        },
        "description": "Information about the option grant vesting event."
      },
      "shareholderportfoliosecuritiesv1alpha1RestrictedStockAward": {
        "type": "object",
        "example": {
          "id": "29",
          "issuerId": "7",
          "stakeholderId": "4902",
          "equityIncentivePlanName": "2013 Equity Incentive Plan",
          "shareClassName": "Common",
          "issueDate": {
            "value": "2021-01-01"
          },
          "vestingStartDate": {
            "value": "2013-01-31"
          },
          "boardApprovalDate": {
            "value": "2013-01-31"
          },
          "stakeholderAcceptanceDate": {
            "value": "2014-02-12"
          },
          "canceledDate": {
            "value": "2017-10-26"
          },
          "quantity": {
            "value": "2500000"
          },
          "vestedQuantity": {
            "value": "2500000"
          },
          "securityLabel": "CS-1",
          "pricePerShare": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "0.10"
            }
          },
          "vestingEvents": [
            {
              "id": "1988",
              "vestDate": {
                "value": "2013-02-28"
              },
              "quantity": {
                "value": "52083"
              },
              "performanceCondition": false,
              "vested": true
            }
          ],
          "vestingSchedule": {
            "name": "1/24 Cliff",
            "lastModifiedDate": {
              "value": "2022-01-31"
            },
            "startDate": {
              "value": "2022-01-31"
            },
            "endDate": {
              "value": "2024-01-31"
            }
          },
          "lastModifiedDatetime": {
            "value": "2024-07-30T09:31:57.000000Z"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the restricted stock award.",
            "maxLength": 50
          },
          "issuerId": {
            "type": "string",
            "description": "The identifier of the issuer owning the restricted stock award.",
            "maxLength": 50,
            "minLength": 1
          },
          "stakeholderId": {
            "type": "string",
            "description": "The identifier of the stakeholder that holds the restricted stock award.",
            "maxLength": 50
          },
          "equityIncentivePlanName": {
            "type": "string",
            "description": "The name of the equity incentive plan (i.e., option plan) associated with this restricted stock award.",
            "maxLength": 100
          },
          "shareClassName": {
            "type": "string",
            "description": "The name of the share class that this restricted stock award belongs to.",
            "maxLength": 50
          },
          "issueDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the restricted stock award was issued."
          },
          "vestingStartDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The start date of the vesting period for the restricted stock award."
          },
          "boardApprovalDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the restricted stock award received board approval."
          },
          "stakeholderAcceptanceDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the restricted stock award was accepted by the stakeholder."
          },
          "canceledDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the restricted stock award was canceled."
          },
          "terminationDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the restricted stock award was terminated. Usually this matches the date the company's relationship with a stakeholder was terminated."
          },
          "quantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of restricted stock units in the award."
          },
          "vestedQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares that have been vested for this stock award."
          },
          "securityLabel": {
            "type": "string",
            "description": "The label representing this security (restricted stock award).",
            "maxLength": 50
          },
          "pricePerShare": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The cost of each share in the restricted stock award."
          },
          "vestingEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1RestrictedStockAwardVestingEvent"
            },
            "description": "The list of all vesting events associated with this restricted stock award."
          },
          "vestingSchedule": {
            "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1VestingSchedule",
            "description": "The vesting schedule information associated with the restricted stock award."
          },
          "canceledQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares in the restricted stock award that were canceled."
          },
          "returnedToPoolQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares in the restricted stock award that were returned to the pool."
          },
          "returnedToTreasuryQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares in the restricted stock award that were annulled, but not returned to the pool."
          }
        },
        "description": "A restricted stock award is a grant of company shares."
      },
      "shareholderportfoliosecuritiesv1alpha1RestrictedStockAwardVestingEvent": {
        "type": "object",
        "example": {
          "id": "1988",
          "vestDate": {
            "value": "2017-08-25"
          },
          "quantity": {
            "value": "50000"
          },
          "performanceCondition": false,
          "vested": true,
          "maxQuantity": {
            "value": "50000"
          },
          "targetQuantity": {
            "value": "50000"
          },
          "vestedQuantity": {
            "value": "50000"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the restricted stock award vesting event.",
            "maxLength": 50
          },
          "vestDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date of the vesting event.\n\nFor milestone-based vesting events, `vestDate` will be omitted until the security has vested."
          },
          "quantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares being vested in this vesting event by this event’s date.\n\n*Deprecated: use `maxQuantity`, `targetQuantity`, and `vestedQuantity` fields instead.*\n\nFor vesting events from strictly time-based vesting schedules, this field will be the amount of shares vesting in the tranche represented by this vesting event, regardless of whether the tranche has actually vested.\n\nFor vesting events with performance conditions, this field will be set to either:\n- if the performance condition has not been achieved, the maximum quantity of shares that could be vested\n- if the performance condition has been achieved, the target quantity of shares that are vested based on the payout details of the performance condition",
            "title": "The number of shares being vested in this vesting event by this event’s date. Deprecated."
          },
          "performanceCondition": {
            "type": "boolean",
            "description": "Indicates that this vesting event has associated performance or milestone vesting conditions.\n\n`performanceCondition` will be `true` for milestone- and performance-based vesting events.\n\nFor performance-based vesting events, `performanceCondition` indicates that a performance condition exists, not that it has been met."
          },
          "vested": {
            "type": "boolean",
            "description": "Indicates that this vesting event has vested."
          },
          "maxQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The maximum number of shares vested in this vesting event.\n\nFor vesting events with performance conditions, this value will be based on the maximum payout defined within the performance condition.\n\nFor regular time-based vesting events, this value will be equivalent to the target_payout field.",
            "title": "The maximum number of shares vested in this vesting event."
          },
          "targetQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The target number of shares vested in this vesting event.\n\nThe target number of shares reflects the number of shares that have vested or should vest within the vesting event independent of any performance condition payout details.\n\nIf this vesting event has no performance condition, then this value will reflect the value that is or will be in the `vestedQuantity` field.",
            "title": "The target number of shares vested in this vesting event."
          },
          "vestedQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The actual number of shares vested in this vesting event.\n\nThis value will only be set if the vesting event is actually vested (i.e., the `vested` field is `true`). Otherwise, if the vesting event is unvested, then this value will be unset.",
            "title": "The actual number of shares vested in this vesting event."
          }
        },
        "description": "Information about the restricted stock award vesting event."
      },
      "shareholderportfoliosecuritiesv1alpha1RestrictedStockUnit": {
        "type": "object",
        "example": {
          "id": "8551",
          "issuerId": "7",
          "stakeholderId": "6113",
          "equityIncentivePlanName": "2015EquityIncentivePlan",
          "issueDate": {
            "value": "2015-06-01"
          },
          "vestingStartDate": {
            "value": "2015-06-01"
          },
          "boardApprovalDate": {
            "value": "2015-06-01"
          },
          "stakeholderAcceptanceDate": {
            "value": "2017-02-27"
          },
          "quantity": {
            "value": "800"
          },
          "vestedQuantity": {
            "value": "800"
          },
          "releasedQuantity": {
            "value": "100"
          },
          "releasePricePerShare": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "0.20"
            }
          },
          "netSettledQuantity": {
            "value": "50"
          },
          "securityLabel": "ES-137",
          "vestingEvents": [
            {
              "id": "1988",
              "vestDate": {
                "value": "2016-06-01"
              },
              "quantity": {
                "value": "200"
              },
              "performanceCondition": false,
              "vested": true
            }
          ],
          "settlements": [
            {
              "settlementDate": {
                "value": "2016-08-12"
              },
              "releaseQuantity": {
                "value": "100"
              },
              "saleQuantity": {
                "value": "100"
              },
              "withholdingQuantity": {
                "value": "50"
              },
              "netSettlementQuantity": {
                "value": "50"
              },
              "settlementPrice": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "0.20"
                }
              },
              "certificateId": "45",
              "certificateLabel": "CS-102"
            }
          ],
          "vestingSchedule": {
            "name": "1/24 Cliff",
            "lastModifiedDate": {
              "value": "2022-01-31"
            },
            "startDate": {
              "value": "2015-06-01"
            },
            "endDate": {
              "value": "2024-01-31"
            }
          },
          "lastModifiedDatetime": {
            "value": "2024-07-30T09:31:57.000000Z"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the restricted stock unit.",
            "maxLength": 50,
            "minLength": 1
          },
          "issuerId": {
            "type": "string",
            "description": "The identifier of the issuer owning the restricted stock unit.",
            "maxLength": 50,
            "minLength": 1
          },
          "stakeholderId": {
            "type": "string",
            "description": "The identifier of the stakeholder that received the restricted stock unit.",
            "maxLength": 50
          },
          "equityIncentivePlanName": {
            "type": "string",
            "description": "The name of the equity incentive plan (i.e., option plan) associated with this restricted stock unit.",
            "maxLength": 100
          },
          "issueDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the restricted stock unit was issued."
          },
          "vestingStartDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The start date of the vesting period for the restricted stock unit, written as an ISO 8601 complete calendar date."
          },
          "boardApprovalDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the restricted stock unit received board approval."
          },
          "stakeholderAcceptanceDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the restricted stock unit was accepted by the stakeholder."
          },
          "quantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The total quantity of shares included in this restricted stock unit grant."
          },
          "vestedQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The total quantity of restricted stock units of this grant that have been vested."
          },
          "releasedQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The total quantity of restricted stock units from this grant that have been settled."
          },
          "releasePricePerShare": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The price of each share that has been released from this restricted stock unit grant."
          },
          "netSettledQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The total quantity of restricted stock units from this grant that have been released to the stakeholder."
          },
          "securityLabel": {
            "type": "string",
            "description": "The label representing this security (restricted stock unit).",
            "maxLength": 50
          },
          "vestingEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1RestrictedStockUnitVestingEvent"
            },
            "description": "The list of all vesting events associated with these restricted stock units."
          },
          "canceledDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date when the restricted stock unit was canceled."
          },
          "terminationDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date when the restricted stock unit was terminated."
          },
          "settlements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1RestrictedStockUnitSettlement"
            },
            "description": "The list of all settlements associated with these restricted stock units."
          },
          "vestingSchedule": {
            "$ref": "#/components/schemas/shareholderportfoliosecuritiesv1alpha1VestingSchedule",
            "description": "The vesting schedule information associated with the restricted stock unit."
          },
          "canceledQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares in the restricted stock unit that were canceled."
          },
          "forfeitedQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares in the restricted stock unit that were forfeited."
          },
          "expiredQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares in the restricted stock unit that expired."
          },
          "returnedToPoolQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares in the restricted stock unit that were returned to the pool."
          },
          "returnedToTreasuryQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares in the restricted stock unit that were annulled, but not returned to the pool."
          }
        },
        "description": "A restricted stock unit is a grant of company shares."
      },
      "shareholderportfoliosecuritiesv1alpha1RestrictedStockUnitSettlement": {
        "type": "object",
        "example": {
          "settlementDate": {
            "value": "2016-08-12"
          },
          "releaseQuantity": {
            "value": "100"
          },
          "saleQuantity": {
            "value": "100"
          },
          "withholdingQuantity": {
            "value": "50"
          },
          "netSettlementQuantity": {
            "value": "50"
          },
          "settlementPrice": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "0.20"
            }
          },
          "certificateId": "45",
          "certificateLabel": "CS-157"
        },
        "properties": {
          "settlementDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date of the settlement."
          },
          "releaseQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The quantity released during the settlement."
          },
          "saleQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The quantity sold in a cashless transaction to cover the cost of the settlement."
          },
          "withholdingQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The quantity withheld during the settlement."
          },
          "netSettlementQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The net quantity settled after quantities are sold or withheld."
          },
          "settlementPrice": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The price to settle one unit of the RSU."
          },
          "certificateId": {
            "type": "string",
            "description": "The resource identifier for the certificate that was generated as part of the transaction."
          },
          "certificateLabel": {
            "type": "string",
            "description": "The label of the certificate that was generated as part of the transaction. (eg. CS-107)."
          }
        },
        "title": "RestrictedStockUnit's Settlement information"
      },
      "shareholderportfoliosecuritiesv1alpha1RestrictedStockUnitVestingEvent": {
        "type": "object",
        "example": {
          "id": "1988",
          "vestDate": {
            "value": "2016-06-01"
          },
          "quantity": {
            "value": "375"
          },
          "performanceCondition": false,
          "vested": true,
          "maxQuantity": {
            "value": "375"
          },
          "targetQuantity": {
            "value": "375"
          },
          "vestedQuantity": {
            "value": "375"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the restricted stock unit vesting event.",
            "maxLength": 50
          },
          "vestDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date of the vesting event.\n\nFor milestone-based vesting events, `vestDate` will be omitted until the security has vested."
          },
          "quantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares being vested in this vesting event by this event’s date.\n\n*Deprecated: use `maxQuantity`, `targetQuantity`, and `vestedQuantity` fields instead.*\n\nFor vesting events from strictly time-based vesting schedules, this field will be the amount of shares vesting in the tranche represented by this vesting event, regardless of whether the tranche has actually vested.\n\nFor vesting events with performance conditions, this field will be set to either:\n- if the performance condition has not been achieved, the maximum quantity of shares that could be vested\n- if the performance condition has been achieved, the target quantity of shares that are vested based on the payout details of the performance condition",
            "title": "The number of shares being vested in this vesting event by this event’s date. Deprecated."
          },
          "performanceCondition": {
            "type": "boolean",
            "description": "Indicates that this vesting event has associated performance or milestone vesting conditions.\n\n`performanceCondition` will be `true` for milestone- and performance-based vesting events.\n\nFor performance-based vesting events, `performanceCondition` indicates that a performance condition exists, not that it has been met."
          },
          "vested": {
            "type": "boolean",
            "description": "Indicates that this vesting event has vested."
          },
          "maxQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The maximum number of shares vested in this vesting event.\n\nFor vesting events with performance conditions, this value will be based on the maximum payout defined within the performance condition.\n\nFor regular time-based vesting events, this value will be equivalent to the target_payout field.",
            "title": "The maximum number of shares vested in this vesting event."
          },
          "targetQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The target number of shares vested in this vesting event.\n\nThe target number of shares reflects the number of shares that have vested or should vest within the vesting event independent of any performance condition payout details.\n\nIf this vesting event has no performance condition, then this value will reflect the value that is or will be in the `vestedQuantity` field.",
            "title": "The target number of shares vested in this vesting event."
          },
          "vestedQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The actual number of shares vested in this vesting event.\n\nThis value will only be set if the vesting event is actually vested (i.e., the `vested` field is `true`). Otherwise, if the vesting event is unvested, then this value will be unset.",
            "title": "The actual number of shares vested in this vesting event."
          }
        },
        "description": "Information about the restricted stock unit vesting event."
      },
      "shareholderportfoliosecuritiesv1alpha1StockOptionType": {
        "type": "string",
        "enum": [
          "STOCK_OPTION_TYPE_UNSPECIFIED",
          "ISO",
          "NSO",
          "OTHER"
        ],
        "default": "STOCK_OPTION_TYPE_UNSPECIFIED",
        "description": "Enumeration of stock option grant types.\n\n - STOCK_OPTION_TYPE_UNSPECIFIED: Denotes the absence of a value\n - ISO: The stock options are incentive stock options (ISOs).\n - NSO: The stock option are non-qualified stock options (NSOs).\n - OTHER: The stock options are neither ISOs nor NSOs."
      },
      "shareholderportfoliosecuritiesv1alpha1VestingSchedule": {
        "type": "object",
        "example": {
          "name": "1/24 Cliff",
          "lastModifiedDate": {
            "value": "2022-01-31"
          },
          "startDate": {
            "value": "2022-01-31"
          },
          "endDate": {
            "value": "2024-01-31"
          }
        },
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the vesting schedule.",
            "maxLength": 500
          },
          "lastModifiedDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the vesting schedule was last modified."
          },
          "startDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The start date of the vesting schedule."
          },
          "endDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The end date of the vesting schedule."
          }
        },
        "description": "Restricted stock award vesting event information."
      },
      "shareholderportfoliov1alpha1FairMarketValue": {
        "type": "object",
        "example": {
          "portfolio_id": "123",
          "issuer_id": "4",
          "as_of_date": {
            "value": "2017-01-12"
          },
          "price": {
            "currency_code": {
              "value": "USD"
            },
            "amount": {
              "value": "1000000.0"
            }
          },
          "stale": false
        },
        "properties": {
          "portfolioId": {
            "type": "string",
            "description": "The identifier of the portfolio whose issuer's fair market value has been retrieved.",
            "maxLength": 50,
            "minLength": 1
          },
          "issuerId": {
            "type": "string",
            "description": "The identifier of the issuer whose fair market value has been retrieved.",
            "maxLength": 50,
            "minLength": 1
          },
          "asOfDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date from which the fair market value was retrieved."
          },
          "price": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The fair market value of the issuer as of the date specified by the `asOfDate` field. If the latest fair market value is expired or otherwise not available, this field will be omitted."
          },
          "stale": {
            "type": "boolean",
            "description": "Indicates that the issuer has [added a material event](https://support.carta.com/s/article/add-material-event-409a-dashboard) that warrants a 409A refresh, making the current FMV outdated."
          }
        },
        "description": "Information about the fair market value of an issuer.",
        "required": [
          "portfolioId",
          "issuerId",
          "asOfDate",
          "stale"
        ]
      },
      "shareholderportfoliov1alpha1Issuer": {
        "type": "object",
        "example": {
          "id": "611",
          "legalName": "MangoCart, Inc.",
          "doingBusinessAsName": "MangoCart",
          "website": "http://www.example.com/mangocart"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the issuer.",
            "maxLength": 50
          },
          "legalName": {
            "type": "string",
            "description": "The legal name of the issuer.",
            "maxLength": 1000
          },
          "doingBusinessAsName": {
            "type": "string",
            "description": "The operating name of the issuer.",
            "maxLength": 1000
          },
          "website": {
            "type": "string",
            "description": "The URL of the issuer’s website, if available.",
            "maxLength": 1000
          }
        },
        "description": "Information about an issuer."
      },
      "v1alpha1Acceleration": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the acceleration vesting.",
            "title": "The name of the accelerated vesting condition",
            "maxLength": 256,
            "minLength": 1
          },
          "terms": {
            "type": "string",
            "description": "Detailed terms of accelerated vesting of the draft option grant.",
            "title": "Detailed terms of the accelerated vesting condition",
            "maxLength": 1000,
            "minLength": 1
          }
        },
        "title": "Details of accelerated vesting",
        "required": [
          "name",
          "terms"
        ]
      },
      "v1alpha1Access": {
        "type": "object",
        "example": {
          "access_level": "FULL_ACCESS",
          "access_reason": ""
        },
        "properties": {
          "accessLevel": {
            "type": "string",
            "example": "FULL_ACCESS",
            "description": "The access level of a given corporation.",
            "maxLength": 100,
            "minLength": 1
          },
          "accessReason": {
            "type": "string",
            "example": "",
            "description": "Details about the access level of a given corporation.",
            "maxLength": 1000
          }
        },
        "description": "Context about the access of a given corporation.",
        "required": [
          "accessLevel"
        ]
      },
      "v1alpha1BenchmarkJob": {
        "type": "object",
        "example": {
          "job_area": "Engineering",
          "job_specialization": "Web Engineer",
          "job_levels": [
            "IC 2",
            "IC 3",
            "MGR 4",
            "MGR 5",
            "EX 10",
            "EX 11"
          ]
        },
        "properties": {
          "jobArea": {
            "type": "string",
            "example": "Engineering",
            "description": "The job area that the underlying data is segmented by.",
            "maxLength": 50,
            "minLength": 1
          },
          "jobSpecialization": {
            "type": "string",
            "example": "Web Engineer",
            "description": "The job specialization that the underlying data is segmented by.",
            "maxLength": 100
          },
          "jobLevels": {
            "type": "array",
            "example": [
              "IC 2",
              "IC 3",
              "MGR 4",
              "MGR 5",
              "EX 10",
              "EX 11"
            ],
            "items": {
              "type": "string"
            },
            "description": "The job levels that the underlying data is segmented by.",
            "maxItems": 40
          }
        },
        "description": "A job area, job specialization, and the job levels that have benchmarks.",
        "required": [
          "jobArea",
          "jobLevels"
        ]
      },
      "v1alpha1BenchmarkValue": {
        "type": "object",
        "example": {
          "compensation_type": "SALARY",
          "percentile": "P25",
          "benchmark": {
            "value": "100000"
          }
        },
        "properties": {
          "compensationType": {
            "type": "string",
            "example": "SALARY",
            "description": "The compensation type of the benchmark.",
            "maxLength": 50,
            "minLength": 1
          },
          "percentile": {
            "type": "string",
            "example": "P25",
            "description": "The percentile of the benchmark.\n\nFor example: \"P25\" represents the 25th percentile.",
            "maxLength": 10,
            "minLength": 1
          },
          "benchmark": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "example": {
              "value": "100000"
            },
            "description": "The ordinal value of the benchmark.\n\n\"SALARY\" and \"TOTAL_CASH\" are annual values in US dollars (USD).\n\n\"EQUITY_AS_FULLY_DILUTED_PERCENT\" is represented as a annual grant value between 0 and 100: 1 represents 1%.\n\nFor CEO Founder benchmarks, this value represents total ownership instead of an annual grant value."
          }
        },
        "description": "A compensation benchmark value.",
        "required": [
          "compensationType",
          "percentile"
        ]
      },
      "v1alpha1Benchmarks": {
        "type": "object",
        "example": {
          "post_money_valuation_bucket": "100M to 250M",
          "industry": "All",
          "geo_adjustment_location": "New York-Newark-Jersey City, NY-NJ-PA",
          "job_area": "Engineering",
          "job_specialization": "Web Engineer",
          "job_level": "IC 3",
          "benchmark_values": [
            {
              "compensation_type": "SALARY",
              "percentile": "P25",
              "value": {
                "value": "100000"
              }
            },
            {
              "compensation_type": "SALARY",
              "percentile": "P50",
              "value": {
                "value": "110000"
              }
            },
            {
              "compensation_type": "SALARY",
              "percentile": "P75",
              "value": {
                "value": "120000"
              }
            },
            {
              "compensation_type": "SALARY",
              "percentile": "P90",
              "value": {
                "value": "130000"
              }
            }
          ]
        },
        "properties": {
          "postMoneyValuationBucket": {
            "type": "string",
            "example": "100M to 250M",
            "description": "The company valuation bucket that the underlying data is segmented by.",
            "maxLength": 50,
            "minLength": 1
          },
          "industry": {
            "type": "string",
            "example": "All",
            "description": "The industry that the underlying data is segmented by.",
            "maxLength": 100,
            "minLength": 1
          },
          "geoAdjustmentLocation": {
            "type": "string",
            "example": "New York-Newark-Jersey City, NY-NJ-PA",
            "description": "The location used to geo-adjust the benchmarks.\n\nNote that a company may have location-based pay settings in their Carta Total Compensation compensation plan which may override the requested value.",
            "maxLength": 100,
            "minLength": 1
          },
          "jobArea": {
            "type": "string",
            "example": "Engineering",
            "description": "The job area that the underlying data is segmented by.",
            "maxLength": 50,
            "minLength": 1
          },
          "jobSpecialization": {
            "type": "string",
            "example": "Web Engineer",
            "description": "The job specialization that the underlying data is segmented by.\n\nAn empty job specialization denotes the benchmark for the roll-up job area.",
            "maxLength": 100
          },
          "jobLevel": {
            "type": "string",
            "example": "IC 3",
            "description": "The job level that the underlying data is segmented by.",
            "maxLength": 10,
            "minLength": 1
          },
          "benchmarkValues": {
            "type": "array",
            "example": [
              {
                "compensation_type": "SALARY",
                "percentile": "P25",
                "benchmark": {
                  "value": "100000"
                }
              },
              {
                "compensation_type": "SALARY",
                "percentile": "P50",
                "benchmark": {
                  "value": "110000"
                }
              },
              {
                "compensation_type": "SALARY",
                "percentile": "P75",
                "benchmark": {
                  "value": "120000"
                }
              },
              {
                "compensation_type": "SALARY",
                "percentile": "P90",
                "benchmark": {
                  "value": "130000"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/v1alpha1BenchmarkValue"
            },
            "description": "The benchmark values for this segment of data.",
            "maxItems": 50
          }
        },
        "description": "The compensation benchmarks.",
        "required": [
          "postMoneyValuationBucket",
          "industry",
          "geoAdjustmentLocation",
          "jobArea",
          "jobSpecialization",
          "jobLevel"
        ]
      },
      "v1alpha1BenchmarksMetadata": {
        "type": "object",
        "example": {
          "benchmarks_version_datetime": {
            "value": "2024-01-01T09:00:00.000000Z"
          }
        },
        "properties": {
          "benchmarksVersionDatetime": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDateTime",
            "example": {
              "value": "2024-01-01T09:00:00.000000Z"
            },
            "description": "The datetime that these benchmarks were first released in Carta."
          }
        },
        "description": "Context on the benchmark version of the benchmarks being returned. May differ by corporation.",
        "required": [
          "benchmarksVersionDatetime"
        ]
      },
      "v1alpha1BoardApproval": {
        "type": "string",
        "enum": [
          "BOARD_APPROVAL_UNSPECIFIED",
          "BOARD_APPROVAL_NOT_APPROVED",
          "BOARD_APPROVAL_APPROVED"
        ],
        "default": "BOARD_APPROVAL_UNSPECIFIED",
        "description": "- BOARD_APPROVAL_UNSPECIFIED: Denotes the absence of a value\n - BOARD_APPROVAL_NOT_APPROVED: Not board approved, will be sent for board approval\n - BOARD_APPROVAL_APPROVED: Board approved"
      },
      "v1alpha1CapitalizationTableData": {
        "type": "object",
        "example": {
          "id": "2d5ed165-bad3-40cf-8982-6309efac0989",
          "firmId": "186fb573-a22d-4c82-8ad3-3186f9095a41",
          "fundId": "12d1a483-6d55-49e6-abf5-a22a6dcde3ef",
          "companyId": "bc495a05-bd5b-451e-bdfc-88eea3fccfe8",
          "asOfDate": {
            "value": "2021-01-01"
          },
          "summary": {
            "fullyDilutedShares": {
              "value": "51772002.00"
            },
            "outstandingShares": {
              "value": "6910947.00"
            },
            "cashRaised": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "3508667.41"
              }
            }
          },
          "shareClassDetails": [
            {
              "summary": {
                "shareClassId": "9",
                "optionPoolIds": [
                  "3"
                ],
                "fullyDilutedShares": {
                  "value": "5653612.00"
                },
                "outstandingShares": {
                  "value": "5653612.00"
                },
                "cashRaised": {
                  "currencyCode": {
                    "value": "USD"
                  },
                  "amount": {
                    "value": "1175287.84"
                  }
                }
              },
              "shareClass": {
                "id": "9",
                "issuerId": "2d5ed165-bad3-40cf-8982-6309efac0989",
                "name": "Common",
                "prefix": "CS",
                "type": "COMMON",
                "authorizedShareCount": {
                  "value": "80000000000"
                },
                "parValue": {
                  "currencyCode": {
                    "value": "USD"
                  },
                  "amount": {
                    "value": "0.0001"
                  }
                },
                "seniority": 2,
                "pariPassu": true,
                "preferredShareClassDetails": null
              }
            },
            {
              "summary": {
                "shareClassId": "10",
                "optionPoolIds": [
                  "3"
                ],
                "fullyDilutedShares": {
                  "value": "1257335.00"
                },
                "outstandingShares": {
                  "value": "1257335.00"
                },
                "cashRaised": {
                  "currencyCode": {
                    "value": "USD"
                  },
                  "amount": {
                    "value": "383379.57"
                  }
                }
              },
              "shareClass": {
                "id": "10",
                "issuerId": "2d5ed165-bad3-40cf-8982-6309efac0989",
                "name": "Series A Preferred",
                "prefix": "PA",
                "type": "PREFERRED",
                "authorizedShareCount": {
                  "value": "10000000"
                },
                "parValue": {
                  "currencyCode": {
                    "value": "USD"
                  },
                  "amount": {
                    "value": "0.0001"
                  }
                },
                "seniority": 1,
                "pariPassu": true,
                "preferredShareClassDetails": {
                  "rightsAndPreferences": {
                    "originalIssuePrice": {
                      "currencyCode": {
                        "value": "USD"
                      },
                      "amount": {
                        "value": "0.265"
                      }
                    },
                    "conversionPrice": {
                      "currencyCode": {
                        "value": "USD"
                      },
                      "amount": {
                        "value": "0.265"
                      }
                    },
                    "conversionRatio": {
                      "value": "1.00"
                    },
                    "multiplier": {
                      "value": "1.00"
                    },
                    "participating": true,
                    "participationCap": {
                      "value": "1.00"
                    }
                  },
                  "dividendDetails": {
                    "dividendType": "CASH",
                    "dividendDetails": {
                      "dividendYield": {
                        "value": "1.00"
                      },
                      "dividendAccrualType": "NON_CUMULATIVE",
                      "dividendAccrualPeriod": "WEEKLY",
                      "dividendInterestType": "INTEREST_PERIOD_MONTHLY"
                    }
                  }
                }
              }
            }
          ],
          "optionPoolSummaries": [
            {
              "optionPoolId": "3",
              "shareClassId": "9",
              "fullyDilutedShares": {
                "value": "44861055.00"
              },
              "outstandingEquityAwardDerivatives": {
                "value": "3693060.0"
              },
              "outstandingCommittedRestrictedStockAwards": {
                "value": "0"
              },
              "name": "Equity Incentive Plan",
              "authorizedShares": {
                "value": "45000000"
              }
            }
          ],
          "warrantBlockDetails": [
            {
              "summary": {
                "warrantBlockId": "1",
                "shareClassId": "10",
                "cashRaised": {
                  "currencyCode": {
                    "value": "USD"
                  },
                  "amount": {
                    "value": "1075000.00"
                  }
                },
                "fullyDilutedShares": {
                  "value": "3029344.00"
                },
                "outstandingWarrants": {
                  "value": "3029344.00"
                }
              }
            }
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "example": "2d5ed165-bad3-40cf-8982-6309efac0989",
            "description": "The identifier of the capitalization table.",
            "maxLength": 50,
            "minLength": 1
          },
          "firmId": {
            "type": "string",
            "example": "7af7123a-2ee9-4e31-a173-54b8f9159426",
            "description": "The identifier of the firm holding the investment.",
            "maxLength": 50,
            "minLength": 1
          },
          "fundId": {
            "type": "string",
            "example": "09051fa3-fe71-4613-9bfb-e5bfa396cfea",
            "description": "The identifier of the fund holding the investment.",
            "maxLength": 50,
            "minLength": 1
          },
          "companyId": {
            "type": "string",
            "example": "bc495a05-bd5b-451e-bdfc-88eea3fccfe8",
            "description": "The identifier of the company.",
            "maxLength": 50,
            "minLength": 1
          },
          "asOfDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "example": {
              "value": "2021-01-01"
            },
            "description": "The date as of which the capitalization table data is based. This is more relevant for pro forma capitalization tables, where this field will represent the date the pro forma was created. For primary capitalization tables, this field will default to the date when the capitalization table was retrieved (i.e., today's date).",
            "title": "Date for which the capitalization table state was retrieved. Format: 'YYYY-MM-DD'"
          },
          "summary": {
            "$ref": "#/components/schemas/v1alpha1CapitalizationTableSummary",
            "description": "Capitalization table summary level information."
          },
          "shareClassDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1ShareClassDetails"
            },
            "description": "Per share class detailed information."
          },
          "optionPoolSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1OptionPoolSummary"
            },
            "description": "Per option pool summary information."
          },
          "warrantBlockDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1WarrantBlockDetails"
            },
            "description": "Per warrant block detailed information."
          },
          "noteBlockDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1NoteBlockDetails"
            },
            "description": "Per note block detailed information."
          }
        },
        "description": "Capitalization table.",
        "required": [
          "id",
          "firmId",
          "fundId",
          "companyId",
          "asOfDate",
          "summary"
        ]
      },
      "v1alpha1CapitalizationTableSummary": {
        "type": "object",
        "example": {
          "fullyDilutedShares": {
            "value": "61399310.00"
          },
          "outstandingShares": {
            "value": "16328224.00"
          },
          "cashRaised": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "20261050.79"
            }
          }
        },
        "properties": {
          "fullyDilutedShares": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "Total common shares of the company. This includes all outstanding and issued shares, and those that would be included if all options/warrants were exercised."
          },
          "outstandingShares": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "Undiluted outstanding shares quantity. This is the sum of all `outstandingShares` across all `ShareClassSummary` objects."
          },
          "cashRaised": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "Total currency amount raised."
          }
        },
        "description": "Summary information about the capitalization table.",
        "required": [
          "fullyDilutedShares",
          "outstandingShares",
          "cashRaised"
        ]
      },
      "v1alpha1CertificateOfIncorporation": {
        "type": "object",
        "properties": {
          "fileId": {
            "type": "string",
            "example": "cfa1313f-3607-4a52-9f9b-908dc94af6ee",
            "description": "File identifier of the certificate of incorporation (CoI) document. The file identifier is returned by the <a href=\"https://docs.carta.com/carta/reference/v1alpha1filesuploadfile\">Upload File</a> endpoint after completing a file upload request.",
            "maxLength": 50,
            "minLength": 1
          },
          "effectiveDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "example": {
              "value": "2018-10-31"
            },
            "description": "The certificate of incorporation (CoI) document's effective date."
          }
        },
        "title": "Details about the draft issuer's certificate of incorporation (CoI)",
        "required": [
          "fileId",
          "effectiveDate"
        ]
      },
      "v1alpha1Compliance": {
        "type": "object",
        "example": {
          "countryOfResidency": {
            "value": "USA"
          },
          "stateOfResidency": {
            "value": "US-CA"
          }
        },
        "properties": {
          "countryOfResidency": {
            "$ref": "#/components/schemas/v1alpha1Iso3166Set1Alpha3Code",
            "description": "The country of residency of the stakeholder "
          },
          "stateOfResidency": {
            "$ref": "#/components/schemas/v1alpha1Iso3166Set2Code",
            "description": "The state of residency of the stakeholder. Should only be provided if country_of_residency is USA."
          }
        },
        "description": "Compliance details of a stakeholder",
        "title": "Compliance details of a stakeholder"
      },
      "v1alpha1ConversionPriceBasis": {
        "type": "string",
        "enum": [
          "CONVERSION_PRICE_BASIS_UNSPECIFIED",
          "OUTSTANDING_SHARES",
          "OUTSTANDING_OPTIONS_AND_WARRANTS",
          "UNISSUED_OPTIONS",
          "OPTION_PLAN_INCREASE_WITH_NEW_FINANCING",
          "CONVERSION_OF_NOTES"
        ],
        "default": "CONVERSION_PRICE_BASIS_UNSPECIFIED",
        "description": "The conversion price basis.\n\n - CONVERSION_PRICE_BASIS_UNSPECIFIED: Denotes the absence of a value\n - OUTSTANDING_SHARES: Outstanding Shares\n - OUTSTANDING_OPTIONS_AND_WARRANTS: Outstanding Options and warrants\n - UNISSUED_OPTIONS: Unissued options\n - OPTION_PLAN_INCREASE_WITH_NEW_FINANCING: Option plan increase with new financing\n - CONVERSION_OF_NOTES: Conversion of notes"
      },
      "v1alpha1ConvertibleTermsGrouping": {
        "type": "object",
        "example": {
          "key": {
            "noteBlockId": "4",
            "noteBlockName": "2013 SAFE",
            "conversionDiscountPercentage": {
              "value": "20.00"
            },
            "conversionPriceBases": [
              "OUTSTANDING_SHARES",
              "OUTSTANDING_OPTIONS_AND_WARRANTS"
            ],
            "valuationCap": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "8000000.00"
              }
            },
            "valuationCapType": "PRE_MONEY",
            "liquidityPriority": "SENIOR_TO_PREFERRED"
          },
          "cashRaised": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "875000.00"
            }
          },
          "principal": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "875000.00"
            }
          },
          "interest": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "0.00"
            }
          }
        },
        "properties": {
          "key": {
            "$ref": "#/components/schemas/v1alpha1ConvertibleTermsKey",
            "description": "Convertible terms used as group by key."
          },
          "cashRaised": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The cash raised for the note block."
          },
          "principal": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The total principal for the note block. The outstanding debt for the note block is the principal plus the interest."
          },
          "interest": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "Total interest for note block."
          },
          "outstandingDebt": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "Total outstanding debt for note block."
          }
        },
        "description": "Cap table calculations grouped by convertible terms.",
        "required": [
          "key",
          "cashRaised",
          "principal",
          "interest",
          "outstandingDebt"
        ]
      },
      "v1alpha1ConvertibleTermsKey": {
        "type": "object",
        "example": {
          "noteBlockId": "4",
          "noteBlockName": "2013 SAFE",
          "conversionDiscountPercentage": {
            "value": "20.00"
          },
          "conversionPriceBases": [
            "OUTSTANDING_SHARES",
            "OUTSTANDING_OPTIONS_AND_WARRANTS"
          ],
          "valuationCap": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "8000000.00"
            }
          },
          "valuationCapType": "PRE_MONEY",
          "liquidityPriority": "SENIOR_TO_PREFERRED"
        },
        "properties": {
          "noteBlockId": {
            "type": "string",
            "description": "The identifier of the note block.",
            "maxLength": 50,
            "minLength": 1
          },
          "noteBlockName": {
            "type": "string",
            "description": "The name of the note block.",
            "maxLength": 100,
            "minLength": 1
          },
          "conversionDiscountPercentage": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The discount applied to the price per share when the note holder purchases shares in the next fundraising round."
          },
          "conversionPriceBases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1ConversionPriceBasis"
            },
            "description": "This determines what securities are included in the capitalization definition that is used\nto calculate conversion price, and is generally referred to as Liquidity Capitalization\nor Fully Diluted Capitalization.\n\nFor post-money cap securities, the capitalization is generally defined as all outstanding\nshares, all outstanding options, all converting securities (including shares converted\nfrom post-money SAFE) but excludes the unissued option pool.\n\nFor pre-money cap securities, the capitalization is generally defined as all outstanding\nshares, all outstanding options, may or may not include unissued options, and always\nexcludes shares from the conversion of notes."
          },
          "valuationCap": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The valuation cap sets a maximum value at which a convertible security will convert into equity in a financing round. This valuation cap remains unchanged regardless of the valuation of the financing round."
          },
          "valuationCapType": {
            "$ref": "#/components/schemas/v1alpha1ValuationCapType",
            "description": "There are two types of valuation caps: pre-money and post-money. The primary difference between the two is how the conversion price is calculated. The conversion price is calculated by dividing the valuation cap by the liquidity capitalization. For post-money valuation caps, the liquidity capitalization includes the shares that will be created from the conversion of the post-money instrument. Pre-money instruments do not include the shares that will be created upon conversion in the capitalization figure. Generally, post-money valuation caps will be explicitly labeled as post-money in the note document. When a valuation cap is stated but not specified, the valuation cap is pre-money."
          },
          "liquidityPriority": {
            "$ref": "#/components/schemas/v1alpha1LiquidityPriority",
            "description": "The liquidation priority section specifies what order SAFEs will be paid out if there is a liquidity event. There is a liquidation priority section for post-money SAFEs, which states if, in a liquidity event, the SAFE will be on par with preferred. If there is no such section in agreement highlighting liquidation priority, the default should just be 'senior to preferred.'",
            "title": "The liquidation priority section specifies what order SAFEs will be paid out if there is\na liquidity event. There is a liquidation priority section for post-money SAFEs, which\nstates if, in a liquidity event, the SAFE will be on par with preferred. If there is\nno such section in agreement highlighting liquidation priority, the default should just\nbe “senior to preferred.\""
          }
        },
        "description": "Details used as a key when grouping convertible terms.",
        "title": "Details used as a key when grouping convertible terms.",
        "required": [
          "noteBlockId",
          "noteBlockName"
        ]
      },
      "v1alpha1Corporation": {
        "type": "object",
        "example": {
          "id": "611",
          "legalName": "MangoCart, Inc.",
          "doingBusinessAsName": "MangoCart",
          "website": "http://www.example.com/mangocart"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the corporation.",
            "maxLength": 50
          },
          "legalName": {
            "type": "string",
            "description": "The legal name of the corporation.",
            "maxLength": 1000
          },
          "doingBusinessAsName": {
            "type": "string",
            "description": "The operating, or doing business as (DBA), name of the corporation.",
            "maxLength": 1000
          },
          "website": {
            "type": "string",
            "description": "The URL of the corporation’s website.",
            "maxLength": 1000
          }
        },
        "description": "A corporation."
      },
      "v1alpha1CreateDraftIssuerRequest": {
        "type": "object",
        "example": {
          "draftIssuer": {
            "clientSource": "MY_SOURCE",
            "details": {
              "name": "XYZ Widget Company",
              "countryOfIncorporation": {
                "value": "US"
              },
              "currency": {
                "value": "USD"
              },
              "website": "http://www.example.com/XYZwidget",
              "llc": false,
              "employerIdentificationNumber": "123456789",
              "doingBusinessAs": "XYZ Widget",
              "industry": "INFORMATION_TECHNOLOGY",
              "stateOfIncorporation": {
                "value": "US-NY"
              },
              "dateOfIncorporation": {
                "value": "2018-10-31"
              },
              "address": {
                "line1": "123 Main Street",
                "city": "New York",
                "countrySubdivision": {
                  "value": "US-NY"
                },
                "country": {
                  "value": "US"
                },
                "postalCode": "10010"
              },
              "primaryContact": {
                "name": "Jane Doe",
                "title": "CEO",
                "email": "jane.doe@example.com"
              },
              "certificateOfIncorporation": {
                "fileId": "cfa1313f-3607-4a52-9f9b-908dc94af6ee",
                "effectiveDate": {
                  "value": "2018-10-31"
                }
              }
            },
            "shareClass": {
              "prefix": "CS",
              "name": "CommonShares",
              "type": "COMMON",
              "parValue": {
                "value": "0.001"
              },
              "seniority": 1,
              "authorizedShares": 1000,
              "authorizedDate": {
                "value": "2019-01-10"
              },
              "certificates": [
                {
                  "quantity": 100,
                  "issueDate": {
                    "value": "2019-06-16"
                  },
                  "rule144Date": {
                    "value": "2019-06-16"
                  },
                  "vestingSchedule": {
                    "name": "2019 Vesting Schedule",
                    "length": 48,
                    "vesting": {
                      "frequency": "MONTHLY",
                      "onDay": "SAME"
                    },
                    "cliff": {
                      "cliffPercentage": {
                        "value": "0.25"
                      },
                      "cliffValue": {
                        "value": "1"
                      },
                      "cliffDuration": "YEARS"
                    }
                  },
                  "legend": "Default",
                  "pricePerShare": {
                    "value": "1.00"
                  },
                  "cashPaid": {
                    "value": "100"
                  },
                  "stakeholder": {
                    "name": "John Smith",
                    "email": "john.smith@example.com",
                    "relationship": "EXECUTIVE",
                    "type": "INDIVIDUAL"
                  },
                  "stockPurchaseAgreementFileId": "945a53ed-c628-46d2-85d2-19bdc3633020"
                }
              ]
            }
          }
        },
        "properties": {
          "draftIssuer": {
            "$ref": "#/components/schemas/v1alpha1DraftIssuer",
            "title": "The Draft Issuer data"
          }
        },
        "description": "The request for the CreateDraftIssuer endpoint."
      },
      "v1alpha1CreateDraftIssuerResponse": {
        "type": "object",
        "properties": {
          "draftIssuer": {
            "$ref": "#/components/schemas/v1alpha1DraftIssuer",
            "title": "The Draft Issuer data"
          }
        },
        "description": "The response for the CreateDraftIssuer endpoint."
      },
      "v1alpha1CreateDraftOptionGrantResponse": {
        "type": "object",
        "properties": {
          "draftOptionGrant": {
            "$ref": "#/components/schemas/v1alpha1DraftOptionGrant",
            "description": "The created draft option grant"
          }
        },
        "description": "The response for the CreateDraftOptionGrant endpoint."
      },
      "v1alpha1Date": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "format": "int32",
            "description": "Year of date. Use 0 if specifying a date without a year."
          },
          "month": {
            "type": "integer",
            "format": "int32",
            "description": "Month of year. Use 0 if specifying a year without a month and day."
          },
          "day": {
            "type": "integer",
            "format": "int32",
            "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant."
          }
        },
        "description": "* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date"
      },
      "v1alpha1Decimal": {
        "type": "object",
        "example": {
          "value": "100.57"
        },
        "properties": {
          "value": {
            "type": "string",
            "description": "A decimal amount represented in string form.\n\nExamples:\n0\n0.0\n1.00\n123.45\n-456.0\n.321\n+1.23456e-3\n1e-05",
            "title": "value",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "(?i)^[\\+\\-]?((0|[1-9][0-9]*)(\\.[0-9]*)?|\\.[0-9]+)(E[\\+\\-]?[0-9]+)?$"
          }
        },
        "description": "A string-based representation of the decimal type."
      },
      "v1alpha1DividendAccrualPeriod": {
        "type": "string",
        "enum": [
          "DIVIDEND_ACCRUAL_PERIOD_UNSPECIFIED",
          "DAILY",
          "WEEKLY",
          "MONTHLY",
          "QUARTERLY",
          "ANNUALLY"
        ],
        "default": "DIVIDEND_ACCRUAL_PERIOD_UNSPECIFIED",
        "description": "- DIVIDEND_ACCRUAL_PERIOD_UNSPECIFIED: Denotes the absence of a value\n - DAILY: Dividends accrue on a daily basis\n - WEEKLY: Dividends accrue on a weekly basis\n - MONTHLY: Dividends accrue on a monthly basis\n - QUARTERLY: Dividends accrue on a quarterly basis\n - ANNUALLY: Dividends accrue on an annual basis"
      },
      "v1alpha1DividendAccrualType": {
        "type": "string",
        "enum": [
          "DIVIDEND_ACCRUAL_TYPE_UNSPECIFIED",
          "CUMULATIVE",
          "NON_CUMULATIVE"
        ],
        "default": "DIVIDEND_ACCRUAL_TYPE_UNSPECIFIED",
        "description": "- DIVIDEND_ACCRUAL_TYPE_UNSPECIFIED: Denotes the absence of a value\n - CUMULATIVE: Dividends that are earned and accrue over time, whether or not it is declared by the board\n - NON_CUMULATIVE: Dividends that accrue and are paid out at the discretion of the board"
      },
      "v1alpha1DividendDetails": {
        "type": "object",
        "example": {
          "dividendYield": {
            "value": "0.02"
          },
          "dividendAccrualType": "CUMULATIVE",
          "dividendAccrualPeriod": "DAILY",
          "dividendInterestType": "INTEREST_PERIOD_DAILY"
        },
        "properties": {
          "dividendYield": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "How much a company pays out in dividends each year relative to its stock price."
          },
          "dividendAccrualType": {
            "$ref": "#/components/schemas/v1alpha1DividendAccrualType",
            "description": "The dividend accrual type for the share class."
          },
          "dividendAccrualPeriod": {
            "$ref": "#/components/schemas/v1alpha1DividendAccrualPeriod",
            "description": "Cadence upon which dividends are accrued."
          },
          "dividendInterestType": {
            "$ref": "#/components/schemas/v1alpha1DividendInterestType",
            "description": "Type of interest used to calculated dividend."
          }
        },
        "description": "Details about share class dividends."
      },
      "v1alpha1DividendInterestType": {
        "type": "string",
        "enum": [
          "DIVIDEND_INTEREST_TYPE_UNSPECIFIED",
          "SIMPLE_INTEREST",
          "INTEREST_PERIOD_DAILY",
          "INTEREST_PERIOD_WEEKLY",
          "INTEREST_PERIOD_MONTHLY",
          "INTEREST_PERIOD_QUARTERLY",
          "INTEREST_PERIOD_SEMI_ANNUAL",
          "INTEREST_PERIOD_ANNUAL"
        ],
        "default": "DIVIDEND_INTEREST_TYPE_UNSPECIFIED",
        "description": "- DIVIDEND_INTEREST_TYPE_UNSPECIFIED: Denotes the absence of a value\n - SIMPLE_INTEREST: Interest is calculated using simple interest\n - INTEREST_PERIOD_DAILY: Interest compounds daily\n - INTEREST_PERIOD_WEEKLY: Interest compounds weekly\n - INTEREST_PERIOD_MONTHLY: Interest compounds monthly\n - INTEREST_PERIOD_QUARTERLY: Interest compounds quarterly\n - INTEREST_PERIOD_SEMI_ANNUAL: Interest compounds semi-annually\n - INTEREST_PERIOD_ANNUAL: Interest compounds annually"
      },
      "v1alpha1DividendType": {
        "type": "string",
        "enum": [
          "DIVIDEND_TYPE_UNSPECIFIED",
          "CASH",
          "NON_CASH"
        ],
        "default": "DIVIDEND_TYPE_UNSPECIFIED",
        "description": "- DIVIDEND_TYPE_UNSPECIFIED: Unspecified\n - CASH: Investors will receive dividends in cash\n - NON_CASH: Investors will receive non-cash dividends, such as shares"
      },
      "v1alpha1Document": {
        "type": "object",
        "example": {
          "file_id": "cfa1313f-3607-4a52-9f9b-908dc94af6ee"
        },
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the document.\n\nThis is an output-only field and values provided by clients will be ignored when creating.",
            "readOnly": true,
            "maxLength": 256,
            "minLength": 1
          },
          "url": {
            "type": "string",
            "description": "The URL of the document.\n\nThis is an output-only field and values provided by clients will be ignored when creating.",
            "readOnly": true,
            "maxLength": 1000
          },
          "fileId": {
            "type": "string",
            "example": "cfa1313f-3607-4a52-9f9b-908dc94af6ee",
            "description": "The file identifier of the document.\n\nFiles must be uploaded first through the [Upload File](https://docs.carta.com/carta/reference/v1alpha1filesuploadfile) endpoint before their file identifiers can be referenced here.",
            "maxLength": 50
          }
        },
        "description": "Contains information about a document, including name, url, and file id."
      },
      "v1alpha1DownloadFundInvestmentDocumentResponse": {
        "type": "object",
        "properties": {
          "portfolioId": {
            "type": "string",
            "description": "The ID of the portfolio holding the fund investment document.",
            "maxLength": 50,
            "minLength": 1
          },
          "documentId": {
            "type": "string",
            "description": "The ID of the fund investment document.",
            "maxLength": 50,
            "minLength": 1
          },
          "documentName": {
            "type": "string",
            "example": "Capital Call Notice",
            "description": "The name of the fund investment document.",
            "minLength": 1
          },
          "downloadUrl": {
            "type": "string",
            "example": "https://s3.amazonaws.com/carta.public/api-platform/capital_call_document_2021_01_01.pdf",
            "description": "The URL to download the fund investment document.\n\nThis URL will only be valid until the time specified in `downloadUrlExpirationTime`.",
            "minLength": 1
          },
          "downloadUrlExpirationTime": {
            "type": "string",
            "format": "date-time",
            "example": "2034-01-15T01:00:00.00Z",
            "description": "The time at which the download URL will expire."
          }
        },
        "description": "The response for the DownloadFundInvestmentDocument endpoint.",
        "required": [
          "portfolioId",
          "documentId",
          "documentName",
          "downloadUrl",
          "downloadUrlExpirationTime"
        ]
      },
      "v1alpha1DraftIssuer": {
        "type": "object",
        "example": {
          "id": "c1e82913-da74-4ce7-88c0-a70398efa101",
          "resultantIssuerId": "612",
          "state": "TRANSITIONED_TO_ISSUER",
          "transitionToIssuerTime": {
            "value": "2023-01-01T01:00:00"
          },
          "clientSource": "MY_SOURCE",
          "details": {
            "name": "XYZ Widget Company",
            "countryOfIncorporation": {
              "value": "US"
            },
            "currency": {
              "value": "USD"
            },
            "website": "http://www.example.com/XYZwidget",
            "llc": false,
            "employerIdentificationNumber": "123456789",
            "doingBusinessAs": "XYZ Widget",
            "industry": "INFORMATION_TECHNOLOGY",
            "stateOfIncorporation": {
              "value": "US-NY"
            },
            "dateOfIncorporation": {
              "value": "2018-10-31"
            },
            "address": {
              "line1": "123 Main Street",
              "city": "New York",
              "countrySubdivision": {
                "value": "US-NY"
              },
              "country": {
                "value": "US"
              },
              "postalCode": "10010"
            },
            "primaryContact": {
              "name": "Jane Doe",
              "title": "CEO",
              "email": "jane.doe@example.com",
              "registrationUrl": "https://app.carta.com/register?token=a9d06955-4b42-42bb-9ee3-8f025c863f59"
            },
            "certificateOfIncorporation": {
              "fileId": "cfa1313f-3607-4a52-9f9b-908dc94af6ee",
              "effectiveDate": {
                "value": "2018-10-31"
              }
            }
          },
          "shareClass": {
            "prefix": "CS",
            "name": "CommonShares",
            "type": "COMMON",
            "parValue": {
              "value": "0.001"
            },
            "seniority": 1,
            "authorizedShares": 1000,
            "authorizedDate": {
              "value": "2019-01-10"
            },
            "certificates": [
              {
                "quantity": 100,
                "issueDate": {
                  "value": "2019-06-16"
                },
                "rule144Date": {
                  "value": "2019-06-16"
                },
                "vestingSchedule": {
                  "name": "2019 Vesting Schedule",
                  "length": 48,
                  "terms": "double-trigger",
                  "vesting": {
                    "frequency": "MONTHLY",
                    "onDay": "SAME"
                  },
                  "cliff": {
                    "cliffPercentage": {
                      "value": "0.25"
                    },
                    "cliffValue": {
                      "value": "1"
                    },
                    "cliffDuration": "YEARS"
                  }
                },
                "legendName": "Default",
                "legend": "(I) THE SECURITIES REFERENCED HEREIN HAVE NOT BEEN REGISTERED UNDER THE SECURITIES ACT OF 1933, AND HAVE BEEN ACQUIRED FOR INVESTMENT AND NOT WITH A VIEW TO, OR IN CONNECTION WITH, THE SALE OR DISTRIBUTION THEREOF. NO SUCH SALE OR DISTRIBUTION MAY BE EFFECTED WITHOUT AN EFFECTIVE REGISTRATION STATEMENT RELATED THEREOF OR AN OPINION OF COUNSEL IN A FORM SATISFACTORY TO THE COMPANY THAT SUCH REGISTRATION IS NOT REQUIRED UNDER THE SECURITIES ACT OF 1933. (II) THE SECURITIES REFERENCED HEREIN MAY BE TRANSFERRED ONLY IN ACCORDANCE WITH THE TERMS OF AN AGREEMENT BETWEEN THE COMPANY AND THE STOCKHOLDER, A COPY OF WHICH IS ON FILE WITH AND MAY BE OBTAINED FROM THE SECRETARY OF THE COMPANY AT NO CHARGE. (III) THE TRANSFER OF SECURITIES REFERENCED HEREIN IS SUBJECT TO RESTRICTIONS REQUIRING APPROVAL OF THE COMPANY PURSUANT TO AND IN ACCORDANCE WITH THE COMPANY’S BYLAWS, COPIES OF WHICH MAY BE OBTAINED UPON WRITTEN REQUEST TO THE COMPANY AT ITS PRINCIPAL PLACE OF BUSINESS. THE COMPANY SHALL NOT REGISTER OR OTHERWISE RECOGNIZE OR GIVE EFFECT TO ANY PURPORTED TRANSFER OF SHARES OF STOCK THAT DOES NOT COMPLY WITH THE COMPANY’S BYLAWS.",
                "pricePerShare": {
                  "value": "1.00"
                },
                "cashPaid": {
                  "value": "100"
                },
                "accelerationTermsName": "double-trigger",
                "accelerationTerms": "double-trigger description",
                "stakeholder": {
                  "name": "John Smith",
                  "email": "john.smith@example.com",
                  "relationship": "EXECUTIVE",
                  "type": "INDIVIDUAL"
                },
                "stockPurchaseAgreementFileId": "945a53ed-c628-46d2-85d2-19bdc3633020"
              }
            ]
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "example": "c1e82913-da74-4ce7-88c0-a70398efa101",
            "description": "The identifier of the draft issuer. Ignored if submitted in a Create Draft Issuer request.",
            "readOnly": true,
            "maxLength": 50
          },
          "details": {
            "$ref": "#/components/schemas/v1alpha1DraftIssuerDetails",
            "description": "Details about the draft issuer, including name, address, and contact information."
          },
          "shareClass": {
            "$ref": "#/components/schemas/v1alpha1DraftIssuerShareClass",
            "description": "The draft issuer shares."
          },
          "resultantIssuerId": {
            "type": "string",
            "description": "The identifier of the issuer created as a result of this draft issuer. This is an output-only field and values provided by clients will be ignored when creating draft issuers.",
            "readOnly": true,
            "maxLength": 50
          },
          "state": {
            "$ref": "#/components/schemas/v1alpha1DraftIssuerState",
            "description": "The draft issuer operational state.\n\nThis is an output-only field and values provided by clients will be ignored when creating draft issuers.",
            "readOnly": true
          },
          "transitionToIssuerTime": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDateTime",
            "description": "The timestamp of when the draft issuer's `state` transitioned from `ACTIVE` to `TRANSITIONED_TO_ISSUER`.\n\nThis is an output-only field and values provided by clients will be ignored when creating draft issuers.",
            "readOnly": true
          },
          "clientSource": {
            "type": "string",
            "description": "An optional value provided by clients to identify the source of the draft issuer. This is leveraged to drive customer experiences and differentiate between client workflow sources.",
            "maxLength": 100
          }
        },
        "description": "The top-level object defining the draft issuer.",
        "required": [
          "details",
          "shareClass"
        ]
      },
      "v1alpha1DraftIssuerAddress": {
        "type": "object",
        "example": {
          "line1": "123 Main Street",
          "city": "New York",
          "countrySubdivision": {
            "value": "US-NY"
          },
          "country": {
            "value": "US"
          },
          "postalCode": "10010"
        },
        "properties": {
          "line1": {
            "type": "string",
            "description": "Address line 1",
            "title": "Address line 1",
            "maxLength": 1000,
            "minLength": 1
          },
          "line2": {
            "type": "string",
            "description": "Address line 2",
            "title": "Address line 2",
            "maxLength": 1000
          },
          "line3": {
            "type": "string",
            "description": "Address line 3",
            "title": "Address line 3",
            "maxLength": 1000
          },
          "city": {
            "type": "string",
            "description": "City, district, suburb, town, village, etc.",
            "maxLength": 1000,
            "minLength": 1
          },
          "countrySubdivision": {
            "$ref": "#/components/schemas/v1alpha1Iso3166Set2Code",
            "description": "State, county, province, territory, region, etc. specified as an [ISO 3166-2 code](https://en.wikipedia.org/wiki/ISO_3166-2). Only required if the country is the United States."
          },
          "country": {
            "$ref": "#/components/schemas/v1alpha1Iso3166Set1Alpha2Code",
            "description": "Country specified as a two-letter country code per the [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) standard."
          },
          "postalCode": {
            "type": "string",
            "description": "Postal or ZIP code",
            "title": "Postal or ZIP code",
            "maxLength": 1000,
            "minLength": 1
          }
        },
        "description": "The address of the issuer's headquarters.",
        "required": [
          "line1",
          "city",
          "country",
          "postalCode"
        ]
      },
      "v1alpha1DraftIssuerCertificate": {
        "type": "object",
        "example": {
          "quantity": 100,
          "issueDate": {
            "value": "2019-06-16"
          },
          "rule144Date": {
            "value": "2019-06-16"
          },
          "vestingSchedule": {
            "name": "2019 Vesting Schedule",
            "length": 48,
            "terms": "double-trigger",
            "vesting": {
              "frequency": "MONTHLY",
              "onDay": "SAME"
            },
            "cliff": {
              "cliffPercentage": {
                "value": "0.25"
              },
              "cliffValue": {
                "value": "1"
              },
              "cliffDuration": "YEARS"
            }
          },
          "legendName": "Default",
          "legend": "(I) THE SECURITIES REFERENCED HEREIN HAVE NOT BEEN REGISTERED UNDER THE SECURITIES ACT OF 1933, AND HAVE BEEN ACQUIRED FOR INVESTMENT AND NOT WITH A VIEW TO, OR IN CONNECTION WITH, THE SALE OR DISTRIBUTION THEREOF. NO SUCH SALE OR DISTRIBUTION MAY BE EFFECTED WITHOUT AN EFFECTIVE REGISTRATION STATEMENT RELATED THEREOF OR AN OPINION OF COUNSEL IN A FORM SATISFACTORY TO THE COMPANY THAT SUCH REGISTRATION IS NOT REQUIRED UNDER THE SECURITIES ACT OF 1933. (II) THE SECURITIES REFERENCED HEREIN MAY BE TRANSFERRED ONLY IN ACCORDANCE WITH THE TERMS OF AN AGREEMENT BETWEEN THE COMPANY AND THE STOCKHOLDER, A COPY OF WHICH IS ON FILE WITH AND MAY BE OBTAINED FROM THE SECRETARY OF THE COMPANY AT NO CHARGE. (III) THE TRANSFER OF SECURITIES REFERENCED HEREIN IS SUBJECT TO RESTRICTIONS REQUIRING APPROVAL OF THE COMPANY PURSUANT TO AND IN ACCORDANCE WITH THE COMPANY’S BYLAWS, COPIES OF WHICH MAY BE OBTAINED UPON WRITTEN REQUEST TO THE COMPANY AT ITS PRINCIPAL PLACE OF BUSINESS. THE COMPANY SHALL NOT REGISTER OR OTHERWISE RECOGNIZE OR GIVE EFFECT TO ANY PURPORTED TRANSFER OF SHARES OF STOCK THAT DOES NOT COMPLY WITH THE COMPANY’S BYLAWS.",
          "pricePerShare": {
            "value": "1.00"
          },
          "cashPaid": {
            "value": "100"
          },
          "accelerationTermsName": "double-trigger",
          "accelerationTerms": "double-trigger description",
          "stakeholder": {
            "name": "John Smith",
            "email": "john.smith@example.com",
            "relationship": "EXECUTIVE",
            "type": "INDIVIDUAL"
          },
          "stockPurchaseAgreementFileId": "945a53ed-c628-46d2-85d2-19bdc3633020"
        },
        "properties": {
          "quantity": {
            "type": "integer",
            "format": "int64",
            "description": "The number of shares in the certificate."
          },
          "issueDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date the certificate was issued specified as an [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) calendar date.\nIf this certificate's share class `authorized_date` is specified, then the `issue_date` must be specified, and the `issue_date` must be on or after the `authorized_date`."
          },
          "rule144Date": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "[Rule 144](https://www.investor.gov/introduction-investing/investing-basics/glossary/securities-act-rule-144) date specified as an [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) calendar date."
          },
          "vestingSchedule": {
            "$ref": "#/components/schemas/v1alpha1DraftIssuerVestingSchedule",
            "description": "The certificate's vesting schedule."
          },
          "legend": {
            "type": "string",
            "description": "The certificate legend description.",
            "maxLength": 2000
          },
          "pricePerShare": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The certificate's price per share."
          },
          "cashPaid": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The cash paid for all shares."
          },
          "accelerationTerms": {
            "type": "string",
            "description": "The description of the acceleration terms. Acceleration terms are related to the shares.",
            "maxLength": 1000
          },
          "stakeholder": {
            "$ref": "#/components/schemas/v1alpha1DraftIssuerStakeholder",
            "description": "The certificate stakeholder."
          },
          "legendName": {
            "type": "string",
            "description": "The certificate legend name.",
            "maxLength": 256
          },
          "accelerationTermsName": {
            "type": "string",
            "description": "The name of the acceleration terms. Acceleration terms are related to the shares.",
            "maxLength": 256
          },
          "stockPurchaseAgreementFileId": {
            "type": "string",
            "description": "Optional. File identifier of the certificate's originating purchase agreement (SPA). The file identifier is returned by the <a href=\"https://docs.carta.com/carta/reference/v1alpha1filesuploadfile\">Upload File</a> endpoint after completing a file upload request. A single SPA file can be associated with multiple certificates.",
            "maxLength": 50
          },
          "transferredIpValue": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The value of IP transferred for all shares."
          }
        },
        "description": "A draft issuer certificate.",
        "required": [
          "quantity",
          "pricePerShare",
          "cashPaid",
          "stakeholder"
        ]
      },
      "v1alpha1DraftIssuerCliffDuration": {
        "type": "string",
        "enum": [
          "DRAFT_ISSUER_CLIFF_DURATION_UNSPECIFIED",
          "YEARS",
          "MONTHS",
          "DAYS"
        ],
        "default": "DRAFT_ISSUER_CLIFF_DURATION_UNSPECIFIED",
        "description": "The duration of the vesting cliff, specified as years, months, or days.\n\n - DRAFT_ISSUER_CLIFF_DURATION_UNSPECIFIED: Conventional default for enums. Do not use this.\n - YEARS: A duration of years\n - MONTHS: A duration of months\n - DAYS: A duration of days"
      },
      "v1alpha1DraftIssuerDetails": {
        "type": "object",
        "example": {
          "name": "XYZ Widget Company",
          "countryOfIncorporation": {
            "value": "US"
          },
          "currency": {
            "value": "USD"
          },
          "website": "http://www.example.com/XYZwidget",
          "llc": false,
          "employerIdentificationNumber": "56756",
          "doingBusinessAs": "XYZ Widget",
          "industry": "INFORMATION_TECHNOLOGY",
          "stateOfIncorporation": {
            "value": "US-NY"
          },
          "dateOfIncorporation": {
            "value": "2018-10-31"
          },
          "address": {
            "line1": "123 Main Street",
            "city": "New York",
            "countrySubdivision": {
              "value": "US-NY"
            },
            "country": {
              "value": "US"
            },
            "postalCode": "10010"
          },
          "primaryContact": {
            "name": "Jane Doe",
            "title": "CEO",
            "email": "jane.doe@example.com",
            "registrationUrl": "https://app.carta.com/confirm?id=1234"
          },
          "certificateOfIncorporation": {
            "fileId": "cfa1313f-3607-4a52-9f9b-908dc94af6ee",
            "effectiveDate": {
              "value": "2018-10-31"
            }
          }
        },
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the issuer.",
            "maxLength": 256,
            "minLength": 1
          },
          "countryOfIncorporation": {
            "$ref": "#/components/schemas/v1alpha1Iso3166Set1Alpha2Code",
            "description": "Issuer's country of incorporation, specified as a two-letter country code per the [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) standard.",
            "maxLength": 1000,
            "minLength": 1
          },
          "currency": {
            "$ref": "#/components/schemas/v1alpha1Iso4217CurrencyAlphaCode",
            "description": "Issuer's currency specified according to the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) standard. Applies to the share class `par_value` and certificate `cash_paid` and `price_per_share` and `transferred_ip_value` fields."
          },
          "website": {
            "type": "string",
            "description": "The URL of the issuer's website.",
            "maxLength": 1000
          },
          "llc": {
            "type": "boolean",
            "description": "A flag to represent whether the issuer is a LLC or not. Defaults to false."
          },
          "employerIdentificationNumber": {
            "type": "string",
            "description": "The issuer's Employer Identification Number (EIN). Required if the `countryOfIncorporation` is 'US'.",
            "maxLength": 9
          },
          "doingBusinessAs": {
            "type": "string",
            "description": "The issuer's 'doing business as' (DBA) name.",
            "maxLength": 256
          },
          "industry": {
            "$ref": "#/components/schemas/v1alpha1DraftIssuerIndustry",
            "description": "The issuer's industry."
          },
          "stateOfIncorporation": {
            "$ref": "#/components/schemas/v1alpha1Iso3166Set2Code",
            "description": "[ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) code identifying the principal subdivision of the issuer's `countryOfIncorporation`. Only required if the issuer is incorporated in the United States (`draftIssuer.details.dateOfIncorporation` is set and `draftIssuer.details.countryOfIncorporation.value` is 'US')."
          },
          "dateOfIncorporation": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The issuer's date of incorporation. Must be provided if the issuer is incorporated."
          },
          "address": {
            "$ref": "#/components/schemas/v1alpha1DraftIssuerAddress",
            "description": "The address of the issuer."
          },
          "primaryContact": {
            "$ref": "#/components/schemas/v1alpha1DraftIssuerPrimaryContact",
            "description": "The issuer's primary contact."
          },
          "certificateOfIncorporation": {
            "$ref": "#/components/schemas/v1alpha1CertificateOfIncorporation",
            "description": "Optional. The issuer's latest certificate of incorporation (CoI) document."
          }
        },
        "description": "Contains information about the issuer, including name, address, industry, and primary point of contact.",
        "required": [
          "name",
          "countryOfIncorporation",
          "currency",
          "address",
          "primaryContact"
        ]
      },
      "v1alpha1DraftIssuerIndustry": {
        "type": "string",
        "enum": [
          "DRAFT_ISSUER_INDUSTRY_UNSPECIFIED",
          "THREED_PRINTING",
          "ACCOUNTING",
          "ADVERTISING",
          "AEROSPACE_DEFENSE",
          "AGRICULTURE",
          "AIRLINES_PLANES",
          "ANALYTICS",
          "APPAREL_ACCESSORIES",
          "APPLIANCES",
          "ART",
          "ARTIFICIAL_INTELLIGENCE",
          "ASSET_MANAGEMENT",
          "AUCTION",
          "AUDIO_VIDEO_EQUIPMENT",
          "AUGMENTED_VIRTUAL_REALITY",
          "AUTOMOBILE",
          "B2B",
          "B2C",
          "SAAS",
          "BABY_TODDLER",
          "BANKING",
          "BIOTECHNOLOGY",
          "BITCOIN",
          "BLOCKCHAIN",
          "BUSINESS_PRODUCTS_SERVICES",
          "CANNABIS",
          "CANDY_SNACKFOODS",
          "CHIPS_SEMICONDUCTORS",
          "CLEAN_TECHNOLOGY_RENEWABLES",
          "CLOTHING_ACCESSORIES",
          "COMMERCIAL_PRINTING",
          "COMPLIANCE",
          "COMPUTERS",
          "CONFERENCING_COMMUNICATIONS",
          "CONSTRUCTION",
          "CONSULTING_OUTSOURCING",
          "CPG",
          "CONSUMER_PRODUCTS_SERVICES",
          "CONVENIENCE_STORE",
          "CREDIT_COLLECTIONS",
          "CRM",
          "CUSTOMER_SUPPORT",
          "CYBERSECURITY",
          "DATA",
          "DATABASES",
          "DATING",
          "DENTISTRY",
          "DEPARTMENT_STORES",
          "DESIGN",
          "DIGITAL",
          "DIGITAL_GOODS",
          "DISEASE_DIAGNOSIS",
          "DOCUMENTS",
          "DRONES",
          "ECOMMERCE",
          "EDUCATION",
          "ELECTRONICS",
          "EMAIL",
          "ENERGY_UTILITIES",
          "ENTERTAINMENT",
          "ENVIRONMENT",
          "ESPORTS",
          "EXCHANGES",
          "FASHION",
          "FACILITIES",
          "FILM",
          "FINANCIAL",
          "FINTECH",
          "FITNESS",
          "FOOD_BEVERAGES",
          "FURNITURE",
          "GAMBLING",
          "GAMING",
          "GRAPHICS",
          "GROCERY",
          "HARDWARE",
          "HEALTHCARE",
          "HOSTING",
          "HOTELS_HOSPITALITY",
          "HOUSEHOLD",
          "HR_WORKFORCE_MANAGEMENT",
          "INDUSTRIAL",
          "INFORMATION_TECHNOLOGY",
          "INFORMATION_SERVICES",
          "INSURANCE",
          "INTERNET",
          "IOT",
          "INVESTING",
          "JEWELRY",
          "KITCHEN_COOKWARE",
          "LEGAL",
          "LEGAL_SERVICES",
          "LENDING",
          "LODGING",
          "LOGISTICS",
          "MACHINE_LEARNING",
          "MACHINERY_EQUIPMENT",
          "MANUFACTURING",
          "MARKETING",
          "MARKETPLACES",
          "MEAT_FISH_SEAFOOD",
          "MEDIA",
          "MEDICAL_EQUIPMENT",
          "MESSAGING",
          "METALS_MINING",
          "MOBILE",
          "MUSIC",
          "NAVIGATION",
          "NETWORKING",
          "NEWS",
          "OFFICE_PRODUCTS",
          "OIL_GAS",
          "ON_DEMAND",
          "OS_BROWSER_UTILITIES",
          "PACKAGING",
          "PAYMENTS",
          "PERSONAL_CARE_PRODUCTS",
          "PETS",
          "PHARMACEUTICAL_DRUGS",
          "PHARMACIES",
          "PHOTO",
          "POINT_OF_SALE",
          "PROJECT_MANAGEMENT",
          "PUBLIC_RELATIONS",
          "PUBLISHING",
          "RADIO",
          "REAL_ESTATE",
          "RECRUITING",
          "RECYCLING",
          "RENTAL",
          "RESEARCH",
          "RESTAURANTS",
          "RETAIL",
          "RISK_SECURITY",
          "ROBOTICS",
          "SALES",
          "SEARCH",
          "SERVERS_MAINFRAMES",
          "SERVICES",
          "SOCIAL_MEDIA",
          "SOFTWARE",
          "SPEECH_RECOGNITION",
          "SPORTING_GOODS",
          "SPORTS_RECREATION",
          "SUPPLY_CHAIN",
          "SWITCHERS_CONNECTORS",
          "SYSTEMS_MANAGEMENT",
          "TECHNOLOGY",
          "TELECOMMUNICATIONS",
          "TELEVISION",
          "TESTING",
          "TICKETING",
          "TOBACCO",
          "TRANSPORTATION",
          "TRAVEL",
          "TRAVEL_SERVICES",
          "TRUCKING",
          "VETERINARY",
          "VIDEOS",
          "WEARABLES"
        ],
        "default": "DRAFT_ISSUER_INDUSTRY_UNSPECIFIED",
        "title": "The issuer's industry"
      },
      "v1alpha1DraftIssuerPrimaryContact": {
        "type": "object",
        "example": {
          "name": "Jane Doe",
          "title": "CEO",
          "email": "jane.doe@example.com",
          "registrationUrl": "https://app.carta.com/confirm?id=1234"
        },
        "properties": {
          "name": {
            "type": "string",
            "description": "The full name of issuer's primary contact.",
            "maxLength": 1000,
            "minLength": 1
          },
          "title": {
            "type": "string",
            "description": "The title of issuer's primary contact (e.g., CEO, Founder, Board member).",
            "maxLength": 1000,
            "minLength": 1
          },
          "email": {
            "type": "string",
            "description": "The email address of the issuer's the primary contact.",
            "maxLength": 1000,
            "minLength": 1
          },
          "registrationUrl": {
            "type": "string",
            "description": "Output only. The URL to be used by the primary contact to complete their Carta user registration. Clients should redirect the primary contact to this URL to complete their registration.",
            "readOnly": true,
            "maxLength": 1000
          }
        },
        "description": "The draft issuer's primary contact.",
        "required": [
          "name",
          "title",
          "email"
        ]
      },
      "v1alpha1DraftIssuerShareClass": {
        "type": "object",
        "example": {
          "prefix": "CS",
          "name": "CommonShares",
          "type": "COMMON",
          "parValue": {
            "value": "0.001"
          },
          "seniority": 1,
          "authorizedShares": 1000,
          "authorizedDate": {
            "value": "2019-01-10"
          },
          "certificates": [
            {
              "quantity": 100,
              "issueDate": {
                "value": "2019-06-16"
              },
              "rule144Date": {
                "value": "2019-06-16"
              },
              "vestingSchedule": {
                "name": "2019 Vesting Schedule",
                "length": 48,
                "terms": "double-trigger",
                "vesting": {
                  "frequency": "MONTHLY",
                  "onDay": "SAME"
                },
                "cliff": {
                  "cliffPercentage": {
                    "value": "0.25"
                  },
                  "cliffValue": {
                    "value": "1"
                  },
                  "cliffDuration": "YEARS"
                }
              },
              "legendName": "Default",
              "legend": "(I) THE SECURITIES REFERENCED HEREIN HAVE NOT BEEN REGISTERED UNDER THE SECURITIES ACT OF 1933, AND HAVE BEEN ACQUIRED FOR INVESTMENT AND NOT WITH A VIEW TO, OR IN CONNECTION WITH, THE SALE OR DISTRIBUTION THEREOF. NO SUCH SALE OR DISTRIBUTION MAY BE EFFECTED WITHOUT AN EFFECTIVE REGISTRATION STATEMENT RELATED THEREOF OR AN OPINION OF COUNSEL IN A FORM SATISFACTORY TO THE COMPANY THAT SUCH REGISTRATION IS NOT REQUIRED UNDER THE SECURITIES ACT OF 1933. (II) THE SECURITIES REFERENCED HEREIN MAY BE TRANSFERRED ONLY IN ACCORDANCE WITH THE TERMS OF AN AGREEMENT BETWEEN THE COMPANY AND THE STOCKHOLDER, A COPY OF WHICH IS ON FILE WITH AND MAY BE OBTAINED FROM THE SECRETARY OF THE COMPANY AT NO CHARGE. (III) THE TRANSFER OF SECURITIES REFERENCED HEREIN IS SUBJECT TO RESTRICTIONS REQUIRING APPROVAL OF THE COMPANY PURSUANT TO AND IN ACCORDANCE WITH THE COMPANY’S BYLAWS, COPIES OF WHICH MAY BE OBTAINED UPON WRITTEN REQUEST TO THE COMPANY AT ITS PRINCIPAL PLACE OF BUSINESS. THE COMPANY SHALL NOT REGISTER OR OTHERWISE RECOGNIZE OR GIVE EFFECT TO ANY PURPORTED TRANSFER OF SHARES OF STOCK THAT DOES NOT COMPLY WITH THE COMPANY’S BYLAWS.",
              "pricePerShare": {
                "value": "1.00"
              },
              "cashPaid": {
                "value": "100"
              },
              "accelerationTermsName": "double-trigger",
              "accelerationTerms": "double-trigger description",
              "stakeholder": {
                "name": "John Smith",
                "email": "john.smith@example.com",
                "relationship": "EXECUTIVE",
                "type": "INDIVIDUAL"
              },
              "stockPurchaseAgreementFileId": "945a53ed-c628-46d2-85d2-19bdc3633020"
            }
          ]
        },
        "properties": {
          "prefix": {
            "type": "string",
            "description": "The share class prefix for certificate numbers in certificated shares (e.g., CS in CS-1).",
            "maxLength": 2,
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "The name of the share class (e.g., Class A Common).",
            "maxLength": 1000,
            "minLength": 1
          },
          "type": {
            "$ref": "#/components/schemas/v1alpha1DraftIssuerShareClassType",
            "description": "The type of the share class."
          },
          "parValue": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The par value of the share class."
          },
          "seniority": {
            "type": "integer",
            "format": "int64",
            "description": "The seniority of the share class."
          },
          "authorizedShares": {
            "type": "integer",
            "format": "int64",
            "description": "The number of authorized shares for this share class."
          },
          "authorizedDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "description": "The date when the shares were authorized for this share class."
          },
          "certificates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1DraftIssuerCertificate"
            },
            "description": "The certificate (i.e., certificated shares) that belong to this share class."
          }
        },
        "description": "A draft issuer share class.",
        "required": [
          "prefix",
          "name",
          "type",
          "seniority",
          "authorizedShares",
          "certificates"
        ]
      },
      "v1alpha1DraftIssuerShareClassType": {
        "type": "string",
        "enum": [
          "DRAFT_ISSUER_SHARE_CLASS_TYPE_UNSPECIFIED",
          "COMMON",
          "PREFERRED"
        ],
        "default": "DRAFT_ISSUER_SHARE_CLASS_TYPE_UNSPECIFIED",
        "description": "- DRAFT_ISSUER_SHARE_CLASS_TYPE_UNSPECIFIED: Conventional default for enums. Do not use this.\n - COMMON: Common share class\n - PREFERRED: Preferred share class",
        "title": "The type of share class that is going to be created for this stakeholder"
      },
      "v1alpha1DraftIssuerStakeholder": {
        "type": "object",
        "example": {
          "name": "John Smith",
          "email": "john.smith@example.com",
          "relationship": "EXECUTIVE",
          "type": "INDIVIDUAL",
          "stockPurchaseAgreementFileId": "58312aed-1186-4a1b-bc8d-d472d2e3c6dd"
        },
        "properties": {
          "name": {
            "type": "string",
            "description": "The full name of the stakeholder.",
            "maxLength": 1000,
            "minLength": 1
          },
          "email": {
            "type": "string",
            "description": "The email address of the stakeholder.",
            "maxLength": 1000,
            "minLength": 1
          },
          "relationship": {
            "$ref": "#/components/schemas/v1alpha1DraftIssuerStakeholderRelationship",
            "description": "The relationship of the stakeholder with the issuer."
          },
          "type": {
            "$ref": "#/components/schemas/v1alpha1DraftIssuerStakeholderType",
            "description": "The type of stakeholder."
          }
        },
        "description": "Details about a stakeholder.",
        "required": [
          "name",
          "email",
          "relationship",
          "type"
        ]
      },
      "v1alpha1DraftIssuerStakeholderRelationship": {
        "type": "string",
        "enum": [
          "DRAFT_ISSUER_STAKEHOLDER_RELATIONSHIP_UNSPECIFIED",
          "ADVISOR",
          "EX_ADVISOR",
          "BOARD_MEMBER",
          "CONSULTANT",
          "EX_CONSULTANT",
          "EMPLOYEE",
          "EX_EMPLOYEE",
          "EXECUTIVE",
          "FOUNDER",
          "INTERNATIONAL_EMPLOYEE",
          "INVESTOR",
          "OFFICER",
          "OTHER"
        ],
        "default": "DRAFT_ISSUER_STAKEHOLDER_RELATIONSHIP_UNSPECIFIED",
        "description": "The relationship of the stakeholder with the draft issuer.\n\n - DRAFT_ISSUER_STAKEHOLDER_RELATIONSHIP_UNSPECIFIED: Conventional default for enums. Do not use this.\n - ADVISOR: Stakeholder is an advisor\n - EX_ADVISOR: Stakeholder is an ex-advisor\n - BOARD_MEMBER: Stakeholder is a board member\n - CONSULTANT: Stakeholder is a consultant\n - EX_CONSULTANT: Stakeholder is an ex-consultant\n - EMPLOYEE: Stakeholder is an employee\n - EX_EMPLOYEE: Stakeholder is an ex-employee\n - EXECUTIVE: Stakeholder is an executive\n - FOUNDER: Stakeholder is a founder\n - INTERNATIONAL_EMPLOYEE: Stakeholder is an international employee\n - INVESTOR: Stakeholder is an investor\n - OFFICER: Stakeholder is an officer\n - OTHER: Stakeholder has some other type of relationship"
      },
      "v1alpha1DraftIssuerStakeholderType": {
        "type": "string",
        "enum": [
          "DRAFT_ISSUER_STAKEHOLDER_TYPE_UNSPECIFIED",
          "INDIVIDUAL",
          "INSTITUTIONAL"
        ],
        "default": "DRAFT_ISSUER_STAKEHOLDER_TYPE_UNSPECIFIED",
        "description": "- DRAFT_ISSUER_STAKEHOLDER_TYPE_UNSPECIFIED: Conventional default for enums. Do not use this.\n - INDIVIDUAL: An individual stakeholder\n - INSTITUTIONAL: An institutional stakeholder (i.e., an organization)",
        "title": "The stakeholder type"
      },
      "v1alpha1DraftIssuerState": {
        "type": "string",
        "enum": [
          "DRAFT_ISSUER_STATE_UNSPECIFIED",
          "ACTIVE",
          "TRANSITIONED_TO_ISSUER"
        ],
        "default": "DRAFT_ISSUER_STATE_UNSPECIFIED",
        "description": "The draft issuer operational state.\n\n - DRAFT_ISSUER_STATE_UNSPECIFIED: Conventional default for enums. Do not use this.\n - ACTIVE: The draft issuer is still in draft mode.\nThis indicates that it should be managed through the `draftIssuers` API.\n - TRANSITIONED_TO_ISSUER: The draft issuer is no longer in draft mode and has transitioned to an issuer.\nThis indicates that it should be managed through the `issuers` API."
      },
      "v1alpha1DraftIssuerVestingFrequency": {
        "type": "string",
        "enum": [
          "DRAFT_ISSUER_VESTING_FREQUENCY_UNSPECIFIED",
          "DAILY",
          "WEEKLY",
          "MONTHLY",
          "QUARTERLY",
          "SEMI_ANNUALLY",
          "ANNUALLY"
        ],
        "default": "DRAFT_ISSUER_VESTING_FREQUENCY_UNSPECIFIED",
        "description": "Vesting frequency.\n\n - DRAFT_ISSUER_VESTING_FREQUENCY_UNSPECIFIED: Conventional default for enums. Do not use this.\n - DAILY: Vesting occurs daily\n - WEEKLY: Vesting occurs weekly\n - MONTHLY: Vesting occurs monthly\n - QUARTERLY: Vesting occurs quarterly\n - SEMI_ANNUALLY: Vesting occurs semi-annually\n - ANNUALLY: Vesting occurs annually"
      },
      "v1alpha1DraftIssuerVestingOnDay": {
        "type": "string",
        "enum": [
          "DRAFT_ISSUER_VESTING_ON_DAY_UNSPECIFIED",
          "SAME",
          "MINUS_ONE",
          "FIRST",
          "LAST"
        ],
        "default": "DRAFT_ISSUER_VESTING_ON_DAY_UNSPECIFIED",
        "description": "The day of the month on which vesting occurs.\n\n - DRAFT_ISSUER_VESTING_ON_DAY_UNSPECIFIED: Conventional default for enums. Do not use this.\n - SAME: Vesting occurs on the same day as the start date\n - MINUS_ONE: Vesting occurs on the day before the start date\n - FIRST: Vesting occurs on the first day of the month\n - LAST: Vesting occurs on the last day of the month"
      },
      "v1alpha1DraftIssuerVestingSchedule": {
        "type": "object",
        "example": {
          "name": "2019 Vesting Schedule",
          "length": 24,
          "terms": "double-trigger",
          "vesting": {
            "frequency": "DAILY",
            "onDay": "SAME"
          },
          "cliff": {
            "cliffPercentage": {
              "value": "0.1"
            },
            "cliffValue": {
              "value": "12"
            },
            "cliffDuration": "ONE_YEAR"
          }
        },
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the vesting schedule.",
            "maxLength": 1000,
            "minLength": 1
          },
          "length": {
            "type": "integer",
            "format": "int64",
            "description": "The length of the vesting schedule in months."
          },
          "terms": {
            "type": "string",
            "description": "The vesting schedule terms.",
            "maxLength": 1000
          },
          "vesting": {
            "$ref": "#/components/schemas/v1alpha1DraftIssuerVestingScheduleDetails",
            "description": "The vesting schedule details."
          },
          "cliff": {
            "$ref": "#/components/schemas/v1alpha1DraftIssuerVestingScheduleCliff",
            "description": "The vesting schedule cliff."
          }
        },
        "description": "The certificate's vesting schedule.",
        "required": [
          "name",
          "length",
          "vesting"
        ]
      },
      "v1alpha1DraftIssuerVestingScheduleCliff": {
        "type": "object",
        "example": {
          "cliffPercentage": {
            "value": "0.1"
          },
          "cliffValue": {
            "value": "12"
          },
          "cliffDuration": "ONE_YEAR"
        },
        "properties": {
          "cliffPercentage": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The percentage of the security which vests at the cliff (e.g., a value of 25 represents 25%)."
          },
          "cliffValue": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "Specifies the length of time until the vesting schedule cliff. Combine `cliffValue` and `cliffDuration` to calculate the vesting schedule cliff. E.g., if `cliffValue` is `1` and `cliffDuration` is `YEARS`, then the vesting schedule cliff is one year."
          },
          "cliffDuration": {
            "$ref": "#/components/schemas/v1alpha1DraftIssuerCliffDuration",
            "description": "Specifies the unit of time until the vesting schedule cliff. Combine `cliffValue` and `cliffDuration` to calculate the vesting schedule cliff. E.g., if `cliffValue` is `1` and `cliffDuration` is `YEARS`, then the vesting schedule cliff is one year."
          }
        },
        "description": "The vesting schedule cliff.",
        "required": [
          "cliffPercentage",
          "cliffValue",
          "cliffDuration"
        ]
      },
      "v1alpha1DraftIssuerVestingScheduleDetails": {
        "type": "object",
        "example": {
          "frequency": "DAILY",
          "onDay": "SAME"
        },
        "properties": {
          "frequency": {
            "$ref": "#/components/schemas/v1alpha1DraftIssuerVestingFrequency",
            "description": "The frequency of the vesting schedule."
          },
          "onDay": {
            "$ref": "#/components/schemas/v1alpha1DraftIssuerVestingOnDay",
            "description": "The day on which the vesting schedule starts."
          }
        },
        "description": "Contains information about the certificate's vesting schedule.",
        "required": [
          "frequency",
          "onDay"
        ]
      },
      "v1alpha1DraftOptionGrant": {
        "type": "object",
        "example": {
          "id": "6eeb0b6f-84c4-4071-8d94-9f0cefd59230",
          "draftOptionGrantSetId": "6431d9c0-cba4-4134-8f1a-647d3d14e241",
          "issuerId": "0791d98d-8d65-43ac-9571-749070054821",
          "state": "DRAFT_SECURITY_STATE_DRAFTING",
          "stockOptionType": "STOCK_OPTION_TYPE_ISO",
          "grantReason": "GRANT_REASON_NEW_HIRE",
          "quantity": {
            "value": "1000.0"
          },
          "earlyExercise": false,
          "exercisePrice": {
            "currency_code": "USD",
            "amount": {
              "value": "100.0"
            }
          },
          "stakeholder": {
            "name": "Jane Doe",
            "email": "jane.doe@example.com",
            "employeeId": "adsfc123",
            "type": "STAKEHOLDER_TYPE_INDIVIDUAL",
            "relationship": "STAKEHOLDER_RELATIONSHIP_EMPLOYEE"
          },
          "compliance": {
            "countryOfResidency": {
              "value": "USA"
            },
            "stateOfResidency": {
              "value": "US-CA"
            }
          },
          "notes": "Additional note about drafting",
          "createTime": {
            "value": "2024-02-29T18:18:00Z"
          },
          "updateTime": {
            "value": "2024-02-29T18:18:00Z"
          },
          "vesting": {
            "templateId": "6eeb0b6f-84c4-4071-8d94-9f0cefd59230",
            "startDate": {
              "year": 2024,
              "month": 2,
              "day": 29
            },
            "acceleration": {
              "name": "Acceleration name",
              "terms": "Accel Terms"
            }
          },
          "customLabel": "ABC-123",
          "grantDate": {
            "year": 2024,
            "month": 2,
            "day": 29
          },
          "boardApprovalDate": {
            "year": 2024,
            "month": 2,
            "day": 29
          },
          "boardApproval": "BOARD_APPROVAL_APPROVED",
          "expirationDate": {
            "year": 2034,
            "month": 2,
            "day": 29
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Output only. The unique identifier of the draft option grant.",
            "title": "Output only. The unique identifier of the draft option grant",
            "readOnly": true
          },
          "draftOptionGrantSetId": {
            "type": "string",
            "description": "Output only. The unique identifier of the draft option grant set.",
            "title": "Output only. The unique identifier of the draft option grant set",
            "readOnly": true
          },
          "issuerId": {
            "type": "string",
            "description": "Output only. The unique identifier of the issuer.",
            "title": "Output only. The unique identifier of the issuer",
            "readOnly": true
          },
          "optionGrantId": {
            "type": "string",
            "description": "Output only. The unique identifier of the option grant that is originated by this draft once it is issued.",
            "title": "Output only. The unique identifier of the option grant that is originated by this draft once it is issued",
            "readOnly": true
          },
          "state": {
            "$ref": "#/components/schemas/v1alpha1DraftSecurityState",
            "description": "Output only. The state of the draft option grant. Certain states are read-only and the draft option grant cannot be modified in those states.",
            "readOnly": true
          },
          "stockOptionType": {
            "$ref": "#/components/schemas/issuersdraftsecuritiesv1alpha1StockOptionType",
            "description": "The type of the option grant.",
            "title": "The type of the option grant"
          },
          "grantReason": {
            "$ref": "#/components/schemas/v1alpha1GrantReason",
            "description": "The reason for granting the option."
          },
          "quantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The quantity of shares awarded in the option grant."
          },
          "earlyExercise": {
            "type": "boolean",
            "description": "Whether the option grant allows for early exercise."
          },
          "exercisePrice": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The exercise price of the option grant."
          },
          "stakeholder": {
            "$ref": "#/components/schemas/issuersdraftsecuritiesv1alpha1Stakeholder",
            "description": "The stakeholder to whom this security will be issued."
          },
          "compliance": {
            "$ref": "#/components/schemas/v1alpha1Compliance",
            "description": "The compliance details of the stakeholder."
          },
          "vesting": {
            "$ref": "#/components/schemas/v1alpha1Vesting",
            "description": "The vesting details of the option grant.",
            "title": "The vesting details of the option grant"
          },
          "notes": {
            "type": "string",
            "description": "Additional notes about the option grant.",
            "title": "Additional notes about the option grant",
            "maxLength": 1000
          },
          "createTime": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDateTime",
            "description": "Output only. The timestamp when the option grant was created.",
            "readOnly": true
          },
          "updateTime": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDateTime",
            "description": "Output only. The timestamp when the option grant was last updated.",
            "readOnly": true
          },
          "customLabel": {
            "type": "string",
            "description": "A custom identifier for the draft option grant.",
            "maxLength": 32
          },
          "boardApproval": {
            "$ref": "#/components/schemas/v1alpha1BoardApproval",
            "description": "The board approval status for the draft option grant."
          },
          "boardApprovalDate": {
            "$ref": "#/components/schemas/v1alpha1Date",
            "description": "The board approval date for the draft option grant. Only provide if the board_approval status is approved."
          },
          "grantDate": {
            "$ref": "#/components/schemas/v1alpha1Date",
            "description": "The grant date for the draft option grant."
          },
          "expirationDate": {
            "$ref": "#/components/schemas/v1alpha1Date",
            "description": "The expiration date for the draft option grant."
          },
          "exercisePeriods": {
            "$ref": "#/components/schemas/v1alpha1ExercisePeriods",
            "description": "The exercise periods for the draft option grant."
          },
          "documents": {
            "$ref": "#/components/schemas/v1alpha1OptionGrantDocuments",
            "description": "Optional documents that are relevant to a draft option grant."
          }
        },
        "description": "A draft option grant is an object that is the precursor of an option grant before it is approved, signed, and issued.\n\nThe \"draft\" prefix is used to differentiate it from the final option grant object."
      },
      "v1alpha1DraftSecurityState": {
        "type": "string",
        "enum": [
          "DRAFT_SECURITY_STATE_UNSPECIFIED",
          "DRAFT_SECURITY_STATE_DRAFTING",
          "DRAFT_SECURITY_STATE_PENDING_BOARD_APPROVAL",
          "DRAFT_SECURITY_STATE_ISSUED"
        ],
        "default": "DRAFT_SECURITY_STATE_UNSPECIFIED",
        "description": "The state of a draft security that describes the lifecycle stage of the draft security and determines the actions that can be performed on it.\n\n - DRAFT_SECURITY_STATE_UNSPECIFIED: Denotes the absence of a value\n - DRAFT_SECURITY_STATE_DRAFTING: The draft security has been created and is in an editable state\n - DRAFT_SECURITY_STATE_PENDING_BOARD_APPROVAL: The draft has been submitted for board approval and is in a read-only state\n - DRAFT_SECURITY_STATE_ISSUED: The draft has been sent to signatories to be signed and issued and is in a read-only state"
      },
      "v1alpha1ExercisePeriod": {
        "type": "string",
        "enum": [
          "EXERCISE_PERIOD_UNSPECIFIED",
          "EXERCISE_PERIOD_DAY",
          "EXERCISE_PERIOD_MONTH",
          "EXERCISE_PERIOD_YEAR"
        ],
        "default": "EXERCISE_PERIOD_UNSPECIFIED",
        "description": "- EXERCISE_PERIOD_UNSPECIFIED: Denotes the absence of a value\n - EXERCISE_PERIOD_DAY: The exercise period will be expressed in days\n - EXERCISE_PERIOD_MONTH: The exercise period will be expressed in months\n - EXERCISE_PERIOD_YEAR: The exercise period will be expressed in years"
      },
      "v1alpha1ExercisePeriods": {
        "type": "object",
        "example": {
          "voluntaryTerminationCount": "1",
          "voluntaryTerminationPeriod": "PTEP_PERIOD_YEAR",
          "involuntaryTerminationCauseCount": "3",
          "involuntaryTerminationCausePeriod": "PTEP_PERIOD_MONTH",
          "involuntaryTerminationCount": "5",
          "involuntaryTerminationPeriod": "PTEP_PERIOD_DAY",
          "deathExerciseCount": "7",
          "deathExercisePeriod": "PTEP_PERIOD_YEAR",
          "disabilityExerciseCount": "9",
          "disabilityExercisePeriod": "PTEP_PERIOD_MONTH",
          "retirementExerciseCount": "11",
          "retirementExercisePeriod": "PTEP_PERIOD_DAY"
        },
        "properties": {
          "voluntaryTerminationCount": {
            "type": "integer",
            "format": "int32",
            "description": "The quantity of \"periods\" (days, months or years) after voluntary termination that the stakeholder has to exercise their options."
          },
          "voluntaryTerminationPeriod": {
            "$ref": "#/components/schemas/v1alpha1ExercisePeriod",
            "description": "The unit of time for the voluntary termination period."
          },
          "involuntaryTerminationCauseCount": {
            "type": "integer",
            "format": "int32",
            "description": "The quantity of \"periods\" (days, months or years) after involuntary termination that the stakeholder has to exercise their options."
          },
          "involuntaryTerminationCausePeriod": {
            "$ref": "#/components/schemas/v1alpha1ExercisePeriod",
            "description": "The unit of time for the involuntary termination cause period."
          },
          "involuntaryTerminationCount": {
            "type": "integer",
            "format": "int32",
            "description": "The quantity of \"periods\" (days, months or years) after involuntary termination that the stakeholder has to exercise their options."
          },
          "involuntaryTerminationPeriod": {
            "$ref": "#/components/schemas/v1alpha1ExercisePeriod",
            "description": "The unit of time for the involuntary termination period."
          },
          "deathExerciseCount": {
            "type": "integer",
            "format": "int32",
            "description": "The quantity of \"periods\" (days, months or years) after death that the stakeholder has to exercise their options."
          },
          "deathExercisePeriod": {
            "$ref": "#/components/schemas/v1alpha1ExercisePeriod",
            "description": "The unit of time for the death exercise period."
          },
          "disabilityExerciseCount": {
            "type": "integer",
            "format": "int32",
            "description": "The quantity of \"periods\" (days, months or years) after disability that the stakeholder has to exercise their options."
          },
          "disabilityExercisePeriod": {
            "$ref": "#/components/schemas/v1alpha1ExercisePeriod",
            "description": "The unit of time for the disability exercise period."
          },
          "retirementExerciseCount": {
            "type": "integer",
            "format": "int32",
            "description": "The quantity of \"periods\" (days, months or years) after retirement that the stakeholder has to exercise their options."
          },
          "retirementExercisePeriod": {
            "$ref": "#/components/schemas/v1alpha1ExercisePeriod",
            "description": "The unit of time for the retirement exercise period."
          }
        },
        "description": "Exercise periods for the draft option grant. If unset, values will be inherited from the equity plan"
      },
      "v1alpha1File": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "e3b8b6e0-9a9b-4b3a-8b0a-5b2b8a5b2b8a",
            "description": "The identifier of the file",
            "readOnly": true,
            "maxLength": 50
          },
          "filePayload": {
            "type": "string",
            "format": "byte",
            "description": "Raw binary representation of a file. The size of the binary payload is limited to 3.5 MiB.\n\nSee <a href=\"https://docs.carta.com/carta/docs/uploading-files\">this guide</a> for more information about uploading files.",
            "maxLength": 3670016,
            "minLength": 1
          },
          "uploadDetails": {
            "$ref": "#/components/schemas/v1alpha1FileUploadDetails",
            "description": "Details about the file upload"
          }
        }
      },
      "v1alpha1FileUploadDetails": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "my_file.pdf",
            "description": "The name of the file; limited to 250 characters",
            "title": "The name of the file; limited to 250 characters",
            "maxLength": 1024
          },
          "description": {
            "type": "string",
            "example": "This is an example file description.",
            "description": "A description of the file; limited to 500 characters",
            "title": "A description of the file; limited to 500 characters",
            "maxLength": 1024
          },
          "tags": {
            "type": "array",
            "example": [
              "production",
              "2023",
              "pdf"
            ],
            "items": {
              "type": "string",
              "maxLength": 1024
            },
            "description": "A list of tags to associate with the file."
          }
        }
      },
      "v1alpha1Firm": {
        "type": "object",
        "example": {
          "id": "7af7123a-2ee9-4e31-a173-54b8f9159426",
          "name": "Krakatoa Ventures"
        },
        "properties": {
          "id": {
            "type": "string",
            "example": "7af7123a-2ee9-4e31-a173-54b8f9159426",
            "description": "The identifier of the investment firm.",
            "maxLength": 50
          },
          "name": {
            "type": "string",
            "example": "Krakatoa Ventures",
            "description": "The name of the investment firm.",
            "maxLength": 1000
          }
        },
        "description": "A firm."
      },
      "v1alpha1Fund": {
        "type": "object",
        "example": {
          "firm_id": "7af7123a-2ee9-4e31-a173-54b8f9159426",
          "id": "09051fa3-fe71-4613-9bfb-e5bfa396cfea",
          "name": "Krakatoa Ventures Fund I, L.P."
        },
        "properties": {
          "firmId": {
            "type": "string",
            "example": "7af7123a-2ee9-4e31-a173-54b8f9159426",
            "description": "The identifier of the firm this fund belongs to.",
            "maxLength": 50
          },
          "id": {
            "type": "string",
            "example": "09051fa3-fe71-4613-9bfb-e5bfa396cfea",
            "description": "The identifier of the fund.",
            "maxLength": 50
          },
          "name": {
            "type": "string",
            "example": "Krakatoa Ventures Fund I, L.P.",
            "description": "The name of the fund.",
            "maxLength": 1000
          }
        },
        "description": "A fund belonging to a firm."
      },
      "v1alpha1FundInvestmentDocument": {
        "type": "object",
        "example": {
          "documentId": "J8X32hD6yttzNJULdzeugV",
          "fundId": "09051fa3-fe71-4613-9bfb-e5bfa396cfea",
          "firmId": "7af7123a-2ee9-4e31-a173-54b8f9159426",
          "documentName": "Capital Call Notice",
          "fundName": "Krakatoa Ventures Fund I, L.P.",
          "firmName": "Krakatoa Ventures",
          "effectiveDate": {
            "value": "2023-06-01"
          },
          "sharedDate": {
            "value": "2023-06-02"
          }
        },
        "properties": {
          "documentId": {
            "type": "string",
            "example": "J8X32hD6yttzNJULdzeugV",
            "description": "The identifier of the document.",
            "maxLength": 50,
            "minLength": 1
          },
          "fundId": {
            "type": "string",
            "example": "09051fa3-fe71-4613-9bfb-e5bfa396cfea",
            "description": "The identifier of the fund that issued the document.",
            "maxLength": 50,
            "minLength": 1
          },
          "firmId": {
            "type": "string",
            "example": "7af7123a-2ee9-4e31-a173-54b8f9159426",
            "description": "The identifier of the firm managing the fund.",
            "maxLength": 50,
            "minLength": 1
          },
          "documentName": {
            "type": "string",
            "example": "Capital Call Notice",
            "description": "The name of the document.",
            "minLength": 1
          },
          "fundName": {
            "type": "string",
            "example": "Krakatoa Ventures Fund I, L.P.",
            "description": "The name of the fund.",
            "minLength": 1
          },
          "firmName": {
            "type": "string",
            "example": "Krakatoa Ventures",
            "description": "The name of the firm managing the fund.",
            "minLength": 1
          },
          "effectiveDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "example": {
              "value": "2024-01-01"
            },
            "description": "The effective date of the document."
          },
          "sharedDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDate",
            "example": {
              "value": "2024-01-02"
            },
            "description": "The date the document was shared."
          }
        },
        "description": "A document shared with limited partners to provide information about a fund investment held within a portfolio.",
        "required": [
          "documentId",
          "fundId",
          "firmId",
          "documentName",
          "fundName",
          "firmName",
          "effectiveDate",
          "sharedDate"
        ]
      },
      "v1alpha1GetCompensationBenchmarkAttributesResponse": {
        "type": "object",
        "example": {
          "benchmarks_metadata": {
            "benchmarks_version_datetime": {
              "value": "2024-01-01T09:00:00.000000Z"
            }
          },
          "compensation_types": [
            "SALARY",
            "EQUITY_AS_FULLY_DILUTED_PERCENT"
          ],
          "industries": [
            "All"
          ],
          "percentiles": [
            "P25",
            "P50",
            "P75"
          ],
          "post_money_valuation_buckets": [
            "10M to 25M",
            "50M to 100M"
          ],
          "geo_adjustment_location": [
            "Dallas-Fort Worth-Arlington, TX",
            "New York-Newark-Jersey City, NY-NJ-PA",
            "San Francisco-Oakland-Hayward, CA"
          ],
          "jobs": [
            {
              "job_area": "Engineering",
              "job_specialization": "Web Engineer",
              "job_levels": [
                "IC 2",
                "IC 3",
                "MGR 4",
                "MGR 5",
                "EX 10",
                "EX 11"
              ]
            }
          ]
        },
        "properties": {
          "benchmarksMetadata": {
            "$ref": "#/components/schemas/v1alpha1BenchmarksMetadata",
            "example": {
              "benchmarks_version_datetime": "2024-01-01T09:00:00.000000Z"
            },
            "description": "Context on the benchmark version of the benchmarks being returned. May differ by corporation."
          },
          "compensationTypes": {
            "type": "array",
            "example": [
              "SALARY"
            ],
            "items": {
              "type": "string"
            },
            "description": "The compensation types that the benchmarks can be segmented by."
          },
          "industries": {
            "type": "array",
            "example": [
              "All"
            ],
            "items": {
              "type": "string"
            },
            "description": "The industries supported by the benchmarks."
          },
          "percentiles": {
            "type": "array",
            "example": [
              "P25"
            ],
            "items": {
              "type": "string"
            },
            "description": "The percentiles supported by the benchmarks."
          },
          "postMoneyValuationBuckets": {
            "type": "array",
            "example": [
              "100M to 250M"
            ],
            "items": {
              "type": "string"
            },
            "description": "The peer groups that the benchmarks are segmented by."
          },
          "geoAdjustmentLocations": {
            "type": "array",
            "example": [
              "New York-Newark-Jersey City, NY-NJ-PA"
            ],
            "items": {
              "type": "string"
            },
            "description": "The locations the benchmarks can be geo-adjusted by."
          },
          "jobs": {
            "type": "array",
            "example": [
              {
                "job_area": "Engineering",
                "job_specialization": "Web Engineer",
                "job_levels": [
                  "IC 2",
                  "IC 3",
                  "MGR 4",
                  "MGR 5",
                  "EX 10",
                  "EX 11"
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/v1alpha1BenchmarkJob"
            },
            "description": "The jobs that the benchmarks can be segmented by."
          }
        },
        "description": "The response for the `GetCompensationBenchmarkAttributes` endpoint.",
        "required": [
          "benchmarksMetadata",
          "compensationTypes",
          "industries",
          "percentiles",
          "postMoneyValuationBuckets",
          "geoAdjustmentLocations",
          "jobs"
        ]
      },
      "v1alpha1GetCompensationBenchmarksResponse": {
        "type": "object",
        "example": {
          "access": {
            "access_level": "FULL_ACCESS",
            "access_reason": ""
          },
          "benchmarks_metadata": {
            "benchmarks_version_datetime": {
              "value": "2024-01-01T09:00:00.000000Z"
            }
          },
          "benchmarks": [
            {
              "post_money_valuation_bucket": "100M to 250M",
              "industry": "All",
              "geo_adjustment_location": "New York-Newark-Jersey City, NY-NJ-PA",
              "job_area": "Engineering",
              "job_specialization": "Web Engineer",
              "job_level": "IC 3",
              "benchmark_values": [
                {
                  "compensation_type": "SALARY",
                  "percentile": "P25",
                  "benchmark": {
                    "value": "100000"
                  }
                },
                {
                  "compensation_type": "SALARY",
                  "percentile": "P50",
                  "benchmark": {
                    "value": "110000"
                  }
                },
                {
                  "compensation_type": "SALARY",
                  "percentile": "P75",
                  "benchmark": {
                    "value": "120000"
                  }
                },
                {
                  "compensation_type": "SALARY",
                  "percentile": "P90",
                  "benchmark": {
                    "value": "130000"
                  }
                }
              ]
            }
          ]
        },
        "properties": {
          "access": {
            "$ref": "#/components/schemas/v1alpha1Access",
            "example": {
              "access": {
                "access_level": "FULL_ACCESS",
                "access_reason": ""
              }
            },
            "description": "Context about the access of a given corporation."
          },
          "benchmarksMetadata": {
            "$ref": "#/components/schemas/v1alpha1BenchmarksMetadata",
            "example": {
              "benchmarks_metadata": {
                "benchmarks_version_datetime": "2024-01-01T09:00:00.000000Z"
              }
            },
            "description": "Context on the benchmark version of the benchmarks being returned. May differ by corporation."
          },
          "benchmarks": {
            "type": "array",
            "example": {
              "benchmarks": [
                {
                  "post_money_valuation_bucket": "100M to 250M",
                  "industry": "All",
                  "geo_adjustment_location": "New York-Newark-Jersey City, NY-NJ-PA",
                  "job_area": "Engineering",
                  "job_specialization": "Web Engineer",
                  "job_level": "IC 3",
                  "benchmark_values": [
                    {
                      "compensation_type": "SALARY",
                      "percentile": "P25",
                      "benchmark": {
                        "value": "100000"
                      }
                    },
                    {
                      "compensation_type": "SALARY",
                      "percentile": "P50",
                      "benchmark": {
                        "value": "110000"
                      }
                    },
                    {
                      "compensation_type": "SALARY",
                      "percentile": "P75",
                      "benchmark": {
                        "value": "120000"
                      }
                    },
                    {
                      "compensation_type": "SALARY",
                      "percentile": "P90",
                      "benchmark": {
                        "value": "130000"
                      }
                    }
                  ]
                }
              ]
            },
            "items": {
              "$ref": "#/components/schemas/v1alpha1Benchmarks"
            },
            "description": "The compensation benchmarks.",
            "maxItems": 50
          },
          "nextPageToken": {
            "type": "string",
            "example": "NDY=",
            "description": "Submit the `nextPageToken` string as `pageToken` in a subsequent request to retrieve the next page.\n\nIf the Get Compensation Benchmarks response omits `nextPageToken`, then there are no subsequent pages."
          }
        },
        "description": "The response for the GetCompensationBenchmarks endpoint.",
        "required": [
          "access",
          "benchmarksMetadata"
        ]
      },
      "v1alpha1GetCurrentUserResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/v1alpha1User",
            "title": "The requested user"
          }
        },
        "description": "The response for the GetCurrentUser endpoint."
      },
      "v1alpha1GetDraftIssuerResponse": {
        "type": "object",
        "properties": {
          "draftIssuer": {
            "$ref": "#/components/schemas/v1alpha1DraftIssuer",
            "title": "The Draft Issuer data"
          }
        },
        "description": "The response for the GetDraftIssuer endpoint."
      },
      "v1alpha1GetDraftOptionGrantResponse": {
        "type": "object",
        "properties": {
          "draftOptionGrant": {
            "$ref": "#/components/schemas/v1alpha1DraftOptionGrant",
            "description": "The requested draft option grant"
          }
        },
        "description": "The response for the GetDraftOptionGrant endpoint."
      },
      "v1alpha1GetFairMarketValueResponse": {
        "type": "object",
        "properties": {
          "fairMarketValue": {
            "$ref": "#/components/schemas/shareholderportfoliov1alpha1FairMarketValue",
            "description": "The current fair market value of the issuer."
          }
        },
        "description": "The response from the Get Fair Market Value endpoint."
      },
      "v1alpha1GetIssuerResponse": {
        "type": "object",
        "properties": {
          "issuer": {
            "$ref": "#/components/schemas/publicapiissuersv1alpha1Issuer",
            "title": "The requested issuer"
          }
        },
        "description": "The response for the GetIssuer endpoint."
      },
      "v1alpha1GetOpenCapTableResponse": {
        "type": "object",
        "example": {
          "openCapTable": {
            "id": "39e581eb-7312-4acc-b239-5536fa978df5",
            "state": "PROCESSING",
            "createTime": {
              "value": "2022-10-28T16:00:00Z"
            },
            "completeTime": null,
            "details": [
              {
                "id": "39e581eb-7312-4acc-b239-5536fa978df6",
                "createTime": {
                  "value": "2022-10-28T17:00:00Z"
                },
                "metadata": {
                  "details": "OCF upload started"
                }
              }
            ]
          }
        },
        "properties": {
          "openCapTable": {
            "$ref": "#/components/schemas/v1alpha1OpenCapTable",
            "description": "The open cap table data."
          }
        },
        "description": "The request for the GetOpenCapTable endpoint."
      },
      "v1alpha1GetPortfolioResponse": {
        "type": "object",
        "properties": {
          "portfolio": {
            "$ref": "#/components/schemas/v1alpha1Portfolio",
            "description": "Information about the portfolio."
          }
        },
        "description": "The response from the Get Portfolio endpoint."
      },
      "v1alpha1GetStakeholderResponse": {
        "type": "object",
        "properties": {
          "stakeholder": {
            "$ref": "#/components/schemas/publicapiissuersv1alpha1Stakeholder",
            "description": "The requested stakeholder from the specified issuer."
          }
        },
        "description": "The response from the Get Stakeholder endpoint."
      },
      "v1alpha1GrantReason": {
        "type": "string",
        "enum": [
          "GRANT_REASON_UNSPECIFIED",
          "GRANT_REASON_NEW_HIRE",
          "GRANT_REASON_MERIT",
          "GRANT_REASON_PROMOTION",
          "GRANT_REASON_REFRESH",
          "GRANT_REASON_CORPORATE_TRANSACTION",
          "GRANT_REASON_RELATIONSHIP_CHANGE",
          "GRANT_REASON_RETENTION",
          "GRANT_REASON_ADVISOR",
          "GRANT_REASON_CONSULTANT",
          "GRANT_REASON_BOARD"
        ],
        "default": "GRANT_REASON_UNSPECIFIED",
        "description": "- GRANT_REASON_UNSPECIFIED: Denotes the absence of a value\n - GRANT_REASON_NEW_HIRE: New hire\n - GRANT_REASON_MERIT: Merit\n - GRANT_REASON_PROMOTION: Promotion\n - GRANT_REASON_REFRESH: Refresh\n - GRANT_REASON_CORPORATE_TRANSACTION: Corporate transaction\n - GRANT_REASON_RELATIONSHIP_CHANGE: Relationship change\n - GRANT_REASON_RETENTION: Retention\n - GRANT_REASON_ADVISOR: Advisor\n - GRANT_REASON_CONSULTANT: Consultant\n - GRANT_REASON_BOARD: Board",
        "title": "Reason for granting the option"
      },
      "v1alpha1Investment": {
        "type": "object",
        "example": {
          "firmId": "7af7123a-2ee9-4e31-a173-54b8f9159426",
          "fundId": "09051fa3-fe71-4613-9bfb-e5bfa396cfea",
          "companyId": "bc495a05-bd5b-451e-bdfc-88eea3fccfe8",
          "legalName": "MangoCart, Inc.",
          "doingBusinessAsName": "MangoCart",
          "website": "https://example.com",
          "country": "USA",
          "stateOfIncorporation": {
            "value": "US-CA"
          }
        },
        "properties": {
          "firmId": {
            "type": "string",
            "example": "7af7123a-2ee9-4e31-a173-54b8f9159426",
            "description": "The identifier of the firm holding the investment.",
            "maxLength": 50
          },
          "fundId": {
            "type": "string",
            "example": "09051fa3-fe71-4613-9bfb-e5bfa396cfea",
            "description": "The identifier of the fund holding the investment.",
            "maxLength": 50
          },
          "companyId": {
            "type": "string",
            "example": "bc495a05-bd5b-451e-bdfc-88eea3fccfe8",
            "description": "The identifier of the company.",
            "maxLength": 50
          },
          "legalName": {
            "type": "string",
            "example": "MangoCart, Inc.",
            "description": "The legal name of the company.",
            "maxLength": 1000
          },
          "doingBusinessAsName": {
            "type": "string",
            "example": "MangoCart",
            "description": "The 'doing business as' (DBA) name of the company.",
            "maxLength": 1000
          },
          "website": {
            "type": "string",
            "example": "https://example.com",
            "description": "The website for the company",
            "title": "The website for the company",
            "maxLength": 200
          },
          "country": {
            "type": "string",
            "example": "USA",
            "description": "The origin country for the company",
            "title": "The origin country for the company",
            "maxLength": 200
          },
          "stateOfIncorporation": {
            "$ref": "#/components/schemas/v1alpha1Iso3166Set2Code",
            "description": "The state in USA where the company was incorporated\nState, county; specified as an\n[ISO 3166-2 code](https://en.wikipedia.org/wiki/ISO_3166-2)."
          }
        },
        "description": "A company into which a fund has invested."
      },
      "v1alpha1Iso3166Set1Alpha2Code": {
        "type": "object",
        "example": {
          "value": "US"
        },
        "properties": {
          "value": {
            "type": "string",
            "example": "US",
            "maxLength": 2,
            "minLength": 2,
            "pattern": "[A-Z]{2}"
          }
        },
        "description": "Two letter country codes as defined by the [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1-alpha-2) standard."
      },
      "v1alpha1Iso3166Set1Alpha3Code": {
        "type": "object",
        "example": {
          "value": "USA"
        },
        "properties": {
          "value": {
            "type": "string",
            "example": "USA",
            "maxLength": 3,
            "minLength": 3,
            "pattern": "[A-Z]{3}"
          }
        },
        "description": "Three letter country codes as defined by the [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1-alpha-3) standard."
      },
      "v1alpha1Iso3166Set2Code": {
        "type": "object",
        "example": {
          "value": "US-CA"
        },
        "properties": {
          "value": {
            "type": "string",
            "example": "US-CA",
            "maxLength": 6,
            "minLength": 4,
            "pattern": "[A-Z]{2}-[A-Z0-9]{1,3}"
          }
        },
        "description": "Codes identifying the principal subdivisions of countries as defined by the [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) standard."
      },
      "v1alpha1Iso4217CurrencyAlphaCode": {
        "type": "object",
        "example": {
          "value": "USD"
        },
        "properties": {
          "value": {
            "type": "string",
            "maxLength": 3,
            "minLength": 3,
            "pattern": "[A-Z]{3}"
          }
        },
        "description": "A three-letter alphabetic currency code defined by the ISO 4217 standard."
      },
      "v1alpha1Iso8601CompleteCalendarDate": {
        "type": "object",
        "example": {
          "value": "2021-01-01"
        },
        "properties": {
          "value": {
            "type": "string",
            "maxLength": 10,
            "minLength": 10,
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}"
          }
        },
        "description": "A complete calendar date defined as per the ISO 8601 standard."
      },
      "v1alpha1Iso8601CompleteCalendarDateTime": {
        "type": "object",
        "example": {
          "value": "2021-01-01T18:18:00Z"
        },
        "properties": {
          "value": {
            "type": "string",
            "maxLength": 24,
            "minLength": 20,
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(?:\\.[0-9]{1,3})?Z"
          }
        },
        "description": "A complete calendar UTC date and time defined as per the ISO 8601 standard."
      },
      "v1alpha1Jurisdiction": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "example": "San Francisco",
            "description": "The city used to calculate tax withholding.",
            "maxLength": 256
          },
          "countrySubdivision": {
            "$ref": "#/components/schemas/v1alpha1Iso3166Set2Code",
            "description": "The country subdivision used to calculate tax withholding."
          },
          "country": {
            "$ref": "#/components/schemas/v1alpha1Iso3166Set1Alpha3Code",
            "description": "The country used to calculate tax withholding."
          }
        },
        "description": "Jurisdiction used to calculate tax withholding is calculated.\nEither the name of the city, country subdivision, or country used to calculate tax withholding."
      },
      "v1alpha1LiquidityPriority": {
        "type": "string",
        "enum": [
          "LIQUIDITY_PRIORITY_UNSPECIFIED",
          "SENIOR_TO_PREFERRED",
          "EQUAL_TO_HIGHEST_PREFERRED"
        ],
        "default": "LIQUIDITY_PRIORITY_UNSPECIFIED",
        "description": "The liquidity priority.\n\n - LIQUIDITY_PRIORITY_UNSPECIFIED: Denotes the absence of a value\n - SENIOR_TO_PREFERRED: Senior to preferred\n - EQUAL_TO_HIGHEST_PREFERRED: Equal to highest preferred"
      },
      "v1alpha1ListCapitalizationTablesResponse": {
        "type": "object",
        "properties": {
          "capitalizationTables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiinvestorscapitalizationv1alpha1CapitalizationTable"
            },
            "description": "The retrieved capitalization tables."
          },
          "nextPageToken": {
            "type": "string",
            "example": "ODMxMw==",
            "description": "A page token, which can be provided as the value of the `pageToken` query parameter to retrieve the next page. If this field is omitted, there are no subsequent pages."
          }
        },
        "description": "The response from the List Capitalization Tables endpoint."
      },
      "v1alpha1ListCorporationsResponse": {
        "type": "object",
        "properties": {
          "corporations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1Corporation"
            },
            "title": "The retrieved corporations"
          },
          "nextPageToken": {
            "type": "string",
            "example": "ODMxMw==",
            "description": "Submit the `nextPageToken` string as `pageToken` in a subsequent request to retrieve the next page.\n\nIf the List Corporations response omits `nextPageToken`, then there are no subsequent pages."
          }
        },
        "description": "The response for the ListCorporations endpoint."
      },
      "v1alpha1ListFairMarketValuesResponse": {
        "type": "object",
        "properties": {
          "fairMarketValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiissuersv1alpha1FairMarketValue"
            },
            "description": "The fair market values from the specified issuer."
          },
          "nextPageToken": {
            "type": "string",
            "example": "NDY=",
            "description": "Submit the `nextPageToken` string as `pageToken` in a subsequent request to retrieve the next page.\n\nIf the List Fair Market Values response omits `nextPageToken`, then there are no subsequent pages."
          }
        },
        "description": "The response from the List Fair Market Values endpoint."
      },
      "v1alpha1ListFirmsResponse": {
        "type": "object",
        "properties": {
          "firms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1Firm"
            },
            "description": "The firms returned in the List Firms response."
          },
          "nextPageToken": {
            "type": "string",
            "example": "ODMxMw==",
            "description": "Submit the `nextPageToken` string as `pageToken` in a subsequent List Firms request to retrieve the next page. If the List Firms response omits `nextPageToken`, then there are no subsequent pages."
          }
        },
        "description": "The response from the List Firms endpoint."
      },
      "v1alpha1ListFundInvestmentDocumentsResponse": {
        "type": "object",
        "example": {
          "fundInvestmentDocuments": [
            {
              "documentId": "J8X32hD6yttzNJULdzeugV",
              "fundId": "09051fa3-fe71-4613-9bfb-e5bfa396cfea",
              "firmId": "7af7123a-2ee9-4e31-a173-54b8f9159426",
              "documentName": "Capital Call Notice",
              "fundName": "Krakatoa Ventures Fund I, L.P.",
              "firmName": "Krakatoa Ventures",
              "effectiveDate": {
                "value": "2024-01-01"
              },
              "sharedDate": {
                "value": "2024-01-02"
              }
            },
            {
              "documentId": "XHxXSp7VmgW6t1T99sXAjP",
              "fundId": "85d952d3-5076-4e02-8872-ea175ec5f90d",
              "firmId": "7af7123a-2ee9-4e31-a173-54b8f9159426",
              "documentName": "Capital Call Notice",
              "fundName": "Krakatoa Ventures Fund II, L.P.",
              "firmName": "Krakatoa Ventures",
              "effectiveDate": {
                "value": "2023-06-01"
              },
              "sharedDate": {
                "value": "2023-06-02"
              }
            }
          ],
          "nextPageToken": "ODMxMw=="
        },
        "properties": {
          "fundInvestmentDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1FundInvestmentDocument"
            },
            "description": "The fund investment documents for the portfolio.\n\nIf this list is empty, then there are no fund investment documents for the portfolio, the user does not have access\nto any fund investment documents for the portfolio, or the fund investment documents have been filtered out."
          },
          "nextPageToken": {
            "type": "string",
            "example": "ODMxMw==",
            "description": "Submit the `nextPageToken` string as `pageToken` in a subsequent request to retrieve the next page.\n\nIf the List Fund Investment Documents response omits `nextPageToken`, then there are no subsequent pages."
          }
        },
        "description": "The response for the ListFundInvestmentDocuments endpoint."
      },
      "v1alpha1ListFundsResponse": {
        "type": "object",
        "properties": {
          "funds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1Fund"
            },
            "description": "The retrieved funds."
          },
          "nextPageToken": {
            "type": "string",
            "example": "ODMxMw==",
            "description": "Submit the `nextPageToken` string as `pageToken` in a subsequent request to retrieve the next page.\n\nIf the List Funds response omits `nextPageToken`, then there are no subsequent pages."
          }
        },
        "description": "The response from the List Funds endpoint."
      },
      "v1alpha1ListInvestmentsResponse": {
        "type": "object",
        "properties": {
          "investments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1Investment"
            },
            "description": "The retrieved investments."
          },
          "nextPageToken": {
            "type": "string",
            "example": "ODMxMw==",
            "description": "Submit the `nextPageToken` string as `pageToken` in a subsequent request to retrieve the next page.\n\nIf the List Investments response omits `nextPageToken`, then there are no subsequent pages."
          }
        },
        "description": "The response from the List Investments endpoint."
      },
      "v1alpha1ListIssuersResponse": {
        "type": "object",
        "properties": {
          "issuers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiissuersv1alpha1Issuer"
            },
            "title": "The retrieved issuers"
          },
          "nextPageToken": {
            "type": "string",
            "example": "ODMxMw==",
            "description": "Submit the `nextPageToken` string as `pageToken` in a subsequent request to retrieve the next page.\n\nIf the List Issuers response omits `nextPageToken`, then there are no subsequent pages."
          }
        },
        "description": "The response for the ListIssuers endpoint."
      },
      "v1alpha1ListOptionExercisesResponse": {
        "type": "object",
        "properties": {
          "optionExercises": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1OptionExercise"
            },
            "description": "The option exercises from the specified issuer."
          },
          "nextPageToken": {
            "type": "string",
            "example": "Nzg2Mg==",
            "description": "Submit the `nextPageToken` string as `pageToken` in a subsequent request to retrieve the next page.\n\nIf the response omits `nextPageToken`, then there are no subsequent pages."
          }
        },
        "description": "The response for the ListOptionExercises endpoint."
      },
      "v1alpha1ListPointsOfContactResponse": {
        "type": "object",
        "properties": {
          "pointsOfContact": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1PointOfContact"
            },
            "description": "A list of points of contact."
          }
        },
        "description": "The response for the ListPointsOfContact endpoint."
      },
      "v1alpha1ListPortfolioIssuersResponse": {
        "type": "object",
        "properties": {
          "issuers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/shareholderportfoliov1alpha1Issuer"
            },
            "description": "The retrieved issuers."
          },
          "nextPageToken": {
            "type": "string",
            "example": "NDY=",
            "description": "Submit the `nextPageToken` string as `pageToken` in a subsequent request to retrieve the next page.\n\nIf the List Portfolio Issuers response omits `nextPageToken`, then there are no subsequent pages."
          },
          "issuersRedacted": {
            "type": "boolean",
            "example": "true",
            "description": "Indicates if issuers have been filtered out of the response."
          }
        },
        "description": "The response from the List Portfolio Issuers endpoint."
      },
      "v1alpha1ListPortfoliosResponse": {
        "type": "object",
        "properties": {
          "portfolios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1Portfolio"
            },
            "description": "The retrieved portfolios."
          },
          "nextPageToken": {
            "type": "string",
            "example": "ODUwMQ==",
            "description": "Submit the `nextPageToken` string as `pageToken` in a subsequent request to retrieve the next page.\n\nIf the List Portfolios response omits `nextPageToken`, then there are no subsequent pages."
          }
        },
        "description": "The response from the List Portfolios endpoint."
      },
      "v1alpha1ListSecurityTransactionsResponse": {
        "type": "object",
        "properties": {
          "securitytransactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1SecurityTransaction"
            },
            "description": "The retrieved security transactions."
          },
          "nextPageToken": {
            "type": "string",
            "example": "EXERCISE#Mzg3",
            "description": "Submit the URL-encoded `nextPageToken` string as `pageToken` in a subsequent request to retrieve the next page.\n\nIf the List Security Transactions response omits `nextPageToken`, then there are no subsequent pages."
          }
        },
        "description": "The response from the List Security Transactions endpoint."
      },
      "v1alpha1ListShareClassesResponse": {
        "type": "object",
        "properties": {
          "shareClasses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1ShareClass"
            },
            "description": "The vesting schedules from the specified issuer."
          },
          "nextPageToken": {
            "type": "string",
            "example": "NDY=",
            "description": "Submit the `nextPageToken` string as `pageToken` in a subsequent request to retrieve the next page.\n\nIf the List Share Classes response omits `nextPageToken`, then there are no subsequent pages."
          }
        },
        "description": "The response for the ListShareClasses endpoint."
      },
      "v1alpha1ListStakeholdersResponse": {
        "type": "object",
        "properties": {
          "stakeholders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publicapiissuersv1alpha1Stakeholder"
            },
            "description": "The stakeholders from the specified issuer."
          },
          "nextPageToken": {
            "type": "string",
            "example": "ODMxMw==",
            "description": "Submit the `nextPageToken` string as `pageToken` in a subsequent request to retrieve the next page.\n\nIf the List Stakeholders response omits `nextPageToken`, then there are no subsequent pages."
          }
        },
        "description": "The response from the List Stakeholders endpoint."
      },
      "v1alpha1ListVestingScheduleTemplatesResponse": {
        "type": "object",
        "properties": {
          "vestingScheduleTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1VestingScheduleTemplate"
            },
            "description": "A list of vesting schedule templates."
          },
          "nextPageToken": {
            "type": "string",
            "example": "ODMxMw==",
            "description": "Submit the `nextPageToken` string as `pageToken` in a subsequent request to retrieve the next page.\n\nIf the List Vesting Schedule Templates response omits `nextPageToken`, then there are no subsequent pages."
          }
        },
        "description": "The response for the ListVestingScheduleTemplates endpoint."
      },
      "v1alpha1Money": {
        "type": "object",
        "example": {
          "currency_code": "USD",
          "amount": {
            "value": "1000.77"
          }
        },
        "properties": {
          "currencyCode": {
            "$ref": "#/components/schemas/v1alpha1Iso4217CurrencyAlphaCode",
            "description": "The 3-letter currency code defined in ISO 4217."
          },
          "amount": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "Decimal amount of the specified currency.\nFor example if `currencyCode` is `\"USD\"`, then amount of 1 is one US dollar."
          }
        },
        "description": "Represents an amount of money with its currency type."
      },
      "v1alpha1NoteBlockDetails": {
        "type": "object",
        "example": {
          "summary": {
            "noteBlockId": "4",
            "cashRaised": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "875000.00"
              }
            },
            "principal": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "875000.00"
              }
            },
            "interest": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "0.00"
              }
            }
          },
          "convertibleTermsGroupings": [
            {
              "key": {
                "noteBlockId": "4",
                "noteBlockName": "2013 SAFE",
                "conversionDiscountPercentage": {
                  "value": "20.00"
                },
                "conversionPriceBases": [
                  "OUTSTANDING_SHARES",
                  "OUTSTANDING_OPTIONS_AND_WARRANTS"
                ],
                "valuationCap": {
                  "currencyCode": {
                    "value": "USD"
                  },
                  "amount": {
                    "value": "8000000.00"
                  }
                },
                "valuationCapType": "PRE_MONEY",
                "liquidityPriority": "SENIOR_TO_PREFERRED"
              },
              "cashRaised": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "875000.00"
                }
              },
              "principal": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "875000.00"
                }
              },
              "interest": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "0.00"
                }
              }
            }
          ]
        },
        "properties": {
          "summary": {
            "$ref": "#/components/schemas/v1alpha1NoteBlockSummary",
            "description": "Warrant block summary information."
          },
          "convertibleTermsGroupings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1ConvertibleTermsGrouping"
            },
            "description": "Per convertible terms detailed information."
          }
        },
        "description": "Note block details.",
        "required": [
          "summary"
        ]
      },
      "v1alpha1NoteBlockSummary": {
        "type": "object",
        "example": {
          "noteBlockId": "4",
          "cashRaised": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "1075000.00"
            }
          },
          "principal": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "1075000.00"
            }
          },
          "interest": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "382524.65"
            }
          }
        },
        "properties": {
          "noteBlockId": {
            "type": "string",
            "description": "The identifier of the note block.",
            "maxLength": 50,
            "minLength": 1
          },
          "cashRaised": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The cash raised for the note block."
          },
          "principal": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The total outstanding principal for the note block. The outstanding debt for the note block is the `principal` plus the `interest`."
          },
          "interest": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The total outstanding interest for the note block."
          }
        },
        "description": "Note block summary information.",
        "required": [
          "noteBlockId",
          "cashRaised",
          "principal",
          "interest"
        ]
      },
      "v1alpha1OpenCapTable": {
        "type": "object",
        "example": {
          "id": "39e581eb-7312-4acc-b239-5536fa978df5",
          "state": "RECEIVING",
          "createTime": {
            "value": "2022-10-28T16:00:00Z"
          },
          "endProcessTime": null,
          "details": [
            {
              "id": "39e581eb-7312-4acc-b239-5536fa978df6",
              "createTime": {
                "value": "2022-10-28T17:00:00Z"
              },
              "message": "OCF upload started",
              "metadata": {
                
              }
            }
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The id for a submitted OCF package",
            "maxLength": 1000,
            "minLength": 1
          },
          "createTime": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDateTime",
            "description": "The timestamp of when this OCF package has been submitted."
          },
          "completeTime": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDateTime",
            "description": "The timestamp of when this OCF package has completed processing.",
            "title": "The timestamp of when this OCF package has completed processing"
          },
          "state": {
            "$ref": "#/components/schemas/v1alpha1OpenCapTableState",
            "description": "The state at which the importing/processing of the OCF package is at."
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1OpenCapTableLogEntry"
            },
            "description": "The log details of the import/processing of the submitted OCF package."
          }
        },
        "description": "The representation of an uploaded OCF package",
        "required": [
          "createTime",
          "state"
        ]
      },
      "v1alpha1OpenCapTableLogEntry": {
        "type": "object",
        "example": {
          "id": "39e581eb-7312-4acc-b239-5536fa978df6",
          "createTime": {
            "value": "2022-10-28T17:00:00Z"
          },
          "message": "OCF upload started",
          "metadata": {
            
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The id for a submitted OCF package log entry. References a single step.",
            "maxLength": 1000,
            "minLength": 1
          },
          "createTime": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDateTime",
            "description": "The timestamp of a submitted OCF package log entry. Uses UTC by default."
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1OpenCapTableLogEntryMetadata"
            },
            "description": "The metadata of a submitted OCF package log entry. This field is optional."
          }
        },
        "description": "A log detailing an inner step of the import/processing of a submitted OCF package.",
        "required": [
          "createTime"
        ]
      },
      "v1alpha1OpenCapTableLogEntryMetadata": {
        "type": "object",
        "properties": {
          "details": {
            "type": "string",
            "description": "The details that represent this metadata",
            "title": "The details that represent this metadata",
            "maxLength": 1000,
            "minLength": 1
          }
        },
        "description": "A struct to carry metadata associated with an inner step of the import/processing of a submitted OCF package."
      },
      "v1alpha1OpenCapTableState": {
        "type": "string",
        "enum": [
          "OPEN_CAP_TABLE_STATE_UNSPECIFIED",
          "PROCESSING",
          "SUCCEEDED",
          "FAILED"
        ],
        "default": "OPEN_CAP_TABLE_STATE_UNSPECIFIED",
        "description": "The state of the OCF package upload.\n\nDue to the async nature of the `UploadOpenCapTable` endpoint, this is a status\nthat exposes the current state of a `UploadOpenCapTableRequest`.\n\n - OPEN_CAP_TABLE_STATE_UNSPECIFIED: Conventional default for enums. Do not use this.\n - PROCESSING: The processing of the submitted OCF package is ongoing\n - SUCCEEDED: The processing of the submitted OCF package has succeeded\n - FAILED: The processing of the submitted OCF package has failed"
      },
      "v1alpha1OptionExercise": {
        "type": "object",
        "example": {
          "id": "JZgiQfmZpvuiLbhXXQXfZi",
          "issuerId": "7",
          "stakeholderId": "6113",
          "optionGrantId": "9387",
          "certificateId": "4732",
          "quantity": {
            "value": "100"
          },
          "exerciseTime": {
            "value": "2024-01-01T09:00:00.000000Z"
          },
          "state": "COMPLETE",
          "exerciseType": "CASH_EXERCISE",
          "recordType": "ISO",
          "taxWithholding": [
            {
              "name": "Federal",
              "rate": {
                "value": "20"
              },
              "taxes": {
                "currencyCode": "USD",
                "amount": {
                  "value": "200"
                }
              },
              "jurisdiction": {
                "city": "NewYork",
                "countrySubdivision": "US-NY",
                "country": "USA"
              }
            }
          ],
          "moneyMovement": {
            "completionDate": {
              "value": "2024-02-10T09:00:00.000000Z"
            }
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the option exercise.\n\nNote: It is possible for this ID to not exist for legacy reasons, in which case the value of this field will be `\"NO_ID\"`",
            "maxLength": 50
          },
          "issuerId": {
            "type": "string",
            "description": "The identifier of the issuer that issued the option grant.",
            "maxLength": 50
          },
          "stakeholderId": {
            "type": "string",
            "description": "The identifier of the stakeholder that holds the option grant being exercised.",
            "title": "The identifier of the stakeholder that holds the option grant being exercised",
            "maxLength": 50
          },
          "optionGrantId": {
            "type": "string",
            "description": "The identifier of the option grant being exercised.",
            "maxLength": 50
          },
          "certificateId": {
            "type": "string",
            "description": "The identifier of the certificate issued as a result of the option exercise event completing.",
            "maxLength": 50
          },
          "quantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The number of shares being exercised from the related option grant."
          },
          "exerciseTime": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDateTime",
            "description": "The date and time in which the option exercise request was initiated."
          },
          "state": {
            "$ref": "#/components/schemas/v1alpha1OptionExerciseState",
            "description": "The current state of the exercise request."
          },
          "exerciseType": {
            "$ref": "#/components/schemas/v1alpha1OptionExerciseType",
            "description": "The type of option exercise being requested."
          },
          "recordType": {
            "$ref": "#/components/schemas/securitiesoptionexercisesv1alpha1StockOptionType",
            "description": "The type of the record associated with the option exercise."
          },
          "taxWithholding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1OptionExerciseTaxWithholdingLineItem"
            },
            "description": "The tax withholding information associated with the option exercise."
          },
          "moneyMovement": {
            "$ref": "#/components/schemas/v1alpha1OptionExerciseMoneyMovement",
            "description": "The money movement information associated with the option exercise."
          }
        },
        "description": "An option exercise is an event representing a stakeholder exercising their right to purchase shares of an issuer at a set price, the strike price, defined in the option grant being exercised. The result of a successfully completed exercise is the issuance of a certificate."
      },
      "v1alpha1OptionExerciseMoneyMovement": {
        "type": "object",
        "properties": {
          "completionDate": {
            "$ref": "#/components/schemas/v1alpha1Iso8601CompleteCalendarDateTime",
            "description": "The date and time at which funds for the total cost of the exercise were received."
          }
        },
        "description": "Information about the the funding of an option exercise."
      },
      "v1alpha1OptionExerciseState": {
        "type": "string",
        "enum": [
          "EXERCISE_REQUEST_STATE_UNSPECIFIED",
          "AWAITING_TAX_WITHHOLDING",
          "PENDING",
          "COMPLETE",
          "CANCELED"
        ],
        "default": "EXERCISE_REQUEST_STATE_UNSPECIFIED",
        "description": "Enumeration of option exercise request state types.\n\n - EXERCISE_REQUEST_STATE_UNSPECIFIED: Denotes the absence of a value\n - AWAITING_TAX_WITHHOLDING: The exercise is created but does not have tax withholding information yet.\n - PENDING: The exercise request is pending.\n - COMPLETE: The exercise request is complete.\n - CANCELED: The exercise request is canceled."
      },
      "v1alpha1OptionExerciseTaxWithholdingLineItem": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the tax withholding line item.",
            "maxLength": 100
          },
          "rate": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The tax witholding percentage rate for the specified jurisdiction."
          },
          "taxes": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The tax to withhold for the specified jurisdiction."
          },
          "jurisdiction": {
            "$ref": "#/components/schemas/v1alpha1Jurisdiction",
            "description": "The jurisdiction for which the tax withholding is calculated."
          }
        },
        "description": "Tax withholding information for an option exercise, calculated for a specific jurisdiction for a given stakeholder."
      },
      "v1alpha1OptionExerciseType": {
        "type": "string",
        "enum": [
          "EXERCISE_TYPE_UNSPECIFIED",
          "CASH_EXERCISE",
          "CASHLESS_EXERCISE",
          "NET_EXERCISE",
          "BLENDED"
        ],
        "default": "EXERCISE_TYPE_UNSPECIFIED",
        "description": "Enumeration of option exercise types.\n\n - EXERCISE_TYPE_UNSPECIFIED: Denotes the absence of a value\n - CASH_EXERCISE: The cost of exercise was covered in cash.\n - CASHLESS_EXERCISE: The cost of exercise was covered by selling shares.\n - NET_EXERCISE: The cost of exercise was covered by withholding shares.\n - BLENDED: The cost of exercise was covered by a combination of cash and selling of shares."
      },
      "v1alpha1OptionGrantDocuments": {
        "type": "object",
        "properties": {
          "formOfOptionAgreement": {
            "$ref": "#/components/schemas/v1alpha1Document",
            "description": "Details about the form of option agreement."
          },
          "formOfExerciseAgreement": {
            "$ref": "#/components/schemas/v1alpha1Document",
            "description": "Details about the form of exercise agreement."
          },
          "equityIncentivePlan": {
            "$ref": "#/components/schemas/v1alpha1Document",
            "description": "Details about the equity incentive plan."
          },
          "additionalDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1Document"
            },
            "description": "Details about other additional documents.\n\nMax of 100 items."
          }
        },
        "description": "Documents that are relevant to a draft option grant.\n\nThese documents are attached to a specific draft option grant object and will be associated with the resulting option grant once the draft is approved."
      },
      "v1alpha1OptionGrantTransactionDetail": {
        "type": "object",
        "example": {
          "securityId": "21615",
          "securityLabel": "ES-203",
          "stockOptionType": "NSO",
          "exerciseQuantity": {
            "value": "3.00"
          },
          "saleQuantity": {
            "value": "0.00"
          },
          "withholdingQuantity": {
            "value": "0.00"
          },
          "netExerciseQuantity": {
            "value": "3.00"
          },
          "exerciseFairMarketValue": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "8.12"
            }
          },
          "exercisePrice": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "1.00"
            }
          },
          "certificatedId": "13087",
          "certificateLabel": "CS-41"
        },
        "properties": {
          "securityId": {
            "type": "string",
            "description": "The identifier of the security",
            "maxLength": 50,
            "minLength": 1
          },
          "securityLabel": {
            "type": "string",
            "description": "The label of the security.",
            "maxLength": 50
          },
          "stockOptionType": {
            "type": "string",
            "description": "The stock option type at time of issuance. For grants issued as ISO that subsequently failed to meet ISO qualifications, the type will remain ISO. Refer to the disqualification date for information regarding the disqualification of the grant's ISO shares.",
            "maxLength": 50
          },
          "exerciseQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The quantity exercised."
          },
          "saleQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The quantity sold in a cashless transaction to cover the cost of the exercise."
          },
          "withholdingQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The quantity withheld during the exercise."
          },
          "netExerciseQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The net quantity exercised after quantities are sold or withheld."
          },
          "exerciseFairMarketValue": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The fair market value of the issuing corporation per unit of the grant, at the time of exercising."
          },
          "exercisePrice": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The price to exercise one unit of the option grant."
          },
          "certificatedId": {
            "type": "string",
            "description": "The resource identifier of the certificate that was generated as part of the transaction.",
            "maxLength": 50
          },
          "certificateLabel": {
            "type": "string",
            "description": "The label of the certificate that was generated as part of the transaction.",
            "maxLength": 50
          }
        },
        "description": "Information about the portfolio option grant transaction",
        "title": "Information about the portfolio option grant transaction"
      },
      "v1alpha1OptionPoolSummary": {
        "type": "object",
        "example": {
          "optionPoolId": "3",
          "shareClassId": "9",
          "fullyDilutedShares": {
            "value": "44871088.00"
          },
          "outstandingEquityAwardDerivatives": {
            "value": "3725634.0"
          },
          "outstandingCommittedRestrictedStockAwards": {
            "value": "0"
          },
          "name": "Employee Option Pool",
          "authorizedShares": {
            "value": "44871088.00"
          }
        },
        "properties": {
          "optionPoolId": {
            "type": "string",
            "description": "The identifier of the option pool.",
            "maxLength": 50,
            "minLength": 1
          },
          "shareClassId": {
            "type": "string",
            "description": "The identifier of the share class used by the option pool to issue equity.",
            "maxLength": 50,
            "minLength": 1
          },
          "fullyDilutedShares": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "Total common shares of an option pool if all outstanding grants and available equity in the option pool were exercised."
          },
          "outstandingEquityAwardDerivatives": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "Outstanding equity award derivatives. This includes:\n - Option Grants\n - Restricted Stock Units (RSU)\n - Stock Appreciation Rights (SAR)\n - Cash Bonus Unit (CBU)\n - International equity awards",
            "title": "Outstanding equity award derivatives. This includes:\n- Option Grants\n- Restricted Stock Units (RSU)\n- Stock Appreciation Rights (SAR)\n- Cash Bonus Unit (CBU)\n- International equity awards"
          },
          "outstandingCommittedRestrictedStockAwards": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "Board approved but unissued Restricted Stock Awards (RSAs)."
          },
          "name": {
            "type": "string",
            "description": "The name of the option pool.",
            "maxLength": 100,
            "minLength": 1
          },
          "authorizedShares": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The amount of shares authorized to be issued from the option pool."
          }
        },
        "description": "Option pool summary.",
        "required": [
          "optionPoolId",
          "shareClassId",
          "fullyDilutedShares",
          "outstandingEquityAwardDerivatives",
          "outstandingCommittedRestrictedStockAwards",
          "name",
          "authorizedShares"
        ]
      },
      "v1alpha1PointOfContact": {
        "type": "object",
        "example": {
          "issuerId": "7",
          "userFullName": "MaryStuart",
          "userEmail": "mary.stuart@example.com",
          "type": "PRIMARY_CONTACT"
        },
        "properties": {
          "issuerId": {
            "type": "string",
            "description": "An identifier for the issuer related to the point of contact.",
            "maxLength": 50
          },
          "userFullName": {
            "type": "string",
            "description": "The point of contact full name.",
            "maxLength": 1000,
            "minLength": 1
          },
          "userEmail": {
            "type": "string",
            "description": "The point of contact email.",
            "maxLength": 1000,
            "minLength": 1
          },
          "type": {
            "$ref": "#/components/schemas/v1alpha1PointOfContactType",
            "description": "The type of point of contact.",
            "title": "The type of point of contact"
          }
        },
        "description": "A point of contact for an issuer. Examples include a Legal Admin or an Option Signatory."
      },
      "v1alpha1PointOfContactType": {
        "type": "string",
        "enum": [
          "POINT_OF_CONTACT_TYPE_UNSPECIFIED",
          "PRIMARY_CONTACT",
          "OPTION_EXERCISE_APPROVER",
          "STAKEHOLDER_RELATIONS",
          "LEGAL_ADMIN",
          "FINANCE_ADMIN",
          "VALUATIONS_CONTACT",
          "HR_ADMIN",
          "PAYROLL_ADMIN",
          "INVESTOR_RELATIONS",
          "FINANCIAL_REPORTING_ADMIN",
          "LIQUIDITY_CONTACT",
          "LEFT_SIGNATORY",
          "RIGHT_SIGNATORY",
          "OPTION_SIGNATORY",
          "CONVERTIBLE_NOTE_SIGNATORY",
          "WARRANT_SIGNATORY"
        ],
        "default": "POINT_OF_CONTACT_TYPE_UNSPECIFIED",
        "description": "Types of points of contact.\n\n - POINT_OF_CONTACT_TYPE_UNSPECIFIED: Unspecified\n - PRIMARY_CONTACT: Primary Contact\n - OPTION_EXERCISE_APPROVER: Option Exercise Approver\n - STAKEHOLDER_RELATIONS: Stakeholder Relations\n - LEGAL_ADMIN: Legal Admin\n - FINANCE_ADMIN: Finance Admin\n - VALUATIONS_CONTACT: Valuations Contact\n - HR_ADMIN: HR Admin\n - PAYROLL_ADMIN: Payroll Admin\n - INVESTOR_RELATIONS: Investor Relations\n - FINANCIAL_REPORTING_ADMIN: Financial Reporting Admin\n - LIQUIDITY_CONTACT: Liquidity Contact\n - LEFT_SIGNATORY: Left Signatory\n - RIGHT_SIGNATORY: Right Signatory\n - OPTION_SIGNATORY: Option Signatory\n - CONVERTIBLE_NOTE_SIGNATORY: Convertible Note Signatory\n - WARRANT_SIGNATORY: Warrant Signatory"
      },
      "v1alpha1Portfolio": {
        "type": "object",
        "example": {
          "portfolioId": "174",
          "legalName": "Tagg Palmer's Portfolio",
          "createTime": "2017-01-12T00:00:00Z"
        },
        "properties": {
          "portfolioId": {
            "type": "string",
            "description": "The identifier of the portfolio.",
            "maxLength": 50,
            "minLength": 1
          },
          "legalName": {
            "type": "string",
            "description": "The legal name of the portfolio.",
            "maxLength": 1000,
            "minLength": 1
          },
          "createTime": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the portfolio was created."
          }
        },
        "description": "Information about a shareholder portfolio."
      },
      "v1alpha1PreferredShareClassDetails": {
        "type": "object",
        "example": {
          "rightsAndPreferences": {
            "originalIssuePrice": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "1.77"
              }
            },
            "conversionPrice": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "1.50"
              }
            },
            "conversionRatio": {
              "value": "0.789"
            },
            "multiplier": {
              "value": "1.00"
            },
            "participating": true,
            "participationCap": {
              "value": "1.00"
            }
          },
          "dividendDetails": {
            "dividendType": "CASH",
            "dividendDetails": {
              "dividendYield": {
                "value": "0.02"
              },
              "dividendAccrualType": "CUMULATIVE",
              "dividendAccrualPeriod": "DAILY",
              "dividendInterestType": "INTEREST_PERIOD_DAILY"
            }
          }
        },
        "properties": {
          "rightsAndPreferences": {
            "$ref": "#/components/schemas/v1alpha1ShareClassRightsAndPreferences",
            "description": "The rights and preferences for the preferred share class."
          },
          "dividendDetails": {
            "$ref": "#/components/schemas/v1alpha1ShareClassDividendDetails",
            "description": "The dividend details for the preferred share class."
          }
        },
        "description": "Details of a preferred share class, split into rights and preferences details and dividend details."
      },
      "v1alpha1RsuTransactionDetail": {
        "type": "object",
        "example": {
          "securityId": "8550",
          "securityLabel": "ES-136",
          "releaseQuantity": {
            "value": "200"
          },
          "saleQuantity": {
            "value": "200"
          },
          "withholdingQuantity": {
            "value": "55"
          },
          "netSettlementQuantity": {
            "value": "145"
          },
          "settlementFairMarketValue": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "0.55"
            }
          },
          "settlementPrice": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "0.78"
            }
          },
          "certificateId": "78",
          "certificateLabel": "CS-124"
        },
        "properties": {
          "securityId": {
            "type": "string",
            "description": "The identifier of the security.",
            "maxLength": 50,
            "minLength": 1
          },
          "securityLabel": {
            "type": "string",
            "description": "The label of the security.",
            "maxLength": 50
          },
          "releaseQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The quantity released during the settlement."
          },
          "saleQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The quantity sold in a cashless transaction to cover the cost of the settlement."
          },
          "withholdingQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The quantity withheld during the settlement."
          },
          "netSettlementQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The net quantity settled after quantities are sold or withheld."
          },
          "settlementFairMarketValue": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The fair market value of the issuing corporation per RSU, at the time of settlement."
          },
          "settlementPrice": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The price to settle one unit of the RSU."
          },
          "certificateId": {
            "type": "string",
            "description": "The identifier of the certificate that was generated as part of the transaction.",
            "maxLength": 50
          },
          "certificateLabel": {
            "type": "string",
            "description": "The label of the certificate that was generated as part of the transaction.",
            "maxLength": 50
          }
        },
        "description": "Information about the portfolio RSU transaction."
      },
      "v1alpha1SecurityTransaction": {
        "type": "object",
        "example": {
          "portfolioId": "174",
          "portfolioName": "Tagg Palmer's Portfolio",
          "issuerId": "7",
          "issuerName": "Meetly",
          "transactionTime": "2022-05-00:00:01.611Z",
          "transactionType": "TRANSACTION_TYPE_OPTION_GRANT_EXERCISE",
          "transactionStatus": "TRANSACTION_STATUS_COMPLETED",
          "securityType": "SECURITY_TYPE_SHARE",
          "shareTransactionDetail": {
            "securityId": "13087",
            "securityLabel": "CS-41",
            "shareClass": "Common",
            "saleQuantity": {
              "value": "3.00"
            },
            "issuanceFairMarketValue": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "8.12"
              }
            },
            "saleFairMarketValue": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "8.12"
              }
            },
            "salePrice": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "30.00"
              }
            },
            "costBasis": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "3.00"
              }
            },
            "adjustedCostBasis": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "24.36"
              }
            }
          }
        },
        "properties": {
          "portfolioId": {
            "type": "string",
            "description": "The identifier of the portfolio which holds the security.",
            "maxLength": 50,
            "minLength": 1
          },
          "portfolioName": {
            "type": "string",
            "description": "The name of the portfolio which holds the security.",
            "maxLength": 1000
          },
          "issuerId": {
            "type": "string",
            "description": "The identifier of the issuing corporation.",
            "maxLength": 50,
            "minLength": 1
          },
          "issuerName": {
            "type": "string",
            "description": "The legal name of the issuing corporation.",
            "maxLength": 1000
          },
          "transactionTime": {
            "type": "string",
            "format": "date-time",
            "description": "The time of the transaction."
          },
          "transactionType": {
            "$ref": "#/components/schemas/v1alpha1TransactionType",
            "description": "The type of transaction."
          },
          "transactionStatus": {
            "$ref": "#/components/schemas/v1alpha1TransactionStatus",
            "description": "The status of the transaction."
          },
          "securityType": {
            "$ref": "#/components/schemas/v1alpha1SecurityType",
            "description": "The type of security related to the transaction."
          },
          "optionGrantTransactionDetail": {
            "$ref": "#/components/schemas/v1alpha1OptionGrantTransactionDetail"
          },
          "shareTransactionDetail": {
            "$ref": "#/components/schemas/v1alpha1ShareTransactionDetail"
          },
          "rsuTransactionDetail": {
            "$ref": "#/components/schemas/v1alpha1RsuTransactionDetail"
          }
        },
        "description": "Information about the portfolio security transaction."
      },
      "v1alpha1SecurityType": {
        "type": "string",
        "enum": [
          "SECURITY_TYPE_UNSPECIFIED",
          "SECURITY_TYPE_OPTION_GRANT",
          "SECURITY_TYPE_SHARE",
          "SECURITY_TYPE_RESTRICTED_STOCK_UNIT"
        ],
        "default": "SECURITY_TYPE_UNSPECIFIED",
        "description": "The type of security related to the transaction.\n\n - SECURITY_TYPE_OPTION_GRANT: Security is an option grant.\n - SECURITY_TYPE_SHARE: Security is a share of a company.\n - SECURITY_TYPE_RESTRICTED_STOCK_UNIT: Security is a restricted stock unit."
      },
      "v1alpha1ShareClass": {
        "type": "object",
        "example": {
          "id": "783",
          "issuerId": "7",
          "name": "SeriesB",
          "prefix": "PSB",
          "type": "PREFERRED",
          "authorizedShareCount": {
            "value": "0"
          },
          "parValue": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "0.0001"
            }
          },
          "seniority": 1,
          "pariPassu": true,
          "preferredShareClassDetails": {
            "rightsAndPreferences": {
              "originalIssuePrice": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "1.77"
                }
              },
              "conversionPrice": {
                "currencyCode": {
                  "value": "USD"
                },
                "amount": {
                  "value": "1.50"
                }
              },
              "conversionRatio": {
                "value": "0.789"
              },
              "multiplier": {
                "value": "1.00"
              },
              "participating": true,
              "participationCap": {
                "value": "1.00"
              }
            },
            "dividendDetails": {
              "dividendType": "CASH",
              "dividendDetails": {
                "dividendYield": {
                  "value": "0.02"
                },
                "dividendAccrualType": "CUMULATIVE",
                "dividendAccrualPeriod": "DAILY",
                "dividendInterestType": "INTEREST_PERIOD_DAILY"
              }
            }
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the share class.",
            "maxLength": 50,
            "minLength": 1
          },
          "issuerId": {
            "type": "string",
            "description": "The identifier of the issuer to which this share class belongs.",
            "maxLength": 50,
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "The name of the share class.",
            "maxLength": 100
          },
          "prefix": {
            "type": "string",
            "description": "The prefix used to identify the share class. Can only be numbers and letters. For example, CS for Common, PS for Series Seed Preferred, and PA for Series A Preferred.",
            "title": "The prefix used to identify the share class. Can only be numbers and letters. For example, CS for Common, PS for\nSeries Seed Preferred, and PA for Series A Preferred",
            "maxLength": 25,
            "minLength": 1
          },
          "type": {
            "$ref": "#/components/schemas/v1alpha1ShareClassType",
            "description": "The type of the share class."
          },
          "authorizedShareCount": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The maximum number of shares allowed to be issued to investors, as laid out in the articles of incorporation."
          },
          "parValue": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The minimum price per share at which the shares must be issued. Is usually set at $0.001 or $0.0001 per share, as stated in the corporate charter."
          },
          "seniority": {
            "type": "integer",
            "format": "int32",
            "description": "Indicates the order in which share holders will get paid. Seniority ranks high to low, with 1 being the highest and will be paid out first.\n\nThe higher the number, the less seniority the corresponding share class has."
          },
          "pariPassu": {
            "type": "boolean",
            "description": "Indicates whether this share class has equal seniority to an existing share class."
          },
          "preferredShareClassDetails": {
            "$ref": "#/components/schemas/v1alpha1PreferredShareClassDetails",
            "description": "Preferred share class details when share class type is set to preferred."
          }
        },
        "description": "A class of stock issued by an issuer."
      },
      "v1alpha1ShareClassDetails": {
        "type": "object",
        "example": {
          "summary": {
            "shareClassId": "10",
            "optionPoolIds": [
              "3"
            ],
            "fullyDilutedShares": {
              "value": "1257335.00"
            },
            "outstandingShares": {
              "value": "1257335.00"
            },
            "cashRaised": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "383379.57"
              }
            }
          },
          "shareClass": {
            "id": "10",
            "issuerId": "2d5ed165-bad3-40cf-8982-6309efac0989",
            "name": "Series A Preferred",
            "prefix": "PA",
            "type": "PREFERRED",
            "authorizedShareCount": {
              "value": "10000000"
            },
            "parValue": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "0.0001"
              }
            },
            "seniority": 1,
            "pariPassu": true,
            "preferredShareClassDetails": {
              "rightsAndPreferences": {
                "originalIssuePrice": {
                  "currencyCode": {
                    "value": "USD"
                  },
                  "amount": {
                    "value": "0.265"
                  }
                },
                "conversionPrice": {
                  "currencyCode": {
                    "value": "USD"
                  },
                  "amount": {
                    "value": "0.265"
                  }
                },
                "conversionRatio": {
                  "value": "1.00"
                },
                "multiplier": {
                  "value": "1.00"
                },
                "participating": true,
                "participationCap": {
                  "value": "1.00"
                }
              },
              "dividendDetails": {
                "dividendType": "CASH",
                "dividendDetails": {
                  "dividendYield": {
                    "value": "1.00"
                  },
                  "dividendAccrualType": "NON_CUMULATIVE",
                  "dividendAccrualPeriod": "WEEKLY",
                  "dividendInterestType": "INTEREST_PERIOD_MONTHLY"
                }
              }
            }
          }
        },
        "properties": {
          "summary": {
            "$ref": "#/components/schemas/v1alpha1ShareClassSummary",
            "description": "Share class summary information."
          },
          "shareClass": {
            "$ref": "#/components/schemas/v1alpha1ShareClass",
            "description": "Share class."
          }
        },
        "description": "Share class details.",
        "required": [
          "summary",
          "shareClass"
        ]
      },
      "v1alpha1ShareClassDividendDetails": {
        "type": "object",
        "example": {
          "dividendType": "CASH",
          "dividendDetails": {
            "dividendYield": {
              "value": "0.02"
            },
            "dividendAccrualType": "CUMULATIVE",
            "dividendAccrualPeriod": "DAILY",
            "dividendInterestType": "INTEREST_PERIOD_DAILY"
          }
        },
        "properties": {
          "dividendType": {
            "$ref": "#/components/schemas/v1alpha1DividendType",
            "description": "The type of dividends for the share class."
          },
          "dividendDetails": {
            "$ref": "#/components/schemas/v1alpha1DividendDetails",
            "description": "Details for the non-cash dividends for this share class if `dividendType` is `NON_CASH`."
          }
        },
        "description": "Details related to the dividends of a share class."
      },
      "v1alpha1ShareClassRightsAndPreferences": {
        "type": "object",
        "example": {
          "originalIssuePrice": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "1.77"
            }
          },
          "conversionPrice": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "1.50"
            }
          },
          "conversionRatio": {
            "value": "0.789"
          },
          "multiplier": {
            "value": "1.00"
          },
          "participating": true,
          "participationCap": {
            "value": "1.00"
          }
        },
        "properties": {
          "originalIssuePrice": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The price that was originally set for that series of preferred stock."
          },
          "conversionPrice": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "Used to calculate the conversion ratio for the preferred stock into common stock."
          },
          "conversionRatio": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "Conversion will be calculated with `conversionRatio` instead of `conversionPrice` if both are entered.\n\nConversion will be calculated with `conversionRatio` instead of `conversionPrice` if both are entered."
          },
          "multiplier": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The multiple of the original Issue price that will be paid out pursuant to the liquidation preferences."
          },
          "participating": {
            "type": "boolean",
            "description": "Indicates that the holders of that preferred share class are paid out at the same time that the common stockholders are paid out."
          },
          "participationCap": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "Blank or zero means there is no cap. No cap means the preferred classes are fully participating.",
            "title": "Blank or zero means there is no cap. No cap means the preferred classes are fully participating"
          }
        },
        "description": "Share class rights and preferences for a preferred share class."
      },
      "v1alpha1ShareClassSummary": {
        "type": "object",
        "example": {
          "shareClassId": "10",
          "optionPoolIds": [
            "3"
          ],
          "fullyDilutedShares": {
            "value": "5603645.00"
          },
          "outstandingShares": {
            "value": "5603645.00"
          },
          "cashRaised": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "1159354.84"
            }
          }
        },
        "properties": {
          "shareClassId": {
            "type": "string",
            "description": "The identifier of the share class.",
            "maxLength": 50,
            "minLength": 1
          },
          "optionPoolIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of option pool ids that are associated with this share class.",
            "maxItems": 1000
          },
          "fullyDilutedShares": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "See [this Support article](https://support.carta.com/s/article/authorized-outstanding-issued-fully-diluted-shares) for information on fully diluted shares in a share class."
          },
          "outstandingShares": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "See [this Support article](https://support.carta.com/s/article/authorized-outstanding-issued-fully-diluted-shares) for information on outstanding shares in a share class."
          },
          "cashRaised": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "Total currency amount raised for share class."
          }
        },
        "description": "Share class summary includes all certificated, non-certificated and RSAs with an issue date.",
        "required": [
          "shareClassId",
          "fullyDilutedShares",
          "outstandingShares",
          "cashRaised"
        ]
      },
      "v1alpha1ShareClassType": {
        "type": "string",
        "enum": [
          "SHARE_CLASS_TYPE_UNSPECIFIED",
          "COMMON",
          "PREFERRED"
        ],
        "default": "SHARE_CLASS_TYPE_UNSPECIFIED",
        "description": "- SHARE_CLASS_TYPE_UNSPECIFIED: Unspecified\n - COMMON: Used to denote a common share with voting rights\n - PREFERRED: Used to denote a preferred share with no voting rights"
      },
      "v1alpha1ShareClassValuation": {
        "type": "object",
        "example": {
          "shareClassId": "9",
          "shareClassName": "Common",
          "common": true,
          "price": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "0.20"
            }
          }
        },
        "properties": {
          "shareClassId": {
            "type": "string",
            "description": "The identifier of the share class.",
            "maxLength": 50,
            "minLength": 1
          },
          "shareClassName": {
            "type": "string",
            "description": "The name of the share class.",
            "maxLength": 60,
            "minLength": 1
          },
          "common": {
            "type": "boolean",
            "description": "True if this is a common share class; otherwise, false if this is a preferred share class."
          },
          "price": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The fair market value for the share class."
          }
        },
        "description": "The fair market valuation price for a share class."
      },
      "v1alpha1ShareTransactionDetail": {
        "type": "object",
        "example": {
          "securityId": "13087",
          "securityLabel": "CS-41",
          "shareClass": "Common",
          "saleQuantity": {
            "value": "3.00"
          },
          "issuanceFairMarketValue": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "8.12"
            }
          },
          "saleFairMarketValue": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "8.12"
            }
          },
          "salePrice": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "30.00"
            }
          },
          "costBasis": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "3.00"
            }
          },
          "adjustedCostBasis": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "24.36"
            }
          }
        },
        "properties": {
          "securityId": {
            "type": "string",
            "description": "The identifier of the security.",
            "maxLength": 50,
            "minLength": 1
          },
          "securityLabel": {
            "type": "string",
            "description": "The label of the security.",
            "maxLength": 50
          },
          "shareClass": {
            "type": "string",
            "description": "The class of the security (i.e., Preferred, Common).",
            "maxLength": 1000,
            "minLength": 1
          },
          "saleQuantity": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "The quantity of shares sold."
          },
          "issuanceFairMarketValue": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The fair market value of the issuing corporation per share, at the time of issuance."
          },
          "saleFairMarketValue": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The fair market value of the issuing corporation per share, at the time of sale."
          },
          "salePrice": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The total sale price of the transaction."
          },
          "costBasis": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The total cost basis of the transaction."
          },
          "adjustedCostBasis": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The total cost basis for the transaction adjusted for any action resulting in a change in basis."
          }
        },
        "description": "Information about the portfolio share transaction."
      },
      "v1alpha1StakeholderType": {
        "type": "string",
        "enum": [
          "STAKEHOLDER_TYPE_UNSPECIFIED",
          "STAKEHOLDER_TYPE_INDIVIDUAL",
          "STAKEHOLDER_TYPE_NON_INDIVIDUAL"
        ],
        "default": "STAKEHOLDER_TYPE_UNSPECIFIED",
        "description": "- STAKEHOLDER_TYPE_UNSPECIFIED: Denotes the absence of a value\n - STAKEHOLDER_TYPE_INDIVIDUAL: Individual\n - STAKEHOLDER_TYPE_NON_INDIVIDUAL: Non-Individual (e.g. organization, trust, etc.)",
        "title": "Type of stakeholder"
      },
      "v1alpha1TransactionStatus": {
        "type": "string",
        "enum": [
          "TRANSACTION_STATUS_UNSPECIFIED",
          "TRANSACTION_STATUS_SUBMITTED",
          "TRANSACTION_STATUS_IN_PROGRESS",
          "TRANSACTION_STATUS_COMPLETED"
        ],
        "default": "TRANSACTION_STATUS_UNSPECIFIED",
        "description": "The status of the transaction.\n\n - TRANSACTION_STATUS_SUBMITTED: Transaction was requested by the grant holder.\n - TRANSACTION_STATUS_IN_PROGRESS: Transaction is currently in progress.\n - TRANSACTION_STATUS_COMPLETED: Transaction was completed."
      },
      "v1alpha1TransactionType": {
        "type": "string",
        "enum": [
          "TRANSACTION_TYPE_UNSPECIFIED",
          "TRANSACTION_TYPE_OPTION_GRANT_EXERCISE",
          "TRANSACTION_TYPE_SHARE_SALE",
          "TRANSACTION_TYPE_RSU_SETTLEMENT"
        ],
        "default": "TRANSACTION_TYPE_UNSPECIFIED",
        "description": "The type of transaction.\n\n - TRANSACTION_TYPE_OPTION_GRANT_EXERCISE: Transaction is an option grant exercise.\n - TRANSACTION_TYPE_SHARE_SALE: Transaction is the sale of a share.\n - TRANSACTION_TYPE_RSU_SETTLEMENT: Transaction is the settlement of a restricted stock unit."
      },
      "v1alpha1UpdateMoneyMovementResponse": {
        "type": "object",
        "properties": {
          "issuerId": {
            "type": "string",
            "example": "7",
            "description": "The identifier of the issuer that issued the option exercises money movement information was updated for.",
            "maxLength": 50,
            "minLength": 1
          },
          "exerciseId": {
            "type": "string",
            "example": "JZgiQfmZpvuiLbhXXQXfZi",
            "description": "The identifier of the option exercise money movement information was updated for.",
            "maxLength": 50,
            "minLength": 1
          },
          "moneyMovement": {
            "$ref": "#/components/schemas/v1alpha1OptionExerciseMoneyMovement",
            "description": "The updated money movement information."
          }
        },
        "description": "The response for the UpdateMoneyMovement endpoint."
      },
      "v1alpha1UpdateTaxWithholdingResponse": {
        "type": "object",
        "properties": {
          "issuerId": {
            "type": "string",
            "example": "7",
            "description": "The identifier of the issuer that issued the option exercises tax withholding information was updated for.",
            "maxLength": 50,
            "minLength": 1
          },
          "exerciseId": {
            "type": "string",
            "description": "The identifier of the option exercise tax withholding information was updated for.",
            "maxLength": 50,
            "minLength": 1
          },
          "taxWithholdings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1alpha1OptionExerciseTaxWithholdingLineItem"
            },
            "description": "The updated tax withholdings."
          }
        },
        "description": "The response for the UpdateTaxWithholding endpoint."
      },
      "v1alpha1UploadFileRequest": {
        "type": "object",
        "properties": {
          "file": {
            "$ref": "#/components/schemas/v1alpha1File",
            "description": "The file to upload."
          }
        },
        "description": "UploadFileRequest is the request object for the UploadFile method.",
        "required": [
          "file"
        ]
      },
      "v1alpha1UploadFileResponse": {
        "type": "object",
        "properties": {
          "file": {
            "$ref": "#/components/schemas/v1alpha1File",
            "description": "The uploaded file. This will be the same as the request file, but without the file contents."
          }
        },
        "description": "UploadFileResponse is the response object for the UploadFile method.",
        "required": [
          "file"
        ]
      },
      "v1alpha1UploadOpenCapTableResponse": {
        "type": "object",
        "example": {
          "openCapTable": {
            "id": "39e581eb-7312-4acc-b239-5536fa978df5",
            "state": "PROCESSING",
            "createTime": {
              "value": "2022-10-28T16:00:00Z"
            },
            "completeTime": null,
            "details": [
              {
                "id": "39e581eb-7312-4acc-b239-5536fa978df6",
                "createTime": {
                  "value": "2022-10-28T17:00:00Z"
                },
                "metadata": {
                  "details": "OCF upload started"
                }
              }
            ]
          }
        },
        "properties": {
          "openCapTable": {
            "$ref": "#/components/schemas/v1alpha1OpenCapTable",
            "description": "The open cap table data."
          }
        },
        "description": "The response for the UploadOpenCapTable endpoint."
      },
      "v1alpha1User": {
        "type": "object",
        "example": {
          "id": "2184ae6f-9415-465a-9f5f-80efbc81b266",
          "firstName": "Tagg",
          "lastName": "Palmer",
          "email": "tagg@example.com"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The resource identifier for a user.",
            "maxLength": 50
          },
          "firstName": {
            "type": "string",
            "description": "The first name of the user.",
            "maxLength": 150
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the user.",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "description": "The email address of the user.",
            "maxLength": 256
          }
        }
      },
      "v1alpha1ValuationCapType": {
        "type": "string",
        "enum": [
          "VALUATION_CAP_TYPE_UNSPECIFIED",
          "UNCAPPED",
          "PRE_MONEY",
          "POST_MONEY"
        ],
        "default": "VALUATION_CAP_TYPE_UNSPECIFIED",
        "description": "The valuation cap type.\n\n - VALUATION_CAP_TYPE_UNSPECIFIED: Denotes the absence of a value\n - UNCAPPED: Uncapped\n - PRE_MONEY: Pre-money\n - POST_MONEY: Post-money"
      },
      "v1alpha1Vesting": {
        "type": "object",
        "example": {
          "templateId": "6eeb0b6f-84c4-4071-8d94-9f0cefd59230",
          "startDate": {
            "year": 2024,
            "month": 2,
            "day": 29
          },
          "acceleration": {
            "name": "Change in control",
            "terms": "All unvested shares shall vest upon a change of control."
          }
        },
        "properties": {
          "templateId": {
            "type": "string",
            "description": "The template id of the vesting schedule.",
            "maxLength": 100
          },
          "startDate": {
            "$ref": "#/components/schemas/v1alpha1Date",
            "description": "The effective start date of vesting."
          },
          "acceleration": {
            "$ref": "#/components/schemas/v1alpha1Acceleration",
            "description": "Details of accelerated vesting of the draft option grant."
          }
        },
        "description": "Vesting details of the option grant",
        "title": "Vesting details of the option grant"
      },
      "v1alpha1VestingScheduleTemplate": {
        "type": "object",
        "example": {
          "id": "1",
          "issuerId": "7",
          "name": "1/24, No Cliff",
          "description": "Shares vest monthly for the next 24 months on the same day as the start date.",
          "vestingScheduleType": "DATE"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the vesting schedule template.",
            "maxLength": 50
          },
          "issuerId": {
            "type": "string",
            "description": "The identifier of the issuer to which this vesting schedule template belongs.",
            "maxLength": 50
          },
          "name": {
            "type": "string",
            "description": "The name of the vesting schedule template.",
            "maxLength": 500
          },
          "description": {
            "type": "string",
            "description": "The description of the vesting schedule template.",
            "maxLength": 1000
          },
          "vestingScheduleType": {
            "$ref": "#/components/schemas/v1alpha1VestingScheduleType",
            "description": "The type of vesting schedule found within this template."
          }
        },
        "description": "Details of a vesting schedule template."
      },
      "v1alpha1VestingScheduleType": {
        "type": "string",
        "enum": [
          "VESTING_SCHEDULE_TYPE_UNSPECIFIED",
          "DATE",
          "MILESTONE",
          "HYBRID"
        ],
        "default": "VESTING_SCHEDULE_TYPE_UNSPECIFIED",
        "description": "Types of vesting schedule templates.\n\n - VESTING_SCHEDULE_TYPE_UNSPECIFIED: Unspecified\n - DATE: Vesting schedule with tranches based on calendar dates\n - MILESTONE: Vesting schedule with tranches based on a milestone condition being achieved\n - HYBRID: vesting schedule with a combination of date-based tranches and performance conditions"
      },
      "v1alpha1WarrantBlockDetails": {
        "type": "object",
        "example": {
          "summary": {
            "warrantBlockId": "1",
            "shareClassId": "10",
            "cashRaised": {
              "currencyCode": {
                "value": "USD"
              },
              "amount": {
                "value": "1075000.00"
              }
            },
            "fullyDilutedShares": {
              "value": "3029344.00"
            },
            "outstandingWarrants": {
              "value": "3029344.00"
            }
          }
        },
        "properties": {
          "summary": {
            "$ref": "#/components/schemas/v1alpha1WarrantBlockSummary",
            "description": "Warrant block summary information."
          }
        },
        "description": "Warrant block details.",
        "required": [
          "summary"
        ]
      },
      "v1alpha1WarrantBlockSummary": {
        "type": "object",
        "example": {
          "warrantBlockId": "1",
          "shareClassId": "10",
          "fullyDilutedShares": {
            "value": "3029344.00"
          },
          "outstandingWarrants": {
            "value": "3029344.00"
          },
          "cashRaised": {
            "currencyCode": {
              "value": "USD"
            },
            "amount": {
              "value": "1075000.00"
            }
          }
        },
        "properties": {
          "warrantBlockId": {
            "type": "string",
            "description": "The identifier of the warrant block.",
            "maxLength": 50,
            "minLength": 1
          },
          "shareClassId": {
            "type": "string",
            "description": "The identifier of the share class for this warrant block.",
            "maxLength": 50,
            "minLength": 1
          },
          "fullyDilutedShares": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "Number of shares if all warrants converted to shares."
          },
          "outstandingWarrants": {
            "$ref": "#/components/schemas/v1alpha1Decimal",
            "description": "Outstanding warrants quantity."
          },
          "cashRaised": {
            "$ref": "#/components/schemas/v1alpha1Money",
            "description": "The cash raised for the warrants."
          }
        },
        "description": "Warrant block summary.",
        "required": [
          "warrantBlockId",
          "shareClassId",
          "fullyDilutedShares",
          "outstandingWarrants",
          "cashRaised"
        ]
      }
    }
  },
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true
  }
}