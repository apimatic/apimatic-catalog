{
    "openapi": "3.0.1",
    "info": {
        "description": "Payment Sessions API",
        "title": "Payment Sessions",
        "version": "v1"
    },
    "servers": [
        {
            "description": "Production - Sandbox",
            "url": "https://api.sandbox.eu.ppro.com"
        },
        {
            "description": "Production",
            "url": "https://api.eu.ppro.com"
        }
    ],
    "security": [
        {
            "bearer_token": []
        }
    ],
    "tags": [
        {
            "name": "Payment Session Endpoints"
        }
    ],
    "paths": {
        "/v1/payment-sessions": {
            "post": {
                "description": "Creates a new Payment Session.",
                "operationId": "createSession",
                "parameters": [
                    {
                        "explode": false,
                        "in": "header",
                        "name": "Merchant-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponseBody"
                                }
                            }
                        },
                        "description": "Invalid request."
                    }
                },
                "summary": "Create payment session",
                "tags": [
                    "Payment Sessions"
                ]
            }
        },
        "/v1/payment-sessions/{session-id}/authorizations": {
            "post": {
                "description": "Authorize underlying payment charge or agreement of the given payment session.",
                "operationId": "authorizeSession",
                "parameters": [
                    {
                        "explode": false,
                        "in": "path",
                        "name": "session-id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthorizationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponseBody"
                                }
                            }
                        },
                        "description": "Invalid request."
                    }
                },
                "summary": "Authorize payment charge or agreement",
                "tags": [
                    "Payment Sessions"
                ]
            }
        },
        "/v1/payment-sessions/{session-id}": {
            "get": {
                "description": "Returns the payment session, given the session ID.",
                "operationId": "fetchSession",
                "parameters": [
                    {
                        "example": "sess_FlTZQyHL4DeUYLYtXmOdq",
                        "explode": false,
                        "in": "path",
                        "name": "session-id",
                        "required": true,
                        "schema": {
                            "example": "sess_FlTZQyHL4DeUYLYtXmOdq",
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/FetchResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponseBody"
                                }
                            }
                        },
                        "description": "Invalid request."
                    }
                },
                "summary": "Get payment session",
                "tags": [
                    "Payment Sessions"
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Address": {
                "description": "The shipping address details.",
                "example": {
                    "firstName": "John",
                    "lastName": "Smith",
                    "country": "DE",
                    "phoneNumber": "01522113356",
                    "city": "Berlin",
                    "street": "Maple Street 102/B",
                    "postalCode": "41460",
                    "region": "Berlin"
                },
                "properties": {
                    "firstName": {
                        "description": "The address first name.",
                        "example": "John",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "The address last name.",
                        "example": "Smith",
                        "type": "string"
                    },
                    "phoneNumber": {
                        "description": "The address phone number.",
                        "example": "01522113356",
                        "type": "string"
                    },
                    "street": {
                        "description": "Street name, house number and other details such as apartment number or door number",
                        "example": "Maple Street 102/B",
                        "type": "string"
                    },
                    "postalCode": {
                        "description": "The address postal code.",
                        "example": "41460",
                        "type": "string"
                    },
                    "city": {
                        "description": "The address city.",
                        "example": "Berlin",
                        "type": "string"
                    },
                    "region": {
                        "description": "The address region.",
                        "example": "Berlin",
                        "type": "string"
                    },
                    "country": {
                        "description": "The address country.",
                        "example": "DE",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AirlineDetails": {
                "description": "The airline industry specific details.",
                "example": {
                    "passengerName": "John Doe",
                    "passengerPhone": "14082319231",
                    "pnr": "SKJ2NS01AS",
                    "tripSegments": [
                        {
                            "destinationAirportCode": "SYD",
                            "fareBasisCode": "YE3MGB",
                            "segmentId": "1",
                            "departureDate": "2025-01-01",
                            "flightCarrierCode": "016",
                            "departureAirportCode": "MAN",
                            "flightNumber": "BA98"
                        },
                        {
                            "destinationAirportCode": "SYD",
                            "fareBasisCode": "YE3MGB",
                            "segmentId": "1",
                            "departureDate": "2025-01-01",
                            "flightCarrierCode": "016",
                            "departureAirportCode": "MAN",
                            "flightNumber": "BA98"
                        }
                    ],
                    "carrierCode": "016",
                    "airlineCode": "016",
                    "numberOfPassengers": 1,
                    "passengerEmail": "john@gmail.com"
                },
                "properties": {
                    "pnr": {
                        "description": "The passenger number record",
                        "example": "SKJ2NS01AS",
                        "type": "string"
                    },
                    "numberOfPassengers": {
                        "description": "The number of passengers",
                        "example": 1,
                        "format": "int32",
                        "minimum": 1,
                        "type": "integer"
                    },
                    "airlineCode": {
                        "description": "The airline code",
                        "example": "016",
                        "type": "string"
                    },
                    "passengerEmail": {
                        "description": "The passenger email",
                        "example": "john@gmail.com",
                        "type": "string"
                    },
                    "passengerPhone": {
                        "description": "The passenger phone number",
                        "example": "14082319231",
                        "type": "string"
                    },
                    "passengerName": {
                        "description": "The passenger name",
                        "example": "John Doe",
                        "type": "string"
                    },
                    "carrierCode": {
                        "description": "The airline carrier code",
                        "example": "016",
                        "type": "string"
                    },
                    "tripSegments": {
                        "description": "The trip segment details",
                        "items": {
                            "$ref": "#/components/schemas/AirlineTripSegment"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "AirlineIndustryData": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IndustryData"
                    },
                    {
                        "properties": {
                            "details": {
                                "$ref": "#/components/schemas/AirlineDetails"
                            },
                            "type": {
                                "description": "The AIRLINE industry data type.",
                                "enum": [
                                    "AIRLINE"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "example": {
                    "details": {
                        "passengerName": "John Doe",
                        "passengerPhone": "14082319231",
                        "pnr": "SKJ2NS01AS",
                        "tripSegments": [
                            {
                                "destinationAirportCode": "SYD",
                                "fareBasisCode": "YE3MGB",
                                "segmentId": "1",
                                "departureDate": "2025-01-01",
                                "flightCarrierCode": "016",
                                "departureAirportCode": "MAN",
                                "flightNumber": "BA98"
                            },
                            {
                                "destinationAirportCode": "SYD",
                                "fareBasisCode": "YE3MGB",
                                "segmentId": "1",
                                "departureDate": "2025-01-01",
                                "flightCarrierCode": "016",
                                "departureAirportCode": "MAN",
                                "flightNumber": "BA98"
                            }
                        ],
                        "carrierCode": "016",
                        "airlineCode": "016",
                        "numberOfPassengers": 1,
                        "passengerEmail": "john@gmail.com"
                    },
                    "type": "AIRLINE"
                },
                "required": [
                    "details"
                ],
                "type": "object"
            },
            "AirlineTripSegment": {
                "description": "The trip segment details",
                "example": {
                    "destinationAirportCode": "SYD",
                    "fareBasisCode": "YE3MGB",
                    "segmentId": "1",
                    "departureDate": "2025-01-01",
                    "flightCarrierCode": "016",
                    "departureAirportCode": "MAN",
                    "flightNumber": "BA98"
                },
                "properties": {
                    "fareBasisCode": {
                        "description": "The fare basis code",
                        "example": "YE3MGB",
                        "type": "string"
                    },
                    "departureAirportCode": {
                        "description": "The departure airport code",
                        "example": "MAN",
                        "type": "string"
                    },
                    "destinationAirportCode": {
                        "description": "The destination airport code",
                        "example": "SYD",
                        "type": "string"
                    },
                    "flightNumber": {
                        "description": "The flight number",
                        "example": "BA98",
                        "type": "string"
                    },
                    "departureDate": {
                        "description": "The departure date",
                        "example": "2025-01-01",
                        "format": "date",
                        "type": "string"
                    },
                    "flightCarrierCode": {
                        "description": "The flight carrier code",
                        "example": "016",
                        "type": "string"
                    },
                    "segmentId": {
                        "description": "The trip segment ID",
                        "example": "1",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AuthenticationSettings": {
                "discriminator": {
                    "mapping": {
                        "SCAN_CODE": "#/components/schemas/ScanCodeAuthenticationSettings",
                        "EXTERNAL_3DS": "#/components/schemas/ThreeDSecureAuthenticationSettings",
                        "REDIRECT": "#/components/schemas/RedirectAuthenticationSettings"
                    },
                    "propertyName": "type"
                },
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "type"
                ],
                "type": "object"
            },
            "Challenge": {
                "description": "The 3DS authentication challenge details.",
                "properties": {
                    "preference": {
                        "description": "The 3DS authentication challenge initialization preference.",
                        "enum": [
                            "NO_PREFERENCE",
                            "NO_CHALLENGE_REQUESTED",
                            "CHALLENGE_REQUESTED",
                            "CHALLENGE_MANDATED",
                            "DATA_ONLY"
                        ],
                        "type": "string"
                    },
                    "outcome": {
                        "description": "The 3DS authentication challenge outcome.",
                        "enum": [
                            "CHALLENGE",
                            "FRICTIONLESS",
                            "DATA_ONLY"
                        ],
                        "type": "string"
                    },
                    "exemptionReason": {
                        "description": "The 3DS authentication challenge exemption reason.",
                        "enum": [
                            "LOW_VALUE",
                            "LOW_RISK",
                            "TRUSTED_BENEFICIARY",
                            "FIXED_RECURRING"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ConsumerWithCountry": {
                "description": "The consumer details.",
                "example": {
                    "country": "DE",
                    "taxIdentification": "798154336790",
                    "phone": "+491521111111",
                    "name": "John Smith",
                    "billingAddress": {
                        "firstName": "John",
                        "lastName": "Smith",
                        "country": "DE",
                        "phoneNumber": "01522113356",
                        "city": "Berlin",
                        "street": "Maple Street 102/B",
                        "postalCode": "41460",
                        "region": "Berlin"
                    },
                    "locale": "de-DE",
                    "merchantConsumerReference": "5c019979-0751-469e-96e0-b67f1d95c577",
                    "email": "johnsmith@example.com"
                },
                "properties": {
                    "name": {
                        "description": "The consumer name. This is a required field for a payment charge. If you already collect the consumer’s name in the checkout, it’s recommended to always use this parameter to avoid duplicate fields.",
                        "example": "John Smith",
                        "type": "string"
                    },
                    "email": {
                        "description": "The consumer email.",
                        "example": "johnsmith@example.com",
                        "type": "string"
                    },
                    "phone": {
                        "description": "The consumer phone number.",
                        "example": "+491521111111",
                        "type": "string"
                    },
                    "country": {
                        "description": "2-letter ISO code of the country where the payment instrument or account has been issued or established (for example GB, US, DE).",
                        "example": "DE",
                        "type": "string"
                    },
                    "locale": {
                        "description": "The locale describing the preferred language of the consumer",
                        "example": "de-DE",
                        "type": "string"
                    },
                    "taxIdentification": {
                        "description": "The consumer tax identification (Social security identification) eg.: CPF in Brazil, NISS in Portugal, etc.",
                        "example": "798154336790",
                        "type": "string"
                    },
                    "merchantConsumerReference": {
                        "description": "The merchant provided consumer reference.",
                        "example": "5c019979-0751-469e-96e0-b67f1d95c577",
                        "type": "string"
                    },
                    "billingAddress": {
                        "$ref": "#/components/schemas/Address"
                    }
                },
                "required": [
                    "country"
                ],
                "type": "object"
            },
            "CreationRequest": {
                "example": {
                    "amount": {
                        "currency": "EUR",
                        "type": "MAX",
                        "value": 1000
                    },
                    "endDate": "2023-11-27T09:30:00Z",
                    "recurring": false,
                    "merchantPaymentAgreementReference": "5c019979-0751-469e-96e0-b67f1d95c577",
                    "initialPaymentCharge": {
                        "amount": {
                            "currency": "EUR",
                            "value": 1000
                        },
                        "autoCapture": true,
                        "initiator": "MERCHANT",
                        "paymentDescriptor": "PPRO - ORDER 1234",
                        "merchantPaymentChargeReference": "5c019979-0751-469e-96e0-b67f1d95c577",
                        "webhooksUrl": "webhooksUrl"
                    },
                    "authenticationSettings": [
                        {
                            "settings": {
                                "returnUrl": "https://example.com/order_details?order_id=12345"
                            },
                            "type": "REDIRECT"
                        },
                        {
                            "settings": {
                                "returnUrl": "https://example.com/order_details?order_id=12345"
                            },
                            "type": "REDIRECT"
                        }
                    ],
                    "paymentDescriptor": "Acme - ORDER 1234",
                    "merchantPaymentChargeReference": "5c019979-0751-469e-96e0-b67f1d95c577",
                    "frequency": {
                        "interval": 3,
                        "type": "MONTHLY"
                    },
                    "consumer": {
                        "country": "DE",
                        "taxIdentification": "798154336790",
                        "phone": "+491521111111",
                        "name": "John Smith",
                        "billingAddress": {
                            "firstName": "John",
                            "lastName": "Smith",
                            "country": "DE",
                            "phoneNumber": "01522113356",
                            "city": "Berlin",
                            "street": "Maple Street 102/B",
                            "postalCode": "41460",
                            "region": "Berlin"
                        },
                        "locale": "de-DE",
                        "merchantConsumerReference": "5c019979-0751-469e-96e0-b67f1d95c577",
                        "email": "johnsmith@example.com"
                    },
                    "paymentAgreementId": "agr_FlTZQyHL4DeUYLYtXmOdq",
                    "startDate": "2023-03-26T20:24:27Z",
                    "webhooksUrl": "https://webhooks.example.com",
                    "order": {
                        "orderReferenceNumber": "orderReferenceNumber",
                        "shippingAddress": {
                            "firstName": "John",
                            "lastName": "Smith",
                            "country": "DE",
                            "phoneNumber": "01522113356",
                            "city": "Berlin",
                            "street": "Maple Street 102/B",
                            "postalCode": "41460",
                            "region": "Berlin"
                        },
                        "industryData": [
                            {
                                "details": {
                                    "passengerName": "John Doe",
                                    "passengerPhone": "14082319231",
                                    "pnr": "SKJ2NS01AS",
                                    "tripSegments": [
                                        {
                                            "destinationAirportCode": "SYD",
                                            "fareBasisCode": "YE3MGB",
                                            "segmentId": "1",
                                            "departureDate": "2025-01-01",
                                            "flightCarrierCode": "016",
                                            "departureAirportCode": "MAN",
                                            "flightNumber": "BA98"
                                        },
                                        {
                                            "destinationAirportCode": "SYD",
                                            "fareBasisCode": "YE3MGB",
                                            "segmentId": "1",
                                            "departureDate": "2025-01-01",
                                            "flightCarrierCode": "016",
                                            "departureAirportCode": "MAN",
                                            "flightNumber": "BA98"
                                        }
                                    ],
                                    "carrierCode": "016",
                                    "airlineCode": "016",
                                    "numberOfPassengers": 1,
                                    "passengerEmail": "john@gmail.com"
                                },
                                "type": "AIRLINE"
                            },
                            {
                                "details": {
                                    "passengerName": "John Doe",
                                    "passengerPhone": "14082319231",
                                    "pnr": "SKJ2NS01AS",
                                    "tripSegments": [
                                        {
                                            "destinationAirportCode": "SYD",
                                            "fareBasisCode": "YE3MGB",
                                            "segmentId": "1",
                                            "departureDate": "2025-01-01",
                                            "flightCarrierCode": "016",
                                            "departureAirportCode": "MAN",
                                            "flightNumber": "BA98"
                                        },
                                        {
                                            "destinationAirportCode": "SYD",
                                            "fareBasisCode": "YE3MGB",
                                            "segmentId": "1",
                                            "departureDate": "2025-01-01",
                                            "flightCarrierCode": "016",
                                            "departureAirportCode": "MAN",
                                            "flightNumber": "BA98"
                                        }
                                    ],
                                    "carrierCode": "016",
                                    "airlineCode": "016",
                                    "numberOfPassengers": 1,
                                    "passengerEmail": "john@gmail.com"
                                },
                                "type": "AIRLINE"
                            }
                        ],
                        "totalTaxAmount": 0,
                        "orderItems": [
                            {
                                "amount": 1000,
                                "quantity": 1,
                                "name": "White T-Shirt",
                                "sku": "LS123456789",
                                "category": "bicycle"
                            },
                            {
                                "amount": 1000,
                                "quantity": 1,
                                "name": "White T-Shirt",
                                "sku": "LS123456789",
                                "category": "bicycle"
                            }
                        ]
                    }
                },
                "properties": {
                    "amount": {
                        "$ref": "#/components/schemas/MoneyWithType"
                    },
                    "consumer": {
                        "$ref": "#/components/schemas/ConsumerWithCountry"
                    },
                    "recurring": {
                        "description": "Indicates whether this is a recurring payment which needs the creation of a payment-agreement.",
                        "example": false,
                        "type": "boolean"
                    },
                    "webhooksUrl": {
                        "description": "The URL to which the agreement state changes will be notified",
                        "example": "https://webhooks.example.com",
                        "pattern": "^(https)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]",
                        "type": "string"
                    },
                    "authenticationSettings": {
                        "items": {
                            "$ref": "#/components/schemas/CreationRequest_authenticationSettings_inner"
                        },
                        "type": "array"
                    },
                    "paymentDescriptor": {
                        "description": "The payment descriptor (arbitrary string). May be presented to the consumer.",
                        "example": "Acme - ORDER 1234",
                        "type": "string"
                    },
                    "merchantPaymentChargeReference": {
                        "description": "The merchant payment charge reference.",
                        "example": "5c019979-0751-469e-96e0-b67f1d95c577",
                        "type": "string"
                    },
                    "merchantPaymentAgreementReference": {
                        "description": "The merchant payment agreement reference.",
                        "example": "5c019979-0751-469e-96e0-b67f1d95c577",
                        "type": "string"
                    },
                    "paymentAgreementId": {
                        "description": "ID of an existing payment-agreement with the consumer",
                        "example": "agr_FlTZQyHL4DeUYLYtXmOdq",
                        "type": "string"
                    },
                    "order": {
                        "$ref": "#/components/schemas/Order"
                    },
                    "initialPaymentCharge": {
                        "$ref": "#/components/schemas/InitialPaymentCharge"
                    },
                    "frequency": {
                        "$ref": "#/components/schemas/Frequency"
                    },
                    "startDate": {
                        "description": "The start date of the agreement",
                        "example": "2023-03-26T20:24:27Z",
                        "format": "date-time",
                        "type": "string"
                    },
                    "endDate": {
                        "description": "The end date of the agreement",
                        "example": "2023-11-27T09:30:00Z",
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "amount",
                    "consumer",
                    "recurring"
                ],
                "type": "object"
            },
            "Frequency": {
                "example": {
                    "interval": 3,
                    "type": "MONTHLY"
                },
                "properties": {
                    "type": {
                        "description": "The type of frequency between consecutive payment charges.",
                        "enum": [
                            "DAILY",
                            "WEEKLY",
                            "MONTHLY",
                            "YEARLY",
                            "UNSCHEDULED"
                        ],
                        "example": "MONTHLY",
                        "type": "string"
                    },
                    "interval": {
                        "default": 1,
                        "description": "The interval between consecutive payment charges. The unit of the interval depends on the frequency type. For example, if type is MONTHLY and interval is 3, it means every 3 months.",
                        "example": 3,
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer"
                    }
                },
                "required": [
                    "type"
                ],
                "type": "object"
            },
            "IndustryData": {
                "description": "The list of industry specific data.",
                "discriminator": {
                    "propertyName": "type"
                },
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "type"
                ],
                "type": "object"
            },
            "InitialPaymentCharge": {
                "description": "An initial payment charge to be created when initializing the agreement in a \"link and pay\" journey",
                "example": {
                    "amount": {
                        "currency": "EUR",
                        "value": 1000
                    },
                    "autoCapture": true,
                    "initiator": "MERCHANT",
                    "paymentDescriptor": "PPRO - ORDER 1234",
                    "merchantPaymentChargeReference": "5c019979-0751-469e-96e0-b67f1d95c577",
                    "webhooksUrl": "webhooksUrl"
                },
                "properties": {
                    "initiator": {
                        "description": "The charge initiator",
                        "enum": [
                            "MERCHANT",
                            "CONSUMER"
                        ],
                        "type": "string"
                    },
                    "paymentDescriptor": {
                        "description": "The transaction descriptor (arbitrary string). May be presented to the consumer.",
                        "example": "PPRO - ORDER 1234",
                        "type": "string"
                    },
                    "amount": {
                        "$ref": "#/components/schemas/Money"
                    },
                    "autoCapture": {
                        "description": "Indicates whether the payment charge should be automatically captured after a successful authorization.",
                        "example": true,
                        "type": "boolean"
                    },
                    "merchantPaymentChargeReference": {
                        "description": "The merchant payment charge reference. Aka, Transaction Reference.",
                        "example": "5c019979-0751-469e-96e0-b67f1d95c577",
                        "type": "string"
                    },
                    "webhooksUrl": {
                        "description": "The URL to which the payment charge state changes will be notified",
                        "pattern": "^(https)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]",
                        "type": "string"
                    }
                },
                "required": [
                    "amount",
                    "autoCapture"
                ],
                "type": "object"
            },
            "Money": {
                "description": "The amount to be authorized.",
                "example": {
                    "currency": "EUR",
                    "value": 1000
                },
                "properties": {
                    "value": {
                        "description": "The amount in currency's smallest unit.",
                        "example": 1000,
                        "format": "int64",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "ISO 4217 3-letter currency code.",
                        "example": "EUR",
                        "maxLength": 3,
                        "minLength": 3,
                        "type": "string"
                    }
                },
                "required": [
                    "currency",
                    "value"
                ],
                "type": "object"
            },
            "MoneyWithType": {
                "description": "The amount to be authorized.",
                "example": {
                    "currency": "EUR",
                    "type": "MAX",
                    "value": 1000
                },
                "properties": {
                    "value": {
                        "description": "The amount in currency's smallest unit.",
                        "example": 1000,
                        "format": "int64",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "ISO 4217 3-letter currency code.",
                        "example": "EUR",
                        "maxLength": 3,
                        "minLength": 3,
                        "type": "string"
                    },
                    "type": {
                        "description": "Defines if the provided 'amount' is a maximum value or an exact value. This field is relevant only for recurring payments.",
                        "enum": [
                            "MAX",
                            "EXACT"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "currency",
                    "value"
                ],
                "type": "object"
            },
            "Order": {
                "description": "The order details.",
                "example": {
                    "orderReferenceNumber": "orderReferenceNumber",
                    "shippingAddress": {
                        "firstName": "John",
                        "lastName": "Smith",
                        "country": "DE",
                        "phoneNumber": "01522113356",
                        "city": "Berlin",
                        "street": "Maple Street 102/B",
                        "postalCode": "41460",
                        "region": "Berlin"
                    },
                    "industryData": [
                        {
                            "details": {
                                "passengerName": "John Doe",
                                "passengerPhone": "14082319231",
                                "pnr": "SKJ2NS01AS",
                                "tripSegments": [
                                    {
                                        "destinationAirportCode": "SYD",
                                        "fareBasisCode": "YE3MGB",
                                        "segmentId": "1",
                                        "departureDate": "2025-01-01",
                                        "flightCarrierCode": "016",
                                        "departureAirportCode": "MAN",
                                        "flightNumber": "BA98"
                                    },
                                    {
                                        "destinationAirportCode": "SYD",
                                        "fareBasisCode": "YE3MGB",
                                        "segmentId": "1",
                                        "departureDate": "2025-01-01",
                                        "flightCarrierCode": "016",
                                        "departureAirportCode": "MAN",
                                        "flightNumber": "BA98"
                                    }
                                ],
                                "carrierCode": "016",
                                "airlineCode": "016",
                                "numberOfPassengers": 1,
                                "passengerEmail": "john@gmail.com"
                            },
                            "type": "AIRLINE"
                        },
                        {
                            "details": {
                                "passengerName": "John Doe",
                                "passengerPhone": "14082319231",
                                "pnr": "SKJ2NS01AS",
                                "tripSegments": [
                                    {
                                        "destinationAirportCode": "SYD",
                                        "fareBasisCode": "YE3MGB",
                                        "segmentId": "1",
                                        "departureDate": "2025-01-01",
                                        "flightCarrierCode": "016",
                                        "departureAirportCode": "MAN",
                                        "flightNumber": "BA98"
                                    },
                                    {
                                        "destinationAirportCode": "SYD",
                                        "fareBasisCode": "YE3MGB",
                                        "segmentId": "1",
                                        "departureDate": "2025-01-01",
                                        "flightCarrierCode": "016",
                                        "departureAirportCode": "MAN",
                                        "flightNumber": "BA98"
                                    }
                                ],
                                "carrierCode": "016",
                                "airlineCode": "016",
                                "numberOfPassengers": 1,
                                "passengerEmail": "john@gmail.com"
                            },
                            "type": "AIRLINE"
                        }
                    ],
                    "totalTaxAmount": 0,
                    "orderItems": [
                        {
                            "amount": 1000,
                            "quantity": 1,
                            "name": "White T-Shirt",
                            "sku": "LS123456789",
                            "category": "bicycle"
                        },
                        {
                            "amount": 1000,
                            "quantity": 1,
                            "name": "White T-Shirt",
                            "sku": "LS123456789",
                            "category": "bicycle"
                        }
                    ]
                },
                "properties": {
                    "orderItems": {
                        "description": "The list of order items.",
                        "items": {
                            "$ref": "#/components/schemas/OrderItem"
                        },
                        "type": "array"
                    },
                    "shippingAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "industryData": {
                        "description": "The list of industry specific data.",
                        "items": {
                            "$ref": "#/components/schemas/Order_industryData_inner"
                        },
                        "type": "array"
                    },
                    "orderReferenceNumber": {
                        "description": "The merchant's internal order reference (if different from merchantPaymentChargeReference)",
                        "type": "string"
                    },
                    "totalTaxAmount": {
                        "description": "The total tax value paid by the consumer for the order (in same currency units as specified by amount.currency)",
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "OrderItem": {
                "description": "The list of order items.",
                "example": {
                    "amount": 1000,
                    "quantity": 1,
                    "name": "White T-Shirt",
                    "sku": "LS123456789",
                    "category": "bicycle"
                },
                "properties": {
                    "sku": {
                        "description": "The order item SKU.",
                        "example": "LS123456789",
                        "type": "string"
                    },
                    "category": {
                        "description": "The order item category.",
                        "example": "bicycle",
                        "type": "string"
                    },
                    "name": {
                        "description": "The order item name.",
                        "example": "White T-Shirt",
                        "type": "string"
                    },
                    "quantity": {
                        "description": "The order item quantity.",
                        "example": 1,
                        "format": "int32",
                        "type": "integer"
                    },
                    "amount": {
                        "description": "The amount to pay for each individual item in the payment charge currency's smallest unit.",
                        "example": 1000,
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "required": [
                    "amount",
                    "name",
                    "quantity"
                ],
                "type": "object"
            },
            "RedirectAuthenticationSettings": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AuthenticationSettings"
                    },
                    {
                        "properties": {
                            "settings": {
                                "$ref": "#/components/schemas/RedirectAuthenticationSettingsDetails"
                            },
                            "type": {
                                "description": "The REDIRECT authentication type settings.",
                                "enum": [
                                    "REDIRECT"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "example": {
                    "settings": {
                        "returnUrl": "https://example.com/order_details?order_id=12345"
                    },
                    "type": "REDIRECT"
                },
                "type": "object"
            },
            "RedirectAuthenticationSettingsDetails": {
                "description": "The REDIRECT authentication settings.",
                "example": {
                    "returnUrl": "https://example.com/order_details?order_id=12345"
                },
                "properties": {
                    "returnUrl": {
                        "description": "The page where the consumer should be redirected to after the payment succeeds.",
                        "example": "https://example.com/order_details?order_id=12345",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ScanCodeAuthenticationSettings": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AuthenticationSettings"
                    },
                    {
                        "properties": {
                            "settings": {
                                "$ref": "#/components/schemas/ScanCodeAuthenticationSettingsDetails"
                            },
                            "type": {
                                "description": "The SCAN_CODE authentication type.",
                                "enum": [
                                    "SCAN_CODE"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "type": "object"
            },
            "ScanCodeAuthenticationSettingsDetails": {
                "description": "The SCAN_CODE authentication details.",
                "properties": {
                    "scanBy": {
                        "description": "Custom expiry date in ISO 8601 format.",
                        "example": "2022-11-03T11:23:47.123Z",
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ThreeDSecure": {
                "description": "The EXTERNAL_3DS authentication settings.",
                "properties": {
                    "authenticationStatus": {
                        "description": "The 3DS authentication status code.",
                        "enum": [
                            "SUCCESS",
                            "ATTEMPT_ACKNOWLEDGED",
                            "FAILED",
                            "AUTHENTICATION_UNAVAILABLE"
                        ],
                        "type": "string"
                    },
                    "authenticationValue": {
                        "description": "The 3DS authentication CAVV.",
                        "type": "string"
                    },
                    "eci": {
                        "description": "The 3DS authentication ECI.",
                        "type": "string"
                    },
                    "version": {
                        "description": "The 3DS authentication version.",
                        "type": "string"
                    },
                    "externalId": {
                        "description": "The 3DS authentication transaction identifier.",
                        "type": "string"
                    },
                    "challenge": {
                        "$ref": "#/components/schemas/Challenge"
                    }
                },
                "type": "object"
            },
            "ThreeDSecureAuthenticationSettings": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AuthenticationSettings"
                    },
                    {
                        "properties": {
                            "settings": {
                                "$ref": "#/components/schemas/ThreeDSecure"
                            },
                            "type": {
                                "description": "The EXTERNAL_3DS authentication type settings.",
                                "enum": [
                                    "EXTERNAL_3DS"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "type": "object"
            },
            "ExceptionResponseBody": {
                "example": {
                    "extensions": {
                        "key": "{}"
                    },
                    "failureMessage": "failureMessage",
                    "status": 0,
                    "timestamp": "2000-01-23T04:56:07.000+00:00"
                },
                "properties": {
                    "status": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "failureMessage": {
                        "type": "string"
                    },
                    "timestamp": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "extensions": {
                        "additionalProperties": {
                            "type": "object"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Consumer": {
                "description": "The consumer details.",
                "example": {
                    "country": "DE",
                    "taxIdentification": "798154336790",
                    "phone": "+491521111111",
                    "name": "John Smith",
                    "billingAddress": {
                        "firstName": "John",
                        "lastName": "Smith",
                        "country": "DE",
                        "phoneNumber": "01522113356",
                        "city": "Berlin",
                        "street": "Maple Street 102/B",
                        "postalCode": "41460",
                        "region": "Berlin"
                    },
                    "locale": "de-DE",
                    "merchantConsumerReference": "5c019979-0751-469e-96e0-b67f1d95c577",
                    "email": "johnsmith@example.com"
                },
                "properties": {
                    "name": {
                        "description": "The consumer name.",
                        "example": "John Smith",
                        "type": "string"
                    },
                    "email": {
                        "description": "The consumer email.",
                        "example": "johnsmith@example.com",
                        "type": "string"
                    },
                    "phone": {
                        "description": "The consumer phone number.",
                        "example": "+491521111111",
                        "type": "string"
                    },
                    "country": {
                        "description": "2-letter ISO code of the country where the payment instrument or account has been issued or established (for example GB, US, DE).",
                        "example": "DE",
                        "type": "string"
                    },
                    "locale": {
                        "description": "The locale describing the preferred language of the consumer",
                        "example": "de-DE",
                        "type": "string"
                    },
                    "taxIdentification": {
                        "description": "The consumer tax identification (Social security identification) eg.: CPF in Brazil, NISS in Portugal, etc.",
                        "example": "798154336790",
                        "type": "string"
                    },
                    "merchantConsumerReference": {
                        "description": "The merchant provided consumer reference.",
                        "example": "5c019979-0751-469e-96e0-b67f1d95c577",
                        "type": "string"
                    },
                    "billingAddress": {
                        "$ref": "#/components/schemas/Address"
                    }
                },
                "type": "object"
            },
            "CreationResponse": {
                "example": {
                    "createdAt": "2022-11-03T11:23:47.123Z",
                    "amount": {
                        "currency": "EUR",
                        "value": 1000
                    },
                    "recurring": false,
                    "hasInitialPaymentCharge": false,
                    "id": "sess_FlTZQyHL4DeUYLYtXmOdq",
                    "consumer": {
                        "country": "DE",
                        "taxIdentification": "798154336790",
                        "phone": "+491521111111",
                        "name": "John Smith",
                        "billingAddress": {
                            "firstName": "John",
                            "lastName": "Smith",
                            "country": "DE",
                            "phoneNumber": "01522113356",
                            "city": "Berlin",
                            "street": "Maple Street 102/B",
                            "postalCode": "41460",
                            "region": "Berlin"
                        },
                        "locale": "de-DE",
                        "merchantConsumerReference": "5c019979-0751-469e-96e0-b67f1d95c577",
                        "email": "johnsmith@example.com"
                    },
                    "recommendedPaymentMethods": "2022-11-03T11:23:47.123Z",
                    "expiresAt": "2022-11-03T11:23:47.123Z",
                    "status": "INITIATED"
                },
                "properties": {
                    "id": {
                        "description": "The payment session ID",
                        "example": "sess_FlTZQyHL4DeUYLYtXmOdq",
                        "type": "string"
                    },
                    "status": {
                        "description": "The payment-session status",
                        "enum": [
                            "INITIATED",
                            "AUTHORIZING_INFLIGHT",
                            "AUTHENTICATION_PENDING",
                            "SUCCEEDED",
                            "FAILED",
                            "EXPIRED",
                            "REUSE_LIMIT_EXCEEDED"
                        ],
                        "type": "string"
                    },
                    "amount": {
                        "$ref": "#/components/schemas/Money"
                    },
                    "recurring": {
                        "description": "Indicates whether this is a recurring payment.",
                        "example": false,
                        "type": "boolean"
                    },
                    "consumer": {
                        "$ref": "#/components/schemas/Consumer"
                    },
                    "hasInitialPaymentCharge": {
                        "description": "Indicates whether this has an initialPaymentCharge set.",
                        "example": false,
                        "type": "boolean"
                    },
                    "recommendedPaymentMethods": {
                        "description": "List of recommended payment methods",
                        "example": "2022-11-03T11:23:47.123Z",
                        "items": {
                            "description": "List of recommended payment methods",
                            "example": "2022-11-03T11:23:47.123Z",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "expiresAt": {
                        "description": "The payment session expiry timestamp in ISO 8601 format.",
                        "example": "2022-11-03T11:23:47.123Z",
                        "format": "date-time",
                        "type": "string"
                    },
                    "createdAt": {
                        "description": "The payment session creation timestamp in ISO 8601 format.",
                        "example": "2022-11-03T11:23:47.123Z",
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "recurring"
                ],
                "type": "object"
            },
            "AuthorizationRequest": {
                "example": {
                    "amount": {
                        "currency": "EUR",
                        "type": "MAX",
                        "value": 1000
                    },
                    "paymentMethod": "PAYPAL",
                    "initialPaymentCharge": {
                        "amount": {
                            "currency": "EUR",
                            "value": 1000
                        },
                        "autoCapture": true,
                        "initiator": "MERCHANT",
                        "paymentDescriptor": "PPRO - ORDER 1234",
                        "merchantPaymentChargeReference": "5c019979-0751-469e-96e0-b67f1d95c577",
                        "webhooksUrl": "webhooksUrl"
                    },
                    "instrument": {
                        "details": {
                            "bankCode": "12341234",
                            "holderName": "John Doe",
                            "iban": "DE75512108001245126199",
                            "debitMandateId": "debitMandateId",
                            "swiftCode": "DEUTDEFF123",
                            "bankName": "My Bank",
                            "accountNumber": "007123456"
                        },
                        "type": "BANK_ACCOUNT"
                    },
                    "consumer": {
                        "country": "DE",
                        "taxIdentification": "798154336790",
                        "phone": "+491521111111",
                        "name": "John Smith",
                        "billingAddress": {
                            "firstName": "John",
                            "lastName": "Smith",
                            "country": "DE",
                            "phoneNumber": "01522113356",
                            "city": "Berlin",
                            "street": "Maple Street 102/B",
                            "postalCode": "41460",
                            "region": "Berlin"
                        },
                        "locale": "de-DE",
                        "merchantConsumerReference": "5c019979-0751-469e-96e0-b67f1d95c577",
                        "email": "johnsmith@example.com"
                    }
                },
                "properties": {
                    "paymentMethod": {
                        "description": "The payment method which should be used to process the payment.",
                        "example": "PAYPAL",
                        "type": "string"
                    },
                    "consumer": {
                        "$ref": "#/components/schemas/Consumer"
                    },
                    "amount": {
                        "$ref": "#/components/schemas/MoneyWithType"
                    },
                    "initialPaymentCharge": {
                        "$ref": "#/components/schemas/InitialPaymentCharge"
                    },
                    "instrument": {
                        "$ref": "#/components/schemas/AuthorizationRequest_instrument"
                    }
                },
                "required": [
                    "paymentMethod"
                ],
                "type": "object"
            },
            "BankAccountDetails": {
                "description": "The bank account details",
                "example": {
                    "bankCode": "12341234",
                    "holderName": "John Doe",
                    "iban": "DE75512108001245126199",
                    "debitMandateId": "debitMandateId",
                    "swiftCode": "DEUTDEFF123",
                    "bankName": "My Bank",
                    "accountNumber": "007123456"
                },
                "properties": {
                    "accountNumber": {
                        "description": "The account number.",
                        "example": "007123456",
                        "type": "string"
                    },
                    "holderName": {
                        "description": "The account holder name.",
                        "example": "John Doe",
                        "type": "string"
                    },
                    "iban": {
                        "description": "The IBAN.",
                        "example": "DE75512108001245126199",
                        "type": "string"
                    },
                    "swiftCode": {
                        "description": "The SWIFT code.",
                        "example": "DEUTDEFF123",
                        "type": "string"
                    },
                    "bankName": {
                        "description": "The bank name.",
                        "example": "My Bank",
                        "type": "string"
                    },
                    "bankCode": {
                        "description": "The bank code.",
                        "example": "12341234",
                        "type": "string"
                    },
                    "debitMandateId": {
                        "description": "The reference id for a mandate that allows debit charges on the bank account.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BankAccountInstrument": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PaymentInstrument"
                    },
                    {
                        "properties": {
                            "details": {
                                "$ref": "#/components/schemas/BankAccountDetails"
                            },
                            "type": {
                                "description": "The BANK_ACCOUNT payment instrument type",
                                "enum": [
                                    "BANK_ACCOUNT"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "example": {
                    "details": {
                        "bankCode": "12341234",
                        "holderName": "John Doe",
                        "iban": "DE75512108001245126199",
                        "debitMandateId": "debitMandateId",
                        "swiftCode": "DEUTDEFF123",
                        "bankName": "My Bank",
                        "accountNumber": "007123456"
                    },
                    "type": "BANK_ACCOUNT"
                },
                "required": [
                    "details"
                ],
                "type": "object"
            },
            "PaymentInstrument": {
                "description": "The payment instrument. This field is required for a subset of PPRO's supported payment methods.",
                "discriminator": {
                    "mapping": {
                        "PAYPAL_ACCOUNT": "#/components/schemas/PaypalAccountInstrument",
                        "BANK_ACCOUNT": "#/components/schemas/BankAccountInstrument"
                    },
                    "propertyName": "type"
                },
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "type"
                ],
                "type": "object"
            },
            "PaypalAccountDetails": {
                "description": "The PayPal account details",
                "properties": {
                    "paypalAccountId": {
                        "description": "PayPal Account Identifier",
                        "example": "HI8kcoMlRicmvRKYHHJjw",
                        "type": "string"
                    }
                },
                "required": [
                    "paypalAccountId"
                ],
                "type": "object"
            },
            "PaypalAccountInstrument": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PaymentInstrument"
                    },
                    {
                        "properties": {
                            "details": {
                                "$ref": "#/components/schemas/PaypalAccountDetails"
                            },
                            "type": {
                                "description": "The PAYPAL_ACCOUNT payment instrument type",
                                "enum": [
                                    "PAYPAL_ACCOUNT"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "required": [
                    "details"
                ],
                "type": "object"
            },
            "AppIntentAuthenticationDetails": {
                "description": "The APP_INTENT authentication details.",
                "example": {
                    "mobileIntentUri": "upiGlobal://pay?tr=123&from_app=true"
                },
                "properties": {
                    "mobileIntentUri": {
                        "description": "Intent URI to be used for app-to-app mobile flows.",
                        "example": "upiGlobal://pay?tr=123&from_app=true",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AppIntentAuthenticationMethod": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AuthenticationMethod"
                    },
                    {
                        "properties": {
                            "type": {
                                "description": "The APP_INTENT authentication type.",
                                "enum": [
                                    "APP_INTENT"
                                ],
                                "type": "string"
                            },
                            "details": {
                                "$ref": "#/components/schemas/AppIntentAuthenticationDetails"
                            }
                        },
                        "type": "object"
                    }
                ],
                "example": {
                    "details": {
                        "mobileIntentUri": "upiGlobal://pay?tr=123&from_app=true"
                    },
                    "type": "APP_INTENT"
                },
                "type": "object"
            },
            "AuthenticationMethod": {
                "description": "The available authentication methods for the authorization.",
                "discriminator": {
                    "mapping": {
                        "APP_INTENT": "#/components/schemas/AppIntentAuthenticationMethod",
                        "SCAN_CODE": "#/components/schemas/ScanCodeAuthenticationMethod",
                        "REDIRECT": "#/components/schemas/RedirectAuthenticationMethod"
                    },
                    "propertyName": "type"
                },
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "type"
                ],
                "type": "object"
            },
            "AuthorizationResponse": {
                "example": {
                    "data": {
                        "instrumentId": "instrumentId",
                        "id": "charge_HsLB04iFFsr9tvWcjNPqW",
                        "type": "CHARGE",
                        "initialPaymentChargeId": "initialPaymentChargeId",
                        "status": "CAPTURED"
                    },
                    "authenticationMethods": [
                        {
                            "details": {
                                "mobileIntentUri": "upiGlobal://pay?tr=123&from_app=true"
                            },
                            "type": "APP_INTENT"
                        },
                        {
                            "details": {
                                "mobileIntentUri": "upiGlobal://pay?tr=123&from_app=true"
                            },
                            "type": "APP_INTENT"
                        }
                    ],
                    "failure": {
                        "failureCode": "failureCode",
                        "providerFailureCode": "providerFailureCode",
                        "failureType": "INTERNAL_ERROR",
                        "failureMessage": "failureMessage"
                    },
                    "id": "5c019979-0751-469e-96e0-b67f1d95c577",
                    "status": "SUCCEEDED"
                },
                "properties": {
                    "id": {
                        "description": "The id of instance of payment type",
                        "example": "5c019979-0751-469e-96e0-b67f1d95c577",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of payment session",
                        "enum": [
                            "INITIATED",
                            "AUTHORIZING_INFLIGHT",
                            "AUTHENTICATION_PENDING",
                            "SUCCEEDED",
                            "FAILED",
                            "EXPIRED",
                            "REUSE_LIMIT_EXCEEDED"
                        ],
                        "example": "SUCCEEDED",
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/AuthorizationResponse_data"
                    },
                    "authenticationMethods": {
                        "description": "The available authentication methods for the authorization.",
                        "items": {
                            "$ref": "#/components/schemas/AuthorizationResponse_authenticationMethods_inner"
                        },
                        "type": "array"
                    },
                    "failure": {
                        "$ref": "#/components/schemas/ProcessingFailure"
                    }
                },
                "type": "object"
            },
            "PaymentAgreementDetails": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PaymentObjectDetails"
                    },
                    {
                        "properties": {
                            "initialPaymentChargeId": {
                                "description": "The payment charge ID of the initial charge generated by the agreement",
                                "type": "string"
                            },
                            "instrumentId": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "example": {
                    "instrumentId": "instrumentId",
                    "id": "charge_HsLB04iFFsr9tvWcjNPqW",
                    "type": "CHARGE",
                    "initialPaymentChargeId": "initialPaymentChargeId",
                    "status": "CAPTURED"
                },
                "required": [
                    "id",
                    "status"
                ],
                "type": "object"
            },
            "PaymentChargeDetails": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PaymentObjectDetails"
                    }
                ],
                "required": [
                    "id",
                    "status"
                ],
                "type": "object"
            },
            "PaymentObjectDetails": {
                "description": "The authorization details. ",
                "discriminator": {
                    "propertyName": "type"
                },
                "properties": {
                    "type": {
                        "description": "The underlying payment type",
                        "enum": [
                            "CHARGE",
                            "AGREEMENT"
                        ],
                        "example": "CHARGE",
                        "type": "string"
                    },
                    "id": {
                        "description": "The id of the instance of underlying payment type",
                        "example": "charge_HsLB04iFFsr9tvWcjNPqW",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the instance of underlying payment type",
                        "example": "CAPTURED",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "status"
                ],
                "type": "object"
            },
            "ProcessingFailure": {
                "description": "Payment session authorization error message",
                "example": {
                    "failureCode": "failureCode",
                    "providerFailureCode": "providerFailureCode",
                    "failureType": "INTERNAL_ERROR",
                    "failureMessage": "failureMessage"
                },
                "properties": {
                    "failureType": {
                        "description": "The failure type.",
                        "enum": [
                            "INTERNAL_ERROR",
                            "INTERNAL_DECLINE",
                            "PROVIDER_ERROR",
                            "PROVIDER_DECLINE"
                        ],
                        "type": "string"
                    },
                    "failureCode": {
                        "description": "The failure code.",
                        "type": "string"
                    },
                    "providerFailureCode": {
                        "description": "The payment provider failure code.",
                        "type": "string"
                    },
                    "failureMessage": {
                        "description": "The failure message.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RedirectAuthenticationDetails": {
                "description": "The REDIRECT authentication details.",
                "properties": {
                    "requestUrl": {
                        "description": "The URL where the consumer should be redirected in order to authenticate the payment.",
                        "example": "https://pay.playground.klarna.com/eu/hpp/payments/123abc",
                        "type": "string"
                    },
                    "requestMethod": {
                        "description": "The redirect HTTP method.",
                        "enum": [
                            "GET",
                            "POST"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RedirectAuthenticationMethod": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AuthenticationMethod"
                    },
                    {
                        "properties": {
                            "type": {
                                "description": "The REDIRECT authentication type.",
                                "enum": [
                                    "REDIRECT"
                                ],
                                "type": "string"
                            },
                            "details": {
                                "$ref": "#/components/schemas/RedirectAuthenticationDetails"
                            }
                        },
                        "type": "object"
                    }
                ],
                "type": "object"
            },
            "ScanCodeAuthenticationDetails": {
                "description": "The SCAN_CODE authentication details.",
                "properties": {
                    "codeType": {
                        "description": "The Scan Code type selected.",
                        "enum": [
                            "QR",
                            "UPC",
                            "ITF",
                            "CODE128"
                        ],
                        "type": "string"
                    },
                    "codeImage": {
                        "description": "An already-rendered Scan Code image for ease of integration.",
                        "example": "https://authman-mobileapp.ppro.com/qr.png?payload=dXBpR2xvYmFsOi8vc3RhcnRfdHJhbnNhY3Rpb24/dHI9MTIzJmZyb21fcXI9dHJ1ZQ==",
                        "type": "string"
                    },
                    "codePayload": {
                        "description": "The Scan Code payload to construct the image on the partner side.",
                        "example": "upiGlobal://pay?tr=123&from_desktop=true",
                        "type": "string"
                    },
                    "codeDocument": {
                        "description": "The url to a pdf/html payslip document.",
                        "example": "https://urltodocument.com",
                        "type": "string"
                    },
                    "scanBy": {
                        "description": "The custom expiry timestamp for paying in ISO 8601 format.",
                        "example": "2022-11-03T11:23:47.123Z",
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ScanCodeAuthenticationMethod": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AuthenticationMethod"
                    },
                    {
                        "properties": {
                            "type": {
                                "description": "The SCAN_CODE authentication type.",
                                "enum": [
                                    "SCAN_CODE"
                                ],
                                "type": "string"
                            },
                            "details": {
                                "$ref": "#/components/schemas/ScanCodeAuthenticationDetails"
                            }
                        },
                        "type": "object"
                    }
                ],
                "type": "object"
            },
            "AgreementAuthorizationResponse": {
                "description": "Underlying payment-agreement",
                "example": {
                    "amountType": "MAX",
                    "amount": {
                        "currency": "EUR",
                        "value": 1000
                    },
                    "endDate": "2000-01-23T04:56:07.000+00:00",
                    "instrumentId": "instrumentId",
                    "description": "description",
                    "frequency": {
                        "interval": 3,
                        "type": "MONTHLY"
                    },
                    "createdAt": "2000-01-23T04:56:07.000+00:00",
                    "authenticationMethods": [
                        null,
                        null
                    ],
                    "failure": {
                        "failureCode": "failureCode",
                        "providerFailureCode": "providerFailureCode",
                        "failureType": "INTERNAL_ERROR",
                        "failureMessage": "failureMessage"
                    },
                    "paymentMethod": "paymentMethod",
                    "id": "id",
                    "startDate": "2000-01-23T04:56:07.000+00:00",
                    "consumer": {
                        "country": "DE",
                        "taxIdentification": "798154336790",
                        "phone": "+491521111111",
                        "name": "John Smith",
                        "billingAddress": {
                            "firstName": "John",
                            "lastName": "Smith",
                            "country": "DE",
                            "phoneNumber": "01522113356",
                            "city": "Berlin",
                            "street": "Maple Street 102/B",
                            "postalCode": "41460",
                            "region": "Berlin"
                        },
                        "locale": "de-DE",
                        "merchantConsumerReference": "5c019979-0751-469e-96e0-b67f1d95c577",
                        "email": "johnsmith@example.com"
                    },
                    "initialPaymentChargeId": "initialPaymentChargeId",
                    "status": "INITIALIZING",
                    "updatedAt": "2000-01-23T04:56:07.000+00:00"
                },
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "status": {
                        "enum": [
                            "INITIALIZING",
                            "AUTHENTICATION_PENDING",
                            "ACTIVE",
                            "REVOKED_BY_CONSUMER",
                            "PROVIDER_CONFIRMATION_ASYNC",
                            "FAILED"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "paymentMethod": {
                        "type": "string"
                    },
                    "frequency": {
                        "$ref": "#/components/schemas/Frequency"
                    },
                    "startDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "endDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "amount": {
                        "$ref": "#/components/schemas/Money"
                    },
                    "instrumentId": {
                        "type": "string"
                    },
                    "amountType": {
                        "enum": [
                            "MAX",
                            "EXACT"
                        ],
                        "type": "string"
                    },
                    "consumer": {
                        "$ref": "#/components/schemas/Consumer"
                    },
                    "authenticationMethods": {
                        "items": {
                            "$ref": "#/components/schemas/AuthorizationResponse_authenticationMethods_inner"
                        },
                        "type": "array"
                    },
                    "initialPaymentChargeId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "failure": {
                        "$ref": "#/components/schemas/ProcessingFailure"
                    }
                },
                "type": "object"
            },
            "ChargeAuthorizationResponse": {
                "description": "Underlying payment-charge",
                "example": {
                    "country": "country",
                    "createdAt": "2000-01-23T04:56:07.000+00:00",
                    "authenticationMethods": [
                        {
                            "details": {
                                "mobileIntentUri": "upiGlobal://pay?tr=123&from_app=true"
                            },
                            "type": "APP_INTENT"
                        },
                        {
                            "details": {
                                "mobileIntentUri": "upiGlobal://pay?tr=123&from_app=true"
                            },
                            "type": "APP_INTENT"
                        }
                    ],
                    "failure": {
                        "failureCode": "failureCode",
                        "providerFailureCode": "providerFailureCode",
                        "failureType": "INTERNAL_ERROR",
                        "failureMessage": "failureMessage"
                    },
                    "paymentMethod": "paymentMethod",
                    "currency": "currency",
                    "id": "id",
                    "paymentDescriptor": "paymentDescriptor",
                    "status": "AUTHORIZATION_PROCESSING",
                    "updatedAt": "2000-01-23T04:56:07.000+00:00"
                },
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "paymentMethod": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "paymentDescriptor": {
                        "type": "string"
                    },
                    "status": {
                        "enum": [
                            "AUTHORIZATION_PROCESSING",
                            "AUTHORIZATION_ASYNC",
                            "AUTHENTICATION_PENDING",
                            "CAPTURE_PENDING",
                            "CAPTURE_PROCESSING",
                            "CAPTURED",
                            "REFUND_PROCESSING",
                            "REFUNDED",
                            "VOID_PROCESSING",
                            "VOIDED",
                            "FAILED"
                        ],
                        "type": "string"
                    },
                    "authenticationMethods": {
                        "items": {
                            "$ref": "#/components/schemas/AuthorizationResponse_authenticationMethods_inner"
                        },
                        "type": "array"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "failure": {
                        "$ref": "#/components/schemas/ProcessingFailure"
                    }
                },
                "type": "object"
            },
            "FetchResponse": {
                "example": {
                    "createdAt": "2022-11-03T11:23:47.123Z",
                    "amount": {
                        "currency": "EUR",
                        "value": 1000
                    },
                    "paymentAgreement": {
                        "amountType": "MAX",
                        "amount": {
                            "currency": "EUR",
                            "value": 1000
                        },
                        "endDate": "2000-01-23T04:56:07.000+00:00",
                        "instrumentId": "instrumentId",
                        "description": "description",
                        "frequency": {
                            "interval": 3,
                            "type": "MONTHLY"
                        },
                        "createdAt": "2000-01-23T04:56:07.000+00:00",
                        "authenticationMethods": [
                            null,
                            null
                        ],
                        "failure": {
                            "failureCode": "failureCode",
                            "providerFailureCode": "providerFailureCode",
                            "failureType": "INTERNAL_ERROR",
                            "failureMessage": "failureMessage"
                        },
                        "paymentMethod": "paymentMethod",
                        "id": "id",
                        "startDate": "2000-01-23T04:56:07.000+00:00",
                        "consumer": {
                            "country": "DE",
                            "taxIdentification": "798154336790",
                            "phone": "+491521111111",
                            "name": "John Smith",
                            "billingAddress": {
                                "firstName": "John",
                                "lastName": "Smith",
                                "country": "DE",
                                "phoneNumber": "01522113356",
                                "city": "Berlin",
                                "street": "Maple Street 102/B",
                                "postalCode": "41460",
                                "region": "Berlin"
                            },
                            "locale": "de-DE",
                            "merchantConsumerReference": "5c019979-0751-469e-96e0-b67f1d95c577",
                            "email": "johnsmith@example.com"
                        },
                        "initialPaymentChargeId": "initialPaymentChargeId",
                        "status": "INITIALIZING",
                        "updatedAt": "2000-01-23T04:56:07.000+00:00"
                    },
                    "recurring": true,
                    "paymentCharge": {
                        "country": "country",
                        "createdAt": "2000-01-23T04:56:07.000+00:00",
                        "authenticationMethods": [
                            {
                                "details": {
                                    "mobileIntentUri": "upiGlobal://pay?tr=123&from_app=true"
                                },
                                "type": "APP_INTENT"
                            },
                            {
                                "details": {
                                    "mobileIntentUri": "upiGlobal://pay?tr=123&from_app=true"
                                },
                                "type": "APP_INTENT"
                            }
                        ],
                        "failure": {
                            "failureCode": "failureCode",
                            "providerFailureCode": "providerFailureCode",
                            "failureType": "INTERNAL_ERROR",
                            "failureMessage": "failureMessage"
                        },
                        "paymentMethod": "paymentMethod",
                        "currency": "currency",
                        "id": "id",
                        "paymentDescriptor": "paymentDescriptor",
                        "status": "AUTHORIZATION_PROCESSING",
                        "updatedAt": "2000-01-23T04:56:07.000+00:00"
                    },
                    "id": "sess_FlTZQyHL4DeUYLYtXmOdq",
                    "consumer": {
                        "country": "DE",
                        "taxIdentification": "798154336790",
                        "phone": "+491521111111",
                        "name": "John Smith",
                        "billingAddress": {
                            "firstName": "John",
                            "lastName": "Smith",
                            "country": "DE",
                            "phoneNumber": "01522113356",
                            "city": "Berlin",
                            "street": "Maple Street 102/B",
                            "postalCode": "41460",
                            "region": "Berlin"
                        },
                        "locale": "de-DE",
                        "merchantConsumerReference": "5c019979-0751-469e-96e0-b67f1d95c577",
                        "email": "johnsmith@example.com"
                    },
                    "recommendedPaymentMethods": "2022-11-03T11:23:47.123Z",
                    "expiresAt": "2022-11-03T11:23:47.123Z",
                    "status": "INITIATED"
                },
                "properties": {
                    "id": {
                        "description": "The payment session ID",
                        "example": "sess_FlTZQyHL4DeUYLYtXmOdq",
                        "type": "string"
                    },
                    "amount": {
                        "$ref": "#/components/schemas/Money"
                    },
                    "recurring": {
                        "type": "boolean"
                    },
                    "consumer": {
                        "$ref": "#/components/schemas/Consumer"
                    },
                    "recommendedPaymentMethods": {
                        "description": "List of recommended payment methods",
                        "example": "2022-11-03T11:23:47.123Z",
                        "items": {
                            "description": "List of recommended payment methods",
                            "example": "2022-11-03T11:23:47.123Z",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "expiresAt": {
                        "description": "The payment session expiry timestamp in ISO 8601 format.",
                        "example": "2022-11-03T11:23:47.123Z",
                        "format": "date-time",
                        "type": "string"
                    },
                    "createdAt": {
                        "description": "The payment session creation timestamp in ISO 8601 format.",
                        "example": "2022-11-03T11:23:47.123Z",
                        "format": "date-time",
                        "type": "string"
                    },
                    "status": {
                        "description": "The payment-session status",
                        "enum": [
                            "INITIATED",
                            "AUTHORIZING_INFLIGHT",
                            "AUTHENTICATION_PENDING",
                            "SUCCEEDED",
                            "FAILED",
                            "EXPIRED",
                            "REUSE_LIMIT_EXCEEDED"
                        ],
                        "type": "string"
                    },
                    "paymentCharge": {
                        "$ref": "#/components/schemas/ChargeAuthorizationResponse"
                    },
                    "paymentAgreement": {
                        "$ref": "#/components/schemas/AgreementAuthorizationResponse"
                    }
                },
                "type": "object"
            },
            "CreationRequest_authenticationSettings_inner": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/RedirectAuthenticationSettings"
                    },
                    {
                        "$ref": "#/components/schemas/ScanCodeAuthenticationSettings"
                    },
                    {
                        "$ref": "#/components/schemas/ThreeDSecureAuthenticationSettings"
                    }
                ]
            },
            "Order_industryData_inner": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/AirlineIndustryData"
                    }
                ]
            },
            "AuthorizationRequest_instrument": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/BankAccountInstrument"
                    },
                    {
                        "$ref": "#/components/schemas/PaypalAccountInstrument"
                    }
                ]
            },
            "AuthorizationResponse_data": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/PaymentAgreementDetails"
                    },
                    {
                        "$ref": "#/components/schemas/PaymentChargeDetails"
                    }
                ]
            },
            "AuthorizationResponse_authenticationMethods_inner": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/AppIntentAuthenticationMethod"
                    },
                    {
                        "$ref": "#/components/schemas/RedirectAuthenticationMethod"
                    },
                    {
                        "$ref": "#/components/schemas/ScanCodeAuthenticationMethod"
                    }
                ]
            }
        },
        "securitySchemes": {
            "bearer_token": {
                "scheme": "bearer",
                "type": "http"
            }
        }
    },
    "x-readme": {
        "explorer-enabled": true,
        "proxy-enabled": true
    }
}