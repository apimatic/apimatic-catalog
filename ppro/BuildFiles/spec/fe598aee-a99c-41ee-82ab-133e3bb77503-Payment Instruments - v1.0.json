{
    "openapi": "3.0.1",
    "info": {
        "description": "Payment Instruments API",
        "title": "Payment Instruments",
        "version": "v1"
    },
    "servers": [
        {
            "description": "Production - Sandbox environment for integration testing",
            "url": "https://api.sandbox.eu.ppro.com"
        },
        {
            "description": "Production",
            "url": "https://api.ppro.com"
        }
    ],
    "security": [
        {
            "bearer_token": []
        }
    ],
    "paths": {
        "/v1/payment-instruments/{instrument-id}": {
            "get": {
                "operationId": "fetchPaymentInstrument",
                "parameters": [
                    {
                        "explode": false,
                        "in": "path",
                        "name": "instrument-id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple"
                    },
                    {
                        "description": "The merchant identifier.",
                        "example": "merch_cb6RQnZbBwSBkn34QYXhr",
                        "explode": false,
                        "in": "header",
                        "name": "Merchant-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/fetchPaymentInstrument_200_response"
                                }
                            }
                        },
                        "description": "OK"
                    }
                },
                "summary": "Retrieve a Payment Instrument",
                "tags": [
                    "Payment Instruments"
                ]
            },
            "put": {
                "operationId": "updatePaymentInstrument",
                "parameters": [
                    {
                        "explode": false,
                        "in": "path",
                        "name": "instrument-id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple"
                    },
                    {
                        "description": "The merchant identifier.",
                        "example": "merch_cb6RQnZbBwSBkn34QYXhr",
                        "explode": false,
                        "in": "header",
                        "name": "Merchant-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/updatePaymentInstrument_request"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/fetchPaymentInstrument_200_response"
                                }
                            }
                        },
                        "description": "OK"
                    }
                },
                "summary": "Update an existing Payment Instrument",
                "tags": [
                    "Payment Instruments"
                ]
            }
        },
        "/v1/payment-instruments": {
            "post": {
                "operationId": "createPaymentInstrument",
                "parameters": [
                    {
                        "description": "The merchant identifier.",
                        "example": "merch_cb6RQnZbBwSBkn34QYXhr",
                        "explode": false,
                        "in": "header",
                        "name": "Merchant-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/updatePaymentInstrument_request"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/fetchPaymentInstrument_200_response"
                                }
                            }
                        },
                        "description": "OK"
                    }
                },
                "summary": "Create a Payment Instrument",
                "tags": [
                    "Payment Instruments"
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AmazonPayDetails": {
                "description": "The AMAZON_PAY payment details",
                "properties": {
                    "consumerEmail": {
                        "description": "The consumer's email for Amazon Pay",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AmazonPayInstrumentRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PaymentInstrumentRequest"
                    },
                    {
                        "properties": {
                            "details": {
                                "$ref": "#/components/schemas/AmazonPayDetails"
                            },
                            "type": {
                                "description": "The AMAZON_PAY instrument type.",
                                "enum": [
                                    "AMAZON_PAY"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "type": "object"
            },
            "BankAccountDetails": {
                "description": "The bank account details",
                "example": {
                    "bankCode": "12341234",
                    "country": "DE",
                    "holderName": "John Doe",
                    "iban": "DE75512108001245126199",
                    "debitMandateId": "debitMandateId",
                    "swiftCode": "DEUTDEFF123",
                    "bankName": "My Bank",
                    "accountNumber": "007123456"
                },
                "properties": {
                    "accountNumber": {
                        "description": "The account number.",
                        "example": "007123456",
                        "type": "string"
                    },
                    "holderName": {
                        "description": "The account holder name name.",
                        "example": "John Doe",
                        "type": "string"
                    },
                    "iban": {
                        "description": "The IBAN.",
                        "example": "DE75512108001245126199",
                        "type": "string"
                    },
                    "swiftCode": {
                        "description": "The SWIFT code.",
                        "example": "DEUTDEFF123",
                        "type": "string"
                    },
                    "bankName": {
                        "description": "The bank name.",
                        "example": "My Bank",
                        "type": "string"
                    },
                    "bankCode": {
                        "description": "The bank code.",
                        "example": "12341234",
                        "type": "string"
                    },
                    "debitMandateId": {
                        "description": "The reference id for a mandate that allows debit charges on the bank account.",
                        "type": "string"
                    },
                    "country": {
                        "description": "The bank account country.",
                        "example": "DE",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BankAccountInstrumentRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PaymentInstrumentRequest"
                    },
                    {
                        "properties": {
                            "details": {
                                "$ref": "#/components/schemas/BankAccountDetails"
                            },
                            "type": {
                                "description": "The BANK_ACCOUNT instrument type.",
                                "enum": [
                                    "BANK_ACCOUNT"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "required": [
                    "details"
                ],
                "type": "object"
            },
            "InstrumentValidation": {
                "description": "If included, PPRO will try to validate the instrument with a nominal-amount authorization. If validation fails, the instrument creation request will fail",
                "properties": {
                    "currency": {
                        "description": "ISO 4217 3-letter currency code.",
                        "example": "EUR",
                        "maxLength": 3,
                        "minLength": 3,
                        "type": "string"
                    },
                    "taxIdentification": {
                        "description": "The consumer tax identification (Social security identification) eg.: CPF in Brazil, NISS in Portugal, etc.",
                        "example": "798154336790",
                        "type": "string"
                    }
                },
                "required": [
                    "currency"
                ],
                "type": "object"
            },
            "KlarnaAccountDetails": {
                "description": "The Klarna account payment details",
                "properties": {
                    "authorizedPaymentMethod": {
                        "description": "Klarna authorized payment method",
                        "example": "DIRECT_BANK_TRANSFER",
                        "type": "string"
                    },
                    "billingCategory": {
                        "description": "Klarna billing category",
                        "example": "PAY_LATER",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "KlarnaAccountInstrumentRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PaymentInstrumentRequest"
                    },
                    {
                        "properties": {
                            "details": {
                                "$ref": "#/components/schemas/KlarnaAccountDetails"
                            },
                            "type": {
                                "description": "The Klarna account instrument type.",
                                "enum": [
                                    "KLARNA_ACCOUNT"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "type": "object"
            },
            "MockInstrumentRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PaymentInstrumentRequest"
                    },
                    {
                        "properties": {
                            "details": {
                                "additionalProperties": {
                                    "description": "The MOCK payment details",
                                    "type": "object"
                                },
                                "description": "The MOCK payment details",
                                "type": "object"
                            },
                            "type": {
                                "description": "The MOCK instrument type.",
                                "enum": [
                                    "MOCK"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "type": "object"
            },
            "PaymentInstrumentRequest": {
                "discriminator": {
                    "mapping": {
                        "TWINT_WALLET": "#/components/schemas/TwintWalletInstrumentRequest",
                        "BANK_ACCOUNT": "#/components/schemas/BankAccountInstrumentRequest",
                        "AMAZON_PAY": "#/components/schemas/AmazonPayInstrumentRequest",
                        "UPI_AUTOPAY": "#/components/schemas/UpiAutoPayInstrumentRequest",
                        "KLARNA_ACCOUNT": "#/components/schemas/KlarnaAccountInstrumentRequest",
                        "CARD_PPRO_VAULTED": "#/components/schemas/VaultedCardInstrumentRequest",
                        "MOCK": "#/components/schemas/MockInstrumentRequest"
                    },
                    "propertyName": "type"
                },
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "type"
                ],
                "type": "object"
            },
            "TwintWalletInstrumentRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PaymentInstrumentRequest"
                    },
                    {
                        "properties": {
                            "type": {
                                "description": "The TWINT_WALLET instrument type.",
                                "enum": [
                                    "TWINT_WALLET"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "type": "object"
            },
            "UpiAutoPayDetails": {
                "description": "The UPI payment details",
                "properties": {
                    "uniqueMandateNumber": {
                        "description": "The UPI unique mandate number",
                        "example": "testumn@upi",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpiAutoPayInstrumentRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PaymentInstrumentRequest"
                    },
                    {
                        "properties": {
                            "details": {
                                "$ref": "#/components/schemas/UpiAutoPayDetails"
                            },
                            "type": {
                                "description": "The UPI AutoPay instrument type.",
                                "enum": [
                                    "UPI_AUTOPAY"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "type": "object"
            },
            "VaultedCardDetails": {
                "description": "The vaulted payment card details",
                "properties": {
                    "brand": {
                        "description": "The card brand",
                        "example": "VISA",
                        "type": "string"
                    },
                    "bin": {
                        "description": "The card BIN number",
                        "example": "411111",
                        "type": "string"
                    },
                    "last4Digits": {
                        "description": "The last 4 digits of the card",
                        "example": "1234",
                        "maxLength": 4,
                        "minLength": 4,
                        "pattern": "^\\d+$",
                        "type": "string"
                    },
                    "expiryMonth": {
                        "description": "The card expiration month",
                        "example": 1,
                        "format": "int32",
                        "maximum": 12,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "expiryYear": {
                        "description": "The card expiration year",
                        "example": 2024,
                        "format": "int32",
                        "minimum": 2000,
                        "type": "integer"
                    },
                    "holderName": {
                        "description": "The card holder name",
                        "example": "<John Doe>",
                        "type": "string"
                    },
                    "panAlias": {
                        "description": "The card PAN alias",
                        "example": "ppro_tkn_06cf6d1",
                        "type": "string"
                    },
                    "cvvAlias": {
                        "description": "The card CVV alias",
                        "example": "ppro_tkn_a2cf6d1",
                        "type": "string"
                    },
                    "isCvvPresent": {
                        "description": "True if the CVV is present",
                        "type": "boolean"
                    }
                },
                "required": [
                    "bin",
                    "brand",
                    "expiryMonth",
                    "expiryYear",
                    "holderName",
                    "isCvvPresent",
                    "last4Digits",
                    "panAlias"
                ],
                "type": "object"
            },
            "VaultedCardInstrumentRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PaymentInstrumentRequest"
                    },
                    {
                        "properties": {
                            "details": {
                                "$ref": "#/components/schemas/VaultedCardDetails"
                            },
                            "validate": {
                                "$ref": "#/components/schemas/InstrumentValidation"
                            },
                            "type": {
                                "description": "The CARD_PPRO_VAULTED instrument type.",
                                "enum": [
                                    "CARD_PPRO_VAULTED"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "required": [
                    "details"
                ],
                "type": "object"
            },
            "BankAccountInstrumentResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PaymentInstrumentResponse"
                    },
                    {
                        "properties": {
                            "details": {
                                "$ref": "#/components/schemas/BankAccountDetails"
                            },
                            "type": {
                                "description": "The BANK_ACCOUNT instrument type.",
                                "enum": [
                                    "BANK_ACCOUNT"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "example": {
                    "details": {
                        "bankCode": "12341234",
                        "country": "DE",
                        "holderName": "John Doe",
                        "iban": "DE75512108001245126199",
                        "debitMandateId": "debitMandateId",
                        "swiftCode": "DEUTDEFF123",
                        "bankName": "My Bank",
                        "accountNumber": "007123456"
                    },
                    "id": "instr_FlTZQyHL4DeUYLYtXmOdq",
                    "type": "BANK_ACCOUNT"
                },
                "type": "object"
            },
            "KlarnaAccountInstrumentResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PaymentInstrumentResponse"
                    },
                    {
                        "properties": {
                            "details": {
                                "$ref": "#/components/schemas/KlarnaAccountDetails"
                            },
                            "type": {
                                "description": "The Klarna account instrument type.",
                                "enum": [
                                    "KLARNA_ACCOUNT"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "type": "object"
            },
            "MockInstrumentResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PaymentInstrumentResponse"
                    },
                    {
                        "properties": {
                            "details": {
                                "additionalProperties": {
                                    "description": "The MOCK payment details",
                                    "type": "object"
                                },
                                "description": "The MOCK payment details",
                                "type": "object"
                            },
                            "type": {
                                "description": "The MOCK instrument type.",
                                "enum": [
                                    "MOCK"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "type": "object"
            },
            "PaymentInstrumentResponse": {
                "properties": {
                    "id": {
                        "description": "The payment instrument ID",
                        "example": "instr_FlTZQyHL4DeUYLYtXmOdq",
                        "type": "string"
                    },
                    "details": {
                        "type": "object"
                    }
                },
                "title": "PaymentInstrumentResponse",
                "type": "object"
            },
            "TwintWalletInstrumentResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PaymentInstrumentResponse"
                    },
                    {
                        "properties": {
                            "type": {
                                "description": "The Twint wallet instrument type.",
                                "enum": [
                                    "TWINT_WALLET"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "type": "object"
            },
            "UpiAutoPayInstrumentResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PaymentInstrumentResponse"
                    },
                    {
                        "properties": {
                            "details": {
                                "$ref": "#/components/schemas/UpiAutoPayDetails"
                            },
                            "type": {
                                "description": "The UPI_AUTOPAY instrument type.",
                                "enum": [
                                    "UPI_AUTOPAY"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "type": "object"
            },
            "VaultedCardInstrumentResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PaymentInstrumentResponse"
                    },
                    {
                        "properties": {
                            "details": {
                                "$ref": "#/components/schemas/VaultedCardDetails"
                            },
                            "type": {
                                "description": "The CARD_PPRO_VAULTED instrument type.",
                                "enum": [
                                    "CARD_PPRO_VAULTED"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "type": "object"
            },
            "fetchPaymentInstrument_200_response": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/BankAccountInstrumentResponse"
                    },
                    {
                        "$ref": "#/components/schemas/KlarnaAccountInstrumentResponse"
                    },
                    {
                        "$ref": "#/components/schemas/MockInstrumentResponse"
                    },
                    {
                        "$ref": "#/components/schemas/TwintWalletInstrumentResponse"
                    },
                    {
                        "$ref": "#/components/schemas/UpiAutoPayInstrumentResponse"
                    },
                    {
                        "$ref": "#/components/schemas/VaultedCardInstrumentResponse"
                    }
                ]
            },
            "updatePaymentInstrument_request": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/AmazonPayInstrumentRequest"
                    },
                    {
                        "$ref": "#/components/schemas/BankAccountInstrumentRequest"
                    },
                    {
                        "$ref": "#/components/schemas/KlarnaAccountInstrumentRequest"
                    },
                    {
                        "$ref": "#/components/schemas/MockInstrumentRequest"
                    },
                    {
                        "$ref": "#/components/schemas/TwintWalletInstrumentRequest"
                    },
                    {
                        "$ref": "#/components/schemas/UpiAutoPayInstrumentRequest"
                    },
                    {
                        "$ref": "#/components/schemas/VaultedCardInstrumentRequest"
                    }
                ]
            }
        },
        "securitySchemes": {
            "bearer_token": {
                "scheme": "bearer",
                "type": "http"
            }
        }
    },
    "x-readme": {
        "explorer-enabled": true,
        "proxy-enabled": true
    }
}