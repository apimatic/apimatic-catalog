{
    "openapi": "3.0.1",
    "info": {
        "title": "SIX Web API (prod)",
        "description": "All APIs about entities",
        "contact": {
            "name": "SIX Web API Team ðŸš€",
            "url": "https://web.apiportal.six-group.com/portal/bfi/"
        },
        "version": "v1"
    },
    "servers": [
        {
            "url": "https://web.api.six-group.com"
        }
    ],
    "security": [
        {
            "mutualTLS": [
                "mTLS is required to make API calls. It can be requested to SIX via the Dev Portal."
            ]
        }
    ],
    "paths": {
        "/api/findata/v1/instruments/referenceData/entityBase": {
            "get": {
                "tags": [
                    "referenceData"
                ],
                "description": "REST API for Instrument Entity Base API by any supported schema",
                "operationId": "entitiesBase_1",
                "parameters": [
                    {
                        "name": "scheme",
                        "in": "query",
                        "description": "Scheme of the Instrument Identifier.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ISIN",
                                "SEDOL",
                                "CUSIP",
                                "CINS",
                                "WKN",
                                "VALOR",
                                "COMMONCODE",
                                "TICKER_BC"
                            ]
                        },
                        "example": "ISIN"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Instrument Identification to be provided by client as input parameter.",
                            "format": "comma separated values"
                        },
                        "examples": {
                            "An example request with 6 existing instrument ISINs and 1 not found instrument ISIN": {
                                "summary": "CH0009980894,IE00B5BMR087,CH0559601544,US0378331005,JE00B1VS3770,US037833AK68,XXX",
                                "description": "An example request with 6 existing instrument ISINs and 1 not found instrument ISIN",
                                "value": "CH0009980894,IE00B5BMR087,CH0559601544,US0378331005,JE00B1VS3770,US037833AK68,XXX"
                            }
                        }
                    },
                    {
                        "name": "preferredLanguage",
                        "in": "query",
                        "description": "Language in ISO 639 alpha-2 code for string fields where content in different languages is available.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "IT"
                            ]
                        },
                        "example": "EN"
                    },
                    {
                        "name": "extensions",
                        "in": "query",
                        "description": "Select Extensions to know more about the GraphQL query, Data Status and Dataset IDs. EXPLAIN = include the equivalent GraphQL query in the REST API response.",
                        "required": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Optional metadata to be returned in the response",
                                "enum": [
                                    "EXPLAIN",
                                    "DATA_STATUS",
                                    "DATASET_IDS"
                                ]
                            }
                        },
                        "example": "EXPLAIN"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "api-version": {
                                "description": "The API version of the response",
                                "required": true,
                                "schema": {
                                    "type": "string",
                                    "format": "date"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityBaseByInstrumentTopLevelV1"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {
                            "ratelimit-limit": {
                                "description": "The maximum number of requests in the current window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "ratelimit-remaining": {
                                "description": "The number of requests remaining in the current rate limit window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "retry-after": {
                                "description": "How long to wait before making a follow-up request (in seconds)",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "No required TLS certificate was sent"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {
                            "ratelimit-limit": {
                                "description": "The maximum number of requests in the current window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "ratelimit-remaining": {
                                "description": "The number of requests remaining in the current rate limit window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "retry-after": {
                                "description": "How long to wait before making a follow-up request (in seconds)",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Forbidden"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "headers": {
                            "ratelimit-limit": {
                                "description": "The maximum number of requests in the current window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "ratelimit-remaining": {
                                "description": "The number of requests remaining in the current rate limit window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "retry-after": {
                                "description": "How long to wait before making a follow-up request (in seconds)",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "API rate limit exceeded"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "headers": {
                            "ratelimit-limit": {
                                "description": "The maximum number of requests in the current window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "ratelimit-remaining": {
                                "description": "The number of requests remaining in the current rate limit window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "retry-after": {
                                "description": "How long to wait before making a follow-up request (in seconds)",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "headers": {
                            "ratelimit-limit": {
                                "description": "The maximum number of requests in the current window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "ratelimit-remaining": {
                                "description": "The number of requests remaining in the current rate limit window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "retry-after": {
                                "description": "How long to wait before making a follow-up request (in seconds)",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "api-version",
                    "in": "header",
                    "description": "The API version is represented as a date in ISO 8601 format. If not explicitly specified, the system will default to the latest version available. Valid versions: 2022-01-01, 2023-01-01, 2024-01-01, 2024-03-01, 2024-06-01, 2024-08-01",
                    "required": false,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "format": "date"
                    },
                    "example": "2024-08-01"
                }
            ]
        },
        "/api/findata/v1/listings/referenceData/entityBase": {
            "get": {
                "tags": [
                    "referenceData"
                ],
                "description": "REST API for Listing Entity Base API by any supported schema",
                "operationId": "entitiesBase",
                "parameters": [
                    {
                        "name": "scheme",
                        "in": "query",
                        "description": "Scheme of the Listing Identifier. It is a combination of the instrument scheme and the market scheme separated by underscore.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ISIN_BC",
                                "VALOR_BC",
                                "SEDOL_BC",
                                "CUSIP_BC",
                                "TICKER_BC",
                                "CINS_BC",
                                "COMMONCODE_BC",
                                "WKN_BC"
                            ]
                        },
                        "example": "VALOR_BC"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Listing Identifier to be provided by client as input parameter. Several identifiers can be requested comma-separated.",
                            "format": "comma separated values"
                        },
                        "examples": {
                            "An example request with ABB stock on the Swiss Market and APPL stock on Nasdaq": {
                                "summary": "ABBN on Swiss Market and AAPL on Nasdaq",
                                "description": "An example request with ABB stock on the Swiss Market and APPL stock on Nasdaq",
                                "value": "1222171_4,908440_67"
                            },
                            "An example request with ABB stock on the Swiss Market": {
                                "summary": "ABBN on Swiss Market",
                                "description": "An example request with ABB stock on the Swiss Market",
                                "value": "1222171_4"
                            }
                        }
                    },
                    {
                        "name": "preferredLanguage",
                        "in": "query",
                        "description": "Language in ISO 639 for string fields where content in different languages is available.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "IT"
                            ]
                        },
                        "example": "EN"
                    },
                    {
                        "name": "extensions",
                        "in": "query",
                        "description": "Select Extensions to know more about the GraphQL query, Data Status and Dataset IDs. EXPLAIN = include the equivalent GraphQL query in the REST API response.",
                        "required": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Optional metadata to be returned in the response",
                                "enum": [
                                    "EXPLAIN",
                                    "DATA_STATUS",
                                    "DATASET_IDS"
                                ]
                            }
                        },
                        "example": "EXPLAIN"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "api-version": {
                                "description": "The API version of the response",
                                "required": true,
                                "schema": {
                                    "type": "string",
                                    "format": "date"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityBaseByListingTopLevelV1"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {
                            "ratelimit-limit": {
                                "description": "The maximum number of requests in the current window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "ratelimit-remaining": {
                                "description": "The number of requests remaining in the current rate limit window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "retry-after": {
                                "description": "How long to wait before making a follow-up request (in seconds)",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "No required TLS certificate was sent"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {
                            "ratelimit-limit": {
                                "description": "The maximum number of requests in the current window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "ratelimit-remaining": {
                                "description": "The number of requests remaining in the current rate limit window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "retry-after": {
                                "description": "How long to wait before making a follow-up request (in seconds)",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Forbidden"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "headers": {
                            "ratelimit-limit": {
                                "description": "The maximum number of requests in the current window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "ratelimit-remaining": {
                                "description": "The number of requests remaining in the current rate limit window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "retry-after": {
                                "description": "How long to wait before making a follow-up request (in seconds)",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "API rate limit exceeded"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "headers": {
                            "ratelimit-limit": {
                                "description": "The maximum number of requests in the current window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "ratelimit-remaining": {
                                "description": "The number of requests remaining in the current rate limit window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "retry-after": {
                                "description": "How long to wait before making a follow-up request (in seconds)",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "headers": {
                            "ratelimit-limit": {
                                "description": "The maximum number of requests in the current window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "ratelimit-remaining": {
                                "description": "The number of requests remaining in the current rate limit window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "retry-after": {
                                "description": "How long to wait before making a follow-up request (in seconds)",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "api-version",
                    "in": "header",
                    "description": "The API version is represented as a date in ISO 8601 format. If not explicitly specified, the system will default to the latest version available. Valid versions: 2022-01-01, 2023-01-01, 2024-01-01, 2024-03-01, 2024-06-01, 2024-08-01",
                    "required": false,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "format": "date"
                    },
                    "example": "2024-08-01"
                }
            ]
        },
        "/api/findata/v1/entities/referenceData/entityBase": {
            "get": {
                "tags": [
                    "referenceData"
                ],
                "description": "REST API for Entity Base API by any supported schema",
                "operationId": "entitiesBase_2",
                "parameters": [
                    {
                        "name": "scheme",
                        "in": "query",
                        "description": "Scheme of the Legal Entity Identifier.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "LEI",
                                "GK"
                            ]
                        },
                        "example": "LEI"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Legal Entity Identification to be provided by client as input parameter.",
                            "format": "comma separated values"
                        },
                        "examples": {
                            "An example request with 1 existing entity LEI and 1 not found entity LEI": {
                                "summary": "HWUPKR0MPOU8FGXBT394,XXXXX",
                                "description": "An example request with 1 existing entity LEI and 1 not found entity LEI",
                                "value": "HWUPKR0MPOU8FGXBT394,XXXXX"
                            }
                        }
                    },
                    {
                        "name": "preferredLanguage",
                        "in": "query",
                        "description": "Language in ISO 639 alpha-2 code for string fields where content in different languages is available.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "IT"
                            ]
                        },
                        "example": "EN"
                    },
                    {
                        "name": "extensions",
                        "in": "query",
                        "description": "Select Extensions to know more about the GraphQL query, Data Status and Dataset IDs. EXPLAIN = include the equivalent GraphQL query in the REST API response.",
                        "required": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Optional metadata to be returned in the response",
                                "enum": [
                                    "EXPLAIN",
                                    "DATA_STATUS",
                                    "DATASET_IDS"
                                ]
                            }
                        },
                        "example": "EXPLAIN"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "api-version": {
                                "description": "The API version of the response",
                                "required": true,
                                "schema": {
                                    "type": "string",
                                    "format": "date"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntitiesBaseTopLevelV1"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {
                            "ratelimit-limit": {
                                "description": "The maximum number of requests in the current window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "ratelimit-remaining": {
                                "description": "The number of requests remaining in the current rate limit window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "retry-after": {
                                "description": "How long to wait before making a follow-up request (in seconds)",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "No required TLS certificate was sent"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {
                            "ratelimit-limit": {
                                "description": "The maximum number of requests in the current window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "ratelimit-remaining": {
                                "description": "The number of requests remaining in the current rate limit window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "retry-after": {
                                "description": "How long to wait before making a follow-up request (in seconds)",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Forbidden"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "headers": {
                            "ratelimit-limit": {
                                "description": "The maximum number of requests in the current window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "ratelimit-remaining": {
                                "description": "The number of requests remaining in the current rate limit window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "retry-after": {
                                "description": "How long to wait before making a follow-up request (in seconds)",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "API rate limit exceeded"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "headers": {
                            "ratelimit-limit": {
                                "description": "The maximum number of requests in the current window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "ratelimit-remaining": {
                                "description": "The number of requests remaining in the current rate limit window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "retry-after": {
                                "description": "How long to wait before making a follow-up request (in seconds)",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "headers": {
                            "ratelimit-limit": {
                                "description": "The maximum number of requests in the current window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "ratelimit-remaining": {
                                "description": "The number of requests remaining in the current rate limit window",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "retry-after": {
                                "description": "How long to wait before making a follow-up request (in seconds)",
                                "required": true,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "api-version",
                    "in": "header",
                    "description": "The API version is represented as a date in ISO 8601 format. If not explicitly specified, the system will default to the latest version available. Valid versions: 2022-01-01, 2023-01-01, 2024-01-01, 2024-03-01, 2024-06-01, 2024-08-01",
                    "required": false,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "format": "date"
                    },
                    "example": "2024-08-01"
                }
            ]
        }
    },
    "components": {
        "schemas": {
            "Details": {
                "type": "object",
                "properties": {
                    "correlationId": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    }
                }
            },
            "EntityBaseByListingEntityBaseV1": {
                "required": [
                    "gk"
                ],
                "type": "object",
                "properties": {
                    "entityShortName": {
                        "type": "string",
                        "description": "Legal entity short name."
                    },
                    "entityLongName": {
                        "type": "string",
                        "description": "Legal entity long name."
                    },
                    "gk": {
                        "type": "integer",
                        "description": "The SIX Financial Information identifier (GK) of the legal entity.",
                        "format": "int64"
                    },
                    "lei": {
                        "type": "string",
                        "description": "The Legal Entity Identifier (LEI) is a 20-digit alphanumeric code to identify a legal entity. The structure is defined in ISO 17442."
                    },
                    "entityType": {
                        "type": "string",
                        "description": "Legal entity classification allocated by SIX Financial Information. Present on all legal entities in the SIX Financial Information database.",
                        "enum": [
                            "COMPANY",
                            "STATE",
                            "PUBLIC_CORPORATION",
                            "INVESTMENT_FUND",
                            "SPECIAL_PURPOSE",
                            "GOVERNMENT",
                            "ASSOCIATION",
                            "FOUNDATION",
                            "BRANCH",
                            "OTHER"
                        ]
                    },
                    "entityStatus": {
                        "type": "string",
                        "description": "Status indicating whether the legal entity is inactive (deleted) or active. In case of active legal entities the status may include whether it is \"In Liquidation\" or \"In Foundation\".",
                        "enum": [
                            "IN_FOUNDATION",
                            "IN_BANKRUPTCY_PROCEEDINGS",
                            "UNDER_ADMINISTRATION",
                            "INACTIVE",
                            "ACTIVE",
                            "CHAPTER_7",
                            "CHAPTER_11",
                            "IN_LIQUIDATION",
                            "IN_DEBT_RESTRUCTURING_LIQUIDATION",
                            "IN_CHAPTER_11_LIQUIDATION",
                            "OTHER"
                        ]
                    },
                    "language": {
                        "type": "string",
                        "description": "Name of the legal entity in the main language as ISO 639 alpha-2 code.",
                        "enum": [
                            "EN",
                            "DE",
                            "FR",
                            "IT"
                        ]
                    },
                    "entityLocation": {
                        "type": "string",
                        "description": "The location (e.g. city or town) of the legal entity."
                    },
                    "entityCountry": {
                        "type": "string",
                        "description": "Country of the legal entity as ISO 3166 alpha-2 code."
                    }
                }
            },
            "EntityBaseByListingListingsDataV1": {
                "type": "object",
                "properties": {
                    "listings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EntityBaseByListingListingsItemV1"
                        }
                    }
                }
            },
            "EntityBaseByListingListingsItemV1": {
                "required": [
                    "lookupStatus",
                    "requestedId",
                    "requestedScheme"
                ],
                "type": "object",
                "properties": {
                    "requestedId": {
                        "type": "string",
                        "description": "The requested entity id used in the request"
                    },
                    "requestedScheme": {
                        "type": "string",
                        "description": "The requested scheme used in the request",
                        "enum": [
                            "ISIN_BC",
                            "VALOR_BC",
                            "SEDOL_BC",
                            "CUSIP_BC",
                            "TICKER_BC",
                            "CINS_BC",
                            "COMMONCODE_BC",
                            "WKN_BC"
                        ]
                    },
                    "lookupStatus": {
                        "type": "string",
                        "description": "Status of the response",
                        "enum": [
                            "FOUND",
                            "NOT_FOUND",
                            "NOT_AUTHORIZED",
                            "NOT_VALID_ID"
                        ]
                    },
                    "lookup": {
                        "$ref": "#/components/schemas/EntityBaseByListingLookupV1"
                    },
                    "referenceData": {
                        "$ref": "#/components/schemas/EntityBaseByListingReferenceDataV1"
                    }
                }
            },
            "EntityBaseByListingLookupV1": {
                "required": [
                    "listingCurrency",
                    "listingName",
                    "listingShortName",
                    "listingStatus",
                    "marketName",
                    "marketShortName"
                ],
                "type": "object",
                "properties": {
                    "listingName": {
                        "type": "string",
                        "description": "Listing short name with up to 19 characters.\n<br>Deprecation reason: Use listingShortName, removed since version '2024-01-01'",
                        "deprecated": true
                    },
                    "marketName": {
                        "type": "string",
                        "description": "Market short name with up to 19 characters.\n<br>Deprecation reason: Use marketShortName, removed since version '2024-01-01'",
                        "deprecated": true
                    },
                    "listingShortName": {
                        "type": "string",
                        "description": "Listing short name with up to 19 characters."
                    },
                    "marketShortName": {
                        "type": "string",
                        "description": "The market short name where the instrument is listed with up to 19 characters."
                    },
                    "listingCurrency": {
                        "type": "string",
                        "description": "The trading currency, as specified by SIX, typically follows the ISO 4217 alpha-3 code. This is shown in the main currency and not in fractional units. For cryptocurrencies, the Cryptocurrency Symbol in Instrument Symbology can be used for reference."
                    },
                    "listingStatus": {
                        "type": "string",
                        "description": "This shows the instruments status on the market - it shows if it is listed, suspended, admited to trading, delisted, etc",
                        "enum": [
                            "UNOFFICIALLY_LISTED_ACCORDING_TO_EXCHANGE",
                            "APPLIED",
                            "LISTED",
                            "SUSPENDED",
                            "WITHDRAWN",
                            "DELISTED_BY_EXCHANGE",
                            "PROVISIONAL",
                            "WHEN_ISSUED",
                            "NOT_LISTED",
                            "ADMITTED_TO_TRADING",
                            "OFFICIAL_LISTING_ACC_TO_REGULATORY_AUTHORITY",
                            "VIRTUAL_LISTING_DERIVED_VALUES_ONLY",
                            "LISTING_NO_TRADING",
                            "OTHER"
                        ]
                    }
                }
            },
            "EntityBaseByListingReferenceDataV1": {
                "type": "object",
                "properties": {
                    "entityBase": {
                        "$ref": "#/components/schemas/EntityBaseByListingEntityBaseV1"
                    }
                }
            },
            "EntityBaseByListingTopLevelV1": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/EntityBaseByListingListingsDataV1"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorDetail"
                        }
                    },
                    "extensions": {
                        "$ref": "#/components/schemas/ExtensionsData"
                    }
                }
            },
            "ErrorDetail": {
                "required": [
                    "category",
                    "code",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "category": {
                        "type": "string",
                        "description": "Error categories",
                        "example": "VALIDATION_ERROR",
                        "enum": [
                            "ENTITLEMENT_ERROR",
                            "VALIDATION_ERROR",
                            "DATA_FETCHING_ERROR",
                            "HTTP_ERROR",
                            "OTHER"
                        ]
                    },
                    "code": {
                        "type": "string",
                        "description": "code is used to identify the error",
                        "example": "CANNOT_CONVERT_PARAMETER",
                        "enum": [
                            "ACCESS_DENIED",
                            "TIMEOUT",
                            "INVALID_PERIOD",
                            "INVALID_RANGE",
                            "INVALID_CRITERIA",
                            "NO_DATA",
                            "PARAMETER_NOT_READABLE",
                            "PARAMETER_REQUIRED",
                            "DATA_REPORT_ERROR",
                            "QUOTA_LIMIT_EXCEEDED",
                            "INTERNAL_SERVICE_ERROR",
                            "REQUEST_NOT_ALLOWED",
                            "TOO_MANY_OPERATIONS",
                            "DUPLICATE_STREAM_ID",
                            "OTHER"
                        ]
                    },
                    "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "missing header 'X-HEADER'"
                    },
                    "hint": {
                        "$ref": "#/components/schemas/Hint"
                    }
                },
                "description": "A machine/human readable description of an error."
            },
            "Explain": {
                "required": [
                    "query",
                    "variables"
                ],
                "type": "object",
                "properties": {
                    "query": {
                        "type": "string"
                    },
                    "variables": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    }
                },
                "description": "Exposes the internal GraphQL query details behind a given REST request. Could be useful to migrate from REST to GraphQL (e.g. to customize the shape of the response). Disabled by default."
            },
            "ExtensionsData": {
                "type": "object",
                "properties": {
                    "explain": {
                        "$ref": "#/components/schemas/Explain"
                    },
                    "dataStatus": {
                        "type": "object",
                        "properties": {
                            "topLevel": {
                                "type": "string"
                            },
                            "dataStatus": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            "empty": {
                                "type": "boolean"
                            }
                        },
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "datasetIds": {
                        "type": "object",
                        "properties": {
                            "topLevel": {
                                "type": "string"
                            },
                            "datasetIds": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            "empty": {
                                "type": "boolean"
                            }
                        },
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "details": {
                        "$ref": "#/components/schemas/Details"
                    }
                }
            },
            "Hint": {
                "required": [
                    "data",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "ALLOWED_RANGE",
                            "ALLOWED_VALUES",
                            "CONTACT_SIX"
                        ]
                    },
                    "data": {
                        "type": "object"
                    }
                },
                "description": "a machine readable description of the error"
            },
            "EntityBaseByInstrumentEntityBaseV1": {
                "required": [
                    "gk"
                ],
                "type": "object",
                "properties": {
                    "entityShortName": {
                        "type": "string",
                        "description": "Legal entity short name."
                    },
                    "entityLongName": {
                        "type": "string",
                        "description": "Legal entity long name."
                    },
                    "gk": {
                        "type": "integer",
                        "description": "The SIX Financial Information identifier (GK) of the legal entity.",
                        "format": "int64"
                    },
                    "lei": {
                        "type": "string",
                        "description": "The Legal Entity Identifier (LEI) is a 20-digit alphanumeric code to identify a legal entity. The structure is defined in ISO 17442."
                    },
                    "entityType": {
                        "type": "string",
                        "description": "Legal entity classification allocated by SIX Financial Information. Present on all legal entities in the SIX Financial Information database.",
                        "enum": [
                            "COMPANY",
                            "STATE",
                            "PUBLIC_CORPORATION",
                            "INVESTMENT_FUND",
                            "SPECIAL_PURPOSE",
                            "GOVERNMENT",
                            "ASSOCIATION",
                            "FOUNDATION",
                            "BRANCH",
                            "OTHER"
                        ]
                    },
                    "entityStatus": {
                        "type": "string",
                        "description": "Status indicating whether the legal entity is inactive (deleted) or active. In case of active legal entities the status may include whether it is \"In Liquidation\" or \"In Foundation\".",
                        "enum": [
                            "IN_FOUNDATION",
                            "IN_BANKRUPTCY_PROCEEDINGS",
                            "UNDER_ADMINISTRATION",
                            "INACTIVE",
                            "ACTIVE",
                            "CHAPTER_7",
                            "CHAPTER_11",
                            "IN_LIQUIDATION",
                            "IN_DEBT_RESTRUCTURING_LIQUIDATION",
                            "IN_CHAPTER_11_LIQUIDATION",
                            "OTHER"
                        ]
                    },
                    "language": {
                        "type": "string",
                        "description": "Name of the legal entity in the main language as ISO 639 alpha-2 code.",
                        "enum": [
                            "EN",
                            "DE",
                            "FR",
                            "IT"
                        ]
                    },
                    "entityLocation": {
                        "type": "string",
                        "description": "The location (e.g. city or town) of the legal entity."
                    },
                    "entityCountry": {
                        "type": "string",
                        "description": "Country of the legal entity as ISO 3166 alpha-2 code."
                    }
                }
            },
            "EntityBaseByInstrumentInstrumentsDataV1": {
                "type": "object",
                "properties": {
                    "instruments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EntityBaseByInstrumentInstrumentsItemV1"
                        }
                    }
                }
            },
            "EntityBaseByInstrumentInstrumentsItemV1": {
                "required": [
                    "lookupStatus",
                    "requestedId",
                    "requestedScheme"
                ],
                "type": "object",
                "properties": {
                    "requestedId": {
                        "type": "string",
                        "description": "The requested entity id used in the request"
                    },
                    "requestedScheme": {
                        "type": "string",
                        "description": "The requested scheme used in the request",
                        "enum": [
                            "ISIN",
                            "SEDOL",
                            "CUSIP",
                            "CINS",
                            "WKN",
                            "VALOR",
                            "COMMONCODE",
                            "TICKER_BC"
                        ]
                    },
                    "lookupStatus": {
                        "type": "string",
                        "description": "Status of the response",
                        "enum": [
                            "FOUND",
                            "NOT_FOUND",
                            "NOT_AUTHORIZED",
                            "NOT_VALID_ID"
                        ]
                    },
                    "lookup": {
                        "$ref": "#/components/schemas/EntityBaseByInstrumentLookupV1"
                    },
                    "referenceData": {
                        "$ref": "#/components/schemas/EntityBaseByInstrumentReferenceDataV1"
                    }
                }
            },
            "EntityBaseByInstrumentLookupV1": {
                "required": [
                    "instrumentShortName",
                    "instrumentStatus",
                    "instrumentType"
                ],
                "type": "object",
                "properties": {
                    "instrumentShortName": {
                        "type": "string",
                        "description": "Instrument short name with up to 19 characters."
                    },
                    "instrumentStatus": {
                        "type": "string",
                        "description": "Status indicating whether an instrument is active or not. Provided that the instrument is still active, this may include further information such as \"in default\" or \"In liquidation/dissolution\"",
                        "enum": [
                            "NOT_YET_ISSUED",
                            "INACTIVE",
                            "IN_LIQUIDATION_DISSOLUTION",
                            "ACTIVE",
                            "IN_DEFAULT",
                            "OTHER"
                        ]
                    },
                    "instrumentType": {
                        "type": "string",
                        "description": "Instrument classification allocated by SIX Financial Information. The Instrument Type embodies a more granular categorization compared to the Security Type.",
                        "enum": [
                            "BOND",
                            "EQUITY",
                            "MTN",
                            "INSURANCE_POLICY",
                            "STRUCTURED_PRODUCT",
                            "TRUST_SHARE",
                            "INTEREST_RATE",
                            "RIGHT",
                            "CURRENCY",
                            "TRUST_CERT_FOUNDATION",
                            "TRUST_CERT_SHARE",
                            "SAVINGS_BOOK",
                            "REPO",
                            "FORWARD_TRANSACTION",
                            "COMBINED_TRANSACTION",
                            "FRN",
                            "LEVERAGED_PRODUCT",
                            "REPO_BASKET",
                            "ETD",
                            "FUTURE",
                            "MONEY_MARKET_INSTRUMENT",
                            "COMMODITY",
                            "CONVERTIBLE_BOND",
                            "INDEX",
                            "OPTION",
                            "TECHNICAL_CURRENCY",
                            "OTHER"
                        ]
                    }
                }
            },
            "EntityBaseByInstrumentReferenceDataV1": {
                "type": "object",
                "properties": {
                    "entityBase": {
                        "$ref": "#/components/schemas/EntityBaseByInstrumentEntityBaseV1"
                    }
                }
            },
            "EntityBaseByInstrumentTopLevelV1": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/EntityBaseByInstrumentInstrumentsDataV1"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorDetail"
                        }
                    },
                    "extensions": {
                        "$ref": "#/components/schemas/ExtensionsData"
                    }
                }
            },
            "EntitiesBaseEntitiesDataV1": {
                "type": "object",
                "properties": {
                    "entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EntitiesBaseEntitiesItemV1"
                        }
                    }
                }
            },
            "EntitiesBaseEntitiesItemV1": {
                "required": [
                    "lookupStatus",
                    "requestedId",
                    "requestedScheme"
                ],
                "type": "object",
                "properties": {
                    "requestedId": {
                        "type": "string",
                        "description": "The requested entity id used in the request"
                    },
                    "requestedScheme": {
                        "type": "string",
                        "description": "The requested scheme used in the request",
                        "enum": [
                            "LEI",
                            "GK"
                        ]
                    },
                    "lookupStatus": {
                        "type": "string",
                        "description": "Status of the response",
                        "enum": [
                            "FOUND",
                            "NOT_FOUND",
                            "NOT_AUTHORIZED",
                            "NOT_VALID_ID"
                        ]
                    },
                    "lookup": {
                        "$ref": "#/components/schemas/EntitiesBaseLookupV1"
                    },
                    "referenceData": {
                        "$ref": "#/components/schemas/EntitiesBaseReferenceDataV1"
                    }
                }
            },
            "EntitiesBaseEntityBaseV1": {
                "required": [
                    "gk"
                ],
                "type": "object",
                "properties": {
                    "entityShortName": {
                        "type": "string",
                        "description": "Legal entity short name."
                    },
                    "entityLongName": {
                        "type": "string",
                        "description": "Legal entity long name."
                    },
                    "gk": {
                        "type": "integer",
                        "description": "The SIX Financial Information identifier (GK) of the legal entity.",
                        "format": "int64"
                    },
                    "lei": {
                        "type": "string",
                        "description": "The Legal Entity Identifier (LEI) is a 20-digit alphanumeric code to identify a legal entity. The structure is defined in ISO 17442."
                    },
                    "entityType": {
                        "type": "string",
                        "description": "Legal entity classification allocated by SIX Financial Information. Present on all legal entities in the SIX Financial Information database.",
                        "enum": [
                            "COMPANY",
                            "STATE",
                            "PUBLIC_CORPORATION",
                            "INVESTMENT_FUND",
                            "SPECIAL_PURPOSE",
                            "GOVERNMENT",
                            "ASSOCIATION",
                            "FOUNDATION",
                            "BRANCH",
                            "OTHER"
                        ]
                    },
                    "entityStatus": {
                        "type": "string",
                        "description": "Status indicating whether the legal entity is inactive (deleted) or active. In case of active legal entities the status may include whether it is \"In Liquidation\" or \"In Foundation\".",
                        "enum": [
                            "IN_FOUNDATION",
                            "IN_BANKRUPTCY_PROCEEDINGS",
                            "UNDER_ADMINISTRATION",
                            "INACTIVE",
                            "ACTIVE",
                            "CHAPTER_7",
                            "CHAPTER_11",
                            "IN_LIQUIDATION",
                            "IN_DEBT_RESTRUCTURING_LIQUIDATION",
                            "IN_CHAPTER_11_LIQUIDATION",
                            "OTHER"
                        ]
                    },
                    "language": {
                        "type": "string",
                        "description": "Name of the legal entity in the main language as ISO 639 alpha-2 code.",
                        "enum": [
                            "EN",
                            "DE",
                            "FR",
                            "IT"
                        ]
                    },
                    "entityLocation": {
                        "type": "string",
                        "description": "The location (e.g. city or town) of the legal entity."
                    },
                    "entityCountry": {
                        "type": "string",
                        "description": "Country of the legal entity as ISO 3166 alpha-2 code."
                    }
                }
            },
            "EntitiesBaseLookupV1": {
                "required": [
                    "entityShortName",
                    "entityStatus",
                    "entityType"
                ],
                "type": "object",
                "properties": {
                    "entityShortName": {
                        "type": "string",
                        "description": "Legal entity short name."
                    },
                    "entityType": {
                        "type": "string",
                        "description": "Legal entity classification allocated by SIX Financial Information. Present on all legal entities in the SIX Financial Information database.",
                        "enum": [
                            "COMPANY",
                            "STATE",
                            "PUBLIC_CORPORATION",
                            "INVESTMENT_FUND",
                            "SPECIAL_PURPOSE",
                            "GOVERNMENT",
                            "ASSOCIATION",
                            "FOUNDATION",
                            "BRANCH",
                            "OTHER"
                        ]
                    },
                    "entityStatus": {
                        "type": "string",
                        "description": "Status indicating whether the legal entity is inactive (deleted) or active. In case of active legal entities the status may include whether it is \"In Liquidation\" or \"In Foundation\".",
                        "enum": [
                            "IN_FOUNDATION",
                            "IN_BANKRUPTCY_PROCEEDINGS",
                            "UNDER_ADMINISTRATION",
                            "INACTIVE",
                            "ACTIVE",
                            "CHAPTER_7",
                            "CHAPTER_11",
                            "IN_LIQUIDATION",
                            "IN_DEBT_RESTRUCTURING_LIQUIDATION",
                            "IN_CHAPTER_11_LIQUIDATION",
                            "OTHER"
                        ]
                    }
                },
                "description": "Resolution"
            },
            "EntitiesBaseReferenceDataV1": {
                "type": "object",
                "properties": {
                    "entityBase": {
                        "$ref": "#/components/schemas/EntitiesBaseEntityBaseV1"
                    }
                }
            },
            "EntitiesBaseTopLevelV1": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/EntitiesBaseEntitiesDataV1"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorDetail"
                        }
                    },
                    "extensions": {
                        "$ref": "#/components/schemas/ExtensionsData"
                    }
                }
            }
        }
    }
}