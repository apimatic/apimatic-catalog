openapi: 3.0.0
info:
  title: Salesloft API
  description: API for interacting with Salesloft, including managing people, activities, cadences, and more.
  version: 1.0.0
servers:
  - url: https://api.salesloft.com/v2
    description: Salesloft API Server

paths:
  /people:
    get:
      summary: Get all people
      operationId: getPeople
      parameters:
        - name: per_page
          in: query
          description: Number of results per page
          schema:
            type: integer
            example: 50
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successfully retrieved people
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Person'
                  metadata:
                    $ref: '#/components/schemas/Metadata'
        '401':
          description: Unauthorized
        '400':
          description: Bad request

  /people/{id}:
    get:
      summary: Get a single person
      operationId: getPerson
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the person
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved the person
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '401':
          description: Unauthorized
        '404':
          description: Person not found

  /cadences:
    get:
      summary: Get all cadences
      operationId: getCadences
      parameters:
        - name: per_page
          in: query
          description: Number of results per page
          schema:
            type: integer
            example: 50
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successfully retrieved cadences
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Cadence'
                  metadata:
                    $ref: '#/components/schemas/Metadata'
        '401':
          description: Unauthorized
        '400':
          description: Bad request

  /cadences/{id}:
    get:
      summary: Get a single cadence
      operationId: getCadence
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the cadence
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved the cadence
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cadence'
        '401':
          description: Unauthorized
        '404':
          description: Cadence not found

  /activities:
    get:
      summary: Get all activities
      operationId: getActivities
      parameters:
        - name: per_page
          in: query
          description: Number of results per page
          schema:
            type: integer
            example: 50
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successfully retrieved activities
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Activity'
                  metadata:
                    $ref: '#/components/schemas/Metadata'
        '401':
          description: Unauthorized
        '400':
          description: Bad request

  /users:
    get:
      summary: Get all users
      operationId: getUsers
      parameters:
        - name: per_page
          in: query
          description: Number of results per page
          schema:
            type: integer
            example: 50
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successfully retrieved users
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  metadata:
                    $ref: '#/components/schemas/Metadata'
        '401':
          description: Unauthorized
        '400':
          description: Bad request

  /users/{id}:
    get:
      summary: Get a single user
      operationId: getUser
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the user
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
        '404':
          description: User not found

  /email_templates:
    get:
      summary: Get all email templates
      operationId: getEmailTemplates
      parameters:
        - name: per_page
          in: query
          description: Number of results per page
          schema:
            type: integer
            example: 50
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successfully retrieved email templates
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/EmailTemplate'
                  metadata:
                    $ref: '#/components/schemas/Metadata'
        '401':
          description: Unauthorized
        '400':
          description: Bad request

  /webhooks:
    get:
      summary: Get all webhooks
      operationId: getWebhooks
      parameters:
        - name: per_page
          in: query
          description: Number of results per page
          schema:
            type: integer
            example: 50
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successfully retrieved webhooks
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Webhook'
                  metadata:
                    $ref: '#/components/schemas/Metadata'
        '401':
          description: Unauthorized
        '400':
          description: Bad request

  /webhooks/{id}:
    get:
      summary: Get a single webhook
      operationId: getWebhook
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the webhook
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved the webhook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '401':
          description: Unauthorized
        '404':
          description: Webhook not found

components:
  schemas:
    Person:
      type: object
      properties:
        id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        phone:
          type: string
    Cadence:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date-time
    Activity:
      type: object
      properties:
        id:
          type: integer
        action:
          type: string
        timestamp:
          type: string
          format: date-time
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
    EmailTemplate:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        subject:
          type: string
    Webhook:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        url:
          type: string
    Metadata:
      type: object
      properties:
        total_count:
          type: integer
        total_pages:
          type: integer
        current_page:
          type: integer
