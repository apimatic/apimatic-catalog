{
  "openapi": "3.0.1",
  "info": {
    "title": "Bakkt crypto connect API",
    "description": "Bakkt provides a set of APIs that enable Partners to buy/sell cryptocurrencies on behalf of their consumers. In doing so, Partners may leverage adding cryptocurrency transactions to the consumers wallet in their ecosystem. Bakkt's platform is designed to adhere to all applicable regulatory requirements, in addition to supporting brand innovation around transacting with multiple forms of digital assets, including crypto and loyalty rewards.\n\nThe Bakkt platform provides the following products and services:\n* Partner onboarding and analytics\n* Secure consumer onboarding\n* Buy or Sell cryptocurrencies supported in the Bakkt ecosystem\n* Get consumer's cryptocurrency balance\n* Get cryptocurrency's historical prices\n* Get transaction details\n* Settlement and reporting\n* Funding\n",
    "version": "1.1.0"
  },
  "servers": [
    { "url": "https://tango-svc.tango", "description": "Generated server url" }
  ],
  "paths": {
    "/partner/v1/partner/{partnerId}/party/{partnerPartyRef}/kyc/documentVerificationDetails": {
      "get": {
        "tags": ["Partner Party Kyc"],
        "summary": "Get Partner Party Document Verification Details",
        "description": "Retrieves the Document Verification Details for the party",
        "operationId": "getKycDocumentVerificationDetails",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Partner that the Party is linked to. May be different to the Partner associated with the credentials.",
            "required": true,
            "schema": { "type": "string", "format": "uuid" },
            "example": "53b16517-7766-4124-ab53-a798c310c139"
          },
          {
            "name": "partnerPartyRef",
            "in": "path",
            "description": "Partner's primary key for Party",
            "required": true,
            "schema": { "type": "string" },
            "example": "98179173-65bc-4018-8a1a-7b5b87cbf3d8"
          },
          {
            "name": "overrideCustomerDeclinedConsent",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "x-tracking-id",
            "in": "header",
            "required": false,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/KycDocumentVerificationDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/PublicApiError" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "KycDocumentVerificationDetails": {
        "type": "object",
        "properties": {
          "verificationURL": {
            "type": "string",
            "description": "The url to be used for document verification",
            "example": "https://www.example-docv-url.com"
          },
          "verificationURLExpiry": {
            "type": "string",
            "description": "The time at which the verification URL will expire",
            "example": "2024-05-04T12:00:00.000Z"
          }
        }
      },
      "PublicApiError": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Message from the exception",
            "example": "Parameter passed for field is not meeting its required format."
          },
          "detail": {
            "type": "string",
            "description": "Description of the type",
            "example": "validation error"
          },
          "details": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/PublicApiErrorDetail" }
          },
          "type": { "type": "string", "example": "INVALID_FIELD_VALUE" }
        }
      },
      "PublicApiErrorDetail": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Human readable error description",
            "example": "Validation Error."
          },
          "field": { "type": "string", "example": "id" },
          "rejectedValue": { "type": "object", "example": "i-am-not-a-uuid" },
          "type": { "type": "string", "example": "VALIDATION_ERROR" }
        }
      }
    }
  },
  "x-readme": { "explorer-enabled": true, "proxy-enabled": true }
}
