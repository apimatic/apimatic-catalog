{
  "openapi": "3.0.0",
  "info": {
    "title": "MyParcel.com API Specification",
    "description": "**Introduction**<br>This is the technical reference for the MyParcel.com API implementing the [OpenApi 3.0 Specification](https://github.com/OAI/OpenAPI-Specification) according to [JSON API](https://jsonapi.org) conventions.<br>Check our [API documentation](https://docs.myparcel.com) for more information and code examples.<br>Check our [GitHub releases](https://github.com/MyParcelCOM/api-specification/releases) for a complete version history.<br><br>âš  Some endpoints are marked as experimental, which means their implementation might change within this major version.<br><br>**Units**<br>Some attributes in the API have values in one of the following units: <table><tr><th>Currency</th><td>cents / pence</td></tr><tr><th>Distances</th><td>meters</td></tr><tr><th>Dimensions</th><td>millimeters</td></tr><tr><th>Timestamps</th><td>Coordinated Universal Time (UTC)</td></tr><tr><th>Volumes</th><td>liters (dm3)</td></tr><tr><th>Weights</th><td>grams</td></tr></table>",
    "termsOfService": "https://www.myparcel.com/legal",
    "contact": {
      "name": "Tech Support",
      "url": "https://www.myparcel.com/contact",
      "email": "support@myparcel.com"
    },
    "license": {
      "name": "pricing",
      "url": "https://www.myparcel.com/pricing"
    },
    "version": "v1.73.1",
    "x-logo": {
      "url": "https://cdn.myparcel.com/images/myparcelcom-black.svg"
    }
  },
  "servers": [
    {
      "url": "https://api.myparcel.com"
    }
  ],
  "paths": {
    "/add-shipments-to-collection": {
      "post": {
        "tags": [
          "RPC"
        ],
        "security": [
          {
            "OAuth2": [
              "collections.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.manage"
            ]
          }
        ],
        "summary": "Add shipments to collection.",
        "description": "This endpoint can add multiple shipments to a concept collection.",
        "requestBody": {
          "description": "The collection ID and the shipment IDs.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "required": [
                      "collection_id",
                      "shipment_ids"
                    ],
                    "properties": {
                      "collection_id": {
                        "$ref": "#/components/schemas/Uuid"
                      },
                      "shipment_ids": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Uuid"
                        },
                        "example": [
                          "d2eef012-f2fe-4f5f-af05-1acd86c51c3b",
                          "170cbede-2401-40f5-aaea-7b0d2986a250",
                          "883a89b1-40b9-44ab-9d71-f47ea5e0ca98"
                        ],
                        "description": "Uuids of shipments that need to be added to the collection."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The shipments have been added to the collection."
          }
        }
      }
    },
    "/addresses": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.manage"
            ]
          }
        ],
        "summary": "Get all addresses for a user.",
        "description": "This endpoint retrieves all address entries that the requesting user has access to.",
        "parameters": [
          {
            "name": "filter[search]",
            "in": "query",
            "description": "String of characters you want to look for in an address.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/query-filter-organization"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the addresses.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AddressResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/addresses?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/addresses?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/addresses?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/addresses?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/addresses?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Addresses"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          }
        ],
        "summary": "Create a new address entry.",
        "description": "This endpoint creates a new address from the posted data.",
        "requestBody": {
          "description": "The address entry to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Address"
                      },
                      {
                        "required": [
                          "attributes",
                          "relationships"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "street_1",
                              "city",
                              "country_code"
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The address entry is created.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddressResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/addresses/{address_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-address_id"
        }
      ],
      "get": {
        "tags": [
          "Addresses"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.manage"
            ]
          }
        ],
        "summary": "Get an address by ID.",
        "description": "This endpoint retrieves the address with the supplied ID.",
        "responses": {
          "200": {
            "description": "Retrieved the address.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddressResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Addresses"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          }
        ],
        "summary": "Update an address by ID.",
        "description": "This endpoint updates the address with the supplied ID.",
        "requestBody": {
          "description": "The address object with attributes to be updated.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Address"
                      },
                      {
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "relationships": {
                            "readOnly": true
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The address is updated.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddressResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Addresses"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          }
        ],
        "summary": "Delete an address by ID.",
        "description": "This endpoint deletes the address with the supplied ID.",
        "responses": {
          "204": {
            "description": "The address has been deleted."
          }
        }
      }
    },
    "/brokers": {
      "get": {
        "tags": [
          "Brokers"
        ],
        "security": [
          {
            "OAuth2": [
              "broker.member"
            ]
          },
          {
            "OAuth2": [
              "enterprises.manage"
            ]
          }
        ],
        "summary": "Get all available brokers.",
        "description": "This endpoint retrieves brokers available to your API client. If your client is created within our `MyParcel.com` portal, it will be connected to 1 broker, for example `MyParcel.com`.",
        "responses": {
          "200": {
            "description": "Retrieved the brokers.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BrokerResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/brokers?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/brokers?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/brokers?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/brokers?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/brokers?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Brokers"
        ],
        "security": [
          {
            "OAuth2": [
              "enterprises.manage"
            ]
          }
        ],
        "summary": "Create a new broker.",
        "description": "This endpoint creates a new broker with the posted data.",
        "requestBody": {
          "description": "The broker object to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Broker"
                      },
                      {
                        "required": [
                          "attributes",
                          "relationships"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "name",
                              "logo_url",
                              "favicon_url",
                              "style"
                            ],
                            "properties": {
                              "style": {
                                "required": [
                                  "background_color",
                                  "foreground_color",
                                  "primary_color",
                                  "secondary_color",
                                  "accent_color"
                                ]
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The broker is created.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BrokerResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/brokers/{broker_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-broker_id"
        }
      ],
      "get": {
        "tags": [
          "Brokers"
        ],
        "security": [
          {
            "OAuth2": [
              "broker.member"
            ]
          },
          {
            "OAuth2": [
              "enterprises.manage"
            ]
          }
        ],
        "summary": "Get a broker by ID.",
        "description": "This endpoint retrieves the broker with the supplied ID.",
        "responses": {
          "200": {
            "description": "Retrieved the broker.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BrokerResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Brokers"
        ],
        "security": [
          {
            "OAuth2": [
              "enterprises.manage"
            ]
          }
        ],
        "summary": "Update a broker by ID.",
        "description": "This endpoint updates the broker with the supplied ID.",
        "requestBody": {
          "description": "The broker object with attributes to be updated.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Broker"
                      },
                      {
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "relationships": {
                            "readOnly": true
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The broker is updated.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BrokerResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/brokers/{broker_id}/carriers": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-broker_id"
        }
      ],
      "get": {
        "tags": [
          "Brokers"
        ],
        "security": [
          {
            "OAuth2": [
              "broker.member"
            ]
          },
          {
            "OAuth2": [
              "enterprise.manage"
            ]
          }
        ],
        "summary": "Get the available carriers for a specific broker.",
        "description": "This endpoint retrieves available carriers for a broker with the supplied ID.",
        "responses": {
          "200": {
            "description": "Retrieved the available carriers for the broker.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CarrierResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/brokers/a294ee55-bc94-4890-b734-afd56c158f95/carriers?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/brokers/a294ee55-bc94-4890-b734-afd56c158f95/carriers?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/brokers/a294ee55-bc94-4890-b734-afd56c158f95/carriers?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/brokers/a294ee55-bc94-4890-b734-afd56c158f95/carriers?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/brokers/a294ee55-bc94-4890-b734-afd56c158f95/carriers?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/brokers/{broker_id}/relationships/carriers": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-broker_id"
        }
      ],
      "post": {
        "tags": [
          "Brokers"
        ],
        "security": [
          {
            "OAuth2": [
              "enterprise.manage"
            ]
          }
        ],
        "summary": "Add carrier relationships to a broker.",
        "description": "This endpoint adds carrier relationships to the broker with the supplied ID.",
        "requestBody": {
          "description": "The carrier relationships to be added to the broker.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CarriersRelationship"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The carrier relationships have been added."
          }
        }
      },
      "delete": {
        "tags": [
          "Brokers"
        ],
        "security": [
          {
            "OAuth2": [
              "enterprise.manage"
            ]
          }
        ],
        "summary": "Delete carrier relationships from a broker.",
        "description": "This endpoint deletes carrier relationships from the broker with the supplied ID.",
        "requestBody": {
          "description": "The carrier relationships to be deleted from the broker.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CarriersRelationship"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The contract relationships have been deleted."
          }
        }
      }
    },
    "/calculate-landed-costs": {
      "post": {
        "tags": [
          "RPC"
        ],
        "security": [
          {
            "OAuth2": [
              "landed_cost"
            ]
          }
        ],
        "summary": "Calculate landed costs.",
        "description": "This endpoint returns the landed costs for the supplied products.",
        "requestBody": {
          "description": "The shipment containing the products.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "recipient_country_code",
                      "recipient_postal_code",
                      "sender_country_code",
                      "sender_postal_code",
                      "weight",
                      "items"
                    ],
                    "properties": {
                      "recipient_country_code": {
                        "$ref": "#/components/schemas/CountryCode"
                      },
                      "recipient_postal_code": {
                        "type": "string",
                        "example": "NW1 6XE"
                      },
                      "sender_country_code": {
                        "$ref": "#/components/schemas/CountryCode"
                      },
                      "sender_postal_code": {
                        "type": "string",
                        "example": "NW1 6XE"
                      },
                      "weight": {
                        "type": "integer",
                        "example": 5000,
                        "description": "Weight in grams."
                      },
                      "shipping_value": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Price"
                          },
                          {
                            "description": "The `total_tax` and `total_duty` are calculated from all `items` passed. This `shipping_value` is for any value that is not covered by the items, such as the packaging or postage fees."
                          }
                        ]
                      },
                      "items": {
                        "type": "array",
                        "items": {
                          "oneOf": [
                            {
                              "required": [
                                "description",
                                "item_value",
                                "hs_code"
                              ],
                              "properties": {
                                "description": {
                                  "type": "string",
                                  "example": "OnePlus X"
                                },
                                "item_value": {
                                  "$ref": "#/components/schemas/Price"
                                },
                                "hs_code": {
                                  "type": "string",
                                  "pattern": "^[0-9.]+$",
                                  "example": "8517.12.00"
                                }
                              }
                            },
                            {
                              "required": [
                                "description",
                                "item_value",
                                "sku"
                              ],
                              "properties": {
                                "description": {
                                  "type": "string",
                                  "example": "OnePlus X"
                                },
                                "item_value": {
                                  "$ref": "#/components/schemas/Price"
                                },
                                "sku": {
                                  "type": "string",
                                  "example": "123456789"
                                }
                              }
                            }
                          ]
                        },
                        "description": "Shipment items containing `description`, `item_value` and `hs_code`. If the `hs_code` is not supplied, the `sku` is required and an HS code suggestion request will be triggered on your behalf, to determine the best matching HS code."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Landed costs have been calculated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "total_tax",
                        "total_duty",
                        "items"
                      ],
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "required": [
                              "description",
                              "item_value",
                              "hs_code",
                              "tax",
                              "duty"
                            ],
                            "properties": {
                              "description": {
                                "type": "string",
                                "example": "OnePlus X"
                              },
                              "item_value": {
                                "$ref": "#/components/schemas/Price"
                              },
                              "hs_code": {
                                "type": "string",
                                "pattern": "^[0-9.]+$",
                                "example": "8517.12.00"
                              },
                              "tax": {
                                "$ref": "#/components/schemas/Price"
                              },
                              "duty": {
                                "$ref": "#/components/schemas/Price"
                              }
                            }
                          }
                        },
                        "total_tax": {
                          "$ref": "#/components/schemas/Price"
                        },
                        "total_duty": {
                          "$ref": "#/components/schemas/Price"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/carriers": {
      "get": {
        "tags": [
          "Carriers"
        ],
        "security": [
          {
            "OAuth2": [
              "broker.member"
            ]
          }
        ],
        "summary": "Get all available carriers.",
        "description": "This endpoint retrieves carriers available to your API client. The availability of carriers depends on the broker your client is connected to.",
        "responses": {
          "200": {
            "description": "Retrieved the carriers.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CarrierResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carriers?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carriers?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carriers?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carriers?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carriers?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/carriers/{carrier_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-carrier_id"
        }
      ],
      "get": {
        "tags": [
          "Carriers"
        ],
        "security": [
          {
            "OAuth2": [
              "broker.member"
            ]
          }
        ],
        "summary": "Get a carrier by ID.",
        "description": "This endpoint retrieves the carrier with the supplied ID.",
        "responses": {
          "200": {
            "description": "Retrieved the carrier.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CarrierResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/carriers/{carrier_id}/collection-time-slots": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-carrier_id"
        }
      ],
      "get": {
        "tags": [
          "Carriers"
        ],
        "security": [
          {
            "OAuth2": []
          }
        ],
        "summary": "Get collection time slots from a carrier.",
        "description": "This endpoint retrieves collection time slots offered by the supplied carrier. These time slots can be used to specify the `collection_time` of a collection.",
        "parameters": [
          {
            "$ref": "#/components/parameters/query-country_code"
          },
          {
            "$ref": "#/components/parameters/query-postal_code"
          },
          {
            "$ref": "#/components/parameters/query-date_from"
          },
          {
            "$ref": "#/components/parameters/query-date_to"
          },
          {
            "name": "service_code",
            "in": "query",
            "description": "Service code to limit the time slots by (required by some carriers).",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the collection time slots.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/CollectionTimeSlot"
                          },
                          {
                            "required": [
                              "id"
                            ]
                          }
                        ]
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carriers/be7f6752-34e0-49a1-a832-bcc209450ea9/collection-time-slots?country_code=GB&postal_code=NW1%206XE&date_from=1648110600&date_to=1648114200&page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carriers/be7f6752-34e0-49a1-a832-bcc209450ea9/collection-time-slots?country_code=GB&postal_code=NW1%206XE&date_from=1648110600&date_to=1648114200&page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carriers/be7f6752-34e0-49a1-a832-bcc209450ea9/collection-time-slots?country_code=GB&postal_code=NW1%206XE&date_from=1648110600&date_to=1648114200&page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carriers/be7f6752-34e0-49a1-a832-bcc209450ea9/collection-time-slots?country_code=GB&postal_code=NW1%206XE&date_from=1648110600&date_to=1648114200&page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carriers/be7f6752-34e0-49a1-a832-bcc209450ea9/collection-time-slots?country_code=GB&postal_code=NW1%206XE&date_from=1648110600&date_to=1648114200&page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/carriers/{carrier_id}/contracts": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-carrier_id"
        }
      ],
      "get": {
        "tags": [
          "Carriers"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          }
        ],
        "summary": "Get all the contracts for a carrier.",
        "description": "This endpoint retrieves contracts for the supplied carrier. Only active contracts with a verified status can be used to create shipments.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`carrier`</li><li>`owner`</li><li>`liability_coverages`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the contract(s).",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ContractResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "included": {
                      "$ref": "#/components/schemas/ContractIncludes"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carriers/be7f6752-34e0-49a1-a832-bcc209450ea9/contracts?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carriers/be7f6752-34e0-49a1-a832-bcc209450ea9/contracts?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carriers/be7f6752-34e0-49a1-a832-bcc209450ea9/contracts?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carriers/be7f6752-34e0-49a1-a832-bcc209450ea9/contracts?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carriers/be7f6752-34e0-49a1-a832-bcc209450ea9/contracts?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/carriers/{carrier_id}/pickup-dropoff-locations/{pudo_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-carrier_id"
        },
        {
          "$ref": "#/components/parameters/path-pudo_id"
        }
      ],
      "get": {
        "tags": [
          "Carriers"
        ],
        "security": [
          {
            "OAuth2": []
          }
        ],
        "summary": "Get a location from a carrier by ID.",
        "description": "This endpoint retrieves the pick-up and drop-off location with the supplied ID.",
        "responses": {
          "200": {
            "description": "Retrieved the location.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PickupDropoffLocation"
                        },
                        {
                          "required": [
                            "id"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No location was found for the given ID. Does this carrier support getting PUDO by ID?"
          }
        }
      }
    },
    "/carriers/{carrier_id}/pickup-dropoff-locations/{latitude}/{longitude}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-carrier_id"
        },
        {
          "$ref": "#/components/parameters/path-latitude"
        },
        {
          "$ref": "#/components/parameters/path-longitude"
        }
      ],
      "get": {
        "tags": [
          "Carriers"
        ],
        "security": [
          {
            "OAuth2": []
          }
        ],
        "summary": "Get locations from a carrier by geolocation.",
        "description": "This endpoint retrieves pick-up and drop-off locations by geolocation offered by the supplied carrier.<ul><li>Locations of the type `pick-up` can be used with services offering this as their `delivery_method`.</li><li>Locations of the type `drop-off` can be used with services offering this as their `handover_method`.</li></ul>",
        "parameters": [
          {
            "name": "contract",
            "in": "query",
            "description": "Specific contract (id) to use for authentication with the carrier. If none is specified then the first active contract will be used.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[radius]",
            "in": "query",
            "description": "Only return locations within the specified radius (in meters).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[categories]",
            "in": "query",
            "description": "Comma separated list of location categories to return. Possible options are:<ul><li>`pick-up`</li><li>`drop-off`</li></ul>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[features]",
            "in": "query",
            "description": "Comma separated list of features to filter the locations by. Possible options are:<ul><li>`print-label-in-store`</li></ul>",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/query-filter-location_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the locations.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PickupDropoffLocationResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carriers/be7f6752-34e0-49a1-a832-bcc209450ea9/pickup-dropoff-locations/52.354078/4.903159?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carriers/be7f6752-34e0-49a1-a832-bcc209450ea9/pickup-dropoff-locations/52.354078/4.903159?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carriers/be7f6752-34e0-49a1-a832-bcc209450ea9/pickup-dropoff-locations/52.354078/4.903159?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carriers/be7f6752-34e0-49a1-a832-bcc209450ea9/pickup-dropoff-locations/52.354078/4.903159?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carriers/be7f6752-34e0-49a1-a832-bcc209450ea9/pickup-dropoff-locations/52.354078/4.903159?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/carriers/{carrier_id}/pickup-dropoff-locations/{country_code}/{postal_code}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-carrier_id"
        },
        {
          "$ref": "#/components/parameters/path-country_code"
        },
        {
          "$ref": "#/components/parameters/path-postal_code"
        }
      ],
      "get": {
        "tags": [
          "Carriers"
        ],
        "security": [
          {
            "OAuth2": []
          }
        ],
        "summary": "Get locations from a carrier by country and postal code.",
        "description": "This endpoint retrieves pick-up and drop-off locations by country code and postal code offered by the supplied carrier.<ul><li>Locations of the type `pick-up` can be used with services offering this as their `delivery_method`.</li><li>Locations of the type `drop-off` can be used with services offering this as their `handover_method`.</li></ul>",
        "parameters": [
          {
            "$ref": "#/components/parameters/query-street"
          },
          {
            "$ref": "#/components/parameters/query-street_number"
          },
          {
            "$ref": "#/components/parameters/query-city"
          },
          {
            "name": "contract",
            "in": "query",
            "description": "Specific contract (id) to use for authentication with the carrier. If none is specified then the first active contract will be used.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[categories]",
            "in": "query",
            "description": "Comma separated list of location categories to return. Possible options are:<ul><li>`pick-up`</li><li>`drop-off`</li></ul>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[features]",
            "in": "query",
            "description": "Comma separated list of features to filter the locations by. Possible options are:<ul><li>`print-label-in-store`</li></ul>",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/query-filter-location_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the locations.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PickupDropoffLocationResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carriers/be7f6752-34e0-49a1-a832-bcc209450ea9/pickup-dropoff-locations/GB/NW1%206XE?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carriers/be7f6752-34e0-49a1-a832-bcc209450ea9/pickup-dropoff-locations/GB/NW1%206XE?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carriers/be7f6752-34e0-49a1-a832-bcc209450ea9/pickup-dropoff-locations/GB/NW1%206XE?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carriers/be7f6752-34e0-49a1-a832-bcc209450ea9/pickup-dropoff-locations/GB/NW1%206XE?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carriers/be7f6752-34e0-49a1-a832-bcc209450ea9/pickup-dropoff-locations/GB/NW1%206XE?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/carrier-surcharges": {
      "get": {
        "tags": [
          "CarrierSurcharges"
        ],
        "security": [
          {
            "OAuth2": [
              "finance.manage"
            ]
          }
        ],
        "summary": "Get all carrier surcharges.",
        "description": "This endpoint retrieves all carrier surcharges.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`carrier`</li></ul>",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/query-filter-carrier"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the carrier surcharges.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CarrierSurchargeResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carrier-surcharges?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carrier-surcharges?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carrier-surcharges?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carrier-surcharges?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/carrier-surcharges?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CarrierSurcharges"
        ],
        "security": [
          {
            "OAuth2": [
              "finance.manage"
            ]
          }
        ],
        "summary": "Create a new carrier surcharge.",
        "description": "This endpoint creates a new carrier surcharge with the posted data. It is required that a carrier relationship is always provided when creating a carrier surcharge.",
        "requestBody": {
          "description": "The carrier surcharge object to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/CarrierSurcharge"
                      },
                      {
                        "required": [
                          "attributes",
                          "relationships"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "name",
                              "fee"
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The carrier surcharge is created.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CarrierSurchargeResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/carrier-surcharges/{carrier_surcharge_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-carrier_surcharge_id"
        }
      ],
      "get": {
        "tags": [
          "CarrierSurcharges"
        ],
        "security": [
          {
            "OAuth2": [
              "finance.manage"
            ]
          }
        ],
        "summary": "Get a carrier surcharge by ID.",
        "description": "This endpoint retrieves the carrier surcharge with the supplied ID.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br> The relationships that can be included are:<ul><li>`carrier`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the carrier surcharge.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CarrierSurchargeResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "CarrierSurcharges"
        ],
        "security": [
          {
            "OAuth2": [
              "finance.manage"
            ]
          }
        ],
        "summary": "Update a carrier surcharge by ID.",
        "description": "This endpoint updates the carrier surcharge with the supplied ID.",
        "requestBody": {
          "description": "The carrier surcharge object with attributes to be updated.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/CarrierSurcharge"
                      },
                      {
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "relationships": {
                            "readOnly": true
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The carrier surcharge is updated.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CarrierSurchargeResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CarrierSurcharges"
        ],
        "security": [
          {
            "OAuth2": [
              "finance.manage"
            ]
          }
        ],
        "summary": "Delete a carrier surcharge by ID.",
        "description": "This endpoint deletes the carrier surcharge with the supplied ID.",
        "responses": {
          "204": {
            "description": "The carrier surcharge is deleted."
          }
        }
      }
    },
    "/clients": {
      "get": {
        "tags": [
          "Clients"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          }
        ],
        "summary": "Get all available clients.",
        "description": "This endpoint retrieves all clients available to you.",
        "responses": {
          "200": {
            "description": "Retrieved the clients.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ClientResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/clients?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/clients?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/clients?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/clients?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/clients?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Clients"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          }
        ],
        "summary": "Create a new client.",
        "description": "This endpoint creates a new client with the posted data. The `owner` relationship will be automatically set to your user.",
        "requestBody": {
          "description": "The client object to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Client"
                      },
                      {
                        "required": [
                          "attributes"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "name"
                            ]
                          },
                          "relationships": {
                            "readOnly": true
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The client is created.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/ClientResponse"
                        },
                        {
                          "properties": {
                            "attributes": {
                              "required": [
                                "secret"
                              ],
                              "properties": {
                                "secret": {
                                  "type": "string",
                                  "description": "The client secret. Only returned when creating the client.",
                                  "example": "KTT3sjoErkVj4uRQL3o8n276Tz29Ei5t"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clients/{client_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-client_id"
        }
      ],
      "get": {
        "tags": [
          "Clients"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          }
        ],
        "summary": "Get a client by ID.",
        "description": "This endpoint retrieves the client with the supplied ID.",
        "responses": {
          "200": {
            "description": "Retrieved the client.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ClientResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Clients"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          }
        ],
        "summary": "Delete a client by ID.",
        "description": "This endpoint deletes the client with the supplied ID.",
        "responses": {
          "204": {
            "description": "The client is deleted."
          }
        }
      }
    },
    "/collections": {
      "get": {
        "tags": [
          "Collections"
        ],
        "security": [
          {
            "OAuth2": [
              "collections.manage"
            ]
          },
          {
            "OAuth2": [
              "collections.view"
            ]
          }
        ],
        "summary": "Get all available collections.",
        "description": "This endpoint retrieves collections available to your API client.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`contract`</li><li>`contract.carrier`</li><li>`manifest`</li><li>`shop`</li><li>`status`</li></ul>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[collection_date]",
            "in": "query",
            "description": "Date string in ISO 8601 date format (YYYY-MM-DD). Only collections with a collection date that matches this date will be in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/query-filter-shop"
          },
          {
            "$ref": "#/components/parameters/query-filter-status"
          },
          {
            "$ref": "#/components/parameters/query-filter-carrier"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the collections.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CollectionResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "included": {
                      "$ref": "#/components/schemas/CollectionIncludes"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/collections?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/collections?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/collections?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/collections?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/collections?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Collections"
        ],
        "security": [
          {
            "OAuth2": [
              "collections.manage"
            ]
          }
        ],
        "summary": "Create a new collection.",
        "description": "This endpoint creates a new collection with the posted data.",
        "requestBody": {
          "description": "The collection object to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Collection"
                      },
                      {
                        "required": [
                          "attributes",
                          "relationships"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "address",
                              "collection_time"
                            ],
                            "properties": {
                              "address": {
                                "required": [
                                  "street_1",
                                  "city",
                                  "country_code"
                                ]
                              }
                            }
                          },
                          "relationships": {
                            "required": [
                              "shop"
                            ],
                            "properties": {
                              "status": {
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The collection has been created.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CollectionResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/collections/{collection_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-collection_id"
        }
      ],
      "get": {
        "tags": [
          "Collections"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.view"
            ]
          }
        ],
        "summary": "Get a collection by ID.",
        "description": "This endpoint retrieves the collection with the supplied ID.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`contract`</li><li>`contract.carrier`</li><li>`manifest`</li><li>`shop`</li><li>`status`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the collection.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CollectionResponse"
                    },
                    "included": {
                      "$ref": "#/components/schemas/CollectionIncludes"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Collections"
        ],
        "security": [
          {
            "OAuth2": [
              "collections.manage"
            ]
          }
        ],
        "summary": "Update a collection by ID.",
        "description": "This endpoint updates the collection with the supplied ID. <br> The collection can be registered with the carrier through this endpoint by using the `register` attribute. <br> No further updates are possible after registration.",
        "requestBody": {
          "description": "The collection object with attributes to be updated.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Collection"
                      },
                      {
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "attributes": {
                            "properties": {
                              "register": {
                                "type": "boolean",
                                "example": true,
                                "description": "Indicates whether the collection should be registered with the carrier. Further updates are no longer possible after a successful registration."
                              },
                              "address": {
                                "readOnly": true
                              },
                              "collection_time": {
                                "readOnly": true
                              }
                            }
                          },
                          "relationships": {
                            "properties": {
                              "status": {
                                "$ref": "#/components/schemas/StatusRelationship",
                                "description": "An untracked collection can be manually updated to indicate the collection has been collected."
                              },
                              "shop": {
                                "readOnly": true
                              },
                              "contract": {
                                "readOnly": true
                              },
                              "shipments": {
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The collection is updated.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CollectionResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Collections"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          }
        ],
        "summary": "Delete a collection by ID.",
        "description": "This endpoint deletes the collection with the supplied ID.",
        "responses": {
          "204": {
            "description": "The collection is deleted."
          }
        }
      }
    },
    "/collections/{collection_id}/files/{file_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-collection_id"
        },
        {
          "$ref": "#/components/parameters/path-file_id"
        }
      ],
      "get": {
        "tags": [
          "Collections"
        ],
        "security": [
          {
            "OAuth2": [
              "collections.manage"
            ]
          },
          {
            "OAuth2": [
              "collections.view"
            ]
          }
        ],
        "summary": "Get a file related to a collection.",
        "description": "This endpoint retrieves a file of the supplied collection.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "You must set the accept header to retrieve the file in the given format. Possible options are: <ul><li>`application/pdf`</li></ul>",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "application/pdf"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the file.",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "description": "Raw contents of the PDF file."
                }
              }
            }
          }
        }
      }
    },
    "/collection-schedules": {
      "get": {
        "tags": [
          "CollectionSchedules"
        ],
        "security": [
          {
            "OAuth2": [
              "collections.manage"
            ]
          }
        ],
        "summary": "Get all available collection schedules.",
        "description": "This endpoint retrieves collection schedules.",
        "parameters": [
          {
            "$ref": "#/components/parameters/query-filter-shop"
          },
          {
            "$ref": "#/components/parameters/query-filter-carrier"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the collection schedules.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/CollectionSchedule"
                          },
                          {
                            "required": [
                              "id"
                            ]
                          }
                        ]
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/collection-schedules?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/collection-schedules?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/collection-schedules?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/collection-schedules?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/collection-schedules?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CollectionSchedules"
        ],
        "security": [
          {
            "OAuth2": [
              "collections.manage"
            ]
          }
        ],
        "summary": "Create a new collection schedules.",
        "description": "This endpoint creates a new collection schedules.",
        "requestBody": {
          "description": "The collection schedule to create.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/CollectionSchedule"
                      },
                      {
                        "properties": {
                          "id": {
                            "readOnly": true
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The collection schedule has been created.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CollectionSchedule"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/collection-schedules/{collection_schedule_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-collection_schedule_id"
        }
      ],
      "get": {
        "tags": [
          "CollectionSchedules"
        ],
        "security": [
          {
            "OAuth2": [
              "collections.manage"
            ]
          }
        ],
        "summary": "Get a collection schedule by ID.",
        "description": "This endpoint retrieves a collection schedule by ID.",
        "responses": {
          "200": {
            "description": "Retrieved the collection schedule.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/CollectionSchedule"
                        },
                        {
                          "required": [
                            "id"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CollectionSchedules"
        ],
        "security": [
          {
            "OAuth2": [
              "collections.manage"
            ]
          }
        ],
        "summary": "Delete a collection schedule by ID.",
        "description": "This endpoint deletes a collection schedule by ID.",
        "responses": {
          "204": {
            "description": "Deleted the collection schedule."
          }
        }
      }
    },
    "/consolidate-shipments": {
      "post": {
        "tags": [
          "RPC"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          }
        ],
        "summary": "Consolidate shipments.",
        "description": "This endpoint links the provided shipments to a consolidation shipment.",
        "requestBody": {
          "description": "The consolidation shipment ID and the shipment IDs.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "properties": {
                      "consolidation_shipment_id": {
                        "$ref": "#/components/schemas/Uuid"
                      },
                      "shipment_ids": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Uuid"
                        },
                        "example": [
                          "d2eef012-f2fe-4f5f-af05-1acd86c51c3b",
                          "170cbede-2401-40f5-aaea-7b0d2986a250",
                          "883a89b1-40b9-44ab-9d71-f47ea5e0ca98"
                        ],
                        "description": "Uuids of shipments that need updating."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The consolidation ID has been added to the shipments."
          }
        }
      }
    },
    "/contracts": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "security": [
          {
            "OAuth2": [
              "broker.member",
              "organizations.manage"
            ]
          },
          {
            "OAuth2": [
              "broker.member",
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "broker.member",
              "shipments.view"
            ]
          }
        ],
        "summary": "Get all available contracts.",
        "description": "This endpoint retrieves contracts available to your API client. Only active contracts with a verified status can be used to create shipments.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`carrier`</li><li>`owner`</li><li>`liability_coverages`</li></ul>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "in": "query",
            "description": "String of characters you want to look for in a contract's attributes.<br>Contracts that have the string in their `name` attribute or their `owner`'s `name` attribute will be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/query-filter-carrier"
          },
          {
            "$ref": "#/components/parameters/query-filter-owner"
          },
          {
            "name": "filter[status]",
            "in": "query",
            "description": "Comma separated string of the status of the contract you want to filter on.<br>The statuses that can be filtered on are:<ul><li>`active`</li><li>`inactive`</li><li>`invalid`</li><li>`pending`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the contracts.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ContractResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "included": {
                      "$ref": "#/components/schemas/ContractIncludes"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/contracts?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/contracts?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/contracts?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/contracts?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/contracts?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contracts"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          }
        ],
        "summary": "Create a new contract.",
        "description": "This endpoint creates a new contract with the posted data. Use your organization ID in the owner relationship to become the contract owner. The status will be `pending` until our system has checked if the credentials are valid.",
        "requestBody": {
          "description": "The contract object to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Contract"
                      },
                      {
                        "required": [
                          "attributes",
                          "relationships"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "currency",
                              "name",
                              "credentials"
                            ],
                            "properties": {
                              "status": {
                                "readOnly": true
                              },
                              "credentials": {
                                "type": "object",
                                "example": {
                                  "api_username": "your_api_username",
                                  "api_password": "your_api_password"
                                },
                                "description": "The credentials required to communicate with the carrier as defined by the `credentials_format` of the carrier."
                              }
                            }
                          },
                          "relationships": {
                            "required": [
                              "carrier",
                              "owner"
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The contract is created.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ContractResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{contract_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-contract_id"
        }
      ],
      "get": {
        "tags": [
          "Contracts"
        ],
        "security": [
          {
            "OAuth2": [
              "broker.member",
              "organizations.manage"
            ]
          },
          {
            "OAuth2": [
              "broker.member",
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "broker.member",
              "shipments.view"
            ]
          }
        ],
        "summary": "Get a contract by ID.",
        "description": "This endpoint retrieves a contract for the supplied ID.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`carrier`</li><li>`owner`</li><li>`liability_coverages`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the contract.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ContractResponse"
                    },
                    "included": {
                      "$ref": "#/components/schemas/ContractIncludes"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Contracts"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          }
        ],
        "summary": "Update a contract by ID.",
        "description": "This endpoint updates the contract with the supplied ID. The status will be `pending` until our system has checked if the credentials are valid.",
        "requestBody": {
          "description": "The contract object with attributes to be updated.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Contract"
                      },
                      {
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "attributes": {
                            "properties": {
                              "status": {
                                "enum": [
                                  "active",
                                  "inactive"
                                ]
                              },
                              "credentials": {
                                "type": "object",
                                "example": {
                                  "api_username": "your_api_username",
                                  "api_password": "your_api_password"
                                },
                                "description": "The credentials required to communicate with the carrier as defined by the `credentials_format` of the carrier."
                              }
                            }
                          },
                          "relationships": {
                            "properties": {
                              "carrier": {
                                "readOnly": true
                              },
                              "template": {
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The contract is updated.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ContractResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contracts"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          }
        ],
        "summary": "Delete a contract by ID.",
        "description": "This endpoint deletes the contract with the supplied ID.",
        "responses": {
          "204": {
            "description": "The contract is deleted."
          }
        }
      }
    },
    "/contracts/{contract_id}/validate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-contract_id"
        }
      ],
      "post": {
        "tags": [
          "Contracts"
        ],
        "security": [
          {
            "OAuth2": [
              "broker.member",
              "organizations.manage"
            ]
          }
        ],
        "summary": "Validate a contract.",
        "description": "This `RPC` endpoint allows a user to re-validate a contract without changing its credentials.",
        "responses": {
          "200": {
            "description": "The credential validation has been completed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "valid"
                      ],
                      "properties": {
                        "valid": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string",
                          "example": "Response from the carrier why the credentials are invalid"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/combine-files": {
      "post": {
        "tags": [
          "RPC"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.view"
            ]
          }
        ],
        "summary": "Create a combined file.",
        "description": "This endpoint creates a new combined file with the posted data and files.",
        "requestBody": {
          "description": "The combined file object to be created.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "required": [
                      "file_ids"
                    ],
                    "properties": {
                      "file_ids": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Uuid"
                        },
                        "example": [
                          "d2eef012-f2fe-4f5f-af05-1acd86c51c3b",
                          "170cbede-2401-40f5-aaea-7b0d2986a250",
                          "883a89b1-40b9-44ab-9d71-f47ea5e0ca98"
                        ],
                        "description": "Uuids of files that need to be combined."
                      },
                      "page_size": {
                        "type": "string",
                        "description": "One of the available page sizes, `A6` or `A4` depending on your printer.",
                        "enum": [
                          "A6",
                          "A4"
                        ]
                      },
                      "starting_position": {
                        "type": "string",
                        "description": "Position on the first page to start printing labels. All positions before this one will be left empty.",
                        "enum": [
                          "top-left",
                          "top-right",
                          "bottom-left",
                          "bottom-right"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created the combined file.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "description": "Raw contents of the combined file."
                }
              }
            }
          }
        }
      }
    },
    "/combined-files": {
      "get": {
        "deprecated": true,
        "tags": [
          "CombinedFiles"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.view"
            ]
          }
        ],
        "summary": "Get all the combined files.",
        "description": "This endpoint retrieves all the combined files you have requested.",
        "responses": {
          "200": {
            "description": "Retrieved the combined files.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CombinedFileResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/combined-files?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/combined-files?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/combined-files?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/combined-files?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/combined-files?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "deprecated": true,
        "tags": [
          "CombinedFiles"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.view"
            ]
          }
        ],
        "summary": "Create a combined file.",
        "description": "This endpoint creates a new combined file with the posted data and files.",
        "requestBody": {
          "description": "The combined file object to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/CombinedFile"
                      },
                      {
                        "required": [
                          "relationships"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "relationships": {
                            "required": [
                              "shop",
                              "source_files"
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The combined file has been created",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CombinedFileResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/combined-files/{combined_file_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-combined_file_id"
        }
      ],
      "get": {
        "deprecated": true,
        "tags": [
          "CombinedFiles"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.view"
            ]
          }
        ],
        "summary": "Get a combined file  by ID.",
        "description": "This endpoint retrieves a combined file with the supplied ID.",
        "responses": {
          "200": {
            "description": "Retrieved the combined file.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CombinedFileResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/create-manifest-for-collection": {
      "post": {
        "tags": [
          "RPC"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          }
        ],
        "summary": "Generate a manifest for a collection.",
        "description": "This endpoint generates a manifest for the collection given in the request body.",
        "requestBody": {
          "description": "The object containing a collection ID.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "collection_id"
                    ],
                    "properties": {
                      "collection_id": {
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
                        "example": "e26d781b-6c56-4be5-ae72-505db793d2bd"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created manifest resource, represented in JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ManifestResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/enterprises": {
      "get": {
        "tags": [
          "Enterprises"
        ],
        "security": [
          {
            "OAuth2": [
              "broker.member"
            ]
          },
          {
            "OAuth2": [
              "enterprises.manage"
            ]
          }
        ],
        "summary": "Get all available enterprises.",
        "description": "This endpoint retrieves enterprises available to your API client.",
        "responses": {
          "200": {
            "description": "Retrieved the enterprises.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EnterpriseResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/enterprises?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/enterprises?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/enterprises?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/enterprises?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/enterprises?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/enterprises/{enterprise_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-enterprise_id"
        }
      ],
      "get": {
        "tags": [
          "Enterprises"
        ],
        "security": [
          {
            "OAuth2": [
              "broker.member"
            ]
          },
          {
            "OAuth2": [
              "enterprises.manage"
            ]
          }
        ],
        "summary": "Get an enterprise by ID.",
        "description": "This endpoint retrieves the enterprise with the supplied ID.",
        "responses": {
          "200": {
            "description": "Retrieved the enterprise.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/EnterpriseResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/request-rates-template": {
      "post": {
        "tags": [
          "RPC"
        ],
        "security": [
          {
            "OAuth2": [
              "contracts.manage"
            ]
          }
        ],
        "summary": "Request rates template export.",
        "description": "This endpoint queues a job to create a rates template (CSV) based on existing service rates. The template can be downloaded on completion using the `/download-rates-template` endpoint.",
        "requestBody": {
          "description": "The object containing a contract ID and optional service codes.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "contract_id"
                    ],
                    "properties": {
                      "contract_id": {
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
                        "example": "2cb32706-5762-4b96-9212-327e6afaeeff"
                      },
                      "service_codes": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "CODE_1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The rates template export is queued to be created.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "request_id"
                      ],
                      "properties": {
                        "request_id": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
                          "example": "2cb32706-5762-4b96-9212-327e6afaeeff"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/download-rates-template": {
      "post": {
        "tags": [
          "RPC"
        ],
        "security": [
          {
            "OAuth2": [
              "contracts.manage"
            ]
          }
        ],
        "summary": "Download rates template export.",
        "description": "This endpoint retrieves a rates template (CSV), which can be used to edit existing and add new service rates into the system.",
        "requestBody": {
          "description": "The object containing a request ID, which is returned by the `/request-rates-template` endpoint.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "request_id"
                    ],
                    "properties": {
                      "request_id": {
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
                        "example": "2cb32706-5762-4b96-9212-327e6afaeeff"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retrieved the rates template CSV.",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "description": "Raw contents of the CSV file."
                }
              }
            }
          },
          "202": {
            "description": "The rates template CSV is still being generated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "File not ready. Please wait for the file generation to complete."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/files/{file_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-file_id"
        }
      ],
      "get": {
        "tags": [
          "Files"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.view"
            ]
          }
        ],
        "summary": "Get a file by ID.",
        "description": "This endpoint retrieves the file with the supplied ID. Accept headers can be used to retrieve the file in a different format.",
        "parameters": [
          {
            "$ref": "#/components/parameters/header-files"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the file.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FileResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get-carrier-status-categories": {
      "get": {
        "tags": [
          "RPC"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.view"
            ]
          }
        ],
        "summary": "Get carrier status categories.",
        "description": "This endpoint retrieves a list of all possible categories of carrier-statuses. The codes can be used to populate the `filter[carrier_status][category]` query parameter on the shipments endpoint.",
        "responses": {
          "200": {
            "description": "Retrieved the carrier status categories.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "code",
                          "description"
                        ],
                        "properties": {
                          "code": {
                            "$ref": "#/components/schemas/CarrierStatusCategory"
                          },
                          "description": {
                            "type": "string",
                            "example": "Driver has physically tried to deliver the shipment but the customer was not home."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get-dynamic-service-rates": {
      "post": {
        "tags": [
          "RPC"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.manage"
            ]
          }
        ],
        "summary": "Get dynamic service rates.",
        "description": "This endpoint retrieves service rates from the carrier using the specified shipment. A service and contract are required to know which carrier to communicate with.",
        "requestBody": {
          "description": "The shipment object with a service and contract.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Shipment"
                      },
                      {
                        "required": [
                          "attributes",
                          "relationships"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "recipient_address",
                              "sender_address",
                              "physical_properties"
                            ],
                            "properties": {
                              "recipient_address": {
                                "required": [
                                  "street_1",
                                  "city",
                                  "country_code"
                                ]
                              },
                              "sender_address": {
                                "required": [
                                  "street_1",
                                  "city",
                                  "country_code"
                                ]
                              },
                              "physical_properties": {
                                "required": [
                                  "weight"
                                ]
                              }
                            }
                          },
                          "relationships": {
                            "required": [
                              "contract",
                              "service",
                              "shop"
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retrieved the service rates.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/ServiceRate"
                          },
                          {
                            "required": [
                              "attributes",
                              "relationships"
                            ],
                            "properties": {
                              "attributes": {
                                "required": [
                                  "weight_min",
                                  "weight_max"
                                ]
                              },
                              "relationships": {
                                "required": [
                                  "contract",
                                  "service"
                                ],
                                "properties": {
                                  "service_options": {
                                    "properties": {
                                      "data": {
                                        "items": {
                                          "required": [
                                            "id",
                                            "type",
                                            "meta"
                                          ],
                                          "properties": {
                                            "meta": {
                                              "required": [
                                                "included"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hooks": {
      "get": {
        "tags": [
          "Hooks"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.view"
            ]
          }
        ],
        "summary": "Get all available hooks.",
        "description": "This endpoint retrieves hooks available to your API client.",
        "parameters": [
          {
            "$ref": "#/components/parameters/query-filter-owner"
          },
          {
            "name": "filter[action][action_type]",
            "in": "query",
            "description": "[Action type](https://docs.myparcel.com/api/resources/hooks/action.html) to filter the hooks by.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[trigger][resource_action]",
            "in": "query",
            "description": "[Resource action](https://docs.myparcel.com/api/resources/hooks/trigger.html) to filter the hooks by.",
            "schema": {
              "type": "string",
              "enum": [
                "create",
                "update",
                "import"
              ]
            }
          },
          {
            "name": "filter[trigger][resource_type]",
            "in": "query",
            "description": "[Resource type](https://docs.myparcel.com/api/resources/hooks/trigger.html) to filter the hooks by.",
            "schema": {
              "type": "string",
              "enum": [
                "shipments",
                "shipment-statuses",
                "returns"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the hooks.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/HookResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/hooks?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/hooks?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/hooks?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/hooks?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/hooks?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Hooks"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Create a new hook.",
        "description": "This endpoint creates a new hook with the posted data.",
        "requestBody": {
          "description": "The hook object to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Hook"
                      },
                      {
                        "required": [
                          "attributes",
                          "relationships"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "name",
                              "order",
                              "active",
                              "trigger",
                              "action"
                            ],
                            "properties": {
                              "trigger": {
                                "required": [
                                  "resource_type",
                                  "resource_action"
                                ]
                              },
                              "action": {
                                "required": [
                                  "action_type"
                                ]
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The hook is created.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/HookResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hooks/{hook_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-hook_id"
        }
      ],
      "get": {
        "tags": [
          "Hooks"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.view"
            ]
          }
        ],
        "summary": "Get a hook by ID.",
        "description": "This endpoint retrieves the hook with the supplied ID.",
        "responses": {
          "200": {
            "description": "Retrieved the hook.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/HookResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Hooks"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.manage"
            ]
          }
        ],
        "summary": "Update a hook by ID.",
        "description": "This endpoint updates the hook with the supplied ID.",
        "requestBody": {
          "description": "The hook object with attributes to be updated.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Hook"
                      },
                      {
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "relationships": {
                            "readOnly": true
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The hook is updated.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/HookResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Hooks"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.manage"
            ]
          }
        ],
        "summary": "Delete a hook by ID.",
        "description": "This endpoint deletes the hook with the supplied ID.",
        "responses": {
          "204": {
            "description": "The hook is deleted."
          }
        }
      }
    },
    "/hooks/{hook_id}/logs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-hook_id"
        }
      ],
      "get": {
        "tags": [
          "Hooks"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.view"
            ]
          }
        ],
        "summary": "Get all the logs for a hook.",
        "description": "This endpoint retrieves logs for the supplied hook.",
        "parameters": [
          {
            "$ref": "#/components/parameters/query-filter-created_at-date_from"
          },
          {
            "$ref": "#/components/parameters/query-filter-created_at-date_to"
          },
          {
            "name": "filter[has_errors]",
            "in": "query",
            "description": "Boolean value.<ul><li>`true` Only logs with errors.</li><li>`false` Only logs without errors.</li></ul>",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the log(s).",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/HookLog"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/hooks/99c2917a-8cbe-4e04-b4ce-e43263b20332/logs?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/hooks/99c2917a-8cbe-4e04-b4ce-e43263b20332/logs?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/hooks/99c2917a-8cbe-4e04-b4ce-e43263b20332/logs?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/hooks/99c2917a-8cbe-4e04-b4ce-e43263b20332/logs?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/hooks/99c2917a-8cbe-4e04-b4ce-e43263b20332/logs?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hook-logs/{hook_log_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-hook-log_id"
        }
      ],
      "get": {
        "tags": [
          "HookLogs"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.view"
            ]
          }
        ],
        "summary": "Get a hook log by ID.",
        "description": "This endpoint retrieves the hook log with the supplied ID.",
        "responses": {
          "200": {
            "description": "Retrieved the hook log.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/HookLog"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/integrations": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.manage"
            ]
          }
        ],
        "summary": "Get all the integrations.",
        "description": "This endpoint retrieves the available integrations in the MyParcel.com API.",
        "parameters": [
          {
            "name": "filter[provides_outbound_shipments]",
            "in": "query",
            "description": "Filter integrations that can import orders for outbound shipping.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "filter[provides_single_order_fetch]",
            "in": "query",
            "description": "Filter integrations that can fetch a single order by order reference and e-mail.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/query-filter-tags"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the integrations.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IntegrationResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/integrations?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/integrations?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/integrations?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/integrations?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/integrations?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/integrations/{integration_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-integration_id"
        }
      ],
      "get": {
        "tags": [
          "Integrations"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          }
        ],
        "summary": "Get an integration by ID.",
        "description": "This endpoint retrieves the integration with the supplied ID.",
        "responses": {
          "200": {
            "description": "Retrieved the integration.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/IntegrationResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoices": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "security": [
          {
            "OAuth2": []
          }
        ],
        "summary": "Get all available invoices.",
        "description": "This endpoint retrieves invoices available to your API client.",
        "responses": {
          "200": {
            "description": "Retrieved the invoices.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InvoiceResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/invoices?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/invoices?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/invoices?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/invoices?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/invoices?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Invoices"
        ],
        "security": [
          {
            "OAuth2": []
          }
        ],
        "summary": "Create a new invoice.",
        "description": "This endpoint creates a new invoice with the posted data.",
        "requestBody": {
          "description": "The invoices resource to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Invoice"
                      },
                      {
                        "required": [
                          "attributes",
                          "relationships"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "price"
                            ]
                          },
                          "relationships": {
                            "required": [
                              "organization"
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The invoice is created.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/InvoiceResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{invoice_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-invoice_id"
        }
      ],
      "get": {
        "tags": [
          "Invoices"
        ],
        "security": [
          {
            "OAuth2": []
          }
        ],
        "summary": "Get one invoice.",
        "description": "This endpoint retrieves the invoice with the supplied ID.",
        "responses": {
          "200": {
            "description": "Retrieved the invoice.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/InvoiceResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Invoices"
        ],
        "security": [
          {
            "OAuth2": []
          }
        ],
        "summary": "Update an invoice by ID.",
        "description": "This endpoint updates the invoice with the supplied ID.",
        "requestBody": {
          "description": "The invoice object with attributes to be updated.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Invoice"
                      },
                      {
                        "required": [
                          "id"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The invoice is updated.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/InvoiceResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/liability-coverages/{liability_coverage_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-liability_coverage_id"
        }
      ],
      "get": {
        "tags": [
          "LiabilityCoverages"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.view"
            ]
          }
        ],
        "summary": "Get a liability coverage by ID.",
        "description": "This endpoint retrieves a liability coverage for the supplied ID.",
        "responses": {
          "200": {
            "description": "Retrieved the liability coverage.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LiabilityCoverageResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/locales/v1/locales": {
      "get": {
        "tags": [
          "Locales"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          }
        ],
        "summary": "Get all locales.",
        "description": "This endpoint retrieves all locales.",
        "parameters": [
          {
            "name": "filter[available_in_back_office]",
            "in": "query",
            "description": "When set to true, only return languages that are supported by the back office.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "filter[available_in_return_portal]",
            "in": "query",
            "description": "When set to true, only return languages that are supported by the return portal.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the locales.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LocaleResponse"
                      },
                      "properties": {
                        "attributes": {
                          "required": [
                            "code",
                            "name",
                            "created_at"
                          ]
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/locales/v1/locales?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/locales/v1/locales?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/locales/v1/locales?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/locales/v1/locales?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/locales/v1/locales?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/manifests": {
      "get": {
        "tags": [
          "Manifests"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.view"
            ]
          }
        ],
        "summary": "Get all available manifests.",
        "description": "This endpoint retrieves manifests available to your API client.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`files`</li><li>`contract`</li><li>`contract.carrier`</li><li>`owner`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the manifests.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/ManifestResponse"
                          }
                        ]
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "included": {
                      "$ref": "#/components/schemas/ManifestIncludes"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/manifests?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/manifests?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/manifests?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/manifests?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/manifests?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Manifests"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          }
        ],
        "summary": "Create a new manifest.",
        "description": "This endpoint creates a new manifest with the posted data.",
        "requestBody": {
          "description": "The manifest object to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Manifest"
                      },
                      {
                        "required": [
                          "attributes",
                          "relationships"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "name",
                              "address"
                            ],
                            "properties": {
                              "address": {
                                "required": [
                                  "street_1",
                                  "city",
                                  "country_code"
                                ]
                              }
                            }
                          },
                          "relationships": {
                            "oneOf": [
                              {
                                "required": [
                                  "shipments",
                                  "owner"
                                ],
                                "properties": {
                                  "shop": {
                                    "readOnly": true
                                  }
                                }
                              },
                              {
                                "deprecated": true,
                                "required": [
                                  "shipments",
                                  "shop"
                                ],
                                "properties": {
                                  "owner": {
                                    "readOnly": true
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "meta": {
                    "type": "object",
                    "properties": {
                      "update_shipment_statuses": {
                        "type": "boolean",
                        "example": true,
                        "description": "When set to `true` all related shipments will be updated with a new shipment status containing the status code `shipment-received-by-carrier`."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The manifest has been created.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ManifestResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/manifests/{manifest_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-manifest_id"
        }
      ],
      "get": {
        "tags": [
          "Manifests"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.view"
            ]
          }
        ],
        "summary": "Get a manifest by ID.",
        "description": "This endpoint retrieves the manifest with the supplied ID.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`files`</li><li>`contract`</li><li>`contract.carrier`</li><li>`owner`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the manifest.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/ManifestResponse"
                        }
                      ]
                    },
                    "included": {
                      "$ref": "#/components/schemas/ManifestIncludes"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/manifests/{manifest_id}/files/{file_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-manifest_id"
        },
        {
          "$ref": "#/components/parameters/path-file_id"
        }
      ],
      "get": {
        "tags": [
          "Manifests"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.view"
            ]
          }
        ],
        "summary": "Get a file related to a manifest.",
        "description": "This endpoint retrieves a file of the supplied manifest.",
        "parameters": [
          {
            "deprecated": true,
            "name": "Accept",
            "in": "header",
            "description": "You must set the accept header to retrieve the file in the given format. Possible options are: <ul><li>`application/pdf`</li><li>`text/csv`</li></ul>",
            "schema": {
              "type": "string",
              "enum": [
                "application/pdf",
                "text/csv"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the file.",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "description": "Raw contents of the manifest file."
                }
              }
            }
          }
        }
      }
    },
    "/onboarding/v1/invitations": {
      "get": {
        "tags": [
          "Invitations"
        ],
        "security": [
          {
            "OAuth2": [
              "brokers.manage"
            ]
          }
        ],
        "summary": "Get all available invitations.",
        "description": "This endpoint retrieves invitations available to your API client.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`broker`</li><li>`user`</li></ul>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[email]",
            "in": "query",
            "description": "Email address of the invitee.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the invitations.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InvitationResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "included": {
                      "$ref": "#/components/schemas/InvitationIncludes"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/invitations/v1/invitations?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/invitations/v1/invitations?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/invitations/v1/invitations?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/invitations/v1/invitations?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/invitations/v1/invitations?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Invitations"
        ],
        "security": [
          {
            "OAuth2": [
              "brokers.manage"
            ]
          }
        ],
        "summary": "Create a new invitation.",
        "description": "This endpoint creates a new invitation with the posted data.",
        "requestBody": {
          "description": "The invitation object to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/InvitationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The invitation has been created.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/InvitationResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/onboarding/v1/invitations/{invitation_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-invitation_id"
        }
      ],
      "get": {
        "tags": [
          "Invitations"
        ],
        "security": [
          {
            "OAuth2": [
              "brokers.manage"
            ]
          }
        ],
        "summary": "Get an invitation resource.",
        "description": "This endpoint retrieves a invitation resource by the specified ID.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`broker`</li><li>`user`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the invitation.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/InvitationResponse"
                    },
                    "included": {
                      "$ref": "#/components/schemas/InvitationIncludes"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No invitation was found for the given ID."
          }
        }
      }
    },
    "/onboarding/v1/invitations/{invitation_id}/onboard": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-invitation_id"
        }
      ],
      "post": {
        "tags": [
          "Invitations"
        ],
        "security": [
          {
            "OAuth2": [
              "brokers.manage"
            ]
          }
        ],
        "summary": "Start onboarding process.",
        "description": "This `RPC` endpoint creates a user based on an invitation.",
        "requestBody": {
          "description": "The onboarding request.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "required": [
                      "email",
                      "password",
                      "first_name",
                      "last_name",
                      "shop_name",
                      "address"
                    ],
                    "properties": {
                      "email": {
                        "$ref": "#/components/schemas/Email",
                        "example": "s.holmes@holmesinvestigations.com"
                      },
                      "password": {
                        "type": "string",
                        "example": "The best passwords are long, so use a sentence!"
                      },
                      "first_name": {
                        "type": "string",
                        "example": "Sherlock"
                      },
                      "last_name": {
                        "type": "string",
                        "example": "Holmes"
                      },
                      "company": {
                        "type": "string",
                        "example": "Holmes Investigations"
                      },
                      "phone_number": {
                        "type": "string",
                        "example": "+44 20 7946 0958"
                      },
                      "shop_name": {
                        "type": "string",
                        "example": "Holmes Investigations"
                      },
                      "address": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/BaseAddress"
                          },
                          {
                            "required": [
                              "street_1",
                              "city",
                              "country_code"
                            ]
                          }
                        ]
                      },
                      "return_address": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/BaseAddress"
                          },
                          {
                            "required": [
                              "street_1",
                              "city",
                              "country_code"
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The user has been onboarded."
          },
          "404": {
            "description": "No invitation was found for the given ID."
          }
        }
      }
    },
    "/organizations": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "security": [
          {
            "OAuth2": [
              "broker.member",
              "organizations.manage"
            ]
          },
          {
            "OAuth2": [
              "broker.member",
              "shipments.view"
            ]
          }
        ],
        "summary": "Get all available organizations.",
        "description": "This endpoint retrieves organizations available to your API client.",
        "parameters": [
          {
            "name": "filter[search]",
            "in": "query",
            "description": "String of characters you want to look for in an organization's attributes. Available fields to look in are:<ul><li>`name`</li><li>`billing_address`</li><li>`reference`</li></ul>",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/query-filter-search-name"
          },
          {
            "$ref": "#/components/parameters/query-filter-broker"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the organizations.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrganizationResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/organizations?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/organizations?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/organizations?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/organizations?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/organizations?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Organizations"
        ],
        "security": [
          {
            "OAuth2": [
              "broker.member"
            ]
          }
        ],
        "summary": "Create a new organization.",
        "description": "This endpoint creates a new organization with the posted data.",
        "requestBody": {
          "description": "The organization object to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Organization"
                      },
                      {
                        "required": [
                          "attributes",
                          "relationships"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "billing_address": {
                                "required": [
                                  "street_1",
                                  "city",
                                  "country_code"
                                ]
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "meta": {
                    "$ref": "#/components/schemas/OrganizationMeta"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The organization is created.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/OrganizationResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-organization_id"
        }
      ],
      "get": {
        "tags": [
          "Organizations"
        ],
        "security": [
          {
            "OAuth2": [
              "broker.member",
              "organizations.manage"
            ]
          },
          {
            "OAuth2": [
              "broker.member",
              "shipments.view"
            ]
          }
        ],
        "summary": "Get an organization by ID.",
        "description": "This endpoint retrieves the organization with the supplied ID.",
        "responses": {
          "200": {
            "description": "Retrieved the organization.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/OrganizationResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Organizations"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          }
        ],
        "summary": "Update an organization by ID.",
        "description": "This endpoint updates the organization with the supplied ID.",
        "requestBody": {
          "description": "The organization object with attributes to be updated.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Organization"
                      },
                      {
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "relationships": {
                            "readOnly": true
                          }
                        }
                      }
                    ]
                  },
                  "meta": {
                    "$ref": "#/components/schemas/OrganizationMeta"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The organization is updated.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/OrganizationResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Organizations"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          }
        ],
        "summary": "Delete an organization by ID.",
        "description": "This endpoint deletes the organization with the supplied ID.",
        "responses": {
          "204": {
            "description": "The organization is deleted."
          }
        }
      }
    },
    "/organizations/{organization_id}/contracts": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-organization_id"
        }
      ],
      "get": {
        "tags": [
          "Organizations"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          }
        ],
        "summary": "Get the available contracts for a specific organization.",
        "description": "This endpoint retrieves available contracts for an organization with the supplied ID.",
        "responses": {
          "200": {
            "description": "Retrieved the available contracts for the organization.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ContractResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/organizations/9cdf86e8-333f-4ed9-bb31-4935c780c947/contracts?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/organizations/9cdf86e8-333f-4ed9-bb31-4935c780c947/contracts?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/organizations/9cdf86e8-333f-4ed9-bb31-4935c780c947/contracts?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/organizations/9cdf86e8-333f-4ed9-bb31-4935c780c947/contracts?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/organizations/9cdf86e8-333f-4ed9-bb31-4935c780c947/contracts?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/relationships/contracts": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-organization_id"
        }
      ],
      "post": {
        "tags": [
          "Organizations"
        ],
        "security": [
          {
            "OAuth2": [
              "contracts.manage",
              "organizations.manage"
            ]
          }
        ],
        "summary": "Add contract relationships to an organization.",
        "description": "This endpoint adds contract relationships to the organization with the supplied ID.",
        "requestBody": {
          "description": "The contract relationships to be added to the organization.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractsRelationship"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The contract relationships have been added."
          }
        }
      },
      "delete": {
        "tags": [
          "Organizations"
        ],
        "security": [
          {
            "OAuth2": [
              "contracts.manage",
              "organizations.manage"
            ]
          }
        ],
        "summary": "Delete contract relationships from an organization.",
        "description": "This endpoint deletes contract relationships from the organization with the supplied ID.",
        "requestBody": {
          "description": "The contract relationships to be deleted from the organization.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractsRelationship"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The contract relationships have been deleted."
          }
        }
      }
    },
    "/password-resets": {
      "post": {
        "tags": [
          "PasswordResets"
        ],
        "summary": "Create a password reset.",
        "description": "This endpoint creates a new password reset with the posted data. <strong>A password reset link will be sent via email.</strong> Any previous password resets for this user will be disabled.",
        "requestBody": {
          "description": "The password reset object to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/PasswordResetResource"
                      },
                      {
                        "required": [
                          "attributes"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "type": "object",
                            "required": [
                              "username"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "username": {
                                "type": "string",
                                "example": "s.holmes@holmesinvestigations.com"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The password reset is created."
          }
        }
      }
    },
    "/password-resets/{password_reset_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-password_reset_id"
        }
      ],
      "patch": {
        "tags": [
          "PasswordResets"
        ],
        "summary": "Update a password reset by ID.",
        "description": "This endpoint updates the password reset with the supplied ID. As a result, the password of the user will be updated.",
        "requestBody": {
          "description": "The password reset object with the `password` attribute to be updated.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/PasswordResetResource"
                      },
                      {
                        "required": [
                          "id",
                          "attributes"
                        ],
                        "properties": {
                          "attributes": {
                            "type": "object",
                            "required": [
                              "password"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "password": {
                                "type": "string",
                                "example": "The best passwords are long, so use a sentence!"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The password of the user is updated."
          }
        }
      }
    },
    "/rate-imports": {
      "get": {
        "tags": [
          "RateImports"
        ],
        "security": [
          {
            "OAuth2": [
              "contracts.manage"
            ]
          }
        ],
        "summary": "Get all rate imports.",
        "description": "This endpoint retrieves rate imports available to your API client.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`contract`</li><li>`contract.carrier`</li><li>`file`</li></ul>",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/query-filter-status"
          },
          {
            "$ref": "#/components/parameters/query-filter-carrier"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the rate imports.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RateImportResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "included": {
                      "$ref": "#/components/schemas/RateImportIncludes"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/rate-imports?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/rate-imports?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/rate-imports?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/rate-imports?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/rate-imports?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "RateImports"
        ],
        "security": [
          {
            "OAuth2": [
              "contracts.manage"
            ]
          }
        ],
        "summary": "Create a new rate import.",
        "description": "This endpoint creates a new rate import with the posted data.",
        "requestBody": {
          "description": "The rate import object to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/RateImport"
                      },
                      {
                        "required": [
                          "relationships"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "properties": {
                              "status": {
                                "readOnly": true
                              },
                              "error": {
                                "readOnly": true
                              },
                              "total_rates": {
                                "readOnly": true
                              }
                            }
                          },
                          "relationships": {
                            "required": [
                              "contract"
                            ]
                          },
                          "meta": {
                            "type": "object",
                            "properties": {
                              "sheet_contents": {
                                "type": "string",
                                "description": "Base64 encoded csv file contents of the service rates to be imported."
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The rate import has been created.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RateImportResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rate-imports/{rate_import_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-rates_import_id"
        }
      ],
      "get": {
        "tags": [
          "RateImports"
        ],
        "security": [
          {
            "OAuth2": [
              "contracts.manage"
            ]
          }
        ],
        "summary": "Get a rate import by ID.",
        "description": "This endpoint retrieves the rate import with the supplied ID.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`contract`</li><li>`contract.carrier`</li><li>`file`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the rate import.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RateImportResponse"
                    },
                    "included": {
                      "$ref": "#/components/schemas/RateImportIncludes"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/regions": {
      "get": {
        "deprecated": true,
        "tags": [
          "Regions"
        ],
        "security": [
          {
            "OAuth2": []
          }
        ],
        "summary": "Get all the regions.",
        "description": "This endpoint retrieves regions. All regions are connected via parent-child relationships. Services are available in certain regions. Regions with a country code can be used to create shipments.",
        "parameters": [
          {
            "name": "filter[parent]",
            "in": "query",
            "description": "Comma separated string of parent IDs to filter by.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[country_code]",
            "in": "query",
            "description": "Comma separated string of country codes to filter by.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[postal_code]",
            "in": "query",
            "description": "Postal code to filter by.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[region_code]",
            "in": "query",
            "description": "Comma separated string of region codes to filter by.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "in": "query",
            "description": "Name of the region to filter by.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[category]",
            "in": "query",
            "description": "Comma separated string of categories to filter by.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the regions.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RegionResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/regions?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/regions?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/regions?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/regions?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/regions?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/regions/{region_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-region_id"
        }
      ],
      "get": {
        "deprecated": true,
        "tags": [
          "Regions"
        ],
        "security": [
          {
            "OAuth2": []
          }
        ],
        "summary": "Get a region by ID.",
        "description": "This endpoint retrieves the region with the supplied ID.",
        "responses": {
          "200": {
            "description": "Retrieved the region.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RegionResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports": {
      "get": {
        "tags": [
          "Reports"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.view"
            ]
          }
        ],
        "summary": "Get all reports available to you.",
        "description": "This endpoint retrieves all reports available to you.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`file`</li><li>`status`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the reports.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReportResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "included": {
                      "$ref": "#/components/schemas/ReportIncludes"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/reports?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/reports?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/reports?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/reports?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/reports?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Reports"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.view"
            ]
          }
        ],
        "summary": "Create a new report.",
        "description": "This endpoint creates a new report based on the posted filters.",
        "requestBody": {
          "description": "The report filters.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Report"
                      },
                      {
                        "required": [
                          "attributes"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "name",
                              "filters"
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The report is created and the file will be available for download shortly.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReportResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports/{report_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-report_id"
        }
      ],
      "get": {
        "tags": [
          "Reports"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.view"
            ]
          }
        ],
        "summary": "Get a report by ID.",
        "description": "This endpoint retrieves the report with the supplied ID.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`file`</li><li>`status`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the report.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReportResponse"
                    },
                    "included": {
                      "$ref": "#/components/schemas/ReportIncludes"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Reports"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.view"
            ]
          }
        ],
        "summary": "Delete a report by ID.",
        "description": "This endpoint deletes the report with the supplied ID.",
        "responses": {
          "204": {
            "description": "The report is deleted."
          },
          "423": {
            "description": "The report could not be deleted."
          }
        }
      }
    },
    "/reports/{report_id}/files/{file_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-report_id"
        },
        {
          "$ref": "#/components/parameters/path-file_id"
        }
      ],
      "get": {
        "tags": [
          "Reports"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.view"
            ]
          }
        ],
        "summary": "Get a file related to a report.",
        "description": "This endpoint retrieves the file of the supplied report. All successfully completed reports will have an attached CSV file.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "You must set the accept header to retrieve the file in the given format. Possible options are: <ul><li>`text/csv`</li></ul>",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "text/csv"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the file.",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "description": "Raw contents of the CSV file."
                }
              }
            }
          }
        }
      }
    },
    "/returns/v1/demo-orders": {
      "get": {
        "tags": [
          "Returns"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Get all demo orders resources.",
        "description": "This endpoint retrieves generated orders to test creating returns.",
        "parameters": [
          {
            "$ref": "#/components/parameters/query-filter-shop"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br> The relationships that can be included are:<ul><li>`shop`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the demo orders.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "links"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DemoOrderResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "included": {
                      "$ref": "#/components/schemas/ShopResponse"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/demo-orders?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/demo-orders?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/demo-orders?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/demo-orders?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/demo-orders?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Returns"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Create a new demo order.",
        "description": "This endpoint creates a new demo order with the posted data.",
        "requestBody": {
          "description": "The demo order object to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/DemoOrder"
                      },
                      {
                        "required": [
                          "attributes",
                          "relationships"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "items",
                              "recipient_address"
                            ],
                            "properties": {
                              "recipient_address": {
                                "required": [
                                  "first_name",
                                  "last_name",
                                  "street_1",
                                  "city",
                                  "country_code",
                                  "email"
                                ]
                              },
                              "items": {
                                "items": {
                                  "required": [
                                    "name",
                                    "description",
                                    "quantity",
                                    "item_price"
                                  ]
                                }
                              }
                            }
                          },
                          "relationships": {
                            "required": [
                              "shop"
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The demo order has been created.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DemoOrderResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/returns/v1/demo-orders/{demo_order_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-demo_order_id"
        }
      ],
      "get": {
        "tags": [
          "Returns"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Get a demo order resource.",
        "description": "This endpoint retrieves a demo order resource by the specified ID.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br> The relationships that can be included are:<ul><li>`shop`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the demo order.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DemoOrderResponse"
                    },
                    "included": {
                      "$ref": "#/components/schemas/ShopResponse"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No demo order was found for the given ID."
          }
        }
      }
    },
    "/returns/v1/returns": {
      "get": {
        "tags": [
          "Returns"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Get all available returns.",
        "description": "This endpoint retrieves returns available to your API client.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`return_method`</li><li>`shop`</li><li>`status`</li></ul>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[email]",
            "in": "query",
            "description": "Email address of the consumer of the return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "in": "query",
            "description": "Partial string contained in the order reference, address (street 1, city or postal code) or contact (first name, last name, email or company) information.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/query-filter-status"
          },
          {
            "$ref": "#/components/parameters/query-filter-shop"
          },
          {
            "$ref": "#/components/parameters/query-filter-created_at-date_from"
          },
          {
            "$ref": "#/components/parameters/query-filter-created_at-date_to"
          },
          {
            "name": "filter[has_preferred_outcome_refund]",
            "in": "query",
            "description": "Boolean value.<ul><li>`true` Only returns which have an item with `preferred_outcome` set to `refund`.</li><li>`false` Only returns which do not have an item with `preferred_outcome` set to `refund`.</li></ul>",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "filter[has_preferred_outcome_exchange]",
            "in": "query",
            "description": "Boolean value.<ul><li>`true` Only returns which have an item with `preferred_outcome` set to `exchange`.</li><li>`false` Only returns which do not have an item with `preferred_outcome` set to `exchange`.</li></ul>",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the returns.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReturnSimpleResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "included": {
                      "$ref": "#/components/schemas/ReturnIncludes"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/returns?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/returns?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/returns?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/returns?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/returns?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Returns"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/header-accept-language"
          }
        ],
        "summary": "Create a new return.",
        "description": "This endpoint creates a new return with the posted data.",
        "requestBody": {
          "description": "The return object to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ReturnRequest"
                      },
                      {
                        "required": [
                          "attributes",
                          "relationships"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "order_reference",
                              "items",
                              "consumer_address"
                            ],
                            "properties": {
                              "consumer_address": {
                                "required": [
                                  "street_1",
                                  "city",
                                  "country_code"
                                ]
                              }
                            }
                          },
                          "relationships": {
                            "required": [
                              "return_method",
                              "shop"
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The return has been created.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReturnResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/returns/v1/returns/{return_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-return_id"
        },
        {
          "$ref": "#/components/parameters/header-accept-language"
        }
      ],
      "get": {
        "tags": [
          "Returns"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Get a return resource.",
        "description": "This endpoint retrieves a return resource by the specified ID.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`return_method`</li><li>`shipment`</li><li>`shop`</li><li>`status`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the return.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReturnResponse"
                    },
                    "included": {
                      "$ref": "#/components/schemas/ReturnIncludes"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No return was found for the given ID."
          }
        }
      }
    },
    "/returns/v1/returns/{return_id}/approve": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-return_id"
        }
      ],
      "post": {
        "tags": [
          "Returns"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Approve a return.",
        "description": "This endpoint modifies the status of a return resource to `return-approved`",
        "responses": {
          "204": {
            "description": "The return is approved."
          },
          "404": {
            "description": "No return was found for the given ID."
          },
          "422": {
            "description": "This modification is not allowed on this return."
          }
        }
      }
    },
    "/returns/v1/returns/{return_id}/reject": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-return_id"
        }
      ],
      "post": {
        "tags": [
          "Returns"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Reject a return.",
        "description": "This endpoint modifies the status of a return resource to `return-rejected`",
        "responses": {
          "204": {
            "description": "The return is rejected."
          },
          "404": {
            "description": "No return was found for the given ID."
          },
          "422": {
            "description": "This modification is not allowed on this return."
          }
        }
      }
    },
    "/returns/v1/returns/{return_id}/request-payment": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-return_id"
        }
      ],
      "post": {
        "tags": [
          "Returns"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Request a payment for a return.",
        "description": "This endpoint requests a payment for a return through the connected payment provider",
        "requestBody": {
          "description": "The return payment request object to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "required": [
                      "return_payment"
                    ],
                    "properties": {
                      "return_payment": {
                        "$ref": "#/components/schemas/Price"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The return payment request is created."
          },
          "403": {
            "description": "The payment provider does not allow the return payment request to be created."
          },
          "422": {
            "description": "This modification is not allowed on this return payment request."
          },
          "500": {
            "description": "The payment provider returned an error."
          }
        }
      }
    },
    "/returns/v1/returns/{return_id}/request-recovery-shipment": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-return_id"
        }
      ],
      "post": {
        "tags": [
          "Returns"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Request a recovery shipment for a return.",
        "description": "This endpoint generates a recovery shipment for a return. This serves as a fallback for when the shipment label of the primary return method cannot be used, for example due to a damaged or missing label that was in the parcel.",
        "parameters": [
          {
            "$ref": "#/components/parameters/query-hmac"
          }
        ],
        "responses": {
          "204": {
            "description": "The recovery shipment is created."
          },
          "403": {
            "description": "The provided HMAC signature is not valid for this return."
          },
          "404": {
            "description": "The provided return was not found."
          },
          "422": {
            "description": "The return method does not support recovery shipments."
          }
        }
      }
    },
    "/returns/v1/returns/{return_id}/payment-checkout-url/{payment_id}?hmac={hmac}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-return_id"
        },
        {
          "$ref": "#/components/parameters/path-payment_id"
        },
        {
          "$ref": "#/components/parameters/query-hmac"
        }
      ],
      "get": {
        "tags": [
          "Returns"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Get a return payment checkout url",
        "description": "This endpoint requests a return payment checkout url to a payment provider",
        "responses": {
          "302": {
            "description": "The return payment checkout url is returned in the Location header.",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "The return payment checkout url"
              }
            }
          },
          "403": {
            "description": "The payment provider does not allow the return payment link to be created or HMAC signature is invalid."
          },
          "404": {
            "description": "The payment was not found."
          },
          "422": {
            "description": "When not connected to the payment provider, or payment is already paid"
          },
          "500": {
            "description": "The payment provider returned an error."
          }
        }
      }
    },
    "/returns/v1/returns/{return_id}/retry-shipment": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-return_id"
        }
      ],
      "post": {
        "tags": [
          "Returns"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Retry shipment registration on a return.",
        "description": "This endpoint allows the API user to manually trigger shipment registration on a return.",
        "responses": {
          "204": {
            "description": "Shipment registration is successful"
          },
          "404": {
            "description": "No return was found for the given ID."
          },
          "422": {
            "description": "Cannot attempt shipment registration on a return that is not approved."
          },
          "500": {
            "description": "Shipment registration failed"
          }
        }
      }
    },
    "/returns/v1/return-methods": {
      "get": {
        "tags": [
          "ReturnMethods"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Get all available return methods.",
        "description": "This endpoint retrieves return methods available to your API client.",
        "parameters": [
          {
            "$ref": "#/components/parameters/query-filter-shop"
          },
          {
            "$ref": "#/components/parameters/query-filter-weight"
          },
          {
            "name": "filter[address_from][country_code]",
            "in": "query",
            "description": "Country code of origin location. Combine with `filter[address_from][postal_code]` for more accurate results.",
            "schema": {
              "$ref": "#/components/schemas/CountryCode"
            }
          },
          {
            "name": "filter[shipping_and_return]",
            "in": "query",
            "description": "When set to true, the endpoint will return only shipping return methods that offer shipping and return service. However, in case that there is no shipping return method available, the endpoint will respond with all return methods, except label in the box, unless specified as a filter. When set to false, the endpoint will exclude all shipping and return return methods.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "filter[label_in_the_box]",
            "in": "query",
            "description": "When set to true, the endpoint will return only return methods that offer label in the box service. However, in case that there is no label in the box return method available, the endpoint will respond with all return methods, except shipping and return, unless specified as a filter. When set to false, the endpoint will exclude all label in the box return methods.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`shop`</li><li>`service`</li><li>`service_options`</li><li>`contract`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the return methods.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReturnMethodResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "included": {
                      "$ref": "#/components/schemas/ReturnMethodIncludes"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/return-methods?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/return-methods?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/return-methods?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/return-methods?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/return-methods?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ReturnMethods"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Create a new return method.",
        "description": "This endpoint creates a new return method with the posted data.",
        "requestBody": {
          "description": "The return method object to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ReturnMethod"
                      },
                      {
                        "required": [
                          "attributes",
                          "relationships"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "return_type"
                            ],
                            "properties": {
                              "default_weight": {
                                "description": "Required if the `return_type` is set to `shipment`."
                              },
                              "country_codes": {
                                "description": "Country codes to which the return method applies. Codes are in ISO 3166-1 alpha-2 format. <b>It can be specified for store-drop-off and self-shipment return methods only.</b> Shipment return methods automatically set country code lists based on MyParcel.com shipping services configuration."
                              }
                            }
                          },
                          "relationships": {
                            "properties": {
                              "contract": {
                                "description": "Required if the `return_type` is set to `shipment`."
                              },
                              "service": {
                                "description": "Required if the `return_type` is set to `shipment`."
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The return method has been created.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReturnMethodResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/returns/v1/return-methods/{return_method_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-return_method_id"
        }
      ],
      "get": {
        "tags": [
          "ReturnMethods"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Get a return method resource.",
        "description": "This endpoint retrieves a return method resource by the specified ID.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`shop`</li><li>`service`</li><li>`service_options`</li><li>`contract`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the return method.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReturnMethodResponse"
                    },
                    "included": {
                      "$ref": "#/components/schemas/ReturnMethodIncludes"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No return method was found for the given ID."
          }
        }
      },
      "delete": {
        "tags": [
          "ReturnMethods"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Delete a return method by ID.",
        "description": "This endpoint deletes the return method with the supplied ID.",
        "responses": {
          "204": {
            "description": "The return method is deleted."
          }
        }
      }
    },
    "/returns/v1/reasons": {
      "get": {
        "tags": [
          "ReturnReasons"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          },
          {
            "OAuth2": [
              "return_reasons.manage"
            ]
          }
        ],
        "summary": "Get all available return reasons.",
        "description": "This endpoint retrieves returns reasons available to your API client.",
        "parameters": [
          {
            "$ref": "#/components/parameters/query-filter-tags"
          },
          {
            "$ref": "#/components/parameters/header-accept-language"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the return reasons.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReturnReasonResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/reasons?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/reasons?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/reasons?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/reasons?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/reasons?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ReturnReasonsManagement"
        ],
        "security": [
          {
            "OAuth2": [
              "return_reasons.manage"
            ]
          }
        ],
        "summary": "Create a new return reason.",
        "description": "This endpoint creates a new return reason with the posted data.",
        "requestBody": {
          "description": "The return reason object to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/CreateReturnReason"
                      },
                      {
                        "required": [
                          "attributes"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "code",
                              "description",
                              "accepts_attachments",
                              "requires_attachments",
                              "accepts_comment",
                              "requires_comment"
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The return reason has been created.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReturnReasonResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/returns/v1/reasons/{return_reason_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-return_reason_id"
        },
        {
          "$ref": "#/components/parameters/header-accept-language"
        }
      ],
      "get": {
        "tags": [
          "ReturnReasons"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          },
          {
            "OAuth2": [
              "return_reasons.manage"
            ]
          }
        ],
        "summary": "Retrieve a return reason by ID.",
        "description": "This endpoint retrieves the return reason with the supplied ID.",
        "responses": {
          "200": {
            "description": "Retrieved the return reason.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReturnReasonResponse"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No return reason was found for the given ID."
          }
        }
      },
      "patch": {
        "tags": [
          "ReturnReasonsManagement"
        ],
        "security": [
          {
            "OAuth2": [
              "return_reasons.manage"
            ]
          }
        ],
        "summary": "Update a return reason by ID.",
        "description": "This endpoint updates the return reason with the supplied ID.",
        "requestBody": {
          "description": "The return reason object with attributes to be updated.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/UpdateReturnReason"
                      },
                      {
                        "required": [
                          "id"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The return reason is updated.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReturnReasonResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ReturnReasonsManagement"
        ],
        "security": [
          {
            "OAuth2": [
              "return_reasons.manage"
            ]
          }
        ],
        "summary": "Delete a return reason by ID.",
        "description": "This endpoint deletes the return reason with the supplied ID.",
        "responses": {
          "204": {
            "description": "The return reason is deleted."
          }
        }
      }
    },
    "/returns/v1/shops/{shop_id}/orders/{reference}/{email}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-shop_id"
        },
        {
          "name": "reference",
          "in": "path",
          "description": "Order reference to retrieve the order by.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "email",
          "in": "path",
          "description": "Email address of the receiver of the order.",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Email"
          }
        }
      ],
      "get": {
        "tags": [
          "Returns"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Get an order resource.",
        "description": "This endpoint retrieves an order resource by the specified reference and email address.",
        "responses": {
          "200": {
            "description": "Retrieved the order.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/OrderResponse"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No order was found for the given reference and email address."
          },
          "409": {
            "description": "One or more of the orders resource is handled by a 3rd party."
          }
        }
      }
    },
    "/returns/v1/shops/{shop_id}/reasons": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-shop_id"
        }
      ],
      "get": {
        "tags": [
          "ReturnReasons"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Get all return reasons for the given shop.",
        "description": "This endpoint retrieves return reasons for the given shop.",
        "parameters": [
          {
            "$ref": "#/components/parameters/header-accept-language"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the return reasons for the given shop.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ShopReturnReasonResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/shops/35eddf50-1d84-47a3-8479-6bfda729cd99/reasons?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/shops/35eddf50-1d84-47a3-8479-6bfda729cd99/reasons?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/shops/35eddf50-1d84-47a3-8479-6bfda729cd99/reasons?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/shops/35eddf50-1d84-47a3-8479-6bfda729cd99/reasons?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/shops/35eddf50-1d84-47a3-8479-6bfda729cd99/reasons?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No return reason was found with the given shop."
          }
        }
      },
      "post": {
        "tags": [
          "ReturnReasons"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Link return reasons to the given shop.",
        "description": "This endpoint links return reasons to the specified shop.",
        "requestBody": {
          "description": "The return reason ID's to link to the shop",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "return_reason_ids"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "return_reason_ids": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Uuid"
                        },
                        "example": [
                          "c6f82140-bfc8-4dff-97e4-9865f29c4ef3",
                          "bafef74c-b3dd-42b7-a92f-88f027f4db2b",
                          "0b058152-f822-4abf-be43-8ee22ed23379"
                        ],
                        "description": "Uuids of return reasons that need to be added to the shop."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The return reasons have been added to the shop."
          }
        }
      }
    },
    "/returns/v1/shops/{shop_id}/reasons/{return_reason_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-shop_id"
        },
        {
          "$ref": "#/components/parameters/path-return_reason_id"
        }
      ],
      "delete": {
        "tags": [
          "ReturnReasons"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Delete return reason from shop.",
        "description": "This endpoint deletes a return reason from the shop.",
        "responses": {
          "204": {
            "description": "The return reason is deleted from the shop."
          },
          "404": {
            "description": "No return reason was found with the given return reason and shop."
          }
        }
      }
    },
    "/returns/v1/shops/{shop_id}/reasons/{return_reason_id}/set-questions": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-shop_id"
        },
        {
          "$ref": "#/components/parameters/path-return_reason_id"
        }
      ],
      "post": {
        "tags": [
          "ReturnQuestions"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Link return questions to a shop's return reason.",
        "description": "This endpoint links return questions to the specified shop's return reason. It overrides previously linked return questions.",
        "requestBody": {
          "description": "The return question ID's to link to the shop's return reason",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "return_questions"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "return_questions": {
                        "description": "Array of objects with a return question code and a boolean indicating if the question is required.",
                        "type": "array",
                        "items": {
                          "required": [
                            "code",
                            "is_required"
                          ],
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "is_required": {
                              "type": "boolean"
                            }
                          }
                        },
                        "example": [
                          {
                            "code": "what-size",
                            "is_required": true
                          },
                          {
                            "code": "unexpected-quality",
                            "is_required": false
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The return questions have been added to the shop's return reason."
          }
        }
      }
    },
    "/returns/v1/analytics/approved": {
      "get": {
        "tags": [
          "ReturnAnalytics"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Get histogram of approved returns.",
        "description": "This endpoint retrieves the amount of approved returns per date.",
        "parameters": [
          {
            "$ref": "#/components/parameters/query-filter-shop"
          },
          {
            "$ref": "#/components/parameters/query-filter-date_from"
          },
          {
            "$ref": "#/components/parameters/query-filter-date_to"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the analytics data in timeseries.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReturnAnalytics"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/returns/v1/analytics/most-returned-items": {
      "get": {
        "tags": [
          "ReturnAnalytics"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Get the most returned items.",
        "description": "This endpoint retrieves the most returned items and their return reasons.",
        "parameters": [
          {
            "$ref": "#/components/parameters/query-filter-shop"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the most returned items.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MostReturnedItem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/returns/v1/analytics/orders": {
      "get": {
        "tags": [
          "ReturnAnalytics"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Get histogram of marketplace orders count.",
        "description": "This endpoint retrieves the number of orders per date interval (day or month).",
        "parameters": [
          {
            "$ref": "#/components/parameters/query-filter-shop"
          },
          {
            "$ref": "#/components/parameters/query-filter-date_from"
          },
          {
            "$ref": "#/components/parameters/query-filter-date_to"
          },
          {
            "name": "group_by",
            "in": "query",
            "description": "Indicates whether to group orders count by date or month.",
            "schema": {
              "type": "string",
              "enum": [
                "day",
                "month"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the analytics data in timeseries.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/OrderAnalytics"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/returns/v1/questions": {
      "get": {
        "tags": [
          "ReturnQuestions"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          },
          {
            "OAuth2": [
              "return_questions.manage"
            ]
          }
        ],
        "summary": "Get all available return questions.",
        "description": "This endpoint retrieves return questions available to your API client.",
        "parameters": [
          {
            "$ref": "#/components/parameters/header-accept-language"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the return questions.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReturnQuestionResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/questions?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/questions?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/questions?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/questions?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/questions?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ReturnQuestions"
        ],
        "security": [
          {
            "OAuth2": [
              "return_questions.manage"
            ]
          }
        ],
        "summary": "Create a new return question.",
        "description": "This endpoint creates a new return question with the posted data.",
        "requestBody": {
          "description": "The return question object to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/CreateReturnQuestionRequest"
                      },
                      {
                        "required": [
                          "attributes"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "code",
                              "description"
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The return question has been created.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReturnQuestionResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/returns/v1/questions/{return_question_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-return_question_id"
        },
        {
          "$ref": "#/components/parameters/header-accept-language"
        }
      ],
      "get": {
        "tags": [
          "ReturnQuestions"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          },
          {
            "OAuth2": [
              "return_questions.manage"
            ]
          }
        ],
        "summary": "Retrieve a return question by ID.",
        "description": "This endpoint retrieves the return question with the supplied ID.",
        "responses": {
          "200": {
            "description": "Retrieved the return question.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReturnQuestionResponse"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No return question was found for the given ID."
          }
        }
      },
      "patch": {
        "tags": [
          "ReturnQuestions"
        ],
        "security": [
          {
            "OAuth2": [
              "return_questions.manage"
            ]
          }
        ],
        "summary": "Update a return question by ID.",
        "description": "This endpoint updates the return question with the supplied ID.",
        "requestBody": {
          "description": "The return question object with attributes to be updated.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/PatchReturnQuestionRequest"
                      },
                      {
                        "required": [
                          "id"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The return question is updated.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReturnQuestionResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ReturnQuestions"
        ],
        "security": [
          {
            "OAuth2": [
              "return_questions.manage"
            ]
          }
        ],
        "summary": "Delete a return question by ID.",
        "description": "This endpoint deletes the return question with the supplied ID.",
        "responses": {
          "204": {
            "description": "The return question is deleted."
          }
        }
      }
    },
    "/returns/v1/reports": {
      "get": {
        "tags": [
          "ReturnReports"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Get all return reports available to you.",
        "description": "This endpoint retrieves all return reports available to you.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`file`</li><li>`status`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the reports.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReturnReportResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "included": {
                      "$ref": "#/components/schemas/ReturnReportIncludes"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/reports?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/reports?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/reports?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/reports?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/returns/v1/reports?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ReturnReports"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Create a new return report.",
        "description": "This endpoint creates a new return report based on the posted filters.",
        "requestBody": {
          "description": "The report filters.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ReturnReport"
                      },
                      {
                        "required": [
                          "attributes"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "name",
                              "filters"
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The report is created and the file will be available for download shortly.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReturnReportResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/returns/v1/reports/count-report-entries": {
      "post": {
        "tags": [
          "ReturnReports"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Get projected return report entries count.",
        "description": "This endpoint retrieves the number of return report entries that would be included in a report with the supplied filters.",
        "requestBody": {
          "description": "The report filters.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ReturnReport"
                      },
                      {
                        "required": [
                          "attributes"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "filters"
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The amount of entries for a report.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "required": [
                        "total_entries"
                      ],
                      "properties": {
                        "total_entries": {
                          "type": "integer",
                          "example": 42
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/returns/v1/reports/{report_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-report_id"
        }
      ],
      "get": {
        "tags": [
          "ReturnReports"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Get a return report by ID.",
        "description": "This endpoint retrieves the return report with the supplied ID.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`file`</li><li>`status`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the report.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReturnReportResponse"
                    },
                    "included": {
                      "$ref": "#/components/schemas/ReturnReportIncludes"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ReturnReports"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Delete a return report by ID.",
        "description": "This endpoint deletes the report with the supplied ID.",
        "responses": {
          "204": {
            "description": "The report is deleted."
          },
          "423": {
            "description": "The report could not be deleted."
          }
        }
      }
    },
    "/returns/v1/reports/{report_id}/files/{file_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-report_id"
        },
        {
          "$ref": "#/components/parameters/path-file_id"
        }
      ],
      "get": {
        "tags": [
          "ReturnReports"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          }
        ],
        "summary": "Get a file related to a return report.",
        "description": "This endpoint retrieves the file of the supplied return report. All successfully completed reports will have an attached CSV file.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "You must set the accept header to retrieve the file in the given format. Possible options are: <ul><li>`text/csv`</li></ul>",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "text/csv"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the file.",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "description": "Raw contents of the CSV file."
                }
              }
            }
          }
        }
      }
    },
    "/scopes": {
      "get": {
        "tags": [
          "Scopes"
        ],
        "security": [
          {
            "OAuth2": []
          }
        ],
        "summary": "Get all the scopes.",
        "description": "This endpoint retrieves all available scopes. Scopes are used to give users access to API endpoints.",
        "responses": {
          "200": {
            "description": "Retrieved the scopes.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ScopeResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/scopes?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/scopes?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/scopes?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/scopes?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/scopes?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/scopes/{scope_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-scope_id"
        }
      ],
      "get": {
        "tags": [
          "Scopes"
        ],
        "security": [
          {
            "OAuth2": []
          }
        ],
        "summary": "Get a scope by ID.",
        "description": "This endpoint retrieves the scope with the supplied ID.",
        "responses": {
          "200": {
            "description": "Retrieved the scope.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ScopeResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services": {
      "get": {
        "tags": [
          "Services"
        ],
        "security": [
          {
            "OAuth2": [
              "broker.member"
            ]
          }
        ],
        "summary": "Get all available services.",
        "description": "This endpoint retrieves services available to your API client.",
        "parameters": [
          {
            "name": "filter[package_type]",
            "in": "query",
            "description": "Comma separated string of package types to filter by.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/query-filter-carrier"
          },
          {
            "deprecated": true,
            "name": "filter[region_from]",
            "in": "query",
            "description": "<s>Comma separated string of region IDs to filter by.</s>",
            "schema": {
              "type": "string"
            }
          },
          {
            "deprecated": true,
            "name": "filter[region_to]",
            "in": "query",
            "description": "<s>Comma separated string of region IDs to filter by.</s>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[address_from][country_code]",
            "in": "query",
            "description": "Country code of origin location to filter by. Combine with `filter[address_from][postal_code]` for more accurate results.",
            "schema": {
              "$ref": "#/components/schemas/CountryCode"
            }
          },
          {
            "name": "filter[address_from][state_code]",
            "in": "query",
            "description": "State code of origin location to filter by.",
            "schema": {
              "$ref": "#/components/schemas/StateCode"
            }
          },
          {
            "name": "filter[address_from][postal_code]",
            "in": "query",
            "description": "Postal code of origin location to filter by. Combine with `filter[address_from][country_code]` for more accurate results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[address_to][country_code]",
            "in": "query",
            "description": "Country code of destination location to filter by. Combine with `filter[address_to][postal_code]` for more accurate results.",
            "schema": {
              "$ref": "#/components/schemas/CountryCode"
            }
          },
          {
            "name": "filter[address_to][state_code]",
            "in": "query",
            "description": "State code of destination location to filter by.",
            "schema": {
              "$ref": "#/components/schemas/StateCode"
            }
          },
          {
            "name": "filter[address_to][postal_code]",
            "in": "query",
            "description": "Postal code of destination location to filter by. Combine with `filter[address_to][country_code]` for more accurate results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[has_active_contract]",
            "in": "query",
            "description": "Boolean value.<ul><li>`true` Only services with active contract associations.</li><li>`false` Only services without active contract associations.</li></ul>",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "filter[delivery_method]",
            "in": "query",
            "description": "Filter the services retrieved based on given delivery method. Possible options are:<ul><li>`delivery`</li><li>`pick-up`</li></ul>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[code]",
            "in": "query",
            "description": "Filter the services retrieved based on given code.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[strict_consolidation]",
            "in": "query",
            "description": "Boolean value.<ul><li>`true` Services that only handle consolidated shipments.</li><li>`false` Only services without strict consolidation.</li></ul>",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`carrier`</li><li>`service_options`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the services.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ServiceResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "included": {
                      "$ref": "#/components/schemas/ServiceIncludes"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/services?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/services?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/services?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/services?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/services?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{service_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-service_id"
        }
      ],
      "get": {
        "tags": [
          "Services"
        ],
        "security": [
          {
            "OAuth2": [
              "broker.member"
            ]
          }
        ],
        "summary": "Get a service by ID.",
        "description": "This endpoint retrieves the service with the supplied ID.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`carrier`</li><li>`service_options`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the service.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ServiceResponse"
                    },
                    "included": {
                      "$ref": "#/components/schemas/ServiceIncludes"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/service-rates": {
      "get": {
        "tags": [
          "ServiceRates"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.manage"
            ]
          }
        ],
        "summary": "Get all available service rates.",
        "description": "This endpoint retrieves service rates available to your API client.",
        "parameters": [
          {
            "name": "filter[contract]",
            "in": "query",
            "description": "Comma separated string of contract IDs to filter by.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/query-filter-service"
          },
          {
            "$ref": "#/components/parameters/query-filter-weight"
          },
          {
            "deprecated": true,
            "name": "filter[volumetric_weight]",
            "in": "query",
            "description": "<strike>Volumetric weight value in grams to filter by. <br>Service rates for services that use volumetric weight will be filtered on the highest value between gross weight and volumetric weight. Use in conjunction with the filter[weight] filter above.</strike> Deprecated in favor of `filter[volume]`",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[volume]",
            "in": "query",
            "description": "This filter expects shipment volume in liters (dm3). This is used to calculate the volumetric weight, using the `volumetric_weight_divisor` of the related service. Service rates are then filtered based on their weight range. It is recommended to use this filter in conjunction with the `filter[weight]` filter to get the most accurate results.",
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "$ref": "#/components/parameters/query-filter-organization"
          },
          {
            "name": "filter[has_active_contract]",
            "in": "query",
            "description": "Boolean value.<ul><li>`true` Only service-rates with active contract associations.</li><li>`false` Only service-rates without active contract associations.</li></ul>",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`contract`</li><li>`contract.carrier`</li><li>`service`</li><li>`service.carrier`</li><li>`service_options`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the service rates.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/ServiceRateResponse"
                          },
                          {
                            "properties": {
                              "meta": {
                                "type": "object",
                                "properties": {
                                  "bracket_price": {
                                    "$ref": "#/components/schemas/Price"
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "included": {
                      "$ref": "#/components/schemas/ServiceRateIncludes"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/service-rates?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/service-rates?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/service-rates?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/service-rates?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/service-rates?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ServiceRates"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          }
        ],
        "summary": "Create a new service rate.",
        "description": "This endpoint creates a new service rate from the posted data.",
        "requestBody": {
          "description": "The service rate object to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ServiceRate"
                      },
                      {
                        "required": [
                          "attributes",
                          "relationships"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "weight_min",
                              "weight_max"
                            ]
                          },
                          "relationships": {
                            "required": [
                              "contract",
                              "service"
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The service rate is created.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ServiceRateResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/service-rates/{service_rate_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-service_rate_id"
        }
      ],
      "get": {
        "tags": [
          "ServiceRates"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.manage"
            ]
          }
        ],
        "summary": "Get a service rate by ID.",
        "description": "This endpoint retrieves a service rate with the supplied ID.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`contract`</li><li>`contract.carrier`</li><li>`service`</li><li>`service.carrier`</li><li>`service_options`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the service rate.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ServiceRateResponse"
                    },
                    "included": {
                      "$ref": "#/components/schemas/ServiceRateIncludes"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ServiceRates"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          }
        ],
        "summary": "Update a service rate by ID.",
        "description": "This endpoint updates the service rate with the supplied ID.",
        "requestBody": {
          "description": "The service rate object with attributes to be updated.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ServiceRate"
                      },
                      {
                        "required": [
                          "id"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The service rate is updated.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ServiceRateResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/service-options": {
      "get": {
        "tags": [
          "ServiceOptions"
        ],
        "security": [
          {
            "OAuth2": []
          }
        ],
        "summary": "Get all available service options.",
        "description": "This endpoint retrieves service options available to your API client.",
        "responses": {
          "200": {
            "description": "Retrieved the service options.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ServiceOptionResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/service-options?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/service-options?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/service-options?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/service-options?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/service-options?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/service-options/{service_option_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-service_option_id"
        }
      ],
      "get": {
        "tags": [
          "ServiceOptions"
        ],
        "security": [
          {
            "OAuth2": []
          }
        ],
        "summary": "Get a service option by ID.",
        "description": "This endpoint retrieves a service option with the supplied ID.",
        "responses": {
          "200": {
            "description": "Retrieved the service option.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ServiceOptionResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shipments": {
      "get": {
        "tags": [
          "Shipments"
        ],
        "security": [
          {
            "OAuth2": [
              "broker.member",
              "returns.manage"
            ]
          },
          {
            "OAuth2": [
              "broker.member",
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "broker.member",
              "shipments.view"
            ]
          }
        ],
        "summary": "Get all available shipments.",
        "description": "This endpoint retrieves shipments available to your API client.",
        "parameters": [
          {
            "$ref": "#/components/parameters/query-shipments-include"
          },
          {
            "$ref": "#/components/parameters/query-shipments-filter-search"
          },
          {
            "$ref": "#/components/parameters/query-shipments-filter-channel"
          },
          {
            "$ref": "#/components/parameters/query-shipments-filter-description"
          },
          {
            "$ref": "#/components/parameters/query-shipments-filter-customer_reference"
          },
          {
            "$ref": "#/components/parameters/query-shipments-filter-tracking_code"
          },
          {
            "$ref": "#/components/parameters/query-shipments-filter-date_from"
          },
          {
            "$ref": "#/components/parameters/query-shipments-filter-date_to"
          },
          {
            "$ref": "#/components/parameters/query-filter-created_at-date_from"
          },
          {
            "$ref": "#/components/parameters/query-filter-created_at-date_to"
          },
          {
            "$ref": "#/components/parameters/query-shipments-filter-register_at-date_from"
          },
          {
            "$ref": "#/components/parameters/query-shipments-filter-register_at-date_to"
          },
          {
            "$ref": "#/components/parameters/query-filter-shop"
          },
          {
            "$ref": "#/components/parameters/query-filter-organization"
          },
          {
            "$ref": "#/components/parameters/query-filter-broker"
          },
          {
            "$ref": "#/components/parameters/query-filter-carrier"
          },
          {
            "$ref": "#/components/parameters/query-shipments-filter-current_status_code"
          },
          {
            "$ref": "#/components/parameters/query-shipments-filter-service_code"
          },
          {
            "$ref": "#/components/parameters/query-shipments-filter-recipient_address-country_code"
          },
          {
            "$ref": "#/components/parameters/query-shipments-filter-sender_address-country_code"
          },
          {
            "$ref": "#/components/parameters/query-shipments-filter-consolidation_shipment"
          },
          {
            "$ref": "#/components/parameters/query-shipments-filter-carrier_status-category"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the shipments.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ShipmentResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "included": {
                      "$ref": "#/components/schemas/ShipmentIncludes"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shipments?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shipments?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shipments?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shipments?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shipments?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Shipments"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          }
        ],
        "summary": "Create a new shipment.",
        "description": "This endpoint creates a new shipment with the posted data.",
        "parameters": [
          {
            "$ref": "#/components/parameters/header-idempotency-key"
          }
        ],
        "requestBody": {
          "description": "The shipment object to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Shipment"
                      },
                      {
                        "required": [
                          "attributes",
                          "relationships"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "recipient_address",
                              "return_address",
                              "sender_address",
                              "physical_properties"
                            ],
                            "properties": {
                              "recipient_address": {
                                "required": [
                                  "first_name",
                                  "last_name",
                                  "street_1",
                                  "city",
                                  "country_code"
                                ]
                              },
                              "return_address": {
                                "required": [
                                  "street_1",
                                  "city",
                                  "country_code"
                                ]
                              },
                              "sender_address": {
                                "required": [
                                  "street_1",
                                  "city",
                                  "country_code"
                                ]
                              },
                              "pickup_location": {
                                "required": [
                                  "code",
                                  "address"
                                ]
                              },
                              "tracking_code": {
                                "readOnly": true
                              },
                              "physical_properties": {
                                "required": [
                                  "weight"
                                ]
                              },
                              "items": {
                                "items": {
                                  "required": [
                                    "description",
                                    "quantity"
                                  ]
                                }
                              }
                            }
                          },
                          "relationships": {
                            "required": [
                              "shop"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "meta": {
                    "type": "object",
                    "properties": {
                      "add_to_next_collection": {
                        "type": "boolean",
                        "example": true,
                        "description": "Adds the shipment to the next collection (collection_time.from is closest to now in the future). Does nothing if combined with collection relationship."
                      },
                      "label_mime_type": {
                        "deprecated": true,
                        "type": "string",
                        "example": "application/pdf",
                        "description": "Deprecated, use `label.mime_type` instead. In case both are used, `label.mime_type` will get priority."
                      },
                      "label": {
                        "type": "object",
                        "properties": {
                          "mime_type": {
                            "type": "string",
                            "example": "application/pdf",
                            "default": "application/pdf",
                            "description": "Requested `mime_type` for the label of this shipment. Available mime_types can be found on the carrier resource related to the chosen service/contract."
                          },
                          "size": {
                            "type": "string",
                            "example": "A6",
                            "default": "A6",
                            "description": "Requested size for the label of this shipment. Available label sizes can be found on the carrier resource related to the chosen service/contract."
                          }
                        }
                      },
                      "service_code": {
                        "type": "string",
                        "example": "carrier-parcel-next-day",
                        "description": "If an applicable service is found, it will be set as relationship. If no contract relationship is defined, the cheapest contract for this service will be applied."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The shipment is created.",
            "headers": {
              "Idempotency-Replay": {
                "description": "Present with value `true` when the response is replayed based on the provided `Idempotency-Key` header.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ShipmentResponse"
                    }
                  }
                }
              }
            }
          },
          "423": {
            "description": "The previous request with the same idempotency key is still being processed."
          }
        }
      }
    },
    "/registered-shipments": {
      "post": {
        "tags": [
          "Shipments"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          }
        ],
        "summary": "Create a new shipment which is immediately registered with the carrier.",
        "description": "This endpoint creates a new shipment with the posted data, which is then immediately communicated to the carrier. The carrier response is processed before your request is completed, so files will be available.",
        "parameters": [
          {
            "$ref": "#/components/parameters/header-idempotency-key"
          }
        ],
        "requestBody": {
          "description": "The shipment object to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Shipment"
                      },
                      {
                        "required": [
                          "attributes",
                          "relationships"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "recipient_address",
                              "return_address",
                              "sender_address",
                              "physical_properties"
                            ],
                            "properties": {
                              "recipient_address": {
                                "required": [
                                  "first_name",
                                  "last_name",
                                  "street_1",
                                  "city",
                                  "country_code"
                                ]
                              },
                              "return_address": {
                                "required": [
                                  "street_1",
                                  "city",
                                  "country_code"
                                ]
                              },
                              "sender_address": {
                                "required": [
                                  "street_1",
                                  "city",
                                  "country_code"
                                ]
                              },
                              "pickup_location": {
                                "required": [
                                  "code",
                                  "address"
                                ]
                              },
                              "tracking_code": {
                                "readOnly": true
                              },
                              "physical_properties": {
                                "required": [
                                  "weight"
                                ]
                              },
                              "items": {
                                "items": {
                                  "required": [
                                    "description",
                                    "quantity"
                                  ]
                                }
                              }
                            }
                          },
                          "relationships": {
                            "required": [
                              "shop"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "meta": {
                    "type": "object",
                    "properties": {
                      "collection": {
                        "type": "object",
                        "required": [
                          "collection_time"
                        ],
                        "properties": {
                          "name": {
                            "deprecated": true,
                            "type": "string"
                          },
                          "description": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "collection_time": {
                            "$ref": "#/components/schemas/CollectionTime"
                          }
                        }
                      },
                      "label_mime_type": {
                        "deprecated": true,
                        "type": "string",
                        "example": "application/pdf",
                        "description": "Deprecated, use `label.mime_type` instead. In case both are used, `label.mime_type` will get priority."
                      },
                      "label": {
                        "type": "object",
                        "properties": {
                          "mime_type": {
                            "type": "string",
                            "example": "application/pdf",
                            "default": "application/pdf",
                            "description": "Requested `mime_type` for the label of this shipment. Available mime_types can be found on the carrier resource related to the chosen service/contract."
                          },
                          "size": {
                            "type": "string",
                            "example": "A6",
                            "default": "A6",
                            "description": "Requested size for the label of this shipment. Available label sizes can be found on the carrier resource related to the chosen service/contract."
                          }
                        }
                      },
                      "service_code": {
                        "type": "string",
                        "example": "carrier-parcel-next-day",
                        "description": "If an applicable service is found, it will be set as relationship. If no contract relationship is defined, the cheapest contract for this service will be applied."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The shipment is created.",
            "headers": {
              "Idempotency-Replay": {
                "description": "Present with value `true` when the response is replayed based on the provided `Idempotency-Key` header.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta"
                  ],
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/ShipmentResponse"
                        },
                        {
                          "properties": {
                            "relationships": {
                              "required": [
                                "contract",
                                "files",
                                "service"
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "files": {
                          "type": "array",
                          "description": "An array of objects holding the attributes and contents (Base64 encoded) of created files",
                          "items": {
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/FileFormat"
                              },
                              {
                                "required": [
                                  "document_type",
                                  "contents"
                                ],
                                "properties": {
                                  "document_type": {
                                    "$ref": "#/components/schemas/DocumentType"
                                  },
                                  "contents": {
                                    "type": "string",
                                    "description": "Base64 encoded file data"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "The shipment could not be created because the carrier did not accept the supplied information."
          },
          "423": {
            "description": "The previous request with the same idempotency key is still being processed."
          }
        }
      }
    },
    "/multi-colli-shipments": {
      "post": {
        "tags": [
          "Shipments"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          }
        ],
        "summary": "Create and register a multi-colli shipment.",
        "description": "This endpoint creates a new shipment consisting of multiple parcels to the same address, which is then immediately communicated to the carrier. The carrier response is processed before your request is completed, so files will be available.",
        "parameters": [
          {
            "$ref": "#/components/parameters/header-idempotency-key"
          }
        ],
        "requestBody": {
          "description": "The shipment object to be created, including it's colli in the meta.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data",
                  "meta"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Shipment"
                      },
                      {
                        "required": [
                          "attributes",
                          "relationships"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "recipient_address",
                              "return_address",
                              "sender_address"
                            ],
                            "properties": {
                              "recipient_address": {
                                "required": [
                                  "first_name",
                                  "last_name",
                                  "street_1",
                                  "city",
                                  "country_code"
                                ]
                              },
                              "return_address": {
                                "required": [
                                  "street_1",
                                  "city",
                                  "country_code"
                                ]
                              },
                              "sender_address": {
                                "required": [
                                  "street_1",
                                  "city",
                                  "country_code"
                                ]
                              },
                              "pickup_location": {
                                "required": [
                                  "code",
                                  "address"
                                ]
                              },
                              "tracking_code": {
                                "readOnly": true
                              },
                              "items": {
                                "items": {
                                  "required": [
                                    "description",
                                    "quantity"
                                  ]
                                }
                              }
                            }
                          },
                          "relationships": {
                            "required": [
                              "shop"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "meta": {
                    "type": "object",
                    "required": [
                      "colli"
                    ],
                    "properties": {
                      "colli": {
                        "type": "array",
                        "items": {
                          "required": [
                            "physical_properties"
                          ],
                          "properties": {
                            "physical_properties": {
                              "allOf": [
                                {
                                  "$ref": "#/components/schemas/BasePhysicalProperties"
                                },
                                {
                                  "required": [
                                    "weight"
                                  ]
                                }
                              ]
                            },
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "$ref": "#/components/schemas/BaseShipmentItem"
                                  },
                                  {
                                    "required": [
                                      "description",
                                      "quantity"
                                    ]
                                  }
                                ]
                              }
                            },
                            "description": {
                              "type": "string",
                              "example": "Fidget spinners",
                              "description": "Description of the shipment (contents). This field is communicated to the carrier and may be put on the shipment's label."
                            },
                            "customer_reference": {
                              "type": "string",
                              "example": "#8008135",
                              "description": "Reference for the customer to recognize the shipment by."
                            },
                            "total_value": {
                              "$ref": "#/components/schemas/Price"
                            }
                          }
                        }
                      },
                      "label": {
                        "type": "object",
                        "properties": {
                          "mime_type": {
                            "type": "string",
                            "example": "application/pdf",
                            "default": "application/pdf",
                            "description": "Requested `mime_type` for the label of this shipment. Available mime_types can be found on the carrier resource related to the chosen service/contract."
                          },
                          "size": {
                            "type": "string",
                            "example": "A6",
                            "default": "A6",
                            "description": "Requested size for the label of this shipment. Available label sizes can be found on the carrier resource related to the chosen service/contract."
                          }
                        }
                      },
                      "service_code": {
                        "type": "string",
                        "example": "carrier-parcel-next-day",
                        "description": "If an applicable service is found, it will be set as relationship. If no contract relationship is defined, the cheapest contract for this service will be applied."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The shipment is created and registered.",
            "headers": {
              "Idempotency-Replay": {
                "description": "Present with value `true` when the response is replayed based on the provided `Idempotency-Key` header.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/ShipmentResponse"
                        },
                        {
                          "properties": {
                            "relationships": {
                              "required": [
                                "colli",
                                "contract",
                                "service"
                              ],
                              "properties": {
                                "colli": {
                                  "properties": {
                                    "data": {
                                      "items": {
                                        "properties": {
                                          "meta": {
                                            "type": "object",
                                            "properties": {
                                              "collo_number": {
                                                "$ref": "#/components/schemas/ColloNumber"
                                              },
                                              "barcode": {
                                                "$ref": "#/components/schemas/Barcode"
                                              },
                                              "tracking_code": {
                                                "$ref": "#/components/schemas/TrackingCode"
                                              },
                                              "tracking_url": {
                                                "$ref": "#/components/schemas/TrackingUrl"
                                              },
                                              "files": {
                                                "type": "array",
                                                "description": "An array of objects holding the attributes and contents (Base64 encoded) of created files",
                                                "items": {
                                                  "allOf": [
                                                    {
                                                      "$ref": "#/components/schemas/FileFormat"
                                                    },
                                                    {
                                                      "required": [
                                                        "document_type",
                                                        "contents"
                                                      ],
                                                      "properties": {
                                                        "document_type": {
                                                          "$ref": "#/components/schemas/DocumentType"
                                                        },
                                                        "contents": {
                                                          "type": "string",
                                                          "description": "Base64 encoded file data"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "The shipment could not be created because the carrier did not accept the supplied information."
          },
          "423": {
            "description": "The previous request with the same idempotency key is still being processed."
          }
        }
      }
    },
    "/payments/v1/providers/{code}/connect": {
      "post": {
        "tags": [
          "PaymentProviders"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          }
        ],
        "summary": "Connect to a payment provider.",
        "description": "This endpoint connects a payment provider to your shop.",
        "requestBody": {
          "description": "The shop ID and other settings to use for the connection.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "shop_id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "shop_id": {
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
                        "example": "4067e35b-09cc-42b9-8553-6eaf1788df35"
                      },
                      "settings": {
                        "type": "object",
                        "description": "The settings to use for the connection. See the payment provider's settings_format for details.",
                        "example": {
                          "api_key": "90249f97832080b6654ae51c4113d0995df324d20eb1281774cdf62e7761",
                          "profile_number": 34
                        }
                      },
                      "redirect_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "The URL to redirect to after the user has authorized the connection. Required only for payment providers that authorize through OAuth2.",
                        "example": "https://example.com/mollie/oauth/callback"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The payment provider requires authorization through OAuth2. The authorization URL is returned in the response body.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "authorization_url"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "authorization_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://www.mollie.com/oauth2/authorize?client_id=app_12345678&redirect_uri=https%3A%2F%2Fexample.com%2Fmollie%2Foauth%2Fcallback&response_type=code"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "The payment provider was connected successfully."
          },
          "404": {
            "description": "When the shop is not found."
          },
          "422": {
            "description": "When the settings are incorrect against the format specified by the payment provider or when shop is already connected to another payment provider."
          }
        }
      }
    },
    "/payments/v1/providers/{code}/disconnect": {
      "post": {
        "tags": [
          "PaymentProviders"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          }
        ],
        "summary": "Disconnect your shop from a payment provider.",
        "description": "This endpoint revokes access to from your shop to a payment provider.",
        "requestBody": {
          "description": "The shop ID to disconnect.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "shop_id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "shop_id": {
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
                        "example": "4067e35b-09cc-42b9-8553-6eaf1788df35"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Disconnected the shop from payment provider."
          }
        }
      }
    },
    "/payments/v1/providers": {
      "get": {
        "tags": [
          "PaymentProviders"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          }
        ],
        "summary": "Get all payment providers.",
        "description": "This endpoint retrieves payment providers available to your API client.",
        "parameters": [
          {
            "name": "shop_id",
            "in": "query",
            "description": "When specified, payment providers which are connected to the given shop will include a `\"connected\": true` meta field.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the payment providers.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PaymentProviderResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/payments/v1/providers?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/payments/v1/providers?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/payments/v1/providers?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/payments/v1/providers?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/payments/v1/providers?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shipments/{shipment_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-shipment_id"
        }
      ],
      "get": {
        "tags": [
          "Shipments"
        ],
        "security": [
          {
            "OAuth2": [
              "broker.member",
              "returns.manage"
            ]
          },
          {
            "OAuth2": [
              "broker.member",
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "broker.member",
              "shipments.view"
            ]
          }
        ],
        "summary": "Get a shipment by ID.",
        "description": "This endpoint retrieves the shipment with the supplied ID.",
        "parameters": [
          {
            "$ref": "#/components/parameters/query-shipments-include"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the shipment.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ShipmentResponse"
                    },
                    "included": {
                      "$ref": "#/components/schemas/ShipmentIncludes"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Shipments"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          }
        ],
        "summary": "Update a shipment by ID.",
        "description": "This endpoint updates the shipment with the supplied ID.",
        "requestBody": {
          "description": "The shipment object with attributes to be updated.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Shipment"
                      },
                      {
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "attributes": {
                            "properties": {
                              "tracking_code": {
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "meta": {
                    "type": "object",
                    "properties": {
                      "label_mime_type": {
                        "deprecated": true,
                        "type": "string",
                        "example": "application/pdf",
                        "description": "Deprecated, use `label.mime_type` instead. In case both are used, `label.mime_type` will get priority."
                      },
                      "label": {
                        "type": "object",
                        "properties": {
                          "mime_type": {
                            "type": "string",
                            "example": "application/pdf",
                            "default": "application/pdf",
                            "description": "Requested `mime_type` for the label of this shipment. Available mime_types can be found on the carrier resource related to the chosen service/contract."
                          },
                          "size": {
                            "type": "string",
                            "example": "A6",
                            "default": "A6",
                            "description": "Requested size for the label of this shipment. Available label sizes can be found on the carrier resource related to the chosen service/contract."
                          }
                        }
                      },
                      "service_code": {
                        "type": "string",
                        "example": "carrier-parcel-next-day",
                        "description": "If an applicable service is found, it will be set as relationship. If no contract relationship is defined, the cheapest contract for this service will be applied."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The shipment is updated.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ShipmentResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Shipments"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          }
        ],
        "summary": "Delete a shipment by ID.",
        "description": "This endpoint deletes the shipment with the supplied ID.",
        "responses": {
          "204": {
            "description": "The shipment is deleted."
          },
          "423": {
            "description": "The shipment could not be deleted."
          }
        }
      }
    },
    "/shipments/{shipment_id}/files": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-shipment_id"
        }
      ],
      "get": {
        "tags": [
          "Shipments"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.view"
            ]
          }
        ],
        "summary": "Get all the files from a shipment.",
        "description": "This endpoint retrieves files for the supplied shipment. All successfully registered shipments will have a `label` file. International shipments with customs information will have extra files.",
        "parameters": [
          {
            "name": "filter[document_type]",
            "in": "query",
            "description": "Filter files based on document type. Multiple types can be passed comma separated.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the files.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FileResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shipments/7b808eee-bf1c-40cd-98f2-3c335a06417e/statuses?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shipments/7b808eee-bf1c-40cd-98f2-3c335a06417e/statuses?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shipments/7b808eee-bf1c-40cd-98f2-3c335a06417e/statuses?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shipments/7b808eee-bf1c-40cd-98f2-3c335a06417e/statuses?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shipments/7b808eee-bf1c-40cd-98f2-3c335a06417e/statuses?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shipments/{shipment_id}/statuses": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-shipment_id"
        }
      ],
      "get": {
        "tags": [
          "Shipments"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.view"
            ]
          }
        ],
        "summary": "Get all the statuses from a shipment.",
        "description": "This endpoint retrieves statuses for the supplied shipment.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`shipment`</li><li>`status`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the shipment statuses.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ShipmentStatusResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "included": {
                      "$ref": "#/components/schemas/ShipmentStatusIncludes"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shipments/7b808eee-bf1c-40cd-98f2-3c335a06417e/statuses?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shipments/7b808eee-bf1c-40cd-98f2-3c335a06417e/statuses?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shipments/7b808eee-bf1c-40cd-98f2-3c335a06417e/statuses?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shipments/7b808eee-bf1c-40cd-98f2-3c335a06417e/statuses?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shipments/7b808eee-bf1c-40cd-98f2-3c335a06417e/statuses?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shipments/{shipment_id}/statuses/{shipment_status_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-shipment_id"
        },
        {
          "$ref": "#/components/parameters/path-shipment_status_id"
        }
      ],
      "get": {
        "tags": [
          "Shipments"
        ],
        "security": [
          {
            "OAuth2": [
              "returns.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.view"
            ]
          }
        ],
        "summary": "Get a shipment status by ID.",
        "description": "This endpoint retrieves the shipment status with the supplied ID.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br> The relationships that can be included are:<ul><li>`shipment`</li><li>`status`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the shipment status.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ShipmentStatusResponse"
                    },
                    "included": {
                      "$ref": "#/components/schemas/ShipmentStatusIncludes"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shipments/{shipment_id}/surcharges": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-shipment_id"
        }
      ],
      "get": {
        "tags": [
          "Shipments"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.view"
            ]
          }
        ],
        "summary": "Get all surcharges related to a shipment.",
        "description": "This endpoint retrieves surcharges for the supplied shipment.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`shipment`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the shipment surcharges.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ShipmentSurchargeResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shipments/7b808eee-bf1c-40cd-98f2-3c335a06417e/surcharges?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shipments/7b808eee-bf1c-40cd-98f2-3c335a06417e/surcharges?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shipments/7b808eee-bf1c-40cd-98f2-3c335a06417e/surcharges?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shipments/7b808eee-bf1c-40cd-98f2-3c335a06417e/surcharges?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shipments/7b808eee-bf1c-40cd-98f2-3c335a06417e/surcharges?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shipments/{shipment_id}/surcharges/{shipment_surcharge_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-shipment_id"
        },
        {
          "$ref": "#/components/parameters/path-shipment_surcharge_id"
        }
      ],
      "get": {
        "tags": [
          "Shipments"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.view"
            ]
          }
        ],
        "summary": "Get a shipment surcharge by ID.",
        "description": "This endpoint retrieves the shipment surcharge with the supplied ID.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br> The relationships that can be included are:<ul><li>`shipment`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the shipment surcharge.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ShipmentSurchargeResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shipment-surcharges": {
      "get": {
        "tags": [
          "ShipmentSurcharges"
        ],
        "security": [
          {
            "OAuth2": [
              "finance.manage"
            ]
          }
        ],
        "summary": "Get all surcharges across all shipments.",
        "description": "This endpoint retrieves all surcharges for all shipments.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`shipment`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved all of the shipment surcharges.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ShipmentSurchargeResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shipment-surcharges?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shipment-surcharges?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shipment-surcharges?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shipment-surcharges?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shipment-surcharges?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ShipmentSurcharges"
        ],
        "security": [
          {
            "OAuth2": [
              "finance.manage"
            ]
          }
        ],
        "summary": "Create a new shipment surcharge.",
        "description": "This endpoint creates a new shipment surcharge with the posted data. It is required that a shipment relationship is always provided when creating a shipment surcharge.",
        "requestBody": {
          "description": "The shipment surcharge object to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ShipmentSurcharge"
                      },
                      {
                        "required": [
                          "attributes",
                          "relationships"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "fee"
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The shipment surcharge is created.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ShipmentSurchargeResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shipment-surcharges/{shipment_surcharge_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-shipment_surcharge_id"
        }
      ],
      "get": {
        "tags": [
          "ShipmentSurcharges"
        ],
        "security": [
          {
            "OAuth2": [
              "finance.manage"
            ]
          }
        ],
        "summary": "Get a shipment surcharge by ID.",
        "description": "This endpoint retrieves the shipment surcharge with the supplied ID.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br> The relationships that can be included are:<ul><li>`shipment`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the shipment surcharge.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ShipmentSurchargeResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ShipmentSurcharges"
        ],
        "security": [
          {
            "OAuth2": [
              "finance.manage"
            ]
          }
        ],
        "summary": "Update a shipment surcharge by ID.",
        "description": "This endpoint updates the shipment surcharge with the supplied ID.",
        "requestBody": {
          "description": "The shipment surcharge object with attributes to be updated.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ShipmentSurcharge"
                      },
                      {
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "relationships": {
                            "readOnly": true
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The shipment surcharge is updated.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ShipmentSurchargeResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShipmentSurcharges"
        ],
        "security": [
          {
            "OAuth2": [
              "finance.manage"
            ]
          }
        ],
        "summary": "Delete a shipment surcharge by ID.",
        "description": "This endpoint deletes the shipment surcharge with the supplied ID.",
        "responses": {
          "204": {
            "description": "The shipment surcharge is deleted."
          }
        }
      }
    },
    "/shops": {
      "get": {
        "tags": [
          "Shops"
        ],
        "security": [
          {
            "OAuth2": [
              "broker.member",
              "organizations.manage"
            ]
          },
          {
            "OAuth2": [
              "broker.member",
              "returns.manage"
            ]
          },
          {
            "OAuth2": [
              "broker.member",
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "broker.member",
              "shipments.view"
            ]
          }
        ],
        "summary": "Get all available shops.",
        "description": "This endpoint retrieves shops available to your API client.",
        "parameters": [
          {
            "name": "filter[search]",
            "in": "query",
            "description": "String of characters you want to look for in a shop's attributes. Available fields to look in are:<ul><li>`name`</li><li>`return_address`</li><li>`sender_address`</li><li>`reference`</li></ul>",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/query-filter-search-name"
          },
          {
            "$ref": "#/components/parameters/query-filter-broker"
          },
          {
            "$ref": "#/components/parameters/query-filter-organization"
          },
          {
            "name": "filter[name]",
            "in": "query",
            "description": "Find shop by exact name match",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[returns_domain]",
            "in": "query",
            "description": "Find shop by exact returns domain match",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`organization`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the shops.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ShopResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "included": {
                      "$ref": "#/components/schemas/ShopIncludes"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shops?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shops?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shops?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shops?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shops?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Shops"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          }
        ],
        "summary": "Create a new shop.",
        "description": "This endpoint creates a new shop with the posted data.",
        "requestBody": {
          "description": "The shop object to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Shop"
                      },
                      {
                        "required": [
                          "attributes",
                          "relationships"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "name",
                              "return_address",
                              "sender_address"
                            ],
                            "properties": {
                              "return_address": {
                                "required": [
                                  "street_1",
                                  "city",
                                  "country_code"
                                ]
                              },
                              "sender_address": {
                                "required": [
                                  "street_1",
                                  "city",
                                  "country_code"
                                ]
                              }
                            }
                          },
                          "meta": {
                            "$ref": "#/components/schemas/ShopMeta"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The shop is created.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ShopResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shops/{shop_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-shop_id"
        }
      ],
      "get": {
        "tags": [
          "Shops"
        ],
        "security": [
          {
            "OAuth2": [
              "broker.member",
              "organizations.manage"
            ]
          },
          {
            "OAuth2": [
              "broker.member",
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "broker.member",
              "shipments.view"
            ]
          }
        ],
        "summary": "Get a shop by ID.",
        "description": "This endpoint retrieves the shop with the supplied ID.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`organization`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the shop.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ShopResponse"
                    },
                    "included": {
                      "$ref": "#/components/schemas/ShopIncludes"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Shops"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          }
        ],
        "summary": "Update a shop by ID.",
        "description": "This endpoint updates the shop with the supplied ID.",
        "requestBody": {
          "description": "The shop object with attributes to be updated.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Shop"
                      },
                      {
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "relationships": {
                            "readOnly": true
                          },
                          "meta": {
                            "$ref": "#/components/schemas/ShopMeta"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The shop is updated.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ShopResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Shops"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          }
        ],
        "summary": "Delete a shop by ID.",
        "description": "This endpoint deletes the shop with the supplied ID.",
        "responses": {
          "204": {
            "description": "The shop is deleted."
          }
        }
      }
    },
    "/shops/{shop_id}/integrations": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-shop_id"
        }
      ],
      "get": {
        "tags": [
          "Shops"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.manage"
            ]
          }
        ],
        "summary": "Get the integration resources related to this shop.",
        "description": "This endpoint retrieves the integration resources related to the shop with the supplied ID.",
        "parameters": [
          {
            "$ref": "#/components/parameters/query-filter-tags"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the integrations.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IntegrationResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shops/35eddf50-1d84-47a3-8479-6bfda729cd99/integrations?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shops/35eddf50-1d84-47a3-8479-6bfda729cd99/integrations?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shops/35eddf50-1d84-47a3-8479-6bfda729cd99/integrations?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shops/35eddf50-1d84-47a3-8479-6bfda729cd99/integrations?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shops/35eddf50-1d84-47a3-8479-6bfda729cd99/integrations?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shops/{shop_id}/integrations/{integration_id}/shipments": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-shop_id"
        },
        {
          "$ref": "#/components/parameters/path-integration_id"
        }
      ],
      "get": {
        "tags": [
          "Shops"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/query-filter-created_at-date_from"
          },
          {
            "$ref": "#/components/parameters/query-filter-created_at-date_to"
          }
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.manage"
            ]
          }
        ],
        "summary": "Get shipments from integration",
        "description": "This endpoint connects to an external integration and requests shipment data for a specified time period.",
        "responses": {
          "200": {
            "description": "Retrieved the shipments.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Shipment"
                          },
                          {
                            "required": [
                              "attributes",
                              "relationships",
                              "links"
                            ],
                            "properties": {
                              "attributes": {
                                "required": [
                                  "customer_reference",
                                  "description",
                                  "channel"
                                ],
                                "properties": {
                                  "recipient_address": {
                                    "required": [
                                      "street_1",
                                      "city",
                                      "country_code"
                                    ]
                                  },
                                  "items": {
                                    "items": {
                                      "required": [
                                        "description",
                                        "quantity"
                                      ]
                                    }
                                  }
                                }
                              },
                              "relationships": {
                                "required": [
                                  "shop"
                                ]
                              }
                            }
                          }
                        ]
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shops/9531c3a9-e5cc-43ac-83cb-04dee6e8cd39/integrations/1dd3757c-71c7-4d6e-8c27-86a3cebe3597/shipments?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shops/9531c3a9-e5cc-43ac-83cb-04dee6e8cd39/integrations/1dd3757c-71c7-4d6e-8c27-86a3cebe3597/shipments?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shops/9531c3a9-e5cc-43ac-83cb-04dee6e8cd39/integrations/1dd3757c-71c7-4d6e-8c27-86a3cebe3597/shipments?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shops/9531c3a9-e5cc-43ac-83cb-04dee6e8cd39/integrations/1dd3757c-71c7-4d6e-8c27-86a3cebe3597/shipments?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/shops/9531c3a9-e5cc-43ac-83cb-04dee6e8cd39/integrations/1dd3757c-71c7-4d6e-8c27-86a3cebe3597/shipments?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shops/{shop_id}/relationships/integrations": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-shop_id"
        }
      ],
      "get": {
        "tags": [
          "Shops"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.manage"
            ]
          }
        ],
        "summary": "Get the integration relationships for a shop ID.",
        "description": "This endpoint retrieves the integration relationships for the supplied shop ID.",
        "responses": {
          "200": {
            "description": "Retrieved the integration relationships.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/IntegrationsRelationship"
                    },
                    {
                      "required": [
                        "links"
                      ],
                      "properties": {
                        "links": {
                          "type": "object",
                          "required": [
                            "self",
                            "related"
                          ],
                          "properties": {
                            "self": {
                              "type": "string",
                              "format": "url",
                              "example": "https://api.myparcel.com/shops/35eddf50-1d84-47a3-8479-6bfda729cd99/relationships/integrations"
                            },
                            "related": {
                              "type": "string",
                              "format": "url",
                              "example": "https://api.myparcel.com/shops/35eddf50-1d84-47a3-8479-6bfda729cd99/integrations"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Shops"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          }
        ],
        "summary": "Add integration relationships to the shop.",
        "description": "This endpoint adds integration relationships for the shop with the supplied ID.",
        "requestBody": {
          "description": "The integration relationships to be added to the shop.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/IntegrationsRelationship"
                  },
                  {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "meta": {
                              "properties": {
                                "settings": {
                                  "type": "object",
                                  "example": {
                                    "webshop_url": "https://your_shop.com",
                                    "api_key": "your_api_key"
                                  },
                                  "description": "The settings required to communicate with the integration platform as defined by the `settings_format` of the integration."
                                },
                                "redirect_url": {
                                  "type": "string",
                                  "format": "url",
                                  "example": "https://your_shop.com/authorize",
                                  "description": "Redirect URL for marketplaces that authorize through OAuth2."
                                },
                                "client_id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
                                  "example": "6a4baca2-7b94-4987-9e4e-2283c22bac1d",
                                  "description": "A client to allow the integration to communicate with the MyParcel.com API."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The integration relationship is set, but it includes authorization_url for some of the integrations, which should be used for authorization at the marketplace.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "integration_id",
                          "authorization_url"
                        ],
                        "properties": {
                          "integration_id": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
                            "example": "6a4baca2-7b94-4987-9e4e-2283c22bac1d"
                          },
                          "authorization_url": {
                            "type": "string",
                            "format": "url",
                            "example": "https://marketplace.com/authorize?client_id=6a4baca2-7b94-4987-9e4e-2283c22bac1d&redirect_uri=https://your_shop.com/authorize&response_type=code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "The integration relationships have been added."
          }
        }
      },
      "delete": {
        "tags": [
          "Shops"
        ],
        "security": [
          {
            "OAuth2": [
              "organizations.manage"
            ]
          }
        ],
        "summary": "Delete integration relationships from a shop.",
        "description": "This endpoint deletes integration relationships from the shop with the supplied ID.",
        "requestBody": {
          "description": "The integration relationships to be deleted from the shop.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/IntegrationResource"
                        },
                        {
                          "required": [
                            "id"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The integration relationships have been deleted."
          }
        }
      }
    },
    "/statuses": {
      "get": {
        "tags": [
          "Statuses"
        ],
        "security": [
          {
            "OAuth2": []
          }
        ],
        "summary": "Get all the statuses.",
        "description": "This endpoint retrieves all available statuses. Statuses can be attached to resources, for example shipment-statuses.",
        "responses": {
          "200": {
            "description": "Retrieved the statuses.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/StatusResponse"
                          },
                          {
                            "required": [
                              "id",
                              "links"
                            ]
                          }
                        ]
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/statuses?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/statuses?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/statuses?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/statuses?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/statuses?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/statuses/{status_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-status_id"
        }
      ],
      "get": {
        "tags": [
          "Statuses"
        ],
        "security": [
          {
            "OAuth2": []
          }
        ],
        "summary": "Get a status by ID.",
        "description": "This endpoint retrieves the status with the supplied ID.",
        "responses": {
          "200": {
            "description": "Retrieved the status.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/StatusResponse"
                        },
                        {
                          "required": [
                            "id",
                            "links"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/suggest-hscode": {
      "post": {
        "tags": [
          "RPC"
        ],
        "security": [
          {
            "OAuth2": [
              "landed_cost"
            ]
          }
        ],
        "summary": "Get HS code suggestions.",
        "description": "This endpoint returns Harmonized System code suggestions for the supplied product.",
        "requestBody": {
          "description": "The required fields for the suggestion",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "required": [
                      "sku",
                      "description"
                    ],
                    "properties": {
                      "sku": {
                        "type": "string",
                        "example": "123456789"
                      },
                      "description": {
                        "type": "string",
                        "example": "Water bottle"
                      },
                      "origin_country_code": {
                        "$ref": "#/components/schemas/CountryCode"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Harmonized System code suggestions have been returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "hs_code",
                          "commodity_code",
                          "vector_weight",
                          "product_description"
                        ],
                        "properties": {
                          "hs_code": {
                            "type": "string",
                            "example": "611521"
                          },
                          "commodity_code": {
                            "type": "string",
                            "example": "6115210000"
                          },
                          "vector_weight": {
                            "type": "number",
                            "format": "float",
                            "example": 83.45
                          },
                          "product_description": {
                            "type": "string",
                            "example": "Bottle of water"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/system-messages": {
      "get": {
        "tags": [
          "SystemMessages"
        ],
        "security": [
          {
            "OAuth2": [
              "broker.member"
            ]
          }
        ],
        "summary": "Get all the system messages.",
        "description": "This endpoint retrieves system messages. These are informative messages about our system or a specific type of resource.",
        "parameters": [
          {
            "name": "filter[country]",
            "in": "query",
            "description": "Country code of system messages to filter by. Using this filter will also include system-wide messages.",
            "schema": {
              "$ref": "#/components/schemas/CountryCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the system messages.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SystemMessageResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/system-messages?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/system-messages?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/system-messages?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/system-messages?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/system-messages?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SystemMessages"
        ],
        "security": [
          {
            "OAuth2": [
              "broker.member",
              "system.manage"
            ]
          }
        ],
        "summary": "Create a new system message.",
        "description": "This endpoint creates a new system message with the posted data.",
        "requestBody": {
          "description": "The system message object to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/SystemMessage"
                      },
                      {
                        "required": [
                          "attributes",
                          "relationships"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "level",
                              "content"
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The system message is created.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SystemMessageResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/system-messages/{system_message_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-system_message_id"
        }
      ],
      "get": {
        "tags": [
          "SystemMessages"
        ],
        "security": [
          {
            "OAuth2": [
              "broker.member"
            ]
          }
        ],
        "summary": "Get a system message by ID.",
        "description": "This endpoint retrieves the system message with the supplied ID.",
        "responses": {
          "200": {
            "description": "Retrieved the system message.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SystemMessageResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SystemMessages"
        ],
        "security": [
          {
            "OAuth2": [
              "broker.member",
              "system.manage"
            ]
          }
        ],
        "summary": "Update a system message by ID.",
        "description": "This endpoint updates the system message with the supplied ID.",
        "requestBody": {
          "description": "The system message object with attributes to be updated.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/SystemMessage"
                      },
                      {
                        "required": [
                          "id"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The system message is updated.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SystemMessageResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SystemMessages"
        ],
        "security": [
          {
            "OAuth2": [
              "system.manage"
            ]
          }
        ],
        "summary": "Delete a system message by ID.",
        "description": "This endpoint deletes the system message with the supplied ID.",
        "responses": {
          "204": {
            "description": "The system message is deleted."
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "OAuth2": [
              "users.manage"
            ]
          },
          {
            "OAuth2": []
          }
        ],
        "summary": "Get all available users.",
        "description": "This endpoint retrieves users available to your API client.",
        "parameters": [
          {
            "name": "filter[search]",
            "in": "query",
            "description": "String of characters you want to look for in a user's attributes. Available fields to look in are:<ul><li>`username`</li><li>`first_name`</li><li>`last_name`</li><li>`company`</li><li>`email`</li><li>`phone_number`</li></ul>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the users.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/users?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/users?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/users?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/users?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/users?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "OAuth2": [
              "users.manage"
            ]
          }
        ],
        "summary": "Create a new user.",
        "description": "This endpoint creates a new user with the posted data.",
        "requestBody": {
          "description": "The user object to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data",
                  "meta"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/User"
                      },
                      {
                        "required": [
                          "attributes"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "username",
                              "first_name",
                              "last_name",
                              "email"
                            ],
                            "properties": {
                              "status": {
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "meta": {
                    "type": "object",
                    "required": [
                      "broker_id"
                    ],
                    "properties": {
                      "broker_id": {
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
                        "example": "a294ee55-bc94-4890-b734-afd56c158f95",
                        "description": "The user will become a member of this broker."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user is created.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UserResponse"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The broker resource could not be found."
          },
          "409": {
            "description": "A user with this username already exists."
          }
        }
      }
    },
    "/users/{user_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-user_id"
        }
      ],
      "get": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "OAuth2": [
              "users.manage"
            ]
          },
          {
            "OAuth2": []
          }
        ],
        "summary": "Get a user by ID.",
        "description": "This endpoint retrieves the user with the supplied ID. You can always retrieve your own user, but you need the `users.manage` scope to retrieve other users.",
        "responses": {
          "200": {
            "description": "Retrieved the user.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UserResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "OAuth2": [
              "users.manage"
            ]
          },
          {
            "OAuth2": []
          }
        ],
        "summary": "Update a user by ID.",
        "description": "This endpoint updates the user with the supplied ID.",
        "requestBody": {
          "description": "The user object with attributes to be updated.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/User"
                      },
                      {
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "attributes": {
                            "properties": {
                              "status": {
                                "example": "blocked",
                                "description": "Can only be updated when your access token contains the `users.manage` scope on the broker."
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user is updated.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UserResponse"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "A user with this username already exists."
          }
        }
      }
    },
    "/users/{user_id}/relationships/scopes": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-user_id"
        }
      ],
      "get": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "OAuth2": [
              "users.manage"
            ]
          }
        ],
        "summary": "Get the scope relationships for a user ID.",
        "description": "This endpoint retrieves the scope relationships for the supplied user ID.",
        "responses": {
          "200": {
            "description": "Retrieved the scope relationships.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ScopesRelationship"
                    },
                    {
                      "required": [
                        "links"
                      ],
                      "properties": {
                        "links": {
                          "type": "object",
                          "required": [
                            "self"
                          ],
                          "properties": {
                            "self": {
                              "type": "string",
                              "format": "url",
                              "example": "https://api.myparcel.com/users/6b341b44-f2f8-4c8b-b066-b8aa5c78ef6b/relationships/scopes"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "OAuth2": [
              "users.manage"
            ]
          }
        ],
        "summary": "Add scope relationships to a user.",
        "description": "This endpoint adds scope relationships to the user with the supplied ID.",
        "requestBody": {
          "description": "The scope relationships to be added to the user.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ScopesRelationship"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The scope relationships have been added."
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "OAuth2": [
              "users.manage"
            ]
          }
        ],
        "summary": "Delete scope relationships from a user.",
        "description": "This endpoint deletes scope relationships from the user with the supplied ID.",
        "requestBody": {
          "description": "The scope relationships to be deleted from the user. Optionally limited to the resource(s) in the supplied meta.<br>Please note the `broker.member` scope cannot be deleted from a user (you can delete the user resource instead).",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ScopesRelationship"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The scope relationships have been deleted."
          }
        }
      }
    },
    "/count-report-entries": {
      "post": {
        "tags": [
          "RPC"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          },
          {
            "OAuth2": [
              "shipments.view"
            ]
          }
        ],
        "summary": "Get report size",
        "description": "This endpoint retrieves the total number of entries that will be included in a report.",
        "requestBody": {
          "description": "The reports object with corresponding filters.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Report"
                      },
                      {
                        "required": [
                          "attributes"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "filters"
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retrieved the total amount of records.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "total_entries"
                      ],
                      "properties": {
                        "total_entries": {
                          "type": "integer",
                          "description": "Number of entries that will be generated in the report",
                          "example": 3012
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/export-login-attempts": {
      "get": {
        "tags": [
          "RPC"
        ],
        "security": [
          {
            "OAuth2": [
              "logs.view"
            ]
          }
        ],
        "summary": "Export login attempts logs in CSV format",
        "description": "This endpoint retrieves all broker-related login attempt logs in a CSV format.",
        "parameters": [
          {
            "$ref": "#/components/parameters/query-filter-created_at-date_from"
          },
          {
            "$ref": "#/components/parameters/query-filter-created_at-date_to"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the CSV containing login attempt logs",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/track-external-shipment": {
      "post": {
        "tags": [
          "RPC"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          }
        ],
        "summary": "Track external shipment.",
        "description": "This endpoint is used to track externally registered shipments to provide tracking information.",
        "requestBody": {
          "description": "The shipment that should be tracked.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Shipment"
                      },
                      {
                        "required": [
                          "attributes",
                          "relationships"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "recipient_address",
                              "return_address",
                              "sender_address",
                              "tracking_code",
                              "physical_properties"
                            ],
                            "properties": {
                              "recipient_address": {
                                "required": [
                                  "first_name",
                                  "last_name",
                                  "street_1",
                                  "city",
                                  "country_code"
                                ]
                              },
                              "return_address": {
                                "required": [
                                  "street_1",
                                  "city",
                                  "country_code"
                                ]
                              },
                              "sender_address": {
                                "required": [
                                  "street_1",
                                  "city",
                                  "country_code"
                                ]
                              },
                              "physical_properties": {
                                "required": [
                                  "weight"
                                ]
                              },
                              "items": {
                                "items": {
                                  "required": [
                                    "description",
                                    "quantity"
                                  ]
                                }
                              }
                            }
                          },
                          "relationships": {
                            "required": [
                              "shop",
                              "contract"
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The shipment has been imported."
          }
        }
      }
    },
    "/suggest-address": {
      "post": {
        "tags": [
          "RPC"
        ],
        "security": [
          {
            "OAuth2": [
              "addresses.suggest"
            ]
          }
        ],
        "summary": "Get address suggestions.",
        "description": "This endpoint returns address suggestions based on the provided address details.",
        "requestBody": {
          "description": "The address details to request address suggestions for.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "country_code": {
                        "$ref": "#/components/schemas/CountryCode"
                      },
                      "postal_code": {
                        "type": "string",
                        "example": "2131 BC"
                      },
                      "street_number": {
                        "type": "integer",
                        "example": 679
                      },
                      "street_number_suffix": {
                        "type": "string",
                        "example": "A1"
                      },
                      "city": {
                        "type": "string",
                        "example": "Amsterdam"
                      },
                      "street_1": {
                        "type": "string",
                        "example": "Marnixstraat"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Address suggestions have been returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "country_code"
                        ],
                        "properties": {
                          "city": {
                            "type": "string",
                            "example": "Hoofddorp"
                          },
                          "country_code": {
                            "$ref": "#/components/schemas/CountryCode"
                          },
                          "postal_code": {
                            "type": "string",
                            "example": "2131 BC"
                          },
                          "street_1": {
                            "type": "string",
                            "example": "Hoofdweg"
                          },
                          "street_number": {
                            "type": "integer",
                            "example": 679
                          },
                          "street_number_suffix": {
                            "type": "string",
                            "example": "A1"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/update-shipment-status": {
      "post": {
        "tags": [
          "RPC"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          }
        ],
        "summary": "Update the status of a shipment.",
        "description": "This endpoint allows a user to trigger a status update for a shipment. The shipment will be synchronized with the carrier.<br><br>Since our **sandbox environment** does not provide real shipments, a `status_id` can be provided to simulate a shipment status update.",
        "requestBody": {
          "description": "The shipment ID to be updated. And (only on our sandbox environment) the status ID to update it with.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "shipment_id"
                    ],
                    "properties": {
                      "shipment_id": {
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
                        "example": "7b808eee-bf1c-40cd-98f2-3c335a06417e"
                      },
                      "status_id": {
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
                        "example": "5c868557-0827-4d21-a7f4-9820f01769f4"
                      },
                      "carrier_statuses": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/CarrierStatus"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "shipment_id": "7b808eee-bf1c-40cd-98f2-3c335a06417e"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The shipment is queued for a synchronization with the carrier."
          }
        }
      }
    },
    "/void-shipment": {
      "post": {
        "tags": [
          "RPC"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          }
        ],
        "summary": "Void a registered shipment whose label is not going to be used.",
        "description": "This endpoint allows a user to void a registered shipment if it's label is not going to be used. This will avoid unused labels to be invoiced by the carrier.",
        "requestBody": {
          "description": "The shipment ID to be voided.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "shipment_id"
                    ],
                    "properties": {
                      "shipment_id": {
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
                        "example": "7b808eee-bf1c-40cd-98f2-3c335a06417e"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The shipment has been voided."
          },
          "423": {
            "description": "The shipment could not be voided."
          }
        }
      }
    },
    "/analytics/on-time-delivery/{interval}": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          }
        ],
        "summary": "Get analytics report for delivered shipments on time.",
        "description": "This endpoint retrieves the rate by which shipments are successfully delivered on time on intervals.",
        "parameters": [
          {
            "name": "interval",
            "in": "path",
            "description": "Interval by which to arrange the dataset.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "month"
              ]
            }
          },
          {
            "name": "filter[date_from]",
            "in": "query",
            "description": "Date string in ISO 8601 date format (YYYY-MM-DD). Only shipments created at >= this date will be in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[date_to]",
            "in": "query",
            "description": "Date string in ISO 8601 date format (YYYY-MM-DD). Only shipments created at <= this date will be in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/query-filter-shop"
          },
          {
            "$ref": "#/components/parameters/query-filter-organization"
          },
          {
            "$ref": "#/components/parameters/query-filter-broker"
          },
          {
            "$ref": "#/components/parameters/query-filter-carrier"
          },
          {
            "name": "filter[service_code]",
            "in": "query",
            "description": "Comma separated string of service codes to filter by. Only shipments with a service that corresponds with one of the service codes will be in the response.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the analytics data in timeseries.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Analytics"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/analytics/volume/{group_by}/{interval}": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "security": [
          {
            "OAuth2": [
              "shipments.manage"
            ]
          }
        ],
        "summary": "Get analytics report for volumes per carrier.",
        "description": "This endpoint retrieves the amount of shipments delivered organized by carrier over time.",
        "parameters": [
          {
            "name": "group_by",
            "in": "path",
            "description": "Field by which to group data series by. Set `combined` to ignore grouping.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "carrier",
                "service",
                "combined"
              ]
            }
          },
          {
            "name": "interval",
            "in": "path",
            "description": "Interval by which to arrange the dataset.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "month"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/query-shipments-filter-search"
          },
          {
            "$ref": "#/components/parameters/query-shipments-filter-description"
          },
          {
            "$ref": "#/components/parameters/query-shipments-filter-customer_reference"
          },
          {
            "$ref": "#/components/parameters/query-shipments-filter-date_from"
          },
          {
            "$ref": "#/components/parameters/query-shipments-filter-date_to"
          },
          {
            "$ref": "#/components/parameters/query-filter-created_at-date_from"
          },
          {
            "$ref": "#/components/parameters/query-filter-created_at-date_to"
          },
          {
            "$ref": "#/components/parameters/query-shipments-filter-register_at-date_from"
          },
          {
            "$ref": "#/components/parameters/query-shipments-filter-register_at-date_to"
          },
          {
            "$ref": "#/components/parameters/query-filter-shop"
          },
          {
            "$ref": "#/components/parameters/query-filter-organization"
          },
          {
            "$ref": "#/components/parameters/query-filter-broker"
          },
          {
            "$ref": "#/components/parameters/query-filter-carrier"
          },
          {
            "$ref": "#/components/parameters/query-shipments-filter-current_status_code"
          },
          {
            "$ref": "#/components/parameters/query-shipments-filter-service_code"
          },
          {
            "$ref": "#/components/parameters/query-shipments-filter-recipient_address-country_code"
          },
          {
            "$ref": "#/components/parameters/query-shipments-filter-sender_address-country_code"
          },
          {
            "$ref": "#/components/parameters/query-shipments-filter-consolidation_shipment"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the analytics data in timeseries.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Analytics"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones": {
      "get": {
        "tags": [
          "Zones"
        ],
        "security": [
          {
            "OAuth2": [
              "contracts.manage"
            ]
          },
          {
            "OAuth2": [
              "zones.manage"
            ]
          }
        ],
        "summary": "Get all the zones.",
        "description": "This endpoint retrieves zones.",
        "parameters": [
          {
            "name": "filter[search]",
            "in": "query",
            "description": "String of characters you want to look for in a zone's attributes. Available fields to look in are:<ul><li>`name`</li><li>`code`</li><li>`description`</li></ul>",
            "example": "Europe",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[country_code]",
            "in": "query",
            "description": "Comma separated list of two letter ISO 3166-1 alpha-2 country codes to filter the zones by. Only zones that contain all of these countries will be returned.",
            "example": "BE,NL,LU",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the zones.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta",
                    "links"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ZoneResponse"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "type": "object",
                      "required": [
                        "self",
                        "first",
                        "last"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "https://api.myparcel.com/zones?page[number]=3&page[size]=30"
                        },
                        "first": {
                          "type": "string",
                          "example": "https://api.myparcel.com/zones?page[number]=1&page[size]=30"
                        },
                        "prev": {
                          "type": "string",
                          "example": "https://api.myparcel.com/zones?page[number]=2&page[size]=30"
                        },
                        "next": {
                          "type": "string",
                          "example": "https://api.myparcel.com/zones?page[number]=4&page[size]=30"
                        },
                        "last": {
                          "type": "string",
                          "example": "https://api.myparcel.com/zones?page[number]=13&page[size]=30"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "OAuth2": [
              "zones.manage"
            ]
          }
        ],
        "tags": [
          "Zones"
        ],
        "summary": "Create a new zone.",
        "description": "This endpoint creates a new zone with the posted data.",
        "requestBody": {
          "description": "The zone object to be created.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Zone"
                      },
                      {
                        "required": [
                          "attributes"
                        ],
                        "properties": {
                          "id": {
                            "readOnly": true
                          },
                          "attributes": {
                            "required": [
                              "name",
                              "code",
                              "country_codes"
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The zone is created.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ZoneResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{zone_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path-zone_id"
        }
      ],
      "get": {
        "tags": [
          "Zones"
        ],
        "security": [
          {
            "OAuth2": [
              "contracts.manage"
            ]
          },
          {
            "OAuth2": [
              "zones.manage"
            ]
          }
        ],
        "summary": "Get a zone by ID.",
        "description": "This endpoint retrieves the zone with the supplied ID.",
        "responses": {
          "200": {
            "description": "Retrieved the zone.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ZoneResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Zones"
        ],
        "security": [
          {
            "OAuth2": [
              "zones.manage"
            ]
          }
        ],
        "summary": "Update a zone by ID.",
        "description": "This endpoint updates the zone with the supplied ID.",
        "requestBody": {
          "description": "The zone object with attributes to be updated.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Zone"
                      },
                      {
                        "required": [
                          "id"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The zone is updated.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ZoneResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Zones"
        ],
        "security": [
          {
            "OAuth2": [
              "zones.manage"
            ]
          }
        ],
        "summary": "Delete a zone by ID.",
        "description": "This endpoint deletes the zone with the supplied ID.",
        "responses": {
          "204": {
            "description": "The zone is deleted."
          },
          "403": {
            "description": "The requesting access token does not have the correct permissions to delete this zone."
          },
          "404": {
            "description": "The requested zone resource could not be found."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Address": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AddressResource"
          },
          {
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/BaseAddress"
              },
              "relationships": {
                "type": "object",
                "required": [
                  "organization"
                ],
                "properties": {
                  "organization": {
                    "$ref": "#/components/schemas/OrganizationRelationship"
                  }
                }
              }
            }
          }
        ]
      },
      "AddressResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^addresses$",
            "example": "addresses"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "1154bfbc-322b-48d9-8f78-be0b467f258d"
          }
        }
      },
      "AddressResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Address"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "street_1",
                  "city",
                  "country_code"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/addresses/1154bfbc-322b-48d9-8f78-be0b467f258d"
                  }
                }
              }
            }
          }
        ]
      },
      "Barcode": {
        "readOnly": true,
        "type": "string",
        "example": "3SABCD0123456789",
        "description": "Textual representation of the barcode present on the label."
      },
      "BaseAddress": {
        "type": "object",
        "properties": {
          "street_1": {
            "type": "string",
            "example": "Baker Street"
          },
          "street_2": {
            "type": [
              "string",
              "null"
            ],
            "example": "Marylebone"
          },
          "street_number": {
            "type": [
              "integer",
              "null"
            ],
            "example": 221
          },
          "street_number_suffix": {
            "type": [
              "string",
              "null"
            ],
            "example": "B"
          },
          "postal_code": {
            "type": [
              "string",
              "null"
            ],
            "example": "NW1 6XE"
          },
          "city": {
            "type": "string",
            "example": "London"
          },
          "state_code": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StateCode"
              },
              {
                "type": "null"
              }
            ]
          },
          "country_code": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "first_name": {
            "type": "string",
            "example": "Sherlock"
          },
          "last_name": {
            "type": "string",
            "example": "Holmes"
          },
          "company": {
            "type": [
              "string",
              "null"
            ],
            "example": "Holmes Investigations"
          },
          "email": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Email"
              },
              {
                "type": "null"
              }
            ],
            "example": "s.holmes@holmesinvestigations.com"
          },
          "phone_number": {
            "type": [
              "string",
              "null"
            ],
            "example": "+31 234 567 890"
          }
        }
      },
      "BaseCustoms": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "content_type": {
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "merchandise",
                  "sample_merchandise",
                  "returned_merchandise",
                  "gifts",
                  "documents"
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "invoice_number": {
            "type": [
              "null",
              "string"
            ],
            "description": "Required when `content_type` is either `merchandise`, `sample_merchandise` or `returned_merchandise`.",
            "example": "9000"
          },
          "non_delivery": {
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "return",
                  "abandon"
                ],
                "description": "Action when the parcel cannot be delivered."
              },
              {
                "type": "null"
              }
            ]
          },
          "incoterm": {
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "DAP",
                  "DDP"
                ],
                "description": "DAP (Delivered At Place) or DDP (Delivered Duty Paid). Required when `content_type` is either `merchandise`, `sample_merchandise` or `returned_merchandise`."
              },
              {
                "type": "null"
              }
            ]
          },
          "shipping_value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Price"
              },
              {
                "type": "null",
                "description": ""
              }
            ],
            "description": "The shipping cost paid by the customer, for tax and duty purposes."
          },
          "license_number": {
            "type": [
              "null",
              "string"
            ],
            "example": "512842382"
          },
          "certificate_number": {
            "type": [
              "null",
              "string"
            ],
            "example": "2112211"
          },
          "total_tax": {
            "readOnly": true,
            "oneOf": [
              {
                "readOnly": true,
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/Price"
              }
            ]
          },
          "total_duty": {
            "readOnly": true,
            "oneOf": [
              {
                "readOnly": true,
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/Price"
              }
            ]
          }
        }
      },
      "BaseShipmentItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sku": {
            "type": [
              "string",
              "null"
            ],
            "example": "123456789"
          },
          "description": {
            "type": "string",
            "example": "OnePlus X"
          },
          "image_url": {
            "type": [
              "string",
              "null"
            ],
            "example": "https://myparcel.com/product.png",
            "description": "A link to an image of the item."
          },
          "quantity": {
            "type": "integer",
            "minimum": 1,
            "example": 2
          },
          "item_value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Price"
              },
              {
                "type": "null"
              }
            ]
          },
          "item_weight": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 1,
            "example": 135,
            "description": "Weight in grams of a single item within item resource. Should be multiplied by quantity to get total weight."
          },
          "item_weight_unit": {
            "type": [
              "string",
              "null"
            ],
            "example": "g",
            "description": "Unit of measurement for item_weight.",
            "default": "g",
            "enum": [
              "mg",
              "g",
              "kg",
              "oz",
              "lb"
            ]
          },
          "hs_code": {
            "type": [
              "string",
              "null"
            ],
            "pattern": "^[0-9.]+$",
            "example": "8517.12.00",
            "description": "Harmonized System code used by customs."
          },
          "origin_country_code": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CountryCode"
              },
              {
                "type": "null"
              }
            ]
          },
          "tax": {
            "readOnly": true,
            "oneOf": [
              {
                "readOnly": true,
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/Price"
              }
            ]
          },
          "duty": {
            "readOnly": true,
            "oneOf": [
              {
                "readOnly": true,
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/Price"
              }
            ]
          },
          "vat_percentage": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0,
            "maximum": 100,
            "example": 19,
            "description": "The VAT rate applied to the `item_value` amount."
          },
          "is_preferential_origin": {
            "type": "boolean",
            "example": false,
            "description": "Whether the item is from a preferential origin country. (see http://ptadb.wto.org/)",
            "default": false
          }
        }
      },
      "BasePhysicalProperties": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "height": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 1,
            "maximum": 2147483647,
            "example": 150,
            "description": "Height in millimeters."
          },
          "width": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 1,
            "maximum": 2147483647,
            "example": 300,
            "description": "Width in millimeters."
          },
          "length": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 1,
            "maximum": 2147483647,
            "example": 500,
            "description": "Length in millimeters."
          },
          "volume": {
            "type": [
              "number",
              "null"
            ],
            "minimum": 0.01,
            "maximum": 2147483647,
            "example": 22.5,
            "description": "Volume in liters. (dm3)"
          },
          "weight": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 5000,
            "description": "Weight in grams."
          },
          "volumetric_weight": {
            "readOnly": true,
            "type": [
              "integer",
              "null"
            ],
            "minimum": 1,
            "maximum": 2147483647,
            "example": 4500,
            "description": "Volumetric weight in grams. Calculated by our API by multiplying shipment dimensions (if present) and dividing them by the volumetric_weight_divisor of the service. See <a href=\"https://docs.myparcel.com/api/resources/shipments/physical-properties/volumetric-weight.html\"/>the documentation</a> for more information."
          }
        }
      },
      "BasePrice": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/PriceAmount"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          }
        }
      },
      "Broker": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BrokerResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "MyParcel.com"
                  },
                  "domain": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "maxLength": 255,
                    "example": "app.example.com",
                    "description": "If you want to use [our portal](https://app.myparcel.com) on a domain that you already own, or a *.sendmyparcel.com subdomain."
                  },
                  "logo_url": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "https://cdn.myparcel.com/images/myparcelcom-black.svg",
                    "description": "Logo image URL"
                  },
                  "favicon_url": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "https://cdn.myparcel.com/images/favicon.png",
                    "description": "Favicon image URL"
                  },
                  "support_url": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "maxLength": 255,
                    "example": "https://help.myparcel.com",
                    "description": "URL to knowledge base or FAQ"
                  },
                  "contact_url": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "maxLength": 255,
                    "example": "mailto:info@myparcel.com",
                    "description": "URL to create a new support ticket or mailto: link with email address"
                  },
                  "style": {
                    "$ref": "#/components/schemas/Style"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "required": [
                  "enterprise"
                ],
                "properties": {
                  "enterprise": {
                    "$ref": "#/components/schemas/EnterpriseRelationship"
                  }
                }
              }
            }
          }
        ]
      },
      "BrokerRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BrokerResource"
              },
              {
                "required": [
                  "id"
                ]
              }
            ]
          },
          "links": {
            "readOnly": true,
            "type": "object",
            "required": [
              "related"
            ],
            "additionalProperties": false,
            "properties": {
              "related": {
                "type": "string",
                "format": "url",
                "example": "https://api.myparcel.com/brokers/a294ee55-bc94-4890-b734-afd56c158f95"
              }
            }
          }
        }
      },
      "BrokerResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^brokers$",
            "example": "brokers"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "a294ee55-bc94-4890-b734-afd56c158f95"
          }
        }
      },
      "BrokerResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Broker"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "name",
                  "domain",
                  "logo_url",
                  "favicon_url",
                  "style"
                ],
                "properties": {
                  "style": {
                    "required": [
                      "background_color",
                      "foreground_color",
                      "primary_color",
                      "secondary_color",
                      "accent_color"
                    ]
                  }
                }
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/brokers/a294ee55-bc94-4890-b734-afd56c158f95"
                  }
                }
              }
            }
          }
        ]
      },
      "Carrier": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CarrierResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "MyParcel.com"
                  },
                  "code": {
                    "type": "string",
                    "example": "my-parcel-com",
                    "description": "Unique slugified version of the carrier name to identify a carrier."
                  },
                  "logo_url": {
                    "type": "string",
                    "example": "https://cdn.myparcel.com/images/myparcelcom-black.svg",
                    "description": "Logo image URL"
                  },
                  "credentials_format": {
                    "type": "object",
                    "example": {
                      "required": [
                        "api_user",
                        "api_password"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "api_user": {
                          "type": "string"
                        },
                        "api_password": {
                          "type": "string"
                        }
                      }
                    },
                    "description": "JSON Schema specification of the credentials required to communicate with the carrier."
                  },
                  "label_formats": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "mime_type",
                        "size"
                      ],
                      "properties": {
                        "mime_type": {
                          "type": "string",
                          "example": "application/pdf"
                        },
                        "size": {
                          "type": "string",
                          "example": "A6"
                        }
                      }
                    }
                  },
                  "label_mime_types": {
                    "deprecated": true,
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "application/pdf"
                    },
                    "description": "Deprecated, use label_formats instead."
                  },
                  "collections": {
                    "type": "object",
                    "required": [
                      "offers_collections",
                      "voids_registered_collections",
                      "allows_adding_registered_shipments_to_collection"
                    ],
                    "properties": {
                      "offers_collections": {
                        "type": "boolean",
                        "default": false
                      },
                      "voids_registered_collections": {
                        "type": "boolean",
                        "description": "Whether the carrier supports voiding of registered collections.",
                        "default": false
                      },
                      "allows_adding_registered_shipments_to_collection": {
                        "type": "boolean",
                        "description": "Whether the carrier supports adding registered shipments to a concept collection.",
                        "default": false
                      }
                    }
                  },
                  "pudo": {
                    "type": "object",
                    "required": [
                      "can_get_pudo_by_id"
                    ],
                    "properties": {
                      "can_get_pudo_by_id": {
                        "type": "boolean",
                        "default": false
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "CarrierRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CarrierResource"
              },
              {
                "required": [
                  "id"
                ]
              }
            ]
          },
          "links": {
            "readOnly": true,
            "type": "object",
            "required": [
              "related"
            ],
            "additionalProperties": false,
            "properties": {
              "related": {
                "type": "string",
                "format": "url",
                "example": "https://api.myparcel.com/carriers/be7f6752-34e0-49a1-a832-bcc209450ea9"
              }
            }
          }
        }
      },
      "CarriersRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CarrierResource"
                },
                {
                  "required": [
                    "id"
                  ]
                }
              ]
            }
          }
        }
      },
      "CarrierResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^carriers$",
            "example": "carriers"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "be7f6752-34e0-49a1-a832-bcc209450ea9"
          }
        }
      },
      "CarrierResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Carrier"
          },
          {
            "required": [
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "name",
                  "code",
                  "logo_url",
                  "credentials_format",
                  "label_mime_types",
                  "label_formats",
                  "collections"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/carriers/be7f6752-34e0-49a1-a832-bcc209450ea9"
                  }
                }
              }
            }
          }
        ]
      },
      "CarrierStatus": {
        "type": "object",
        "required": [
          "code",
          "description",
          "assigned_at"
        ],
        "properties": {
          "category": {
            "$ref": "#/components/schemas/CarrierStatusCategory"
          },
          "code": {
            "type": "string",
            "example": "9001",
            "description": "The code used by the carrier for this status."
          },
          "description": {
            "type": "string",
            "example": "Confirmed at destination",
            "description": "Description of the code used by the carrier."
          },
          "assigned_at": {
            "type": "integer",
            "example": 1504801719,
            "description": "Unix timestamp (UTC) when the carrier registered this status."
          },
          "tracking_code": {
            "type": "string",
            "example": "3SABCD0123456789",
            "description": "The tracking code of the shipment that was used to get this status from the carrier."
          }
        }
      },
      "CarrierStatusCategory": {
        "type": "string",
        "enum": [
          "change-in-flight",
          "damaged",
          "default",
          "delay",
          "dropped-at-pudo-by-sender",
          "failed-cash-on-delivery",
          "failed-collection",
          "failed-collection-attempt",
          "failed-collection-attempt-force-majeure",
          "failed-collection-attempt-invalid-data",
          "failed-collection-attempt-invalid-data-address",
          "failed-collection-attempt-invalid-data-time",
          "failed-collection-attempt-package-issue",
          "failed-collection-attempt-user",
          "failed-customs-clearance",
          "failed-delivery-attempt",
          "failed-delivery-attempt-force-majeure",
          "failed-delivery-attempt-user",
          "failed-miscellaneous",
          "failed-oversized",
          "failed-pre-advice",
          "failed-refused-delivery",
          "failed-shipment-damaged",
          "failed-shipment-lost",
          "failed-shipment-missing",
          "partial-collection",
          "partial-delivery",
          "relabelling",
          "require-delivery-instructions",
          "security-alert",
          "successful-collection"
        ],
        "example": "failed-delivery-attempt",
        "default": "default",
        "description": "The category code of this status update. If the value is not `default`, some action might be required by the sender or recipient."
      },
      "CarrierSurcharge": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CarrierSurchargeResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Re-labeling surcharge"
                  },
                  "description": {
                    "type": "string",
                    "example": "A carrier-specific (carrier_code) re-labeling surcharge"
                  },
                  "fee": {
                    "$ref": "#/components/schemas/Price"
                  },
                  "created_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  },
                  "updated_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "required": [
                  "carrier"
                ],
                "additionalProperties": false,
                "properties": {
                  "carrier": {
                    "$ref": "#/components/schemas/CarrierRelationship"
                  }
                }
              }
            }
          }
        ]
      },
      "CarrierSurchargeResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^carrier-surcharges$",
            "example": "carrier-surcharges"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "9e6d8dba-7c45-4351-a9fc-b55a0cbafbad"
          }
        }
      },
      "CarrierSurchargeResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CarrierSurcharge"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "name",
                  "fee",
                  "created_at",
                  "updated_at"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/carrier-surcharges/385446dg-34e1-42a1-n832-bcc209450ea9"
                  }
                }
              }
            }
          }
        ]
      },
      "Client": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ClientResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My Magento client"
                  },
                  "label": {
                    "type": "string",
                    "example": "Magento"
                  },
                  "created_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "required": [
                  "owner"
                ],
                "additionalProperties": false,
                "properties": {
                  "owner": {
                    "$ref": "#/components/schemas/UserRelationship"
                  }
                }
              }
            }
          }
        ]
      },
      "ClientResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^clients",
            "example": "clients"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "6a4baca2-7b94-4987-9e4e-2283c22bac1d"
          }
        }
      },
      "ClientResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Client"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "name",
                  "created_at"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/clients/6a4baca2-7b94-4987-9e4e-2283c22bac1d"
                  }
                }
              }
            }
          }
        ]
      },
      "Collection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "deprecated": true,
                    "type": [
                      "string",
                      "null"
                    ],
                    "example": null
                  },
                  "description": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "example": "First Collection"
                  },
                  "address": {
                    "$ref": "#/components/schemas/BaseAddress"
                  },
                  "register": {
                    "type": "boolean",
                    "example": true,
                    "description": "Indicates whether the collection should be registered with the carrier. Further updates are no longer possible after a successful registration."
                  },
                  "collection_time": {
                    "$ref": "#/components/schemas/CollectionTime"
                  },
                  "tracking_code": {
                    "readOnly": true,
                    "type": "string",
                    "example": "TRC123456"
                  },
                  "created_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "contract": {
                    "$ref": "#/components/schemas/ContractRelationship"
                  },
                  "files": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/FilesRelationship"
                      },
                      {
                        "readOnly": true
                      }
                    ]
                  },
                  "manifest": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ManifestRelationship"
                      },
                      {
                        "readOnly": true
                      }
                    ]
                  },
                  "shipments": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ShipmentsRelationship"
                      }
                    ]
                  },
                  "shop": {
                    "$ref": "#/components/schemas/ShopRelationship"
                  },
                  "status": {
                    "$ref": "#/components/schemas/StatusRelationship"
                  }
                }
              }
            }
          }
        ]
      },
      "CollectionIncludes": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/CarrierResponse"
            },
            {
              "$ref": "#/components/schemas/ContractResponse"
            },
            {
              "$ref": "#/components/schemas/ManifestResponse"
            },
            {
              "$ref": "#/components/schemas/ShopResponse"
            },
            {
              "$ref": "#/components/schemas/StatusResponse"
            }
          ]
        }
      },
      "CollectionRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CollectionResource"
              },
              {
                "required": [
                  "id"
                ]
              }
            ]
          },
          "links": {
            "readOnly": true,
            "type": "object",
            "required": [
              "related"
            ],
            "additionalProperties": false,
            "properties": {
              "related": {
                "type": "string",
                "format": "url",
                "example": "https://api.myparcel.com/collections/e26d781b-6c56-4be5-ae72-505db793d2bd"
              }
            }
          }
        }
      },
      "CollectionResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^collections$",
            "example": "collections"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "e26d781b-6c56-4be5-ae72-505db793d2bd"
          }
        }
      },
      "CollectionResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Collection"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "address",
                  "collection_time",
                  "created_at"
                ],
                "properties": {
                  "address": {
                    "required": [
                      "street_1",
                      "city",
                      "country_code"
                    ]
                  }
                }
              },
              "relationships": {
                "required": [
                  "status",
                  "shop"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/collections/e26d781b-6c56-4be5-ae72-505db793d2bd"
                  }
                }
              }
            }
          }
        ]
      },
      "CollectionSchedule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionScheduleResource"
          },
          {
            "required": [
              "attributes",
              "relationships"
            ],
            "properties": {
              "attributes": {
                "type": "object",
                "required": [
                  "days",
                  "collection"
                ],
                "properties": {
                  "days": {
                    "type": "array",
                    "description": "Days of the week the collections should be created for.",
                    "items": {
                      "type": "string",
                      "enum": [
                        "monday",
                        "tuesday",
                        "wednesday",
                        "thursday",
                        "friday",
                        "saturday",
                        "sunday"
                      ]
                    }
                  },
                  "collection": {
                    "type": "object",
                    "required": [
                      "time",
                      "address"
                    ],
                    "properties": {
                      "description": {
                        "type": "string",
                        "example": "Collection for my hub.",
                        "description": "A description that is given to the created collections."
                      },
                      "time": {
                        "$ref": "#/components/schemas/CollectionScheduleTime"
                      },
                      "address": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/BaseAddress"
                          },
                          {
                            "required": [
                              "street_1",
                              "city",
                              "country_code"
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "relationships": {
                "type": "object",
                "required": [
                  "shop"
                ],
                "properties": {
                  "shop": {
                    "$ref": "#/components/schemas/ShopRelationship"
                  },
                  "contract": {
                    "$ref": "#/components/schemas/ContractRelationship"
                  }
                }
              }
            }
          }
        ]
      },
      "CollectionScheduleResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^collection-schedules$",
            "example": "collection-schedules"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "fecf26fc-431b-4530-bfa6-57934815e16d"
          }
        }
      },
      "CollectionScheduleTime": {
        "type": "object",
        "required": [
          "from",
          "to"
        ],
        "properties": {
          "from": {
            "type": "string",
            "description": "Time string in ISO 8601 format indicating the earliest requested time for this collection. Omitting a timezone will result in UTC time.",
            "example": "09:00+02:00",
            "pattern": "^([0-1]\\d|2[0-3]):[0-5]\\d(Z|(\\+|-)\\d?\\d?(:\\d\\d)?)?$"
          },
          "to": {
            "type": "string",
            "description": "Time string in ISO 8601 format indicating the latest requested time for this collection. Omitting a timezone will result in UTC time.",
            "example": "12:00+02:00",
            "pattern": "^([0-1]\\d|2[0-3]):[0-5]\\d(Z|(\\+|-)\\d?\\d?(:\\d\\d)?)?$"
          }
        }
      },
      "CollectionTime": {
        "type": "object",
        "required": [
          "from",
          "to"
        ],
        "properties": {
          "from": {
            "oneOf": [
              {
                "type": "integer",
                "description": "Unix timestamp (UTC) indicating the earliest requested time for this collection.",
                "example": 1648110600
              },
              {
                "type": "string",
                "pattern": "^\\d{4}-(?:0[1-9]|1[0-2])-(?:[0-2][0-9]|3[0-1])T(?:[0-1][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](?:\\.\\d{1,6})?(Z|[+-]\\d{2}:?\\d{2})$",
                "example": "2022-03-24T09:30:00+01:00",
                "description": "ISO 8601 formatted datetime string indicating the earliest requested time for this collection."
              }
            ]
          },
          "to": {
            "oneOf": [
              {
                "type": "integer",
                "example": 1648114200,
                "description": "Unix timestamp (UTC) indicating the latest requested time for this collection."
              },
              {
                "type": "string",
                "pattern": "^\\d{4}-(?:0[1-9]|1[0-2])-(?:[0-2][0-9]|3[0-1])T(?:[0-1][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](?:\\.\\d{1,6})?(Z|[+-]\\d{2}:?\\d{2})$",
                "example": "2022-03-24T10:30:00+01:00",
                "description": "ISO 8601 formatted datetime string indicating the latest requested time for this collection."
              }
            ]
          }
        }
      },
      "CollectionTimeSlot": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionTimeSlotResource"
          },
          {
            "required": [
              "attributes",
              "relationships"
            ],
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/CollectionTime"
              },
              "relationships": {
                "type": "object",
                "required": [
                  "carrier"
                ],
                "additionalProperties": false,
                "properties": {
                  "carrier": {
                    "$ref": "#/components/schemas/CarrierRelationship"
                  }
                }
              }
            }
          }
        ]
      },
      "CollectionTimeSlotResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^collection-time-slots$",
            "example": "collection-time-slots"
          },
          "id": {
            "type": "string",
            "description": "The carrier ID and the from and to timestamp separated by an underscore (_).",
            "example": "be7f6752-34e0-49a1-a832-bcc209450ea9_1648110600_1648114200"
          }
        }
      },
      "ColloNumber": {
        "readOnly": true,
        "type": "integer",
        "example": 1,
        "description": "Sequence number when this shipment is part of a multi-colli shipment."
      },
      "CombinedFile": {
        "deprecated": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/CombinedFileResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "document_type": {
                    "type": "string",
                    "enum": [
                      "label",
                      "customs-declaration-form",
                      "commercial-invoice"
                    ],
                    "default": "label",
                    "description": "All successfully registered shipments will have a `label` file. International shipments with customs information will have extra files."
                  },
                  "page_size": {
                    "type": "string",
                    "enum": [
                      "A4",
                      "A5",
                      "A6"
                    ],
                    "default": "A6",
                    "example": "A6",
                    "description": "One of the available page sizes, most likely `A6` or `A4` depending on your printer."
                  },
                  "starting_position": {
                    "type": "string",
                    "enum": [
                      "top-left",
                      "top-right",
                      "bottom-left",
                      "bottom-right"
                    ],
                    "default": "top-left",
                    "description": "Position on the first A4 page to start printing labels. All positions before this one will be left empty."
                  }
                }
              },
              "relationships": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "shop": {
                    "$ref": "#/components/schemas/ShopRelationship"
                  },
                  "combined_file": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/FileRelationship"
                      },
                      {
                        "readOnly": true
                      }
                    ]
                  },
                  "source_files": {
                    "$ref": "#/components/schemas/FilesRelationship"
                  }
                }
              }
            }
          }
        ]
      },
      "CombinedFileResource": {
        "deprecated": true,
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^combined-files$",
            "example": "combined-files"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "1624e8f8-8b00-413c-a684-fd4337ccb66b"
          }
        }
      },
      "CombinedFileResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CombinedFile"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships",
              "links"
            ],
            "properties": {
              "relationships": {
                "required": [
                  "shop",
                  "source_files"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/combined-files/1624e8f8-8b00-413c-a684-fd4337ccb66b"
                  }
                }
              }
            }
          }
        ]
      },
      "Contract": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ContractResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My Custom Contract"
                  },
                  "status": {
                    "type": "string",
                    "example": "active"
                  },
                  "currency": {
                    "$ref": "#/components/schemas/Currency"
                  },
                  "volumetric_weight_divisor_factor": {
                    "type": "number",
                    "format": "float",
                    "default": 1,
                    "description": "If your contractual agreements with the carrier contain a <a href=\"https://docs.myparcel.com/api/resources/shipments/physical-properties/volumetric-weight.html\"/>volumetric weight formula</a> that uses a different divisor than the `volumetric_weight_divisor` on our Service resource, you can use this factor to increase or decrease the divisor. For example a factor of 1.25 would change a divisor of 4000 to 5000."
                  },
                  "created_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  },
                  "updated_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "carrier": {
                    "$ref": "#/components/schemas/CarrierRelationship"
                  },
                  "owner": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/OrganizationRelationship"
                      },
                      {
                        "$ref": "#/components/schemas/BrokerRelationship"
                      }
                    ]
                  },
                  "liability_coverages": {
                    "$ref": "#/components/schemas/LiabilityCoveragesRelationship"
                  },
                  "template": {
                    "$ref": "#/components/schemas/ContractRelationship"
                  }
                }
              }
            }
          }
        ]
      },
      "ContractIncludes": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/CarrierResponse"
            },
            {
              "$ref": "#/components/schemas/BrokerResponse"
            },
            {
              "$ref": "#/components/schemas/OrganizationResponse"
            },
            {
              "$ref": "#/components/schemas/ShopResponse"
            },
            {
              "$ref": "#/components/schemas/LiabilityCoverageResponse"
            }
          ]
        }
      },
      "ContractRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContractResource"
              },
              {
                "required": [
                  "id"
                ]
              }
            ]
          },
          "links": {
            "readOnly": true,
            "type": "object",
            "required": [
              "related"
            ],
            "additionalProperties": false,
            "properties": {
              "related": {
                "type": "string",
                "format": "url",
                "example": "https://api.myparcel.com/contracts/2cb32706-5762-4b96-9212-327e6afaeeff"
              }
            }
          }
        }
      },
      "ContractResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^contracts$",
            "example": "contracts"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "2cb32706-5762-4b96-9212-327e6afaeeff"
          }
        }
      },
      "ContractResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Contract"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "name",
                  "status",
                  "currency",
                  "volumetric_weight_divisor_factor",
                  "created_at",
                  "updated_at"
                ],
                "properties": {
                  "status": {
                    "enum": [
                      "active",
                      "inactive",
                      "invalid",
                      "pending"
                    ],
                    "description": "A new contract is pending until the `credentials` have been verified. The verification process is done automatically."
                  }
                }
              },
              "relationships": {
                "required": [
                  "carrier",
                  "owner"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/contracts/2cb32706-5762-4b96-9212-327e6afaeeff"
                  }
                }
              }
            }
          }
        ]
      },
      "ContractsRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ContractResource"
                },
                {
                  "required": [
                    "id"
                  ]
                }
              ]
            }
          }
        }
      },
      "CountryCode": {
        "type": "string",
        "pattern": "^(AD|AE|AF|AG|AI|AL|AM|AO|AQ|AR|AS|AT|AU|AW|AX|AZ|BA|BB|BD|BE|BF|BG|BH|BI|BJ|BL|BM|BN|BO|BQ|BR|BS|BT|BV|BW|BY|BZ|CA|CC|CD|CF|CG|CH|CI|CK|CL|CM|CN|CO|CR|CU|CV|CW|CX|CY|CZ|DE|DJ|DK|DM|DO|DZ|EC|EE|EG|EH|ER|ES|ET|FI|FJ|FK|FM|FO|FR|GA|GB|GD|GE|GF|GG|GH|GI|GL|GM|GN|GP|GQ|GR|GS|GT|GU|GW|GY|HK|HM|HN|HR|HT|HU|ID|IE|IL|IM|IN|IO|IQ|IR|IS|IT|JE|JM|JO|JP|KE|KG|KH|KI|KM|KN|KP|KR|KW|KY|KZ|LA|LB|LC|LI|LK|LR|LS|LT|LU|LV|LY|MA|MC|MD|ME|MF|MG|MH|MK|ML|MM|MN|MO|MP|MQ|MR|MS|MT|MU|MV|MW|MX|MY|MZ|NA|NC|NE|NF|NG|NI|NL|NO|NP|NR|NU|NZ|OM|PA|PE|PF|PG|PH|PK|PL|PM|PN|PR|PS|PT|PW|PY|QA|RE|RO|RS|RU|RW|SA|SB|SC|SD|SE|SG|SH|SI|SJ|SK|SL|SM|SN|SO|SR|SS|ST|SV|SX|SY|SZ|TC|TD|TF|TG|TH|TJ|TK|TL|TM|TN|TO|TR|TT|TV|TW|TZ|UA|UG|UM|US|UY|UZ|VA|VC|VE|VG|VI|VN|VU|WF|WS|XK|YE|YT|ZA|ZM|ZW)$",
        "example": "GB",
        "description": "Country code in ISO 3166-1 alpha-2 format."
      },
      "Currency": {
        "type": "string",
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BOV",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHE",
          "CHF",
          "CHW",
          "CLF",
          "CLP",
          "CNY",
          "COP",
          "COU",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRU",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MXV",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLE",
          "SOS",
          "SRD",
          "SSP",
          "STN",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "USN",
          "UYI",
          "UYU",
          "UYW",
          "UZS",
          "VED",
          "VES",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XAG",
          "XAU",
          "XBA",
          "XBB",
          "XBC",
          "XBD",
          "XCD",
          "XDR",
          "XOF",
          "XPD",
          "XPF",
          "XPT",
          "XSU",
          "XTS",
          "XUA",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWL"
        ],
        "example": "EUR",
        "description": "Currency code in ISO 4217 format."
      },
      "PackageType": {
        "type": "string",
        "enum": [
          "letter",
          "letterbox",
          "multi-colli",
          "parcel",
          "unstamped"
        ],
        "example": "parcel"
      },
      "DocumentType": {
        "type": "string",
        "enum": [
          "label",
          "printcode",
          "combined-label",
          "customs-declaration-form",
          "commercial-invoice",
          "manifest-itemized",
          "manifest-summarized",
          "manifest-csv",
          "rates-import",
          "report"
        ]
      },
      "DemoOrder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DemoOrderResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "created_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  },
                  "recipient_address": {
                    "$ref": "#/components/schemas/BaseAddress"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/BaseOrderItem"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "sku": {
                              "description": "Demo orders with SKU will enter return order statistics once issued."
                            }
                          }
                        }
                      ]
                    },
                    "minItems": 1
                  },
                  "outbound_shipment_identifier": {
                    "oneOf": [
                      {
                        "type": "string",
                        "description": "Shipment identifier of the outbound shipment",
                        "example": "93011952"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "is_third_party": {
                    "type": "boolean",
                    "description": "Indicates whether the demo order should be handled by a third party",
                    "default": false
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "shop": {
                    "$ref": "#/components/schemas/ShopRelationship"
                  }
                }
              }
            }
          }
        ]
      },
      "DemoOrderResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^demo-orders$",
            "example": "demo-orders"
          },
          "id": {
            "type": "string",
            "example": "12345",
            "description": "The reference by which this demo order can be retrieved from its source."
          }
        }
      },
      "DemoOrderResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DemoOrder"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "created_at",
                  "recipient_address",
                  "items"
                ],
                "properties": {
                  "recipient_address": {
                    "required": [
                      "first_name",
                      "last_name",
                      "street_1",
                      "city",
                      "country_code",
                      "email"
                    ]
                  },
                  "items": {
                    "items": {
                      "required": [
                        "id",
                        "name",
                        "description",
                        "quantity",
                        "item_price"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "relationships": {
                "required": [
                  "shop"
                ]
              }
            }
          }
        ]
      },
      "Email": {
        "type": "string",
        "format": "email",
        "pattern": "^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$",
        "example": "s.holmes@holmesinvestigations.com"
      },
      "Enterprise": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EnterpriseResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "MyParcel.com B.V."
                  }
                }
              }
            }
          }
        ]
      },
      "EnterpriseRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EnterpriseResource"
              },
              {
                "required": [
                  "id"
                ]
              }
            ]
          },
          "links": {
            "readOnly": true,
            "type": "object",
            "required": [
              "related"
            ],
            "additionalProperties": false,
            "properties": {
              "related": {
                "type": "string",
                "format": "url",
                "example": "https://api.myparcel.com/enterprises/8f778acf-0bcd-4121-b998-ad92fa1dcdce"
              }
            }
          }
        }
      },
      "EnterpriseResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^enterprises$",
            "example": "enterprises"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "8f778acf-0bcd-4121-b998-ad92fa1dcdce"
          }
        }
      },
      "EnterpriseResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Enterprise"
          },
          {
            "required": [
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "name"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/enterprises/8f778acf-0bcd-4121-b998-ad92fa1dcdce"
                  }
                }
              }
            }
          }
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "422",
            "description": "The HTTP status code applicable to this error."
          },
          "code": {
            "type": "string",
            "example": "12345",
            "description": "Internal MyParcel.com error code."
          },
          "title": {
            "type": "string",
            "example": "Value is too long",
            "description": "A short, human-readable summary of the problem that does not change per occurrence."
          },
          "detail": {
            "type": "string",
            "example": "The description field exceeds the limit of 25 characters.",
            "description": "A human-readable explanation specific to this occurrence of the problem."
          },
          "source": {
            "type": "object",
            "properties": {
              "pointer": {
                "type": "string",
                "example": "/data/attributes/description",
                "description": "A JSON Pointer to the associated entity in the request body."
              },
              "parameter": {
                "type": "string",
                "example": "include",
                "description": "Indication of which URI query parameter caused the error."
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "carrier_response": {
                "type": [
                  "object",
                  "string"
                ],
                "example": "ParcelDescription1 exceeds character limit."
              },
              "carrier_status": {
                "type": "string",
                "example": "400"
              },
              "carrier_rules": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "max-length",
                      "description": "Indicating what type of rule applies. Examples are: max-length, required, required-unless."
                    },
                    "value": {
                      "type": [
                        "string",
                        "number",
                        "object"
                      ],
                      "example": "35"
                    }
                  }
                }
              },
              "trace_id": {
                "type": "string",
                "example": "db01fdf7-a5b2-4bb9-8a33-4686c4a11580",
                "description": "A reference to communicate to the MyParcel.com support team when requesting help with this issue."
              }
            }
          }
        }
      },
      "File": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FileResource"
          },
          {
            "required": [
              "attributes"
            ],
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "document_type": {
                    "$ref": "#/components/schemas/DocumentType"
                  },
                  "formats": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/FileFormat"
                    },
                    "description": "This array holds objects describing the type of formats this file is available in.",
                    "example": [
                      {
                        "extension": "pdf",
                        "mime_type": "application/pdf"
                      }
                    ]
                  },
                  "created_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  }
                }
              }
            }
          }
        ]
      },
      "FileFormat": {
        "type": "object",
        "required": [
          "extension",
          "mime_type"
        ],
        "properties": {
          "extension": {
            "type": "string",
            "example": "pdf"
          },
          "mime_type": {
            "type": "string",
            "example": "application/pdf"
          }
        }
      },
      "FileRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileResource"
              },
              {
                "required": [
                  "id"
                ]
              }
            ]
          },
          "links": {
            "readOnly": true,
            "type": "object",
            "required": [
              "related"
            ],
            "additionalProperties": false,
            "properties": {
              "related": {
                "type": "string",
                "format": "url",
                "example": "https://api.myparcel.com/files/0f621db6-d239-4ae9-b85d-8e97469b10ce"
              }
            }
          }
        }
      },
      "FileResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^files$",
            "example": "files"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "0f621db6-d239-4ae9-b85d-8e97469b10ce"
          }
        }
      },
      "FileResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/File"
          },
          {
            "required": [
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "document_type",
                  "formats",
                  "created_at"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/files/0f621db6-d239-4ae9-b85d-8e97469b10ce"
                  }
                }
              }
            }
          }
        ]
      },
      "FilesRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FileResource"
                },
                {
                  "required": [
                    "id"
                  ]
                }
              ]
            }
          },
          "links": {
            "readOnly": true,
            "type": "object",
            "required": [
              "related"
            ],
            "additionalProperties": false,
            "properties": {
              "related": {
                "type": "string",
                "format": "url",
                "example": "https://api.myparcel.com/files/0f621db6-d239-4ae9-b85d-8e97469b10ce"
              }
            }
          }
        }
      },
      "Hook": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HookResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "DPD Next Day for medium packages"
                  },
                  "order": {
                    "type": "integer",
                    "example": 3,
                    "description": "Priority of this hook, lower value means it is triggered first."
                  },
                  "active": {
                    "type": "boolean",
                    "example": true
                  },
                  "trigger": {
                    "$ref": "#/components/schemas/HookTrigger"
                  },
                  "action": {
                    "$ref": "#/components/schemas/HookAction"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "required": [
                  "owner"
                ],
                "properties": {
                  "owner": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ShopRelationship"
                      },
                      {
                        "$ref": "#/components/schemas/OrganizationRelationship"
                      },
                      {
                        "$ref": "#/components/schemas/BrokerRelationship"
                      }
                    ]
                  }
                }
              }
            }
          }
        ]
      },
      "HookAction": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/HookActionSendResource"
          },
          {
            "$ref": "#/components/schemas/HookActionUpdateResource"
          },
          {
            "$ref": "#/components/schemas/HookActionApproveReturn"
          },
          {
            "$ref": "#/components/schemas/HookActionRejectReturn"
          },
          {
            "$ref": "#/components/schemas/HookActionRequestPayment"
          },
          {
            "$ref": "#/components/schemas/HookActionSetReturnDeadlinePassed"
          }
        ]
      },
      "HookActionSendResource": {
        "type": "object",
        "required": [
          "values"
        ],
        "additionalProperties": false,
        "properties": {
          "action_type": {
            "type": "string",
            "pattern": "^send-resource$",
            "example": "send-resource"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "url"
              ],
              "additionalProperties": false,
              "properties": {
                "url": {
                  "type": "string",
                  "example": "https://foo.bar"
                },
                "secret": {
                  "type": "string",
                  "example": "some.secret.string.only.the.endpoint.holder.knows"
                },
                "tries": {
                  "type": "integer",
                  "example": 3,
                  "description": "Indicator for how often the action should be attempted. Max: 24 tries.",
                  "default": 3
                },
                "retry_delay": {
                  "type": "integer",
                  "example": 600,
                  "description": "Number of seconds before the action should be tried again after failing. Max: 3600 seconds (1 hour).",
                  "default": 600
                },
                "includes": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "status"
                  }
                }
              }
            }
          }
        }
      },
      "HookActionUpdateResource": {
        "type": "object",
        "required": [
          "values"
        ],
        "additionalProperties": false,
        "properties": {
          "action_type": {
            "type": "string",
            "pattern": "^update-resource$",
            "example": "update-resource"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "pointer",
                "value"
              ],
              "additionalProperties": false,
              "properties": {
                "pointer": {
                  "type": "string",
                  "example": "/relationships/service/data/id"
                },
                "value": {
                  "type": [
                    "string",
                    "object",
                    "array"
                  ],
                  "example": "175a235f-aff5-4e44-87b5-3657b75c1deb",
                  "description": "In this specific case this could be a DPD Next Day service ID."
                },
                "converter": {
                  "type": "string",
                  "enum": [
                    "service-code-to-id"
                  ],
                  "description": "Attempts to convert the 'value' property according to a valid converter.",
                  "example": "service-code-to-id"
                }
              }
            }
          }
        }
      },
      "HookActionApproveReturn": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "action_type": {
            "type": "string",
            "pattern": "^approve-return$",
            "example": "approve-return"
          }
        }
      },
      "HookActionRejectReturn": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "action_type": {
            "type": "string",
            "pattern": "^reject-return$",
            "example": "reject-return"
          }
        }
      },
      "HookActionRequestPayment": {
        "type": "object",
        "required": [
          "values"
        ],
        "additionalProperties": false,
        "properties": {
          "action_type": {
            "type": "string",
            "pattern": "^request-payment$",
            "example": "request-payment"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "price"
              ],
              "additionalProperties": false,
              "properties": {
                "price": {
                  "$ref": "#/components/schemas/Price"
                }
              }
            }
          }
        }
      },
      "HookActionSetReturnDeadlinePassed": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "action_type": {
            "type": "string",
            "pattern": "^set-return-deadline-passed$",
            "example": "set-return-deadline-passed"
          }
        }
      },
      "HookLog": {
        "type": "object",
        "required": [
          "id",
          "type",
          "attributes",
          "relationships",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^hook-logs$",
            "example": "hook-logs"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "1e568bac-8075-466f-a898-7baed146136e"
          },
          "attributes": {
            "type": "object",
            "required": [
              "created_at"
            ],
            "additionalProperties": false,
            "properties": {
              "resource_diff": {
                "type": "object",
                "example": {
                  "relationships": {
                    "service": {
                      "data": {
                        "type": "services",
                        "id": "175a235f-aff5-4e44-87b5-3657b75c1deb"
                      }
                    }
                  }
                },
                "description": "The difference between the resource before and after the hook has run."
              },
              "errors": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "Applying the hook failed because the desired service was not available for the shipment contract."
                },
                "description": "An array of errors encountered when trying to run this hook."
              },
              "created_at": {
                "$ref": "#/components/schemas/Timestamp"
              }
            }
          },
          "relationships": {
            "type": "object",
            "required": [
              "hook",
              "resource"
            ],
            "additionalProperties": false,
            "properties": {
              "hook": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HookRelationship"
                  },
                  {
                    "properties": {
                      "data": {
                        "properties": {
                          "meta": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "DPD Next Day for medium packages"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              },
              "resource": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "shipments"
                      },
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
                        "example": "7b808eee-bf1c-40cd-98f2-3c335a06417e"
                      }
                    }
                  },
                  "links": {
                    "readOnly": true,
                    "type": "object",
                    "required": [
                      "related"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "url",
                        "example": "https://api.myparcel.com/shipments/7b808eee-bf1c-40cd-98f2-3c335a06417e"
                      }
                    }
                  }
                }
              }
            }
          },
          "links": {
            "readOnly": true,
            "type": "object",
            "required": [
              "self"
            ],
            "additionalProperties": false,
            "properties": {
              "self": {
                "type": "string",
                "format": "url",
                "example": "https://api.myparcel.com/hook-logs/1e568bac-8075-466f-a898-7baed146136e"
              }
            }
          }
        }
      },
      "HookLogsRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "pattern": "^hook-logs$",
                  "example": "hook-logs"
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
                  "example": "1e568bac-8075-466f-a898-7baed146136e"
                }
              }
            }
          }
        }
      },
      "HookRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HookResource"
              },
              {
                "required": [
                  "id"
                ]
              }
            ]
          },
          "links": {
            "readOnly": true,
            "type": "object",
            "required": [
              "related"
            ],
            "additionalProperties": false,
            "properties": {
              "related": {
                "type": "string",
                "format": "url",
                "example": "https://api.myparcel.com/hooks/99c2917a-8cbe-4e04-b4ce-e43263b20332"
              }
            }
          }
        }
      },
      "HookResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^hooks$",
            "example": "hooks"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "99c2917a-8cbe-4e04-b4ce-e43263b20332"
          }
        }
      },
      "HookResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Hook"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "name",
                  "order",
                  "active",
                  "trigger",
                  "action"
                ],
                "properties": {
                  "trigger": {
                    "required": [
                      "resource_type",
                      "resource_action"
                    ]
                  },
                  "action": {
                    "required": [
                      "action_type"
                    ]
                  }
                }
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/hooks/99c2917a-8cbe-4e04-b4ce-e43263b20332"
                  }
                }
              }
            }
          }
        ]
      },
      "HookTrigger": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "resource_type": {
            "type": "string",
            "example": "shipments"
          },
          "resource_action": {
            "type": "string",
            "enum": [
              "create",
              "update",
              "import"
            ]
          },
          "predicates": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "operator",
                "pointer",
                "value"
              ],
              "additionalProperties": false,
              "properties": {
                "operator": {
                  "type": "string",
                  "enum": [
                    "==",
                    "!=",
                    ">",
                    "<",
                    ">=",
                    "<=",
                    "contains",
                    "in",
                    "older_than",
                    "newer_than"
                  ]
                },
                "pointer": {
                  "type": "string",
                  "example": "/attributes/physical_properties/weight"
                },
                "value": {
                  "type": [
                    "string",
                    "number",
                    "array"
                  ],
                  "example": 1000
                }
              }
            }
          }
        }
      },
      "ImageMeta": {
        "type": "object",
        "description": "Instead of simply populating the image's (logo, banner, etc) url attribute with an image URL from your website, you could provide your image here. We will upload it and generate a URL which will overwrite the alternative image url.",
        "required": [
          "mime_type",
          "contents"
        ],
        "additionalProperties": false,
        "properties": {
          "mime_type": {
            "type": "string",
            "minLength": 1,
            "example": "image/png"
          },
          "contents": {
            "type": "string",
            "minLength": 1,
            "description": "Base64 encoded image data."
          }
        }
      },
      "ImageUrl": {
        "type": [
          "string",
          "null"
        ],
        "maxLength": 255,
        "example": "https://cdn.myparcel.com/images/myparcelcom-black.svg",
        "description": "An image URL"
      },
      "Integration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IntegrationResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Marketplace",
                    "description": "The name of the integration."
                  },
                  "code": {
                    "type": "string",
                    "example": "marketplace",
                    "description": "A unique lowercase code for the integration."
                  },
                  "description": {
                    "type": "string",
                    "example": "Marketplace integration to import your Marketplace orders into the MyParcel.com API.",
                    "description": "A description of what the integration is used for."
                  },
                  "connect_url": {
                    "deprecated": true,
                    "type": "string",
                    "example": "https://api.myparcel.com/integrations/marketplace/init-auth",
                    "description": "A link to perform OAuth 2.0 authentication with the integration platform."
                  },
                  "readme_url": {
                    "type": "string",
                    "example": "https://help.myparcel.com/home/integrations",
                    "description": "A link to get more more information on the integration platform."
                  },
                  "logo_url": {
                    "type": "string",
                    "example": "https://myparcel.com/logo.png",
                    "description": "A link to a logo of the integration platform."
                  },
                  "provides_outbound_shipments": {
                    "type": "boolean",
                    "example": true,
                    "description": "A flag to determine if an integration provides fetching of shipments."
                  },
                  "provides_single_order_fetch": {
                    "type": "boolean",
                    "example": false,
                    "description": "A flag to determine if an integration provides fetching of single orders."
                  },
                  "requires_client": {
                    "type": "boolean",
                    "example": true,
                    "description": "Whether or not it is required to supply a meta.client_id when connecting integration to shop."
                  },
                  "settings_format": {
                    "type": "object",
                    "example": {
                      "required": [
                        "webshop_url",
                        "api_key"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "webshop_url": {
                          "type": "string"
                        },
                        "api_key": {
                          "type": "string",
                          "meta": {
                            "type": "password"
                          }
                        }
                      }
                    },
                    "description": "JSON Schema specification of the settings required to communicate with the integration platform."
                  },
                  "tags": {
                    "oneOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "Any custom tag. Used to indicate meta-data about the integration.",
                          "example": "plugin"
                        }
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "created_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  }
                }
              }
            }
          }
        ]
      },
      "IntegrationResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^integrations$",
            "example": "integrations"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "eb527d60-fc26-4aff-ac58-f2661b0e7e9b"
          }
        }
      },
      "IntegrationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Integration"
          },
          {
            "required": [
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "name",
                  "code",
                  "description",
                  "provides_single_order_fetch",
                  "provides_outbound_shipments",
                  "requires_client",
                  "created_at"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/integrations/eb527d60-fc26-4aff-ac58-f2661b0e7e9b"
                  }
                }
              }
            }
          }
        ]
      },
      "IntegrationsRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/IntegrationResource"
                },
                {
                  "required": [
                    "id"
                  ]
                }
              ]
            }
          }
        }
      },
      "Invitation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InvitationResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "created_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  },
                  "expires_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  },
                  "first_name": {
                    "type": "string",
                    "example": "Sherlock"
                  },
                  "last_name": {
                    "type": "string",
                    "example": "Holmes"
                  },
                  "email": {
                    "$ref": "#/components/schemas/Email",
                    "example": "s.holmes@holmesinvestigations.com"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "broker": {
                    "$ref": "#/components/schemas/BrokerRelationship"
                  },
                  "user": {
                    "$ref": "#/components/schemas/UserRelationship"
                  }
                }
              }
            }
          }
        ]
      },
      "InvitationResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^invitations$",
            "example": "invitations"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "7c19fd47-9bdb-4d1d-97ba-1e39ee81f1d8"
          }
        }
      },
      "InvitationRequest": {
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "required": [
              "attributes",
              "relationships"
            ],
            "properties": {
              "id": {
                "readOnly": true
              },
              "attributes": {
                "required": [
                  "email"
                ],
                "properties": {
                  "first_name": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "example": "Sherlock"
                  },
                  "last_name": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "example": "Holmes"
                  },
                  "email": {
                    "$ref": "#/components/schemas/Email",
                    "example": "s.holmes@holmesinvestigations.com"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "required": [
                  "broker"
                ],
                "additionalProperties": false,
                "properties": {
                  "broker": {
                    "$ref": "#/components/schemas/BrokerRelationship"
                  }
                }
              }
            }
          }
        }
      },
      "InvitationIncludes": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/BrokerResponse"
            },
            {
              "$ref": "#/components/schemas/UserResponse"
            }
          ]
        }
      },
      "InvitationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Invitation"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "email"
                ]
              },
              "relationships": {
                "required": [
                  "broker"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/onboarding/v1/invitations/7c19fd47-9bdb-4d1d-97ba-1e39ee81f1d8"
                  }
                }
              }
            }
          }
        ]
      },
      "Invoice": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InvoiceResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "example": "Invoice for February 2018"
                  },
                  "price": {
                    "$ref": "#/components/schemas/Price"
                  },
                  "billing_term_start_at": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "example": 1517443200,
                    "description": "Start of the billing term this invoice is created for as a Unix timestamp (UTC)."
                  },
                  "billing_term_end_at": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "example": 1519862399,
                    "description": "End of the billing term this invoice is created for as a Unix timestamp (UTC)."
                  },
                  "created_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  },
                  "updated_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "organization": {
                    "$ref": "#/components/schemas/OrganizationRelationship"
                  },
                  "status": {
                    "$ref": "#/components/schemas/StatusRelationship"
                  }
                }
              }
            }
          }
        ]
      },
      "InvoiceRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "type": {
                "type": "string",
                "pattern": "^invoices$",
                "example": "invoices"
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
                "example": "7b808eee-bf1c-40cd-98f2-3c335a06417e"
              }
            }
          },
          "links": {
            "readOnly": true,
            "type": "object",
            "required": [
              "related"
            ],
            "additionalProperties": false,
            "properties": {
              "related": {
                "type": "string",
                "format": "url",
                "example": "https://api.myparcel.com/invoices/5c868557-0827-4d21-a7f4-9820f01769f4"
              }
            }
          }
        }
      },
      "InvoiceResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^invoices$",
            "example": "invoices"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "c93c4bd6-9dc9-4560-be08-915b58fab3f0"
          }
        }
      },
      "InvoiceResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Invoice"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "price",
                  "updated_at",
                  "created_at"
                ]
              },
              "relationships": {
                "required": [
                  "organization",
                  "status"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/invoices/c93c4bd6-9dc9-4560-be08-915b58fab3f0"
                  }
                }
              }
            }
          }
        ]
      },
      "ItemFeature": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "additionalProperties": false,
        "properties": {
          "key": {
            "type": "string",
            "example": "colour"
          },
          "value": {
            "type": [
              "string",
              "number",
              "boolean"
            ],
            "example": "red"
          },
          "annotation": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "color"
            ]
          }
        }
      },
      "ItemReasonQuestion": {
        "type": "object",
        "required": [
          "code",
          "answer"
        ],
        "properties": {
          "code": {
            "type": "string",
            "example": "what-size",
            "description": "A code that identifies the question for the return of this item. See the <a href=\"/#tag/ReturnQuestions/paths/~1returns~1v1~1questions/get\">return-question</a> `code` attribute."
          },
          "answer": {
            "type": "string",
            "description": "The answer to the question referenced by the code attribute."
          }
        }
      },
      "LiabilityCoverage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LiabilityCoverageResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Liability coverage up to GBP 250 value."
                  },
                  "price": {
                    "$ref": "#/components/schemas/Price"
                  },
                  "coverage_max": {
                    "$ref": "#/components/schemas/Price"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "contract": {
                    "$ref": "#/components/schemas/ContractRelationship"
                  }
                }
              }
            }
          }
        ]
      },
      "LiabilityCoverageRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LiabilityCoverageResource"
              },
              {
                "required": [
                  "id"
                ]
              }
            ]
          },
          "links": {
            "readOnly": true,
            "type": "object",
            "required": [
              "related"
            ],
            "additionalProperties": false,
            "properties": {
              "related": {
                "type": "string",
                "format": "url",
                "example": "https://api.myparcel.com/liability-coverages/5a7ef73a-ddea-11e9-8a34-2a2ae2dbcce4"
              }
            }
          }
        }
      },
      "LiabilityCoverageResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^liability-coverages$",
            "example": "liability-coverages"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "5a7ef73a-ddea-11e9-8a34-2a2ae2dbcce4"
          }
        }
      },
      "LiabilityCoverageResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LiabilityCoverage"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "name",
                  "price",
                  "coverage_max"
                ]
              },
              "relationships": {
                "required": [
                  "contract"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/liability-coverages/5a7ef73a-ddea-11e9-8a34-2a2ae2dbcce4"
                  }
                }
              }
            }
          }
        ]
      },
      "LiabilityCoveragesRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LiabilityCoverageResource"
                },
                {
                  "required": [
                    "id"
                  ]
                }
              ]
            }
          }
        }
      },
      "Locale": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LocaleResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "code": {
                    "$ref": "#/components/schemas/LocaleEnum"
                  },
                  "name": {
                    "type": "string",
                    "example": "English"
                  }
                }
              }
            }
          }
        ]
      },
      "LocaleEnum": {
        "type": "string",
        "enum": [
          "de-DE",
          "el-GR",
          "en-GB",
          "es-ES",
          "fr-FR",
          "it-IT",
          "nl-NL",
          "pl-PL"
        ],
        "example": "en-GB"
      },
      "LocaleResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^locales$",
            "example": "locales"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "5a7ef73a-ddea-11e9-8a34-2a2ae2dbcce4"
          }
        }
      },
      "LocaleResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Locale"
          },
          {
            "required": [
              "id",
              "attributes"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "code",
                  "name"
                ]
              }
            }
          }
        ]
      },
      "LocalizedField": {
        "type": "object",
        "minProperties": 1,
        "patternProperties": {
          "^[a-z]{2}-[A-Z]{2}$": {
            "type": "string",
            "description": "Translation key/value pairs. Keys are [ISO 3166-1 alpha-2 compliant language tags](https://en.wikipedia.org/wiki/Language_localisation#Language_tags_and_codes) (for example: ``en-GB``, ``nl-NL``). Values are translations for each locale."
          }
        }
      },
      "Manifest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ManifestResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Batch week 1"
                  },
                  "address": {
                    "$ref": "#/components/schemas/BaseAddress"
                  },
                  "created_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "files": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/FilesRelationship"
                      },
                      {
                        "readOnly": true
                      }
                    ]
                  },
                  "owner": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ShopRelationship"
                      },
                      {
                        "$ref": "#/components/schemas/OrganizationRelationship"
                      },
                      {
                        "$ref": "#/components/schemas/BrokerRelationship"
                      }
                    ]
                  },
                  "shipments": {
                    "$ref": "#/components/schemas/ShipmentsRelationship"
                  },
                  "shop": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ShopRelationship"
                      },
                      {
                        "deprecated": true
                      }
                    ]
                  },
                  "contract": {
                    "$ref": "#/components/schemas/ContractRelationship"
                  }
                }
              }
            }
          }
        ]
      },
      "ManifestIncludes": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/CarrierResponse"
            },
            {
              "$ref": "#/components/schemas/ContractResponse"
            },
            {
              "$ref": "#/components/schemas/FileResponse"
            },
            {
              "$ref": "#/components/schemas/BrokerResponse"
            },
            {
              "$ref": "#/components/schemas/OrganizationResponse"
            },
            {
              "$ref": "#/components/schemas/ShopResponse"
            }
          ]
        }
      },
      "ManifestRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ManifestResource"
              },
              {
                "required": [
                  "id"
                ]
              }
            ]
          },
          "links": {
            "readOnly": true,
            "type": "object",
            "required": [
              "related"
            ],
            "additionalProperties": false,
            "properties": {
              "related": {
                "type": "string",
                "format": "url",
                "example": "https://api.myparcel.com/manifests/ce7f6752-34e0-49a1-a832-bcc209450ea8"
              }
            }
          }
        }
      },
      "ManifestResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^manifests$",
            "example": "manifests"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "ce7f6752-34e0-49a1-a832-bcc209450ea8"
          }
        }
      },
      "ManifestResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Manifest"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "name",
                  "address",
                  "created_at"
                ],
                "properties": {
                  "address": {
                    "required": [
                      "street_1",
                      "city",
                      "country_code"
                    ]
                  }
                }
              },
              "relationships": {
                "anyOf": [
                  {
                    "required": [
                      "shipments",
                      "owner"
                    ]
                  },
                  {
                    "required": [
                      "shipments",
                      "shop"
                    ]
                  }
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/manifests/ce7f6752-34e0-49a1-a832-bcc209450ea8"
                  }
                }
              },
              "meta": {
                "readOnly": true,
                "type": "object",
                "properties": {
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "MostReturnedItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "item",
          "return_reasons"
        ],
        "properties": {
          "item": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "sku",
              "name",
              "amount"
            ],
            "properties": {
              "sku": {
                "type": "string",
                "example": "ABC-123"
              },
              "name": {
                "type": "string"
              },
              "image_url": {
                "type": "string",
                "format": "uri"
              },
              "amount": {
                "type": "integer"
              }
            }
          },
          "return_reasons": {
            "type": "array",
            "items": {
              "required": [
                "code",
                "name",
                "amount"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "wrong_size"
                },
                "name": {
                  "type": "string",
                  "example": "Wrong Size"
                },
                "amount": {
                  "type": "integer",
                  "example": 10
                }
              }
            }
          }
        }
      },
      "Order": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "created_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  },
                  "recipient_address": {
                    "$ref": "#/components/schemas/BaseAddress"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/OrderItem"
                    }
                  }
                }
              },
              "relationships": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "shop": {
                    "$ref": "#/components/schemas/ShopRelationship"
                  }
                }
              }
            }
          }
        ]
      },
      "OrderAnalytics": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "unit_type",
          "labels",
          "datasets"
        ],
        "properties": {
          "unit_type": {
            "type": "string",
            "example": "amount",
            "enum": [
              "amount"
            ]
          },
          "labels": {
            "type": "array",
            "description": "List of all chart labels on the X axis",
            "items": {
              "type": "string",
              "example": "2024-01-03"
            }
          },
          "datasets": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "label",
                "data"
              ],
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Name of the marketplace",
                  "example": "Magento 2"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "description": "Order count for the selected date interval",
                    "example": 102
                  }
                }
              }
            }
          }
        }
      },
      "BaseOrderItem": {
        "type": "object",
        "properties": {
          "sku": {
            "type": [
              "string",
              "null"
            ],
            "example": "123456789"
          },
          "name": {
            "type": "string",
            "example": "OnePlus X"
          },
          "description": {
            "type": "string",
            "example": "Latest OnePlus X model for making the best phone calls imaginable!"
          },
          "image_url": {
            "type": [
              "string",
              "null"
            ],
            "example": "https://myparcel.com/product.png",
            "description": "A link to an image of the item."
          },
          "quantity": {
            "type": "integer",
            "example": 2
          },
          "item_price": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Price"
              },
              {
                "description": "Price of a single item. Should be multiplied by quantity to get total price."
              }
            ]
          },
          "item_weight": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Weight"
              },
              {
                "description": "Weight of a single item. Should be multiplied by quantity to get total weight."
              }
            ]
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemFeature"
            },
            "description": "List of features of this item, such as the color or size."
          }
        }
      },
      "OrderItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseOrderItem"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "external-item-reference-001"
              }
            }
          }
        ]
      },
      "OrderResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^orders$",
            "example": "orders"
          },
          "id": {
            "type": "string",
            "example": "#this-is-my-reference-001",
            "description": "The reference by which this order can be retrieved from its source."
          }
        }
      },
      "OrderResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Order"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships",
              "meta"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "created_at",
                  "recipient_address",
                  "items"
                ],
                "properties": {
                  "recipient_address": {
                    "required": [
                      "first_name",
                      "last_name",
                      "street_1",
                      "city",
                      "country_code",
                      "email"
                    ]
                  },
                  "items": {
                    "items": {
                      "required": [
                        "id",
                        "name",
                        "description",
                        "quantity",
                        "item_price"
                      ]
                    }
                  }
                }
              },
              "relationships": {
                "required": [
                  "shop"
                ]
              },
              "meta": {
                "type": "object",
                "additionalProperties": false,
                "description": "Properties indicating whether the order was sent with a shipping method that supports returning the shipment with a previously provided label",
                "required": [
                  "shipping_and_return",
                  "label_in_the_box",
                  "package_type"
                ],
                "properties": {
                  "shipping_and_return": {
                    "type": "boolean"
                  },
                  "label_in_the_box": {
                    "type": "boolean"
                  },
                  "package_type": {
                    "$ref": "#/components/schemas/PackageType"
                  }
                }
              }
            }
          }
        ]
      },
      "Organization": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OrganizationResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Holmes investigation inc."
                  },
                  "company_registration_number": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "example": "63190133",
                    "description": "Chamber of Commerce number."
                  },
                  "vat_number": {
                    "deprecated": true,
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "<strong>Deprecated</strong> use `tax_identification_numbers` instead."
                  },
                  "eori_number": {
                    "deprecated": true,
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "<strong>Deprecated</strong> use `tax_identification_numbers` instead."
                  },
                  "voec_number": {
                    "deprecated": true,
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "<strong>Deprecated</strong> use `tax_identification_numbers` instead (use `vat` + `NO`)."
                  },
                  "billing_address": {
                    "$ref": "#/components/schemas/BaseAddress"
                  },
                  "logo_url": {
                    "$ref": "#/components/schemas/ImageUrl"
                  },
                  "style": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Style"
                      },
                      {
                        "deprecated": true,
                        "description": "<strong>Deprecated</strong> use the `branding` from the <a href=\"/#tag/Shops/paths/~1shops~1{shop_id}/get\">shop</a> resource instead."
                      }
                    ]
                  },
                  "tax_identification_numbers": {
                    "oneOf": [
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/TaxIdentificationNumber"
                        }
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "created_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  },
                  "reference": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "example": "674864928466",
                    "description": "Any reference to identify the organization."
                  }
                }
              },
              "relationships": {
                "type": "object",
                "required": [
                  "broker"
                ],
                "additionalProperties": false,
                "properties": {
                  "broker": {
                    "$ref": "#/components/schemas/BrokerRelationship"
                  }
                }
              }
            }
          }
        ]
      },
      "OrganizationMeta": {
        "type": "object",
        "properties": {
          "logo": {
            "$ref": "#/components/schemas/ImageMeta"
          }
        }
      },
      "OrganizationRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrganizationResource"
              },
              {
                "required": [
                  "id"
                ]
              }
            ]
          },
          "links": {
            "readOnly": true,
            "type": "object",
            "required": [
              "related"
            ],
            "additionalProperties": false,
            "properties": {
              "related": {
                "type": "string",
                "format": "url",
                "example": "https://api.myparcel.com/organizations/9cdf86e8-333f-4ed9-bb31-4935c780c947"
              }
            }
          }
        }
      },
      "OrganizationResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^organizations$",
            "example": "organizations"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "9cdf86e8-333f-4ed9-bb31-4935c780c947"
          }
        }
      },
      "OrganizationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Organization"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "name",
                  "created_at"
                ],
                "properties": {
                  "billing_address": {
                    "required": [
                      "street_1",
                      "city",
                      "country_code"
                    ]
                  }
                }
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/organizations/9cdf86e8-333f-4ed9-bb31-4935c780c947"
                  }
                }
              }
            }
          }
        ]
      },
      "PaginationMeta": {
        "type": "object",
        "required": [
          "total_pages",
          "total_records"
        ],
        "additionalProperties": false,
        "properties": {
          "total_pages": {
            "type": "integer",
            "example": 13
          },
          "total_records": {
            "type": "integer",
            "example": 373
          }
        }
      },
      "PasswordResetResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^password-resets$",
            "example": "password-resets"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "8f92334b-8821-4a00-89df-f31349689474"
          }
        }
      },
      "PaymentProvider": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentProviderResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Mollie",
                    "description": "The name of the payment provider."
                  },
                  "code": {
                    "type": "string",
                    "example": "mollie",
                    "description": "A unique lowercase code for the payment provider."
                  },
                  "description": {
                    "type": "string",
                    "example": "Mollie payment provider integration with MyParcel.com.",
                    "description": "A description about the payment provider."
                  },
                  "website_url": {
                    "type": "string",
                    "example": "https://mollie.com/",
                    "description": "Payment provider homepage."
                  },
                  "readme_url": {
                    "type": "string",
                    "example": "https://help.myparcel.com/home/payment-providers",
                    "description": "A link to get more more information on the payment providers."
                  },
                  "logo_url": {
                    "type": "string",
                    "example": "https://myparcel.com/logo.png",
                    "description": "A link to a logo of the integration platform."
                  },
                  "connects_through_oauth2": {
                    "type": "boolean",
                    "example": true,
                    "description": "A flag which tells if the payment provider requires connection through OAuth2."
                  },
                  "settings_format": {
                    "type": "object",
                    "example": {
                      "required": [
                        "api_key"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "api_key": {
                          "type": "string",
                          "meta": {
                            "type": "password"
                          }
                        }
                      }
                    },
                    "description": "JSON Schema specification of the settings required to communicate with the integration platform."
                  },
                  "created_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  }
                }
              }
            }
          }
        ]
      },
      "PaymentProviderResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^payment-providers$",
            "example": "payment-providers"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "bd9d7b78-8b00-4c10-beec-7adb2a2e2494"
          }
        }
      },
      "PaymentProviderResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentProvider"
          },
          {
            "required": [
              "id",
              "attributes"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "name",
                  "code",
                  "description",
                  "website_url",
                  "readme_url",
                  "logo_url",
                  "connects_through_oauth2",
                  "created_at"
                ]
              },
              "meta": {
                "properties": {
                  "connected": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if the payment provider is connected to the shop (when shop_id query parameter is provided)"
                  }
                }
              }
            }
          }
        ]
      },
      "PhysicalProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BasePhysicalProperties"
          },
          {
            "required": [
              "weight"
            ]
          }
        ]
      },
      "PickupDropoffLocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PickupDropoffLocationResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "categories": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "pick-up",
                        "drop-off"
                      ]
                    }
                  },
                  "code": {
                    "type": "string",
                    "example": "205604"
                  },
                  "address": {
                    "$ref": "#/components/schemas/BaseAddress"
                  },
                  "location_type": {
                    "type": "string",
                    "enum": [
                      "locker",
                      "office",
                      "office-agency",
                      "office-postal",
                      "office-shop"
                    ],
                    "default": "office",
                    "example": "office"
                  },
                  "opening_hours": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "day"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "day": {
                          "type": "string",
                          "enum": [
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday",
                            "Sunday"
                          ]
                        },
                        "open": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Time"
                            },
                            {
                              "example": "08:30"
                            }
                          ]
                        },
                        "closed": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Time"
                            },
                            {
                              "example": "19:00"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "position": {
                    "type": "object",
                    "required": [
                      "latitude",
                      "longitude"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "latitude": {
                        "type": "number",
                        "format": "double",
                        "example": 51.5237758
                      },
                      "longitude": {
                        "type": "number",
                        "format": "double",
                        "example": -0.1606707
                      }
                    }
                  },
                  "features": {
                    "type": "array",
                    "description": "A list of features that are available at this location.",
                    "items": {
                      "type": "string",
                      "enum": [
                        "print-label-in-store"
                      ]
                    }
                  }
                }
              },
              "relationships": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "carrier": {
                    "$ref": "#/components/schemas/CarrierRelationship"
                  }
                }
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/carriers/be7f6752-34e0-49a1-a832-bcc209450ea9/pickup-dropoff-locations/205604"
                  }
                }
              }
            }
          }
        ]
      },
      "PickupDropoffLocationResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^pickup-dropoff-locations$",
            "example": "pickup-dropoff-locations"
          },
          "id": {
            "type": "string",
            "description": "The location ID.",
            "example": "205604"
          }
        }
      },
      "PickupDropoffLocationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PickupDropoffLocation"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "categories",
                  "code",
                  "address",
                  "location_type"
                ],
                "properties": {
                  "address": {
                    "required": [
                      "company",
                      "street_1",
                      "street_number",
                      "city",
                      "country_code"
                    ]
                  }
                }
              },
              "meta": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "distance": {
                    "type": "integer",
                    "description": "Distance from the specified postal code to the location in meters.",
                    "example": 1337
                  }
                }
              },
              "relationships": {
                "required": [
                  "carrier"
                ]
              }
            }
          }
        ]
      },
      "Price": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BasePrice"
          },
          {
            "required": [
              "amount",
              "currency"
            ]
          }
        ]
      },
      "PriceAmount": {
        "type": "integer",
        "example": 9500,
        "description": "Price amount in cents/pence."
      },
      "RateImport": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^rate-imports$",
            "example": "rate-imports"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "9be9e22f-45c8-4fe6-b6f2-2c1ecb92b266"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "sheet_url": {
                "type": "string",
                "description": "URL of the CSV file with service rates to be imported."
              },
              "keep_existing_rates": {
                "type": "boolean",
                "default": false,
                "description": "If not supplied or `false`, all existing service rates on the contract will be deleted."
              },
              "status": {
                "type": "string",
                "description": "Status of the import.",
                "example": "pending",
                "readonly": true,
                "enum": [
                  "pending",
                  "in-progress",
                  "success",
                  "failed"
                ]
              },
              "error": {
                "type": "string",
                "description": "Error message if the import failed.",
                "example": "Import failed due to invalid data.",
                "readonly": true
              },
              "total_rates": {
                "type": "integer",
                "description": "Total number of rates to be imported.",
                "example": 1,
                "readonly": true
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "contract": {
                "$ref": "#/components/schemas/ContractRelationship"
              },
              "file": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileRelationship"
                  },
                  {
                    "readOnly": true
                  }
                ]
              }
            }
          }
        }
      },
      "RateImportIncludes": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/CarrierResponse"
            },
            {
              "$ref": "#/components/schemas/ContractResponse"
            },
            {
              "$ref": "#/components/schemas/FileResponse"
            }
          ]
        }
      },
      "RateImportResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RateImport"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "status"
                ]
              },
              "relationships": {
                "required": [
                  "contract"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/rate-imports/82827d54-04ca-4d8a-a69f-3390fcd94546"
                  }
                }
              }
            }
          }
        ]
      },
      "Region": {
        "deprecated": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/RegionResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "country_code": {
                    "$ref": "#/components/schemas/CountryCode"
                  },
                  "region_code": {
                    "$ref": "#/components/schemas/RegionCode"
                  },
                  "currency": {
                    "type": "string",
                    "pattern": "^[A-Z]{3}$",
                    "example": "EUR",
                    "description": "Currency code in ISO 4217 format."
                  },
                  "name": {
                    "type": "string",
                    "example": "England"
                  },
                  "category": {
                    "type": "string",
                    "enum": [
                      "country"
                    ],
                    "description": "Present if the region is part of a common geographical group."
                  }
                }
              },
              "relationships": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "parent": {
                    "$ref": "#/components/schemas/RegionRelationship"
                  }
                }
              }
            }
          }
        ]
      },
      "RegionCode": {
        "deprecated": true,
        "type": [
          "string",
          "null"
        ],
        "example": "ENG"
      },
      "RegionRelationship": {
        "deprecated": true,
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RegionResource"
              },
              {
                "required": [
                  "id"
                ]
              }
            ]
          },
          "links": {
            "readOnly": true,
            "type": "object",
            "required": [
              "related"
            ],
            "additionalProperties": false,
            "properties": {
              "related": {
                "type": "string",
                "format": "url",
                "example": "https://api.myparcel.com/regions/0b6ecd39-6072-4529-a031-f21247a91296"
              }
            }
          }
        }
      },
      "RegionResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^regions$",
            "example": "regions"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "0b6ecd39-6072-4529-a031-f21247a91296"
          }
        }
      },
      "RegionResponse": {
        "deprecated": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/Region"
          },
          {
            "required": [
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "name"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/regions/0b6ecd39-6072-4529-a031-f21247a91296"
                  }
                }
              }
            }
          }
        ]
      },
      "Report": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReportResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "2020 Q1 UK shipment report"
                  },
                  "filters": {
                    "type": "object",
                    "properties": {
                      "created_at": {
                        "type": "object",
                        "description": "Either the `created_at` filter or the `register_at` filter is required for creating a report.",
                        "required": [
                          "date_from",
                          "date_to"
                        ],
                        "properties": {
                          "date_from": {
                            "type": [
                              "string",
                              "number"
                            ],
                            "description": "Date string in ISO 8601 format or unix timestamp. Only shipments created at >= this date will be in the report.",
                            "example": "2020-01-01T00:00:00+02:00"
                          },
                          "date_to": {
                            "type": [
                              "string",
                              "number"
                            ],
                            "description": "Date string in ISO 8601 format or unix timestamp. Only shipments created at <= this date will be in the response.",
                            "example": "1585691999"
                          }
                        }
                      },
                      "register_at": {
                        "type": "object",
                        "description": "Either the `created_at` filter or the `register_at` filter is required for creating a report.",
                        "required": [
                          "date_from",
                          "date_to"
                        ],
                        "properties": {
                          "date_from": {
                            "type": [
                              "string",
                              "number"
                            ],
                            "description": "Date string in ISO 8601 format or unix timestamp. Only shipments registered at >= this date will be in the report.",
                            "example": "2020-01-01T00:00:00+02:00"
                          },
                          "date_to": {
                            "type": [
                              "string",
                              "number"
                            ],
                            "description": "Date string in ISO 8601 format or unix timestamp. Only shipments registered at <= this date will be in the response.",
                            "example": "1585691999"
                          }
                        }
                      },
                      "search": {
                        "type": "string",
                        "description": "String of characters you want to look for in shipment attributes. Available fields to look in are:<ul><li>`date_created` (YYYY-MM-DD). <strong>Deprecated</strong> use `filter[created_at][date_from]` or `filter[created_at][date_to]` instead.</li><li>`description`</li><li>`customer_reference`</li><li>`recipient_address`</li><li>`tracking_code`</li></ul>",
                        "example": "some search string"
                      },
                      "channel": {
                        "type": "string",
                        "description": "String of characters you want to look for in shipment channels.",
                        "example": "some channel string"
                      },
                      "description": {
                        "type": "string",
                        "description": "Filter shipments by their description attribute. This is a strict search, meaning that only if the search string matches the `description` attribute of a shipment completely, will the shipment be included.",
                        "example": "Detective kit"
                      },
                      "customer_reference": {
                        "type": "string",
                        "description": "Filter shipments by their customer reference attribute. This is a strict search, meaning that only if the search string matches the `customer_reference` attribute of a shipment completely, will the shipment be included.",
                        "example": "Order nr #1254232"
                      },
                      "shops": {
                        "type": "array",
                        "description": "Array of shop IDs to filter included shipments by.",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
                          "example": "35eddf50-1d84-47a3-8479-6bfda729cd99"
                        }
                      },
                      "organizations": {
                        "type": "array",
                        "description": "Array of organization IDs to filter included shipments by.",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
                          "example": "9cdf86e8-333f-4ed9-bb31-4935c780c947"
                        }
                      },
                      "brokers": {
                        "type": "array",
                        "description": "Array of broker IDs to filter included shipments by.",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
                          "example": "a294ee55-bc94-4890-b734-afd56c158f95"
                        }
                      },
                      "carriers": {
                        "type": "array",
                        "description": "Array of carrier IDs to filter included shipments by.",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
                          "example": "be7f6752-34e0-49a1-a832-bcc209450ea9"
                        }
                      },
                      "current_status_code": {
                        "type": "array",
                        "description": "Array of status codes to filter by. Only shipments with the a current status that corresponds with one of the status codes will be in the report.",
                        "items": {
                          "type": "string",
                          "example": "shipment-delivered"
                        }
                      },
                      "service_code": {
                        "type": "array",
                        "description": "Array of service codes to filter by. Only shipments with a service that corresponds with one of the service codes will be in the report.",
                        "items": {
                          "type": "string",
                          "example": "dpd-next-day"
                        }
                      },
                      "recipient_address": {
                        "type": "object",
                        "required": [
                          "country_code"
                        ],
                        "properties": {
                          "country_code": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/CountryCode"
                            }
                          }
                        }
                      },
                      "sender_address": {
                        "type": "object",
                        "required": [
                          "country_code"
                        ],
                        "properties": {
                          "country_code": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/CountryCode"
                            }
                          }
                        }
                      }
                    }
                  },
                  "created_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "readOnly": true,
                "required": [
                  "status"
                ],
                "additionalProperties": false,
                "properties": {
                  "file": {
                    "$ref": "#/components/schemas/FileRelationship"
                  },
                  "status": {
                    "$ref": "#/components/schemas/StatusRelationship"
                  }
                }
              }
            }
          }
        ]
      },
      "ReportIncludes": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/FileResponse"
            },
            {
              "$ref": "#/components/schemas/StatusResponse"
            }
          ]
        }
      },
      "ReportResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^reports$",
            "example": "reports"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "74a4a60c-cbc7-4552-9df6-b29953fd9028"
          }
        }
      },
      "ReportResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Report"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "name",
                  "filters",
                  "created_at"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/reports/74a4a60c-cbc7-4552-9df6-b29953fd9028"
                  }
                }
              }
            }
          }
        ]
      },
      "ReturnReportFilters": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "object",
            "description": "Either the `created_at`, `approved_at` or the `paid_at` filter is required for creating a report.",
            "required": [
              "date_from",
              "date_to"
            ],
            "properties": {
              "date_from": {
                "type": [
                  "string",
                  "integer"
                ],
                "description": "Date string in ISO 8601 format or unix timestamp. Only returns paid at >= this date will be in the report.",
                "example": "2024-02-01T00:00:00+02:00"
              },
              "date_to": {
                "type": [
                  "string",
                  "integer"
                ],
                "description": "Date string in ISO 8601 format or unix timestamp. Only returns paid at <= this date will be in the response.",
                "example": "1709333999"
              }
            }
          },
          "approved_at": {
            "type": "object",
            "description": "Either the `created_at`, `approved_at` filter or the `paid_at` filter is required for creating a report.",
            "required": [
              "date_from",
              "date_to"
            ],
            "properties": {
              "date_from": {
                "type": [
                  "string",
                  "integer"
                ],
                "description": "Date string in ISO 8601 format or unix timestamp. Only returns paid at >= this date will be in the report.",
                "example": "2024-02-01T00:00:00+02:00"
              },
              "date_to": {
                "type": [
                  "string",
                  "integer"
                ],
                "description": "Date string in ISO 8601 format or unix timestamp. Only returns paid at <= this date will be in the response.",
                "example": "1709333999"
              }
            }
          },
          "order_reference": {
            "type": "string",
            "description": "Filter entries by order reference. This is a strict search, meaning that only if the search string matches the `order_reference` attribute of a return completely, will the entries be included.",
            "example": "MP000000012"
          },
          "item_external_reference": {
            "type": "string",
            "description": "Filter entries by return order item's reference code in the origin marketplace.",
            "example": "#123456"
          },
          "item_sku": {
            "type": "string",
            "description": "Filter entries by return order item's SKU (exact match).",
            "example": "SKU123"
          },
          "shops": {
            "type": "array",
            "description": "Array of shop IDs to filter included returns by.",
            "items": {
              "$ref": "#/components/schemas/Uuid"
            },
            "example": [
              "35eddf50-1d84-47a3-8479-6bfda729cd99",
              "a294ee55-bc94-4890-b734-afd56c158f95"
            ]
          },
          "organizations": {
            "type": "array",
            "description": "Array of organization IDs to filter included returns by.",
            "items": {
              "$ref": "#/components/schemas/Uuid"
            },
            "example": [
              "35eddf50-1d84-47a3-8479-6bfda729cd99",
              "a294ee55-bc94-4890-b734-afd56c158f95"
            ]
          },
          "brokers": {
            "type": "array",
            "description": "Array of broker IDs to filter included returns by.",
            "items": {
              "$ref": "#/components/schemas/Uuid"
            },
            "example": [
              "35eddf50-1d84-47a3-8479-6bfda729cd99",
              "a294ee55-bc94-4890-b734-afd56c158f95"
            ]
          },
          "outbound_shipment_identifier": {
            "type": "string",
            "description": "Filter entries by return order's outbound shipment tracking code.",
            "example": "#123456"
          },
          "preferred_outcome": {
            "type": "string",
            "enum": [
              "refund",
              "exchange"
            ],
            "description": "Filter entries by return order item's preferred outcome.",
            "example": "exchange"
          },
          "return_methods": {
            "type": "array",
            "description": "Array of return method IDs to filter included returns by.",
            "items": {
              "$ref": "#/components/schemas/Uuid"
            },
            "example": [
              "a294ee55-bc94-4890-b734-afd56c158f95",
              "c8ac2fc8-2e75-4614-9e56-aa270d4338b0"
            ]
          },
          "paid_at": {
            "type": "object",
            "description": "Either the `created_at`, `approved_at` filter or the `paid_at` filter is required for creating a report.",
            "required": [
              "date_from",
              "date_to"
            ],
            "properties": {
              "date_from": {
                "type": [
                  "string",
                  "integer"
                ],
                "description": "Date string in ISO 8601 format or unix timestamp. Only returns paid at >= this date will be in the report.",
                "example": "2024-02-01T00:00:00+02:00"
              },
              "date_to": {
                "type": [
                  "string",
                  "integer"
                ],
                "description": "Date string in ISO 8601 format or unix timestamp. Only returns paid at <= this date will be in the response.",
                "example": "1709333999"
              }
            }
          },
          "return_reasons": {
            "type": "array",
            "description": "Array of return reason codes to filter by. Only entries that correspond with one of the return reason codes will be in the report.",
            "items": {
              "type": "string"
            },
            "example": [
              "product-damaged",
              "product-is-defect"
            ]
          },
          "return_statuses": {
            "type": "array",
            "description": "Array of return status codes to filter by. Only entries that correspond with one of the return status codes will be in the report.",
            "items": {
              "type": "string"
            },
            "example": [
              "return-pending",
              "return-approved"
            ]
          },
          "consumer_country_code": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CountryCode"
                },
                {
                  "description": "Filter entries by return's consumer country code."
                }
              ]
            }
          },
          "consumer_email": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Email"
              },
              {
                "description": "Filter entries by return's consumer email address (exact match)."
              }
            ]
          }
        }
      },
      "ReturnReport": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReturnReportResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "02/2024 returns"
                  },
                  "filters": {
                    "$ref": "#/components/schemas/ReturnReportFilters"
                  }
                }
              }
            }
          }
        ]
      },
      "ReturnReportIncludes": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/FileResponse"
            },
            {
              "$ref": "#/components/schemas/StatusResponse"
            }
          ]
        }
      },
      "ReturnReportResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^return-reports$",
            "example": "return-reports"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "ac07afbf-15ae-4a83-b3e8-e6dbde8d70f8"
          }
        }
      },
      "ReturnReportResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReturnReport"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "name",
                  "filters",
                  "created_at",
                  "progress"
                ],
                "properties": {
                  "progress": {
                    "type": "object",
                    "required": [
                      "total",
                      "processed"
                    ],
                    "properties": {
                      "total": {
                        "type": "integer",
                        "description": "Total number of entries in the report."
                      },
                      "processed": {
                        "type": "integer",
                        "description": "Number of entries processed in the report."
                      }
                    }
                  },
                  "created_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  },
                  "updated_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "readOnly": true,
                "required": [
                  "status"
                ],
                "additionalProperties": false,
                "properties": {
                  "user": {
                    "$ref": "#/components/schemas/UserRelationship"
                  },
                  "file": {
                    "$ref": "#/components/schemas/FileRelationship"
                  },
                  "status": {
                    "$ref": "#/components/schemas/StatusRelationship"
                  }
                }
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/returns/v1/reports/74a4a60c-cbc7-4552-9df6-b29953fd9028"
                  }
                }
              }
            }
          }
        ]
      },
      "Return": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReturnResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "created_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  },
                  "order_reference": {
                    "type": "string",
                    "example": "#0001-my-order-reference"
                  },
                  "consumer_address": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/BaseAddress"
                      },
                      {
                        "required": [
                          "first_name",
                          "last_name",
                          "street_1",
                          "city",
                          "country_code",
                          "email"
                        ]
                      }
                    ]
                  },
                  "locale": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/LocaleEnum"
                      },
                      {
                        "example": "nl-NL",
                        "description": "The language that is used for emails for this return. Defaults to the shop's locale."
                      }
                    ]
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "return_method": {
                    "$ref": "#/components/schemas/ReturnMethodRelationship"
                  },
                  "shop": {
                    "$ref": "#/components/schemas/ShopRelationship"
                  }
                }
              }
            }
          }
        ]
      },
      "ReturnIncludes": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/ReturnMethodResponse"
            },
            {
              "$ref": "#/components/schemas/ShipmentResponse"
            },
            {
              "$ref": "#/components/schemas/ShopResponse"
            },
            {
              "$ref": "#/components/schemas/StatusResponse"
            }
          ]
        }
      },
      "GetReturnItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "quantity",
          "description",
          "item_price"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "external-item-reference-001"
          },
          "sku": {
            "type": [
              "string",
              "null"
            ],
            "example": "123456789"
          },
          "name": {
            "type": "string",
            "example": "OnePlus X"
          },
          "description": {
            "type": "string",
            "example": "Latest OnePlus X model for making the best phone calls imaginable!"
          },
          "image_url": {
            "type": [
              "string",
              "null"
            ],
            "example": "https://myparcel.com/product.png",
            "description": "A link to an image of the item."
          },
          "quantity": {
            "type": "integer",
            "example": 2
          },
          "item_price": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Price"
              },
              {
                "description": "Price of a single item. Should be multiplied by quantity to get total price."
              }
            ]
          },
          "item_weight": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Weight"
              },
              {
                "description": "Weight of a single item. Should be multiplied by quantity to get total weight."
              }
            ]
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemFeature"
            },
            "description": "List of features of this item, such as the color or size."
          },
          "reason": {
            "type": "object",
            "description": "Reason for returning the item. Required if the shop has any <a href=\"/#tag/ReturnReasons/paths/~1returns~1v1~1shops~1%7Bshop_id%7D~1reasons/post\">return reasons set up</a>.",
            "required": [
              "code",
              "description"
            ],
            "properties": {
              "attachments": {
                "items": {
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "A URL to the location where the image is saved",
                      "example": "https://cdn.myparcel.com/images/my-broken-return-item.jpg"
                    }
                  }
                }
              },
              "code": {
                "type": "string",
                "example": "item-damaged",
                "description": "A code that identifies the reason for the return of this item. See the <a href=\"/#tag/ReturnReasons/paths/~1returns~1v1~1reasons/get\">return-reason</a> `code` attribute."
              },
              "comment": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Additional information regarding the reason for the return."
              },
              "description": {
                "oneOf": [
                  {
                    "type": "string",
                    "description": "A localized return reason description",
                    "example": "The item isn't what I expected it to be."
                  },
                  {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/LocalizedField"
                      },
                      {
                        "example": {
                          "en-GB": "The item isn't what I expected it to be."
                        }
                      }
                    ]
                  }
                ],
                "description": "The value of the ``Accept-Language`` header determines the language in which the description is returned. If the ``Accept-Language`` header is missing, we default to ``en-GB``. If the User has the ``return_reasons.manage`` scope and the ``Accept-Language`` header is set to ``*``, all descriptions will be returned in a key/value object."
              },
              "questions": {
                "type": "array",
                "description": "The questions and answers related to this reason.",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ItemReasonQuestion"
                    },
                    {
                      "required": [
                        "description"
                      ],
                      "properties": {
                        "description": {
                          "oneOf": [
                            {
                              "type": "string",
                              "description": "A localized return question description",
                              "example": "What size would you like in return?"
                            },
                            {
                              "allOf": [
                                {
                                  "$ref": "#/components/schemas/LocalizedField"
                                },
                                {
                                  "example": {
                                    "en-GB": "What size would you like in return?"
                                  }
                                }
                              ]
                            }
                          ],
                          "description": "The value of the ``Accept-Language`` header determines the language in which the description is returned. If the ``Accept-Language`` header is missing, we default to ``en-GB``. If the User has the ``return_questions.manage`` scope and the ``Accept-Language`` header is set to ``*``, all descriptions will be returned in a key/value object."
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "preferred_outcome": {
            "type": "string",
            "default": "refund",
            "enum": [
              "refund",
              "exchange"
            ]
          }
        }
      },
      "PostReturnItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "quantity"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "external-item-reference-001"
          },
          "quantity": {
            "type": "integer",
            "example": 2
          },
          "reason": {
            "type": "object",
            "description": "Reason for returning the item. Required if the shop has any <a href=\"/#tag/ReturnReasons/paths/~1returns~1v1~1shops~1%7Bshop_id%7D~1reasons/post\">return reasons set up</a>.",
            "required": [
              "code"
            ],
            "properties": {
              "attachments": {
                "type": "array",
                "description": "List of objects containing base64 encoded image data and extension",
                "maxItems": 5,
                "items": {
                  "type": "object",
                  "required": [
                    "data",
                    "extension"
                  ],
                  "properties": {
                    "data": {
                      "type": "string",
                      "description": "Base64 encoded contents of the uploaded image (jpg, png)."
                    },
                    "extension": {
                      "type": "string",
                      "enum": [
                        "jpg",
                        "jpeg",
                        "png"
                      ],
                      "example": "jpg"
                    }
                  }
                }
              },
              "code": {
                "type": "string",
                "example": "item-damaged",
                "description": "A code that identifies the reason for the return of this item. See the <a href=\"/#tag/ReturnReasons/paths/~1returns~1v1~1reasons/get\">return-reason</a> `code` attribute."
              },
              "comment": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Additional information regarding the reason for the return."
              },
              "questions": {
                "type": "array",
                "description": "The questions and answers related to this reason.",
                "items": {
                  "$ref": "#/components/schemas/ItemReasonQuestion"
                }
              }
            }
          },
          "preferred_outcome": {
            "type": "string",
            "default": "refund",
            "enum": [
              "refund",
              "exchange"
            ]
          }
        }
      },
      "ReturnResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^returns$",
            "example": "returns"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "7fac478b-b3c4-46e6-b29e-a31599d27a7a"
          }
        }
      },
      "ReturnRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Return"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PostReturnItem"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "ReturnResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Return"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships",
              "links",
              "meta"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "order_reference",
                  "consumer_address",
                  "has_preferred_outcome_refund",
                  "has_preferred_outcome_exchange",
                  "items",
                  "created_at"
                ],
                "properties": {
                  "has_preferred_outcome_refund": {
                    "type": "boolean",
                    "example": true
                  },
                  "has_preferred_outcome_exchange": {
                    "type": "boolean",
                    "example": false
                  },
                  "items": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/GetReturnItem"
                        },
                        {
                          "required": [
                            "preferred_outcome"
                          ]
                        }
                      ]
                    }
                  },
                  "shipment_registrations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "invocation",
                        "status",
                        "created_at"
                      ],
                      "properties": {
                        "invocation": {
                          "type": "string",
                          "format": "enum",
                          "enum": [
                            "manual",
                            "automatic"
                          ],
                          "description": "The way the shipment registration was invoked",
                          "example": "automatic"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "pending",
                            "success",
                            "failed"
                          ],
                          "example": "success"
                        },
                        "error": {
                          "type": "string",
                          "example": "Carrier API failure",
                          "description": "Shipment registration failure error message (when applicable)"
                        },
                        "created_at": {
                          "$ref": "#/components/schemas/Timestamp"
                        }
                      }
                    }
                  },
                  "registration_retry_after": {
                    "$ref": "#/components/schemas/Timestamp"
                  },
                  "payment": {
                    "type": "object",
                    "required": [
                      "created_at",
                      "amount",
                      "currency",
                      "checkout_url"
                    ],
                    "properties": {
                      "created_at": {
                        "$ref": "#/components/schemas/Timestamp"
                      },
                      "paid_at": {
                        "$ref": "#/components/schemas/Timestamp"
                      },
                      "amount": {
                        "$ref": "#/components/schemas/PriceAmount"
                      },
                      "currency": {
                        "$ref": "#/components/schemas/Currency"
                      },
                      "external_payment_id": {
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
                        "description": "The UUID of the Payment in Mollie"
                      },
                      "checkout_url": {
                        "type": "string",
                        "format": "url",
                        "description": "The URL to the payment checkout page",
                        "example": "https://return.myparcel.com/My+Shop/11cc569c-4c4f-4a79-a52e-e4674b57b38e/payment/8ddfb83f-d600-49c7-b10e-66dd4dc7686a?hmac=0c504364df9d812f40b577c340bd66302a0062a52329d87372f0a32a73ab5658"
                      },
                      "failures": {
                        "type": "array",
                        "description": "A list of payment failures",
                        "items": {
                          "type": "object",
                          "required": [
                            "created_at",
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "enum": [
                                "failed",
                                "cancelled",
                                "expired"
                              ],
                              "example": "failed"
                            },
                            "description": {
                              "type": "string",
                              "description": "The reason why the payment failed",
                              "example": "Payment failed due to insufficient funds"
                            },
                            "created_at": {
                              "$ref": "#/components/schemas/Timestamp"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "relationships": {
                "required": [
                  "return_method",
                  "shop",
                  "status"
                ],
                "properties": {
                  "status": {
                    "$ref": "#/components/schemas/StatusRelationship"
                  },
                  "shipment": {
                    "$ref": "#/components/schemas/ShipmentRelationship"
                  }
                }
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/returns/v1/returns/8ddfb83f-d600-49c7-b10e-66dd4dc7686a"
                  }
                }
              },
              "meta": {
                "readOnly": true,
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "package_type"
                ],
                "properties": {
                  "outbound_shipment_delivered_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  },
                  "package_type": {
                    "$ref": "#/components/schemas/PackageType"
                  }
                }
              }
            }
          }
        ]
      },
      "ReturnSimpleResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Return"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships",
              "links",
              "meta"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "order_reference",
                  "consumer_address",
                  "has_preferred_outcome_refund",
                  "has_preferred_outcome_exchange",
                  "created_at"
                ],
                "properties": {
                  "has_preferred_outcome_refund": {
                    "type": "boolean",
                    "example": true
                  },
                  "has_preferred_outcome_exchange": {
                    "type": "boolean",
                    "example": false
                  }
                }
              },
              "relationships": {
                "required": [
                  "return_method",
                  "shop",
                  "status"
                ],
                "properties": {
                  "status": {
                    "$ref": "#/components/schemas/StatusRelationship"
                  },
                  "shipment": {
                    "$ref": "#/components/schemas/ShipmentRelationship"
                  }
                }
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/returns/v1/returns/8ddfb83f-d600-49c7-b10e-66dd4dc7686a"
                  }
                }
              },
              "meta": {
                "readOnly": true,
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "package_type"
                ],
                "properties": {
                  "shipment_tracking_code": {
                    "$ref": "#/components/schemas/TrackingCode"
                  },
                  "shipment_status_code": {
                    "type": "string",
                    "enum": [
                      "shipment-at-parcel-shop",
                      "shipment-at-sorting",
                      "shipment-concept",
                      "shipment-created-without-label",
                      "shipment-created-without-tracking",
                      "shipment-delivered",
                      "shipment-failed",
                      "shipment-on-the-way-to-hub",
                      "shipment-processing",
                      "shipment-received-by-carrier",
                      "shipment-registered",
                      "shipment-registration-failed",
                      "shipment-returned-to-sender",
                      "shipment-returning-to-sender",
                      "shipment-voided",
                      "shipment-with-courier"
                    ],
                    "description": "Status code of the shipment",
                    "example": "shipment-registered"
                  },
                  "shipment_status_level": {
                    "$ref": "#/components/schemas/StatusLevel"
                  },
                  "shipment_status_name": {
                    "type": "string",
                    "example": "Delivered"
                  },
                  "outbound_shipment_delivered_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  },
                  "package_type": {
                    "$ref": "#/components/schemas/PackageType"
                  }
                }
              }
            }
          }
        ]
      },
      "ReturnMethod": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReturnMethodResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "return_type": {
                    "type": "string",
                    "enum": [
                      "self-shipment",
                      "store-drop-off",
                      "shipment"
                    ]
                  },
                  "default_weight": {
                    "$ref": "#/components/schemas/Weight"
                  },
                  "name": {
                    "type": "string",
                    "description": "Required if the return_type attribute is `shipment`."
                  },
                  "country_codes": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "NL"
                    }
                  },
                  "created_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  }
                }
              },
              "meta": {
                "$ref": "#/components/schemas/ReturnMethodMeta"
              },
              "relationships": {
                "type": "object",
                "required": [
                  "shop"
                ],
                "additionalProperties": false,
                "properties": {
                  "contract": {
                    "$ref": "#/components/schemas/ContractRelationship"
                  },
                  "recovery_contract": {
                    "$ref": "#/components/schemas/ContractRelationship"
                  },
                  "recovery_service": {
                    "$ref": "#/components/schemas/ServiceRelationship"
                  },
                  "service": {
                    "$ref": "#/components/schemas/ServiceRelationship"
                  },
                  "service_options": {
                    "$ref": "#/components/schemas/ServiceOptionsRelationship"
                  },
                  "shop": {
                    "$ref": "#/components/schemas/ShopRelationship"
                  }
                }
              }
            }
          }
        ]
      },
      "ReturnMethodIncludes": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/ContractResponse"
            },
            {
              "$ref": "#/components/schemas/ServiceResponse"
            },
            {
              "$ref": "#/components/schemas/ShopResponse"
            }
          ]
        }
      },
      "ReturnMethodMeta": {
        "type": "object",
        "properties": {
          "price": {
            "$ref": "#/components/schemas/Price"
          }
        }
      },
      "ReturnMethodResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^return-methods$",
            "example": "return-methods"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "8ddfb83f-d600-49c7-b10e-66dd4dc7686a"
          }
        }
      },
      "ReturnMethodResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReturnMethod"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "return_type",
                  "created_at"
                ],
                "properties": {
                  "country_codes": {
                    "description": "Country codes to which the return method applies. Codes are in ISO 3166-1 alpha-2 format."
                  }
                }
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/returns/v1/return-methods/8ddfb83f-d600-49c7-b10e-66dd4dc7686a"
                  }
                }
              }
            }
          }
        ]
      },
      "ReturnMethodRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReturnMethodResource"
              },
              {
                "required": [
                  "id"
                ]
              }
            ]
          },
          "links": {
            "readOnly": true,
            "type": "object",
            "required": [
              "related"
            ],
            "additionalProperties": false,
            "properties": {
              "related": {
                "type": "string",
                "format": "url",
                "example": "https://api.myparcel.com/returns/v1/return-methods/6e384059-1784-4954-b993-b3fe3260b02f"
              }
            }
          }
        }
      },
      "CreateReturnReason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReturnReasonResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "code": {
                    "type": "string",
                    "example": "wrong-item",
                    "description": "A unique code for the return reason."
                  },
                  "description": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/LocalizedField"
                      },
                      {
                        "example": {
                          "en-GB": "The item isn't what I expected it to be."
                        }
                      }
                    ]
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "shoes"
                    }
                  },
                  "accepts_attachments": {
                    "type": "boolean",
                    "example": true
                  },
                  "requires_attachments": {
                    "type": "boolean",
                    "example": false
                  },
                  "accepts_comment": {
                    "type": "boolean",
                    "example": true
                  },
                  "requires_comment": {
                    "type": "boolean",
                    "example": false
                  }
                }
              }
            }
          }
        ]
      },
      "UpdateReturnReason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReturnReasonResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/LocalizedField"
                      },
                      {
                        "example": {
                          "en-GB": "The item isn't what I expected it to be."
                        }
                      }
                    ]
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "shoes"
                    }
                  },
                  "accepts_attachments": {
                    "type": "boolean",
                    "example": true
                  },
                  "requires_attachments": {
                    "type": "boolean",
                    "example": false
                  },
                  "accepts_comment": {
                    "type": "boolean",
                    "example": true
                  },
                  "requires_comment": {
                    "type": "boolean",
                    "example": false
                  }
                }
              }
            }
          }
        ]
      },
      "ReturnReason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReturnReasonResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "code": {
                    "type": "string",
                    "example": "wrong-item",
                    "description": "A unique code for the return reason."
                  },
                  "description": {
                    "oneOf": [
                      {
                        "type": "string",
                        "description": "A localized return reason description",
                        "example": "The item isn't what I expected it to be."
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/LocalizedField"
                          },
                          {
                            "example": {
                              "en-GB": "The item isn't what I expected it to be."
                            }
                          }
                        ]
                      }
                    ],
                    "description": "The value of the ``Accept-Language`` header determines the language in which the description is returned. If the ``Accept-Language`` header is missing, we default to ``en-GB``. If the User has the ``return_reasons.manage`` scope and the ``Accept-Language`` header is set to ``*``, all descriptions will be returned in a key/value object."
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "shoes"
                    }
                  },
                  "accepts_attachments": {
                    "type": "boolean",
                    "example": true
                  },
                  "requires_attachments": {
                    "type": "boolean",
                    "example": false
                  },
                  "accepts_comment": {
                    "type": "boolean",
                    "example": true
                  },
                  "requires_comment": {
                    "type": "boolean",
                    "example": false
                  }
                }
              }
            }
          }
        ]
      },
      "ReturnReasonResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^return-reasons$",
            "example": "return-reasons"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "090b1a04-8f22-440e-930c-e72e6ce36b56"
          }
        }
      },
      "ReturnReasonResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReturnReason"
          },
          {
            "required": [
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "code",
                  "description",
                  "accepts_attachments",
                  "requires_attachments",
                  "accepts_comment",
                  "requires_comment"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/returns/v1/reasons/090b1a04-8f22-440e-930c-e72e6ce36b56"
                  }
                }
              }
            }
          }
        ]
      },
      "ReturnReasonRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReturnReasonResource"
              },
              {
                "required": [
                  "id"
                ]
              }
            ]
          },
          "links": {
            "readOnly": true,
            "type": "object",
            "required": [
              "related"
            ],
            "additionalProperties": false,
            "properties": {
              "related": {
                "type": "string",
                "format": "url",
                "example": "https://api.myparcel.com/returns/v1/reasons/090b1a04-8f22-440e-930c-e72e6ce36b56"
              }
            }
          }
        }
      },
      "ShopReturnReason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReturnReasonResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "code": {
                    "type": "string",
                    "example": "wrong-item",
                    "description": "A unique code for the return reason."
                  },
                  "description": {
                    "type": "string",
                    "example": "The item isn't what I expected it to be."
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "shoes"
                    }
                  },
                  "accepts_attachments": {
                    "type": "boolean",
                    "example": true
                  },
                  "requires_attachments": {
                    "type": "boolean",
                    "example": false
                  },
                  "accepts_comment": {
                    "type": "boolean",
                    "example": true
                  },
                  "requires_comment": {
                    "type": "boolean",
                    "example": false
                  },
                  "questions": {
                    "type": "array",
                    "items": {
                      "required": [
                        "code",
                        "is_required"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "is_required": {
                          "type": "boolean"
                        }
                      },
                      "example": [
                        {
                          "code": "what-size",
                          "is_required": true
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "ShopReturnReasonResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ShopReturnReason"
          },
          {
            "required": [
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "code",
                  "description",
                  "accepts_attachments",
                  "requires_attachments",
                  "accepts_comment",
                  "requires_comment"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/returns/v1/reasons/090b1a04-8f22-440e-930c-e72e6ce36b56"
                  }
                }
              }
            }
          }
        ]
      },
      "ReturnAnalytics": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "unit_type",
          "labels",
          "datasets"
        ],
        "properties": {
          "unit_type": {
            "type": "string",
            "example": "amount",
            "enum": [
              "amount"
            ]
          },
          "labels": {
            "type": "array",
            "description": "List of all chart labels on the X axis",
            "items": {
              "type": "string",
              "example": "2024-01-03"
            }
          },
          "datasets": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "label",
                "data"
              ],
              "properties": {
                "label": {
                  "type": "string",
                  "example": "approved"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "example": 102
                  }
                }
              }
            }
          }
        }
      },
      "ReturnQuestion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReturnQuestionResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "code": {
                    "type": "string",
                    "example": "what-size",
                    "description": "What size would you like in return?"
                  },
                  "description": {
                    "oneOf": [
                      {
                        "type": "string",
                        "description": "A localized return question description",
                        "example": "What size would you like in return?"
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/LocalizedField"
                          },
                          {
                            "example": {
                              "en-GB": "What size would you like in return?"
                            }
                          }
                        ]
                      }
                    ],
                    "description": "The value of the ``Accept-Language`` header determines the language in which the description is returned. If the ``Accept-Language`` header is missing, we default to ``en-GB``. If the User has the ``return_questions.manage`` scope and the ``Accept-Language`` header is set to ``*``, all descriptions will be returned in a key/value object."
                  }
                }
              }
            }
          }
        ]
      },
      "ReturnQuestionResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^return-questions$",
            "example": "return-questions"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "ad7acb4d-a980-40d4-acda-c8b2eddc4426"
          }
        }
      },
      "ReturnQuestionResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReturnQuestion"
          },
          {
            "required": [
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "code",
                  "description"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/returns/v1/questions/ad7acb4d-a980-40d4-acda-c8b2eddc4426"
                  }
                }
              }
            }
          }
        ]
      },
      "CreateReturnQuestionRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReturnQuestionResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "code": {
                    "type": "string",
                    "example": "wrong-item",
                    "description": "A unique code for the return question."
                  },
                  "description": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/LocalizedField"
                      },
                      {
                        "example": {
                          "en-GB": "What size would you like in return?"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        ]
      },
      "PatchReturnQuestionRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReturnQuestionResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/LocalizedField"
                      },
                      {
                        "example": {
                          "en-GB": "What size would you like in return?"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        ]
      },
      "Scope": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ScopeResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "slug": {
                    "type": "string",
                    "example": "broker.member"
                  },
                  "title": {
                    "type": "string",
                    "example": "Member of broker"
                  },
                  "description": {
                    "type": "string",
                    "example": "Read broker details and create organizations for that broker."
                  }
                }
              }
            }
          }
        ]
      },
      "ScopeResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^scopes$",
            "example": "scopes"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "2103ad2b-815e-48d3-bb77-cf8482666dd6"
          }
        }
      },
      "ScopeResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Scope"
          },
          {
            "required": [
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "slug",
                  "title",
                  "description"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/scopes/2103ad2b-815e-48d3-bb77-cf8482666dd6"
                  }
                }
              }
            }
          }
        ]
      },
      "ScopesRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ScopeResource"
                },
                {
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "meta": {
                      "type": "object",
                      "properties": {
                        "resources": {
                          "type": "array",
                          "items": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/EnterpriseResource"
                              },
                              {
                                "$ref": "#/components/schemas/BrokerResource"
                              },
                              {
                                "$ref": "#/components/schemas/OrganizationResource"
                              },
                              {
                                "$ref": "#/components/schemas/ShopResource"
                              }
                            ]
                          },
                          "description": "An array of resources which this scope is given on."
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "Service": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ServiceResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Parcel to Parcelshop"
                  },
                  "code": {
                    "type": "string",
                    "example": "carrier-parcel-next-day",
                    "description": "Slug of the service"
                  },
                  "information": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "example": [
                      {
                        "type": "notice",
                        "body": "Volumetric weight may be applied."
                      }
                    ],
                    "description": "Additional information about the service."
                  },
                  "package_type": {
                    "$ref": "#/components/schemas/PackageType"
                  },
                  "delivery_days": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Monday",
                        "Tuesday",
                        "Wednesday",
                        "Thursday",
                        "Friday",
                        "Saturday",
                        "Sunday"
                      ]
                    },
                    "example": [
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday"
                    ],
                    "description": "Days on which the carrier delivers parcels."
                  },
                  "transit_time": {
                    "type": "object",
                    "description": "The number of days for transit. Use 0 for same day delivery.",
                    "additionalProperties": false,
                    "properties": {
                      "min": {
                        "type": "integer",
                        "example": 1
                      },
                      "max": {
                        "type": "integer",
                        "example": 3
                      }
                    }
                  },
                  "handover_method": {
                    "type": "string",
                    "enum": [
                      "drop-off",
                      "collection"
                    ],
                    "description": "How the parcel can enter the network of the carrier."
                  },
                  "delivery_method": {
                    "type": "string",
                    "enum": [
                      "delivery",
                      "pick-up"
                    ],
                    "description": "Where the parcel will be delivered to the customer. In case of `pick-up`, a carrier location of type pick-up must be sent with the shipment request."
                  },
                  "regions_from": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ServiceRegion"
                    }
                  },
                  "regions_to": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ServiceRegion"
                    }
                  },
                  "uses_volumetric_weight": {
                    "type": "boolean",
                    "example": true,
                    "description": "Whether the volumetric weight of a shipment is taken into account when determining the price for a service."
                  },
                  "volumetric_weight_divisor": {
                    "type": "integer",
                    "example": 4000,
                    "description": "The volumetric weight divisor is used to calculate the volumetric weight of a shipment. Multiplying the length (mm) x width (mm) x height (mm) of a shipment and dividing it by this number will result in the volumetric weight (g). See <a href=\"https://docs.myparcel.com/api/resources/shipments/physical-properties/volumetric-weight.html\"/>the documentation</a> for more information."
                  },
                  "strict_consolidation": {
                    "type": "boolean",
                    "example": true,
                    "description": "Indicates whether the service is only used for consolidation purposes."
                  },
                  "is_label_in_the_box": {
                    "type": "boolean",
                    "example": false,
                    "default": false,
                    "description": "Indicates whether the service uses an implementation of label in the box, where the return label of a shipment is provided in the shipping box."
                  },
                  "is_shipping_and_return": {
                    "type": "boolean",
                    "example": false,
                    "default": false,
                    "description": "Indicates whether the service uses an implementation of shipping and return, where the shipping label can be reused for returns."
                  }
                }
              },
              "relationships": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "carrier": {
                    "$ref": "#/components/schemas/CarrierRelationship"
                  },
                  "region_from": {
                    "$ref": "#/components/schemas/RegionRelationship"
                  },
                  "region_to": {
                    "$ref": "#/components/schemas/RegionRelationship"
                  },
                  "service_options": {
                    "$ref": "#/components/schemas/ServiceOptionsRelationship"
                  }
                }
              }
            }
          }
        ]
      },
      "ServiceIncludes": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/CarrierResponse"
            },
            {
              "$ref": "#/components/schemas/ServiceOptionResponse"
            }
          ]
        }
      },
      "ServiceOption": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ServiceOptionResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Sunday Delivery"
                  },
                  "category": {
                    "type": "string",
                    "enum": [
                      "proof-of-delivery",
                      "handover-method",
                      "delivery-window"
                    ],
                    "example": "delivery-window"
                  },
                  "code": {
                    "type": "string",
                    "example": "delivery-window:sunday"
                  }
                }
              }
            }
          }
        ]
      },
      "ServiceOptionResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^service-options$",
            "example": "service-options"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "4c675b1a-516c-4410-abff-d237fd45bcd0"
          }
        }
      },
      "ServiceOptionResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ServiceOption"
          },
          {
            "required": [
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "name",
                  "code",
                  "category"
                ]
              },
              "meta": {
                "type": "object",
                "required": [
                  "values_format"
                ],
                "properties": {
                  "values_format": {
                    "type": "object",
                    "example": {
                      "required": [
                        "amount",
                        "currency"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "amount": {
                          "type": "integer"
                        },
                        "currency": {
                          "type": "string"
                        }
                      }
                    },
                    "description": "JSON Schema specification of the optional `values` property in the meta of this service option, when posted as a relationship of a shipment. See `data.relationships.service_options.data.*.meta` in POST `/shipments` request body."
                  }
                }
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/service-options/4c675b1a-516c-4410-abff-d237fd45bcd0"
                  }
                }
              }
            }
          }
        ]
      },
      "ServiceOptionsRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ServiceOptionResource"
                },
                {
                  "required": [
                    "id"
                  ]
                }
              ]
            }
          }
        }
      },
      "ServiceResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^services$",
            "example": "services"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "175a235f-aff5-4e44-87b5-3657b75c1deb"
          }
        }
      },
      "ServiceResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Service"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "name",
                  "code",
                  "package_type",
                  "handover_method",
                  "delivery_method",
                  "regions_from",
                  "regions_to",
                  "uses_volumetric_weight",
                  "strict_consolidation",
                  "is_label_in_the_box",
                  "is_shipping_and_return"
                ]
              },
              "relationships": {
                "required": [
                  "carrier"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/services/175a235f-aff5-4e44-87b5-3657b75c1deb"
                  }
                }
              }
            }
          }
        ]
      },
      "ServiceRate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ServiceRateResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "weight_min": {
                    "type": "integer",
                    "example": 0,
                    "description": "Weight in grams."
                  },
                  "weight_max": {
                    "type": "integer",
                    "example": 20000,
                    "description": "Weight in grams."
                  },
                  "weight_bracket": {
                    "type": "object",
                    "required": [
                      "start",
                      "start_amount",
                      "size",
                      "size_amount"
                    ],
                    "properties": {
                      "start": {
                        "type": "integer",
                        "example": 6000,
                        "description": "The starting weight in grams of this bracket, for which the `start_amount` will be charged. Once a shipment exceeds this weight, the bracket `size` and `size_amount` determine the price of this rate."
                      },
                      "start_amount": {
                        "type": "integer",
                        "example": 500,
                        "description": "The starting amount of the bracket price in cents/pence."
                      },
                      "size": {
                        "type": "integer",
                        "example": 2000,
                        "description": "The incremental weight in grams of this bracket, for which the `size_amount` will be charged each time it needs to be applied, until the entire shipment weight is covered."
                      },
                      "size_amount": {
                        "type": "integer",
                        "example": 50,
                        "description": "The bracket price will be increased with this amount for as many times as you need to add the bracket `size` to the `start` weight, to cover the weight of the shipment. For this example rate: a shipment of 9 kg would cost 500 + 50 + 50 = 600 cents."
                      }
                    },
                    "description": "Rates with a weight bracket do not have a fixed price between `weight_min` and `weight_max` because their price depends on the actual weight of the parcel. Their price is set to `null` and should be calculated using the bracket attributes (in the same currency as the contract). If you provide `filter[weight]` in the `GET /service-rates` request, you can find the calculated bracket price in the `meta` of each rate."
                  },
                  "length_max": {
                    "type": "integer",
                    "example": 300,
                    "description": "Length in mm."
                  },
                  "width_max": {
                    "type": "integer",
                    "example": 200,
                    "description": "Width in mm."
                  },
                  "height_max": {
                    "type": "integer",
                    "example": 200,
                    "description": "Height in mm."
                  },
                  "volume_max": {
                    "type": "number",
                    "format": "float",
                    "example": 12.5,
                    "description": "Volume in liters. (dm3)"
                  },
                  "is_dynamic": {
                    "type": "boolean",
                    "default": false,
                    "description": "When a service rate is dynamic, it's price depends on complicated carrier logic. You can use the <a href='#tag/RPC/paths/~1get-dynamic-service-rates/post'>/get-dynamic-service-rates</a> RPC endpoint to retrieve the current rates from the carrier."
                  },
                  "price": {
                    "$ref": "#/components/schemas/Price"
                  },
                  "purchase_price": {
                    "$ref": "#/components/schemas/Price"
                  },
                  "fuel_surcharge": {
                    "$ref": "#/components/schemas/Price"
                  },
                  "oversize_surcharge": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Price"
                      },
                      {
                        "description": "The oversize surcharge is an additional fee that is charged when the length of a shipment (longest dimension) exceeds the `length_max` field of the service rate."
                      }
                    ]
                  },
                  "oversize_purchase_price": {
                    "$ref": "#/components/schemas/Price"
                  },
                  "includes_vat": {
                    "type": "boolean",
                    "default": "false",
                    "description": "Indicates whether VAT is included in the price returned by the API."
                  }
                }
              },
              "relationships": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "contract": {
                    "$ref": "#/components/schemas/ContractRelationship"
                  },
                  "service": {
                    "$ref": "#/components/schemas/ServiceRelationship"
                  },
                  "service_options": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ServiceOptionsRelationship"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "required": [
                                "id",
                                "type"
                              ],
                              "properties": {
                                "meta": {
                                  "type": "object",
                                  "properties": {
                                    "price": {
                                      "$ref": "#/components/schemas/Price"
                                    },
                                    "purchase_price": {
                                      "$ref": "#/components/schemas/Price"
                                    },
                                    "included": {
                                      "type": "boolean",
                                      "example": true,
                                      "default": false,
                                      "description": "Indicates whether or not the service option is always included in the service."
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        ]
      },
      "ServiceRateIncludes": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/CarrierResponse"
            },
            {
              "$ref": "#/components/schemas/ContractResponse"
            },
            {
              "$ref": "#/components/schemas/ServiceResponse"
            },
            {
              "$ref": "#/components/schemas/ServiceOptionResponse"
            }
          ]
        }
      },
      "ServiceRateResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^service-rates$",
            "example": "service-rates"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "09a8f83a-bc8d-4598-81e6-ebf9d59a186a"
          }
        }
      },
      "ServiceRateResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ServiceRate"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "weight_min",
                  "weight_max",
                  "is_dynamic",
                  "includes_vat"
                ]
              },
              "relationships": {
                "required": [
                  "contract",
                  "service"
                ],
                "properties": {
                  "service_options": {
                    "properties": {
                      "data": {
                        "items": {
                          "required": [
                            "id",
                            "type",
                            "meta"
                          ],
                          "properties": {
                            "meta": {
                              "required": [
                                "included"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/service-rates/c9ce29a4-6325-11e7-907b-a6006ad3dba0"
                  }
                }
              }
            }
          }
        ]
      },
      "ServiceRegion": {
        "type": "object",
        "required": [
          "country_code"
        ],
        "properties": {
          "country_code": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "state_code": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StateCode"
              },
              {
                "type": "null"
              }
            ]
          },
          "postal_code": {
            "type": "string",
            "example": "^((GY|JE).*|TR2[1-5]) ?[0-9]{1}[A-Z]{2}$",
            "description": "Regular expression matching postal code areas."
          }
        }
      },
      "ServiceRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceResource"
              },
              {
                "required": [
                  "id"
                ]
              }
            ]
          },
          "links": {
            "readOnly": true,
            "type": "object",
            "required": [
              "related"
            ],
            "additionalProperties": false,
            "properties": {
              "related": {
                "type": "string",
                "format": "url",
                "example": "https://api.myparcel.com/services/175a235f-aff5-4e44-87b5-3657b75c1deb"
              }
            }
          }
        }
      },
      "Shipment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ShipmentResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "recipient_address": {
                    "$ref": "#/components/schemas/BaseAddress"
                  },
                  "recipient_tax_identification_numbers": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TaxIdentificationNumber"
                    }
                  },
                  "recipient_tax_number": {
                    "deprecated": true,
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Use `recipient_tax_identification_numbers` instead."
                  },
                  "return_address": {
                    "$ref": "#/components/schemas/BaseAddress"
                  },
                  "sender_address": {
                    "$ref": "#/components/schemas/BaseAddress"
                  },
                  "sender_tax_identification_numbers": {
                    "type": "array",
                    "description": "Sender tax numbers provided with a shipment will overwrite any tax identification numbers of the same `type` and `country_code` defined on the organization of the shop related to this shipment.",
                    "items": {
                      "$ref": "#/components/schemas/TaxIdentificationNumber"
                    }
                  },
                  "sender_tax_number": {
                    "deprecated": true,
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Use `sender_tax_identification_numbers` instead."
                  },
                  "pickup_location": {
                    "oneOf": [
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "code": {
                            "type": "string",
                            "example": "205604"
                          },
                          "address": {
                            "$ref": "#/components/schemas/BaseAddress"
                          }
                        },
                        "description": "Required if the service delivery method is `pick-up`."
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "description": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "example": "Fidget spinners",
                    "description": "Description of the shipment (contents). This field is communicated to the carrier and may be put on the shipment's label."
                  },
                  "customer_reference": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "example": "#8008135",
                    "description": "Reference for the customer to recognize the shipment by."
                  },
                  "channel": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "example": "Your integration name",
                    "description": "Name of the application used to create the shipment."
                  },
                  "total_value": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/Price"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "price": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Price"
                      },
                      {
                        "readOnly": true
                      }
                    ]
                  },
                  "barcode": {
                    "$ref": "#/components/schemas/Barcode"
                  },
                  "tracking_code": {
                    "$ref": "#/components/schemas/TrackingCode"
                  },
                  "tracking_url": {
                    "$ref": "#/components/schemas/TrackingUrl"
                  },
                  "tracking_page_url": {
                    "readOnly": true,
                    "type": [
                      "string",
                      "null"
                    ],
                    "example": "https://track.myparcel.com/shop_name/tracking_code/postal_code",
                    "description": "Tracking page url."
                  },
                  "final_mile_carrier": {
                    "readOnly": true,
                    "type": "object",
                    "required": [
                      "name",
                      "tracking_url"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the final mile carrier"
                      },
                      "tracking_code": {
                        "$ref": "#/components/schemas/TrackingCode"
                      },
                      "tracking_url": {
                        "$ref": "#/components/schemas/TrackingUrl"
                      }
                    }
                  },
                  "sync_active": {
                    "readOnly": true,
                    "type": "boolean",
                    "example": true,
                    "description": "Indicates whether status updates will be performed for this shipment."
                  },
                  "physical_properties": {
                    "$ref": "#/components/schemas/BasePhysicalProperties"
                  },
                  "verified": {
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "price": {
                        "$ref": "#/components/schemas/Price"
                      },
                      "physical_properties": {
                        "$ref": "#/components/schemas/PhysicalProperties"
                      }
                    }
                  },
                  "items": {
                    "oneOf": [
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/BaseShipmentItem"
                        }
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "is_consolidation": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates whether this shipment is a consolidation shipment."
                  },
                  "customs": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/BaseCustoms"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "register_at": {
                    "oneOf": [
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Timestamp"
                          },
                          {
                            "readOnly": false,
                            "description": "This shipment will be registered with the carrier when this time has been reached. While this is `null` or a time in the future, the shipment will stay in concept."
                          }
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "created_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  },
                  "updated_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  },
                  "synced_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  },
                  "tags": {
                    "oneOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "Any custom tag to give to a shipment. Used for reference purposes.",
                          "example": "my-shipping-method"
                        }
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "collo_number": {
                    "$ref": "#/components/schemas/ColloNumber"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "collection": {
                    "$ref": "#/components/schemas/CollectionRelationship"
                  },
                  "colli": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ShipmentColliRelationship"
                      },
                      {
                        "readOnly": true
                      }
                    ]
                  },
                  "contract": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ContractRelationship"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "consolidation_shipment": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ShipmentRelationship"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "files": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ShipmentFilesRelationship"
                      },
                      {
                        "readOnly": true
                      }
                    ]
                  },
                  "hook_logs": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/HookLogsRelationship"
                      },
                      {
                        "readOnly": true
                      }
                    ]
                  },
                  "shipment_surcharges": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ShipmentSurchargesRelationship"
                      },
                      {
                        "readOnly": true
                      }
                    ]
                  },
                  "liability_coverage": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/LiabilityCoverageRelationship"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "multi_colli_shipment": {
                    "readOnly": true,
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ShipmentRelationship"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "service": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ServiceRelationship"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "service_options": {
                    "oneOf": [
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/ServiceOptionsRelationship"
                          },
                          {
                            "properties": {
                              "data": {
                                "items": {
                                  "required": [
                                    "id",
                                    "type"
                                  ],
                                  "properties": {
                                    "meta": {
                                      "type": "object",
                                      "required": [
                                        "values"
                                      ],
                                      "properties": {
                                        "values": {
                                          "type": "object",
                                          "description": "Optional meta values specifically for this service option. Some service options require extra input, like `amount` and `currency` for cash-on-delivery options. See the service option's `values_format` meta property for specific requirements per service option.",
                                          "example": {
                                            "amount": 1200,
                                            "currency": "EUR"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "shipment_status": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ShipmentStatusRelationship"
                      },
                      {
                        "readOnly": true
                      }
                    ]
                  },
                  "shop": {
                    "$ref": "#/components/schemas/ShopRelationship"
                  },
                  "manifest": {
                    "$ref": "#/components/schemas/ManifestRelationship"
                  }
                }
              }
            }
          }
        ]
      },
      "ShipmentColliRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShipmentResource"
            }
          }
        }
      },
      "ShipmentFilesRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FileResource"
                },
                {
                  "required": [
                    "id"
                  ]
                }
              ]
            }
          }
        }
      },
      "ShipmentIncludes": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/CarrierResponse"
            },
            {
              "$ref": "#/components/schemas/ContractResponse"
            },
            {
              "$ref": "#/components/schemas/FileResponse"
            },
            {
              "$ref": "#/components/schemas/HookLog"
            },
            {
              "$ref": "#/components/schemas/LiabilityCoverageResponse"
            },
            {
              "$ref": "#/components/schemas/OrganizationResponse"
            },
            {
              "$ref": "#/components/schemas/ServiceResponse"
            },
            {
              "$ref": "#/components/schemas/ServiceOptionResponse"
            },
            {
              "$ref": "#/components/schemas/ShipmentResponse"
            },
            {
              "$ref": "#/components/schemas/ShipmentStatusResponse"
            },
            {
              "$ref": "#/components/schemas/ShipmentSurchargeResponse"
            },
            {
              "$ref": "#/components/schemas/ShopResponse"
            },
            {
              "$ref": "#/components/schemas/StatusResponse"
            }
          ]
        }
      },
      "ShipmentRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ShipmentResource"
              },
              {
                "required": [
                  "id"
                ]
              }
            ]
          },
          "links": {
            "readOnly": true,
            "type": "object",
            "required": [
              "related"
            ],
            "additionalProperties": false,
            "properties": {
              "related": {
                "type": "string",
                "format": "url",
                "example": "https://api.myparcel.com/shipments/7b808eee-bf1c-40cd-98f2-3c335a06417e"
              }
            }
          }
        }
      },
      "ShipmentsRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ShipmentResource"
                },
                {
                  "required": [
                    "id"
                  ]
                }
              ]
            }
          }
        }
      },
      "ShipmentResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^shipments$",
            "example": "shipments"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "7b808eee-bf1c-40cd-98f2-3c335a06417e"
          }
        }
      },
      "ShipmentResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Shipment"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "recipient_address",
                  "return_address",
                  "sender_address",
                  "physical_properties",
                  "sync_active",
                  "created_at",
                  "updated_at"
                ],
                "properties": {
                  "recipient_address": {
                    "required": [
                      "first_name",
                      "last_name",
                      "street_1",
                      "city",
                      "country_code"
                    ]
                  },
                  "return_address": {
                    "required": [
                      "street_1",
                      "city",
                      "country_code"
                    ]
                  },
                  "sender_address": {
                    "required": [
                      "street_1",
                      "city",
                      "country_code"
                    ]
                  },
                  "pickup_location": {
                    "required": [
                      "code",
                      "address"
                    ]
                  },
                  "physical_properties": {
                    "required": [
                      "weight"
                    ]
                  },
                  "items": {
                    "items": {
                      "required": [
                        "description",
                        "quantity"
                      ]
                    }
                  }
                }
              },
              "relationships": {
                "required": [
                  "shop",
                  "shipment_status"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self",
                  "files"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/shipments/7b808eee-bf1c-40cd-98f2-3c335a06417e"
                  },
                  "files": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/shipments/7b808eee-bf1c-40cd-98f2-3c335a06417e/files"
                  }
                }
              }
            }
          }
        ]
      },
      "ShipmentStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ShipmentStatusResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "carrier_statuses": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CarrierStatus"
                    }
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "created_at": {
                    "type": "integer",
                    "example": 1504801719,
                    "description": "Unix timestamp (UTC) when the status was created."
                  }
                }
              },
              "relationships": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "shipment": {
                    "$ref": "#/components/schemas/ShipmentRelationship"
                  },
                  "status": {
                    "$ref": "#/components/schemas/StatusRelationship"
                  }
                }
              }
            }
          }
        ]
      },
      "ShipmentStatusIncludes": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/ShipmentResponse"
            },
            {
              "$ref": "#/components/schemas/StatusResponse"
            }
          ]
        }
      },
      "ShipmentStatusRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ShipmentStatusResource"
              },
              {
                "required": [
                  "id"
                ]
              }
            ]
          },
          "links": {
            "readOnly": true,
            "type": "object",
            "required": [
              "related"
            ],
            "additionalProperties": false,
            "properties": {
              "related": {
                "type": "string",
                "format": "url",
                "example": "https://api.myparcel.com/shipments/7b808eee-bf1c-40cd-98f2-3c335a06417e/statuses/9e6d8dba-7c45-4351-a9fc-b55a0cbafbad"
              }
            }
          }
        }
      },
      "ShipmentStatusResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^shipment-statuses$",
            "example": "shipment-statuses"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "9e6d8dba-7c45-4351-a9fc-b55a0cbafbad"
          }
        }
      },
      "ShipmentStatusResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ShipmentStatus"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "created_at"
                ]
              },
              "relationships": {
                "required": [
                  "status",
                  "shipment"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/shipments/7b808eee-bf1c-40cd-98f2-3c335a06417e/statuses/9e6d8dba-7c45-4351-a9fc-b55a0cbafbad"
                  }
                }
              }
            }
          }
        ]
      },
      "ShipmentSurchargesRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ShipmentSurchargeResource"
                },
                {
                  "required": [
                    "id"
                  ]
                }
              ]
            }
          }
        }
      },
      "ShipmentSurcharge": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ShipmentSurchargeResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Re-labeling surcharge"
                  },
                  "description": {
                    "type": "string",
                    "example": "A carrier-specific (carrier_code) re-labeling surcharge"
                  },
                  "fee": {
                    "$ref": "#/components/schemas/Price"
                  },
                  "created_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  },
                  "updated_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "required": [
                  "shipment"
                ],
                "additionalProperties": false,
                "properties": {
                  "shipment": {
                    "$ref": "#/components/schemas/ShipmentRelationship"
                  }
                }
              }
            }
          }
        ]
      },
      "ShipmentSurchargeResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^shipment-surcharges$",
            "example": "shipment-surcharges"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "9e6d8dba-7c45-4351-a9fc-b55a0cbafbad"
          }
        }
      },
      "ShipmentSurchargeResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ShipmentSurcharge"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "fee",
                  "created_at",
                  "updated_at"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/shipment-surcharges/385446dg-34e1-42a1-n832-bcc209450ea9"
                  }
                }
              }
            }
          }
        ]
      },
      "Shop": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ShopResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "MyParcel.com",
                    "description": "Must be unique."
                  },
                  "return_address": {
                    "$ref": "#/components/schemas/BaseAddress"
                  },
                  "sender_address": {
                    "$ref": "#/components/schemas/BaseAddress"
                  },
                  "website": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "example": "https://www.myparcel.com"
                  },
                  "logo_url": {
                    "allOf": [
                      {
                        "deprecated": true,
                        "description": "<strong>Deprecated</strong> use `branding.tracking.logo_url` instead."
                      },
                      {
                        "$ref": "#/components/schemas/ImageUrl"
                      }
                    ]
                  },
                  "style": {
                    "allOf": [
                      {
                        "deprecated": true,
                        "description": "<strong>Deprecated</strong> use `branding.tracking` instead."
                      },
                      {
                        "$ref": "#/components/schemas/Style"
                      }
                    ]
                  },
                  "branding": {
                    "type": "object",
                    "properties": {
                      "returns": {
                        "type": "object",
                        "properties": {
                          "domain": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "example": "my-return-domain.com",
                            "description": "The domain where the return portal for this shop is hosted."
                          },
                          "logo_url": {
                            "$ref": "#/components/schemas/ImageUrl"
                          },
                          "banner_url": {
                            "$ref": "#/components/schemas/ImageUrl"
                          },
                          "primary_color": {
                            "type": "string",
                            "minLength": 4,
                            "maxLength": 7,
                            "example": "#3a2efe",
                            "description": "RGB color code in #-hexadecimal notation."
                          },
                          "accent_color": {
                            "type": "string",
                            "minLength": 4,
                            "maxLength": 7,
                            "example": "#fdb915",
                            "description": "RGB color code in #-hexadecimal notation."
                          },
                          "hide_product_features": {
                            "type": "boolean",
                            "example": false,
                            "default": false,
                            "description": "Whether to hide the features of an order's products on the return portal."
                          },
                          "hide_product_description": {
                            "type": "boolean",
                            "example": false,
                            "default": false,
                            "description": "Whether to hide the description of an order's products on the return portal."
                          },
                          "hide_product_price": {
                            "type": "boolean",
                            "example": false,
                            "default": false,
                            "description": "Whether to hide the price of an order's products on the return portal."
                          }
                        },
                        "description": "Custom branding for your MyParcel.com return portal."
                      },
                      "tracking": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Style"
                          },
                          {
                            "properties": {
                              "logo_url": {
                                "$ref": "#/components/schemas/ImageUrl"
                              },
                              "hide_customer_reference": {
                                "type": "boolean",
                                "example": false,
                                "default": false,
                                "description": "Whether to hide the customer reference from the shipment's tracking page."
                              },
                              "hide_sender_address": {
                                "type": "boolean",
                                "example": false,
                                "default": false,
                                "description": "Whether to hide the sender address from the shipment's tracking page."
                              }
                            },
                            "description": "Custom branding for your MyParcel.com tracking page and emails."
                          }
                        ]
                      }
                    }
                  },
                  "created_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  },
                  "reference": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "example": "7467",
                    "description": "Any reference to identify the shop."
                  },
                  "locale": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/LocaleEnum"
                      },
                      {
                        "default": "en-GB",
                        "example": "nl-NL",
                        "description": "The default language that is used for emails and webpages for this shop."
                      }
                    ]
                  },
                  "return_portal_locales": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LocaleEnum"
                    },
                    "example": [
                      "nl-NL"
                    ],
                    "description": "The languages that are available to your consumer when they visit the Return portal. Defaults to your shop's locale. The selected locale is used for emails related to returns."
                  },
                  "return_outcomes": {
                    "type": "object",
                    "properties": {
                      "refund": {
                        "type": "boolean",
                        "default": "true",
                        "example": "true",
                        "readOnly": true,
                        "description": "The shop offers refund as a return outcome, this property cannot be changed."
                      },
                      "exchange": {
                        "type": "boolean",
                        "example": "false",
                        "description": "The shop offers exchange as a return outcome."
                      }
                    }
                  }
                }
              },
              "relationships": {
                "type": "object",
                "required": [
                  "organization"
                ],
                "additionalProperties": false,
                "properties": {
                  "organization": {
                    "$ref": "#/components/schemas/OrganizationRelationship"
                  }
                }
              }
            }
          }
        ]
      },
      "ShopIncludes": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/OrganizationResponse"
            }
          ]
        }
      },
      "ShopMeta": {
        "type": "object",
        "properties": {
          "logo": {
            "allOf": [
              {
                "deprecated": true,
                "description": "<strong>Deprecated</strong> use `branding` instead."
              },
              {
                "$ref": "#/components/schemas/ImageMeta"
              }
            ]
          },
          "branding": {
            "type": "object",
            "properties": {
              "returns": {
                "type": "object",
                "properties": {
                  "logo": {
                    "$ref": "#/components/schemas/ImageMeta"
                  },
                  "banner": {
                    "$ref": "#/components/schemas/ImageMeta"
                  }
                }
              },
              "tracking": {
                "type": "object",
                "properties": {
                  "logo": {
                    "$ref": "#/components/schemas/ImageMeta"
                  }
                }
              }
            }
          }
        }
      },
      "ShopRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ShopResource"
              },
              {
                "required": [
                  "id"
                ]
              }
            ]
          },
          "links": {
            "readOnly": true,
            "type": "object",
            "required": [
              "related"
            ],
            "additionalProperties": false,
            "properties": {
              "related": {
                "type": "string",
                "format": "url",
                "example": "https://api.myparcel.com/shops/35eddf50-1d84-47a3-8479-6bfda729cd99"
              }
            }
          }
        }
      },
      "ShopResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^shops$",
            "example": "shops"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "35eddf50-1d84-47a3-8479-6bfda729cd99"
          }
        }
      },
      "ShopResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Shop"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "name",
                  "return_address",
                  "sender_address",
                  "created_at",
                  "locale"
                ],
                "properties": {
                  "return_address": {
                    "required": [
                      "street_1",
                      "city",
                      "country_code"
                    ]
                  },
                  "sender_address": {
                    "required": [
                      "street_1",
                      "city",
                      "country_code"
                    ]
                  }
                }
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/shops/35eddf50-1d84-47a3-8479-6bfda729cd99"
                  }
                }
              }
            }
          }
        ]
      },
      "StateCode": {
        "type": "string",
        "pattern": "^[A-Z\\d]{1,3}$",
        "example": "ENG",
        "description": "The country subdivision code (second part of the ISO 3166-2 format). Required by some carriers for the United States or Canada."
      },
      "Status": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StatusResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "code": {
                    "type": "string",
                    "enum": [
                      "collection-collected",
                      "collection-concept",
                      "collection-registered",
                      "collection-registration-failed",
                      "collection-voided",
                      "invoice-paid",
                      "invoice-pending",
                      "payment-pending",
                      "payment-rejected",
                      "payment-succeeded",
                      "report-failed",
                      "report-finished",
                      "report-in-progress",
                      "report-queued",
                      "return-approved",
                      "return-deadline-passed",
                      "return-payment-pending",
                      "return-payment-failed",
                      "return-pending",
                      "return-rejected",
                      "shipment-at-parcel-shop",
                      "shipment-at-sorting",
                      "shipment-concept",
                      "shipment-created-without-label",
                      "shipment-created-without-tracking",
                      "shipment-delivered",
                      "shipment-failed",
                      "shipment-on-the-way-to-hub",
                      "shipment-processing",
                      "shipment-received-by-carrier",
                      "shipment-registered",
                      "shipment-registration-failed",
                      "shipment-returned-to-sender",
                      "shipment-returning-to-sender",
                      "shipment-voided",
                      "shipment-with-courier"
                    ],
                    "example": "shipment-delivered"
                  },
                  "resource_type": {
                    "type": "string",
                    "enum": [
                      "invoices",
                      "payments",
                      "reports",
                      "returns",
                      "shipments"
                    ],
                    "example": "shipments",
                    "description": "Resource type this status can be applied to."
                  },
                  "level": {
                    "$ref": "#/components/schemas/StatusLevel"
                  },
                  "name": {
                    "type": "string",
                    "example": "Delivered"
                  },
                  "description": {
                    "type": "string",
                    "example": "The shipment was delivered successfully."
                  }
                }
              }
            }
          }
        ]
      },
      "StatusLevel": {
        "type": "string",
        "enum": [
          "cancelled",
          "failed",
          "in-progress",
          "pending",
          "success"
        ],
        "example": "success"
      },
      "StatusRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusResource"
              },
              {
                "required": [
                  "id"
                ]
              }
            ]
          },
          "links": {
            "readOnly": true,
            "type": "object",
            "required": [
              "related"
            ],
            "additionalProperties": false,
            "properties": {
              "related": {
                "type": "string",
                "format": "url",
                "example": "https://api.myparcel.com/statuses/5c868557-0827-4d21-a7f4-9820f01769f4"
              }
            }
          }
        }
      },
      "StatusResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^statuses$",
            "example": "statuses"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "5c868557-0827-4d21-a7f4-9820f01769f4"
          }
        }
      },
      "StatusResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Status"
          },
          {
            "required": [
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "code",
                  "resource_type",
                  "name",
                  "description",
                  "level"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/statuses/5c868557-0827-4d21-a7f4-9820f01769f4"
                  }
                }
              }
            }
          }
        ]
      },
      "Style": {
        "type": "object",
        "properties": {
          "background_color": {
            "type": "string",
            "minLength": 4,
            "maxLength": 7,
            "example": "#fafafa",
            "description": "RGB color code in #-hexadecimal notation."
          },
          "foreground_color": {
            "type": "string",
            "minLength": 4,
            "maxLength": 7,
            "example": "#fff",
            "description": "RGB color code in #-hexadecimal notation."
          },
          "primary_color": {
            "type": "string",
            "minLength": 4,
            "maxLength": 7,
            "example": "#3a2efe",
            "description": "RGB color code in #-hexadecimal notation."
          },
          "secondary_color": {
            "type": "string",
            "minLength": 4,
            "maxLength": 7,
            "example": "#192832",
            "description": "RGB color code in #-hexadecimal notation."
          },
          "accent_color": {
            "type": "string",
            "minLength": 4,
            "maxLength": 7,
            "example": "#fdb915",
            "description": "RGB color code in #-hexadecimal notation."
          }
        }
      },
      "SystemMessage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SystemMessageResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "content": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Houston, we've had a problem."
                  },
                  "country_code": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/CountryCode"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "level": {
                    "type": "string",
                    "enum": [
                      "info",
                      "success",
                      "warning",
                      "error"
                    ]
                  }
                }
              },
              "relationships": {
                "type": "object",
                "required": [
                  "broker"
                ],
                "properties": {
                  "broker": {
                    "$ref": "#/components/schemas/BrokerRelationship"
                  }
                }
              }
            }
          }
        ]
      },
      "SystemMessageResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^system-messages$",
            "example": "system-messages"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "e6bb8463-2551-469b-94cc-6d861e364621"
          }
        }
      },
      "SystemMessageResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SystemMessage"
          },
          {
            "required": [
              "id",
              "attributes",
              "relationships",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "level",
                  "content"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/system-messages/e6bb8463-2551-469b-94cc-6d861e364621"
                  }
                }
              }
            }
          }
        ]
      },
      "Time": {
        "type": "string",
        "pattern": "^[0-2][0-9]:[0-5][0-9]$",
        "example": "17:30",
        "description": "Time in zero-padded [hh]:[mm] format."
      },
      "Timestamp": {
        "readOnly": true,
        "type": "integer",
        "example": 1504801719,
        "description": "Unix timestamp (UTC)."
      },
      "TrackingCode": {
        "type": "string",
        "example": "3SABCD0123456789",
        "description": "The (currently active) tracking code used to request tracking status from the carrier. This is not necessarily the same as the shipment barcode."
      },
      "TrackingUrl": {
        "readOnly": true,
        "type": "string",
        "example": "https://tracker.carrier.com/3SABCD0123456789",
        "description": "URL used to view tracking status updates."
      },
      "User": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UserResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "s.holmes@holmesinvestigations.com",
                    "description": "Must be unique."
                  },
                  "first_name": {
                    "type": "string",
                    "example": "Sherlock"
                  },
                  "last_name": {
                    "type": "string",
                    "example": "Holmes"
                  },
                  "company": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "example": "Holmes Investigations"
                  },
                  "email": {
                    "$ref": "#/components/schemas/Email"
                  },
                  "phone_number": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "example": "+31 234 567 890"
                  },
                  "locale": {
                    "$ref": "#/components/schemas/LocaleEnum"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "blocked",
                      "pending"
                    ]
                  },
                  "created_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  }
                }
              }
            }
          }
        ]
      },
      "UserRelationship": {
        "type": "object",
        "required": [
          "data"
        ],
        "additionalProperties": false,
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserResource"
              },
              {
                "required": [
                  "id"
                ]
              }
            ]
          },
          "links": {
            "readOnly": true,
            "type": "object",
            "required": [
              "related"
            ],
            "additionalProperties": false,
            "properties": {
              "related": {
                "type": "string",
                "format": "url",
                "example": "https://api.myparcel.com/users/6b341b44-f2f8-4c8b-b066-b8aa5c78ef6b"
              }
            }
          }
        }
      },
      "UserResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^users$",
            "example": "users"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "6b341b44-f2f8-4c8b-b066-b8aa5c78ef6b"
          }
        }
      },
      "UserResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/User"
          },
          {
            "required": [
              "id",
              "attributes"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "username",
                  "first_name",
                  "last_name",
                  "email",
                  "locale",
                  "status",
                  "created_at"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/users/6b341b44-f2f8-4c8b-b066-b8aa5c78ef6b"
                  }
                }
              }
            }
          }
        ]
      },
      "Uuid": {
        "type": "string",
        "format": "uuid",
        "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$"
      },
      "Weight": {
        "type": "object",
        "required": [
          "amount",
          "unit"
        ],
        "additionalProperties": false,
        "properties": {
          "amount": {
            "type": "integer",
            "example": 135,
            "description": "Weight amount in the unit specified below."
          },
          "unit": {
            "type": "string",
            "description": "Unit of measurement for the weight amount.",
            "default": "g",
            "enum": [
              "mg",
              "g",
              "kg",
              "oz",
              "lb"
            ]
          }
        }
      },
      "Analytics": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "unit_type": {
            "type": "string",
            "example": "percentage",
            "enum": [
              "amount",
              "percentage"
            ]
          },
          "labels": {
            "type": "array",
            "description": "List of all chart labels on the X axis",
            "items": {
              "type": "string",
              "example": "January"
            }
          },
          "datasets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "example": "Delivery < 1 day"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "number",
                    "format": "float",
                    "example": 93.56
                  }
                }
              }
            }
          }
        }
      },
      "TaxIdentificationNumber": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "country_code",
          "number",
          "type"
        ],
        "properties": {
          "country_code": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "number": {
            "type": "string",
            "minLength": 1,
            "example": "XI123456789"
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "example": "Eori number for Northern Ireland"
          },
          "type": {
            "type": "string",
            "enum": [
              "eori",
              "ioss",
              "vat",
              "gst"
            ]
          }
        }
      },
      "Zone": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ZoneResource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "EU territory 1A",
                    "description": "The name of the resource."
                  },
                  "code": {
                    "type": "string",
                    "example": "1A",
                    "description": "The code used by the system to identify the resource."
                  },
                  "description": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "example": "Countries in Europe that aren't part of the European Union",
                    "description": "A description of the resource."
                  },
                  "postal_code": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "example": "^((GY|JE).*|TR2[1-5]) ?[0-9]{1}[A-Z]{2}$",
                    "description": "Regular expression matching postal code areas."
                  },
                  "state_codes": {
                    "oneOf": [
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/StateCode"
                        }
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "country_codes": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "GB"
                    },
                    "description": "List of country codes in ISO 3166-1 alpha-2 format."
                  },
                  "created_at": {
                    "$ref": "#/components/schemas/Timestamp"
                  }
                }
              }
            }
          }
        ]
      },
      "ZoneResource": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^zones$",
            "example": "zones"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$",
            "example": "57d04744-1eef-4347-a462-708319b11417"
          }
        }
      },
      "ZoneResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Zone"
          },
          {
            "required": [
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "name",
                  "code",
                  "country_codes",
                  "created_at"
                ]
              },
              "links": {
                "readOnly": true,
                "type": "object",
                "required": [
                  "self"
                ],
                "additionalProperties": false,
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "url",
                    "example": "https://api.myparcel.com/zones/57d04744-1eef-4347-a462-708319b11417"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "parameters": {
      "header-accept-language": {
        "in": "header",
        "name": "Accept-Language",
        "schema": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/LocaleEnum"
            },
            {
              "type": "string",
              "enum": [
                "*"
              ]
            }
          ]
        },
        "description": "Determines the language in which the ``description`` is returned. Value must be <a href=\"https://en.wikipedia.org/wiki/Language_localisation#Language_tags_and_codes\" target=\"_blank\">ISO 3166-1 alpha-2 compliant</a> (for example: ``en-GB``, ``nl-NL``)",
        "example": "en-GB"
      },
      "header-files": {
        "name": "Accept",
        "in": "header",
        "description": "You must set the accept header to retrieve the file in the given format. Possible options are: <ul><li>`application/vnd.api+json`</li><li>`application/pdf`</li><li>`application/zpl`</li><li>`image/png`</li><li>`text/csv`</li></ul>",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "application/vnd.api+json",
            "application/pdf",
            "application/zpl",
            "image/png",
            "text/csv"
          ]
        }
      },
      "header-idempotency-key": {
        "name": "Idempotency-Key",
        "in": "header",
        "description": "Populate this header with a value <strong>unique to the request data</strong> if you want to prevent duplicate resources when you call this endpoint multiple times, for example due to network issues.",
        "schema": {
          "type": "string"
        }
      },
      "path-address_id": {
        "name": "address_id",
        "in": "path",
        "description": "Id of the address.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-broker_id": {
        "name": "broker_id",
        "in": "path",
        "description": "Id of the broker.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-carrier_id": {
        "name": "carrier_id",
        "in": "path",
        "description": "Id of the carrier.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-carrier_surcharge_id": {
        "name": "carrier_surcharge_id",
        "in": "path",
        "description": "Id of the carrier surcharge.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-client_id": {
        "name": "client_id",
        "in": "path",
        "description": "Id of the client.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-collection_id": {
        "name": "collection_id",
        "in": "path",
        "description": "Id of the Collection.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-collection_schedule_id": {
        "name": "collection_schedule_id",
        "in": "path",
        "description": "Id of the collection schedule resource.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-combined_file_id": {
        "name": "combined_file_id",
        "in": "path",
        "description": "Id of the combined file resource.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-contract_id": {
        "name": "contract_id",
        "in": "path",
        "description": "Id of the contract.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-country_code": {
        "name": "country_code",
        "in": "path",
        "description": "Country code in ISO 3166-1 alpha-2 format.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/CountryCode"
        }
      },
      "path-demo_order_id": {
        "name": "demo_order_id",
        "in": "path",
        "description": "Id of the demo order.",
        "required": true,
        "schema": {
          "type": "integer",
          "example": "12345"
        }
      },
      "path-enterprise_id": {
        "name": "enterprise_id",
        "in": "path",
        "description": "Id of the enterprise.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-file_id": {
        "name": "file_id",
        "in": "path",
        "description": "Id of the file.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-hook_id": {
        "name": "hook_id",
        "in": "path",
        "description": "Id of the hook.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-hook-log_id": {
        "name": "hook_log_id",
        "in": "path",
        "description": "Id of the hook log.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-integration_id": {
        "name": "integration_id",
        "in": "path",
        "description": "Id of the integration.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-invitation_id": {
        "name": "invitation_id",
        "in": "path",
        "description": "Id of the invitation.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-invoice_id": {
        "name": "invoice_id",
        "in": "path",
        "description": "Id of the invoice.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-latitude": {
        "name": "latitude",
        "in": "path",
        "description": "Geolocation latitude.",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?)$",
          "example": "52.359686"
        }
      },
      "path-liability_coverage_id": {
        "name": "liability_coverage_id",
        "in": "path",
        "description": "Id of the liability coverage.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-longitude": {
        "name": "longitude",
        "in": "path",
        "description": "Geolocation longitude.",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$",
          "example": "4.884573"
        }
      },
      "path-manifest_id": {
        "name": "manifest_id",
        "in": "path",
        "description": "Id of the manifest.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-organization_id": {
        "name": "organization_id",
        "in": "path",
        "description": "Id of the organization.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-password_reset_id": {
        "name": "password_reset_id",
        "in": "path",
        "description": "Id of the password reset.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-postal_code": {
        "name": "postal_code",
        "in": "path",
        "description": "Postal code of the address to search nearby.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "path-pudo_id": {
        "name": "pudo_id",
        "in": "path",
        "description": "ID of the PickupDropoffLocation.",
        "required": true,
        "schema": {
          "type": "string",
          "description": "The location ID.",
          "example": "205604"
        }
      },
      "path-rates_import_id": {
        "name": "rates_import_id",
        "in": "path",
        "description": "Id of the rate import.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-region_id": {
        "name": "region_id",
        "in": "path",
        "description": "Id of the region.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-report_id": {
        "name": "report_id",
        "in": "path",
        "description": "Id of the report.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-return_id": {
        "name": "return_id",
        "in": "path",
        "description": "Id of the Return.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-payment_id": {
        "name": "payment_id",
        "in": "path",
        "description": "Id of the payment.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-return_method_id": {
        "name": "return_method_id",
        "in": "path",
        "description": "Id of the Return method.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-return_reason_id": {
        "name": "return_reason_id",
        "in": "path",
        "description": "Id of the return reason.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-return_question_id": {
        "name": "return_question_id",
        "in": "path",
        "description": "Id of the return question.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-scope_id": {
        "name": "scope_id",
        "in": "path",
        "description": "Id of the scope.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-service_id": {
        "name": "service_id",
        "in": "path",
        "description": "Id of the service.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-service_option_id": {
        "name": "service_option_id",
        "in": "path",
        "description": "Id of the service option.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-service_rate_id": {
        "name": "service_rate_id",
        "in": "path",
        "description": "Id of the service rate.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-shipment_id": {
        "name": "shipment_id",
        "in": "path",
        "description": "Id of the shipment.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-shipment_status_id": {
        "name": "shipment_status_id",
        "in": "path",
        "description": "Id of the shipment status.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-shipment_surcharge_id": {
        "name": "shipment_surcharge_id",
        "in": "path",
        "description": "Id of the shipment surcharge.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-shop_id": {
        "name": "shop_id",
        "in": "path",
        "description": "Id of the shop.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-status_id": {
        "name": "status_id",
        "in": "path",
        "description": "Id of the status.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-system_message_id": {
        "name": "system_message_id",
        "in": "path",
        "description": "Id of the system message.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-user_id": {
        "name": "user_id",
        "in": "path",
        "description": "Id of the user.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "path-zone_id": {
        "name": "zone_id",
        "in": "path",
        "description": "Id of the zone.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "query-city": {
        "name": "city",
        "in": "query",
        "description": "City of the address to search nearby.",
        "schema": {
          "type": "string"
        }
      },
      "query-country_code": {
        "name": "country_code",
        "in": "query",
        "description": "Country code in ISO 3166-1 alpha-2 format.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/CountryCode"
        }
      },
      "query-date_from": {
        "name": "date_from",
        "in": "query",
        "description": "Date string in ISO 8601 format or unix timestamp.",
        "required": true,
        "schema": {
          "type": [
            "string",
            "number"
          ]
        }
      },
      "query-date_to": {
        "name": "date_to",
        "in": "query",
        "description": "Date string in ISO 8601 format or unix timestamp.",
        "required": true,
        "schema": {
          "type": [
            "string",
            "number"
          ]
        }
      },
      "query-filter-broker": {
        "name": "filter[broker]",
        "in": "query",
        "description": "Comma separated string of broker IDs to filter by.",
        "schema": {
          "type": "string"
        }
      },
      "query-filter-carrier": {
        "name": "filter[carrier]",
        "in": "query",
        "description": "Comma separated string of carrier IDs to filter by.",
        "schema": {
          "type": "string"
        }
      },
      "query-filter-created_at-date_from": {
        "name": "filter[created_at][date_from]",
        "in": "query",
        "description": "Date string in ISO 8601 format or unix timestamp. Only resources created at >= this date will be in the response.",
        "schema": {
          "type": [
            "string",
            "number"
          ]
        }
      },
      "query-filter-created_at-date_to": {
        "name": "filter[created_at][date_to]",
        "in": "query",
        "description": "Date string in ISO 8601 format or unix timestamp. Only resources created at <= this date will be in the response.",
        "schema": {
          "type": [
            "string",
            "number"
          ]
        }
      },
      "query-filter-date_from": {
        "name": "filter[date_from]",
        "in": "query",
        "description": "Date string in ISO 8601 date format (YYYY-MM-DD).",
        "schema": {
          "type": "string"
        }
      },
      "query-filter-date_to": {
        "name": "filter[date_to]",
        "in": "query",
        "description": "Date string in ISO 8601 date format (YYYY-MM-DD).",
        "schema": {
          "type": "string"
        }
      },
      "query-filter-location_type": {
        "name": "filter[location_type]",
        "in": "query",
        "description": "Comma separated list of location types to filter the locations by. Possible options are:<ul><li>`locker`</li><li>`office`</li><li>`office-agency`</li><li>`office-postal`</li><li>`office-shop`</li></ul>",
        "schema": {
          "type": "string"
        }
      },
      "query-filter-organization": {
        "name": "filter[organization]",
        "in": "query",
        "description": "Comma separated string of organization IDs to filter by.",
        "schema": {
          "type": "string"
        }
      },
      "query-filter-owner": {
        "name": "filter[owner]",
        "in": "query",
        "description": "Comma separated string of owner IDs to filter by.",
        "schema": {
          "type": "string"
        }
      },
      "query-filter-service": {
        "name": "filter[service]",
        "in": "query",
        "description": "Comma separated string of service IDs to filter by.",
        "schema": {
          "type": "string"
        }
      },
      "query-filter-search-name": {
        "name": "filter[search.name]",
        "in": "query",
        "description": "String of characters you want to look for in a resource's `name` attribute.",
        "schema": {
          "type": "string"
        }
      },
      "query-filter-shop": {
        "name": "filter[shop]",
        "in": "query",
        "description": "Comma separated string of shop IDs to filter by.",
        "schema": {
          "type": "string"
        }
      },
      "query-filter-status": {
        "name": "filter[status]",
        "in": "query",
        "description": "Comma separated string of status codes to filter by. Only resources with the a current status that corresponds with one of the status codes will be in the response.",
        "schema": {
          "type": "string"
        }
      },
      "query-postal_code": {
        "name": "postal_code",
        "in": "query",
        "description": "Postal code of the address to search nearby.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "query-shipments-filter-carrier_status-category": {
        "name": "filter[carrier_status][category]",
        "in": "query",
        "description": "Comma separated string of status categories to filter by. Only shipments with a current status that corresponds with one of the categories will be in the response.",
        "schema": {
          "$ref": "#/components/schemas/CarrierStatusCategory"
        }
      },
      "query-shipments-filter-channel": {
        "name": "filter[channel]",
        "in": "query",
        "description": "String of characters you want to look for in a shipment's channel.",
        "schema": {
          "type": "string"
        }
      },
      "query-shipments-filter-consolidation_shipment": {
        "name": "filter[consolidation_shipment]",
        "in": "query",
        "description": "Comma separated string of consolidation shipment IDs to filter by.",
        "schema": {
          "type": "string"
        }
      },
      "query-shipments-filter-current_status_code": {
        "name": "filter[current_status_code]",
        "in": "query",
        "description": "Comma separated string of status codes to filter by. Only shipments with the a current status that corresponds with one of the status codes will be in the response.",
        "schema": {
          "type": "string"
        }
      },
      "query-shipments-filter-customer_reference": {
        "name": "filter[customer_reference]",
        "in": "query",
        "description": "Search for a shipment by its customer reference attribute. This is a strict search, meaning that only if the search string matches the `customer_reference` attribute of a shipment completely, will the shipment be returned.",
        "schema": {
          "type": "string"
        }
      },
      "query-shipments-filter-tracking_code": {
        "name": "filter[tracking_code]",
        "in": "query",
        "description": "Search for a shipment by its tracking code attribute. This is a strict search, meaning that only if the search string matches the `tracking_code` attribute of a shipment completely, will the shipment be returned.",
        "schema": {
          "type": "string"
        }
      },
      "query-shipments-filter-date_from": {
        "deprecated": true,
        "name": "filter[date_from]",
        "in": "query",
        "description": "Date string in ISO 8601 date format (YYYY-MM-DD). Only shipments created at >= this date will be in the response. <strong>Deprecated</strong> use `filter[created_at][date_from]` instead.",
        "schema": {
          "type": "string"
        }
      },
      "query-shipments-filter-date_to": {
        "deprecated": true,
        "name": "filter[date_to]",
        "in": "query",
        "description": "Date string in ISO 8601 date format (YYYY-MM-DD). Only shipments created at <= this date will be in the response. <strong>Deprecated</strong> use `filter[created_at][date_to]` instead.",
        "schema": {
          "type": "string"
        }
      },
      "query-shipments-filter-description": {
        "name": "filter[description]",
        "in": "query",
        "description": "Search for a shipment by its description attribute. This is a strict search, meaning that only if the search string matches the `description` attribute of a shipment completely, will the shipment be returned.",
        "schema": {
          "type": "string"
        }
      },
      "query-shipments-filter-recipient_address-country_code": {
        "name": "filter[recipient_address][country_code]",
        "in": "query",
        "description": "Two letter ISO 3166-1 alpha-2 country code of the recipient address to filter the shipments by.",
        "schema": {
          "type": "string"
        }
      },
      "query-shipments-filter-register_at-date_from": {
        "name": "filter[register_at][date_from]",
        "in": "query",
        "description": "Date string in ISO 8601 format or unix timestamp. Only shipments registered at >= this date will be in the response.",
        "schema": {
          "type": [
            "string",
            "number"
          ]
        }
      },
      "query-shipments-filter-register_at-date_to": {
        "name": "filter[register_at][date_to]",
        "in": "query",
        "description": "Date string in ISO 8601 format or unix timestamp. Only shipments registered at <= this date will be in the response.",
        "schema": {
          "type": [
            "string",
            "number"
          ]
        }
      },
      "query-shipments-filter-search": {
        "name": "filter[search]",
        "in": "query",
        "description": "String of characters you want to look for in a shipment's attributes. Available fields to look in are:<ul><li>`date_created` (YYYY-MM-DD). <strong>Deprecated</strong> use `filter[created_at][date_from]` and `filter[created_at][date_to]` instead.</li><li>`description`</li><li>`customer_reference`</li><li>`recipient_address`</li><li>`tracking_code`</li></ul>",
        "schema": {
          "type": "string"
        }
      },
      "query-shipments-filter-sender_address-country_code": {
        "name": "filter[sender_address][country_code]",
        "in": "query",
        "description": "Two letter ISO 3166-1 alpha-2 country code of the sender address to filter the shipments by.",
        "schema": {
          "type": "string"
        }
      },
      "query-shipments-filter-service_code": {
        "name": "filter[service_code]",
        "in": "query",
        "description": "Comma separated string of service codes to filter by. Only shipments with a service that corresponds with one of the service codes will be in the response.",
        "schema": {
          "type": "string"
        }
      },
      "query-filter-weight": {
        "name": "filter[weight]",
        "in": "query",
        "description": "Weight value in grams to filter by.",
        "schema": {
          "type": "number"
        }
      },
      "query-shipments-include": {
        "name": "include",
        "in": "query",
        "description": "Comma separated string of the relationship names you want to include the data of.<br>The relationships that can be included are:<ul><li>`colli`</li><li>`consolidation_shipment`</li><li>`contract`</li><li>`contract.carrier`</li><li>`files`</li><li>`hook_logs`</li><li>`liability_coverage`</li><li>`service`</li><li>`service.carrier`</li><li>`service_options`</li><li>`shipment_status`</li><li>`shipment_status.status`</li><li>`shop`</li><li>`shop.organization`</li><li>`shipment_surcharges`</li><li>`manifest`</li></ul>",
        "schema": {
          "type": "string"
        }
      },
      "query-street": {
        "name": "street",
        "in": "query",
        "description": "Street name of the address to search nearby.",
        "schema": {
          "type": "string"
        }
      },
      "query-street_number": {
        "name": "street_number",
        "in": "query",
        "description": "House number of the address to search nearby.",
        "schema": {
          "type": "string"
        }
      },
      "query-filter-tags": {
        "name": "filter[tags]",
        "in": "query",
        "description": "Comma separated string of tags to filter by.",
        "schema": {
          "type": "string"
        }
      },
      "query-hmac": {
        "name": "hmac",
        "in": "query",
        "description": "HMAC signature of the request.",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "description": "[API documentation](https://docs.myparcel.com/api/authentication.html)",
        "name": "Authorization",
        "in": "header",
        "scheme": "Bearer",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://auth.myparcel.com/access-token",
            "scopes": {
              "addresses.suggest": "Retrieve address suggestions.",
              "broker.member": "Retrieve broker related resources and create organizations for that broker.",
              "collections.manage": "Manage collection resources.",
              "collections.view": "Retrieve collection resources.",
              "contracts.manage": "Manage contract resources.",
              "enterprises.manage": "Manage enterprise related resources.",
              "finance.manage": "Manage all finance related resources.",
              "logs.view": "Retrieve audit logs on behalf of a broker.",
              "organizations.manage": "Manage organization related resources on behalf of a single organization or all organizations belonging to a broker.",
              "returns.manage": "Manage all return related resources.",
              "shipments.manage": "Manage shipments on behalf of all shops belonging to an organization or broker.",
              "shipments.view": "Retrieve shipments on behalf of all shops belonging to an organization or broker.",
              "system.manage": "Manage all system related resources.",
              "users.manage": "Manage user resources.",
              "zones.manage": "Manage zone resources."
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Addresses",
      "externalDocs": {}
    },
    {
      "name": "Brokers",
      "externalDocs": {}
    },
    {
      "name": "Carriers",
      "externalDocs": {
        "url": "https://docs.myparcel.com/api/resources/carriers.html",
        "description": "API documentation"
      }
    },
    {
      "name": "CarrierSurcharges",
      "externalDocs": {}
    },
    {
      "name": "Clients",
      "externalDocs": {}
    },
    {
      "name": "Collections",
      "externalDocs": {}
    },
    {
      "name": "CollectionSchedules",
      "externalDocs": {}
    },
    {
      "name": "CombinedFiles",
      "externalDocs": {}
    },
    {
      "name": "Contracts",
      "externalDocs": {
        "url": "https://docs.myparcel.com/api/resources/contracts.html",
        "description": "API documentation"
      }
    },
    {
      "name": "Enterprises",
      "externalDocs": {}
    },
    {
      "name": "Files",
      "externalDocs": {
        "url": "https://docs.myparcel.com/api/resources/files.html",
        "description": "API documentation"
      }
    },
    {
      "name": "Hooks",
      "externalDocs": {
        "url": "https://docs.myparcel.com/api/resources/hooks.html",
        "description": "API documentation"
      }
    },
    {
      "name": "HookLogs",
      "externalDocs": {
        "url": "https://docs.myparcel.com/api/resources/hooks/logs.html",
        "description": "API documentation"
      }
    },
    {
      "name": "Integrations",
      "externalDocs": {}
    },
    {
      "name": "Invitations",
      "externalDocs": {}
    },
    {
      "name": "Invoices",
      "externalDocs": {}
    },
    {
      "name": "LiabilityCoverages",
      "externalDocs": {
        "url": "https://docs.myparcel.com/api/resources/liability-coverages.html",
        "description": "API documentation"
      }
    },
    {
      "name": "Locales",
      "externalDocs": {}
    },
    {
      "name": "Manifests",
      "externalDocs": {}
    },
    {
      "name": "Organizations",
      "externalDocs": {}
    },
    {
      "name": "PasswordResets",
      "externalDocs": {}
    },
    {
      "name": "PaymentProviders",
      "externalDocs": {}
    },
    {
      "name": "RateImports",
      "externalDocs": {}
    },
    {
      "name": "Regions",
      "externalDocs": {
        "url": "https://docs.myparcel.com/api/resources/regions.html",
        "description": "API documentation"
      }
    },
    {
      "name": "Reports",
      "externalDocs": {
        "url": "https://docs.myparcel.com/api/resources/reports.html",
        "description": "API documentation"
      }
    },
    {
      "name": "Returns",
      "externalDocs": {}
    },
    {
      "name": "ReturnMethods",
      "externalDocs": {}
    },
    {
      "name": "ReturnReasons",
      "externalDocs": {}
    },
    {
      "name": "ReturnReasonsManagement",
      "externalDocs": {}
    },
    {
      "name": "ReturnQuestions",
      "externalDocs": {}
    },
    {
      "name": "ReturnAnalytics",
      "externalDocs": {}
    },
    {
      "name": "ReturnReports",
      "externalDocs": {}
    },
    {
      "name": "Scopes",
      "externalDocs": {}
    },
    {
      "name": "Services",
      "externalDocs": {
        "url": "https://docs.myparcel.com/api/resources/services.html",
        "description": "API documentation"
      }
    },
    {
      "name": "ServiceOptions",
      "externalDocs": {
        "url": "https://docs.myparcel.com/api/resources/service-options.html",
        "description": "API documentation"
      }
    },
    {
      "name": "ServiceRates",
      "externalDocs": {
        "url": "https://docs.myparcel.com/api/resources/service-rates.html",
        "description": "API documentation"
      }
    },
    {
      "name": "Shipments",
      "externalDocs": {
        "url": "https://docs.myparcel.com/api/resources/shipments.html",
        "description": "API documentation"
      }
    },
    {
      "name": "ShipmentSurcharges",
      "externalDocs": {}
    },
    {
      "name": "Shops",
      "externalDocs": {
        "url": "https://docs.myparcel.com/api/resources/shops.html",
        "description": "API documentation"
      }
    },
    {
      "name": "Statuses",
      "externalDocs": {
        "url": "https://docs.myparcel.com/api/resources/statuses.html",
        "description": "API documentation"
      }
    },
    {
      "name": "SystemMessages",
      "externalDocs": {}
    },
    {
      "name": "Users",
      "externalDocs": {}
    },
    {
      "name": "Zones",
      "externalDocs": {}
    },
    {
      "name": "RPC",
      "externalDocs": {
        "url": "https://docs.myparcel.com/api/rpc-endpoints.html",
        "description": "API documentation"
      }
    },
    {
      "name": "Analytics",
      "externalDocs": {}
    }
  ],
  "externalDocs": {
    "url": "https://docs.myparcel.com",
    "description": "The documentation describing the MyParcel.com API and its corresponding tools."
  }
}
