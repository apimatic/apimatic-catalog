openapi: 3.0.3
info:
  version: 1.0.34
  title: 10DLC Brand and Campaign Provisioning
  x-metaTitle: Vonage 10DLC API Reference | Vonage API Documentation
  x-metaDescription: Find quick answers to questions about the Vonage 10DLC API in
    this reference guide. Learn more in Vonage's API documentation.
  contact:
    name: Vonage
    url: https://developer.nexmo.com
    email: devrel@vonage.com
  description: APIs relating to 10DLC brand and campaign management
servers:
  - url: https://api-eu.vonage.com
tags:
  - name: Enums
    description: The list of values available for enum properties across all APIs
  - name: Account
    description: API endpoints for Account
  - name: Brands
    description: APIs relating to working with Brands
  - name: Campaigns
    description: APIs relating to working with Campaigns
  - name: Numbers
    description: APIs relating to working with Numbers in Campaigns
  - name: OTP
    description: Sole Proprietor OTP verification
  - name: Brand vettings
    description: Endpoints for requesting brand vetting and appeals
  - name: Resellers
    description: APIs for managing resellers associated with your account.
security:
  - basicAuth: []
paths:
  /v1/10dlc/enum:
    get:
      tags:
        - Enums
      description: Get the list of all enum values available for each enum parameter
      summary: Get enumeration values
      operationId: getEnumValues
      responses:
        "200":
          description: List of all enumeration values
          content:
            application/json:
              schema:
                description: |
                  Enumeration values used in other API objects.
                  These values are dynamic and can be changed regularly.
                type: object
                properties:
                  alt_business_id_type:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                  brand_relationship:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                  brand_status:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                  campaign_status:
                    type: array
                    items:
                      type: object
                      properties:
                        description:
                          type: string
                        id:
                          type: string
                  campaign_op_status:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                  compliance:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                  country:
                    type: array
                    items:
                      type: object
                      properties:
                        description:
                          type: string
                        id:
                          type: string
                  cnp:
                    type: array
                    items:
                      type: object
                      properties:
                        description:
                          type: string
                        id:
                          type: string
                  dca:
                    type: array
                    items:
                      type: object
                      properties:
                        description:
                          type: string
                        id:
                          type: string
                  entity_type:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                  event_category:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                  identity_status:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                  mno:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        mno:
                          type: string
                  nudge_intent:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                  number_status:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                  opt_attribute_name:
                    type: array
                    items:
                      type: object
                      properties:
                        description:
                          type: string
                        id:
                          type: string
                        type:
                          type: string
                  sharing_status:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                  stock_exchange:
                    type: array
                    items:
                      type: object
                      properties:
                        country:
                          type: string
                        description:
                          type: string
                        id:
                          type: string
                  tcr_campaign_status:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                  tmo_brand_tier:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                  usecase:
                    type: array
                    items:
                      type: object
                      properties:
                        classification:
                          type: string
                        description:
                          type: string
                        display_name:
                          type: string
                        id:
                          type: string
                        max_sub_usecases:
                          type: number
                        min_sub_usecases:
                          type: number
                        valid_sub_usecase:
                          type: number
                        min_msg_samples:
                          description: >
                            This is the minimum number of message samples for a
                            campaign's usecase. 

                            This does not account for additional samples needed by a campaign's sub usecases.
                          type: number
                  usstate:
                    type: array
                    items:
                      type: object
                      properties:
                        description:
                          type: string
                        id:
                          type: string
                  vertical:
                    type: array
                    items:
                      type: object
                      properties:
                        description:
                          type: string
                        display_name:
                          type: string
                        id:
                          type: string
                        industry_id:
                          type: string
                  vetting_class:
                    type: array
                    items:
                      type: object
                      properties:
                        description:
                          type: string
                        display_name:
                          type: string
                        enabled:
                          type: number
                        id:
                          type: string
                        validity_months:
                          type: number
                  vetting_provider:
                    type: array
                    items:
                      type: object
                      properties:
                        display_name:
                          type: string
                        id:
                          type: string
                        vetting_classes:
                          type: string
                  vetting_status:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                  vetting_appeal_category:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        display_name:
                          type: string
                        description:
                          type: string
                example:
                  alt_business_id_type:
                    - id: DUNS
                    - id: GIIN
                    - id: LEI
                    - id: NONE
                  brand_relationship:
                    - id: BASIC_ACCOUNT
                    - id: KEY_ACCOUNT
                    - id: LARGE_ACCOUNT
                    - id: MEDIUM_ACCOUNT
                    - id: SMALL_ACCOUNT
                  brand_status:
                    - id: ACTIVE
                    - id: DELETED
                    - id: UNKNOWN
                  campaign_status:
                    - description: The campaign has been approved by every party and traffic can now
                        be sent.
                      id: ACTIVE
                    - description: The campaign has expired.
                      id: CANCELED
                    - description: The campaign has been approved by our internal process. It is
                        created in the registry and is pending approval from
                        third parties.
                      id: CARRIERS_REVIEW
                    - description: The campaign is active but will not be renewed. It will be canceled
                        at the next renewal date.
                      id: PENDING_CANCELLATION
                    - description: The initial state of a campaign. The campaign has been submitted
                        for an internal review and cannot be used to send
                        traffic yet.
                      id: PENDING_REVIEW
                    - description: The campaign has been suspended, along with any traffic it's used
                        to send. This can happen if suspicious traffic has been
                        detected (spam, ...) or after an MNO complaint. This
                        triggers an internal review process which can lead to
                        the unsuspension or termination of the campaign.
                      id: SUSPENDED
                    - description: The campaign has been terminated. A campaign cannot be recovered
                        after it's been terminated.
                      id: TERMINATED
                    - description: The campaign has been reviewed after submission, but needs changes
                        before it can be approved.
                      id: UPDATES_REQUIRED
                  campaign_op_status:
                    - id: REGISTERED
                    - id: REJECTED
                    - id: REVIEW
                    - id: SUSPENDED
                    - id: UNKNOWN
                  compliance:
                    - id: HIPAA
                    - id: NONE
                  country:
                    - description: United Kingdom of Great Britain and Northern Ireland
                      id: GB
                    - description: United States of America
                      id: US
                  cnp:
                    - description: Bandwidth
                      id: BANDW
                  dca:
                    - description: Bandwidth
                      id: BANDW
                  entity_type:
                    - id: GOVERNMENT
                    - id: NON_PROFIT
                    - id: PRIVATE_PROFIT
                    - id: PUBLIC_PROFIT
                    - id: SOLE_PROPRIETOR
                  event_category:
                    - id: BRAND
                    - id: CAMPAIGN
                  identity_status:
                    - id: SELF_DECLARED
                    - id: PENDING
                    - id: UNVERIFIED
                    - id: VERIFIED
                    - id: VETTED_VERIFIED
                  mno:
                    - id: "10017"
                      mno: AT&T
                    - id: "10035"
                      mno: T-Mobile
                    - id: "10037"
                      mno: US Cellular
                    - id: "10038"
                      mno: Verizon Wireless
                    - id: "10631"
                      mno: ClearSky
                    - id: "10901"
                      mno: Interop
                  nudge_intent:
                    - id: APPEAL_REJECTION
                    - id: REVIEW
                  number_status:
                    - id: LINKING
                    - id: LINKED
                    - id: REJECTED
                    - id: UNLINKING
                    - id: UNLINKED
                  opt_attribute_name:
                    - description: Confirmation that the brand is a closely affiliated, generally by
                        government ownership or control, with federal, state or
                        local governments.
                      id: governmentEntity
                      type: BOOLEAN
                    - description: Political committee Locale. Possible values are federal, state,
                        local and tribal.
                      id: politicalCommitteeLocale
                      type: STRING
                    - description: Publicly traded company identified in the Russell 3000 Index
                      id: russell3000
                      type: BOOLEAN
                    - description: 527 group is a type of U.S. tax-exempt organization organized under
                        Section 527 of the U.S. Internal Revenue Code.
                      id: section527
                      type: BOOLEAN
                    - description: "Nonprofit organization tax-exempt status per section 501 of the
                        U.S. tax code. Example: '501c3'. Please refer to IRS
                        code, section 501 - Ballotpedia for more info."
                      id: taxExemptStatus
                      type: STRING
                  sharing_status:
                    - id: ACCEPTED
                    - id: DECLINED
                    - id: PENDING
                    - id: UNKNOWN
                  stock_exchange:
                    - country: US
                      description: Nasdaq
                      id: NASDAQ
                    - country: US
                      description: New York Stock Exchange
                      id: NYSE
                  tcr_campaign_status:
                    - id: ACTIVE
                    - id: EXPIRED
                    - id: UNKNOWN
                  tmo_brand_tier:
                    - id: LOW
                    - id: SOLE_PROPRIETOR
                    - id: TOP
                  usecase:
                    - classification: STANDARD
                      description: A notification that the security of a system, either software or
                        hardware, has been compromised in some way and there is
                        an action you need to take
                      display_name: Security Alert
                      id: SECURITY_ALERT
                      max_sub_usecases: 0
                      min_sub_usecases: 0
                      valid_sub_usecase: 1
                    - classification: SPECIAL
                      description: Sole Proprietor
                      display_name: Sole Proprietor
                      id: SOLE_PROPRIETOR
                      max_sub_usecases: 5
                      min_sub_usecases: 1
                      valid_sub_usecase: 0
                  usstate:
                    - description: New York
                      id: NY
                    - description: Washington
                      id: WA
                  vertical:
                    - description: Agriculture businesses and services.
                      display_name: Agriculture
                      id: AGRICULTURE
                      industry_id: agriculture
                    - description: Communication and mass media.
                      display_name: Communication and Mass Media
                      id: COMMUNICATION
                      industry_id: mass-media-and-communication
                  vetting_class:
                    - description: Detailed vetting along with vet report
                      display_name: Enhanced
                      enabled: 1
                      id: ENHANCED
                      validity_months: 1200
                    - description: Required for federal level political campaign.
                      display_name: Political
                      enabled: 1
                      id: POLITICAL
                      validity_months: 12
                    - description: Standard Vetting covering all but Political, Exempted and Political
                        use-cases
                      display_name: Standard
                      enabled: 1
                      id: STANDARD
                      validity_months: 12
                  vetting_provider:
                    - display_name: Aegis Mobile
                      id: AEGIS
                      vetting_classes: STANDARD,POLITICAL,ENHANCED
                    - display_name: Campaign Verify
                      id: CV
                      vetting_classes: POLITICAL_FEDERAL
                    - display_name: WMC Global
                      id: WMC
                      vetting_classes: STANDARD
                  vetting_status:
                    - id: ACTIVE
                    - id: EXPIRED
                    - id: FAILED
                    - id: PENDING
                    - id: UNSCORE
                  vetting_appeal_category:
                    - id: VERIFY_TAX_ID
                      display_name: Verify tax ID
                      description: Select this category if the record is FAILED due to an inability to
                        match the tax ID.
                    - id: VERIFY_NON_PROFIT
                      display_name: Verify Non-Profit status/subsection
                      description: Select this category if the record submitted as a Non-Profit entity
                        type is VETTED_VERIFIED and is missing a 'Tax Exempt
                        Status'.
                    - id: VERIFY_GOVERNMENT
                      display_name: Verify Government status
                      description: Select this category if the record submitted as a Government entity
                        type is VETTED_VERIFIED and is missing a “Government
                        Entity” status.
                    - id: LOW_SCORE
                      display_name: Low score
                      description: Select this category if the vetting score is too low based on the
                        Company's characteristics, including size, years in
                        business, business reputation, financial history, civil
                        and criminal legal history, regulatory history, official
                        registration and standing, and business messaging
                        integrity record. This category applies only for
                        Standard external vets.
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
  /v1/10dlc/account:
    get:
      tags:
        - Account
      summary: Retrieves the authenticated Account attributes.
      description: Retrieves the authenticated Account attributes.
      operationId: getAccount
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  opt_out_assist:
                    $ref: "#/paths/~1v1~110dlc~1account/patch/requestBody/content/application~1json\
                      /schema/properties/opt_out_assist"
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "422":
          $ref: "#/paths/~1v1~110dlc~1throughputs/get/responses/422"
    patch:
      tags:
        - Account
      summary: Update account attributes, only the primary account is allowed to
        update the account attributes.
      description: Update account attributes
      operationId: updateAccount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                opt_out_assist:
                  description: >
                    Specifies whether opt out assist is enabled for this
                    account. On a campaign, indicated whether it's enabled on
                    the primary account of the campaign's brand. It is only
                    possible to enable opt out assist.
                  type: boolean
                  example: true
              required:
                - opt_out_assist
      responses:
        "204":
          description: No Content
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "403":
          description: Forbidden action
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorCouldNotRemoveNumber/allOf/0"
              example:
                type: https://developer.vonage.com/api-errors#forbidden
                title: Permission denied
                detail: Your account does not have permission to perform this action
                instance: 3c2548d132ca4b09870da17d56969a75
        "422":
          $ref: "#/paths/~1v1~110dlc~1throughputs/get/responses/422"
  /v1/10dlc/brands:
    get:
      parameters:
        - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1appeal~1evidence/parameters\
            /0"
        - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1appeal~1evidence/parameters\
            /1"
        - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1appeal~1evidence/parameters\
            /2"
        - in: query
          name: status
          description: >
            One or multiple status can be given. Thus `ACTIVE` and `SUSPENDED`.
            The endpoint then returns the brands with the chosen status. If no
            status is chosen, both `ACTIVE` and `SUSPENDED` brands would be
            returned.
          required: false
          schema:
            enum:
              - ACTIVE
              - SUSPENDED
              - TERMINATED
              - DELETED
            type: string
      tags:
        - Brands
      summary: Get all brands with specific Account ID.
      description: Retrieve all brands with Account ID.
      operationId: listBrands
      responses:
        "200":
          description: List of brands that are associated with an account
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/responses/MultiNumbersResponse/content/application~1json/sc\
                      hema/allOf/0"
                  - type: object
                    properties:
                      _embedded:
                        type: object
                        properties:
                          brands:
                            type: array
                            items:
                              $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
                                ntent/application~1json/schema"
                      _links:
                        type: object
                        properties:
                          self:
                            type: object
                            properties:
                              href:
                                type: string
                                example: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK?page=2
                          next:
                            type: object
                            properties:
                              href:
                                type: string
                                example: https://api.nexmo.com/v1/10dlc/brands/?page=3
                          previous:
                            type: object
                            properties:
                              href:
                                type: string
                                example: https://api.nexmo.com/v1/10dlc/brands/?page=1
                          first:
                            type: object
                            properties:
                              href:
                                type: string
                                example: https://api.nexmo.com/v1/10dlc/brands/?page=1
                          last:
                            type: object
                            properties:
                              href:
                                type: string
                                example: https://api.nexmo.com/v1/10dlc/brands/?page=10
              examples:
                simple:
                  value:
                    page_size: 10
                    page: 1
                    total_pages: 3
                    total_items: 2
                    _embedded:
                      brands:
                        ABCBLQ:
                          value:
                            brand_id: ABCBLQ
                            account_id: abcd1234
                            primary_account_id: abcd1234
                            entity_type: PUBLIC_PROFIT
                            first_name: John
                            last_name: Smith
                            display_name: Vonage
                            company_name: Vonage
                            ein: 20-1111111
                            ein_issuing_country: US
                            universal_ein: 20-1111111
                            alt_business_id_type: DUNS
                            alt_business_id: "150483782"
                            phone: "15556660001"
                            mobile_phone: "123123222334"
                            street: 23 Main Street
                            city: Holmdel
                            state: NJ
                            postal_code: "07733"
                            country: US
                            email: devrel@vonage.com
                            stock_symbol: VG
                            stock_exchange: NASDAQ
                            website: https://vonage.com
                            vertical: TECHNOLOGY
                            brand_relationship: BASIC_ACCOUNT
                            identity_status: PENDING
                            partner: true
                            shared: true
                            owner: true
                            tcr_status: ACTIVE
                            status: ACTIVE
                            campaign_count: 0
                            carrier_suspensions:
                              - {}
                            reseller: true,
                            created_date: 2019-08-24T14:15:22Z
                            verified_date: 2019-09-24T14:15:22Z
                            last_updated: 2019-09-24T14:15:22Z
                            optional_attributes: {}
                            _links:
                              self:
                                href: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK
                              campaigns:
                                href: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK/campaigns
                              usecases:
                                href: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK/usecases
                        BLQKOPK:
                          value:
                            brand_id: BLQKOPK
                            account_id: abcd1234
                            primary_account_id: abcd1234
                            entity_type: PUBLIC_PROFIT
                            first_name: John
                            last_name: Smith
                            display_name: Vonage
                            company_name: Vonage
                            ein: 20-1111111
                            ein_issuing_country: US
                            universal_ein: 20-1111111
                            alt_business_id_type: DUNS
                            alt_business_id: "150483782"
                            phone: "15556660001"
                            mobile_phone: "123123222334"
                            street: 23 Main Street
                            city: Holmdel
                            state: NJ
                            postal_code: "07733"
                            country: US
                            email: devrel@vonage.com
                            stock_symbol: VG
                            stock_exchange: NASDAQ
                            website: https://vonage.com
                            vertical: TECHNOLOGY
                            brand_relationship: BASIC_ACCOUNT
                            identity_status: PENDING
                            partner: true
                            shared: true
                            owner: true
                            tcr_status: ACTIVE
                            status: ACTIVE
                            campaign_count: 0
                            carrier_suspensions:
                              - {}
                            reseller: true,
                            created_date: 2019-08-24T14:15:22Z
                            verified_date: 2019-09-24T14:15:22Z
                            last_updated: 2019-09-24T14:15:22Z
                            optional_attributes: {}
                            _links:
                              self:
                                href: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK
                              campaigns:
                                href: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK/campaigns
                              usecases:
                                href: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK/usecases
                    _links:
                      first:
                        href: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK?page=1
                      last:
                        href: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK?page=3
                      previous:
                        href: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK?page=1
                      next:
                        href: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK?page=3
                      self:
                        href: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK?page=2
        "400":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/400"
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "422":
          $ref: "#/paths/~1v1~110dlc~1throughputs/get/responses/422"
    post:
      tags:
        - Brands
      summary: Create a new brand for your account
      description: >
        Create a new brand for your account. A brand is a business or individual

        identity behind the campaign. Most accounts will be created immediately,

        and you can move on to qualifying a new campaign for the brand. Some

        brands may require additional vetting. In such cases, please move on to

        the vetting API endpoints before attempting to create a campaign.


        Please note the `entity_type` field, as that field value will help determine which fields are required.`
      operationId: createBrand
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - title: Non-Profit
                  x-tab-id: NonProfit
                  allOf:
                    - description: Fields required to create a brand with type other than
                        PUBLIC_PROFIT or SOLE_PROPRIETOR.
                      allOf:
                        - $ref: "#/paths/~1v1~110dlc~1brands/post/responses/201/content/application~1json\
                            /schema/allOf/0"
                        - type: object
                          properties:
                            account_id:
                              $ref: "#/components/schemas/VettingRequest/properties/account_id"
                          required:
                            - account_id
                            - entity_type
                            - display_name
                            - company_name
                            - vertical
                            - ein
                            - phone
                            - email
                            - street
                            - city
                            - state
                            - postal_code
                            - country
                - title: Private Company
                  x-tab-id: PrivateCompany
                  allOf:
                    - $ref: "#/paths/~1v1~110dlc~1brands/post/requestBody/content/application~1json/s\
                        chema/oneOf/0/allOf/0"
                - title: Public Company
                  x-tab-id: PublicCompany
                  allOf:
                    - description: Fields required to create PUBLIC_PROFIT brand.
                      allOf:
                        - $ref: "#/paths/~1v1~110dlc~1brands/post/responses/201/content/application~1json\
                            /schema/allOf/0"
                        - type: object
                          properties:
                            account_id:
                              $ref: "#/components/schemas/VettingRequest/properties/account_id"
                          required:
                            - account_id
                            - entity_type
                            - display_name
                            - company_name
                            - vertical
                            - ein
                            - phone
                            - email
                            - stock_symbol
                            - stock_exchange
                            - street
                            - city
                            - state
                            - postal_code
                            - country
                - title: Sole Proprietor
                  x-tab-id: SoleProprietor
                  allOf:
                    - description: Fields required to create SOLE_PROPRIETOR brand.
                      allOf:
                        - $ref: "#/paths/~1v1~110dlc~1brands/post/responses/201/content/application~1json\
                            /schema/allOf/0"
                        - type: object
                          properties:
                            account_id:
                              $ref: "#/components/schemas/VettingRequest/properties/account_id"
                          required:
                            - account_id
                            - entity_type
                            - first_name
                            - last_name
                            - display_name
                            - company_name
                            - ein
                            - phone
                            - email
                            - street
                            - city
                            - state
                            - postal_code
                            - country
                            - mobile_phone
              discriminator:
                propertyName: entity_type
      responses:
        "201":
          $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200"
        "400":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/400"
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "409":
          $ref: "#/paths/~1v1~110dlc~1resellers/post/responses/409"
        "422":
          $ref: "#/paths/~1v1~110dlc~1throughputs/get/responses/422"
  "/v1/10dlc/brands/{brand_id}":
    parameters:
      - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/parameters/0"
    get:
      tags:
        - Brands
      summary: Get a brand by Brand ID.
      description: Retrieve a specific brand with Brand ID.
      operationId: getBrand
      responses:
        "200":
          $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200"
        "400":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/400"
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "422":
          $ref: "#/paths/~1v1~110dlc~1throughputs/get/responses/422"
    patch:
      tags:
        - Brands
      summary: Partially update a brand
      description: >
        This operation applies a partial update of a brand enabling the CSP to
        keep brand details updated in the registry. 

        Please note that if vetting is successfully completed, the `ein` `ein_issuing_country` and `entity_type` fields will be locked and the associated values cannot be changed.
      operationId: patchBrand
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Fields that are editable for a brand
              type: object
              properties:
                company_name:
                  type: string
                  maxLength: 255
                  description: Legal company name.
                  example:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
                      ntent/application~1json/examples/vonage/value/company_nam\
                      e"
                first_name:
                  type: string
                  maxLength: 100
                  description: First name of business contact. **NB:** Required for
                    `SOLE_PROPRIETOR` entity type
                  example:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
                      ntent/application~1json/examples/vonage/value/first_name"
                last_name:
                  type: string
                  maxLength: 100
                  description: last name of business contact. **NB:** Required for
                    `SOLE_PROPRIETOR` entity type
                  example:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
                      ntent/application~1json/examples/vonage/value/last_name"
                display_name:
                  type: string
                  maxLength: 255
                  description: Display or marketing name of the brand.
                  example:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
                      ntent/application~1json/examples/vonage/value/display_nam\
                      e"
                ein:
                  type: string
                  pattern: ^([0-9]{2}[-]?[0-9]{7})$|^([0-9]{3}[-]?[0-9]{2}[-]?[0-9]{4})$
                  maxLength: 21
                  description: (Required for Non-profit) Government assigned corporate tax ID. EIN
                    is 9-digits in U.S.A.
                  example:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
                      ntent/application~1json/examples/vonage/value/ein"
                ein_issuing_country:
                  type: string
                  pattern: ^[A-Z]{2}$
                  description: ISO3166-Alpha2 country code.
                  example:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
                      ntent/application~1json/examples/vonage/value/ein_issuing\
                      _country"
                entity_type:
                  type: string
                  enum:
                    - PRIVATE_PROFIT
                    - PUBLIC_PROFIT
                    - NON_PROFIT
                    - SOLE_PROPRIETOR
                    - GOVERNMENT
                  description: >
                    Entity type behind the brand.

                    This is the form of business establishment.

                    **NB:** The `GOVERNMENT` entity_type is ONLY applicable to US governmental agencies (FBI, CIA, Department of defence etc.) Other countries’ governmental agencies must use `NON_PROFIT` entity type.

                    Please refer to the [/enum](#Enums) endpoint for an update list of valid values.
                  example:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
                      ntent/application~1json/examples/vonage/value/entity_type"
                website:
                  type: string
                  description: Brand website URL.
                  example:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
                      ntent/application~1json/examples/vonage/value/website"
                phone:
                  type: string
                  description: Valid phone number in E.164 international format without the +
                    prefix.
                  example:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
                      ntent/application~1json/examples/vonage/value/phone"
                mobile_phone:
                  $ref: "#/components/schemas/Reseller/properties/phone"
                street:
                  type: string
                  maxLength: 100
                  description: Street number and name.
                  example:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
                      ntent/application~1json/examples/vonage/value/street"
                city:
                  type: string
                  maxLength: 100
                  description: City name
                  example:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
                      ntent/application~1json/examples/vonage/value/city"
                state:
                  type: string
                  maxLength: 20
                  description: State. Must be 2 letters code for U.S.A.
                  example:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
                      ntent/application~1json/examples/vonage/value/state"
                postal_code:
                  type: string
                  maxLength: 10
                  description: Postal codes. Use 5 digit zipcode for United States
                  example:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
                      ntent/application~1json/examples/vonage/value/postal_code"
                country:
                  type: string
                  description: ISO3166-Alpha2 country code.
                  example:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
                      ntent/application~1json/examples/vonage/value/country"
                email:
                  type: string
                  maxLength: 100
                  description: Valid email address of brand support contact.
                  example:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
                      ntent/application~1json/examples/vonage/value/email"
                stock_symbol:
                  type: string
                  maxLength: 10
                  description: Stock Symbol - Required if entity_type=PUBLIC_PROFIT.
                  example:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
                      ntent/application~1json/examples/vonage/value/stock_symbo\
                      l"
                stock_exchange:
                  type: string
                  maxLength: 10
                  description: Required if entity_type=PUBLIC_PROFIT.
                  enum:
                    - NONE
                    - AMEX
                    - AMX
                    - ASX
                    - B3
                    - BME
                    - BSE
                    - FRA
                    - ICEX
                    - JSE
                    - KRX
                    - LON
                    - NASDAQ
                    - NSE
                    - NYSE
                    - OMX
                    - SEHK
                    - SSE
                    - STO
                    - SWX
                    - SZSE
                    - TSX
                    - TWSE
                    - VSE
                  example:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
                      ntent/application~1json/examples/vonage/value/stock_excha\
                      nge"
                vertical:
                  type: string
                  description: >
                    Business/industry segment of this campaign.

                    Use the [/enum](#Enums)  endpoint to get an updated list of verticals
                  enum:
                    - REAL_ESTATE
                    - HEALTHCARE
                    - ENERGY
                    - ENTERTAINMENT
                    - RETAIL
                    - AGRICULTURE
                    - INSURANCE
                    - EDUCATION
                    - HOSPITALITY
                    - FINANCIAL
                    - GAMBLING
                    - CONSTRUCTION
                    - NGO
                    - MANUFACTURING
                    - GOVERNMENT
                    - TECHNOLOGY
                    - COMMUNICATION
                  example:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
                      ntent/application~1json/examples/vonage/value/vertical"
      responses:
        "200":
          $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200"
        "400":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/400"
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "422":
          $ref: "#/paths/~1v1~110dlc~1throughputs/get/responses/422"
    delete:
      tags:
        - Brands
      summary: Remove a specific brand from your account
      description: >
        This operation deletes a brand.


        A brand can be deleted if it does not have active campaigns.

        Once a brand is deleted, it will be in a `DELETED` state and it cannot be restored to an `ACTIVE` state.

        Deleted brands will remain in the system for a period of time and can be searched using the GET/brand endpoint with the query filter `status` = ACTIVE.

        While deleted brands are searchable, all other API endpoints involving a deleted brand will result in a `502 - Brand not found` error.
      operationId: deleteBrand
      responses:
        "204":
          description: No Content
        "400":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/400"
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "409":
          $ref: "#/paths/~1v1~110dlc~1resellers/post/responses/409"
        "422":
          $ref: "#/paths/~1v1~110dlc~1throughputs/get/responses/422"
  "/v1/10dlc/brands/{brand_id}/feedback":
    get:
      parameters:
        - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/parameters/0"
      tags:
        - Brands
      operationId: getBrandFeedback
      summary: Get feedback of a brand by Brand ID.
      description: >
        Retrieve feedback of a specific brand with Brand ID.


        The endpoint will only respond correctly if the brand's identity status is already checked.

        If the brand's identity status is still `PENDING`, it will answer with a 422 error.


        Also, if the brand's identity status is not `UNVERIFIED`, the response should be empty.
      responses:
        "200":
          description: Return feedback for a brand
          content:
            application/json:
              schema:
                type: object
                properties:
                  categories:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        fields:
                          type: array
                          items:
                            type: string
        "400":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/400"
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "422":
          $ref: "#/paths/~1v1~110dlc~1throughputs/get/responses/422"
  "/v1/10dlc/brands/{brand_id}/usecases/{usecase}":
    parameters:
      - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/parameters/0"
      - in: path
        name: usecase
        description: Name of a use case
        required: true
        schema:
          type: string
          enum:
            - CUSTOMER_CARE
            - POLLING_VOTING
            - HIGHER_EDUCATION
            - PUBLIC_SERVICE_ANNOUNCEMENT
            - MARKETING
            - SECURITY_ALERT
            - DELIVERY_NOTIFICATION
            - ACCOUNT_NOTIFICATION
            - 2FA
            - FRAUD_ALERT
            - TRIAL
            - CHARITY
            - POLITICAL
            - EMERGENCY
            - SWEEPSTAKE
            - CONVERSATIONAL
            - MIXED
            - CARRIER_EXEMPT
            - SOCIAL
            - LOW_VOLUME
    get:
      tags:
        - Brands
      description: |
        Check to see if a brand is qualified to run a campaign against a given
        use case. A brand must check this endpoint before attempting to generate
        a new campaign.

        If the use case is not qualified, the brand may request additional third
        party vetting to see if the additional use cases can be added to their
        account.
      summary: Check Use Case Qualifications for a Brand
      operationId: qualifyBrandUseCase
      responses:
        "200":
          description: A valid qualified use case for a brand
          content:
            application/json:
              schema:
                type: object
                properties:
                  usecase:
                    type: string
                    example:
                      $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1usecases~1%7Busecase%7D/get\
                        /responses/200/content/application~1json/examples/simpl\
                        e/value/usecase"
                  quarterly_fee:
                    type: integer
                    format: int32
                    example:
                      $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1usecases~1%7Busecase%7D/get\
                        /responses/200/content/application~1json/examples/simpl\
                        e/value/quarterly_fee"
                  annual_fee:
                    type: integer
                    format: int32
                    example:
                      $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1usecases~1%7Busecase%7D/get\
                        /responses/200/content/application~1json/examples/simpl\
                        e/value/annual_fee"
                  mno_metadata:
                    type: array
                    items:
                      type: object
                      properties:
                        network_id:
                          type: string
                          description: Network ID of the MNO.
                          example: "10017"
                        mno:
                          type: string
                          description: Name of the MNO.
                          example: AT&T
                        status:
                          type: string
                          description: MNO campaign operation status. Please refer to the
                            campaign_op_status property of the /enum endpoint
                            response for an updated list of valid values.
                        mno_support:
                          type: boolean
                          description: If 'false', then the desired usecase cannot be supported by the
                            MNO.
                        mno_review:
                          type: boolean
                          description: If 'true', then the submitted campaign is subject to the MNO
                            (manual) review process.
                        qualify:
                          type: boolean
                          description: If 'false', then the brand does not qualify for the desired usecase
                            on the MNO.
                        min_msg_samples:
                          type: integer
                          description: The minimum number of message samples required by MNO for
                            submission of the desired usecase.
                          example: 2
                        req_subscriber_opt_in:
                          type: boolean
                          description: If 'true' then MNO requires the subscriber to opt-into the campaign
                            before the message may be sent to the subscriber.
                            The opt-in mechanism can be mobile or web opt-in.
                        req_subscriber_opt_out:
                          type: boolean
                          description: If 'true' then MNO requires a campaign to support an opt-out
                            mechanism through MO stop keywords such as 'STOP',
                            'QUIT'. Upon receive the STOP message from a
                            subscriber, the campaign must stop sending messages
                            to the subscriber immediately.
                        req_subscriber_help:
                          type: boolean
                          description: If 'true' then MNO requires a campaign to support a 'help'
                            mechanism through MO help key words such as 'HELP',
                            'INFO'.
                        no_embedded_link:
                          type: boolean
                          description: If 'true' then MNO forbids call-to-action link/URL to be embedded
                            in all messages sent to the subscriber.
                        no_embedded_phone:
                          type: boolean
                          description: If 'true' then MNO forbids call-to-action phone number to be
                            embedded in all messages sent to the subscriber.
                        att_msg_class:
                          type: string
                          description: (Only for AT&T). Message class assigned to the campaign by MNO.
                            Please refer to the AT&T 10DLC guide for a complete
                            list of available message class and definition.
                          example: Q
                        att_tpm:
                          type: integer
                          description: (Only for AT&T). SMS Message TPM (throughput per minute) qualified
                            by the brand for the desired usecase.
                          example: 3000
                        att_mms_tpm:
                          type: integer
                          description: (Only for AT&T). MMS Message TPM (throughput per minute) qualified
                            by the brand for the desired usecase.
                          example: 3000
                        att_number_based:
                          type: boolean
                          description: (Only for AT&T). Whether is the MNO applying the TPM per number or
                            per campaign.
                        tmo_brand_tier:
                          type: string
                          enum:
                            - LOW
                            - LOWER_MID
                            - UPPER_MID
                            - TOP
                            - UNCAPPED
                          description: (Only for T-Mobile). Daily message volume is restricted based on
                            brand tier or brand qualification. The daily volume
                            restriction applies to brand across campaigns and
                            CSPs. Please refer to the /enum endpoint for an
                            updated list of valid values.
                          example: LOW
                        tmo_tpd:
                          type: integer
                          description: (Only for TMobile). Message TPD (throughput per day) qualified by
                            the brand for the desired usecase.
                        complaints:
                          type: array
                          items:
                            type: object
                            properties:
                              complaints:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    description:
                                      description: Description of this MNO complaint.
                                      type: string
                                      maxLength: 65535
                                    dca:
                                      type: string
                                      description: dca name
                                      example: SINCH
                                    created_at:
                                      description: Date-time when this record was created.
                                      type: string
                                      format: date-time
                    example:
                      $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1usecases~1%7Busecase%7D/get\
                        /responses/200/content/application~1json/examples/simpl\
                        e/value/mno_metadata"
              examples:
                simple:
                  value:
                    usecase: POLITICAL
                    quarterly_fee: 30
                    annual_fee: 30
                    mno_metadata:
                      - network_id: "10017"
                        min_msg_samples: 2
                        att_msg_class: Q
                        req_subscriber_opt_in: false
                        req_subscriber_help: false
                        req_subscriber_opt_out: false
                        mno: AT&T
                        att_tpm: 2000
                        mno_support: true
                        mno_review: true
                        no_embedded_link: true
                        qualify: true
                        tmo_brand_tier: null
                      - network_id: "10035"
                        min_msg_samples: 2
                        req_subscriber_opt_in: false
                        req_subscriber_help: false
                        req_subscriber_opt_out: false
                        mno: TMO
                        mno_support: true
                        mno_review: true
                        no_embedded_link: true
                        no_embedded_phone: true
                        qualify: true
                        tmo_brand_tier: LOW
                        att_tpm: null
                        att_msg_class: null
        "400":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/400"
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "422":
          $ref: "#/paths/~1v1~110dlc~1throughputs/get/responses/422"
  "/v1/10dlc/brands/{brand_id}/start_verification":
    post:
      parameters:
        - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/parameters/0"
      tags:
        - OTP
      summary: Triggers an OTP verification for Sole proprietor brand.
      description: Triggers an OTP verification for Sole proprietor brand. OTP message
        is sent to brand's registered mobile phone number.
      operationId: startverification
      requestBody:
        required: false
        description: Optional body to customize the OTP flow.
        content:
          application/json:
            schema:
              type: object
              description: |
                Customized OTP message.
              properties:
                verify_sms:
                  description: |
                    Template OTP message to be sent to the brand's mobilePhone.
                    Must contain either @OTP_PIN@ or @OTP_YES@ macro element.
                    If @OTP_YES@ macro is only with SMS reply confirmation flow.
                  example: Your verification code is @OTP_PIN@
                  type: string
                  pattern: ^(.*)@(OTP_PIN|OTP_YES)@(.*)$
                success_sms:
                  description: >
                    SMS to be sent to the brand's mobile phone upon successful
                    SMS reply OTP confirmation.
                  example: Your verification code has been confirmed successfully
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  brand_id:
                    $ref: "#/components/schemas/ThroughputItem/properties/brand_id"
                  reference_id:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1verification~1%7Breference_\
                      id%7D/get/parameters/1/schema"
        "400":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/400"
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "422":
          $ref: "#/paths/~1v1~110dlc~1throughputs/get/responses/422"
  "/v1/10dlc/brands/{brand_id}/verify":
    post:
      parameters:
        - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/parameters/0"
      tags:
        - OTP
      summary: Verify the OTP code sent to brand's registered mobile phone number.
      description: Verify an OTP code sent to brand's registered mobile phone number.
      operationId: verify
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - otp_pin
              properties:
                otp_pin:
                  description: Code received by the brand's registered mobile phone number after
                    starting the OTP verification process.
                  type: string
                  minLength: 6
                  maxLength: 6
      responses:
        "204":
          description: No Content
        "400":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/400"
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "403":
          $ref: "#/paths/~1v1~110dlc~1account/patch/responses/403"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "422":
          $ref: "#/paths/~1v1~110dlc~1throughputs/get/responses/422"
  "/v1/10dlc/brands/{brand_id}/verification/{reference_id}":
    get:
      parameters:
        - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/parameters/0"
        - in: path
          name: reference_id
          description: SMS OTP reference ID is an alphanumeric identifier (with 'OTP'
            prefix).
          required: true
          schema:
            description: Reference ID for tracking the status of the OTP request.
            type: string
            example: OTP1234567
      tags:
        - OTP
      summary: Retrieves SMS OTP status by referenceId.
      description: API endpoint provides two key pieces of information; OTP verify
        status and SMS delivery status of the OTP message.
      operationId: getOTPStatus
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  brand_id:
                    $ref: "#/components/schemas/ThroughputItem/properties/brand_id"
                  reference_id:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1verification~1%7Breference_\
                      id%7D/get/parameters/1/schema"
                  mobile_phone:
                    $ref: "#/components/schemas/Reseller/properties/phone"
                  request_date:
                    description: SMS OTP initial requested timestamp.
                    type: string
                    format: date-time
                  verity_date:
                    description: OTP verification complete timestamp.
                    type: string
                    format: date-time
                  delivery_status:
                    description: The most recent SMS delivery status as provided by an SMS service
                      provider, if supported by the SMS service provider. The
                      delivery status information is not guaranteed to be timely
                      or consistent with OTP verify status. This information
                      should only be used to facilitate triaging SMS
                      derivability issue.
                    type: string
                    enum:
                      - DELIVERED_HANDSET
                      - DELIVERED_GATEWAY
                      - FAILED_ROUTING
                      - FAILED_BLOCKED
                      - FAILED_EXPIRED
                      - FAILED_UNKNOWN
                      - UNKNOWN_STATUS
                      - IN_TRANSIT
                  delivery_status_date:
                    description: Timestamp corresponding to the updated SMS OTP delivery status.
                      This field is `null` if delivery_status is `null`.
                    type: string
                    format: date-time
                  delivery_status_details:
                    description: OTP SMS delivery status details provided by the OTP SMS service
                      provider, if supported by the SMS service provider.
                    type: string
                    maxLength: 1024
                    format: date-time
        "400":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/400"
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "403":
          $ref: "#/paths/~1v1~110dlc~1account/patch/responses/403"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "422":
          $ref: "#/paths/~1v1~110dlc~1throughputs/get/responses/422"
  "/v1/10dlc/brands/{brand_id}/vetting/requests":
    parameters:
      - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/parameters/0"
    get:
      tags:
        - Brand vettings
      summary: Retrieve a list of vetting records for a brand
      description: Retrieve a list of vetting records for a brand
      operationId: getVettingRequests
      responses:
        "200":
          description: Returns a list of vetting requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VettingRequest"
        "400":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/400"
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "422":
          $ref: "#/components/responses/ErrorVettingParameters"
    post:
      tags:
        - Brand vettings
      summary: Request vetting for a brand
      description: >
        This operation requests the specific vetting provider to perform

        vetting on a brand. This authorizes Vonage to allow the vetting

        partner access to the particular brand information stored in The Campaign Registry (TCR). This request

        can take anywhere from a few minutes to 48 hours.
      operationId: requestVetting
      requestBody:
        $ref: "#/components/requestBodies/VettingRequest"
      responses:
        "200":
          $ref: "#/components/responses/VettingRequest"
        "422":
          $ref: "#/components/responses/ErrorVettingParameters"
        "429":
          $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1vetting~1requests/put/respo\
            nses/429"
    put:
      tags:
        - Brand vettings
      summary: Import an existing vetting request to Vonage
      description: >
        Vetting requests can either be automated or manual. In the case that a

        vetting request has been manually performed or was requested outside of

        Vonage, you can request that the request be imported. The vetting

        request will be validated and, if successful, saved with the brand in TCR and the vetting record will be considered for future campaign qualification. This

        validation process is not immediate.
      operationId: importVettingRequest
      requestBody:
        $ref: "#/components/requestBodies/ExistingVettingRequest"
      responses:
        "200":
          $ref: "#/components/responses/VettingRequest"
        "409":
          $ref: "#/components/responses/ErrorVettingConflict"
        "422":
          $ref: "#/components/responses/ErrorVettingParameters"
        "429":
          description: Too many requests
          content:
            application/json:
              schema:
                properties:
                  type:
                    type: string
                    example: https://developer.vonage.com/api-errors#throttled
                  title:
                    type: string
                    example: Too many requests
                  detail:
                    type: string
                    example: Your account has reached it's API limit and has been throttled
                  instance:
                    $ref: "#/components/schemas/ErrorCouldNotRemoveNumber/allOf/0/properties/instan\
                      ce"
                  retry_after:
                    description: Time in seconds the client should wait before sending a new request
                    type: integer
                    example: 30
  "/v1/10dlc/brands/{brand_id}/vetting/requests/{vetting_id}/appeal":
    parameters:
      - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/parameters/0"
      - in: path
        name: vetting_id
        description: Vetting ID
        required: true
        schema:
          type: string
    post:
      tags:
        - Brand vettings
      summary: Request vetting appeal for a brand
      description: |
        This sends an appeal for the selected vetting.
      operationId: postBrandVettingAppeal
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - categories
                - evidence_ids
                - explanation
              properties:
                categories:
                  $ref: "#/components/schemas/VettingAppealCategories"
                evidence_ids:
                  type: array
                  items:
                    type: string
                  minItems: 0
                  maxItems: 10
                  description: |
                    An array referencing previously uploaded evidence files IDs.
                explanation:
                  type: string
                  maxLength: 1024
                  description: Explanation of why the appeal should be granted.
              example:
                categories:
                  - LOW_SCORE
                evidence_ids:
                  - OWUwZTA5MmUtOGNjYS00ZGI0LWFkNWUtZTg4MmUwNzhjMDUy
                  - ZDk4NzhiMzktY2IwZC00ZTg1LTg0OTEtZWI3ZmI0ZmM3NDM5
                explanation: We think the low score is not warranted because ...
      responses:
        "204":
          description: No Content
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "422":
          $ref: "#/components/responses/ErrorVettingParameters"
  "/v1/10dlc/brands/{brand_id}/revet":
    parameters:
      - name: brand_id
        in: path
        description: TCR Brand ID
        required: true
        schema:
          $ref: "#/components/schemas/ThroughputItem/properties/brand_id"
    post:
      tags:
        - Brand vettings
      summary: Request a brand revetting
      description: >
        This operation allows you to revet the brand; however, revetting is

        allowed once after the successful brand registration. Search for campaigns you registered by any combination of `brand_id`, `reseller_id`, `status`, `usecase`, and `vertical`. This operation supports pagination with a maximum of 500 records per fetch. Values for `brand_id`, `reseller_id`, `status`, `usecase`, and `vertical` must be exact matches if supplied.
      operationId: brandRevet
      responses:
        "200":
          description: Return a single brand
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      account_id:
                        $ref: "#/components/schemas/VettingRequest/properties/account_id"
                      primary_account_id:
                        $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/responses/20\
                          1/content/application~1json/schema/properties/primary\
                          _account_id"
                      entity_type:
                        $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D/patch/requestBody/content/ap\
                          plication~1json/schema/properties/entity_type"
                      first_name:
                        $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D/patch/requestBody/content/ap\
                          plication~1json/schema/properties/first_name"
                      last_name:
                        $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D/patch/requestBody/content/ap\
                          plication~1json/schema/properties/last_name"
                      display_name:
                        $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D/patch/requestBody/content/ap\
                          plication~1json/schema/properties/display_name"
                      company_name:
                        $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D/patch/requestBody/content/ap\
                          plication~1json/schema/properties/company_name"
                      ein:
                        $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D/patch/requestBody/content/ap\
                          plication~1json/schema/properties/ein"
                      ein_issuing_country:
                        $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D/patch/requestBody/content/ap\
                          plication~1json/schema/properties/ein_issuing_country"
                      universal_ein:
                        type: string
                        pattern: ^([0-9]{2}[-]?[0-9]{7})$|^([0-9]{3}[-]?[0-9]{2}[-]?[0-9]{4})$
                        maxLength: 50
                        description: Universal EIN of Brand, Read-Only
                        example:
                          $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
                            ntent/application~1json/examples/vonage/value/unive\
                            rsal_ein"
                      alt_business_id_type:
                        type: string
                        maxLength: 50
                        description: Required if alt_business_id is provided.
                        enum:
                          - DUNS
                          - GIIN
                          - LEI
                        example:
                          $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
                            ntent/application~1json/examples/vonage/value/alt_b\
                            usiness_id_type"
                      alt_business_id:
                        type: string
                        maxLength: 50
                        description: Required if alt_business_id_type is provided.
                        example:
                          $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
                            ntent/application~1json/examples/vonage/value/alt_b\
                            usiness_id"
                      phone:
                        $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D/patch/requestBody/content/ap\
                          plication~1json/schema/properties/phone"
                      mobile_phone:
                        $ref: "#/components/schemas/Reseller/properties/phone"
                      street:
                        $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D/patch/requestBody/content/ap\
                          plication~1json/schema/properties/street"
                      city:
                        $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D/patch/requestBody/content/ap\
                          plication~1json/schema/properties/city"
                      state:
                        $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D/patch/requestBody/content/ap\
                          plication~1json/schema/properties/state"
                      postal_code:
                        $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D/patch/requestBody/content/ap\
                          plication~1json/schema/properties/postal_code"
                      country:
                        $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D/patch/requestBody/content/ap\
                          plication~1json/schema/properties/country"
                      email:
                        $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D/patch/requestBody/content/ap\
                          plication~1json/schema/properties/email"
                      stock_symbol:
                        $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D/patch/requestBody/content/ap\
                          plication~1json/schema/properties/stock_symbol"
                      stock_exchange:
                        $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D/patch/requestBody/content/ap\
                          plication~1json/schema/properties/stock_exchange"
                      website:
                        $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D/patch/requestBody/content/ap\
                          plication~1json/schema/properties/website"
                      vertical:
                        $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D/patch/requestBody/content/ap\
                          plication~1json/schema/properties/vertical"
                  - description: Fields that are added to a brand by the system
                    type: object
                    properties:
                      brand_id:
                        $ref: "#/components/schemas/ThroughputItem/properties/brand_id"
                      campaign_count:
                        type: integer
                        description: Number of campaigns associated with the brand
                        example: 5
                      carrier_suspensions:
                        type: array
                        items:
                          $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/responses/20\
                            1/content/application~1json/schema/properties/carri\
                            er_brand_suspensions/items"
                      brand_relationship:
                        description: Brand relationship level.
                        type: string
                        example: BASIC_ACCOUNT
                        enum:
                          - BASIC_ACCOUNT
                          - SMALL_ACCOUNT
                          - MEDIUM_ACCOUNT
                          - LARGE_ACCOUNT
                          - KEY_ACCOUNT
                      partner:
                        description: Flag indicating the brand is related to a partner customer (brand &
                          campaigns registered directly on TCR and shared with
                          Vonage)
                        type: boolean
                      shared:
                        description: True when the brand is shared with the current Account ID.
                        type: boolean
                      owner:
                        description: True when the brand is owned by the requesting account.
                        type: boolean
                      status:
                        description: Brand status.
                        type: string
                      reference_id:
                        description: Unique identifier for preventing duplicate brand registration into
                          TCR.
                        type: string
                      verified_date:
                        description: Date-time when brand mobile phone was verified.
                        type: string
                        format: date-time
                      created_date:
                        type: string
                        pattern: ^\d{4}-[01]\d-[0-3]\d [0-2]\d:[0-5]\d:[0-5]\d$
                        example:
                          $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
                            ntent/application~1json/examples/vonage/value/creat\
                            ed_date"
                      last_updated:
                        type: string
                        pattern: ^\d{4}-[01]\d-[0-3]\d [0-2]\d:[0-5]\d:[0-5]\d$
                        example:
                          $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
                            ntent/application~1json/examples/vonage/value/last_\
                            updated"
                  - type: object
                    properties:
                      _links:
                        type: object
                        properties:
                          self:
                            type: object
                            properties:
                              href:
                                type: string
                                example: https://api.nexmo.com/10dlc/brands/BLQKOPK
                          campaigns:
                            type: object
                            properties:
                              href:
                                type: string
                                example: https://api.nexmo.com/10dlc/brands/BLQKOPK/campaigns
              examples:
                vonage:
                  value:
                    brand_id: BLQKOPK
                    account_id: abcd1234
                    primary_account_id: abcd1234
                    entity_type: PUBLIC_PROFIT
                    first_name: John
                    last_name: Smith
                    display_name: Vonage
                    company_name: Vonage
                    ein: 20-1111111
                    ein_issuing_country: US
                    universal_ein: 20-1111111
                    alt_business_id_type: DUNS
                    alt_business_id: "150483782"
                    phone: "15556660001"
                    mobile_phone: "123123222334"
                    street: 23 Main Street
                    city: Holmdel
                    state: NJ
                    postal_code: "07733"
                    country: US
                    email: devrel@vonage.com
                    stock_symbol: VG
                    stock_exchange: NASDAQ
                    website: https://vonage.com
                    vertical: TECHNOLOGY
                    brand_relationship: BASIC_ACCOUNT
                    identity_status: PENDING
                    partner: true
                    shared: true
                    owner: true
                    tcr_status: ACTIVE
                    status: ACTIVE
                    campaign_count: 0
                    carrier_suspensions:
                      - {}
                    reseller: true,
                    created_date: 2019-08-24 14:15:22
                    verified_date: 2019-09-24 14:15:22
                    last_updated: 2019-09-24 14:15:22
                    optional_attributes: {}
                    _links:
                      self:
                        href: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK
                      campaigns:
                        href: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK/campaigns
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "422":
          $ref: "#/paths/~1v1~110dlc~1throughputs/get/responses/422"
  "/v1/10dlc/brands/{brand_id}/appeal/evidence":
    parameters:
      - in: query
        name: page
        description: Page of results to jump to
        required: false
        schema:
          description: Page Offset
          example: 2
          type: integer
          minimum: 1
      - in: query
        name: page_size
        description: Number of results per page
        required: false
        schema:
          description: Items per page
          example: 10
          type: integer
          minimum: 0
      - description: >
          Narrow down results based on matching conditions.

          Follow the [comprehensive guide](https://developer.vonage.com/messages/10-dlc/filter) to learn how to craft filter queries.
        in: query
        name: filter
        required: false
        schema:
          type: array
          title: Filter
          description: >
            This is a double array representing filters combined with AND and OR
            operators.

            The first level is combined with an AND operator and the second one with an OR.


            **Note**: the total number of rules should not exceed 3.


            Example:

              The filter

              [[{"field":"name","type":"==","value":"doe"},{"field":"age","type":"<=","value":42}],[{"field":"address.country","type":"regexp","value":"^EN$|^FR$"}]]

              is URL-encoded as a query parameter:

              filter=%5B%5B%7B%22field%22%3A%22name%22%2C%22type%22%3A%22%3D%3D%22%2C%22value%22%3A%22doe%22%7D%2C%7B%22field%22%3A%22age%22%2C%22type%22%3A%22%3C%3D%22%2C%22value%22%3A42%7D%5D%2C%5B%7B%22field%22%3A%22address.country%22%2C%22type%22%3A%22regexp%22%2C%22value%22%3A%22%5EEN%24%7C%5EFR%24%22%7D%5D%5D

              the equivalent logic is:

              ((name==doe OR age<=42) AND (address.country match "EN" or "FR"))
          minItems: 1
          maxItems: 3
          items:
            type: array
            minItems: 1
            maxItems: 3
            items:
              type: object
              title: Rule
              description: Represents a single rule that can be combined into a filter.
              required:
                - field
                - type
                - value
              properties:
                field:
                  type: string
                  title: Field selector
                  description: >
                    The path used to to get the field of an input item to
                    evaluate against.

                    It can target a nested field, in which case it's dot-separated.
                  example: address.country
                type:
                  type: string
                  title: Type
                  description: The type of the rule
                  example: ==
                  enum:
                    - regexp
                    - "!="
                    - "!=$"
                    - "!=="
                    - "!^="
                    - "!~="
                    - <
                    - <=
                    - =
                    - =$
                    - ==
                    - ">"
                    - ">="
                    - ^=
                    - ~=
                value:
                  title: The value to evaluate against
                  example: NGO
                  oneOf:
                    - type: string
                    - type: number
                    - type: boolean
                    - type: integer
        examples:
          simple:
            description: Simple "age == 42" rule
            value:
              - - field: age
                  type: ==
                  value: 42
          combination:
            description: |
              Combination of AND or OR rules.
              ((name==doe OR age<=42) AND (address.country match "EN" or "FR"))
            value:
              - - field: name
                  type: ==
                  value: doe
                - field: age
                  type: <=
                  value: 42
              - - field: address.country
                  type: regexp
                  value: ^EN$|^FR$
      - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/parameters/0"
    get:
      tags:
        - Brand vettings
      summary: List vetting appeal evidence files
      description: |
        List files that can be used for vetting appeals.
      operationId: brandListAppealEvidence
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/200/content/application~1js\
                      on/schema/allOf/0"
                  - type: object
                    properties:
                      _embedded:
                        type: object
                        properties:
                          evidences:
                            type: array
                            items:
                              $ref: "#/components/schemas/AttachmentInfo"
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
    post:
      tags:
        - Brand vettings
      summary: Upload evidence for a vetting appeal
      description: >
        This operation allows you to import evidence files to be used to appeal
        an existing vetting.

        Multiple files can be uploaded in once to a maximum of 100MB per HTTP request.

        We expect the filename to be populated in the Content-Disposition header and

        the Content-Type to be set in each subpart.
      operationId: brandUploadAppealEvidence
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttachmentInfo"
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "422":
          $ref: "#/paths/~1v1~110dlc~1throughputs/get/responses/422"
  "/v1/10dlc/brands/{brand_id}/appeal/evidence/{evidence_id}":
    parameters:
      - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/parameters/0"
      - in: path
        name: evidence_id
        description: The ID of the evidence to download
        required: true
        schema:
          type: string
    get:
      tags:
        - Brand vettings
      summary: Download appeal evidence file
      description: >
        This operation allows you to download an evidence file.

        The Content-Type header might vary and will reflect the Mime-Type of the file.

        The Content-Disposition header will hold the filename.
      operationId: brandDownloadAppealEvidence
      responses:
        "200":
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
    delete:
      tags:
        - Brand vettings
      summary: Delete appeal evidence file
      operationId: deleteAppealEvidence
      description: |
        This operation allows you to delete an evidence file.
      responses:
        "204":
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
  "/v1/10dlc/brands/{brand_id}/campaigns":
    get:
      parameters:
        - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/parameters/0"
        - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1appeal~1evidence/parameters\
            /0"
        - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1appeal~1evidence/parameters\
            /1"
        - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1appeal~1evidence/parameters\
            /2"
        - in: query
          name: status
          description: >
            You can choose one or multiple statuses i.e: ACTIVE or CANCELED. If
            no status is given, then no filter would be applied and any campaign
            would be returned.
          required: false
          schema:
            description: >
              Campaign Status.

               * `PENDING_REVIEW`: This is the initial status of a campaign. This implies that the campaign has been submitted for an internal review and cannot be used yet.
               * `UPDATES_REQUIRED`: The campaign has been reviewed but requires changes before it can be approved.
               * `CARRIERS_REVIEW`: The campaign has been approved by our internal process. It has been created in the registry and but pending approval from third parties i.e: mobile carrier.
               * `ACTIVE`: The campaign has been approved by every party and traffic can now be sent.
               * `PENDING_CANCELLATION`: The campaign is active but will not be renewed. It will be canceled at the next renewal date.
               * `SUSPENDED`: The campaign has been suspended, along with any traffic it's used to send. This can happen if suspicious traffic has been detected (e.g.: spam) or after an MNO complaint. This triggers an internal review process which can lead to the un-suspension or termination of the campaign.
               * `TERMINATED`: The campaign has been terminated. A campaign cannot be recovered after it's been terminated.
               * `EXPIRED`: The campaign has expired.
               * `REJECTED`: This implies the campaign was rejected by the compliance team as it is not compliant with 10DLC requirements. Further reasons can be found in the description of the rejection event received from TCR. You may update the campaign using TCR’s API or dashboard, and re-share the campaign with Vonage for a new review.
               * `CNP_CANCELED`: The campaign has been canceled during a CNP migration. You are required to restart a CNP migration.
               * `PORTED_OUT`: The campaign has been ported out from Vonage. You are required to start a CNP migration.
            type: string
            example: ACTIVE
            enum:
              - PENDING_REVIEW
              - UPDATES_REQUIRED
              - CARRIERS_REVIEW
              - ACTIVE
              - PENDING_CANCELLATION
              - SUSPENDED
              - TERMINATED
              - CANCELED
              - REJECTED
              - CNP_CANCELED
              - PORTED_OUT
      tags:
        - Campaigns
      description: List campaigns
      operationId: listCampaigns
      summary: Retrieve all of the campaigns associated with a brand
      responses:
        "200":
          description: List of campaigns that are associated with a brand
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/responses/MultiNumbersResponse/content/application~1json/sc\
                      hema/allOf/0"
                  - type: object
                    properties:
                      _embedded:
                        type: object
                        properties:
                          campaigns:
                            type: array
                            items:
                              $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/responses/20\
                                1/content/application~1json/schema"
                      _links:
                        type: object
                        properties:
                          brand:
                            type: object
                            properties:
                              href:
                                type: string
                                example: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK
                          self:
                            type: object
                            properties:
                              href:
                                type: string
                                example: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK/campaigns/?page=2
                          next:
                            type: object
                            properties:
                              href:
                                type: string
                                example: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK/campaigns/?page=1
                          previous:
                            type: object
                            properties:
                              href:
                                type: string
                                example: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK/campaigns/?page=1
                          first:
                            type: object
                            properties:
                              href:
                                type: string
                                example: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK/campaigns/?page=1
                          last:
                            type: object
                            properties:
                              href:
                                type: string
                                example: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK/campaigns/?page=10
        "400":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/400"
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "422":
          $ref: "#/paths/~1v1~110dlc~1throughputs/get/responses/422"
    post:
      parameters:
        - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/parameters/0"
      tags:
        - Campaigns
      description: >
        Create Campaign


        **Message samples**


        The number of required message samples on the maximum of these 3 values:

        1. The number of `min_msg_samples` for the usecase, as returned by the /enum endpoint.        

        2. The number of entries in the `sub_usecases` field.

        3. The maximum of min_msg_samples asked by MNOs on the brand qualification endpoint. 


        **Notes**:


        1. `opt_in_message` is mandatory if `opt_in_keywords` is set.

        2. Either `message_flow` or `message_flow_details` is required, but only one of them may be specified.
      operationId: createCampaign
      summary: Add a new campaign to a brand
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - account_id
                - description
                - help_message
                - opt_in_message
                - opt_out_message
                - usecase
                - tc_agreed
              properties:
                account_id:
                  $ref: "#/components/schemas/VettingRequest/properties/account_id"
                vertical:
                  description: Business/industry segment of this campaign. Please refer to the
                    vertical property of the /enum endpoint for an updated list
                    of valid values.
                  type: string
                  nullable: true
                  enum:
                    - REAL_ESTATE
                    - HEALTHCARE
                    - ENERGY
                    - ENTERTAINMENT
                    - RETAIL
                    - AGRICULTURE
                    - INSURANCE
                    - EDUCATION
                    - HOSPITALITY
                    - FINANCIAL
                    - GAMBLING
                    - CONSTRUCTION
                    - NGO
                    - MANUFACTURING
                    - GOVERNMENT
                    - TECHNOLOGY
                    - COMMUNICATION
                  example:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
                      ntent/application~1json/examples/vonage/value/vertical"
                usecase:
                  type: string
                  description: >
                    Campaign usecase.

                    Please refer to the [/enum](#Enums) endpoint for an updated list of valid values.
                  maxLength: 50
                  enum:
                    - CUSTOMER_CARE
                    - POLLING_VOTING
                    - HIGHER_EDUCATION
                    - PUBLIC_SERVICE_ANNOUNCEMENT
                    - MARKETING
                    - SECURITY_ALERT
                    - DELIVERY_NOTIFICATION
                    - ACCOUNT_NOTIFICATION
                    - 2FA
                    - FRAUD_ALERT
                    - TRIAL
                    - CHARITY
                    - POLITICAL
                    - EMERGENCY
                    - SWEEPSTAKE
                    - CONVERSATIONAL
                    - MIXED
                    - CARRIER_EXEMPT
                    - SOCIAL
                    - LOW_VOLUME
                  example: ACCOUNT_NOTIFICATION
                sub_usecases:
                  type: array
                  items:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                      content/application~1json/schema/properties/usecase"
                reseller_id:
                  type: string
                  description: Alphanumeric identifier of the reseller that you want to associate
                    with this campaign. This is **required** when creating a
                    campaign on behalf of another company or entity.
                  maxLength: 8
                  example: R123456
                description:
                  type: string
                  description: Summary description of this campaign
                  minLength: 40
                  maxLength: 4096
                  example: User notifications
                age_gated:
                  type: boolean
                  description: >
                    Subscribers will be required to provide their age to opt-in
                    if set to `true`.

                    **NB:** Sex, Hate, Alcohol, Firearms, and Tobacco related (S.H.A.F.T) messages are prohibited.
                  example: true
                direct_lending:
                  type: boolean
                  description: >
                    Set to `true` if messages are related to money lending or
                    loan arrangements.
                  example: true
                sample_one:
                  type: string
                  description: Message sample. Some campaign tiers require 1 or more message
                    samples.
                  minLength: 20
                  maxLength: 1024
                  example: >
                    Hi

                    This is a reminder that you have a scheduled appointment with Dr. Doe tomorrow at 4:00PM.
                sample_two:
                  type: string
                  description: Message sample. Some campaign tiers require 2 or more message
                    samples.
                  minLength: 20
                  maxLength: 1024
                  example: |
                    Hello,
                    Your order, number XXXXXXX, has been shipped.
                sample_three:
                  type: string
                  description: Message sample. Some campaign tiers require 3 or more message
                    samples.
                  minLength: 20
                  maxLength: 1024
                  example: >
                    Here is you unique PIN number to access the application:
                    123456
                sample_four:
                  type: string
                  description: Message sample. Some campaign tiers require 4 or more message
                    samples.
                  minLength: 20
                  maxLength: 1024
                  example: >
                    Hello Mr Doe,

                    Your payment of 9.99$ was authorized. You can find your invoice in your customer account.
                sample_five:
                  type: string
                  description: Message sample. Some campaign tiers require 5.
                  minLength: 20
                  maxLength: 1024
                  example: >
                    Your delivery is scheduled for tomorrow between 8am and 2pm.

                    If you wish to change the delivery date please reply by typing 1 (tomorrow), 2 (Thursday) or 3 (deliver to post office) below.
                message_flow:
                  deprecated: true
                  type: string
                  description: >
                    Message flow, also known as Call to Action, of the campaign.


                    This field should describe how a consumer opts-in to the campaign, therefore giving consent to the sender to receive their messages. 

                    The call-to-action must be explicitly clear and inform the consumer of the nature of the program.


                    - Entering a telephone number through a website;

                    - Clicking a button on a mobile webpage;

                    - Sending a message from the Consumer’s mobile device that contains an

                    advertising

                    keyword;

                    - Initiating the text message exchange in which the Message Sender

                    replies to the

                    Consumer only with responsive information;

                    - Signing up at a point-of-sale (POS) or other Message Sender on-site

                    location; or

                    - Opting-in over the phone using interactive voice response (IVR)

                    technology.


                    If multiple opt-in methods can be used for the same campaign, you must list them all.


                    When creating or updating a campaign, either `message_flow` or `message_flow_details` may be specified, but not both.

                    When reading a campaign, `message_flow` will always be filled with data computed from `message_flow_details`.


                    Describes what the `opt_in` option was used for.

                    **NB**This attribute will be deprecated on POST and PATCH endpoint. Please update your application to use the `message_flow_details` property instead.
                  minLength: 40
                  maxLength: 4096
                  example:
                    $ref: "#/paths/~1v1~110dlc~1campaigns~1message_flow/post/responses/200/content/\
                      application~1json/schema/properties/message_flow/example"
                message_flow_details:
                  $ref: "#/paths/~1v1~110dlc~1campaigns~1message_flow/post/requestBody/content/ap\
                    plication~1json/schema/allOf/0"
                help_message:
                  type: string
                  description: >
                    Help message of the campaign.


                    The response to HELP keyword may include the Brand name and additional support contact information.
                  minLength: 20
                  maxLength: 320
                  example: >
                    <Brand Name>: For help, email support@example.com. To
                    opt-out, reply STOP
                opt_in_message:
                  description: >
                    Opt in message sent to confirmation enrollment to a
                    recurring message campaign. 

                    Also provide information on how to get `HELP` or undo enrollment.

                    If consumers can text in a keyword,the response should include the Brand name.

                    <br>

                    **NB: This field is mandatory if `opt_in_keywords` is set.**
                  type: string
                  minLength: 20
                  maxLength: 320
                  example: >
                    <Brand Name>: You are now opted-in. For help, reply HELP. To
                    opt-out, reply STOP
                opt_out_message:
                  description: >
                    Opt out message of the campaign. The response to the `STOP`
                    keyword may include the Brand name but should include an
                    acknowledgement of the opt-out request and confirmation that
                    no further messages will be sent. <br> **NB: Required for
                    all recurring campaigns or for SMS opt-in.**
                  type: string
                  minLength: 20
                  maxLength: 320
                  example: >
                    <Brand Name>: You are now opted-out and will receive no
                    further messages.
                help_keywords:
                  description: >
                    Help keywords of the campaign, separated by comas.

                    This field **must not** contain any spaces, and **must** contain the `HELP` keyword if set.
                  type: string
                  maxLength: 255
                  default: HELP
                  example: HELP,INFO
                opt_in_keywords:
                  $ref: "#/paths/~1v1~110dlc~1campaigns~1message_flow/post/requestBody/content/ap\
                    plication~1json/schema/allOf/1/properties/opt_in_keywords"
                opt_out_keywords:
                  description: >
                    Opt out keywords of the campaign, separated by comas.

                    This field **must not** contain any spaces, and **must** contain the `STOP` keyword if set.
                  type: string
                  maxLength: 255
                  default: STOP
                  example: STOP,QUIT
                tc_agreed:
                  description: >
                    Set to `true` to accept 10DLC's terms and conditions.

                    T&Cs are determined by The Campaign Registry (TCR).

                    You may retrieve the latest version of those terms and conditions using the [campaign T&C endpoint](#campaignT&C).
                  type: boolean
                  example: true
                embedded_link:
                  type: boolean
                  description: >
                    Set to `true` if the campaign message includes links.

                    **NB:** [Shortened URLs](https://en.wikipedia.org/wiki/URL_shortening) are forbidden.
                  example: false
                embedded_phone:
                  type: boolean
                  description: Does message generated by the campaign include phone number in SMS?
                  example: false
                label:
                  $ref: "#/paths/~1v1~110dlc~1partnercampaigns~1import/post/requestBody/content/a\
                    pplication~1json/schema/properties/label"
                hipaa:
                  type: boolean
                  description: >
                    Indicates if HIPAA is enabled for this campaign.


                    This is kept nullable to avoid breaking changes, but it is best to set it when creating the campaign.

                    Otherwise, this will be set when attempting to link the first number of the campaign, whether the attempt is successful or not.

                    After that, it will not be possible to update that field anymore.
                  nullable: true
      responses:
        "201":
          description: Return a single campaign
          content:
            application/json:
              schema:
                type: object
                properties:
                  primary_account_id:
                    description: The Vonage Primary Account ID (the parent account of account_id).
                    type: string
                    example: abcd1234
                    pattern: ^[A-Za-z0-9]{1,50}$
                  account_id:
                    $ref: "#/components/schemas/VettingRequest/properties/account_id"
                  brand_id:
                    $ref: "#/components/schemas/ThroughputItem/properties/brand_id"
                  campaign_id:
                    $ref: "#/components/schemas/ThroughputItem/properties/campaign_id"
                  tcr_campaign_id:
                    $ref: "#/paths/~1v1~110dlc~1partnercampaigns~1import/post/requestBody/content/a\
                      pplication~1json/schema/properties/campaign_id"
                  reseller_id:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                      content/application~1json/schema/properties/reseller_id"
                  label:
                    $ref: "#/paths/~1v1~110dlc~1partnercampaigns~1import/post/requestBody/content/a\
                      pplication~1json/schema/properties/label"
                  status:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/get/parameters/4/\
                      schema"
                  traffic_enabled:
                    description: >
                      Indicates if traffic is enabled for this campaign.


                      Traffic first becomes enabled when the campaign's status becomes `ACTIVE`.

                      It can be suspended later due to a number of reasons (campaign suspension, expiration, termination, ...).


                      **NB** This is only a requirement for traffic to be allowed but not is not the only requirement. Traffic can also be stopped due to brand suspensions, number not linked properly, ...
                    type: boolean
                  usecase:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                      content/application~1json/schema/properties/usecase"
                  sub_usecases:
                    type: array
                    description: >
                      Campaign sub-usecases.

                      Please refer to the [/enum](#Enums) endpoint for an updated list of valid values.
                    items:
                      $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                        content/application~1json/schema/properties/usecase"
                    example:
                      - 2FA
                      - SECURITY_ALERT
                  description:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                      content/application~1json/schema/properties/description"
                  message_flow:
                    $ref: "#/paths/~1v1~110dlc~1campaigns~1message_flow/post/responses/200/content/\
                      application~1json/schema/properties/message_flow"
                  message_flow_details:
                    $ref: "#/paths/~1v1~110dlc~1campaigns~1message_flow/post/requestBody/content/ap\
                      plication~1json/schema/allOf/0"
                  opt_out_assist:
                    type: boolean
                    description: >
                      Specifies whether opt out assist is enabled for this
                      account. \

                      On a campaign, indicates whether it's enabled on the primary account of the campaign's brand.
                    example: false
                  subscriber_opt_in:
                    type: boolean
                    description: Does campaign require subscriber to opt-in before SMS is sent to
                      subscriber?
                    default: true
                    example: false
                  opt_in_keywords:
                    $ref: "#/paths/~1v1~110dlc~1campaigns~1message_flow/post/requestBody/content/ap\
                      plication~1json/schema/allOf/1/properties/opt_in_keywords"
                  opt_in_message:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                      content/application~1json/schema/properties/opt_in_messag\
                      e"
                  subscriber_opt_out:
                    type: boolean
                    description: Does campaign support subscriber opt-out keyword(s)?
                    default: true
                    example: false
                  opt_out_keywords:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                      content/application~1json/schema/properties/opt_out_keywo\
                      rds"
                  opt_out_message:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                      content/application~1json/schema/properties/opt_out_messa\
                      ge"
                  subscriber_help:
                    type: boolean
                    description: Does campaign responds to help keyword(s)?
                    default: true
                    example: false
                  help_keywords:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                      content/application~1json/schema/properties/help_keywords"
                  help_message:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                      content/application~1json/schema/properties/help_message"
                  sample_one:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                      content/application~1json/schema/properties/sample_one"
                  sample_two:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                      content/application~1json/schema/properties/sample_two"
                  sample_three:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                      content/application~1json/schema/properties/sample_three"
                  sample_four:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                      content/application~1json/schema/properties/sample_four"
                  sample_five:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                      content/application~1json/schema/properties/sample_five"
                  age_gated:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                      content/application~1json/schema/properties/age_gated"
                  direct_lending:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                      content/application~1json/schema/properties/direct_lendin\
                      g"
                  embedded_link:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                      content/application~1json/schema/properties/embedded_link"
                  embedded_phone:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                      content/application~1json/schema/properties/embedded_phon\
                      e"
                  partner:
                    description: Indicates the brand or campaign belong to a partner campaign.
                    type: boolean
                    example: true
                  auto_renewal:
                    description: >
                      Campaign subscription auto-renewal option.


                      Defines the behaviour at the end of the billing cycle:

                      * if `true`, the campaign will automatically renewed

                      * if `false`, the campaign will expire and its status will become `CANCELED`
                    type: boolean
                  tcr_status:
                    description: Campaign TCR status.
                    type: string
                    enum:
                      - UNKNOWN
                      - ACTIVE
                      - CANCELED
                  last_status_changes:
                    type: array
                    title: The last status changes
                    description: >
                      Lists the last changes of the status field.


                      **Note**: this is only an extract. Not all changes are listed here.
                    items:
                      type: object
                      properties:
                        status:
                          $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/get/parameters/4/\
                            schema"
                        explanation:
                          type: string
                          title: The explanation of the change.
                          description: |
                            Describes why the status changed how it did.
                        change_date:
                          type: string
                          format: date-time
                          title: Date-time when the status changed.
                          description: Date-time when the status changed.
                      example:
                        status: APPROVED
                        reason: Approved after internal review.
                        change_date: 2022-01-01 01:01:01
                  mno_metadata:
                    type: array
                    items:
                      $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1usecases~1%7Busecase%7D/get\
                        /responses/200/content/application~1json/schema/propert\
                        ies/mno_metadata/items"
                  vertical:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                      content/application~1json/schema/properties/vertical"
                  number_pool:
                    type: boolean
                    description: |
                      Set to `true` if campaign uses a pool of numbers.
                    default: true
                    example: false
                  registration_date:
                    description: Date-time when campaign was registered with TCR.
                    type: string
                    format: date-time
                  renewal_date:
                    description: >
                      Date when the campaign will be renewed and billed, if
                      `auto_renewal` is `true`.
                    type: string
                    format: date
                  created_date:
                    description: Date when this record was created.
                    type: string
                    format: date-time
                  last_updated:
                    description: Date-time when this record was last updated.
                    type: string
                    format: date-time
                  billed_date:
                    description: Date-time when this campaign was billed.
                    type: string
                    format: date-time
                  hipaa:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                      content/application~1json/schema/properties/hipaa"
                  carrier_brand_suspensions:
                    type: array
                    items:
                      description: |
                        The brand has been suspended by one of the carriers.
                      type: object
                      properties:
                        category:
                          type: string
                          description: Summarize the reason of the suspension.
                        explanation:
                          type: string
                          description: Detailed explanation of the cause of the suspension.
                      example:
                        $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
                          ntent/application~1json/examples/vonage/value/carrier\
                          _suspensions"
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK/campaigns/C1DEB879
                      brand:
                        type: object
                        properties:
                          href:
                            type: string
                            example: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK
                      numbers:
                        type: object
                        properties:
                          href:
                            type: string
                            example: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK/campaigns/C1DEB879/numbers
        "400":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/400"
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "409":
          $ref: "#/paths/~1v1~110dlc~1resellers/post/responses/409"
        "422":
          $ref: "#/paths/~1v1~110dlc~1throughputs/get/responses/422"
  /v1/10dlc/campaigns/message_flow:
    post:
      tags:
        - Campaigns
      summary: Preview message flow
      description: >
        Creates a message flow text, based on the structured object given.


        The result is the same text that would be computed from field `message_flow_details` to fill `message_flow` when creating a campaign.


        **Note:** if the resulting `message_flow` length is not in the allowed range (40 to 4096), the endpoint will return a 422 error.
      operationId: previewCampaignsMessageFlow
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - title: Detailed message flow.
                  description: >
                    Message flow details specifies the `message_flow` field as a
                    structured object instead of a single text field.


                    When creating or updating a campaign:

                    1. either `message_flow` or `message_flow_details` may be specified, but not both.

                    2. if `message_flow_details` is specified, the object's fields will be used to fill a template.

                    The resulting templated text will be used to fill the `message_flow` field of the campaign. 


                    When reading a campaign `message_flow_details` will only be filled if it's been used to create or update the campaign.


                    For more information on Campaign message flows, please see this [campaign requirements article](https://api.support.vonage.com/hc/en-us/articles/12132309081500-10DLC-Campaign-requirements#h_01HKWA9PV34CD8DW9EABF10PGN).
                  type: object
                  required:
                    - brand_name
                    - consent_mechanisms
                    - pricing_disclosure
                    - frequency
                    - privacy_policy
                    - terms_and_conditions
                  properties:
                    brand_name:
                      description: >
                        A brand name associated with the campaign.

                        This can be different from the name of the brand the campaign belongs to (e.g. for subsidiaries, ...).


                        **NB:** This is optional for sole proprietors.
                      type: string
                    consent_mechanisms:
                      description: >
                        Describe the different mechanisms a customer may use to
                        consent to the campaign.


                        It is required to provide an attachment for all consent methods, except `TEXT_TO_JOIN`.
                      type: array
                      minItems: 1
                      maxItems: 5
                      items:
                        type: object
                        description: >
                          `ONLINE_FORM`, `LIVE_OPERATOR`, `POINT_OF_SALE`,
                          `TEXT_TO_JOIN`, `OTHER`
                        required:
                          - method
                          - details
                        properties:
                          method:
                            type: string
                            enum:
                              - ONLINE_FORM
                              - LIVE_OPERATOR
                              - POINT_OF_SALE
                              - TEXT_TO_JOIN
                              - OTHER
                          details:
                            description: Details on the consent mechanism.
                            type: string
                          attachment:
                            description: An HTTP(S) link to the resource describing the mechanism.
                            type: string
                            format: uri
                    pricing_disclosure:
                      description: >
                        This field needs to be true to consent to adding the
                        pricing disclosure to the template.


                        The following will be added: `Message and Data rates may apply`
                      type: boolean
                      enum:
                        - true
                    carrier_disclaimer:
                      description: >
                        Whether to add the following disclaimer:

                        `Carriers are not liable for delayed or undelivered messages.`
                      type: boolean
                      enum:
                        - true
                    frequency:
                      description: The frequency of the messages sent by the campaign.
                      type: string
                      enum:
                        - ONE_TIME
                        - RECURRING
                    privacy_policy:
                      description: Link to the campaign's privacy policy.
                      type: string
                      format: uri
                    terms_and_conditions:
                      description: Link to the campaign's terms and conditions.
                      type: string
                      format: uri
                  example:
                    brand_name: My brand
                    consent_mechanisms:
                      - method: TEXT_TO_JOIN
                        details: A text will be sent to the customer. He can reply yes to consent and
                          opt in.
                      - method: ONLINE_FORM
                        details: An online form allows the customer to subscribe.
                        attachment: https://mybrand.com/optin
                    pricing_disclosure: true
                    frequency: RECURRING
                    privacy_policy: https://mybrand.com/privacy_policy
                    terms_and_conditions: https://mybrand.com/terms_and_conditions
                - type: object
                  properties:
                    opt_in_keywords:
                      description: |
                        Opt in keywords of the campaign, separated by comas.
                      type: string
                      maxLength: 255
                      example: START,SUBSCRIBE
      responses:
        "200":
          description: An object holding the computed message flow.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message_flow:
                    type: string
                    description: >
                      Message flow, also known as Call to Action, of the
                      campaign.

                      It will always be filled with data computed from `message_flow_details`.


                      This field should describe how a consumer opts-in to the campaign, therefore giving consent to the sender to receive their messages. 

                      The call-to-action must be explicitly clear and inform the consumer of the nature of the program.


                      - Entering a telephone number through a website;

                      - Clicking a button on a mobile webpage;

                      - Sending a message from the Consumer’s mobile device that contains an

                      advertising

                      keyword;

                      - Initiating the text message exchange in which the Message Sender

                      replies to the

                      Consumer only with responsive information;

                      - Signing up at a point-of-sale (POS) or other Message Sender on-site

                      location; or

                      - Opting-in over the phone using interactive voice response (IVR)

                      technology.


                      If multiple opt-in methods can be used for the same campaign, you must list them all.


                      Describes what the `opt_in` option was used for.
                    minLength: 40
                    maxLength: 4096
                    example: >
                      Brand: My brand \

                      Consent mechanisms: \

                      - TEXT_TO_JOIN: Opt-in Keywords: START,JOIN. A text will be sent to the customer. He can reply yes to consent and opt in. \

                      - ONLINE_FORM: This is an online form \
                        Link: https://mybrand.com/optin \
                      Message & data rates may apply. - Message frequency varies \

                      Carriers are not liable for delayed or undelivered messages. \

                      Text HELP for help. Text STOP to opt-out. \

                      Terms & Conditions: https://mybrand.com/terms_and_conditions \

                      Privacy Policy: https://mybrand.com/privacy_policy
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "422":
          $ref: "#/paths/~1v1~110dlc~1throughputs/get/responses/422"
  "/v1/10dlc/brands/{brand_id}/campaigns/{campaign_id}":
    parameters:
      - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/parameters/0"
      - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns~1%7Bcampaign_id%7\
          D~1numbers/parameters/1"
    get:
      tags:
        - Campaigns
      summary: Retrieve a specific campaign
      description: Get a campaign
      operationId: getCampaign
      responses:
        "200":
          $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/responses/20\
            1"
        "400":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/400"
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "422":
          $ref: "#/paths/~1v1~110dlc~1throughputs/get/responses/422"
    patch:
      tags:
        - Campaigns
      summary: Partially update a specific campaign
      description: >
        Update campaign parameters


        What can be updated depends on the campaign's state:

        * If the campaign's status is `TERMINATED` or `CANCELED`, the campaign may not be updated.

        * If the campaign's status is `PENDING_REVIEW` or `UPDATES_REQUIRED`, all fields may be updated.

        * For other statuses, the following fields may not be updated since they are read only after the initial approval of the campaign by Vonage compliance team:
          * vertical
          * usecase
          * sub_usecases
          * age_gated
          * direct_lending
          * embedded_link
          * embedded_phone
          * status
        * The `hipaa` field can only be updated if no number was ever linked to that campaign.


        Forced values

        * `status` can only be set to `“CANCELED”`, to cancel a campaign, Otherwise, it must be left out, or set to null.


        **NB**:

        1. `opt_in_message` is mandatory if `opt_in_keywords` is set.

        2. `message_flow` and `message_flow_details` are mutually exclusive.
          * if `message_flow` is passed, it will erase any stored `message_flow_details`.
          * if `message_flow_details` is passed, it will be stored and used to compute `message_flow`.
      operationId: patchCampaign
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  $ref: "#/paths/~1v1~110dlc~1partnercampaigns~1import/post/requestBody/content/a\
                    pplication~1json/schema/properties/label"
                description:
                  $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                    content/application~1json/schema/properties/description"
                reseller_id:
                  $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                    content/application~1json/schema/properties/reseller_id"
                sample_one:
                  $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                    content/application~1json/schema/properties/sample_one"
                sample_two:
                  $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                    content/application~1json/schema/properties/sample_two"
                sample_three:
                  $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                    content/application~1json/schema/properties/sample_three"
                sample_four:
                  $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                    content/application~1json/schema/properties/sample_four"
                sample_five:
                  $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                    content/application~1json/schema/properties/sample_five"
                message_flow:
                  $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                    content/application~1json/schema/properties/message_flow"
                message_flow_details:
                  $ref: "#/paths/~1v1~110dlc~1campaigns~1message_flow/post/requestBody/content/ap\
                    plication~1json/schema/allOf/0"
                help_message:
                  $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                    content/application~1json/schema/properties/help_message"
                opt_in_message:
                  $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                    content/application~1json/schema/properties/opt_in_message"
                opt_out_message:
                  $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                    content/application~1json/schema/properties/opt_out_message"
                help_keywords:
                  $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                    content/application~1json/schema/properties/help_keywords"
                opt_in_keywords:
                  $ref: "#/paths/~1v1~110dlc~1campaigns~1message_flow/post/requestBody/content/ap\
                    plication~1json/schema/allOf/1/properties/opt_in_keywords"
                opt_out_keywords:
                  $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                    content/application~1json/schema/properties/opt_out_keyword\
                    s"
                auto_renewal:
                  description: Campaign subscription auto-renewal option.
                  type: boolean
                status:
                  description: Campaign status. Only status CANCELED may be manually set.
                  type: string
                  enum:
                    - CANCELED
                vertical:
                  $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                    content/application~1json/schema/properties/vertical"
                usecase:
                  $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                    content/application~1json/schema/properties/usecase"
                sub_usecases:
                  type: array
                  items:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                      content/application~1json/schema/properties/usecase"
                age_gated:
                  $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                    content/application~1json/schema/properties/age_gated"
                direct_lending:
                  $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                    content/application~1json/schema/properties/direct_lending"
                embedded_link:
                  $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                    content/application~1json/schema/properties/embedded_link"
                embedded_phone:
                  $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                    content/application~1json/schema/properties/embedded_phone"
                hipaa:
                  $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/requestBody/\
                    content/application~1json/schema/properties/hipaa"
      responses:
        "200":
          $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns/post/responses/20\
            1"
        "400":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/400"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "422":
          $ref: "#/paths/~1v1~110dlc~1throughputs/get/responses/422"
    delete:
      deprecated: true
      tags:
        - Campaigns
      summary: Stop a specific campaign on a brand
      description: >
        <b style="color:white;background-color:red">Deprecated</b><br>


        <s>Cancels the campaign auto-renewal.

        The cancellation of renewal cannot be reverted.</s>


        <s>The actual deletion will happen after campaign's expiration date.</s>


        **NB:** Will soon be deprecated. Use the [Campaign PATCH](#patchCampaign) with the `auto_renewal` 

        property set to `false` to achieve a similar outcome.<br>
      operationId: deleteCampaign
      responses:
        "204":
          description: No content
        "400":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/400"
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "422":
          $ref: "#/paths/~1v1~110dlc~1throughputs/get/responses/422"
  "/v1/10dlc/brands/{brand_id}/campaigns/{campaign_id}/resubmit":
    put:
      parameters:
        - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/parameters/0"
        - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns~1%7Bcampaign_id%7\
            D~1numbers/parameters/1"
      tags:
        - Campaigns
      summary: Re-submit active campaign against specific MNO CRE.
      description: Re-submit active campaign against specific MNO CRE.
      operationId: campaignResubmit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - mno_ids
              properties:
                mno_ids:
                  type: array
                  minItems: 1
                  items:
                    type: string
                    description: ID of MNO. Please refer to the [/enum](#Enums) endpoint for an
                      updated list of valid values.
                  example:
                    - "10017"
      responses:
        "200":
          description: Resubmitted campaign response
          content:
            application/json:
              schema:
                type: object
                properties:
                  campaign_id:
                    $ref: "#/components/schemas/ThroughputItem/properties/campaign_id"
                  brand_id:
                    $ref: "#/components/schemas/ThroughputItem/properties/brand_id"
                  mno_metadata:
                    type: array
                    items:
                      $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1usecases~1%7Busecase%7D/get\
                        /responses/200/content/application~1json/schema/propert\
                        ies/mno_metadata/items"
                    example:
                      $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1usecases~1%7Busecase%7D/get\
                        /responses/200/content/application~1json/examples/simpl\
                        e/value/mno_metadata"
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK/vetting/requests/abcd1234
                      brand:
                        type: object
                        properties:
                          href:
                            type: string
                            example: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK
        "400":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/400"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "422":
          $ref: "#/paths/~1v1~110dlc~1throughputs/get/responses/422"
  /v1/10dlc/campaigns/terms_and_conditions:
    get:
      tags:
        - Campaigns
      description: Get campaign terms and conditions
      operationId: campaignT&C
      summary: The terms and conditions governing the creation of a campaign.
      responses:
        "200":
          description: campaign terms and conditions
          content:
            application/json:
              schema:
                type: object
                properties:
                  sub_terms:
                    type: array
                    items:
                      type: string
                    example:
                      - I confirm that this campaign will not be used for
                        Affiliate Marketing.
        "400":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/400"
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "422":
          $ref: "#/paths/~1v1~110dlc~1throughputs/get/responses/422"
  /v1/10dlc/partnercampaigns/import:
    post:
      summary: Import a partner campaign to Vonage
      description: >
        Import a partner campaign by sharing it with Vonage. Your account needs
        a special capability to be able to carry on with this operation.
      tags:
        - Campaigns
      operationId: importPartnerCampaign
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                account_id:
                  $ref: "#/components/schemas/VettingRequest/properties/account_id"
                campaign_id:
                  description: TCR Campaign ID.
                  type: string
                  maxLength: 50
                  example: C123ABC
                label:
                  description: Friendly name associated with this campaign.
                  type: string
                  maxLength: 50
                  example: This is a sample campaign
                cnp_migration:
                  type: boolean
                  description: >
                    Indicates if the campaign is part of the CNP migration.

                    It must be set to true, if a CNP migration has been initiated.
              required:
                - account_id
                - campaign_id
      responses:
        "201":
          description: Imported partner campaign summary
          content:
            application/json:
              schema:
                type: object
                properties:
                  brand_id:
                    $ref: "#/components/schemas/ThroughputItem/properties/brand_id"
                  campaign_id:
                    $ref: "#/components/schemas/ThroughputItem/properties/campaign_id"
                  sharing_status:
                    description: Sharing Status. Please refer to the [/enum](#Enums) endpoint for an
                      update list of valid values.
                    type: string
                    maxLength: 50
                    enum:
                      - PENDING
                      - ACCEPTED
                      - DECLINED
                  downstream_cnp_id:
                    $ref: "#/paths/~1v1~110dlc~1partnercampaigns~1import/post/responses/201/content\
                      /application~1json/schema/properties/upstream_cnp_id"
                  upstream_cnp_id:
                    description: CNP ID. Please refer to the [/enum](#Enums) endpoint for an update
                      list of valid values.
                    type: string
                    maxLength: 50
        "400":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/400"
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "422":
          $ref: "#/paths/~1v1~110dlc~1throughputs/get/responses/422"
  "/v1/10dlc/partnercampaigns/{campaign_id}":
    get:
      parameters:
        - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns~1%7Bcampaign_id%7\
            D~1numbers/parameters/1"
      summary: Get partner campaign sharing information
      description: Get partner campaign sharing information
      tags:
        - Campaigns
      operationId: getPartnerCampaign
      responses:
        "200":
          description: Partner campaign sharing status
          content:
            application/json:
              schema:
                type: object
                properties:
                  campaign_id:
                    $ref: "#/components/schemas/ThroughputItem/properties/campaign_id"
                  sharing_status:
                    $ref: "#/paths/~1v1~110dlc~1partnercampaigns~1import/post/responses/201/content\
                      /application~1json/schema/properties/sharing_status"
                  downstream_cnp_id:
                    $ref: "#/paths/~1v1~110dlc~1partnercampaigns~1import/post/responses/201/content\
                      /application~1json/schema/properties/upstream_cnp_id"
                  upstream_cnp_id:
                    $ref: "#/paths/~1v1~110dlc~1partnercampaigns~1import/post/responses/201/content\
                      /application~1json/schema/properties/upstream_cnp_id"
        "400":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/400"
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "422":
          $ref: "#/paths/~1v1~110dlc~1throughputs/get/responses/422"
  "/v1/10dlc/brands/{brand_id}/campaigns/{campaign_id}/numbers":
    parameters:
      - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/parameters/0"
      - name: campaign_id
        in: path
        description: ID associated with a specific campaign
        required: true
        schema:
          $ref: "#/components/schemas/ThroughputItem/properties/campaign_id"
      - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1appeal~1evidence/parameters\
          /2"
    get:
      parameters:
        - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1appeal~1evidence/parameters\
            /0"
        - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1appeal~1evidence/parameters\
            /1"
      tags:
        - Numbers
      summary: Retrieve Numbers associated with a campaign
      description: Get numbers in campaign
      operationId: getNumbers
      responses:
        "200":
          $ref: "#/components/responses/MultiNumbersResponse"
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "422":
          $ref: "#/components/responses/ErrorNumbersParameters"
    post:
      tags:
        - Numbers
      summary: Link number to a campaign
      operationId: linkNumberToCampaign
      description: |
        Links an existing Vonage number to a 10DLC campaign.
      requestBody:
        $ref: "#/components/requestBodies/LinkNumber"
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NumberResponse"
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "409":
          $ref: "#/components/responses/ErrorNumbersAlreadyLinked"
        "422":
          $ref: "#/components/responses/ErrorNumbersParameters"
  "/v1/10dlc/brands/{brand_id}/campaigns/{campaign_id}/numbers/{number}":
    parameters:
      - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/parameters/0"
      - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1campaigns~1%7Bcampaign_id%7\
          D~1numbers/parameters/1"
      - $ref: "#/components/parameters/Number"
    get:
      tags:
        - Numbers
      summary: Retrieve information about a number in a campaign
      description: Retrieve information about a number in a campaign
      operationId: getNumber
      responses:
        "200":
          $ref: "#/components/responses/NumberResponse"
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "422":
          $ref: "#/components/responses/ErrorNumbersParameters"
    delete:
      tags:
        - Numbers
      summary: Unlink a number from a campaign
      description: Unlink a number from a campaign
      operationId: unlinkNumber
      responses:
        "204":
          description: No Content
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "422":
          $ref: "#/components/responses/ErrorNumbersParameters"
  /v1/10dlc/resellers:
    post:
      tags:
        - Resellers
      description: |
        Add resellers to your account.
      operationId: createReseller
      summary: Create a new reseller
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                company_name:
                  description: Company name of the reseller.
                  type: string
                  example: Microsoft
                  maxLength: 100
                phone:
                  $ref: "#/components/schemas/Reseller/properties/phone"
                email:
                  description: Valid email address of reseller contact.
                  type: string
                  maxLength: 100
                  example: john.doe@microsoft.com
              required:
                - company_name
                - phone
                - email
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Reseller"
        "400":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/400"
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
        "409":
          description: >
            Indicates that the request could not be processed because of
            conflict in the current state of the resource, such as:

            * an edit conflict between multiple simultaneous updates

            * the balance of your account being too low
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorCouldNotRemoveNumber/allOf/0"
              example:
                type: https://developer.vonage.com/api-errors#low-balance
                title: Insufficient balance
                detail: This request could not be performed due to your account balance being
                  low.
                instance: 3c2548d132ca4b09870da17d56969a75
    get:
      parameters:
        - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1appeal~1evidence/parameters\
            /0"
        - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1appeal~1evidence/parameters\
            /1"
      tags:
        - Resellers
      description: List the resellers associated with your Account.
      operationId: listResellers
      summary: List the resellers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      next_page:
                        description: page_token to access the next page.
                        type: string
                        minimum: 1
                        maximum: 512
                      previous_page:
                        description: page_token to access the previous page.
                        type: string
                        minimum: 1
                        maximum: 512
                      last_page:
                        description: page_token to access the last page.
                        type: string
                        minimum: 1
                        maximum: 512
                      first_page:
                        description: page_token to access the first page.
                        type: string
                        minimum: 1
                        maximum: 512
                      _links:
                        type: object
                        properties:
                          next:
                            description: Link to the next page.
                            type: object
                            properties:
                              href:
                                type: string
                          previous:
                            description: Link to the previous page.
                            type: object
                            properties:
                              href:
                                type: string
                          first:
                            description: Link to the first page.
                            type: object
                            properties:
                              href:
                                type: string
                          last:
                            description: Link to the last page.
                            type: object
                            properties:
                              href:
                                type: string
                  - type: object
                    properties:
                      _embedded:
                        type: object
                        properties:
                          resellers:
                            type: array
                            items:
                              $ref: "#/components/schemas/Reseller"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorCouldNotRemoveNumber/allOf/0"
              example:
                type: https://developer.vonage.com/api-errors#invalid-json
                title: Invalid request body
                detail: The request body did not contain valid JSON
                instance: 3c2548d132ca4b09870da17d56969a75
        "401":
          description: Credential is missing or invalid
          content:
            application/json:
              schema:
                properties:
                  type:
                    type: string
                    example: https://developer.vonage.com/api-errors#unauthorized
                  title:
                    type: string
                    example: Invalid credentials supplied
                  detail:
                    type: string
                    example: You did not provide correct credentials.
                  instance:
                    $ref: "#/components/schemas/ErrorCouldNotRemoveNumber/allOf/0/properties/instan\
                      ce"
        "404":
          description: Resource Not Found
          content:
            application/json:
              schema:
                properties:
                  type:
                    type: string
                    example: https://developer.vonage.com/api-errors#not-found
                  title:
                    type: string
                    example: Not Found
                  detail:
                    type: string
                    example: ID 'ABC123' does not exist, or you do not have access
                  instance:
                    $ref: "#/components/schemas/ErrorCouldNotRemoveNumber/allOf/0/properties/instan\
                      ce"
  "/v1/10dlc/resellers/{reseller_id}":
    get:
      parameters:
        - $ref: "#/components/parameters/path_reseller_id"
      tags:
        - Resellers
      description: Get a reseller
      operationId: getReseller
      summary: Get a reseller
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Reseller"
        "400":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/400"
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "404":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/404"
  /v1/10dlc/throughputs:
    get:
      parameters:
        - $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1appeal~1evidence/parameters\
            /1"
        - description: Token used to paginate.
          in: query
          name: page_token
          required: false
          schema:
            type: string
            minimum: 1
            maximum: 512
        - name: campaign_id
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/ThroughputItem/properties/campaign_id"
      tags:
        - Campaigns
      description: Get throughput applied to a campaign for the available MNOs.
      operationId: listThroughput
      summary: Get throughput applied to a campaign.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/200/content/application~1js\
                      on/schema/allOf/0"
                  - type: object
                    properties:
                      _embedded:
                        type: object
                        properties:
                          throughputs:
                            type: array
                            items:
                              $ref: "#/components/schemas/ThroughputItem"
        "400":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/400"
        "401":
          $ref: "#/paths/~1v1~110dlc~1resellers/get/responses/401"
        "422":
          description: Resource Unprocessable
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorCouldNotRemoveNumber/allOf/0"
                  - type: object
                    description: Errors with submission
                    properties:
                      invalid_parameters:
                        type: array
                        items:
                          type: object
                          properties:
                            field:
                              type: string
                              description: Field that had a data issue
                              example: brand_id
                            description:
                              type: string
                              description: Error description
                              example: brand_id must be shorter than 50 characters
              example:
                type: https://developer.vonage.com/api-errors#invalid
                title: There were some issues with the submitted data
                detail: There were some errors submitting your data, please correct the
                  requested fields
                instance: 3c2548d132ca4b09870da17d56969a75
                invalid_parameters:
                  - field: brand_id
                    description: brand_id must be shorter than 50 characters
                  - field: description
                    description: description is required
components:
  examples:
    LinkBrand:
      value: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK
    LinkCampaign:
      value: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK/campaigns/C1DEB879/
    LinkNumber:
      value: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK/campaigns/C1DEB879/numbers/14155550110
    Numbers:
      value:
        - "12025550150"
        - "12025550142"
        - "12025550178"
        - "12025550117"
        - "12025550182"
        - "12025550192"
    UseCases:
      value:
        - ACCOUNT_NOTIFICATION
        - CONVERSATIONAL
        - DELIVERY_NOTIFICATION
  responses:
    ErrorNumbersAlreadyLinked:
      description: The number that was requested to link is already associated with
        another campaign
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ErrorCouldNotRemoveNumber/allOf/0"
              - type: object
                description: Errors with submission
                properties:
                  title:
                    description: Generic error message
                    example: Number Already Linked
                  type:
                    description: Link to error / remediation options
                    example: https://developer.vonage.com/api-errors/10dlc#number-already-linked
                  detail:
                    description: Additional information about the error
                    example: The number requested has already been linked to another campaign
    ErrorNumbersParameters:
      description: Various errors that can occur during number data submission
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ErrorCouldNotRemoveNumber/allOf/0"
              - type: object
                description: Errors with submission
                properties:
                  title:
                    description: Generic error message
                    example: There were some issues with the submitted data
                  type:
                    description: Link to error / remediation options
                    example: https://developer.vonage.com/api-errors/10dlc#invalid-number-data
                  detail:
                    description: Additional information about the error
                    example: There were some errors submitting your campaign, please correct the
                      requested fields
                  invalid_parameters:
                    description: Errors from the number system
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          description: Field that had a data issue
                          example: country
                        description:
                          type: string
                          description: Error text
                          example: Field 'country' is not a valid value
    ErrorVettingConflict:
      description: Error that can occur if there is a conflict during a vetting request
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ErrorCouldNotRemoveNumber/allOf/0"
              - type: object
                description: Conflict when a vetting is requested for a brand
                properties:
                  title:
                    description: Generic error message
                    example: An error occurred while requesting third party vetting
                  type:
                    description: Link to error / remediation options
                    example: https://developer.vonage.com/api-errors/10dlc#vetting-conflict
                  detail:
                    description: Additional information about the error
                    example: An unknown error occurred while requesting vetting with the carrier
                      system. Please contact support or try again later.
    ErrorVettingParameters:
      description: Various errors that can occur during vetting requests
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ErrorCouldNotRemoveNumber/allOf/0"
              - type: object
                description: Errors with submission
                properties:
                  title:
                    description: Generic error message
                    example: There were some issues with the submitted data
                  type:
                    description: Link to error / remediation options
                    example: https://developer.vonage.com/api-errors/10dlc#invalid-vetting-data
                  detail:
                    description: Additional information about the error
                    example: There were some errors submitting your vetting request, please correct
                      the requested fields
                  invalid_parameters:
                    description: Errors that are passed through from the Campaign Registry
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: integer
                          description: Campaign Registry error code
                          example: 503
                        field:
                          type: string
                          description: Field that had a data issue
                          example: evp_id
                        description:
                          type: string
                          description: Error text
                          example: Field 'evp_id' is not unique
    MultiNumbersResponse:
      description: List of numbers that are associated with a campaign
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  page_size:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1appeal~1evidence/parameters\
                      /1/schema"
                  page:
                    $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1appeal~1evidence/parameters\
                      /0/schema"
                  total_pages:
                    description: Number of pages in the entire result set
                    example: 100
                    type: integer
                    minimum: 1
                  total_items:
                    description: Number of items in the entire result set
                    example: 100
                    type: integer
                    minimum: 0
              - type: object
                properties:
                  _embedded:
                    type: object
                    properties:
                      numbers:
                        type: array
                        items:
                          $ref: "#/components/schemas/NumberResponse"
    NumberResponse:
      description: Information about a number
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NumberResponse"
    VettingRequest:
      description: Information about a vetting request
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/VettingRequest"
  requestBodies:
    LinkNumber:
      required: true
      content:
        application/json:
          schema:
            description: Information needed to link a number to a campaign
            type: object
            properties:
              country:
                $ref: "#/components/schemas/Country"
              number:
                $ref: "#/components/schemas/Number"
            required:
              - country
              - number
    ExistingVettingRequest:
      required: true
      content:
        application/json:
          schema:
            description: Information needed to import a vetting request
            type: object
            properties:
              evp_id:
                description: The identity of the vetting partner. This value must be the ID
                  associated with one of the supported vetting providers.
                type: string
                enum:
                  - Aegis
                  - CV
                  - WMC
                example: abcd123
              vetting_token:
                description: Token verifying the vetting ID (only applicable to Aegis vetting).
                type: string
                example: abcd123
              vetting_id:
                description: Unique ID that identifies a vetting transaction performed by a
                  vetting provider. This ID is provided by the vetting provider
                  at time of vetting.
                type: string
                example: abcd123
            required:
              - evp_id
              - vetting_class
              - vetting_id
    VettingRequest:
      required: true
      content:
        application/json:
          schema:
            description: Information needed to authorize a vetting request
            type: object
            properties:
              evp_id:
                description: This value must be the ID associated with one of the supported
                  vetting providers.
                type: string
                enum:
                  - Aegis
                  - CV
                  - WMC
                example: abcd123
              vetting_class:
                description: Type of vetting to perform.
                type: string
                example: abcd123
              vetting_political_details:
                $ref: "#/components/schemas/VettingPoliticalDetails"
              appeals:
                description: |
                  Contains vetting appeals, if any has been submitted.
                type: array
                items:
                  type: object
                  properties:
                    explanation:
                      type: string
                      description: |
                        Explanation that was given when creating the appeal.
                    status:
                      description: >
                        The status of the appeal.

                        Please refer to the /enum endpoint for an updated list of valid values.
                      type: string
                      enum:
                        - PENDING
                        - COMPLETE
                    categories:
                      $ref: "#/components/schemas/VettingAppealCategories"
                    evidences:
                      description: The list of evidence files that were sent with this appeal.
                      type: array
                      items:
                        $ref: "#/components/schemas/AttachmentInfo"
                    outcome:
                      description: The outcome of the appeal. This is filled only when the appeal is
                        completed.
                      type: object
                      properties:
                        vetting_status:
                          $ref: "#/components/schemas/VettingStatus"
                        vetting_score:
                          $ref: "#/components/schemas/VettingScore"
                        feedback:
                          description: Feedback given by the provider to explain the vetting outcome.
                          type: object
                          properties:
                            reasons:
                              type: array
                              items:
                                type: string
                    created_date:
                      $ref: "#/components/schemas/CreatedDate"
                    last_updated:
                      $ref: "#/components/schemas/LastUpdated"
                example:
                  - explanation: Please find attached the evidence proving our tax ID.
                    status: COMPLETE
                    categories:
                      - VERIFY_TAX_ID
                    evidences:
                      - id: c94eea77-1494-4b8f-99dc-63a036126368
                        file_name: tax_registration.pdf
                        mime_type: application/pdf
                    outcome:
                      vetting_status: ACTIVE
                      vetting_score: 100
                      feedback:
                        reasons:
                          - Provided evidence match the tax id.
                    created_date: 2023-01-01T00:00:00.000Z
                    last_updated: 2023-01-03T00:00:00.000Z
                  - explanation: We think the low score is not warranted because ...
                    status: PENDING
                    categories:
                      - LOW_SCORE
                    evidences:
                      - id: b4513738-72c3-4720-bd73-47919ddde812
                        file_name: explanation_details.txt
                        mime_type: text/plain
                    created_date: 2023-02-01T00:00:00.000Z
                    last_updated: 2023-02-03T00:00:00.000Z
            required:
              - evp_id
              - vetting_class
  schemas:
    VettingStatus:
      description: Identifies a vetting request status. Please refer to the /enum
        endpoint for an updated list of valid values.
      type: string
      enum:
        - PENDING
        - UNSCORE
        - ACTIVE
        - FAILED
        - EXPIRED
    VettingScore:
      description: Vetting score ranging from 0-100.
      type: integer
      minimum: 0
      maximum: 100
    ResellerID:
      description: Unique identifier assigned to the reseller.
      type: string
      example: 5782db87-a867-4ccd-a0b5-1b7203cc438c
    Reseller:
      description: A reseller is a role or business that comes in between csp and brand.
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ResellerID"
        tcr_reseller_id:
          description: |
            Unique identifier assigned to the reseller by the registry.
            This field is only present if the reseller is APPROVED.
          type: string
        company_name:
          description: Company name of the reseller.
          type: string
          example: Microsoft
          maxLength: 100
        phone:
          description: Valid mobile phone number in E.164 international format without the
            + prefix. It is required field for SoleProprietor brand.
          type: string
          pattern: ^[1-9][0-9]{7,14}$
          example:
            $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
              ntent/application~1json/examples/vonage/value/mobile_phone"
        email:
          description: Valid email address of reseller contact.
          type: string
          maxLength: 100
          example: john.doe@microsoft.com
        status:
          description: >
            Approval status of the reseller.

            Upon submitting a creation of a reseller, the status is set to PENDING.

            After review of your request, the status of the reseller will be set to either APPROVED or REJECTED.

            If the status is REJECTED, you should have the detailed reason of the rejection in the rejection_reason field.
          type: string
          enum:
            - PENDING
            - APPROVED
            - REJECTED
          example: APPROVED
        rejection_reason:
          description: |
            The reason why the reseller was rejected.
            This field is only populated when the status is REJECTED.
          type: string
          example: You are not allowed to register a reseller with this company name.
      required:
        - company_name
        - phone
        - email
        - status
    VettingAppealCategories:
      type: array
      items:
        type: string
      minItems: 1
      description: |
        An array of categories that the appeal applies to.
        Please refer to the /enum endpoint for an updated list of valid values.
    CreatedDate:
      description: Date-time when this record was created.
      type: string
      format: date-time
    LastUpdated:
      description: Date-time when this record was last updated.
      type: string
      format: date-time
    AttachmentInfo:
      description: Describes an attachment's information.
      type: object
      properties:
        id:
          type: string
          description: ID of the evidence. To be used in the appeal process.
        file_name:
          type: string
          description: The name of the uploaded file.
        mime_type:
          type: string
          description: The mime type of the uploaded file.
      example:
        id: OWUwZTA5MmUtOGNjYS00ZGI0LWFkNWUtZTg4MmUwNzhjMDUy
        file_name: evidence.txt
        mime_type: text/plain
    OTPReferenceID:
      description: Reference ID for tracking the status of the OTP request.
      type: string
      example: OTP1234567
    Country:
      type: string
      example: US
      description: The two character country code in ISO 3166-1 alpha-2 format
      pattern: ^[A-Z]{2}$
    ErrorCouldNotRemoveNumber:
      allOf:
        - properties:
            type:
              type: string
              example: https://developer.vonage.com/api-errors#TO_BE_UPDATED
            title:
              type: string
              example: THIS ERROR NEEDS REPLACING
            detail:
              type: string
              example: THIS IS A PLACEHOLDER FOR OTHER ERRORS
            instance:
              description: Instance ID
              type: string
              example: 797a8f199c45014ab7b08bfe9cc1c12c
        - type: object
          description: Deletion Errors
          properties:
            title:
              description: Generic error message
              example: There were errors removing numbers from the pool
            type:
              description: Link to error / remediation options
              example: https://developer.nexmo.com/api-errors/10dlc#number-deletion-failure
            detail:
              description: Additional information about the error
              example: We were unable to remove any of the numbers from the campaign.
            errors:
              type: array
              items:
                type: object
                properties:
                  title:
                    description: Generic error message
                    example: Number not found
                  type:
                    description: Link to error / remediation options
                    example: https://developer.nexmo.com/api-errors/10dlc#missing-number
                  detail:
                    description: Additional information about the error
                    example: One or more numbers being deleted are not available in the campaign
                  numbers:
                    type: array
                    items:
                      $ref: "#/components/schemas/Number"
                    example:
                      - "15556660001"
    Number:
      description: Telephone Number
      example: "14155550110"
      type: string
      minLength: 7
      maxLength: 15
      pattern: ^[0-9]{7,15}$
    NumberResponse:
      type: object
      properties:
        number:
          $ref: "#/components/schemas/Number"
        country:
          $ref: "#/components/schemas/Country"
        status:
          type: string
          description: Current status of a number in a campaign. Only LINKED allows traffic.
          example: LINKING
          enum:
            - LINKING
            - LINKED
            - REJECTED
            - UNLINKING
            - UNLINKED
        compliance:
          $ref: "#/components/schemas/NumberCompliance"
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  example:
                    $ref: "#/components/examples/LinkNumber/value"
            campaign:
              type: object
              properties:
                href:
                  type: string
                  example:
                    $ref: "#/components/examples/LinkCampaign/value"
            brand:
              type: object
              properties:
                href:
                  type: string
                  example:
                    $ref: "#/components/examples/LinkBrand/value"
    NumberCompliance:
      type: array
      description: List of compliance flags.
      items:
        type: string
        example: HIPPA
    VettingRequest:
      type: object
      properties:
        account_id:
          description: The Vonage Account ID
          type: string
          example: abcd1234
          pattern: ^[A-Za-z0-9]{1,50}$
        evp_id:
          $ref: "#/components/schemas/VettingRequestId"
        vetting_id:
          type: string
        vetting_token:
          type: string
        vetting_score:
          $ref: "#/components/schemas/VettingScore"
        vetting_class:
          type: string
        vetting_status:
          $ref: "#/components/schemas/VettingStatus"
        vetting_details:
          $ref: "#/components/schemas/VettingDetails"
        vetted_date:
          description: Vetting effective date. This is the date when vetting was
            completed, or the starting effective date. If this date is missing,
            then the vetting was not complete or not valid.
          type: string
          format: date-time
        created_date:
          type: string
          format: date-time
        failed_reasons:
          description: The list of reasons for a `FAILED` external vetting.
          type: array
          readOnly: true
          items:
            type: string
        additional_info:
          $ref: "#/components/schemas/VettingAdditionalInfo"
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  example: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK/vetting/requests/abcd1234
            brand:
              type: object
              properties:
                href:
                  type: string
                  example: https://api.nexmo.com/v1/10dlc/brands/BLQKOPK
    VettingRequestId:
      description: ID associated with a vetting request
      type: string
      pattern: ^[0-9A-F]{7}$
    VettingPoliticalDetails:
      description: Additional political details in json format, required for POLITICAL
        type vetting. If non-POLITICAL type its neglected.
      type: object
      properties:
        requestor_first_name:
          description: First name of vetting requester.
          type: string
          example: John
        requestor_last_name:
          description: Last name of vetting requester.
          type: string
          example: Doe
        locale:
          description: Locale.
          type: string
          enum:
            - Federal
            - State
            - Local
            - Tribal
          example: Federal
        fec_committee_type_code:
          description: Committee type codes.
          type: string
          enum:
            - C
            - D
            - E
            - H
            - I
            - N
            - O
            - P
            - Q
            - S
            - U
            - V
            - W
            - X
            - Y
            - Z
          example: C
        committee_id:
          description: Free text field. The committee/campaign ID issued for Federal and
            any other locale - if not issued, enter "00000".
          type: string
          example: "00000"
        candidate_type:
          description: Free text field. Required for campaigns. If committee is not
            candidate-specific, enter "PAC".
          type: string
          example: PAC
        state_local_committee_type:
          description: Free text field. Required for State, Local, and Tribal -- if
            Federal, enter "FEDERAL".
          type: string
          example: FEDERAL
        local_committee_state:
          description: If Federal Congress, enter the state(2 letter code) to be
            represented; if President, enter "US".
          type: string
          example: AZ
        local_committee_municipality:
          description: Free text field. If Federal Congress, enter district to be
            represented; if President, enter "US".
          type: string
          example: US
        tribal_location:
          description: Free text field. If non-tribal, enter "US".
          type: string
          example: US
        filing_url:
          description: Should be a valid URL format. Election authority website URL where
            the filing information can be found.
          type: string
          example: https://example.com
        filing_record_url_instructions:
          description: Free text field. Additional instructions to aid in locating the
            filing record.
          type: string
          example: Additional instructions
        filing_email:
          description: Free text field. Exactly as filed with election authority. If not
            supplied, PIN cannot be sent via email.
          type: string
          example: john@email.com
        election_date:
          description: Date string in the format yyyy-mm-dd. Must be in the future.
          type: string
          example: 2022-10-31
        pin_preference:
          description: Pin preference.
          type: string
          enum:
            - Regular
            - Express
            - Email
          example: Regular
      required:
        - requestor_first_name
        - requestor_last_name
        - locale
        - fec_committee_type_code
        - committee_id
        - candidate_type
        - state_local_committee_type
        - local_committee_state
        - local_committee_municipality
        - tribal_location
        - filing_url
        - election_date
        - pin_preference
    VettingAdditionalInfo:
      description: Additional brand information in json format. Required for POLITICAL
        type vets.
      type: object
      properties:
        requestor_first_name:
          description: First name of vetting requester.
          type: string
          example: John
        requestor_last_name:
          description: Last name of vetting requester.
          type: string
          example: Doe
        locale:
          description: Locale.
          type: string
          enum:
            - Federal
            - State
            - Local
            - Tribal
          example: Federal
        fec_committee_type_code:
          description: Committee type codes.
          type: string
          enum:
            - C
            - D
            - E
            - H
            - I
            - N
            - O
            - P
            - Q
            - S
            - U
            - V
            - W
            - X
            - Y
            - Z
          example: C
        committee_id:
          description: Free text field. The committee/campaign ID issued for Federal and
            any other locale - if not issued, enter "00000".
          type: string
          example: "00000"
        candidate_type:
          description: Free text field. Required for campaigns. If committee is not
            candidate-specific, enter "PAC".
          type: string
          example: PAC
        state_local_committee_type:
          description: Free text field. Required for State, Local, and Tribal -- if
            Federal, enter "FEDERAL".
          type: string
          example: FEDERAL
        local_committee_state:
          description: If Federal Congress, enter the state(2 letter code) to be
            represented; if President, enter "US".
          type: string
          example: AZ
        local_committee_municipality:
          description: Free text field. If Federal Congress, enter district to be
            represented; if President, enter "US".
          type: string
          example: US
        tribal_location:
          description: Free text field. If non-tribal, enter "US".
          type: string
          example: US
        filing_url:
          description: Should be a valid URL format. Election authority website URL where
            the filing information can be found.
          type: string
          example: https://example.com
        filing_record_url_instructions:
          description: Free text field. Additional instructions to aid in locating the
            filing record.
          type: string
          example: Additional instructions
        filing_email:
          description: Free text field. Exactly as filed with election authority. If not
            supplied, PIN cannot be sent via email.
          type: string
          example: John@email.com
        election_date:
          description: Date string in the format yyyy-dd-mm. Must be in the future.
          type: string
          example: 2022-31-10
        pin_preference:
          description: Pin preference.
          type: string
          enum:
            - Regular
            - Express
            - Email
          example: Regular
      required:
        - requestor_first_name
        - requestor_last_name
        - locale
        - fec_committee_type_code
        - committee_id
        - candidate_type
        - state_local_committee_type
        - local_committee_state
        - local_committee_municipality
        - tribal_location
        - filing_url
        - election_date
        - pin_preference
    VettingDetails:
      type: object
      description: Collection of non-standard attributes (key-value pairs), applicable
        to some vetting records.
    ThroughputID:
      description: Throughput ID.
      type: string
      format: uuid
      example: 91cd871e-ce9e-4f4d-a792-23277cbc287d
    ThroughputItem:
      type: object
      description: |
        Represents a throughput counter (text messages per period),
        with the list of carriers it applies to,
        the scope it applies to and period covered.

        The id field is only defined in case of custom throughput overrides.
      properties:
        id:
          $ref: "#/components/schemas/ThroughputID"
        brand_id:
          description: TCR Brand ID.
          type: string
          pattern: ^[0-9A-F]{7}$
          maxLength: 50
          example:
            $ref: "#/paths/~1v1~110dlc~1brands~1%7Bbrand_id%7D~1revet/post/responses/200/co\
              ntent/application~1json/examples/vonage/value/brand_id"
        campaign_id:
          description: Vonage Campaign ID.
          type: string
          maxLength: 50
          example: VC987XYZ
        carriers:
          description: List of carriers to which the throughput applies.
          type: array
          items:
            type: string
            description: Carrier name
          example:
            - AT&T
            - ClearSky
        value:
          oneOf:
            - $ref: "#/components/schemas/ThroughputValueShared"
            - $ref: "#/components/schemas/ThroughputValueDetailed"
            - $ref: "#/components/schemas/ThroughputValueUnlimited"
        period:
          $ref: "#/components/schemas/ThroughputPeriod"
        scope:
          $ref: "#/components/schemas/ThroughputScope"
      required:
        - id
        - carriers
        - value
        - period
        - scope
    ThroughputValueShared:
      type: object
      description: Shared throughput value for both SMS and MMS.
      properties:
        shared:
          type: integer
          description: Shared throughput value for both SMS and MMS.
          example: 1000
      required:
        - shared
    ThroughputValueDetailed:
      type: object
      description: Separate throughput values for SMS and MMS.
      properties:
        sms:
          type: integer
          description: SMS throughput value.
          example: 750
        mms:
          type: integer
          description: MMS throughput value.
          example: 250
      required:
        - sms
        - mms
    ThroughputValueUnlimited:
      type: object
      description: The throughput is unlimited for both SMS and MMS.
      properties:
        unlimited:
          type: boolean
          description: The throughput is unlimited for both SMS and MMS.
          example: true
      required:
        - unlimited
    ThroughputPeriod:
      description: The period for which the throughput applies.
      type: string
      enum:
        - minute
        - day
    ThroughputScope:
      description: The scope of the throughput.
      type: string
      enum:
        - campaign
        - brand
        - number
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  parameters:
    path_reseller_id:
      in: path
      name: reseller_id
      description: Unique identifier assigned to the reseller.
      required: true
      schema:
        $ref: "#/components/schemas/ResellerID"
    Number:
      in: path
      name: number
      description: Number to work with inside a campaign
      required: true
      schema:
        $ref: "#/components/schemas/Number"
x-errors:
  brand-conflict:
    description: A conflict when a brand is being created or edited and there is an
      issue with a 3rd party vendor.
    resolution: Ensure all required fields have values and there are no errors in
      those values. If the error persists, contact
      [support](mailto:${CUSTOMER_SUPPORT_EMAIL}).
  brand-parameters:
    description: There are errors in the brand data submitted.
    resolution: Ensure all required fields have values included and correct any
      errors to values in the specified fields.
  invalid-usecase-data:
    description: There are errors in the data submitted for use case qualification.
    resolution: Ensure all required fields have values included and correct any
      errors to values in the specified fields.
  use-case-denied:
    description: The use case requested has been denied for this brand.
    resolution: Ensure your use case does not require additional brand vetting or
      pre/post Mobile Network Operator approval.
  vetting-conflict:
    description: A conflict during the brand vetting request has occurred.
    resolution: If the error persists, contact [support](mailto:${CUSTOMER_SUPPORT_EMAIL}).
  invalid-vetting-data:
    description: There are errors in the vetting request data submitted.
    resolution: Ensure all required fields have values and correct any errors to
      values in the specified fields.
  invalid-json:
    description: Your request cannot be parsed.
    resolution: Ensure there are no invalid characters or values in your request.
  brand-not-qualified:
    description: A conflict when a campaign is being created under a brand that
      hasn't qualified for the specified use case.
    resolution: Verify the brand use case qualifies before submitting the campaign.
  invalid-campaign-data:
    description: There are errors in the campaign data submitted.
    resolution: Ensure all required fields have values and correct any errors to
      values in the specified fields.
  numbers-already-linked:
    description: The number you are attempting to link is already linked to another
      campaign.
    resolution: You must link a unique number to a campaign. Link a different number
      to this campaign.
  invalid-number-data:
    description: There are errors in the number data submitted.
    resolution: Ensure all required fields have values and correct any errors to
      values in the specified fields.
