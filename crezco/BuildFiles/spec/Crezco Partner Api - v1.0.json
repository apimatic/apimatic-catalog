{"openapi":"3.0.1","info":{"title":"Crezco Partner Api","description":"ï»¿\n---\n\n## Authorization\n\nApi key should be sent as a header (Example: 'X-Crezco-Key: *yourkey*').\n\nClick __Authorize__ button to add your key as a header to all calls.\n\nTo get a key, please contact support.\n\n## Support\n\nFor support go to [Crezco support portal](https://crezco.atlassian.net/servicedesk/customer/portal/2/group/7) or e-mail [support@crezco.com](mailto:support@crezco.com).\n\n## Quick start\n\n### Create a user\n\nUse POST on users endpoint in order to create a new user. All pay demands when created will be associated with a particular user, who can be thought of as a beneficiary of the payments.\n\n### Create pay demand\n\nPay demand is a representation of an invoice. It contains instructions of the amount that needs to be paid, any reference (description or purpose) of the payment, as well as details of the beneficiary's bank account.\n\nEvery pay demand, when created, is associated with a specific user. \n\n### Obtain pay demand URL\n\nEach pay demand has a unique URL associated with it. \n\nThis URL may be sent to an individual who must make a payment. It may be sent as a standard URL, or could be embeded in a QR code.","version":"v1"},"servers":[{"url":"https://api.sandbox.crezco.com","description":"Sandbox"},{"url":"https://api.crezco.com","description":"Production"}],"paths":{"/v1/users/{userId}":{"get":{"tags":["Users"],"summary":"Get information on existing user","description":"User data is returned if user exists and is associated with the current partner\r\n\r\nIf no such user is found an error is produced.","operationId":"GetUserAsync","parameters":[{"name":"userId","in":"path","description":"Unique user identifier","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserInfoDetails"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationProblemDetails"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}},"default":{"description":"Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}}}},"delete":{"tags":["Users"],"summary":"Removes users association with a given partner and deletes user if not associated with any other partners","description":"Any user that has associated pay demands or payments will not be deleted","operationId":"DisconnectUserAsync","parameters":[{"name":"userId","in":"path","description":"Unique identifier (UUID) of the user","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Success"},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationProblemDetails"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}},"default":{"description":"Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}}}}},"/v1/users/{userId}/pay-demands/detail":{"post":{"tags":["Pay Demands"],"summary":"Add new Pay Demand for a User","description":"Given pay demand data creates a relevant record and returns  \r\ncreated pay demand object, including payment URL.\r\n\r\nPayload provides both economic and descriptive parameters of the payment being requested.\r\n\r\nDestination bank account must be previously specified by the user within Crezco app.\r\n\r\n**NOTE**: Assignment of default bank accounts is done interactively by the end-user either via separate \r\npartner onboarding workflow for the user, or via a user dashboard.\r\n\r\nThis operation is idempotent, meaning that if multiple requests are submitted\r\nwith the same idempotency id, then results of the first successful request will be returned.","operationId":"AddUserPayDemandDetailAsync","parameters":[{"name":"userId","in":"path","description":"Unique identifier (UUID) of the user who owns pay demand","required":true,"schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Pay Demand Descriptor","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayDemandCreationIdempotent"}}}},"responses":{"201":{"description":"Created a new pay demand - PayDemand structure is returned, which includes a *Payment URL*","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayDemand"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationProblemDetails"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}},"422":{"description":"Unprocessable Entity - Errors in the body of request"},"default":{"description":"Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}}}}},"/v1/pay-demands/{payDemandId}":{"get":{"tags":["Pay Demands"],"summary":"Get pay demand data for specified PayDemandId (UUID)","description":"Retrieve pay demand data, as well as Payment URL","operationId":"GetPayDemandAsync","parameters":[{"name":"payDemandId","in":"path","description":"Unique identifier of the Pay Demand produced by AddPayDemand","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayDemand"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationProblemDetails"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}},"default":{"description":"Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}}}}},"/v1/users/{userId}/pay-demands":{"get":{"tags":["Pay Demands"],"summary":"Get all Pay Demands for a given user","description":"**Note** that only pay demands created using current API key will be returned.","operationId":"GetUserPayDemandsAsync","parameters":[{"name":"userId","in":"path","description":"Unique identifier (UUID) of the user","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PayDemand"}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationProblemDetails"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}},"default":{"description":"Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}}}},"post":{"tags":["Pay Demands"],"summary":"Add new Pay Demand for a User","description":"Given pay demand data creates a relevant record and returns unique \r\npay demand identifier.\r\n\r\nPayload provides both economic and descriptive parameters of the payment being requested, as well as (optionally) destination bank details.\r\n\r\nOptionality is controlled by a flag *UseDefaultBeneficiaryAccount* within payload, \r\nand consists of either\r\n- Explicitly specifying beneficiary's bank account details (*PayeeName* as well as *IBAN* and/or *BBAN*) , or\r\n- Setting the flag *UseDefaultBeneficiaryAccount* to true and then using previously specified default bank account details.\r\n\r\nIn the latter case, both PayeeName and BBAN/IBAN fields in payload **must** be left blank or ommitted.\r\n\r\n**NOTE**: Assignment of default bank accounts is done interactively by the end-user either via separate \r\npartner onboarding workflow for the user, or via a user dashboard.\r\n\r\nThis operation is idempotent, meaning that if multiple requests are submitted\r\nwith the same idempotency id, then results of the first successful request will be returned.","operationId":"AddUserPayDemandAsync","parameters":[{"name":"userId","in":"path","description":"Unique identifier (UUID) of the user who owns pay demand","required":true,"schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Pay Demand Descriptor","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PayDemandCreationIdempotent"}}}},"responses":{"201":{"description":"Created a new pay demand - its identifier is returned","content":{"application/json":{"schema":{"type":"string","format":"uuid"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationProblemDetails"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}},"422":{"description":"Unprocessable Entity - Errors in the body of request"},"default":{"description":"Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}}}}},"/v1/users/{userId}/pay-demands/{payDemandId}":{"delete":{"tags":["Pay Demands"],"summary":"Delete pay demand for a user","description":"Any pay demand that has associated payments may not be deleted.","operationId":"DeleteUserPayDemandAsync","parameters":[{"name":"userId","in":"path","description":"Unique identifier (UUID) of the user who owns pay demand","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"payDemandId","in":"path","description":"Unique identifier (UUID) of the pay demand","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Success"},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationProblemDetails"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}},"default":{"description":"Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}}}}},"/v1/pay-demands/{payDemandId}/payments":{"get":{"tags":["Payments"],"summary":"Get payments for Pay Demand","description":"Produces a list of (partial) payments associated with given pay demand","operationId":"GetPayDemandPaymentsAsync","parameters":[{"name":"payDemandId","in":"path","description":"Unique identifier of the Pay Demand produced by AddPayDemand","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PartialPayment"}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationProblemDetails"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}},"default":{"description":"Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}}}}},"/v1/payments/{paymentId}":{"get":{"tags":["Payments"],"summary":"Get Payment","description":"Get details of the specified payment, which may be a partial payment.","operationId":"GetPaymentAsync","parameters":[{"name":"paymentId","in":"path","description":"Unique identifier of the Payment","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PartialPayment"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationProblemDetails"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}},"default":{"description":"Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}}}}},"/v1/payments/{paymentId}/status":{"get":{"tags":["Payments"],"summary":"Get payment status","description":"Retrieve the latest payment status as a **PaymentStatus** structure. This may change over time, until it reaches a \"terminal\" state (Completed, Rejected, etc.)","operationId":"GetPaymentStatusAsync","parameters":[{"name":"paymentId","in":"path","description":"Unique identifier of the Payment","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentStatus"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationProblemDetails"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}},"default":{"description":"Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}}}}},"/v1/users/{userId}/pay-demands/{payDemandId}/payment":{"post":{"tags":["Payments"],"summary":"Create a custom payment redirect address","description":"Custom redirect URLs allow specification of both the initial and final screen of the payment user's journey:\r\n            \r\nInitialScreen\r\n- DetailsCheck: The standard payment confirmation screen, showing all details of the PayDemand\r\n- BankSelection: The bank selection screen\r\n- ContinueToBank: A screen redirecting the the specified bank\r\n            \r\n**NOTE**: Using *ContinueToBank* also requires *bankId* and *countryIso2Code*. Bank details are available using\r\nthe v1/banks/ endpoint\r\n            \r\nFinalScreen\r\n- PaymentStatus: Payment status, shown until payment reaches a finalised state\r\n- PaymentConfirmation: Payment confirmation, allows user to enter email for a receipt\r\n- PaymentFeedback: Payment feedback, allows user to rate the payment experience\r\n\r\nSuccessful payments will be directed to **successCallbackUri** after the *FinalScreen*.\r\nCancelled or failed payments will be directed to **failureCallbackUri**.","operationId":"CreatePaymentAsync","parameters":[{"name":"userId","in":"path","description":"Unique identifier (UUID) of the user who owns pay demand","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"payDemandId","in":"path","description":"Unique identifier (UUID) of the pay demand","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"initialScreen","in":"query","description":"Initial (Crezco) screen presented to the user","schema":{"$ref":"#/components/schemas/InitialScreen"}},{"name":"finalScreen","in":"query","description":"Final (Crezco) screen presented to the user","schema":{"$ref":"#/components/schemas/FinalScreen"}},{"name":"bankId","in":"query","description":"Unique identifier for the payer's bank","schema":{"type":"string"}},{"name":"countryIso2Code","in":"query","description":"Country code (2 characters - ISO 3166-1) corresponding to the payer's bank","schema":{"type":"string","default":"GB"}},{"name":"successCallbackUri","in":"query","description":"URI that should be used to redirect to after payment is completed","schema":{"type":"string","format":"uri"}},{"name":"failureCallbackUri","in":"query","description":"URI that should be used to redirect to after payment has failed or been cancelled","schema":{"type":"string","format":"uri"}},{"name":"amount","in":"query","description":"Optional payment amount overriding the one specified in the pay demand","schema":{"type":"number","format":"double"}},{"name":"reference","in":"query","description":"Optional payment reference overriding the one specified in the pay demand","schema":{"type":"string"}},{"name":"payerEmail","in":"query","description":"Optional payer's e-mail address if available, to be used for notifications about payment status changes","schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentRedirects"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationProblemDetails"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}},"default":{"description":"Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}}}}},"/v1/banks/{countryIso2Code}/{bankFeatureType}":{"get":{"tags":["Banks"],"summary":"Get list of banks","operationId":"GetBanksAsync","parameters":[{"name":"countryIso2Code","in":"path","description":"Country code (2 characters - ISO 3166-1)","required":true,"schema":{"type":"string","default":"GB"}},{"name":"bankFeatureType","in":"path","description":"Payment type for which support is required","required":true,"schema":{"$ref":"#/components/schemas/BankFeatureType"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/BankInfo"}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationProblemDetails"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}},"default":{"description":"Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}}}}},"/v1/webhooks":{"post":{"tags":["Webhooks"],"summary":"Add new webhook","description":"Please consult [Web hooks guide](https://crezco-collect.readme.io/reference/web-hooks-guide)","operationId":"AddWebHookAsync","requestBody":{"description":"Structure containing configuration about the webhook","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NewWebHook"}}}},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"type":"string","format":"uuid"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationProblemDetails"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}},"default":{"description":"Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}}}},"get":{"tags":["Webhooks"],"summary":"Listing existing webhooks","description":"Produces full list of registered webhooks irrespective of their status","operationId":"GetWebHooksAsync","responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/WebHook"}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationProblemDetails"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}},"default":{"description":"Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}}}}},"/v1/webhooks/{webhookId}":{"delete":{"tags":["Webhooks"],"summary":"Delete existing webhook","description":"Error is returned if webhook with specified id is not found","operationId":"DeleteWebHookAsync","parameters":[{"name":"webhookId","in":"path","description":"Unique identifier (GUID) of the webhook","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Success"},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationProblemDetails"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}},"default":{"description":"Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetails"}}}}}}}},"components":{"schemas":{"BankAccount":{"type":"object","properties":{"id":{"type":"string","description":"The Crezco-specific BankAccount Id","format":"uuid"},"organisationId":{"type":"string","description":"The Organisation which owns this BankAccount within the Crezco system","format":"uuid"},"bankId":{"type":"string","description":"OpenBanking Bank Id","nullable":true,"example":"modelo"},"currency":{"type":"string","description":"3-letter ISO currency code","nullable":true,"example":"GBP"}},"additionalProperties":false,"description":"Bank Account details"},"BankFeatureType":{"enum":["DomesticInstantPayment","StandingOrder","DomesticFutureDatePayment"],"type":"string","description":"Different types of payments supported by the system"},"BankInfo":{"required":["bankCode","bankName","logoUrl"],"type":"object","properties":{"bankCode":{"maxLength":75,"minLength":2,"type":"string","description":"Unique code identifying the bank"},"bankName":{"maxLength":150,"minLength":2,"type":"string","description":"Descriptive bank name"},"logoUrl":{"type":"string","description":"URI of the bank's logo","format":"uri"}},"additionalProperties":false,"description":"Bank information"},"FinalScreen":{"enum":["PaymentStatus","PaymentConfirmation","PaymentFeedback"],"type":"string"},"InitialScreen":{"enum":["DetailsCheck","BankSelection","ContinueToBank"],"type":"string"},"NewWebHook":{"required":["callback","eventType","type"],"type":"object","properties":{"type":{"$ref":"#/components/schemas/WebHookType"},"eventType":{"$ref":"#/components/schemas/WebHookEventType"},"callback":{"minLength":1,"type":"string","format":"uri"},"version":{"type":"string","nullable":true}},"additionalProperties":false},"PartialPayment":{"required":["amount","currency"],"type":"object","properties":{"paymentId":{"type":"string","format":"uuid"},"created":{"type":"string","format":"date-time"},"amount":{"type":"number","description":"Amount in currency that was paid/instructed","format":"double","example":36.53},"currency":{"maxLength":3,"minLength":0,"pattern":"[A-Z]{3}","type":"string","description":"3-letter ISO currency code","default":"GBP","example":"GBP"},"status":{"$ref":"#/components/schemas/PaymentStatus"}},"additionalProperties":false},"PayDemand":{"required":["amount","currency","payeeName"],"type":"object","properties":{"payDemandId":{"type":"string","description":"Unique identifier for Pay Demand.\r\nIt is assigned by the system when demand is first created.\r\nFor any Add operations (either individual or bulk) this \r\nfield is ignored.","format":"uuid"},"payeeName":{"minLength":3,"type":"string","description":"Name of the bank account of the recepient","example":"John Doe"},"reference":{"maxLength":18,"pattern":"^[a-zA-Z0-9 .-]+$","type":"string","description":"Descriptive reference","nullable":true,"example":"Shipment 12345Z308"},"currency":{"maxLength":3,"minLength":0,"pattern":"[A-Z]{3}","type":"string","description":"3-letter ISO currency code","default":"GBP","example":"GBP"},"amount":{"minLength":1,"pattern":"\\d+(\\.\\d{1,2})?","type":"string","description":"Amount in currency being requested for payment","example":"176.53"},"paymentUri":{"type":"string","description":"URL of the payment page for this payment demand","nullable":true,"example":"https://app.sandbox.crezco.com/payment/pIkRoi0240uVFKydXKeyqA"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Arbitrary metadata in the form of key-value pairs.\r\n            \r\nThis data will be added to the web hook payloads for this pay demand.","nullable":true}},"additionalProperties":false,"description":"Pay Demand descriptor"},"PayDemandCreation":{"required":["amount","currency","reference"],"type":"object","properties":{"reference":{"maxLength":18,"minLength":1,"pattern":"^[a-zA-Z0-9 .-]+$","type":"string","description":"Descriptive reference","example":"Shipment 12345Z308"},"currency":{"maxLength":3,"minLength":0,"pattern":"[A-Z]{3}","type":"string","description":"3-letter ISO currency code","default":"GBP","example":"GBP"},"amount":{"minLength":1,"pattern":"\\d+(\\.\\d{1,2})?","type":"string","description":"Amount in currency being requested for payment","example":"176.53"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Arbitrary metadata in the form of key-value pairs.\r\n            \r\nThis data will be added to the web hook payloads for this pay demand.","nullable":true}},"additionalProperties":false,"description":"Provide both economic and descriptive parameters of the payment being requested.\r\n<remarks>\r\nPayload provides both economic and descriptive parameters of the payment being requested.\r\n**NOTE**: Assignment of destination bank accounts is done interactively by the end-user either via separate \r\npartner onboarding workflow for the user, or via a user dashboard.\r\n</remarks>"},"PayDemandCreationIdempotent":{"required":["idempotencyId","request"],"type":"object","properties":{"request":{"$ref":"#/components/schemas/PayDemandCreation"},"idempotencyId":{"type":"string","description":"A globally-unique identifier of the request.","format":"uuid"}},"additionalProperties":false,"description":"Idempotent request ensuring that the underlying action will be \r\nperformed only once, even if the same request is placed multiple times."},"PaymentRedirects":{"type":"object","properties":{"redirect":{"type":"string","format":"uri","nullable":true}},"additionalProperties":false},"PaymentStatus":{"type":"object","properties":{"code":{"$ref":"#/components/schemas/PaymentStatusCode"}},"additionalProperties":false,"description":"Payment status record\r\n\r\n<remarks>PaymentStatusCode enumerations:\r\n\r\nTerminal states are highlighted in bold\r\n\r\n### Pre-authorisation\r\n- New: Payment has been created internally, authorisation has not been attempted\r\n### Bank selection + authorisation\r\n- **Cancelled**: Payment / bank account selection process was cancelled by the user\r\n- **Failed**: Bank account selection process failed for some reason (failed to get redirect URL, bank failed to authorise user, etc)\r\n- **Denied**: Bank denied the payment - it failed a technical validation check\r\n### Post-bank selection + authorisation\r\n- Authorised: User completed bank account selection and authorised the transaction. Bank has not yet processed the request\r\n- **Declined**: Bank declined the payment\r\n- Accepted: Payment accepted but funds have not yet transferred\r\n- Blocked: Payment accepted by Bank, but awaiting further authorisations (multi-auth, or other approval flows)\r\n- **Completed**: Payment completed, funds transferred\r\n### Other\r\n- **Error**: Something went wrong outside of the normal flow\r\n</remarks>"},"PaymentStatusCode":{"enum":["New","Cancelled","Failed","Authorised","Error","Denied","Declined","Accepted","Blocked","Completed"],"type":"string","description":"Crezco PaymentStatus\r\nhttps://crezco.atlassian.net/wiki/spaces/TECH/pages/259653673/Payments+Service#Status"},"ProblemDetails":{"type":"object","properties":{"type":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"status":{"type":"integer","format":"int32","nullable":true},"detail":{"type":"string","nullable":true},"instance":{"type":"string","nullable":true}},"additionalProperties":{}},"UserInfoDetails":{"required":["eMail","mappedAccounts"],"type":"object","properties":{"firstName":{"maxLength":256,"minLength":2,"type":"string","description":"User's First (given) name","nullable":true,"example":"Robert"},"lastName":{"maxLength":256,"minLength":2,"type":"string","description":"User's Last (family) name","nullable":true,"example":"Smith"},"displayName":{"maxLength":256,"minLength":2,"type":"string","description":"User's display name","nullable":true,"example":"Bobby Smith"},"eMail":{"minLength":1,"type":"string","description":"A valid e-mail address.\r\nThis will be used to activate user's account and\r\ncommunicate temporary password.","format":"email"},"mappedAccounts":{"type":"array","items":{"$ref":"#/components/schemas/BankAccount"},"description":"List of configured default bank accounts"}},"additionalProperties":false,"description":"User Information (read model)"},"ValidationProblemDetails":{"type":"object","properties":{"type":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"status":{"type":"integer","format":"int32","nullable":true},"detail":{"type":"string","nullable":true},"instance":{"type":"string","nullable":true},"errors":{"type":"object","additionalProperties":{"type":"array","items":{"type":"string"}},"nullable":true}},"additionalProperties":{}},"WebHook":{"type":"object","properties":{"webHookId":{"type":"string","format":"uuid"},"type":{"$ref":"#/components/schemas/WebHookType"},"eventType":{"$ref":"#/components/schemas/WebHookEventType"},"callback":{"type":"string","nullable":true},"isActive":{"type":"boolean"},"deactivatedAtUtc":{"type":"string","format":"date-time","nullable":true},"version":{"type":"string","nullable":true}},"additionalProperties":false},"WebHookEventType":{"enum":["PaymentAll","PaymentPending","PaymentFailed","PaymentCompleted","PayableGroup","PayableBatch","PayRun","Payable","BankAccount","Authorisation","OrganisationOnboarding","Feature","Verification"],"type":"string"},"WebHookType":{"enum":["Payment","PayRun","Payable","BankAccount","PayableBatch","PayableGroup","Authorisation","OrganisationOnboarding","Feature","Verification"],"type":"string"}},"securitySchemes":{"ApiKey":{"type":"apiKey","description":"Api key should be sent as header (Example: 'X-Crezco-Key:{yourkey}')\nTo get a key, please e-mail support@crezco.com\n\nFor support go to https://crezco.atlassian.net/servicedesk/customer/portal/2/group/7","name":"X-Crezco-Key","in":"header"}}},"security":[{"ApiKey":[]}],"x-readme":{"explorer-enabled":true,"proxy-enabled":true}}