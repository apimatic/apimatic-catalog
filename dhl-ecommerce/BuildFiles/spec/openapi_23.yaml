---
openapi: 3.0.1
info:
  title: Print-Mailing Dispatch Preparation API
  contact:
    url: https://developer.dhl.com/api-reference/print-mailing-dispatch-preparation-api
    email: it-csp@deutschepost.de
  version: 20240826.2229.7-3546-10c2404
servers:
- url: https://api-eu.dhl.com/post/advertising/print-mailing
  description: Production environment
- url: https://api-uat-vzen.dhl.com/post/advertising/print-mailing
  description: Test environment
tags:
- name: authentication
  description: Get access tokens for Print-Mailing Automation services
- name: lookups
  description: Lists static request oder response values of other API resources
- name: addresses
  description: Create, update or get addresses use in processings. You need an access
    token with ROLE_DIS_ACCESS to access this resource.
- name: DIALOGPOST processing results
  description: Collect results and access information logs.You need an access token
    with ROLE_DIS_ACCESS and ROLE_DIS_MANAGE_DIALOGPOST to access this resource.
- name: cost calculation
  description: Cost calculation for DIALOGPOST, POSTWURFSPEZIAL and POSTAKTUELL.
- name: productiondefinitions
  description: Create, update or get your production definitions. You need an access
    token with ROLE_DIS_ACCESS to access this resource.
- name: DIALOGPOST contracts
  description: Create, update or get your DIALOGPOST contracts.You need an access
    token with ROLE_DIS_ACCESS to access this resource.
- name: DIALOGPOST processings
  description: Create, update and release processings or track processing states.You
    need an access token with ROLE_DIS_ACCESS and ROLE_DIS_MANAGE_DIALOGPOST to access
    this resource.
- name: Default induction
  description: Manage induction information for POSTWURFSPEZIAL and POSTAKTUELL processings.You
    need an access token with ROLE_DIS_ACCESS to access this resource.
- name: POSTAKTUELL processing results
  description: Collect results and access information logs.You need an access token
    with ROLE_DIS_ACCESS and ROLE_DIS_MANAGE_POSTAKTUELL to access this resource.
- name: POSTWURFSPEZIAL processings
  description: Create, update and release processings. Track processing states and
    collect results.You need an access token with ROLE_DIS_ACCESS and ROLE_DIS_MANAGE_POSTWURFSPEZIAL
    to access this resource.
- name: POSTAKTUELL processings
  description: Create, update and release processings. Track processing states and
    collect results.You need an access token with ROLE_DIS_ACCESS and ROLE_DIS_MANAGE_POSTAKTUELL
    to access this resource.
- name: POSTWURFSPEZIAL processing results
  description: Collect results and access information logs.You need an access token
    with ROLE_DIS_ACCESS and ROLE_DIS_MANAGE_POSTWURFSPEZIAL to access this resource.
- name: order records
  description: Manage order information (order records) which were sent to the Deutsche
    Post Auftragsmanagement.You need an access token with ROLE_DIS_ACCESS to access
    this resource.
- name: Default payment
  description: Manage payment information for POSTWURFSPEZIAL and POSTAKTUELL processings.You
    need an access token with ROLE_DIS_ACCESS to access this resource.
paths:
  "/user/v1/authentication/postshoplogin":
    post:
      tags:
      - authentication
      summary: Retrieve a dm access token for a registered user from the Post Shop.
      operationId: loginPostShopUser
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreatePostShopLoginRep"
        required: true
      responses:
        '200':
          description: Successfully generated a new access token. Find it in the response
            'jwtToken'.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TokenRep"
        '403':
          description: If a private user tries to login (DM_CUS_0001), or customerEkp
            is different from the one already saved in customer data (DM_CUS_0003).
  "/user/v1/authentication/partnersystem/tokenbased":
    post:
      tags:
      - authentication
      summary: Retrieve a dm access token for a registered user from a partner system
        using token based authentication.
      operationId: loginPartnerSystemTokenBased
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreatePartnerSystemLoginRep"
        required: true
      responses:
        '200':
          description: Successfully generated a new access token. Find it in the response
            'jwtToken'.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TokenRep"
        '422':
          description: Unprocessable entity. DM_GA_0009 if token has expired. DM_GA_0010
            if token signature is invalid. DM_GA_0011 if token was issued in the future.
            DM_CO_0006 if token cannot be decoded.
        '404':
          description: Resource not found. DM_GA_0008 if the partner system is unknown
            / is not active.
  "/user/v1/authentication/partnersystem/credentialsbased":
    post:
      tags:
      - authentication
      summary: Retrieve a dm access token for a registered user from a partner system
        using credential based authentication.
      operationId: loginPartnerSystemCredentialBased
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreatePartnerSystemTokenRep"
        required: true
      responses:
        '200':
          description: Successfully generated a new access token. Find it in the response
            'jwtToken'.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TokenRep"
        '422':
          description: If the authentication secret is wrong. (DM_CO_0011)
        '404':
          description: If the partner system and customer combination is not foundor
            the partner system is inactive or the partner system customer is inactive.
            (DM_GA_0008)
  "/user/v1/authentication/businesslogin":
    post:
      tags:
      - authentication
      summary: Retrieve a jwt for a business login.
      operationId: loginBusinessUser
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateBusinessLoginRep"
        required: true
      responses:
        '200':
          description: Successfully generated a new jwt. Find it in the response 'jwtToken'.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TokenRep"
  "/user/v1/customererrorcodelookups":
    get:
      tags:
      - lookups
      summary: Retrieve all error code lookups for this service.
      description: A lookup consists of an id and an internationalized label. It is
        used to communicate possible values for specific objects to the api caller.
      operationId: getAllCustomerErrorCodeLookups
      responses:
        '200':
          description: All available error code lookup values per lookup.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    "$ref": "#/components/schemas/ValueLabelPairRep"
  "/user/v1/authentication/reauth":
    get:
      tags:
      - authentication
      summary: Creates a new jwt with the maximum period of validity for the currently
        logged in user. You must call this method with a valid token in the authentication
        header
      operationId: reauth
      responses:
        '200':
          description: Successfully generated a new jwt. Find it in the response 'jwtToken'
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TokenRep"
  "/dispatchpreparation/v1/productiondefinitions/{id}":
    get:
      tags:
      - productiondefinitions
      summary: Get a specific production definition.
      operationId: getProductionDefinition
      parameters:
      - name: id
        in: path
        description: The identifier of the production definition.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Production definition found and returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductionDefinitionRep"
        '403':
          description: Access forbidden because of missing authority for resource.
    put:
      tags:
      - productiondefinitions
      summary: Update an existing production definition.
      operationId: updateProductionDefinition
      parameters:
      - name: id
        in: path
        description: The identifier of the production definition.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateOrUpdateProductionDefinitionRep"
        required: true
      responses:
        '422':
          description: 'DM_DIS_2002: If you specified production definition for trays
            AND bundles. DM_DIS_2004: If you tried to update a default production
            definition. DM_DIS_2003: Input data validation failed. Please notice the
            concrete error description in the error response.'
        '200':
          description: Production definition successfully updated.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductionDefinitionRep"
        '403':
          description: Access forbidden because of missing authority for resource.
    delete:
      tags:
      - productiondefinitions
      summary: Delete an existing production definition.
      operationId: deleteProductionDefinition
      parameters:
      - name: id
        in: path
        description: The identifier of the production definition.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '403':
          description: Access forbidden because of missing authority for resource.
        '200':
          description: Production definition successfully deleted.
          content:
            application/json:
              schema:
                type: object
  "/dispatchpreparation/v1/postwurfspezial/processings/{id}":
    get:
      tags:
      - POSTWURFSPEZIAL processings
      summary: Get detail information about a processing.
      description: This may be a draft or a completed processing.
      operationId: getProcessing
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '404':
          description: Processing with the given id was not found.
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
        '200':
          description: Processing found and returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PwspProcessingRep"
    put:
      tags:
      - POSTWURFSPEZIAL processings
      summary: Update an existing processing draft.
      description: You may update, release or delete it afterwards.
      operationId: updateProcessing
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateOrUpdatePwspProcessingRep"
        required: true
      responses:
        '200':
          description: Processing successfully created.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PwspProcessingRep"
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
        '422':
          description: 'DM_DIS_0003: If this processing is not in state ''CREATED''.DM_DIS_0020:
            Target group selection id of processing must be null when mailing items
            already exist or are created.'
    delete:
      tags:
      - POSTWURFSPEZIAL processings
      summary: Delete a processing draft.
      description: This is only possible for processings in state 'CREATED'.
      operationId: deleteProcessing
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Processing draft deleted.
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Processing with the given id was not found.
        '422':
          description: 'DM_DIS_0003: If this processing is not in state ''CREATED''.'
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
  "/dispatchpreparation/v1/postaktuell/processings/{id}":
    get:
      tags:
      - POSTAKTUELL processings
      summary: Get detail information about a processing.
      description: This may be a draft or a completed processing.
      operationId: getProcessing_1
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '404':
          description: Processing with the given id was not found.
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
        '200':
          description: Processing found and returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaProcessingRep"
    put:
      tags:
      - POSTAKTUELL processings
      summary: Update an existing processing draft.
      description: You may update, release or delete it afterwards.
      operationId: updateProcessing_1
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateOrUpdatePaProcessingRep"
        required: true
      responses:
        '200':
          description: Processing successfully created.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaProcessingRep"
        '422':
          description: 'DM_DIS_0003: If this processing is not in state ''CREATED''.'
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
    delete:
      tags:
      - POSTAKTUELL processings
      summary: Delete a processing draft.
      description: This is only possible for processings in state 'CREATED'.
      operationId: deleteProcessing_1
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Processing draft deleted.
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Processing with the given id was not found.
        '422':
          description: 'DM_DIS_0003: If this processing is not in state ''CREATED''.'
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
  "/dispatchpreparation/v1/orderrecords":
    get:
      tags:
      - order records
      summary: Fetches a list of order records.
      operationId: getOrderRecords
      parameters:
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      - name: datefrom
        in: query
        description: Filter order records by inductionDate from. Today, if not supplied.
        required: false
        schema:
          type: string
          format: date
      - name: dateto
        in: query
        description: Filter order records by inductionDate to.
        required: false
        schema:
          type: string
          format: date
      - name: processingid
        in: query
        description: Identifier of the requested processing.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: List of the requested order records.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CollectionRepOrderRecordRep"
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
        '422':
          description: 'DM_DIS_2024: If the given time range is invalid.'
    put:
      tags:
      - order records
      summary: Updates an order in order management (AM) and creates a record entry
        of type 'Change'.
      operationId: updateOrder
      parameters:
      - name: processingid
        in: query
        description: Identifier of the corresponding processing.
        required: true
        schema:
          type: integer
          format: int64
      - name: amOrderId
        in: query
        description: Identifier of the corresponding order issued by order management
          (AM).
        required: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateOrderRecordRep"
        required: true
      responses:
        '404':
          description: 'DM_DIS_2010: If the requested order does not exist. DM_DIS_2033:
            No order found for update.'
        '422':
          description: 'DM_DIS_2012: If the specified inductionDate is invalid. DM_DIS_2008:
            Wrong combination of induction information. DM_DIS_2030: Update not possible
            for processing with simulation. DM_DIS_2031: The originator ekp cannot
            be changed. DM_DIS_2029: Update is not possible. Processing not found.
            DM_DIS_2044: Depot of pick-up induction cannot be changed in order management.'
        '200':
          description: Creation of order record and update of order successful. Get
            the details from the order record list.
          content:
            "*/*":
              schema:
                type: object
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
    delete:
      tags:
      - order records
      summary: Cancel an order within Deutsche Post Auftragsmanagement.
      operationId: cancelOrder
      parameters:
      - name: processingid
        in: query
        description: Identifier of the corresponding processing.
        required: true
        schema:
          type: integer
          format: int64
      - name: amOrderId
        in: query
        description: Identifier of the corresponding order issued by order management
          (AM).
        required: false
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: Identifier of the customer owning the order.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
        '404':
          description: 'DM_DIS_2010: If the requested order does not exist.'
        '200':
          description: Order successfully cancelled.
          content:
            application/json:
              schema:
                type: object
        '422':
          description: 'DM_DIS_2011: If the order is not cancelable.'
  "/dispatchpreparation/v1/dialogpost/contracts/{id}":
    get:
      tags:
      - DIALOGPOST contracts
      summary: Get a specific contract.
      operationId: getContract
      parameters:
      - name: id
        in: path
        description: The identifier of the contract.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Contract found and returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DpContractRep"
        '403':
          description: Access forbidden because of missing authority for resource.
    put:
      tags:
      - DIALOGPOST contracts
      summary: Update an existing contract based on information you negotiated with
        your DV franking consultant.
      operationId: updateContract
      parameters:
      - name: id
        in: path
        description: The identifier of the contract. See lookup resource 'DisContractType'
          for available values.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateOrUpdateDpContractRep"
        required: true
      responses:
        '403':
          description: Access forbidden because of missing authority for resource.
        '200':
          description: Contract successfully updated.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DpContractRep"
        '422':
          description: " DM_DIS_2003: Input data validation failed. Please notice
            the concrete error description in the error response. DM_DIS_2007: Wrong
            combination of procedure number and payment information. DM_DIS_2008:
            Wrong combination of inductionType and induction information. DM_DIS_2036:
            Cannot update contract. E.g. change of contract type is not valid. DM_DIS_2038:
            If the procedure is not supported for the contract type."
    delete:
      tags:
      - DIALOGPOST contracts
      summary: Delete a contract.
      operationId: deleteContract
      parameters:
      - name: id
        in: path
        description: The identifier of the contract.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Contract successfully deleted.
          content:
            application/json:
              schema:
                type: object
        '403':
          description: Access forbidden because of missing authority for resource.
  "/dispatchpreparation/v1/defaultpayment":
    get:
      tags:
      - Default payment
      summary: Get default payment information for a customer.
      description: Returns the default payment information for a customer, if defined.
      operationId: getPayment
      parameters:
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '404':
          description: You did not define a default payment yet.
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
        '200':
          description: Payment found and returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DefaultPaymentRep"
    put:
      tags:
      - Default payment
      summary: Update default payment information for a customer.
      operationId: updatePayment
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateDefaultPaymentRep"
        required: true
      responses:
        '403':
          description: Access forbidden because of missing authority for ressource
            or entity.
        '404':
          description: If the given payment id does not exist.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DefaultPaymentRep"
        '422':
          description: 'DM_DIS_2021: If the payer''s address was not found in the
            master data.'
        '200':
          description: Payment successfully updated.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DefaultPaymentRep"
    post:
      tags:
      - Default payment
      summary: Define default payment information for a customer.
      operationId: createPayment
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateDefaultPaymentRep"
        required: true
      responses:
        '403':
          description: Access forbidden because of missing authority for resource.
        '201':
          description: Payment successfully created.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DefaultPaymentRep"
        '422':
          description: 'DM_DIS_0007 Only one payment per customer allowed. DM_DIS_2021:
            If the payer''s address was not found in the master data. '
    delete:
      tags:
      - Default payment
      summary: Delete default payment information for a customer.
      operationId: deletePayment
      parameters:
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
        '200':
          description: Payment successfully deleted.
          content:
            application/json:
              schema:
                type: object
  "/dispatchpreparation/v1/defaultinduction":
    get:
      tags:
      - Default induction
      summary: Get default induction information for a customer.
      description: Returns the default induction information for a customer, if defined.
      operationId: getInduction
      parameters:
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '404':
          description: You did not define a default induction yet.
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
        '200':
          description: Induction found and returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DefaultInductionRep"
    put:
      tags:
      - Default induction
      summary: Update default induction information for a customer.
      operationId: updatePayment_1
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateDefaultInductionRep"
        required: true
      responses:
        '200':
          description: Induction successfully updated.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DefaultInductionRep"
        '422':
          description: 'DM_DIS_2008: An induction with pick-up location must have
            a valid pick-up address.'
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
        '404':
          description: Induction for the customer was not found. Depot name not found.
    post:
      tags:
      - Default induction
      summary: Define default induction information for a customer.
      operationId: createInduction
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateDefaultInductionRep"
        required: true
      responses:
        '403':
          description: Access forbidden because of missing authority for resource.
        '404':
          description: Depot name was not found.
        '201':
          description: Induction successfully created.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DefaultInductionRep"
        '422':
          description: 'DM_DIS_0009 Only one induction per customer is allowed. DM_DIS_2008:
            An induction with pick-up location must have a valid pick-up address.'
    delete:
      tags:
      - Default induction
      summary: Delete default induction information for a customer.
      operationId: deletePayment_1
      parameters:
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
        '200':
          description: Induction successfully deleted.
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Induction for the customer was not found
  "/dispatchpreparation/v1/addresses/{id}":
    put:
      tags:
      - addresses
      summary: Update an existing address.
      operationId: updateAddress
      parameters:
      - name: id
        in: path
        description: The identifier of the address.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateOrUpdateAddressRep"
        required: true
      responses:
        '200':
          description: Address successfully updated.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AddressRep"
        '422':
          description: 'DM_DIS_2000: Address with ekp in use by other address. If
            the ekp''s checksum is not valid. DM_DIS_2003: Input data validation failed.
            Please notice the concrete error description in the error response.'
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
    delete:
      tags:
      - addresses
      summary: Delete address.
      operationId: deleteAddress
      parameters:
      - name: id
        in: path
        description: The identifier of the address.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '422':
          description: DM_DIS_0008 Cannot delete because it is in use by payment.
        '200':
          description: Address successfully deleted.
          content:
            application/json:
              schema:
                type: object
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
  "/dispatchpreparation/v1/productiondefinitions":
    get:
      tags:
      - productiondefinitions
      summary: Get all production definitions.
      description: There exist three default production definitions for each product.
        They are called 'LetterC5', 'LetterDL', 'PostcardDL', 'LetterC5Postwurfspezial',
        'LetterDLPostwurfspezial' and 'PostcardDLPostwurfspezial'. You may use them
        or create a copy of them with a new production definition name.
      operationId: getProductionDefinitions
      parameters:
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      - name: name
        in: query
        description: Partial or full name of the productiondefinition.
        required: false
        schema:
          type: string
      responses:
        '403':
          description: Access forbidden because of missing authority for resource.
        '200':
          description: Production definitions found and returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CollectionRepProductionDefinitionRep"
    post:
      tags:
      - productiondefinitions
      summary: Add a new production definition.
      operationId: createProductionDefinition
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateOrUpdateProductionDefinitionRep"
        required: true
      responses:
        '403':
          description: Access forbidden because of missing authority for resource.
        '201':
          description: Production definition successfully created.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductionDefinitionRep"
        '422':
          description: 'DM_DIS_2001: Another production definition with the same name
            exists already. DM_DIS_2002: If you specified production definition for
            trays AND bundles. DM_DIS_2004: If you tried to update a default production
            definition. DM_DIS_2003: Input data validation failed. Please notice the
            concrete error description in the error response.'
  "/dispatchpreparation/v1/postwurfspezial/simplecostcalculation":
    post:
      tags:
      - cost calculation
      summary: Calculate costs without a list of mailing items.
      operationId: calculateCosts
      requestBody:
        content:
          application/xml:
            schema:
              "$ref": "#/components/schemas/CreatePwspSimpleCostCalculationRep"
          application/json:
            schema:
              "$ref": "#/components/schemas/CreatePwspSimpleCostCalculationRep"
        required: true
      responses:
        '422':
          description: Invalid input. DM_DIS_0002 The input is invalid. A specific
            reason of the subsystem is provided. DM_DIS_1005 inductionDate has to
            be in the future.
        '200':
          description: Cost calculation successfully created.
          content:
            application/xml:
              schema:
                "$ref": "#/components/schemas/PwspSimpleCostCalculationRep"
            application/json:
              schema:
                "$ref": "#/components/schemas/PwspSimpleCostCalculationRep"
  "/dispatchpreparation/v1/postwurfspezial/processings":
    get:
      tags:
      - POSTWURFSPEZIAL processings
      summary: Get an overview of your processings.
      description: This resource is pageable and filterable! The default page size
        is 20.
      operationId: getProcessings
      parameters:
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      - name: processingState
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: description
        in: query
        schema:
          type: string
      - name: targetGroupSelectionId
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Processing list found and returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CollectionRepPwspProcessingRep"
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
    post:
      tags:
      - POSTWURFSPEZIAL processings
      summary: Create a new processing as a draft.
      description: You may update, release or delete it afterwards.
      operationId: createProcessing
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateOrUpdatePwspProcessingRep"
        required: true
      responses:
        '200':
          description: Processing successfully created.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PwspProcessingRep"
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
  "/dispatchpreparation/v1/postwurfspezial/processings/{id}/release":
    post:
      tags:
      - POSTWURFSPEZIAL processings
      summary: Release a processing on basis of the current draft.
      description: This is only possible for processings in state 'CREATED'. It will
        validate all relevant mailing parameters, fetch your selection from the Target
        Group Planner and start preparing concrete recipient addresses.
      operationId: releaseProcessing
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '422':
          description: 'DM_DIS_0004: If this processing is not in state ''CREATED''.
            DM_DIS_2016: No default payment is defined. DM_DIS_2017: No default induction
            is defined. DM_DIS_2020: The target group selection id cannot be found
            for the given customer. DM_DIS_2021: If an address was not found in the
            master data. DM_DIS_0014: If an production definition optimizationType
            other than FABRICATION_EFFORT is chosen. DM_DIS_0015: If no pallet production
            is chosen. DM_DIS_0041: Your customer''s EKP is not allowed to book PWSP
            processings. Please contact your sales contact person. DM_DIS_0021: Either
            target group selection id or mailing items of processing must be given.
            Other validation errors: for mailing definition parameters may occur.'
        '404':
          description: Processing with the given id was not found.
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
        '200':
          description: Release of processing successful.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PwspProcessingRep"
  "/dispatchpreparation/v1/postwurfspezial/processings/{id}/mailingitems":
    post:
      tags:
      - POSTWURFSPEZIAL processings
      summary: Create mailing items.
      description: Existing mailing items will be replaced. This is only possible
        for processings in state 'CREATED'.
      operationId: createMailingItems
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: List of mailing items. Strongly recommended is gzip compression
          of the body and media type 'application/octet-stream'.
        content:
          application/octet-stream:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/CreatePwspProcessingMailingItemRep"
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/CreatePwspProcessingMailingItemRep"
        required: true
      responses:
        '422':
          description: 'DM_DIS_0006: If this processing is not in state ''CREATED''.DM_DIS_0020:
            Target group selection id of processing must be null when mailing items
            already exist or are created.'
        '404':
          description: Processing with the given id was not found.
        '201':
          description: Creation of mailing items successful.
          content:
            application/octet-stream:
              schema:
                type: object
            application/json:
              schema:
                type: object
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
  "/dispatchpreparation/v1/postwurfspezial/processings/{id}/mailing":
    get:
      tags:
      - POSTWURFSPEZIAL processings
      summary: Get information about the mailing.
      description: Finds and returns mailing. This is only possible for processings
        in state 'CREATED'.
      operationId: getMailing
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Mailing found and returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PwspProcessingMailingRep"
        '404':
          description: Processing with the given id was not found.
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
    post:
      tags:
      - POSTWURFSPEZIAL processings
      summary: Add information about the mailing.
      description: This is only possible for processings in state 'CREATED'.
      operationId: createOrUpdateMailing
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreatePwspProcessingMailingRep"
        required: true
      responses:
        '422':
          description: 'DM_DIS_0006: If this processing is not in state ''CREATED''.
            DM_DIS_2008: Wrong combination of inductionType and induction information.
            DM_DIS_2021: If an address was not found in the master data. DM_DIS_2016:
            No default payment is defined. DM_DIS_2017: No default induction is defined.
            DM_DIS_0023: Bundles with minNumberItemsForContainerLr are not supported
            for PWSP.'
        '404':
          description: Processing with the given id was not found.
        '200':
          description: Update successful.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PwspProcessingMailingRep"
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
  "/dispatchpreparation/v1/postaktuell/simplecostcalculation":
    post:
      tags:
      - cost calculation
      summary: Create a cost calculation.
      description: You need the authority ROLE_DIS_POSTAKTUELL_ANY_AND_ALL_HOUSEHOLDS
        to calculate a paProductVariant:2 (ANY_AND_ALL_HOUSEHOLDS).
      operationId: calculateCosts_1
      requestBody:
        content:
          application/xml:
            schema:
              "$ref": "#/components/schemas/CreatePaSimpleCostCalculationRep"
          application/json:
            schema:
              "$ref": "#/components/schemas/CreatePaSimpleCostCalculationRep"
        required: true
      responses:
        '422':
          description: Invalid input. DM_DIS_0002 The input is invalid. A specific
            reason of the subsystem is provided. DM_DIS_1005 inductionDate has to
            be in the future.
        '200':
          description: Cost calculation successfully created.
          content:
            application/xml:
              schema:
                "$ref": "#/components/schemas/PaSimpleCostCalculationRep"
            application/json:
              schema:
                "$ref": "#/components/schemas/PaSimpleCostCalculationRep"
  "/dispatchpreparation/v1/postaktuell/processings":
    post:
      tags:
      - POSTAKTUELL processings
      summary: Create a new processing as a draft.
      description: You may update, release or delete it afterwards.
      operationId: createProcessing_1
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateOrUpdatePaProcessingRep"
        required: true
      responses:
        '200':
          description: Processing successfully created.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaProcessingRep"
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
  "/dispatchpreparation/v1/postaktuell/processings/{id}/release":
    post:
      tags:
      - POSTAKTUELL processings
      summary: Release a processing on basis of the current draft.
      description: This is only possible for processings in state 'CREATED'. It will
        validate all relevant mailing parameters, fetch your selection from the Target
        Group Planner and start preparing concrete recipient addresses.
      operationId: releaseProcessing_1
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '404':
          description: Processing with the given id was not found.
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
        '422':
          description: 'DM_DIS_0004: If this processing is not in state ''CREATED''.
            DM_DIS_2016: No default payment is defined. DM_DIS_2017: No default induction
            is defined. DM_DIS_2020: The target group selection id cannot be found
            for the given customer. DM_DIS_2021: If an address was not found in the
            master data. Other validation errors for mailing definition parameters
            may occur.'
        '200':
          description: Release of processing successful.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaProcessingRep"
  "/dispatchpreparation/v1/postaktuell/processings/{id}/mailing":
    get:
      tags:
      - POSTAKTUELL processings
      summary: Get information about the mailing.
      description: Finds and returns mailing. This is only possible for processings
        in state 'CREATED'.
      operationId: getMailing_1
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Mailing found and returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaProcessingMailingRep"
        '404':
          description: Processing with the given id was not found.
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
    post:
      tags:
      - POSTAKTUELL processings
      summary: Add information about the mailing.
      description: This is only possible for processings in state 'CREATED'.
      operationId: createOrUpdateMailing_1
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreatePaProcessingMailingRep"
        required: true
      responses:
        '404':
          description: Processing with the given id was not found.
        '422':
          description: 'DM_DIS_0006: If this processing is not in state ''CREATED''.
            DM_DIS_2008: Wrong combination of inductionType and induction information.
            DM_DIS_2021: If an address was not found in the master data. DM_DIS_2016:
            No default payment is defined. DM_DIS_2017: No default induction is defined.
            DM_DIS_2027: Not enough rights to use product variant ANY_AND_ALL_HOUSEHOLDS. '
        '200':
          description: Update successful.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaProcessingMailingRep"
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
  "/dispatchpreparation/v1/dialogpost/standardcostcalculation":
    post:
      tags:
      - cost calculation
      summary: Calculate costs with a list of mailing items.
      operationId: indicateCosts
      requestBody:
        content:
          application/xml:
            schema:
              "$ref": "#/components/schemas/CreateDpStandardCostCalculationRep"
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateDpStandardCostCalculationRep"
        required: true
      responses:
        '200':
          description: Cost calculation successfully created.
          content:
            application/xml:
              schema:
                "$ref": "#/components/schemas/DpStandardCostCalculationRep"
            application/json:
              schema:
                "$ref": "#/components/schemas/DpStandardCostCalculationRep"
        '422':
          description: Invalid input. DM_DIS_0002 The input is invalid. A specific
            reason of the subsystem is provided.
  "/dispatchpreparation/v1/dialogpost/simplecostcalculation":
    post:
      tags:
      - cost calculation
      summary: Calculate costs without a list of mailing items.
      operationId: indicateCosts_1
      requestBody:
        content:
          application/xml:
            schema:
              "$ref": "#/components/schemas/CreateDpSimpleCostCalculationRep"
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateDpSimpleCostCalculationRep"
        required: true
      responses:
        '422':
          description: Invalid input. DM_DIS_0002 Input cannot be processed. DM_DIS_1005
            Invalid induction date. DM_DIS_1010 Invalid dimensions. DM_DIS_1015 Invalid
            type.
        '200':
          description: Cost calculation successfully created.
          content:
            application/xml:
              schema:
                "$ref": "#/components/schemas/DpSimpleCostCalculationRep"
            application/json:
              schema:
                "$ref": "#/components/schemas/DpSimpleCostCalculationRep"
  "/dispatchpreparation/v1/dialogpost/processings":
    get:
      tags:
      - DIALOGPOST processings
      summary: Get an overview of your processings.
      description: This resource is pageable and filterable! The default page size
        is 20.
      operationId: getProcessings_1
      parameters:
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      - name: processingState
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: description
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Processing list found and returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CollectionRepDpProcessingRep"
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
    post:
      tags:
      - DIALOGPOST processings
      summary: Create a new processing as a draft.
      description: You may update, release or delete it afterwards.
      operationId: createProcessing_2
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateDpProcessingRep"
        required: true
      responses:
        '201':
          description: Processing successfully created.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DpProcessingRep"
        '422':
          description: 'DM_DIS_2003: Input data validation failed. DM_DIS_2039 If
            the LETTER contract for processing with remaining items is missing. Please
            notice the concrete error description in the error response.'
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
  "/dispatchpreparation/v1/dialogpost/processings/{id}/release":
    post:
      tags:
      - DIALOGPOST processings
      summary: Release a processing on basis of the current draft.
      description: This is only possible for processings in state 'CREATED'.
      operationId: releaseProcessing_2
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '422':
          description: 'DM_DIS_0004: If this processing is not in state ''CREATED''.DM_DIS_2021:
            If an address was not found in the master data. DM_DIS_2043: If type of
            depot does not match type of induction. Other validation errors for mailing
            definition parameters may occur.'
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
        '200':
          description: Release of processing successful.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DpProcessingRep"
        '404':
          description: Processing with the given id was not found. If no matching
            contract was found.
  "/dispatchpreparation/v1/dialogpost/processings/{id}/mailingitems":
    post:
      tags:
      - DIALOGPOST processings
      summary: Create mailing items.
      description: Existing mailing items will be replaced. This is only possible
        for processings in state 'CREATED'.
      operationId: createMailingItems_1
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: List of mailing items. Strongly recommended is gzip compression
          of the body and media type 'application/octet-stream'.
        content:
          application/octet-stream:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/CreateDpProcessingMailingItemRep"
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/CreateDpProcessingMailingItemRep"
        required: true
      responses:
        '422':
          description: 'DM_DIS_0004: If this processing is not in state ''CREATED''.'
        '404':
          description: Processing with the given id was not found.
        '201':
          description: Creation of mailing items successful.
          content:
            application/octet-stream:
              schema:
                type: object
            application/json:
              schema:
                type: object
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
    delete:
      tags:
      - DIALOGPOST processings
      summary: Delete mailing items.
      description: Delete mailing items. This is only possible for processings in
        state 'CREATED'.
      operationId: deleteMailingItems
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '422':
          description: 'DM_DIS_0004: If this processing is not in state ''CREATED''.'
        '404':
          description: Processing with the given id was not found.
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
        '200':
          description: Deletion of mailing items successful.
          content:
            application/json:
              schema:
                type: object
  "/dispatchpreparation/v1/dialogpost/processings/{id}/mailing":
    get:
      tags:
      - DIALOGPOST processings
      summary: Get information about the mailing.
      description: Finds and returns mailing. This is only possible for processings
        in state 'CREATED'.
      operationId: getMailing_2
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Mailing found and returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DpProcessingMailingRep"
        '404':
          description: Processing with the given id was not found.
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
    post:
      tags:
      - DIALOGPOST processings
      summary: Add information about the mailing.
      description: This is only possible for processings in state 'CREATED'.
      operationId: createOrUpdateMailing_2
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateDpProcessingMailingRep"
        required: true
      responses:
        '200':
          description: Creation or update successful.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DpProcessingMailingRep"
        '404':
          description: Processing with the given id was not found.
        '422':
          description: 'DM_DIS_0006: If this processing is not in state ''CREATED''.
            DM_DIS_2021: If an address was not found in the master data. DM_DIS_2037:
            If multiple payments of the same contract type are configured.'
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
  "/dispatchpreparation/v1/dialogpost/contracts":
    get:
      tags:
      - DIALOGPOST contracts
      summary: Get all contracts.
      description: Contracts are necessary for it franking. They contain information
        about induction and payment.
      operationId: getContracts
      parameters:
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      - name: ownerekp
        in: query
        description: Owner ekp of the contract.
        required: false
        schema:
          type: string
      - name: name
        in: query
        description: Partial or full name of the contract.
        required: false
        schema:
          type: string
      responses:
        '403':
          description: Access forbidden because of missing authority for resource.
        '200':
          description: Contracts found and returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CollectionRepDpContractRep"
    post:
      tags:
      - DIALOGPOST contracts
      summary: Add a new contract based on information you negotiated with your DV
        franking consultant.
      operationId: createContract
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateOrUpdateDpContractRep"
        required: true
      responses:
        '201':
          description: Contract successfully created.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DpContractRep"
        '403':
          description: Access forbidden because of missing authority for resource.
        '422':
          description: 'DM_DIS_2005: A contract for the supplied ekp, procedure and
            subscription already exists. DM_DIS_2003: Input data validation failed.
            Please notice the concrete error description in the error response. DM_DIS_2007:
            Wrong combination of procedure number and payment information. DM_DIS_2008:
            Wrong combination of inductionType and induction information. DM_DIS_2036:
            Cannot update contract. E.g. change of contract type is not valid. DM_DIS_2038:
            If the procedure is not supported for the contract type.'
  "/dispatchpreparation/v1/addresses":
    get:
      tags:
      - addresses
      summary: Find addresses which can be referenced by ekp in processing.
      operationId: getAddresses
      parameters:
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      - name: ekp
        in: query
        description: Ekp of the address.
        required: false
        schema:
          type: string
      - name: name
        in: query
        description: Partial or full name of the address.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Addresses found and returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CollectionRepAddressRep"
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
    post:
      tags:
      - addresses
      summary: Add a new address. EKP must be different from other addresses for this
        customerId.
      operationId: createAddress
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateOrUpdateAddressRep"
        required: true
      responses:
        '422':
          description: 'DM_DIS_2000: Address with ekp in use by other address. If
            the ekp''s checksum is not valid. DM_DIS_2003: Input data validation failed.
            Please notice the concrete error description in the error response.'
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
        '201':
          description: Address successfully created.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AddressRep"
  "/dispatchpreparation/v1/postwurfspezial/processings/{id}/results":
    get:
      tags:
      - POSTWURFSPEZIAL processing results
      summary: Get processing result documents.
      description: Returns the concrete binary documents (pdf, jpg) you chose as 'createDocumentTypes'
        in your mailing parameters. The documents are zipped in a deflate compressed
        archive.
      operationId: getProcessingResultDocuments
      parameters:
      - name: id
        in: path
        description: The ID of a processing
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Documents found and returned as byte stream.
          content:
            application/octet-stream:
              schema:
                "$ref": "#/components/schemas/StreamingResponseBody"
            application/json:
              schema:
                "$ref": "#/components/schemas/StreamingResponseBody"
        '422':
          description: Invalid input.
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
  "/dispatchpreparation/v1/postwurfspezial/processings/{id}/results/postage":
    get:
      tags:
      - POSTWURFSPEZIAL processing results
      summary: Get postage result information.
      operationId: getProcessingResultPostage
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Postage information found and returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PwspProcessingResultsPostagesRep"
        '404':
          description: Processing with the given id was not found or postage result
            is not available yet (DM_DIS_2015).
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
  "/dispatchpreparation/v1/postwurfspezial/processings/{id}/results/mailingitems":
    get:
      tags:
      - POSTWURFSPEZIAL processing results
      summary: Get resulting mailing items.
      description: 'Please set the Accept-Encoding: gzip http header to ensure http
        response compression. An array of PwspProcessingResultsValuesMailingItemRep
        is returned.'
      operationId: getProcessingResultMailingItems
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '404':
          description: Processing with the given id was not found or mailing items
            are not available yet (DM_DIS_2015).
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
        '200':
          description: Mailing items information found and returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PwspProcessingResultsValuesMailingItemRep"
  "/dispatchpreparation/v1/postwurfspezial/processings/{id}/log":
    get:
      tags:
      - POSTWURFSPEZIAL processing results
      summary: Retrieve a trace log with info and error messages.
      operationId: getProcessingLog
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
        '200':
          description: Processing log found and returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProcessingLogRep"
  "/dispatchpreparation/v1/postaktuell/processings/{id}/results":
    get:
      tags:
      - POSTAKTUELL processing results
      summary: Get processing result documents.
      description: Returns the concrete binary documents (pdf, jpg) you chose as 'createDocumentTypes'
        in your mailing parameters. The documents are zipped in a deflate compressed
        archive.
      operationId: getProcessingResultDocuments_1
      parameters:
      - name: id
        in: path
        description: The ID of a processing
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Documents found and returned as byte stream.
          content:
            application/octet-stream:
              schema:
                "$ref": "#/components/schemas/StreamingResponseBody"
            application/json:
              schema:
                "$ref": "#/components/schemas/StreamingResponseBody"
        '422':
          description: Invalid input.
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
  "/dispatchpreparation/v1/postaktuell/processings/{id}/results/postage":
    get:
      tags:
      - POSTAKTUELL processing results
      summary: Get postage result information.
      operationId: getProcessingResultPostage_1
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Postage information found and returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaProcessingResultsPostagesRep"
        '404':
          description: Processing with the given id was not found or postage result
            is not available yet (DM_DIS_2015).
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
  "/dispatchpreparation/v1/postaktuell/processings/{id}/log":
    get:
      tags:
      - POSTAKTUELL processing results
      summary: Retrieve a trace log with info and error messages.
      operationId: getProcessingLog_1
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
        '200':
          description: Processing log found and returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProcessingLogRep"
  "/dispatchpreparation/v1/dispatchpreparationlookups":
    get:
      tags:
      - lookups
      summary: Retrieve all lookups for this service.
      description: A lookup consists of an id and an internationalized label. It is
        used to communicate possible values for specific objects to the api caller
      operationId: getAllLookups
      responses:
        '200':
          description: All available lookup values per lookup.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    "$ref": "#/components/schemas/KeyValuePairRep"
  "/dispatchpreparation/v1/dispatchpreparationerrorcodelookups":
    get:
      tags:
      - lookups
      summary: Retrieve all error code lookups for this service.
      description: A lookup consists of an id and an internationalized label. It is
        used to communicate possible values for specific objects to the api caller.
      operationId: getAllLookups_1
      responses:
        '200':
          description: All available error code lookup values per lookup.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    "$ref": "#/components/schemas/ValueLabelPairRep"
  "/dispatchpreparation/v1/dialogpost/processings/{id}":
    get:
      tags:
      - DIALOGPOST processings
      summary: Get detail information about a processing.
      description: This may be a draft or a completed processing.
      operationId: getProcessing_2
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '404':
          description: Processing with the given id was not found.
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
        '200':
          description: Processing found and returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DpProcessingDetailRep"
    delete:
      tags:
      - DIALOGPOST processings
      summary: Delete a processing draft.
      description: This is only possible for processings in state 'CREATED'.
      operationId: deleteProcessing_2
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Processing draft deleted.
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Processing with the given id was not found.
        '422':
          description: 'DM_DIS_0003: If this processing is not in state ''CREATED''.'
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
  "/dispatchpreparation/v1/dialogpost/processings/{id}/results":
    get:
      tags:
      - DIALOGPOST processing results
      summary: Get processing result documents.
      description: Returns the concrete binary documents (pdf, jpg) you chose as 'createDocumentTypes'
        in your mailing parameters. The documents are zipped in a deflate compressed
        archive.
      operationId: getProcessingResultDocuments_2
      parameters:
      - name: id
        in: path
        description: The ID of a processing
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Documents found and returned as byte stream.
          content:
            application/octet-stream:
              schema:
                "$ref": "#/components/schemas/StreamingResponseBody"
            application/json:
              schema:
                "$ref": "#/components/schemas/StreamingResponseBody"
        '422':
          description: Invalid input.
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
  "/dispatchpreparation/v1/dialogpost/processings/{id}/results/postageremaining":
    get:
      tags:
      - DIALOGPOST processing results
      summary: Get postage result information.
      operationId: getProcessingResultPostageRemaining
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '404':
          description: Processing with the given id was not found or postage result
            is not ready yet.
        '200':
          description: Postage information found and returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DpProcessingResultsValuesRemainingRep"
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
  "/dispatchpreparation/v1/dialogpost/processings/{id}/results/postage":
    get:
      tags:
      - DIALOGPOST processing results
      summary: Get postage result information.
      operationId: getProcessingResultPostage_2
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '404':
          description: Processing with the given id was not found or postage result
            is not ready yet.
        '200':
          description: Postage information found and returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DpProcessingResultsValues"
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
  "/dispatchpreparation/v1/dialogpost/processings/{id}/results/mailingitems":
    get:
      tags:
      - DIALOGPOST processing results
      summary: Get resulting mailing items.
      description: 'Please set the Accept-Encoding: gzip http header to ensure http
        response compression. An array of DpProcessingResultsValuesMailingItemRep
        is returned.'
      operationId: getProcessingResultMailingItems_1
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Mailing items information found and returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/DpProcessingResultsValuesMailingItemRep"
        '404':
          description: Processing with the given id was not found or mailing items
            are not available yet (DM_DIS_2015).
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
  "/dispatchpreparation/v1/dialogpost/processings/{id}/log":
    get:
      tags:
      - DIALOGPOST processing results
      summary: Retrieve a trace log with info and error messages.
      operationId: getProcessingLog_2
      parameters:
      - name: id
        in: path
        description: The identifier of the processing.
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: query
        description: ID of the customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '403':
          description: Access forbidden because of missing authority for resource
            or entity.
        '200':
          description: Processing log found and returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProcessingLogRep"
  "/dispatchpreparation/v1/depotlookups":
    get:
      tags:
      - lookups
      summary: Retrieve all Deutsche Post depot names.
      description: Get a list of Deutsche Post depots for induction and contract creation.
        Use the depots name attribute as unique key.
      operationId: getAllDepotLookups
      responses:
        '200':
          description: All available depots.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    "$ref": "#/components/schemas/DepotRep"
components:
  schemas:
    CreatePostShopLoginRep:
      required:
      - jwtToken
      type: object
      properties:
        jwtToken:
          type: string
          description: The json web token generated by the post shop as plain text.
      description: The postshop login data.
    TokenRep:
      type: object
      properties:
        jwtToken:
          type: string
          description: The DM-Suite token.
    CreatePartnerSystemLoginRep:
      required:
      - jwtToken
      type: object
      properties:
        jwtToken:
          type: string
          description: The json web token generated by a partner system
      description: The token based partner system login data.
    CreatePartnerSystemTokenRep:
      required:
      - authenticationSecret
      - locale
      - partnerSystemCustomerIdExt
      - partnerSystemIdExt
      type: object
      properties:
        partnerSystemIdExt:
          type: string
          description: The external partner system ID.
        partnerSystemCustomerIdExt:
          maxLength: 60
          minLength: 0
          type: string
          description: The external partner system customer ID.
        authenticationSecret:
          maxLength: 255
          minLength: 0
          type: string
          description: The authentication secret.
        locale:
          type: string
          description: The locale.
      description: The partner system login data.
    CreateBusinessLoginRep:
      required:
      - locale
      - password
      - username
      type: object
      properties:
        username:
          type: string
          description: The username of the user to login.
        password:
          type: string
          description: The password of the user to login.
        locale:
          type: string
          description: The locale used for subsequent requests (e.g. 'de' or 'en').
      description: The business login data.
    ValueLabelPairRep:
      type: object
      properties:
        value:
          type: string
        label:
          type: string
    CreateOrUpdateProductionDefinitionRep:
      required:
      - customerId
      - heightInDeciMm
      - lengthInDeciMm
      - mailingItemType
      - name
      - pallets
      - productionDefinitionFabricationType
      - weightInGram
      - widthInDeciMm
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: A human readable name for this production definition.
          example: Postcard DL
        mailingItemType:
          type: integer
          description: A mailing item type. See lookup resource 'MailingItemType'
            for available values.
          format: int32
          example: 2
        lengthInDeciMm:
          maximum: 6000
          minimum: 1000
          type: integer
          description: Length of the mailing item in 1/10 mm. Values will be rounded
            up to millimeters for the processing run.
          format: int64
          example: 2200
        widthInDeciMm:
          maximum: 4490
          minimum: 700
          type: integer
          description: Width of the mailing item in 1/10 mm. Values will be rounded
            up to millimeters for the processing run.
          format: int64
          example: 1050
        heightInDeciMm:
          maximum: 3000
          minimum: 1
          type: integer
          description: 'Height/Thickness of the mailing item in 1/10 mm. '
          format: int64
          example: 10
        notEnabledForAutomation:
          type: boolean
          description: Indicates whether the mailing items are not enabled for automation.
            Does not apply to product Postaktuell
          example: false
          default: false
        dialogpostKoop:
          type: boolean
          description: Specifies whether Dialogpost-Koop is used. When this option
            is set, extra items to reach a minimum of 100,000 total mailing items
            will be added, if necessary. This may be useful for Dialogpost-Koop customers
            to gain extra discounts on the real items. This parameter is  not available
            for products Postwurfspezial and Postaktuell.
          example: false
          default: false
        remainingItems:
          type: boolean
          description: Specifies whether Remaining Items are used. When this option
            is set, remaining items will be calculated for your processing. Make sure
            to add a contract of type LETTER for your remaining items to your processing.
            This parameter is not available for products Postwurfspezial and Postaktuell.
          example: true
          default: true
        unwrapped:
          type: boolean
          description: Specifies whether the mailing items are unwrapped.
          example: false
          default: false
        weightInGram:
          maximum: 10000
          minimum: 1
          type: integer
          description: Weight of the mailing item in gram.
          format: int64
          example: 7
        productionDefinitionFabricationType:
          type: integer
          description: Type of a mailing item container (tray or bundle). See lookup
            resource 'ProductionDefinitionFabricationType' for available values. TRAYS
            are not available for product Postaktuell.
          format: int32
          example: 1
        trays:
          "$ref": "#/components/schemas/ProductionDefinitionTraysRep"
        bundles:
          "$ref": "#/components/schemas/ProductionDefinitionBundlesRep"
        pallets:
          "$ref": "#/components/schemas/ProductionDefinitionPalletsRep"
        customerId:
          type: integer
          description: The customer id for which to act.
          format: int64
      description: Representation of a production definition for creating.
    ProductionDefinitionBundlesRep:
      required:
      - maxNumberItemsPerContainer
      - productionDefinitionOptimizationType
      type: object
      properties:
        maxNumberItemsPerContainer:
          type: integer
          description: Contains the maximum number of mailing items in a container.
          format: int32
          example: 450
        productionDefinitionOptimizationType:
          type: integer
          description: Define the optimization strategy for this production definition.
            See lookup resource 'ProductionDefinitionOptimizationType' for available
            values. For product Postwurfspezial, only FABRICATION_EFFORT is supported.
            This parameter does not apply to product Postaktuell.
          format: int32
          example: 1
        productionDefinitionNumberItemsDependentOptimizationType:
          type: integer
          description: 'Relevant only if you chose ProductionDefinitionOptimizationType=3:
            Define the concrete number of items for this option in minNumberItemsForContainerLr
            or minNumberItemsForContainerPlz. See lookup resource ''ProductionDefinitionNumberItemsDependentOptimizationType''
            for available values.'
          format: int32
          nullable: true
        minNumberItemsForContainerLr:
          minimum: 0
          type: integer
          description: 'Relevant only if you chose ProductionDefinitionNumberItemsDependentOptimizationType=1:Specifies
            the minimum number of mailing items inside an LR mailing item container
            for the container to be produced. This setting is meant to provide a means
            of controlling gain of rebates vs. increased production complexity. '
          format: int32
          nullable: true
        minNumberItemsForContainerPlz:
          minimum: 0
          type: integer
          description: 'Relevant only if you chose ProductionDefinitionNumberItemsDependentOptimizationType=3:Specifies
            the minimum number of mailing items inside a PLZ mailing item container
            for the container to be produced. This setting is meant to provide a means
            of controlling gain of rebates vs. increased production complexity. '
          format: int32
          nullable: true
        maxNumberItemsSmallBundle:
          minimum: 0
          type: integer
          description: Maximum number of mailing items in a bundle for this bundle
            to be considered 'small'.
          format: int32
          nullable: true
        productionOrderBundles:
          minimum: 0
          type: integer
          description: 'Specifies the production order of bundles vs. small bundles.
            Find the ''ProductionOrderBundles'' with options (e.g. ''Small first per
            pallet'') using the lookup resource. '
          format: int32
          nullable: true
          example: 1
          default: 1
        productionOrderSmallBundles:
          minimum: 0
          type: integer
          description: 'Specifies the production order of small bundles. Find the
            type ''ProductionOrderSmallBundles'' with options (e.g. ''ZIP ascending'')
            using the lookup resource. '
          format: int32
          nullable: true
          example: 1
          default: 1
      description: 'Relevant only if you chose ProductionDefinitionFabricationType=2:
        Production parameters for bundles.'
      nullable: true
    ProductionDefinitionPalletsRep:
      required:
      - usePallets
      type: object
      properties:
        usePallets:
          type: boolean
          description: Specifies whether fabrication of pallets should be enabled.
          example: true
        maxNumberMailingItemsPerPallet:
          type: integer
          description: Contains the maximum number of mailing items per pallet. Is
            mandatory for bundles. For Dialogpost, this parameter does not apply to
            trays.
          format: int32
          nullable: true
          example: 5000
        alwaysProducePallets:
          type: boolean
          description: Specifies whether pallets are even produced when they are not
            required, like for a total item weight of less than 500 kg. For product
            Postwurfspezial, only value true is valid.
          example: false
          default: false
        traysStackable:
          type: boolean
          description: Specifies whether stackable pallets are produced. Deprecated
            attribute. Will be replaced by 'stackable'
          example: false
          deprecated: true
          default: false
        stackable:
          type: boolean
          description: Specifies whether stackable pallets are produced.
          example: false
          default: false
        emptyWeightInGram:
          minimum: 1000
          type: integer
          description: Weight of an empty pallet in gram.
          format: int32
          example: 22000
          default: 22000
        maxNumberTraysPerPallet:
          minimum: 0
          type: integer
          description: Maximum number of trays that can be put on one pallet. Only
            relevant if FabricationType is TRAYS (1).
          format: int32
          nullable: true
          example: 28000
        maxNumberTraysPerLayer:
          minimum: 0
          type: integer
          description: Maximum number of trays per layer on a pallet. Only relevant
            if FabricationType is TRAYS (1).
          format: int32
          nullable: true
          example: 8
        productionDefinitionOptimizationType:
          type: integer
          description: Define the optimization strategy for the pallet production.
            Define the minimum amount of saved money for this option in minSavingToProduceExtraPallet.
            See lookup resource 'ProductionDefinitionOptimizationType' for available
            values. For product  Postwurfspezial, only FABRICATION_EFFORT is supported.
          format: int32
          example: 1
          default: 1
        minSavingToProduceExtraPallet:
          minimum: 0
          type: integer
          description: 'Relevant only if you chose ProductionDefinitionOptimizationType=3:
            Minimum amount of saved money in Cent for a not required pallet to be
            produced. For example, it might be possible to either put a bunch of containers
            on 1 LZ pallet, or on 2 LR pallets. Only if the 2 LR pallets cost at least
            as much less as the amount specified here, they will be produced. Otherwise,
            the 1 LZ pallet will be produced.'
          format: int64
          example: 0
          default: 0
      description: Production definitions for pallets. Set pallets.usePallets false
        if you don't want pallet production.
    ProductionDefinitionTraysRep:
      required:
      - maxNumberItemsPerContainer
      - productionDefinitionOptimizationType
      - trayType
      type: object
      properties:
        trayType:
          type: integer
          description: Available tray types (sizes). Standard Post trays exist in
            2 sizes. See lookup resource 'TrayType' for available values.
          format: int32
          example: 1
        maxNumberItemsPerContainer:
          type: integer
          description: Contains the maximum number of mailing items in a container.
          format: int32
          example: 450
        numberItemsForTrayHalfFull:
          type: integer
          description: Number of items of this variant that will make a tray be half-full.
            A tray must be at least half-full for production rebates.
          format: int32
          nullable: true
          example: 228
        productionDefinitionOptimizationType:
          type: integer
          description: Define the optimization strategy for this production definition.
            See lookup resource 'ProductionDefinitionOptimizationType' for available
            values. For product Postwurfspezial, only FABRICATION_EFFORT is supported.
          format: int32
          example: 1
        productionDefinitionNumberItemsDependentOptimizationType:
          type: integer
          description: 'Relevant only if you chose ProductionDefinitionOptimizationType=3:
            Define the concrete number of items for this option in minNumberItemsForContainerLr
            or minNumberItemsForContainerPlz. See lookup resource ''ProductionDefinitionNumberItemsDependentOptimizationType''
            for available values.'
          format: int32
          nullable: true
        minNumberItemsForContainerLr:
          minimum: 0
          type: integer
          description: 'Relevant only if you chose ProductionDefinitionNumberItemsDependentOptimizationType=1:Specifies
            the minimum number of mailing items inside an LR mailing item container
            for the container to be produced. This setting is meant to provide a means
            of controlling gain of rebates vs. increased production complexity. '
          format: int32
          nullable: true
        minNumberItemsForContainerPlz:
          minimum: 0
          type: integer
          description: 'Relevant only if you chose ProductionDefinitionNumberItemsDependentOptimizationType=3:Specifies
            the minimum number of mailing items inside a PLZ mailing item container
            for the container to be produced. This setting is meant to provide a means
            of controlling gain of rebates vs. increased production complexity. '
          format: int32
          nullable: true
      description: 'Relevant only if you chose ProductionDefinitionFabricationType=1:
        Production parameters for trays.'
      nullable: true
    ProductionDefinitionRep:
      required:
      - heightInDeciMm
      - lengthInDeciMm
      - mailingItemType
      - name
      - pallets
      - productionDefinitionFabricationType
      - weightInGram
      - widthInDeciMm
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: A human readable name for this production definition.
          example: Postcard DL
        mailingItemType:
          type: integer
          description: A mailing item type. See lookup resource 'MailingItemType'
            for available values.
          format: int32
          example: 2
        lengthInDeciMm:
          maximum: 6000
          minimum: 1000
          type: integer
          description: Length of the mailing item in 1/10 mm. Values will be rounded
            up to millimeters for the processing run.
          format: int64
          example: 2200
        widthInDeciMm:
          maximum: 4490
          minimum: 700
          type: integer
          description: Width of the mailing item in 1/10 mm. Values will be rounded
            up to millimeters for the processing run.
          format: int64
          example: 1050
        heightInDeciMm:
          maximum: 3000
          minimum: 1
          type: integer
          description: 'Height/Thickness of the mailing item in 1/10 mm. '
          format: int64
          example: 10
        notEnabledForAutomation:
          type: boolean
          description: Indicates whether the mailing items are not enabled for automation.
            Does not apply to product Postaktuell
          example: false
          default: false
        dialogpostKoop:
          type: boolean
          description: Specifies whether Dialogpost-Koop is used. When this option
            is set, extra items to reach a minimum of 100,000 total mailing items
            will be added, if necessary. This may be useful for Dialogpost-Koop customers
            to gain extra discounts on the real items. This parameter is  not available
            for products Postwurfspezial and Postaktuell.
          example: false
          default: false
        remainingItems:
          type: boolean
          description: Specifies whether Remaining Items are used. When this option
            is set, remaining items will be calculated for your processing. Make sure
            to add a contract of type LETTER for your remaining items to your processing.
            This parameter is not available for products Postwurfspezial and Postaktuell.
          example: true
          default: true
        unwrapped:
          type: boolean
          description: Specifies whether the mailing items are unwrapped.
          example: false
          default: false
        weightInGram:
          maximum: 10000
          minimum: 1
          type: integer
          description: Weight of the mailing item in gram.
          format: int64
          example: 7
        productionDefinitionFabricationType:
          type: integer
          description: Type of a mailing item container (tray or bundle). See lookup
            resource 'ProductionDefinitionFabricationType' for available values. TRAYS
            are not available for product Postaktuell.
          format: int32
          example: 1
        trays:
          "$ref": "#/components/schemas/ProductionDefinitionTraysRep"
        bundles:
          "$ref": "#/components/schemas/ProductionDefinitionBundlesRep"
        pallets:
          "$ref": "#/components/schemas/ProductionDefinitionPalletsRep"
        id:
          type: integer
          description: The identifier of the production definition.
          format: int64
    CreateOrUpdatePwspProcessingRep:
      required:
      - customerId
      - description
      type: object
      properties:
        customerId:
          type: integer
          description: The customer id for which to act.
          format: int64
        description:
          maxLength: 255
          minLength: 0
          type: string
          description: A text describing the processing.
          example: Summer session 2023
        targetGroupSelectionId:
          type: string
          description: Identifies your target group selection provided from the target
            group planner (TGP) system.
          example: 221a304d-eabc-4c25-a2cb-c6fafceed64
        simulation:
          type: boolean
          description: The simulation mode for a single processing. If true, documents
            for the released processing will be created with simulated content. Further,
            order records are neither created nor submitted to Deutsche Post Auftragsmanagement.
          example: false
    PwspProcessingRep:
      required:
      - description
      - targetGroupSelectionId
      type: object
      properties:
        id:
          type: integer
          description: Id of the processing.
          format: int64
        description:
          maxLength: 255
          minLength: 0
          type: string
          description: A text describing the processing.
          example: Summer session 2023
        processingState:
          type: integer
          description: The status of the processing. See lookup resource 'ProcessingState'
            for available values.
          format: int32
          example: 25
        processingType:
          type: integer
          description: The type of the processing. See lookup resource 'ProcessingType'
            for available values.
          format: int32
          example: 20
        mailingItemsQuantity:
          type: integer
          description: Amount of items of the mailing.
          format: int32
        mailingItemsErrors:
          type: integer
          description: Amount of erroneous items of the mailing.
          format: int32
        logInfoQuantity:
          type: integer
          description: Amount of registered informative log entries.
          format: int32
        logWarnQuantity:
          type: integer
          description: Amount of registered warnings within log entries.
          format: int32
        logErrorQuantity:
          type: integer
          description: Amount of registered error log entries.
          format: int32
        createdOn:
          type: string
          description: Date and time of the creation.
          format: date-time
        changedOn:
          type: string
          description: Date and time of the last change.
          format: date-time
        targetGroupSelectionId:
          type: string
          description: Identifies your target group selection provided from the target
            group planner (TGP) system.
          example: 221a304d-eabc-4c25-a2cb-c6fafceed64
    CreateOrUpdatePaProcessingRep:
      required:
      - customerId
      - description
      - targetGroupSelectionId
      type: object
      properties:
        customerId:
          type: integer
          description: The customer id for which to act.
          format: int64
        description:
          maxLength: 255
          minLength: 0
          type: string
          description: A text describing the processing.
          example: Summer session 2023
        targetGroupSelectionId:
          type: string
          description: Identifies your target group selection provided from the target
            group planner (TGP) system.
          example: 221a304d-eabc-4c25-a2cb-c6fafceed64
    PaProcessingRep:
      required:
      - description
      - targetGroupSelectionId
      type: object
      properties:
        id:
          type: integer
          description: Id of the processing.
          format: int64
        description:
          maxLength: 255
          minLength: 0
          type: string
          description: A text describing the processing.
          example: Summer session 2023
        processingState:
          type: integer
          description: The status of the processing. See lookup resource 'ProcessingState'
            for available values.
          format: int32
          example: 25
        processingType:
          type: integer
          description: The type of the processing. See lookup resource 'ProcessingType'
            for available values.
          format: int32
          example: 20
        mailingItemsQuantity:
          type: integer
          description: Amount of items of the mailing.
          format: int32
        mailingItemsErrors:
          type: integer
          description: Amount of erroneous items of the mailing.
          format: int32
        logInfoQuantity:
          type: integer
          description: Amount of registered informative log entries.
          format: int32
        logWarnQuantity:
          type: integer
          description: Amount of registered warnings within log entries.
          format: int32
        logErrorQuantity:
          type: integer
          description: Amount of registered error log entries.
          format: int32
        createdOn:
          type: string
          description: Date and time of the creation.
          format: date-time
        changedOn:
          type: string
          description: Date and time of the last change.
          format: date-time
        targetGroupSelectionId:
          type: string
          description: Identifies your target group selection provided from the target
            group planner (TGP) system.
          example: 221a304d-eabc-4c25-a2cb-c6fafceed64
    InductionBaseRep:
      type: object
      properties:
        depotName:
          maxLength: 50
          minLength: 0
          type: string
          description: Name of the Deutsche Post depot. Use a location of type 'ELN-Depot'
            for your pick-up induction or a location of type 'LARGE_RECEIVING_POINT'
            for post-to-depot induction. See 'depotlookups' resource for available
            values.
          example: Bautzen
        pickUpLocationStreet:
          maxLength: 50
          minLength: 0
          type: string
          description: 'Relevant only if you chose InductionType=1, pick-up location:
            Street without house number.'
          example: Musterstrasse
        pickUpLocationHouseNumber:
          maxLength: 20
          minLength: 0
          type: string
          description: 'Relevant only if you chose InductionType=1, pick-up location:
            House number.'
          example: '12'
        pickUpLocationZip:
          maxLength: 10
          minLength: 0
          type: string
          description: 'Relevant only if you chose InductionType=1, pick-up location:
            Zip code.'
          example: '12345'
        pickUpLocationCity:
          maxLength: 50
          minLength: 0
          type: string
          description: 'Relevant only if you chose InductionType=1, pick-up location:
            City.'
          example: Musterstadt
        pickUpLocationCountry:
          maxLength: 2
          minLength: 2
          type: string
          description: 'Relevant only if you chose InductionType=1, pick-up location:
            Country (ISO 3166-1 alpha-2: 2 letters).'
          example: DE
      description: Specifies induction parameters. You cannot change the induction
        type defined in the processing!
    UpdateOrderRecordRep:
      required:
      - customerId
      - induction
      - inductionDate
      type: object
      properties:
        customerId:
          type: integer
          description: The customer id for which to act.
          format: int64
        originatorEkp:
          type: string
          description: Originator ekp.
          example: '0000000001'
        submitterEkp:
          type: string
          description: Submitter ekp.
          example: '0000000002'
        induction:
          "$ref": "#/components/schemas/InductionBaseRep"
        inductionDate:
          type: string
          description: The submission date time of this order record.
          format: date-time
          example: '2022-09-10T20:00:00Z'
      description: The updated order record data.
    CreateOrUpdateDpContractRep:
      required:
      - customerId
      - entitledToDeductPreTax
      - induction
      - inductionType
      - name
      - originatorEkp
      - ownerEkp
      - procedureNumber
      - submitterEkp
      - subscriptionNumber
      type: object
      properties:
        contractType:
          type: integer
          description: The type of the contract.
          format: int32
          example: 1
          default: 1
        ownerEkp:
          type: string
          description: Identifies the contract owner. The first 10 digits of the contract
            number.This ekp has to be added to your addresses prior to contract creation.
          example: '0000000001'
        procedureNumber:
          maxLength: 2
          minLength: 2
          pattern: 10|25
          type: string
          description: This two-digit number ('Verfahren') is a part of your contract
            with Deutsche Post. Currently ONLY procedures 10 and 25 are supported.
          example: '25'
        subscriptionNumber:
          maxLength: 2
          minLength: 2
          pattern: 0[1-9]|[1-9][0-9]|[A-F][A-Z]
          type: string
          description: This two-digit number ('Teilnahme') is a part of your contract
            with Deutsche Post.
          example: '01'
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: A human readable name for this contract.
          example: My it franking contract
        originatorEkp:
          type: string
          description: Identifies the originator. This is the one who is the sender.
            This ekp has to be added to your addresses prior to contract creation.
            You may change this value in a concrete processing.
          example: '0000000002'
        submitterEkp:
          type: string
          description: Identifies the submitter. This is the one who conducts the
            induction. This ekp has to be added to your addresses prior to contract
            creation. You may change this value in a concrete processing.
          example: '0000000003'
        entitledToDeductPreTax:
          type: boolean
          description: Specifies whether the originator of this mailing is entitled
            to deduct pre-tax. If he is, net costs will be minimized.
          example: true
        payment:
          "$ref": "#/components/schemas/DpContractPaymentParametersRep"
        inductionType:
          type: integer
          description: Specifies whether mailings should be picked-up from an address
            or are transported to a Deutsche Post depot. See lookup resource 'InductionType'
            for available values. Only depot induction is valid for contract type
            LETTER.
          format: int32
          example: 2
        induction:
          "$ref": "#/components/schemas/InductionBaseRep"
        directPosting:
          "$ref": "#/components/schemas/DirectPostingRep"
        customerId:
          type: integer
          description: The customer id for which to act.
          format: int64
      description: Representation of a contract for creating.
    DirectPostingRep:
      required:
      - elnDepotName
      type: object
      properties:
        elnDepotName:
          type: string
          description: Eln depot accepting the posting.
          example: Stahnsdorf
      description: Direct posting parameters.
    DpContractPaymentParametersRep:
      required:
      - cardNo
      type: object
      properties:
        cardEkp:
          type: string
          description: Post customer number (EKP, 10 characters) of postcard's owner.
            Should always be specified.
          example: '0000000001'
        cardNo:
          pattern: "\\d{2}[\\dA-Za-z]{2}(?:\\d{3})?"
          type: string
          description: Post card number (4 to 7 characters) that is a supplement to
            the EKP.
          example: '2502001'
      description: Specifies payment parameters for a procedure 25 contract. Not needed
        for other procedures (set to null in this case). not needed for contract type
        LETTER.
    DpContractRep:
      required:
      - entitledToDeductPreTax
      - induction
      - inductionType
      - name
      - originatorEkp
      - ownerEkp
      - procedureNumber
      - submitterEkp
      - subscriptionNumber
      type: object
      properties:
        contractType:
          type: integer
          description: The type of the contract.
          format: int32
          example: 1
          default: 1
        ownerEkp:
          type: string
          description: Identifies the contract owner. The first 10 digits of the contract
            number.This ekp has to be added to your addresses prior to contract creation.
          example: '0000000001'
        procedureNumber:
          maxLength: 2
          minLength: 2
          pattern: 10|25
          type: string
          description: This two-digit number ('Verfahren') is a part of your contract
            with Deutsche Post. Currently ONLY procedures 10 and 25 are supported.
          example: '25'
        subscriptionNumber:
          maxLength: 2
          minLength: 2
          pattern: 0[1-9]|[1-9][0-9]|[A-F][A-Z]
          type: string
          description: This two-digit number ('Teilnahme') is a part of your contract
            with Deutsche Post.
          example: '01'
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: A human readable name for this contract.
          example: My it franking contract
        originatorEkp:
          type: string
          description: Identifies the originator. This is the one who is the sender.
            This ekp has to be added to your addresses prior to contract creation.
            You may change this value in a concrete processing.
          example: '0000000002'
        submitterEkp:
          type: string
          description: Identifies the submitter. This is the one who conducts the
            induction. This ekp has to be added to your addresses prior to contract
            creation. You may change this value in a concrete processing.
          example: '0000000003'
        entitledToDeductPreTax:
          type: boolean
          description: Specifies whether the originator of this mailing is entitled
            to deduct pre-tax. If he is, net costs will be minimized.
          example: true
        payment:
          "$ref": "#/components/schemas/DpContractPaymentParametersRep"
        inductionType:
          type: integer
          description: Specifies whether mailings should be picked-up from an address
            or are transported to a Deutsche Post depot. See lookup resource 'InductionType'
            for available values. Only depot induction is valid for contract type
            LETTER.
          format: int32
          example: 2
        induction:
          "$ref": "#/components/schemas/InductionBaseRep"
        directPosting:
          "$ref": "#/components/schemas/DirectPostingRep"
        id:
          type: integer
          description: The identifier of the contract.
          format: int64
    CreateDefaultPaymentRep:
      required:
      - customerId
      - entitledToDeductPreTax
      - paymentMethod
      type: object
      properties:
        payerEkp:
          type: string
          description: Ekp of the payer. This ekp has to be added to your addresses
            prior to this.
          example: '0000000001'
        entitledToDeductPreTax:
          type: boolean
          description: Specifies whether the payer is entitled to deduct pre-tax.
            This parameter is not valid for products Postwurfspezial and Postaktuell.
          example: true
        paymentMethod:
          type: integer
          description: Payment method. See lookup resource 'PaymentMethodType' for
            available values. CASH is not available for product Postwurfspezial
          format: int32
          example: 1
        cardNo:
          pattern: "\\d{2}[\\dA-Za-z]{2}(?:\\d{3})?"
          type: string
          description: 'Relevant only if you chose PaymentMethodType=3: Post card
            number (4 to 7 characters) that is a supplement to the payerEkp.'
          example: '2502001'
        iban:
          type: string
          description: 'Relevant only if you chose PaymentMethodType=1: BAN of the
            utilized payment bank card.'
          example: DE91100000000123456789
        bic:
          type: string
          description: 'Relevant only if you chose PaymentMethodType=1: BIC of the
            utilized payment bank card.'
          example: AAAADE81XXX
        bankName:
          maxLength: 255
          minLength: 0
          type: string
          description: 'Relevant only if you chose PaymentMethodType=1: Bank name
            of the utilized payment bank card.'
          example: Example Bank
        customerId:
          type: integer
          description: The customer id for which to act.
          format: int64
      description: Representation of a payment for creation.
    DefaultPaymentRep:
      required:
      - entitledToDeductPreTax
      - paymentMethod
      type: object
      properties:
        payerEkp:
          type: string
          description: Ekp of the payer. This ekp has to be added to your addresses
            prior to this.
          example: '0000000001'
        entitledToDeductPreTax:
          type: boolean
          description: Specifies whether the payer is entitled to deduct pre-tax.
            This parameter is not valid for products Postwurfspezial and Postaktuell.
          example: true
        paymentMethod:
          type: integer
          description: Payment method. See lookup resource 'PaymentMethodType' for
            available values. CASH is not available for product Postwurfspezial
          format: int32
          example: 1
        cardNo:
          pattern: "\\d{2}[\\dA-Za-z]{2}(?:\\d{3})?"
          type: string
          description: 'Relevant only if you chose PaymentMethodType=3: Post card
            number (4 to 7 characters) that is a supplement to the payerEkp.'
          example: '2502001'
        iban:
          type: string
          description: 'Relevant only if you chose PaymentMethodType=1: BAN of the
            utilized payment bank card.'
          example: DE91100000000123456789
        bic:
          type: string
          description: 'Relevant only if you chose PaymentMethodType=1: BIC of the
            utilized payment bank card.'
          example: AAAADE81XXX
        bankName:
          maxLength: 255
          minLength: 0
          type: string
          description: 'Relevant only if you chose PaymentMethodType=1: Bank name
            of the utilized payment bank card.'
          example: Example Bank
        id:
          type: integer
          description: Identifier of the payment.
          format: int64
        createdOn:
          type: string
          description: Date and time of the creation.
          format: date-time
        changedOn:
          type: string
          description: Date and time of the last change.
          format: date-time
    CreateDefaultInductionRep:
      required:
      - customerId
      - inductionType
      type: object
      properties:
        depotName:
          maxLength: 50
          minLength: 0
          type: string
          description: Name of the Deutsche Post depot. Use a location of type 'ELN-Depot'
            for your pick-up induction or a location of type 'LARGE_RECEIVING_POINT'
            for post-to-depot induction. See 'depotlookups' resource for available
            values.
          example: Bautzen
        pickUpLocationStreet:
          maxLength: 50
          minLength: 0
          type: string
          description: 'Relevant only if you chose InductionType=1, pick-up location:
            Street without house number.'
          example: Musterstrasse
        pickUpLocationHouseNumber:
          maxLength: 20
          minLength: 0
          type: string
          description: 'Relevant only if you chose InductionType=1, pick-up location:
            House number.'
          example: '12'
        pickUpLocationZip:
          maxLength: 10
          minLength: 0
          type: string
          description: 'Relevant only if you chose InductionType=1, pick-up location:
            Zip code.'
          example: '12345'
        pickUpLocationCity:
          maxLength: 50
          minLength: 0
          type: string
          description: 'Relevant only if you chose InductionType=1, pick-up location:
            City.'
          example: Musterstadt
        pickUpLocationCountry:
          maxLength: 2
          minLength: 2
          type: string
          description: 'Relevant only if you chose InductionType=1, pick-up location:
            Country (ISO 3166-1 alpha-2: 2 letters).'
          example: DE
        customerId:
          type: integer
          description: The customer id for which to act.
          format: int64
        inductionType:
          type: integer
          description: Specifies whether mailings should be picked-up from an address
            or are transported to a Deutsche Post depot. See lookup resource 'InductionType'
            for available values.
          format: int32
          example: 2
      description: Representation of an induction for creating.
    DefaultInductionRep:
      type: object
      properties:
        depotName:
          maxLength: 50
          minLength: 0
          type: string
          description: Name of the Deutsche Post depot. Use a location of type 'ELN-Depot'
            for your pick-up induction or a location of type 'LARGE_RECEIVING_POINT'
            for post-to-depot induction. See 'depotlookups' resource for available
            values.
          example: Bautzen
        pickUpLocationStreet:
          maxLength: 50
          minLength: 0
          type: string
          description: 'Relevant only if you chose InductionType=1, pick-up location:
            Street without house number.'
          example: Musterstrasse
        pickUpLocationHouseNumber:
          maxLength: 20
          minLength: 0
          type: string
          description: 'Relevant only if you chose InductionType=1, pick-up location:
            House number.'
          example: '12'
        pickUpLocationZip:
          maxLength: 10
          minLength: 0
          type: string
          description: 'Relevant only if you chose InductionType=1, pick-up location:
            Zip code.'
          example: '12345'
        pickUpLocationCity:
          maxLength: 50
          minLength: 0
          type: string
          description: 'Relevant only if you chose InductionType=1, pick-up location:
            City.'
          example: Musterstadt
        pickUpLocationCountry:
          maxLength: 2
          minLength: 2
          type: string
          description: 'Relevant only if you chose InductionType=1, pick-up location:
            Country (ISO 3166-1 alpha-2: 2 letters).'
          example: DE
        id:
          type: integer
          description: Identifier of the induction.
          format: int64
        inductionType:
          type: integer
          description: Specifies whether mailings should be picked-up from an address
            or are transported to a Deutsche Post depot. See lookup resource 'InductionType'
            for available values.
          format: int32
          example: 2
        createdOn:
          type: string
          description: Date and time of the creation.
          format: date-time
        changedOn:
          type: string
          description: Date and time of the last change.
          format: date-time
    CreateOrUpdateAddressRep:
      required:
      - city
      - country
      - customerId
      - name
      - street
      - tel
      - zip
      type: object
      properties:
        customerId:
          type: integer
          description: The customer id for which to act.
          format: int64
        ekp:
          type: string
          description: EKP of the customer. You cannot update the ekp of an existing
            customer.
          example: '0000000001'
        name:
          maxLength: 255
          minLength: 1
          type: string
          description: Name of address
          example: My GmbH
        street:
          maxLength: 255
          minLength: 1
          type: string
          description: Street of address
          example: Musterstrasse 12
        zip:
          maxLength: 5
          minLength: 1
          type: string
          description: Zip code of address
          example: '12345'
        city:
          maxLength: 255
          minLength: 1
          type: string
          description: City of address
          example: Bonn
        country:
          maxLength: 2
          minLength: 1
          type: string
          description: 'Country code of address (ISO 3166-1 alpha-2: 2 letters)'
          example: DE
        customerContact:
          type: string
          description: Customer contact person (Ansprechpartner) for this address
          example: Max Mustermann
        tel:
          maxLength: 30
          minLength: 1
          type: string
          description: Telephone number
          example: '00491234123456'
        fax:
          maxLength: 30
          minLength: 1
          type: string
          description: Fax number
          example: '0049987654373'
        email:
          maxLength: 255
          minLength: 1
          type: string
          description: Email contact
          example: max.mustermann@deutschepost.de
        epost:
          maxLength: 255
          minLength: 1
          type: string
          description: E-Post contact
      description: The address.
    AddressRep:
      type: object
      properties:
        id:
          type: integer
          description: Id of address.
          format: int64
        ekp:
          type: string
          description: EKP of the customer.
          example: '1234567890'
        name:
          type: string
          description: Name of address
          example: My GmbH
        street:
          type: string
          description: Street of address
          example: Musterstrasse 12
        zip:
          type: string
          description: Zip code of address
          example: '12345'
        city:
          type: string
          description: City of address
          example: Bonn
        country:
          type: string
          description: 'Country code of address (ISO 3166-1 alpha-2: 2 letters)'
          example: DE
        customerContact:
          type: string
          description: Customer contact person (Ansprechpartner) for this address
          example: Max Mustermann
        tel:
          type: string
          description: Telephone number
          example: '00491234123456'
        fax:
          type: string
          description: Fax number
          example: '0049987654373'
        email:
          type: string
          description: Email contact
          example: max.mustermann@deutschepost.de
        epost:
          type: string
          description: E-Post contact
    CreatePwspSimpleCostCalculationRep:
      required:
      - inductionDate
      - mailingItemTypePostcard
      type: object
      properties:
        quantity:
          type: integer
          description: Overall number of mailing items.
          format: int32
        lengthInDeciMm:
          maximum: 6000
          minimum: 1000
          type: integer
          description: Length of the mailing item in 1/10 mm.
          format: int32
        widthInDeciMm:
          maximum: 4490
          minimum: 700
          type: integer
          description: Width of the mailing item in 1/10 mm.
          format: int32
        heightInDeciMm:
          maximum: 3000
          minimum: 1
          type: integer
          description: Height/Thickness of the mailing item in 1/10 mm.
          format: int32
        weightInGram:
          maximum: 10000
          minimum: 1
          type: integer
          description: Weight of the mailing item in gram.
          format: int32
        inductionDate:
          type: string
          description: Specifies the date and time in UTC when induction takes place.
            Note that the GT&C according to which this mailing was optimized and produced
            must be valid on this date.
          format: date-time
        mailingItemTypePostcard:
          type: boolean
          description: Is the mailing item base format a postcard?
        notEnabledForAutomation:
          type: boolean
          description: Indicates whether the mailing items are not enabled for automation.
          example: false
          default: false
    PwspSimpleCostCalculationRep:
      type: object
      properties:
        gtcVersion:
          type: string
          description: Used version of global terms and conditions (GTC).
        creationDateTime:
          type: string
          description: Creation date time in UTC.
          format: date-time
        costs:
          type: integer
          description: Contains the maximum expected total gross costs of the Postwurfspezial
            mailing in Euro Cent. (gesamtpreis_brutto).
          format: int64
        postwurfspezial:
          "$ref": "#/components/schemas/PwspSimpleValuesRep"
    PwspSimpleValuesRep:
      type: object
      properties:
        postageTotal:
          type: integer
          description: The net costs of this mailing. Contains the postage in Euro
            Cent of all mailing items, real and extra in this mailing (entgelt_gesamt).
          format: int64
        pwspEasy:
          type: boolean
          description: Is POSTWURFSPEZIAL EASY applied? (easy)
        postageSingleItem:
          type: integer
          description: Contains the postage in Euro Cent of a single mailing item.
            (entgelt_sdg)
          format: int64
        postageAllItems:
          type: integer
          description: Contains the postage in Euro Cent of all mailing items in this
            mailing. No extra services, surcharge, or rebates are contained here.
            (entgelt_sdg_gesamt)
          format: int64
        postageAdditionSeason:
          type: integer
          description: Contains the postage in Euro Cent of the surcharge for the
            peak season. (entgelt_zuschlag_saison)
          format: int64
          example: 100
        postageAdditionEasy:
          type: integer
          description: Contains the postage in Euro Cent of the surcharge for the
            use of Dialogpost Easy. (entgelt_zuschlag_easy)
          format: int64
          example: 200
        postageAdditionsTotal:
          type: integer
          description: Contains the total surcharge in Euro Cent to be paid for this
            mailing. Surcharge will be charged, for example, if the mailing items
            are not enabled for automation. (entgelt_zuschlag_gesamt)
          format: int64
        postageExtraServicesTotal:
          type: integer
          description: Contains the total costs in Euro Cent of extra services contained
            in this mailing. (entgelt_zusatzleistung_gesamt)
          format: int64
        postageVat:
          type: integer
          description: Contains the total legal VAT in Euro Cent. (entgelt_ust)
          format: int64
        numberExtraItems:
          type: integer
          description: Contains the number of extra (i.e. virtual) items that are
            included (i.e. paid) in order to reach the minimum number of items for
            Postwurfspezial. Only included for the sum element (anz_aufz)
          format: int32
      description: Detail calculation results.
    CreatePwspProcessingMailingItemRep:
      required:
      - city
      - greeting
      - houseNumber
      - originalId
      - street
      - zip
      type: object
      properties:
        originalId:
          type: integer
          description: Continuous mailing item identifier.
          format: int32
          example: 1
        zip:
          maxLength: 5
          minLength: 1
          type: string
          description: Mailing item zip (plz). Any string is acceptable, however the
            format is validated during calculation. 5 and 4 digit values are regarded
            as valid. A check for not existing zips is not provided.
          example: '53229'
        greeting:
          type: string
          description: Mailing item greeting.
          example: An die Bewohner des Hauses
        street:
          type: string
          description: Mailing item street.
          example: Siegburger Str.
        houseNumber:
          type: string
          description: Mailing item house number.
          example: '601'
        city:
          type: string
          description: Mailing item city.
          example: Bonn
    ContractualPartnerRep:
      required:
      - city
      - country
      - houseNumber
      - name
      - street
      - zip
      type: object
      properties:
        name:
          maxLength: 120
          minLength: 0
          type: string
          description: Name of address
          example: Advertising GmbH
        street:
          maxLength: 50
          minLength: 0
          type: string
          description: Street of address
          example: Musterstrasse
        houseNumber:
          maxLength: 20
          minLength: 0
          type: string
          description: House number of address
          example: '12'
        zip:
          maxLength: 10
          minLength: 0
          type: string
          description: Zip code of address
          example: '12345'
        city:
          maxLength: 50
          minLength: 0
          type: string
          description: City of address
          example: Bonn
        country:
          maxLength: 2
          minLength: 2
          type: string
          description: 'Country code of address (ISO 3166-1 alpha-2: 2 letters)'
          example: DE
      description: Set the advertising contractual partner name and address in case
        of a reseller acting as originator
    CreatePwspProcessingMailingRep:
      required:
      - customerId
      - definition
      - inductionDate
      - originatorEkp
      - productionDefinition
      - submitterEkp
      type: object
      properties:
        inductionDate:
          type: string
          description: Specifies the date and time in UTC when induction takes place.
            Note that the GT&C according to which this mailing was optimized and produced
            must be valid on this date.
          format: date-time
        productionDefinition:
          type: integer
          description: Identifier of an existing production definition.
          format: int64
          example: 3
        submitterEkp:
          type: string
          description: Identifies the submitter. This ekp has to be added to your
            addresses prior to processing creation.
          example: '0000000003'
        originatorEkp:
          type: string
          description: Identifies the originator. This ekp has to be added to your
            addresses prior to processing creation.
          example: '0000000002'
        payment:
          "$ref": "#/components/schemas/DefaultPaymentBaseRep"
        induction:
          "$ref": "#/components/schemas/MailingInductionRep"
        contractualPartner:
          "$ref": "#/components/schemas/ContractualPartnerRep"
        definition:
          "$ref": "#/components/schemas/PwspProcessingMailingDefinitionRep"
        customerId:
          type: integer
          description: The customer id for which to act.
          format: int64
    DefaultPaymentBaseRep:
      required:
      - entitledToDeductPreTax
      - paymentMethod
      type: object
      properties:
        payerEkp:
          type: string
          description: Ekp of the payer. This ekp has to be added to your addresses
            prior to this.
          example: '0000000001'
        entitledToDeductPreTax:
          type: boolean
          description: Specifies whether the payer is entitled to deduct pre-tax.
            This parameter is not valid for products Postwurfspezial and Postaktuell.
          example: true
        paymentMethod:
          type: integer
          description: Payment method. See lookup resource 'PaymentMethodType' for
            available values. CASH is not available for product Postwurfspezial
          format: int32
          example: 1
        cardNo:
          pattern: "\\d{2}[\\dA-Za-z]{2}(?:\\d{3})?"
          type: string
          description: 'Relevant only if you chose PaymentMethodType=3: Post card
            number (4 to 7 characters) that is a supplement to the payerEkp.'
          example: '2502001'
        iban:
          type: string
          description: 'Relevant only if you chose PaymentMethodType=1: BAN of the
            utilized payment bank card.'
          example: DE91100000000123456789
        bic:
          type: string
          description: 'Relevant only if you chose PaymentMethodType=1: BIC of the
            utilized payment bank card.'
          example: AAAADE81XXX
        bankName:
          maxLength: 255
          minLength: 0
          type: string
          description: 'Relevant only if you chose PaymentMethodType=1: Bank name
            of the utilized payment bank card.'
          example: Example Bank
      description: Set your payment information here or set to null. If set to null,
        default payment information for the current customerId will be used.
    MailingInductionRep:
      required:
      - inductionType
      type: object
      properties:
        depotName:
          maxLength: 50
          minLength: 0
          type: string
          description: Name of the Deutsche Post depot. Use a location of type 'ELN-Depot'
            for your pick-up induction or a location of type 'LARGE_RECEIVING_POINT'
            for post-to-depot induction. See 'depotlookups' resource for available
            values.
          example: Bautzen
        pickUpLocationStreet:
          maxLength: 50
          minLength: 0
          type: string
          description: 'Relevant only if you chose InductionType=1, pick-up location:
            Street without house number.'
          example: Musterstrasse
        pickUpLocationHouseNumber:
          maxLength: 20
          minLength: 0
          type: string
          description: 'Relevant only if you chose InductionType=1, pick-up location:
            House number.'
          example: '12'
        pickUpLocationZip:
          maxLength: 10
          minLength: 0
          type: string
          description: 'Relevant only if you chose InductionType=1, pick-up location:
            Zip code.'
          example: '12345'
        pickUpLocationCity:
          maxLength: 50
          minLength: 0
          type: string
          description: 'Relevant only if you chose InductionType=1, pick-up location:
            City.'
          example: Musterstadt
        pickUpLocationCountry:
          maxLength: 2
          minLength: 2
          type: string
          description: 'Relevant only if you chose InductionType=1, pick-up location:
            Country (ISO 3166-1 alpha-2: 2 letters).'
          example: DE
        inductionType:
          type: integer
          description: Specifies whether mailings should be picked-up from an address
            or are transported to a Deutsche Post depot. See lookup resource 'InductionType'
            for available values.
          format: int32
          example: 2
      description: Set your induction information here or set to null. If set to null,
        default induction information for the current customerId will be used.
    PwspProcessingMailingDefinitionRep:
      required:
      - createDocumentTypes
      - goGreen
      - targetAudience
      - trackMatch
      type: object
      properties:
        goGreen:
          type: boolean
          description: Gogreen production option.
          example: false
        trackMatch:
          type: boolean
          description: Use track and match services.
          example: false
        accountingInfoText:
          maxLength: 80
          minLength: 0
          type: string
          description: Info text for accounting and billing.
        greeting:
          maxLength: 46
          minLength: 0
          type: string
          description: A greeting which is added to every mailing item. Can be null.
          example: An die Bewohner des Hauses
          default: An die Bewohner des Hauses
        targetAudience:
          type: integer
          description: Specify the target audience of your mailings.
          format: int32
          example: 1
        createDocumentTypes:
          type: array
          description: Type of documents ('Belege') to be created. Default is the
            item posting list ('Einlieferungsliste'). See lookup resource 'CreateDocumentType'
            for available values.
          example:
          - 1
          - 2
          - 3
          - 4
          - 5
          items:
            type: integer
            description: Type of documents ('Belege') to be created. Default is the
              item posting list ('Einlieferungsliste'). See lookup resource 'CreateDocumentType'
              for available values.
            format: int32
        directPostingParameters:
          "$ref": "#/components/schemas/DirectPostingRep"
        pickUpAlwaysEln:
          type: boolean
          description: 'Pick-up always with express logistic transport declaration
            (''ELN-Transportanmeldung''). '
          example: true
          default: false
        calculateMaxNumberMailingItemsPerPallet:
          type: boolean
          description: Enables max number mailing items per pallet to be calculated.
            Value maxNumberMailingItemsPerPallet has to be set in productiondefinition
            pallets but will be ignored if true.
          example: false
          default: true
      description: Set your mailing parameters here.
    PwspProcessingMailingRep:
      required:
      - definition
      - inductionDate
      - originatorEkp
      - productionDefinition
      - submitterEkp
      type: object
      properties:
        inductionDate:
          type: string
          description: Specifies the date and time in UTC when induction takes place.
            Note that the GT&C according to which this mailing was optimized and produced
            must be valid on this date.
          format: date-time
        productionDefinition:
          type: integer
          description: Identifier of an existing production definition.
          format: int64
          example: 3
        submitterEkp:
          type: string
          description: Identifies the submitter. This ekp has to be added to your
            addresses prior to processing creation.
          example: '0000000003'
        originatorEkp:
          type: string
          description: Identifies the originator. This ekp has to be added to your
            addresses prior to processing creation.
          example: '0000000002'
        payment:
          "$ref": "#/components/schemas/DefaultPaymentBaseRep"
        induction:
          "$ref": "#/components/schemas/MailingInductionRep"
        contractualPartner:
          "$ref": "#/components/schemas/ContractualPartnerRep"
        definition:
          "$ref": "#/components/schemas/PwspProcessingMailingDefinitionRep"
    CreatePaSimpleCostCalculationRep:
      required:
      - deliveryDistrictSelection
      - inductionDate
      - itemWeightInGram
      - numberItemsTariffZoneA
      - numberItemsTariffZoneB
      - paProductVariant
      type: object
      properties:
        numberItemsTariffZoneA:
          type: integer
          description: Total number of mailing items in tariff zone 'A', the central
            areas. (anzahl_tarifzone_a)
          format: int32
        numberItemsTariffZoneB:
          type: integer
          description: Total number of mailing items in tariff zone 'B', the outskirt.
            (anzahl_tarifzone_b)
          format: int32
        itemWeightInGram:
          maximum: 1000
          minimum: 1
          type: integer
          description: Weight of the mailing item in gram. (gewicht)
          format: int32
        paProductVariant:
          type: integer
          description: Product variant. (produktvariante_idx)
          format: int32
        deliveryDistrictSelection:
          type: boolean
          description: Optional additional trait. (zustellbezirksselektion)
        inductionDate:
          type: string
          description: Specifies the date and time in UTC when induction takes place.
            Note that the GT&C according to which this mailing was optimized and produced
            must be valid on this date.
          format: date-time
    PaSimpleCostCalculationRep:
      type: object
      properties:
        gtcVersion:
          type: string
          description: Used version of global terms and conditions. (GTC)
        creationDateTime:
          type: string
          description: Creation date time in UTC.
          format: date-time
        costs:
          type: integer
          description: Overall costs gross. (gesamtpreis_brutto)
          format: int64
        postaktuellValues:
          "$ref": "#/components/schemas/PaSimplePostakutellValuesRep"
    PaSimplePaPostagesPerTariffZoneRep:
      type: object
      properties:
        numberItems:
          type: integer
          description: Number of items in the respective tariff zone. (anz_sdgn)
          format: int32
        costsPer1000:
          type: integer
          description: Contains the postage in Euro Cent for 1000 items in the respective
            tariff zone. The sum element contains the average over all used tariff
            zones. (entgelt_per_1000)
          format: int64
        costsTotal:
          type: integer
          description: |-
            Contains the postage in Euro Cent of all items in the respective tariff
            zone. (entgelt_gesamt)
          format: int64
      description: Data for tariff zone 'B', the outskirt. (entgelte_tarif_b)
    PaSimplePostakutellValuesRep:
      type: object
      properties:
        postagesTariffA:
          "$ref": "#/components/schemas/PaSimplePaPostagesPerTariffZoneRep"
        postagesTariffB:
          "$ref": "#/components/schemas/PaSimplePaPostagesPerTariffZoneRep"
        totalNet:
          type: integer
          description: Contains the postage in Euro Cent of all items in the respective
            tariff zone. (entgelt_gesamt)
          format: int64
        totalVat:
          type: integer
          description: Contains the total legal VAT in Euro Cent. (entgelt_ust)
          format: int64
        totalGross:
          type: integer
          description: Total gross costs in Euro Cent for this mailing (net costs
            + VAT). (entgelt_gesamt_brutto)
          format: int64
        additionalChargeForMinimumOrder:
          type: integer
          description: Possible additional costs because the minimum order value was
            not reached. (entgelt_zuschlag_mindestwert)
          format: int64
        additionalChargeDeliveryDistrictSelection:
          type: integer
          description: Possible additional costs for delivery district selection.
            (entgelt_zuschlag_zustellbezirksselektion)
          format: int64
        postageAdditionSeason:
          type: integer
          description: Additional costs for peak season. (entgelt_zuschlag_saison)
          format: int64
      description: Contains data about quantities and postages in this mailing. (postaktuell)
    CreatePaProcessingMailingRep:
      required:
      - customerId
      - definition
      - inductionDate
      - originatorEkp
      - productionDefinition
      - submitterEkp
      type: object
      properties:
        inductionDate:
          type: string
          description: Specifies the date and time in UTC when induction takes place.
            Note that the GT&C according to which this mailing was optimized and produced
            must be valid on this date.
          format: date-time
        productionDefinition:
          type: integer
          description: Identifier of an existing production definition.
          format: int64
          example: 3
        submitterEkp:
          type: string
          description: Identifies the submitter. This ekp has to be added to your
            addresses prior to processing creation.
          example: '0000000003'
        originatorEkp:
          type: string
          description: Identifies the originator. This ekp has to be added to your
            addresses prior to processing creation.
          example: '0000000002'
        payment:
          "$ref": "#/components/schemas/DefaultPaymentBaseRep"
        induction:
          "$ref": "#/components/schemas/MailingInductionRep"
        contractualPartner:
          "$ref": "#/components/schemas/ContractualPartnerRep"
        definition:
          "$ref": "#/components/schemas/PaProcessingMailingDefinitionRep"
        customerId:
          type: integer
          description: The customer id for which to act.
          format: int64
    PaProcessingMailingDefinitionRep:
      required:
      - createDocumentTypes
      - maxGrossWeightPerPallet
      - productVariant
      - selectionType
      type: object
      properties:
        productVariant:
          type: integer
          description: Product variant of Postaktuell (paProductVariant). E.g. 'Alle
            Haushalte'
          format: int32
          example: 1
        selectionType:
          type: integer
          description: Selection type of Postaktuell (paSelectionType). Use cities
            or delivery areas for packaging.
          format: int32
        toleranceForLastBundle:
          type: integer
          description: Amount of mailing items a bundle can be overfilled (anz_sdg_bund_toleranz).
            Only used if distribution of items over bundles is not fully given as
            part of the selection.
          format: int32
          example: 10
          default: 0
        roundDownToFull:
          type: integer
          description: Rounding down amount of mailing items a bundle to allow for
            full multiples of bundle amounts for a delivery area/delivery base (anz_sdg_bund_Abrunden_auf_volle).
            Only used if distribution of items over bundles is not fully given as
            part of the selection.
          format: int32
          default: 1
        minNumberMailingItemsPerPallet:
          type: integer
          description: Minimal number of mailing items per pallet
          format: int32
          example: 1000
        maxGrossWeightPerPallet:
          type: integer
          description: Maximum gross weight of a pallet in gram.
          format: int32
          example: 700000
          default: 700000
        produceBundlesInPalletOrder:
          type: boolean
          description: Bundles will be produced in the order on which they are packed
            on their pallets. By default, bundles are produced in order of their respective
            targets, e.g. delivery base (Zustellstuetzpunkt).
          example: true
          default: false
        accountingInfoText:
          maxLength: 80
          minLength: 0
          type: string
          description: Info text for accounting and billing.
        createDocumentTypes:
          type: array
          description: Type of documents ('Belege') to be created. Default is the
            item posting list ('Einlieferungsliste'). See lookup resource 'CreateDocumentType'
            for available values.
          example:
          - 1
          - 2
          - 3
          - 4
          - 5
          items:
            type: integer
            description: Type of documents ('Belege') to be created. Default is the
              item posting list ('Einlieferungsliste'). See lookup resource 'CreateDocumentType'
              for available values.
            format: int32
        directPostingParameters:
          "$ref": "#/components/schemas/DirectPostingRep"
        pickUpAlwaysEln:
          type: boolean
          description: 'Pick-up always with express logistic transport declaration
            (''ELN-Transportanmeldung''). '
          example: true
          default: false
        calculateMaxNumberMailingItemsPerPallet:
          type: boolean
          description: Enables max number mailing items per pallet to be calculated.
            Value maxNumberMailingItemsPerPallet has to be set in productiondefinition
            pallets but will be ignored if true.
          example: true
          default: false
      description: Set your mailing parameters here.
    PaProcessingMailingRep:
      required:
      - definition
      - inductionDate
      - originatorEkp
      - productionDefinition
      - submitterEkp
      type: object
      properties:
        inductionDate:
          type: string
          description: Specifies the date and time in UTC when induction takes place.
            Note that the GT&C according to which this mailing was optimized and produced
            must be valid on this date.
          format: date-time
        productionDefinition:
          type: integer
          description: Identifier of an existing production definition.
          format: int64
          example: 3
        submitterEkp:
          type: string
          description: Identifies the submitter. This ekp has to be added to your
            addresses prior to processing creation.
          example: '0000000003'
        originatorEkp:
          type: string
          description: Identifies the originator. This ekp has to be added to your
            addresses prior to processing creation.
          example: '0000000002'
        payment:
          "$ref": "#/components/schemas/DefaultPaymentBaseRep"
        induction:
          "$ref": "#/components/schemas/MailingInductionRep"
        contractualPartner:
          "$ref": "#/components/schemas/ContractualPartnerRep"
        definition:
          "$ref": "#/components/schemas/PaProcessingMailingDefinitionRep"
    CreateDpStandardCostCalculationRep:
      required:
      - createSortedMailingItems
      - inductionDate
      - mailingItemTypePostcard
      type: object
      properties:
        lengthInDeciMm:
          maximum: 6000
          minimum: 1000
          type: integer
          description: Length of the mailing item in 1/10 mm.
          format: int32
        widthInDeciMm:
          maximum: 4490
          minimum: 700
          type: integer
          description: Width of the mailing item in 1/10 mm.
          format: int32
        heightInDeciMm:
          maximum: 3000
          minimum: 1
          type: integer
          description: Height/Thickness  of the mailing item in 1/10 mm.
          format: int32
        weightInGram:
          maximum: 10000
          minimum: 1
          type: integer
          description: Weight of the mailing item in gram.
          format: int32
        inductionDate:
          type: string
          description: Specifies the date and time in UTC when induction takes place.
            Note that the GT&C according to which this mailing was optimized and produced
            must be valid on this date.
          format: date-time
        entitledToDeductPreTax:
          type: boolean
          description: Specifies whether the originator of this mailing is entitled
            to deduct pre-tax. If he is, net costs will be minimized. If he is not,
            gross costs will be minimized.
          default: true
        frankingType:
          type: integer
          description: A DPDHL franking type. Retrieve the list of franking types
            from GET /dispatchpreparationlookups.
          format: int32
          default: 1
        frankingTypeRemainingItems:
          type: integer
          description: A DPDHL franking type for remaining items. Retrieve the list
            of franking types from GET /dispatchpreparationlookups.
          format: int32
          default: 11
        notEnabledForAutomation:
          type: boolean
          description: Indicates whether the mailing items are not enabled for automation.
          example: false
          default: false
        mailingItemTypePostcard:
          type: boolean
          description: Is the mailing item base format a postcard?
        dialogpostDisabled:
          type: boolean
          description: Is dialogpost disabled? Is this a non-promotional mailing?
          default: false
        createSortedMailingItems:
          type: boolean
          description: Create sorted mailing items in cost calculation? If true, the
            lists of valid mailing items, as well as the remaining mailing items and
            the ignored mailing items are provided in the response. Otherwise empty
            lists are returned.
          default: false
        mailingItems:
          type: array
          description: List of mailing items.
          items:
            "$ref": "#/components/schemas/CreateDpStandardMailingItemRep"
    CreateDpStandardMailingItemRep:
      type: object
      properties:
        id:
          type: integer
          description: Mailing item identifier.
          format: int32
        zip:
          type: string
          description: Mailing item zip (plz). Any string is acceptable, however the
            format is validated during calculation. 5 and 4 digit values are regarded
            as valid. A check for not existing zips is not provided.
      description: List of mailing items.
    DpStandardCostCalculationRep:
      type: object
      properties:
        gtcVersion:
          type: string
          description: Used version of global terms and conditions (GTC).
        creationDateTime:
          type: string
          description: Creation date time.
          format: date-time
        statusSeverityId:
          type: integer
          description: Status severity. (status_idx).
          format: int32
        statusMessages:
          type: array
          description: Status messages. (status_msg)
          items:
            "$ref": "#/components/schemas/DpStandardStatusMessageRep"
        dialogpost:
          "$ref": "#/components/schemas/DpStandardDialogpostValuesRep"
        remainingItems:
          "$ref": "#/components/schemas/DpStandardRemainingItemsValuesRep"
        ignoredItems:
          "$ref": "#/components/schemas/DpStandardIgnoredItemsValuesRep"
        usedValues:
          "$ref": "#/components/schemas/DpStandardUsedValuesRep"
    DpStandardDialogpostValuesItemsItemRep:
      type: object
      properties:
        id:
          type: integer
          description: Mailing item identifier. (id)
          format: int32
        originalId:
          type: integer
          description: Mailing item original identifier. (oid)
          format: int32
      description: Dialogpost values items item. (sdg)
    DpStandardDialogpostValuesPostagesRep:
      type: object
      properties:
        variantId:
          type: integer
          description: Variant identifier. (vid)
          format: int32
          example: 1
        rebateTotal:
          type: integer
          description: Total rebate. (entgelt_erm_gesamt)
          format: int64
        postageExtraServicesTotal:
          type: integer
          description: Postage extra service total. (entgelt_zusatzleistung_gesamt)
          format: int64
        postageFrankierserviceTotal:
          type: integer
          description: Postage franking service total. (entgelt_frankierservice_gesamt)
          format: int64
        numberExtraItems:
          type: integer
          description: Number of extra items. (anz_aufz)
          format: int32
          example: 50
        numberItemsTotal:
          type: integer
          description: Total number of items. (anz_sdgn_gesamt)
          format: int32
          example: 200
        postageAllItems:
          type: integer
          description: Postage of all items. (entgelt_sdg_gesamt)
          format: int64
          example: 7500
        postageAdditionsTotal:
          type: integer
          description: Total additional postage. (entgelt_zuschlag_gesamt)
          format: int64
          example: 1000
        postageAdditionSeason:
          type: integer
          description: Contains the postage in Euro Cent of the surcharge for the
            peak season. (entgelt_zuschlag_saison)
          format: int64
          example: 100
        postageAdditionEasy:
          type: integer
          description: Contains the postage in Euro Cent of the surcharge for the
            use of Dialogpost Easy. (entgelt_zuschlag_easy)
          format: int64
          example: 200
        rebateExtraItems:
          type: integer
          description: Rebate of extra items. (entgelt_erm_aufz)
          format: int64
          example: 1000
        rebateFrankingTotal:
          type: integer
          description: Total franking rebate. (entgelt_erm_frankierung_gesamt)
          format: int64
          example: 1000
        numberRealItems:
          type: integer
          description: Number of real items. (anz_sdgn)
          format: int32
          example: 150
        numberItemsInContainersRebatedLr:
          type: integer
          description: Number of items in container rebate lr. (anz_sdgn_geb_lr_rabattiert)
          format: int32
          example: 50
        numberItemsInContainersRebatedPlz:
          type: integer
          description: Number of items in container rebate plz. (anz_sdgn_geb_plz_rabattiert)
          format: int32
          example: 50
        numberItemsInPalletsRebatedLz:
          type: integer
          description: Number of items in pallets rebate lz. (anz_sdgn_pal_lz_rabattiert)
          format: int32
          example: 50
        numberItemsInPalletsRebatedLr:
          type: integer
          description: Number of items in pallets rebate lr. (anz_sdgn_pal_lr_rabattiert)
          format: int32
          example: 50
        rebateContainersLr:
          type: integer
          description: Rebate containers lr. (entgelt_erm_geb_lr)
          format: int64
          example: 1000
        rebateContainersPlz:
          type: integer
          description: Rebate containers plz. (entgelt_erm_geb_plz)
          format: int64
          example: 1000
        rebatePalletsLr:
          type: integer
          description: Rebate pallets lr. (entgelt_erm_pal_lr)
          format: int64
          example: 1000
        rebatePalletsLz:
          type: integer
          description: Rebate pallets lz. (entgelt_erm_pal_lz)
          format: int64
          example: 1000
        rebateProductionTotal:
          type: integer
          description: Total rebate production. (entgelt_erm_fertigung)
          format: int64
          example: 5000
        weightAllItemsInGram:
          type: integer
          description: All items weight in gram. (gewicht_gesamt)
          format: int64
          example: 1500
        postageTotal:
          type: integer
          description: Total postage. (entgelt_gesamt)
          format: int64
          example: 5000
        postageVat:
          type: integer
          description: Total vat. (entgelt_ust)
          format: int64
          example: 950
        postageSingleItem:
          type: integer
          description: Postage single item. (entgelt_sdg)
          format: int64
          example: 28
        rebatePercentageContainersLr:
          type: integer
          description: Rebate percentage container lr. (rabatt_geb_lr)
          format: int32
          example: 3
        rebatePercentageContainersPlz:
          type: integer
          description: Rebate percentage container plz. (rabatt_geb_plz)
          format: int32
          example: 4
        rebatePercentagePalletsLz:
          type: integer
          description: Rebate percentage pallets lz. (rabatt_pal_lz)
          format: int32
          example: 5
        rebatePercentagePalletsLr:
          type: integer
          description: Rebate percentage pallets lr. (rabatt_pal_lr)
          format: int32
          example: 6
        rebatePercentageExtraItems:
          type: integer
          description: Rebate percentage extra items. (rabatt_aufz)
          format: int32
          example: 5
        postageVatTotal:
          type: integer
          description: Postage vat total. (entgelt_ust_gesamt)
          format: int64
          example: 950
        postageTotalGross:
          type: integer
          description: Postage total gross. (entgelt_gesamt_brutto)
          format: int64
          example: 5950
        postageToPay:
          type: integer
          description: Postage to pay. (entgelt_zuzahlen)
          format: int64
        rebatePrepaid:
          type: integer
          description: Rebate prepaid. (entgelt_erm_freigestempelt)
          format: int64
        numberItemsInContainersNotRebatedLr:
          type: integer
          description: Number items in container not rebated lr. (anz_sdgn_geb_lr_nicht_rabattiert)
          format: int32
        numberItemsInPalletsNotRebatedLz:
          type: integer
          description: Number items in pallets not rebated lz. (anz_sdgn_pal_lz_nicht_rabattiert)
          format: int32
        numberItemsInPalletsNotRebatedLr:
          type: integer
          description: Number items in pallets not rebated lr. (anz_sdgn_pal_lr_nicht_rabattiert)
          format: int32
      description: Dialogpost postages. (entgelte)
    DpStandardDialogpostValuesRep:
      type: object
      properties:
        baseFormatId:
          type: integer
          description: Mailing item base format. (format_idx)
          format: int32
        dialogpostLr:
          type: boolean
          description: Delivery per region. (leitregionseinlieferung)
        dialogpostEasy:
          type: boolean
          description: Dialogpost easy. (easy)
        postages:
          "$ref": "#/components/schemas/DpStandardDialogpostValuesPostagesRep"
        items:
          type: array
          description: Dialogpost values items item. (sdg)
          items:
            "$ref": "#/components/schemas/DpStandardDialogpostValuesItemsItemRep"
      description: Dialogpost.
    DpStandardIgnoredItemsValuesItemsItemRep:
      type: object
      properties:
        id:
          type: integer
          description: Identifier. (id)
          format: int32
        originalId:
          type: integer
          description: Original identifier. (oid)
          format: int32
        zip:
          type: string
          description: Zip. (plz)
        reason:
          type: integer
          description: Reason. (grund)
          format: int32
      description: Ignored items. (sdg)
    DpStandardIgnoredItemsValuesRep:
      type: object
      properties:
        numberItems:
          type: integer
          description: Number items. (anz_sdgn)
          format: int32
        items:
          type: array
          description: Ignored items. (sdg)
          items:
            "$ref": "#/components/schemas/DpStandardIgnoredItemsValuesItemsItemRep"
      description: Ignored items values (ignoriert).
    DpStandardMailingParametersItemDefinitionRep:
      type: object
      properties:
        variants:
          type: array
          description: Mailing parameters item definition per variant. (variante)
          items:
            "$ref": "#/components/schemas/DpStandardMailingParametersItemDefinitionVariantRep"
      description: Mailing item definition. (sendungs_def)
    DpStandardMailingParametersItemDefinitionVariantRep:
      type: object
      properties:
        maxNumberItemsPerContainer:
          type: integer
          description: Max number of items per container. (max_fuellmenge)
          format: int32
        numberItemsForTrayHalfFull:
          type: integer
          description: Number of items for tray half full. (beh_anz_sdgn_halbvoll)
          format: int32
      description: Mailing parameters item definition per variant. (variante)
    DpStandardMailingParametersProductionDefinitionPalletsRep:
      type: object
      properties:
        maxNumberTraysPerPallet:
          type: integer
          description: Max number of trays per pallet. (beh_max_anz)
          format: int32
        maxNumberTraysPerLayer:
          type: integer
          description: Max number of trays per layer. (beh_anz_pro_lage)
          format: int32
      description: Mailing parameters production definition of pallets. (palettenfertigung)
    DpStandardMailingParametersProductionDefinitionRep:
      type: object
      properties:
        trays:
          "$ref": "#/components/schemas/DpStandardMailingParametersProductionDefinitionTraysRep"
        pallets:
          "$ref": "#/components/schemas/DpStandardMailingParametersProductionDefinitionPalletsRep"
      description: Mailing production definition. (fertigungs_def)
    DpStandardMailingParametersProductionDefinitionTraysRep:
      type: object
      properties:
        trayType:
          type: integer
          description: Tray type. (behaelterart_idx)
          format: int32
      description: Mailing parameters production definition of trays. (behaelterfertigung)
    DpStandardRemainingItemsValuesItemsItemRep:
      type: object
      properties:
        id:
          type: integer
          description: Mailing item identifier. (id)
          format: int32
        originalId:
          type: integer
          description: Mailing item original identifier. (oid)
          format: int32
      description: Remaining items. (sdg)
    DpStandardRemainingItemsValuesPerVariantRep:
      type: object
      properties:
        baseFormatId:
          type: integer
          description: Mailing item base format. (format_idx)
          format: int32
        postages:
          "$ref": "#/components/schemas/DpStandardRemainingItemsValuesPostagesPerVariantRep"
        items:
          type: array
          description: Remaining items. (sdg)
          items:
            "$ref": "#/components/schemas/DpStandardRemainingItemsValuesItemsItemRep"
      description: Remaining variants. (variante)
    DpStandardRemainingItemsValuesPostagesPerVariantRep:
      type: object
      properties:
        numberRealItems:
          type: integer
          description: Number of real items. (anz_sdgn)
          format: int32
        postageAllItems:
          type: integer
          description: Postage of all items. (entgelt_sdg_gesamt)
          format: int64
        rebateFrankingTotal:
          type: integer
          description: Rebate franking total. (entgelt_erm_frankierung_gesamt)
          format: int64
        postageTotal:
          type: integer
          description: Postage total. (entgelt_gesamt)
          format: int64
        postageSingleItem:
          type: integer
          description: Postage single item. (entgelt_sdg)
          format: int64
        rebateTotal:
          type: integer
          description: Rebate total. (entgelt_erm_gesamt)
          format: int64
        postageVat:
          type: integer
          description: Postage vat. (entgelt_ust)
          format: int64
        postageToPay:
          type: integer
          description: Postage to pay. (entgelt_zuzahlen)
          format: int64
      description: Postages per variant. (entgelte)
    DpStandardRemainingItemsValuesRep:
      type: object
      properties:
        variants:
          type: array
          description: Remaining variants. (variante)
          items:
            "$ref": "#/components/schemas/DpStandardRemainingItemsValuesPerVariantRep"
      description: Remaining items values (restsendungen).
    DpStandardStatusMessageRep:
      type: object
      properties:
        statusSeverityId:
          type: integer
          description: Status severity. (status_idx)
          format: int32
        code:
          type: integer
          description: Status code. (code)
          format: int32
        message:
          type: string
          description: Status message. (msg)
      description: Status messages. (status_msg)
    DpStandardUsedValuesRep:
      type: object
      properties:
        itemDefinition:
          "$ref": "#/components/schemas/DpStandardMailingParametersItemDefinitionRep"
        productionDefinition:
          "$ref": "#/components/schemas/DpStandardMailingParametersProductionDefinitionRep"
      description: Used values. (verwendete_werte)
    CreateDpSimpleCostCalculationRep:
      required:
      - inductionDate
      - mailingItemTypePostcard
      type: object
      properties:
        quantity:
          type: integer
          description: Overall number of mailing items.
          format: int32
        lengthInDeciMm:
          maximum: 6000
          minimum: 1000
          type: integer
          description: Length of the mailing item in 1/10 mm.
          format: int32
        widthInDeciMm:
          maximum: 4490
          minimum: 700
          type: integer
          description: Width of the mailing item in 1/10 mm.
          format: int32
        heightInDeciMm:
          maximum: 3000
          minimum: 1
          type: integer
          description: Height/Thickness  of the mailing item in 1/10 mm.
          format: int32
        weightInGram:
          maximum: 10000
          minimum: 1
          type: integer
          description: Weight of the mailing item in gram.
          format: int32
        inductionDate:
          type: string
          description: Specifies the date and time in UTC when induction takes place.
            Note that the GT&C according to which this mailing was optimized and produced
            must be valid on this date.
          format: date-time
        entitledToDeductPreTax:
          type: boolean
          description: Specifies whether the originator of this mailing is entitled
            to deduct pre-tax. If he is, net costs will be minimized. If he is not,
            gross costs will be minimized.
          default: true
        frankingType:
          type: integer
          description: A DPDHL franking type. Retrieve the list of franking types
            from GET /dispatchpreparationlookups.
          format: int32
          default: 1
        frankingTypeRemainingItems:
          type: integer
          description: A DPDHL franking type for remaining items. Retrieve the list
            of franking types from GET /dispatchpreparationlookups.
          format: int32
          default: 11
        lrDpPossible:
          type: boolean
          description: Indicates whether the contained mailing items are targeted
            within one routing region so that "Leitregions-Dialogpost" can be used.
            This leads to a reduced minimum number of mailing items required to use
            Dialogpost.
          default: false
        notEnabledForAutomation:
          type: boolean
          description: Indicates whether the mailing items are not enabled for automation.
          example: false
          default: false
        mailingItemTypePostcard:
          type: boolean
          description: Is the mailing item base format a postcard?
        dialogpostDisabled:
          type: boolean
          description: Is dialogpost disabled? Is this a non-promotional mailing?
          default: false
    DpSimpleCostCalculationRep:
      type: object
      properties:
        gtcVersion:
          type: string
          description: Used version of global terms and conditions (GTC).
        costs:
          type: integer
          description: Overall costs gross (gesamtpreis_brutto).
          format: int64
        dialogpost:
          "$ref": "#/components/schemas/DpSimpleDialogpostValuesRep"
        remainingItems:
          "$ref": "#/components/schemas/DpSimpleRemainingItemsValuesRep"
    DpSimpleDialogpostValuesPostagesRep:
      type: object
      properties:
        numberExtraItems:
          type: integer
          description: Contains the number of extra (i.e. virtual) items that are
            included (i.e. paid) in order to use a product that requires a minimum
            number of items like Dialogpost. (anz_aufz)
          format: int32
        numberItemsTotal:
          type: integer
          description: Sum of 'real' and 'extra' items. (anz_sdgn_gesamt)
          format: int32
        postageAllItems:
          type: integer
          description: Contains the postage in Euro Cent of all mailing items in this
            mailing. No extra services, surcharge, or rebates are contained here.
            (entgelt_sdg_gesamt)
          format: int64
        postageAdditionsTotal:
          type: integer
          description: Contains the total surcharge in Euro Cent to be paid for this
            mailing. Surcharge will be charged, for example, if the mailing items
            are not enabled for automation. (entgelt_zuschlag_gesamt)
          format: int64
        postageAdditionSeason:
          type: integer
          description: Contains the postage in Euro Cent of the surcharge for the
            peak season. (entgelt_zuschlag_saison)
          format: int64
          example: 100
        postageAdditionEasy:
          type: integer
          description: Contains the postage in Euro Cent of the surcharge for the
            use of Dialogpost Easy. (entgelt_zuschlag_easy)
          format: int64
          example: 200
        rebateExtraItems:
          type: integer
          description: Total rebate in Euro Cent granted for extra items. This depends
            on the highest rebated mailing item. (entgelt_erm_aufz)
          format: int64
        rebateFrankingTotal:
          type: integer
          description: Contains the total rebates in Euro Cent due to use of a rebated
            franking type (for example DV-Freimachung). (entgelt_erm_frankierung_gesamt)
          format: int64
        rebateTotal:
          type: integer
          description: Contains the total rebates in Euro Cent. Rebates may be granted
            because of a rebated franking type, and for production optimization. (entgelt_erm_gesamt)
          format: int64
        postageTotal:
          type: integer
          description: Contains the total, effective net costs in Euro Cent of this
            mailing.This is 'entgelt_sdg_gesamt' + 'entgelt_zusatzleistung_gesamt'
            + 'entgelt_zuschlag_gesamt' + 'entgelt_frankierservice_gesamt' + 'entgelt_erm_gesamt'.
            (entgelt_gesamt)
          format: int64
        postageVat:
          type: integer
          description: Contains the total legal VAT in Euro Cent based on the effective
            net costs 'entgelt_gesamt'. (entgelt_ust)
          format: int64
        postageSingleItem:
          type: integer
          description: Contains the postage in Euro Cent of a single mailing item.
            No extra services, surcharge, or rebates are contained here. (entgelt_sdg)
          format: int64
      description: Dialogpost postages. (entgelte)
    DpSimpleDialogpostValuesRep:
      type: object
      properties:
        baseFormatId:
          type: integer
          description: Mailing item base format. (format_idx)
          format: int32
        dialogpostLr:
          type: boolean
          description: Indicates whether the contained mailing items are targeted
            within one routing region so that 'Leitregions-Dialogpost' can be used.
            This leads to a reduced minimum number of mailing items required to use
            Dialogpost. (leitregionseinlieferung)
        dialogpostEasy:
          type: boolean
          description: Indicates whether Dialogpost Easy is used. (easy)
        postages:
          "$ref": "#/components/schemas/DpSimpleDialogpostValuesPostagesRep"
      description: Dialogpost.
    DpSimpleRemainingItemsValuesPerVariantRep:
      type: object
      properties:
        baseFormatId:
          type: integer
          description: Mailing item base format. (format_idx)
          format: int32
        postages:
          "$ref": "#/components/schemas/DpSimpleRemainingItemsValuesPostagesPerVariantRep"
      description: Remaining variants. (variante)
    DpSimpleRemainingItemsValuesPostagesPerVariantRep:
      type: object
      properties:
        numberRealItems:
          type: integer
          description: Number of real items (anz_sdgn).
          format: int32
        postageAllItems:
          type: integer
          description: Postage of all items (entgelt_sdg_gesamt).
          format: int64
        rebateFrankingTotal:
          type: integer
          description: Total postage rebate 'Frankierservice' (entgelt_erm_frankierung_gesamt).
          format: int64
        postageTotal:
          type: integer
          description: Total postage (entgelt_gesamt).
          format: int64
        postageSingleItem:
          type: integer
          description: Postage single item (entgelt_sdg).
          format: int64
      description: Postages per variant. (entgelte)
    DpSimpleRemainingItemsValuesRep:
      type: object
      properties:
        variants:
          type: array
          description: Remaining variants. (variante)
          items:
            "$ref": "#/components/schemas/DpSimpleRemainingItemsValuesPerVariantRep"
      description: Remaining items values (restsendungen).
      nullable: true
    CreateDpProcessingRep:
      required:
      - customerId
      type: object
      properties:
        customerId:
          type: integer
          description: The customer id for which to act.
          format: int64
        description:
          type: string
          description: A text describing the processing.
        simulation:
          type: boolean
          description: The simulation mode for a single processing. If true, documents
            for the released processing will be created with simulated content. Further,
            order records are neither created nor submitted to Deutsche Post Auftragsmanagement.
          example: false
          default: false
    DpProcessingRep:
      required:
      - description
      type: object
      properties:
        id:
          type: integer
          description: Id of the processing.
          format: int64
        description:
          maxLength: 255
          minLength: 0
          type: string
          description: A text describing the processing.
          example: Summer session 2023
        processingState:
          type: integer
          description: The status of the processing. See lookup resource 'ProcessingState'
            for available values.
          format: int32
          example: 25
        processingType:
          type: integer
          description: The type of the processing. See lookup resource 'ProcessingType'
            for available values.
          format: int32
          example: 20
        mailingItemsQuantity:
          type: integer
          description: Amount of items of the mailing.
          format: int32
        mailingItemsErrors:
          type: integer
          description: Amount of erroneous items of the mailing.
          format: int32
        logInfoQuantity:
          type: integer
          description: Amount of registered informative log entries.
          format: int32
        logWarnQuantity:
          type: integer
          description: Amount of registered warnings within log entries.
          format: int32
        logErrorQuantity:
          type: integer
          description: Amount of registered error log entries.
          format: int32
        createdOn:
          type: string
          description: Date and time of the creation.
          format: date-time
        changedOn:
          type: string
          description: Date and time of the last change.
          format: date-time
        simulation:
          type: boolean
          description: The simulation mode for a single processing. If true, documents
            for the released processing will be created with simulated content. Further,
            invoice and order are neither created nor submitted.
          example: false
          default: false
    CreateDpProcessingMailingItemRep:
      required:
      - id
      - zip
      type: object
      properties:
        id:
          type: integer
          description: Mailing item identifier.
          format: int32
        zip:
          maxLength: 5
          minLength: 1
          type: string
          description: Mailing item zip (plz).
          example: '53177'
        productionDefinition:
          type: integer
          description: Identifies a production definition (Fertigungsmuster).
          format: int64
          example: 1
        country:
          maxLength: 2
          minLength: 1
          type: string
          description: 'Country code (ISO 3166-1 alpha-2: 2 letters)'
          example: DE
        infoTextAlphanumeric:
          pattern: "^[A-z0-9]+$"
          type: string
          description: Info text in format alphanumeric
          example: abcXYZ123
        infoTextHexadecimal:
          pattern: "^[0-9a-fA-F]+$"
          type: string
          description: Info text in format hexadecimal
          example: '0123456789ABCdef'
        premiumAddressVariant:
          type: integer
          description: Identifier of premium address product variant.
          format: int32
          example: 1
        premiumAddressId:
          type: integer
          description: Individual premium address identifier.
          format: int32
    CreateDpProcessingMailingRep:
      required:
      - customerId
      - definition
      - inductionDate
      - productionDefinition
      type: object
      properties:
        inductionDate:
          type: string
          description: Specifies the date and time in UTC when induction takes place.
            Note that the GT&C according to which this mailing was optimized and produced
            must be valid on this date.
          format: date-time
        productionDefinition:
          type: integer
          description: Identifier of an existing production definition.
          format: int64
          example: 3
        submitterEkp:
          type: string
          description: 'Overwrite value from contract: Identifies the submitter. This
            ekp has to be added to your addresses prior to processing creation.'
          example: '0000000003'
        originatorEkp:
          type: string
          description: 'Overwrite value from contract: Identifies the originator.
            This ekp has to be added to your addresses prior to processing creation.'
          example: '0000000002'
        zipCodeCheck:
          type: boolean
          description: Checks that zip codes in mailing items exist during processing.
            If enabled, non existing zip codes will not be considered for franking.
          example: true
          default: true
        definition:
          "$ref": "#/components/schemas/DpProcessingMailingDefinitionRep"
        payment:
          "$ref": "#/components/schemas/DpProcessingMailingPaymentRep"
        payments:
          type: array
          description: Set your payment options here. They have to reference existing
            contracts.
          items:
            "$ref": "#/components/schemas/DpProcessingMailingPaymentRep"
        induction:
          "$ref": "#/components/schemas/DpProcessingMailingInductionRep"
        customerId:
          type: integer
          description: The customer id for which to act.
          format: int64
    DpProcessingMailingDefinitionRep:
      required:
      - createDocumentTypes
      type: object
      properties:
        productionInfoText:
          maxLength: 50
          minLength: 0
          type: string
          description: Info text for posting documents.
        accountingInfoText:
          maxLength: 80
          minLength: 0
          type: string
          description: Info text for accounting and billing.
        dataMatrixType:
          type: integer
          description: Type of data matrix codes to be created. None or large size
            format is supported.
          format: int32
          example: 2
          default: 2
        trackMatch:
          type: boolean
          description: Use track and match services. Only with datamatrix type 2.
          example: false
          default: false
        variantProductionType:
          type: integer
          description: Production type for processings with multiple variants. See
            lookup resource 'VariantProductionType' for available values. Determines
            whether containers and pallets contain multiple variants, and the order
            of containers produced. EINSTROM will always produce the lowest postage.
            However, depending on the production site of a customer producing containers
            and pallets this way is technically not possible or so expensive that
            the reduced postage does not pay out.
          format: int32
          example: 1
          default: 1
        createDocumentTypes:
          type: array
          description: Type of documents ('Belege') to be created. Default is the
            posting list ('Einlieferungsbeleg'). See lookup resource 'DpDocumentType'
            for available values.
          example:
          - 22
          - 23
          - 34
          - 35
          - 9
          - 24
          - 26
          - 25
          - 15
          items:
            type: integer
            description: Type of documents ('Belege') to be created. Default is the
              posting list ('Einlieferungsbeleg'). See lookup resource 'DpDocumentType'
              for available values.
            format: int32
          default:
          - 9
        directPostingParameters:
          "$ref": "#/components/schemas/DirectPostingRep"
      description: Set your mailing parameters here.
    DpProcessingMailingInductionRep:
      required:
      - depotName
      type: object
      properties:
        depotName:
          maxLength: 50
          minLength: 0
          type: string
          description: 'Overwrite value from contract: Name of a Deutsche Post depot
            (''GrASt'' only). See ''depotlookups'' resource for available values.'
          example: Bautzen
      description: Overwrite your induction parameters from the referenced contract
        here. This is only possible for depot induction.
    DpProcessingMailingPaymentRep:
      required:
      - procedureNumber
      - subscriptionNumber
      type: object
      properties:
        contractType:
          type: integer
          description: The type of the contract.
          format: int32
          example: 1
          default: 1
        ownerEkp:
          type: string
          description: Identifies the contract owner. This ekp is a part of a customer
            contract.
          example: '0000000001'
        procedureNumber:
          maxLength: 2
          minLength: 2
          pattern: 10|25
          type: string
          description: This two-digit number ('Verfahren') is a part of a contract.
          example: '25'
        subscriptionNumber:
          maxLength: 2
          minLength: 2
          pattern: 0[1-9]|[1-9][0-9]|[A-F][A-Z]
          type: string
          description: This two-digit number ('Teilnahme') is a part of a contract.
          example: '01'
      description: Set your payment option here. They have to reference an existing
        contract. Attribute is deprecated. Use payments instead.
      deprecated: true
      oneOf:
      - "$ref": "#/components/schemas/DpProcessingMailingRep"
    DpProcessingMailingRep:
      required:
      - definition
      - inductionDate
      - productionDefinition
      type: object
      properties:
        inductionDate:
          type: string
          description: Specifies the date and time in UTC when induction takes place.
            Note that the GT&C according to which this mailing was optimized and produced
            must be valid on this date.
          format: date-time
        productionDefinition:
          type: integer
          description: Identifier of an existing production definition.
          format: int64
          example: 3
        submitterEkp:
          type: string
          description: 'Overwrite value from contract: Identifies the submitter. This
            ekp has to be added to your addresses prior to processing creation.'
          example: '0000000003'
        originatorEkp:
          type: string
          description: 'Overwrite value from contract: Identifies the originator.
            This ekp has to be added to your addresses prior to processing creation.'
          example: '0000000002'
        zipCodeCheck:
          type: boolean
          description: Checks that zip codes in mailing items exist during processing.
            If enabled, non existing zip codes will not be considered for franking.
          example: true
          default: true
        definition:
          "$ref": "#/components/schemas/DpProcessingMailingDefinitionRep"
        payment:
          "$ref": "#/components/schemas/DpProcessingMailingPaymentRep"
        payments:
          type: array
          description: Set your payment options here. They have to reference existing
            contracts.
          items:
            "$ref": "#/components/schemas/DpProcessingMailingPaymentRep"
        induction:
          "$ref": "#/components/schemas/DpProcessingMailingInductionRep"
    CollectionRepProductionDefinitionRep:
      type: object
      properties:
        elements:
          type: array
          items:
            "$ref": "#/components/schemas/ProductionDefinitionRep"
        page:
          "$ref": "#/components/schemas/PageMetadata"
        links:
          type: array
          items:
            "$ref": "#/components/schemas/Link"
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
    PageMetadata:
      type: object
      properties:
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
    CollectionRepPwspProcessingRep:
      type: object
      properties:
        elements:
          type: array
          items:
            "$ref": "#/components/schemas/PwspProcessingRep"
        page:
          "$ref": "#/components/schemas/PageMetadata"
        links:
          type: array
          items:
            "$ref": "#/components/schemas/Link"
    StreamingResponseBody:
      type: object
    PwspProcessingResultsPostagesRep:
      type: object
      properties:
        numberExtraItems:
          type: integer
          description: Number of extra items (anz_aufz). If > 0 then it contains the
            number of extra (i.e. virtual) items that are included (i.e.paid) in order
            to reach the minimum number of items for using Postwurfspezial.
          format: int32
          example: 50
        numberItemsTotal:
          type: integer
          description: Total number of items (anz_sdgn_gesamt). Is the sum of numberRealItems
            and numberExtraItems.
          format: int32
          example: 200
        postageAllItems:
          type: integer
          description: Postage of all items in Euro Cent (entgelt_sdg_gesamt). Contains
            no extra services or surcharge. Net price. Is the product of numberItemsTotal
            and postageSingleItem.
          format: int64
          example: 7500
        postageAdditionsTotal:
          type: integer
          description: Total additional postage in Euro Cent (entgelt_zuschlag_gesamt).
            Contains the fee for surcharges e.g. Postwurfspezial Easy. Net price.
          format: int64
          example: 1000
        postageAdditionSeason:
          type: integer
          description: Contains the postage in Euro Cent of the surcharge for the
            peak season. (entgelt_zuschlag_saison)
          format: int64
          example: 100
        postageAdditionEasy:
          type: integer
          description: Contains the postage in Euro Cent of the surcharge for the
            use of Dialogpost Easy. (entgelt_zuschlag_easy)
          format: int64
          example: 200
        numberRealItems:
          type: integer
          description: Number of real items (anz_sdgn) i.e. number of mailing items
            in this mailing.
          format: int32
          example: 150
        postageTotal:
          type: integer
          description: Total postage in Euro Cent (entgelt_gesamt). Net price. Is
            the sum of postageAllItems and postageAdditionsTotal and postageExtraServicesTotal.
          format: int64
          example: 5000
        postageVat:
          type: integer
          description: Total vat in Euro Cent (entgelt_ust).
          format: int64
          example: 950
        postageSingleItem:
          type: integer
          description: 'Postage of a single item in Euro Cent (entgelt_sdg). Net price. '
          format: int64
          example: 28
        postageToPay:
          type: integer
          description: Postage to pay in Euro Cent (entgelt_zuzahlen). Is the sum
            of postageTotal and postageVat.
          format: int64
          example: 107100
        postageExtraServicesTotal:
          type: integer
          description: Contains the total costs in Euro Cent of extra services contained
            in this mailing (entgelt_zusatzleistung_gesamt). I.e. the fee for pick-up
            or store pallets.
          format: int64
          example: 0
    PwspProcessingResultsValuesMailingItemRep:
      type: object
      properties:
        originalId:
          type: integer
          description: Original mailing item identifier (chosen by you)
          format: int32
          example: 4322
        id:
          type: integer
          description: Generated order number within all mailing items. 'Sendungsnummer'
          format: int32
          example: 1
        containerId:
          type: integer
          description: The id of the container the mailing item is registered.
          format: int32
          example: 1
        palletId:
          type: integer
          description: The id of the pallet the mailing item is registered.
          format: int32
          example: 1
        firstOfContainer:
          type: boolean
          description: Shows if the mailing item is the first item within the container.
          example: false
        lastOfContainer:
          type: boolean
          description: Shows if the mailing item is the last item within the container.
          example: false
        firstOfPallet:
          type: boolean
          description: Shows if the mailing item is the first item in the pallet.
          example: true
        lastOfPallet:
          type: boolean
          description: Shows if the mailing item is the last  item in the pallet.
          example: false
        dmc:
          type: string
          description: IT franking datamatrix code
          example: 43 47 40 13 31 01 A2 3D 07 FD 00 4F  07 01 23 45 67 89 AB CD EF
            00 00 00 00 00 00 00 00 00
        greeting:
          type: string
          description: Mailing item greeting.
          example: An die Bewohner des Hauses
        zip:
          type: string
          description: Mailing item zip (plz)
          example: '53177'
        street:
          type: string
          description: Mailing item street.
          example: Siegburger Str.
        houseNumber:
          type: string
          description: Mailing item house number.
          example: '601'
        city:
          type: string
          description: Mailing item city.
          example: Bonn
    ProcessingLogEntryRep:
      type: object
      properties:
        code:
          type: string
          description: A code which identifies this log entry. May be null. If present,
            retrieve the list of error codes from GET /dispatchpreparationerrorcodelookups.
          example: DM_DIS_0000
        message:
          type: string
          description: A message describing this log entry.
          example: Master data not found.
        severity:
          type: string
          description: The severity of the entry.
          example: INFO
          enum:
          - INFO
          - WARN
          - ERROR
        fieldName:
          type: string
          description: Field name containing an erroneous value. May be null.
          example: productionDefinitionId
        timestamp:
          type: string
          description: Date and time when the log entry was created.
          format: date-time
      description: Log entries of level error.
    ProcessingLogRep:
      type: object
      properties:
        infos:
          type: array
          description: Log entries of level info.
          items:
            "$ref": "#/components/schemas/ProcessingLogEntryRep"
        warnings:
          type: array
          description: Log entries of level warn.
          items:
            "$ref": "#/components/schemas/ProcessingLogEntryRep"
        errors:
          type: array
          description: Log entries of level error.
          items:
            "$ref": "#/components/schemas/ProcessingLogEntryRep"
    PaProcessingResultsPostagesPerTariffZoneRep:
      type: object
      properties:
        numberItems:
          type: integer
          description: Number of items per tariffzone (anz_sdgn)
          format: int32
          example: 10
        costsPer1000:
          type: integer
          description: Costs per 1000 mailingitems in tarrifzone. (entgelt_per_1000)
          format: int64
          example: 2000
        costsTotal:
          type: integer
          description: Postage of all items in tariffzone. (costsTotal)
          format: int64
          example: 7500
      description: Postage information for all tariffs. (entgelte_tarif_sum)
      example: 4000
    PaProcessingResultsPostagesRep:
      type: object
      properties:
        numberPallets:
          type: integer
          description: Number of pallets (anz_pal)
          format: int32
          example: 10
        postagesTariffA:
          "$ref": "#/components/schemas/PaProcessingResultsPostagesPerTariffZoneRep"
        postagesTariffB:
          "$ref": "#/components/schemas/PaProcessingResultsPostagesPerTariffZoneRep"
        postagesTariffsSum:
          "$ref": "#/components/schemas/PaProcessingResultsPostagesPerTariffZoneRep"
        postagePickUp:
          type: integer
          description: Postage of pick up. (entgelt_abholung)
          format: int64
          example: 6000
        additionalChargeForMinimumOrder:
          type: integer
          description: Additional costs for minimum order. (entgelt_zuschlag_mindestwert)
          format: int64
          example: 1000
        additionalChargeZustellbezirksSelektion:
          type: integer
          description: Additional costs for districtselection. (entgelt_zuschlag_zustellbezirksselektion)
          format: int64
          example: 1000
        postageAdditionSeason:
          type: integer
          description: Additional costs for peak season. (entgelt_zuschlag_saison)
          format: int64
          example: 1000
        totalNet:
          type: integer
          description: Total costs. (entgelt_gesamt)
          format: int64
          example: 12000
        totalVat:
          type: integer
          description: Total vat. (entgelt_ust)
          format: int64
          example: 2280
        totalGross:
          type: integer
          description: Total costs gross. (entgelt_gesamt_brutto)
          format: int64
          example: 28
    CollectionRepOrderRecordRep:
      type: object
      properties:
        elements:
          type: array
          items:
            "$ref": "#/components/schemas/OrderRecordRep"
        page:
          "$ref": "#/components/schemas/PageMetadata"
        links:
          type: array
          items:
            "$ref": "#/components/schemas/Link"
    DpOrderRecordPaymentRep:
      type: object
      properties:
        ownerEkp:
          type: string
          description: Identifies the contract owner. This ekp is a part of a customer
            contract.
          example: '0000000001'
        procedureNumber:
          type: string
          description: This two-digit number ('Verfahren') is a part of a contract.
          example: '25'
        subscriptionNumber:
          type: string
          description: This two-digit number ('Teilnahme') is a part of a contract.
          example: '01'
      description: Order payment information.
    OrderRecordRep:
      type: object
      properties:
        id:
          type: string
          description: This is the alphanumeric message ID from Auftragsmanagement.
          example: 210910114130A10001001
        processingId:
          type: integer
          description: The id of the related processing.
          format: int64
          example: 1
        amOrderId:
          type: integer
          description: The order record id in Deutsche Post Auftragsmanagement.
          format: int64
          example: 54778843
        status:
          type: integer
          description: Describes the order record's current state. See lookup resource
            'OrderRecordState' for available values.
          format: int32
          example: 20
        type:
          type: integer
          description: The order record type. See lookup resource 'OrderRecordType'
            for available values.
          format: int32
          example: 1
        amInvoiceNumber:
          type: string
          description: AM invoice number (last sheet number, or 'Entgeltabrechnungsnummer'.
          example: '473'
        amStatus:
          type: string
          description: AM response information. Contains hints if AM messages did
            not succeed.
        originatorEkp:
          type: string
          description: Originator ekp.
          example: '0000000001'
        submitterEkp:
          type: string
          description: Submitter ekp.
          example: '0000000002'
        inductionType:
          type: integer
          description: The induction type. See lookup resource 'InductionType' for
            available values.
          format: int32
          example: 2
        inductionDate:
          type: string
          description: The submission date time of this order record.
          format: date-time
          example: '2022-09-10T20:00:00Z'
        depotName:
          type: string
          description: 'Relevant only if you chose InductionType=2: Name of the Deutsche
            Post depot. See ''depotlookups'' resource for available values.'
          example: Bautzen
        pickUpLocationStreet:
          type: string
          description: 'Relevant only if you chose InductionType=1, pick-up location:
            Street without house number.'
          example: Musterstrasse
        pickUpLocationHouseNumber:
          type: string
          description: 'Relevant only if you chose InductionType=1, pick-up location:
            House number.'
          example: '12'
        pickUpLocationZip:
          type: string
          description: 'Relevant only if you chose InductionType=1, pick-up location:
            Zip code.'
          example: '12345'
        pickUpLocationCity:
          type: string
          description: 'Relevant only if you chose InductionType=1, pick-up location:
            City.'
          example: Musterstadt
        pickUpLocationCountry:
          type: string
          description: 'Relevant only if you chose InductionType=1, pick-up location:
            Country (ISO 3166-1 alpha-2: 2 letters).'
          example: DE
        dialogpostPayment:
          "$ref": "#/components/schemas/DpOrderRecordPaymentRep"
    KeyValuePairRep:
      type: object
      properties:
        id:
          type: integer
          format: int32
        label:
          type: string
    CollectionRepDpProcessingRep:
      type: object
      properties:
        elements:
          type: array
          items:
            "$ref": "#/components/schemas/DpProcessingRep"
        page:
          "$ref": "#/components/schemas/PageMetadata"
        links:
          type: array
          items:
            "$ref": "#/components/schemas/Link"
    DpProcessingDetailRep:
      required:
      - description
      type: object
      properties:
        id:
          type: integer
          description: Id of the processing.
          format: int64
        description:
          maxLength: 255
          minLength: 0
          type: string
          description: A text describing the processing.
          example: Summer session 2023
        processingState:
          type: integer
          description: The status of the processing. See lookup resource 'ProcessingState'
            for available values.
          format: int32
          example: 25
        processingType:
          type: integer
          description: The type of the processing. See lookup resource 'ProcessingType'
            for available values.
          format: int32
          example: 20
        mailingItemsQuantity:
          type: integer
          description: Amount of items of the mailing.
          format: int32
        mailingItemsErrors:
          type: integer
          description: Amount of erroneous items of the mailing.
          format: int32
        logInfoQuantity:
          type: integer
          description: Amount of registered informative log entries.
          format: int32
        logWarnQuantity:
          type: integer
          description: Amount of registered warnings within log entries.
          format: int32
        logErrorQuantity:
          type: integer
          description: Amount of registered error log entries.
          format: int32
        createdOn:
          type: string
          description: Date and time of the creation.
          format: date-time
        changedOn:
          type: string
          description: Date and time of the last change.
          format: date-time
        simulation:
          type: boolean
          description: The simulation mode for a single processing. If true, documents
            for the released processing will be created with simulated content. Further,
            invoice and order are neither created nor submitted.
          example: false
          default: false
        inputState:
          type: integer
          description: State of input data processing step.
          format: int32
          example: 91
        internalDataProcessingState:
          type: integer
          description: State of internal data processing step.
          format: int32
          example: 92
        documentsCreationState:
          type: integer
          description: State of documents creation processing step.
          format: int32
          example: 0
        orderTransmissionState:
          type: integer
          description: State of order transmission processing step.
          format: int32
          example: 1
        orderResponseState:
          type: integer
          description: State of order response processing step.
          format: int32
          example: 98
        processingOutputState:
          type: integer
          description: State of order output processing step.
          format: int32
          example: 99
    DpProcessingResultsPostagesPerVariantRep:
      type: object
      properties:
        variantName:
          type: string
          description: Variant identifier. (name)
          example: PostcardDL
        numberExtraItems:
          type: integer
          description: Number of extra items. (anz_aufz)
          format: int32
          example: 50
        numberItemsTotal:
          type: integer
          description: Total number of items. (anz_sdgn_gesamt)
          format: int32
          example: 200
        postageAllItems:
          type: integer
          description: Postage of all items. (entgelt_sdg_gesamt)
          format: int64
          example: 7500
        postageVat:
          type: integer
          description: Total vat. (entgelt_ust)
          format: int64
          example: 950
        postageAdditionsTotal:
          type: integer
          description: Total additional postage. (entgelt_zuschlag_gesamt)
          format: int64
          example: 1000
        rebateExtraItems:
          type: integer
          description: Rebate of extra items. (entgelt_erm_aufz)
          format: int64
          example: 1000
        rebateFrankingTotal:
          type: integer
          description: Total franking rebate. (entgelt_erm_frankierung_gesamt)
          format: int64
          example: 1000
        numberRealItems:
          type: integer
          description: Number of real items. (anz_sdgn)
          format: int32
          example: 150
        numberItemsInContainersRebatedLr:
          type: integer
          description: Number of items in container rebate lr. (anz_sdgn_geb_lr_rabattiert)
          format: int32
          example: 50
        numberItemsInContainersRebatedPlz:
          type: integer
          description: Number of items in container rebate plz. (anz_sdgn_geb_plz_rabattiert)
          format: int32
          example: 50
        numberItemsInPalletsRebatedLz:
          type: integer
          description: Number of items in pallets rebate lz. (anz_sdgn_pal_lz_rabattiert)
          format: int32
          example: 50
        numberItemsInPalletsRebatedLr:
          type: integer
          description: Number of items in pallets rebate lr. (anz_sdgn_pal_lr_rabattiert)
          format: int32
          example: 50
        rebateContainersLr:
          type: integer
          description: Rebate containers lr. (entgelt_erm_geb_lr)
          format: int64
          example: 1000
        rebateContainersPlz:
          type: integer
          description: Rebate containers plz. (entgelt_erm_geb_plz)
          format: int64
          example: 1000
        rebatePalletsLr:
          type: integer
          description: Rebate pallets lr. (entgelt_erm_pal_lr)
          format: int64
          example: 1000
        rebatePalletsLz:
          type: integer
          description: Rebate pallets lz. (entgelt_erm_pal_lz)
          format: int64
          example: 1000
        rebatePercentageContainersLr:
          type: integer
          description: Rebate percentage container lr. (rabatt_geb_lr)
          format: int32
          example: 3
        rebatePercentageContainersPlz:
          type: integer
          description: Rebate percentage container plz. (rabatt_geb_plz)
          format: int32
          example: 4
        rebatePercentagePalletsLz:
          type: integer
          description: Rebate percentage pallets lz. (rabatt_pal_lz)
          format: int32
          example: 5
        rebatePercentagePalletsLr:
          type: integer
          description: Rebate percentage pallets lr. (rabatt_pal_lr)
          format: int32
          example: 6
        rebatePercentageExtraItems:
          type: integer
          description: Rebate percentage extra items. (rabatt_aufz)
          format: int32
          example: 5
        weightAllItemsInGram:
          type: integer
          description: All items weight in gram. (gewicht_gesamt)
          format: int64
          example: 1500
        postageSingleItem:
          type: integer
          description: Postage single item. (entgelt_sdg)
          format: int64
          example: 28
        notEnabledForAutomation:
          type: boolean
      description: Postage per variant
    DpProcessingResultsValuesRemainingRep:
      type: object
      properties:
        rebateFrankingTotal:
          type: integer
          description: Total franking rebate. (entgelt_erm_frankierung_gesamt)
          format: int64
          example: 1000
        rebateProductionTotal:
          type: integer
          description: Total rebate production. (entgelt_erm_fertigung)
          format: int64
          example: 5000
        postageTotal:
          type: integer
          description: Total postage. (entgelt_gesamt)
          format: int64
          example: 5000
        postageAdditionsTotal:
          type: integer
          description: Total additional postage. (entgelt_zuschlag_gesamt)
          format: int64
          example: 1000
        postageVatTotal:
          type: integer
          description: Postage vat total. (entgelt_ust_gesamt)
          format: int64
          example: 950
        postageTotalGross:
          type: integer
          description: Postage total gross. (entgelt_gesamt_brutto)
          format: int64
          example: 5950
        postageToPay:
          type: integer
          description: Postage to pay. (entgelt_zuzahlen)
          format: int64
        variants:
          type: array
          description: Postage per variant
          items:
            "$ref": "#/components/schemas/DpProcessingResultsPostagesPerVariantRep"
    DpProcessingResultsValues:
      type: object
      properties:
        rebateFrankingTotal:
          type: integer
          description: Total franking rebate. (entgelt_erm_frankierung_gesamt)
          format: int64
          example: 1000
        rebateProductionTotal:
          type: integer
          description: Total rebate production. (entgelt_erm_fertigung)
          format: int64
          example: 5000
        postageTotal:
          type: integer
          description: Total postage. (entgelt_gesamt)
          format: int64
          example: 5000
        postageAdditionsTotal:
          type: integer
          description: Total additional postage. (entgelt_zuschlag_gesamt)
          format: int64
          example: 1000
        postageVatTotal:
          type: integer
          description: Postage vat total. (entgelt_ust_gesamt)
          format: int64
          example: 950
        postageTotalGross:
          type: integer
          description: Postage total gross. (entgelt_gesamt_brutto)
          format: int64
          example: 5950
        postageToPay:
          type: integer
          description: Postage to pay. (entgelt_zuzahlen)
          format: int64
        variants:
          type: array
          description: Postage per variant
          items:
            "$ref": "#/components/schemas/DpProcessingResultsPostagesPerVariantRep"
    DpProcessingResultsValuesMailingItemRep:
      type: object
      properties:
        originalId:
          type: integer
          description: Original mailing item identifier (chosen by you)
          format: int32
          example: 4322
        id:
          type: integer
          description: Generated order number within all mailing items. 'Sendungsnummer'
          format: int32
          example: 1
        zip:
          type: string
          description: Mailing item zip (plz)
          example: '53177'
        postage:
          type: integer
          description: Contains the postage in Euro Cent of this single mailing item
          format: int64
          example: 45
        dmc:
          type: string
          description: IT franking datamatrix code
          example: 43 47 40 13 31 01 A2 3D 07 FD 00 4F  07 01 23 45 67 89 AB CD EF
            00 00 00 00 00 00 00 00 00
        product:
          type: string
          description: Mailing item base format
          example: Postcard Large
        inductionMonth:
          type: string
          description: Month of induction. According to DV Freimachung Handlingbroschüre
            version starting from 2023 the date format has to be MM.YY
          example: '02.23'
        dvfLine:
          type: string
          description: IT franking info line
          example: 0001//0000001/29//50895
        inductionDate:
          type: string
          description: Date of induction
          format: date
          example: '2021-12-13'
        containerId:
          type: integer
          description: The id of the container the mailing item is registered.
          format: int32
          example: 1
        palletId:
          type: integer
          description: The id of the pallet the mailing item is registered.
          format: int32
          example: 1
        firstOfContainer:
          type: boolean
          description: Shows if the mailing item is the first item within the container.
          example: false
        lastOfContainer:
          type: boolean
          description: Shows if the mailing item is the last item within the container.
          example: false
        firstOfPallet:
          type: boolean
          description: Shows if the mailing item is the first item in the pallet.
          example: true
        lastOfPallet:
          type: boolean
          description: Shows if the mailing item is the last  item in the pallet.
          example: false
        inscription:
          type: string
          description: String which should be printed on the mailing
          example: DIALOGPOST PREMIUMADRESS
        identification:
          type: string
          description: Code letters of this mailing item
          example: P
        frankingId:
          type: string
          description: Franking ID code
          example: 01 42C1 ECC0 00 1000 0013
        errorMessages:
          type: array
          description: Error message for this mailing item
          example: 'The item 1 is not valid: The ZIP 33336 is invalid'
          items:
            type: string
            description: Error message for this mailing item
            example: 'The item 1 is not valid: The ZIP 33336 is invalid'
    CollectionRepDpContractRep:
      type: object
      properties:
        elements:
          type: array
          items:
            "$ref": "#/components/schemas/DpContractRep"
        page:
          "$ref": "#/components/schemas/PageMetadata"
        links:
          type: array
          items:
            "$ref": "#/components/schemas/Link"
    DepotRep:
      type: object
      properties:
        type:
          type: integer
          description: Type of the depot. Lookup DisDepotType and find e.g. a large
            receiving point 'Grossannahmestelle' or an els depot 'Depot'.
          format: int32
          example: 0
        name:
          type: string
          description: Identifies the Deutsche Post Depot. Use this unique value for
            API requests.
          example: Bautzen
        street:
          type: string
          description: Street (for information purposes).
          example: Kreckwitzer Str.
        houseNumber:
          type: string
          description: House number (for information purposes).
          example: '1'
        city:
          type: string
          description: City (for information purposes).
          example: Bautzen
        zip:
          type: string
          description: Zip code (for information purposes).
          example: '02625'
    CollectionRepAddressRep:
      type: object
      properties:
        elements:
          type: array
          items:
            "$ref": "#/components/schemas/AddressRep"
        page:
          "$ref": "#/components/schemas/PageMetadata"
        links:
          type: array
          items:
            "$ref": "#/components/schemas/Link"
