{
  "x-generator": "NSwag v13.15.7.0 (NJsonSchema v10.6.7.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "E-POSTBUSINESS API",
    "description": "\r\nDie E-POSTBUSINESS API (API) bietet Methoden für die elektronische Einlieferung von Dokumenten, \r\ndie anschließend als Briefe physisch versendet werden. Im Folgenden weisen wir auf einige kritische Anforderungen bei der Implementierung \r\nund Nutzung der API hin und geben wichtige Tipps und Hilfestellungen. \r\nDetaillierte Informationen und Beschreibungen finden sich in den \r\n<a href='https://api.epost.docuguide.com/generalcontent/EpostApi/Faq' target='_blank'>FAQ zur E-POSTBUSINESS API</a>.\r\n\r\n<b>Datenformate</b><br/>\r\nDie zu versendenden Einzelbriefe sind im PDF/A-1b DIN A4 Hoch-Format bereitzustellen (siehe Abweichungen bei Dialogpost). \r\nAbweichungen vom DIN A4 Hoch-Format können nicht verarbeitet werden. \r\nPDF Dokumente, die nicht dem PDF/A-1b Format entsprechen, sind in vorhergehenden Tests (Testmodus der API) zu prüfen, \r\nda in der Aufbereitung beispielweise fehlende Fonts durch Standards ersetzt werden oder Transparenzen in Bildern \r\nnicht das gewünschte Ergebnis spiegeln. Diese Umstände können eine einwandfreie Verarbeitung einschränken oder zur Ablehnung in der Verarbeitung führen.\r\n\r\n<b>Empfängeranschrift und Absenderangabe (Schablone)</b><br/>\r\nDie Anschriftenseite muss entsprechende Freiflächen der DV Freimachung und für die Produktion (bspw. Druck) \r\nnotwendigen Anschriftenpositionen berücksichtigen. Dies schließt eine vollständig gut lesbare einzeilige Absenderzeile und eine vertikal möglichst \r\nmittige Positionierung der Empfängeranschrift ohne Leerzeilen ein. \r\nDiese Rahmenbedingungen sind in der <a href='https://www.deutschepost.de/dam/dpag/images/E_e/epost/partnerportal/Downloads/Schablone_V3_BK_Standard_und_BK_BZL.pdf' target='_blank'>Sperrflächenschablone V3</a> \r\ndargestellt. \r\nWir raten, im Adressbereich die Begrenzungen gemäß der Schablone nicht maximal auszureizen, \r\nda durch Bewegung des Briefs im Umschlag Teile der Empfänger- oder Absenderangaben aus dem Sichtfenster rutschen könnten.  \r\n\r\n<b>Automover</b><br/>\r\nFür nationale Schreiben besteht die Möglichkeit, eine automatisierte Anschriftenpositionierung (Automover) der API zu nutzen. \r\nMögliche Kalibrierungen und Verarbeitungsergebnisse an den Ursprungsdokumenten können in der Testmethode der API überprüft werden.\r\nAlternativ kann auch ein Deckblatt erzeugt werden, das eine Individualisierung zulässt. \r\nDie API verwendet für die automatisiert auf der ersten Seite oder Deckblatt aufgebrachten \r\nAnschriftendaten die Schriftart Arial in Schwarz und für Senderadresse die Fontgröße 6 sowie für die Empfängeradresse die Fontgröße 9.<br/>\r\nFür das Optimum wird eine E-POST konforme Ausrichtung der Adressbereiche direkt auf den Dokumenten empfohlen.\r\n\r\n<b>Statusrückmeldungen</b><br/>\r\nDer Verarbeitungsstatus der Dokumente wird in den Statusmethoden entsprechend zurückgemeldet. \r\nAus diesen Rückmeldungen sind dann die entsprechenden Benutzerinteraktionen und Supportanfragen vertragsgemäß abzuleiten. \r\n\r\n<b>Versand von Dialogpost</b><br/>\r\nZusätzlich zum hybriden Briefversand mit der E-POSTBUSINESS API ist auch ein Versand von Dialogpost Sendungen möglich. \r\nHierbei gelten die entsprechenden Formatvorgaben sowie die vertraglichen Regelungen gemäß \r\n<a href='https://www.deutschepost.de/content/dam/downloads/epost/Impementierungsrichtlinie_Dialogpost-20220513.pdf' target='_blank'>Dialogpost Implementierungsrichtlinie</a>\r\n , siehe auch <a href='https://api.epost.docuguide.com/generalcontent/EpostApi/Faq' target='_blank'>FAQ zur E-POSTBUSINESS API</a>.\r\n\r\n<b>Nutzung von PREMIUMADRESS</b><br/>\r\nDarüber hinaus ermöglicht die E-POSTBUSINESS API auch die einfache Nutzung \r\nwesentlicher Funktionen der teilweise kostenpflichtigen Zusatzleistung PREMIUMADRRESS \r\nin den Varianten Basis oder Report für nationale Sendungen der E-POSTBUSINESS API, ausgenommen Einschreiben. \r\nDie entsprechenden Datensätze aus dem PREMIUMADRESS-Service zu unzustellbaren Sendungen werden unverändert gemäß der Beschreibung von \r\nPREMIUMADRRESS (siehe hierzu \r\n<a href='https://www.deutschepost.de/dam/jcr:692cfdb4-724d-422a-b0b7-10c495542b87/dp-premiumadress-handbuch-022023.pdf' target='_blank'>PREMIUMADRESS Handbuch</a>) weitergegeben. \r\nDie Ergebnisse stehen in Abhängigkeit der Bearbeitungszeiten im Rahmen der PREMIUMADRESS-Services zeitversetzt in bspw. den Statusabfragen bereit.\r\n\r\n<b>Vertragliches</b><br/>\r\nDie Implementierung der API setzt einen gültigen API Nutzervertrag voraus. Dieser kann \r\n<a href='https://www.deutschepost.de/de/e/epost/geschaeftskunden/partner/business-api/kontakt.html' target='_blank'>hier</a> über ein Kontaktformular angefragt werden. \r\nEin Versand über die E-POSTBUSINESS API ist zudem nur mit einem gültigen E-POST Nutzervertrag möglich. Dieser Vertrag kann über folgende Registrierung erworben werden: \r\n<a href='https://www.deutschepost.de/epost/geschaeftskunden/registrierung-api' target='_blank'>E-POST Nutzervertrag zur E-POSTBUSINESS API</a>\r\n\r\n<b>Zugang und Nutzung (Test/produktiv)</b><br/>\r\nZur Verwendung der Swagger Schnittstelle werden die Zugangsdaten vom Support bereitgestellt \r\n(siehe FAQ: Welche Zugangsdaten benötige ich als API Nutzer zur Implementierung der API?).\r\nEine neue Implementierung gegen die API wird immer im Testmodus durchgeführt (kein physischer Versand). \r\nDer Wechsel in den Produktivmodus wird über den Support vorgenommen. \r\nZur Inbetriebnahme der Schnittstelle ist zu Beginn der initiale Kennwortprozess mit Hilfe eines Handy-TAN Verfahren (SMS) zu durchlaufen, \r\ndamit im Folgenden der regelmäßige Login durchgeführt werden kann. Über die entsprechende Autorisation ist \r\ndann der Upload der Dokumente (api/Letter) möglich. Die Kommunikation selbst nutzt den UTF-8 Zeichensatz. \r\nKurze Zeit später kann dann ausschließlich der Status der verarbeiteten Dokumente abgefragt werden, ein Download der Dokumente selbst ist nicht möglich.\r\n\r\n<b>Wichtige Quellen und Links</b><br/>\r\nAllgemeines<br/>\r\n<a href='https://www.deutschepost.de/epost/geschaeftskunden/business-api.html' target='_blank'>Übergreifende Informationen zur E-POSTBUSINESS API </a>\r\n<br/> \r\n<a href='https://api.epost.docuguide.com/versionhistory' target='_blank'>Versionshistorie</a>\r\n<br/>\r\n<a href='https://api.epost.docuguide.com/generalcontent/EpostApi/Faq' target='_blank'>FAQ - Häufig gestellte Fragen und Hilfestellungen</a>\r\n<br/>\r\n<br/>\r\nOpenAPI Methodik<br/>\r\n<a href= 'https://swagger.io'  target = '_blank' >Wissenswertes zu Swagger/OpenAPI</a>\r\n<br/>\r\n<a href= 'https://editor.swagger.io'  target = '_blank' >Code Generierung mit dem Swagger/OpenAPI Editor </a>\r\n<br/>\r\n<br/>\r\nDialogpost<br/>\r\n<a href='https://www.deutschepost.de/content/dam/downloads/epost/Impementierungsrichtlinie_Dialogpost-20220513.pdf' target='_blank'>Dialogpost Implementierungsrichtlinien</a><br/>\r\n<br/>\r\n<a href= 'https://api.epost.docuguide.com/generalcontent/EpostApi/Faq'  target = '_blank' > Formatvorlagen Dialogpost </a>\r\n<br/>\r\n<br/>\r\nPREMIUMADRESS<br/>\r\n<a href='https://www.deutschepost.de/premiumadress' target='_blank'>PREMIUMADRESS Produktseite</a><br/>\r\n<a href='https://www.deutschepost.de/de/p/premiumadress/downloads.html' target='_blank'>PREMIUMADRESS Download Seite</a><br/>\r\n<a href='https://www.deutschepost.de/dam/jcr:692cfdb4-724d-422a-b0b7-10c495542b87/dp-premiumadress-handbuch-022023.pdf' target='_blank'>PREMIUMADRESS Handbuch (ab Seite 54 detaillierte Feldbeschreibungen)</a><br/> \r\n<br/>\r\n<br/>\r\nVersand<br/>\r\n<a href= 'https://api.epost.docuguide.com/countries.json'  target = '_blank' >Ländernamen für Auslandssendungen (JSON)</a>\r\n<br/>\r\n<a href= 'https://api.epost.docuguide.com/trackStatusCodes.json'  target = '_blank' >Sendungsstatus Einschreiben (JSON)</a>\r\n<br/>\r\n<a href= 'https://www.deutschepost.de/content/dam/dpag/images/E_e/epost/partnerportal/Downloads/Schablone_V3_BK_Standard_und_BK_BZL.pdf'  target = '_blank' > Sperrflächenschablone V3 </a>\r\n<br/>\r\n<br/>\r\nRechtliches / Formales <br/>\r\n<a href= 'https://www.deutschepost.de/epost/geschaeftskunden/registrierung-api'  target = '_blank' >Registrierung für den E-POST Nutzervertrag zum Versand mit der E-POSTBUSINESS API</a>\r\n<br/>\r\n<a href='https://www.deutschepost.de/de/e/epost/geschaeftskunden/partner/business-api/kontakt.html' target='_blank'>Kontaktformular für Anfrage API-Nutzervertrag und sonstige Fragen zur API</a> \r\n<br/>\r\n<a href='https://www.deutschepost.de/de/f/footer/impressum.html' target='_blank'>Impressum</a> \r\n<br/>\r\nDatenschutz(<a href = 'https://www.deutschepost.de/de/e/epost/geschaeftskunden/agb.html#kapitelIII' target = '_blank' > Datenschutzhinweise für die Nutzung der digitalen und hybriden Dienste </a>\r\n                 &nbsp;,&nbsp;<a href = 'https://www.deutschepost.de/de/e/epost/geschaeftskunden/sicherheit.html'\r\n                target = '_blank' > E-POST Datenschutz Information</a>)",
    "version": "v2.3.3"
  },
  "servers": [
    {
      "url": "https://api.epost.docuguide.com"
    }
  ],
  "paths": {
    "/api/Campaign/CostEstimate": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "summary": "Beispielberechnung einer Kampagne als Vorschau",
        "description": "Diese Vorschau-Methode dient zur Beispielberechnung. \nDie bereitzustellenden Kampagne-Daten stellen nicht die finalen Kampagne-Daten dar, sondern dienen zur Evaluierung der Netto-Gesamtkosten \nin Abhängigkeit der Adressmenge. Bitte beachten Sie, dass auch in der Beispielrechnung der Versandkosten-Anteil \nnur mit vollständiger Kampagne-Adressliste ermittelt werden kann. Die bereitgestellten Gesamtkosten setzen sich aus den Netto-Produktionskosten \nund den Netto-Versandkosten zusammen. \n\nAuthentifizierung und Validierung der Abfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Campaign_CostEstimate",
        "requestBody": {
          "x-name": "campaign",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Campaign"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Erfolgreiche Abfrage der Gesamtkosten. Gibt ein CampaignStatus-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignStatus"
                }
              }
            }
          },
          "401": {
            "description": "Die Software/Benutzer-Kennung war ungültig",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein CampaignError-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          },
          "429": {
            "description": "Zu häufige Abfragen innerhalb einer bestimmten Zeit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Campaign/SampleRequest": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "summary": "Generieren von Beispieldokmenten für den späteren Abruf",
        "description": "Authentifizierung und Validierung der Abfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Campaign_SampleRequest",
        "requestBody": {
          "x-name": "campaign",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Campaign"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Die Testverarbeitung wurde erfolgreich eingleitet und gibt eine Liste von LetterIdent-Objekten zurück. Ein Feedback der Testverarbeitung liegt in der Regel innerhalb weniger Minuten vor und lässt sich über 'SampleData' abrufen ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LetterIdent"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Die Software/Benutzer-Kennung war ungültig",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein CampaignError-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          },
          "429": {
            "description": "Zu häufige Abfragen innerhalb einer bestimmten Zeit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Campaign/SampleData": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "summary": "Abruf der Beispieldokumente",
        "description": "Der Abruf der beispielhaft generierten Werbemittel erfolgt unter Angabe der vorher bereitgestellten Identifier. \nDas Ergebnis der Generierungen und Fehlersituationen, bspw. Schablonenverletzungen oder Problemanschriften können in den bereitgestellten PDF-Dokumenten validiert und korrigiert werden. \nDiese Daten sind max. 48 Std verfügbar.\n            \nAuthentifizierung und Validierung der Abfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Campaign_SampleData",
        "requestBody": {
          "x-name": "letterIdents",
          "description": "Liste von LetterIdent-Objekten, über welche die Testverarbeitung abgerufen werden kann",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LetterIdent"
                }
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Erfolgreiche Statusabfrage der Testdokumente. Gibt ein Array von CampaignDataResult-Objekten zurück",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CampaignDataResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Die Software/Benutzer-Kennung war ungültig",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein CampaignError-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          },
          "429": {
            "description": "Zu häufige Abfragen innerhalb einer bestimmten Zeit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Campaign/Open": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "summary": "Kampagne neu eröffnen",
        "description": "Die konkrete Kampagne mit dem finalen Werbemittel, den Adress-, Versand- und Rechnungsdaten wird neu erzeugt und ihre ID bereitgestellt. \nEine nachträgliche Änderung ist nicht möglich, ein Abbruch (Cancel) der betroffenen Kampagne und eine Neueröffnung (Open) Kampagne mit den korrekten Daten bildet dies ab. \nKampagnen, die nicht innerhalb von 90 Tagen finalisiert wurden, werden automatisch abgebrochen. \n            \nAuthentifizierung und Validierung der Abfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Campaign_OpenCampaign",
        "requestBody": {
          "x-name": "campaign",
          "description": "Übergabe der Kampagnen-Daten inkl. Werbemittel-PDF und der Addressliste über das Campaign-Model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Campaign"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Erfolgreicher Upload der Daten zum Erstellen einer Kampagne. Rückgabe der eindeutigen Kampagnen-ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "401": {
            "description": "Authorisierung ist fehlgeschlagen.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein CampaignError-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Campaign/{id}/ConfirmRequest": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "summary": "Überprüfung der Kampagne anfragen",
        "description": "Zur Überprüfung des übergebenen Werbemittels und Adressen der konkreten Kampagne sind 5 Beispiel Dokumente zu generieren, \nwobei ohne die Angabe von 5 Adresspositionen in der Adressliste die ersten 5 Positionen automatisch gewählt und die jeweiligen Identifier bereitgestellt werden. \nDieser Aufruf kann auch mehrfach für die konkrete Kampagne mit unterschiedlichem Adresspositionen vorgenommen werden, \nwobei dabei die vorherigen Dokumente überschrieben werden. \nDieser Aufruf muss mindesten einmal ausgeführt werden und kann nach der Finalisierung nicht mehr aufgerufen werden. \n\nAuthentifizierung und Validierung der Abfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Campaign_ConfirmRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Kampagnen-ID",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "addressPositions",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Liste von Adresspositionen aus der mitgegebenen Adressliste. Es dürfen max. 5 Adressen für eine Testverarbeitung angegeben werden. Falls nichts übergeben wird, werden die ersten 5 Adressen der Liste als Vorschau verarbeitet",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "integer",
                "format": "int32"
              }
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Die Testverarbeitung wurde erfolgreich eingleitet. Ein Feedback der Testverarbeitung liegt in der Regel innerhalb weniger Minuten vor und lässt sich über 'ConfirmData' abrufen "
          },
          "401": {
            "description": "Die Software/Benutzer-Kennung war ungültig",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein CampaignError-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          },
          "429": {
            "description": "Zu häufige Abfragen innerhalb einer bestimmten Zeit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Campaign/{id}/ConfirmData": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "summary": "Referenzdokumente der Kampagne abrufen",
        "description": "Der Abruf der durch die letzte ConfirmRequest-Abfrage der konkreten Kampagne generierten Dokumente \nerfolgt über die konkrete Kampagne ID, muss mindestens einmal ausgeführt werden und kann nach der Finalisierung nicht mehr aufgerufen werden.\n\nAuthentifizierung und Validierung der Abfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Campaign_ConfirmData",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Kampagnen-ID",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Erfolgreiche Statusabfrage der Testdokumente. Gibt ein Array von CampaignDataResult-Objekten zurück",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CampaignDataResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Die Software/Benutzer-Kennung war ungültig",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein CampaignError-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          },
          "429": {
            "description": "Zu häufige Abfragen innerhalb einer bestimmten Zeit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Campaign/{id}/FinalizeInfo": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "summary": "Finalisierungsdaten der Kampagne abfragen",
        "description": "Die zur konkreten Kampagne ID zugehörigen Vertragsdaten, Geschäftsbedingungen und netto Preise werden mit einem Timestamp zur Freigabe bereitgestellt. \nDies muss mindestens einmal ausgeführt werden und kann nach der Finalisierung nicht mehr aufgerufen werden.\n\nAuthentifizierung und Validierung der Abfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Campaign_FinalizeInfo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Kampagnen-ID",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Erfolgreiche Statusabfrage der Finalisierungsinfos. Gibt ein FinalizeInfo-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignFinalizeInfo"
                }
              }
            }
          },
          "401": {
            "description": "Die Software/Benutzer-Kennung war ungültig",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein CampaignError-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          },
          "429": {
            "description": "Zu häufige Abfragen innerhalb einer bestimmten Zeit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Campaign/{id}/Finalize": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "summary": "Kampagne finalisieren (zur Beauftragung übermitteln)",
        "description": "Die konkreten Kampagne mit ihrer ID wird final beauftragt und es erfolgt die vollständige Übergabe an die Produktion. \nVoraussetzung hierzu ist die Übergabe der Response aus Campaign/{id}/FinalizeInfo - INNERHALB VON 3 TAGEN - und die vorausgehenden Aufrufe von SampleRequest und SampleData. \nDie Methode kann nur einmalig ausgeführt werden, ein nachträglicher Abbruch ist methodisch nicht möglich.\n\nAuthentifizierung und Validierung der Abfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Campaign_Finalize",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "campaignFinalizeInfo",
          "description": "Kampagnen-Daten zur Finalisierung",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignFinalizeInfo"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Die Kampagne wurden erfolgreich beauftragt und an die Produktion übermittelt."
          },
          "401": {
            "description": "Die Software/Benutzer-Kennung war ungültig",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein CampaignError-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          },
          "429": {
            "description": "Zu häufige Abfragen innerhalb einer bestimmten Zeit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Campaign/{id}/Cancel": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "summary": "Kampagne abbrechen",
        "description": "Die konkrete Kampagne kann solange abgebrochen werden, wie keine Finalisierung stattfand. \nSie wird im Status als solches signalisiert. \n\nAuthentifizierung und Validierung der Abfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Campaign_Cancel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Kampagnen-ID",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Die Kampagne wurde erfolgreich abgebrochen."
          },
          "401": {
            "description": "Die Software/Benutzer-Kennung war ungültig",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein CampaignError-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          },
          "429": {
            "description": "Zu häufige Abfragen innerhalb einer bestimmten Zeit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Campaign/{id}/Status": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "summary": "Kampagnestatus abfragen",
        "description": "Der aktuelle Status der konkreten Kampagne inkl. möglicher Fehler kann abgerufen werden. \nAusgewählte Metadaten stehen nur für 90 Tage nach der Finalisierung zur Verfügung, die übrigen Statusinformationen sind maximal 400 Tage abrufbar.\n\nAuthentifizierung und Validierung der Abfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Campaign_Status",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Kampagnen-ID",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Erfolgreicher Abruf des Kampagnen-Status. Gibt ein CampaignStatus-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignStatus"
                }
              }
            }
          },
          "401": {
            "description": "Die Software/Benutzer-Kennung war ungültig",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein CampaignError-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          },
          "429": {
            "description": "Zu häufige Abfragen innerhalb einer bestimmten Zeit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Campaign/Date": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "summary": "Kampagnenstatus über Zeitraum abfragen",
        "description": "Die Statusdaten der Kampagnen über den angegebenen Zeitraum werden bereitgestellt, \nwobei ausgewählte Metadaten nur für 90 Tage nach der Finalisierung zur Verfügung stehen.\nDie übrigen Statusinformationen sind maximal 400 Tage abrufbar.\n\nAuthentifizierung und Validierung der Abfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Campaign_Date",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "Datum-Von (Nur Datum '2019-01-01' oder Datum mit Uhrzeit '2019-01-01T00:00:00') Wird nur der Datumsanteil verwendet, ist der Zeitanteil immer 00:00:00",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          },
          {
            "name": "tillDate",
            "in": "query",
            "description": "Datum-Bis (Nur Datum '2019-01-15' oder Datum mit Uhrzeit '2019-01-15T23:59:59') Wird nur der Datumsanteil verwendet, ist der Zeitanteil immer 00:00:00",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Status-Daten mehrerer Kampagnen abrufen. Gibt eine Liste von CampaignStatus-Objekten zurück",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CampaignStatus"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Die Software/Benutzer-Kennung war ungültig",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein CampaignError-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          },
          "429": {
            "description": "Zu häufige Abfragen innerhalb einer bestimmten Zeit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Campaign/StatusQuery": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "summary": "Kampagnestatus über ID-Liste abfragen",
        "description": "Die Statusdaten der Kampagnen werden über eine übergebene Liste von KampagnenIDs bereitgestellt, \nwobei ausgewählte Metadaten nur für 90 Tage nach der Finalisierung zur Verfügung stehen.\nDie übrigen Statusinformationen sind maximal 400 Tage abrufbar.\n\nAuthentifizierung und Validierung der Abfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)\n\nBeispiel-Anfrage:\n\n    [ 25467, 27564, 28991 ]\n            \n            ",
        "operationId": "Campaign_StatusQuery",
        "requestBody": {
          "x-name": "campaignIds",
          "description": "Array mit eindeutigen Kampagnen IDs",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Erfolgreiche Statusabfrage der Sendungen. Gibt ein Array von CampaignStatus-Objekten zurück",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CampaignStatus"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorisierung ist fehlgeschlagen. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Keine Statusrückgabe möglich",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Zu hohe Abfragefrequenz von CampaignStatus Anfragen. Die Mindestdauer zwischen 2 Statusabfragen liegt bei 5 Sekunden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Client/EMailRequest": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Anfrage SMS Code zur EMail Änderung",
        "description": "Anfrage eines Sicherheitscodes per SMS, der zum ändern der EMail Adresse über 'SetMail' verwendet wird. Die spätere zu übernehmende EMail Adresse wird hier bereits mitgegeben und gegen die in 'SetEMail' übergebene EMail Adresse abgeglichen.\n\nAuthentifizierung und Validierung der Abfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Client_PostEMailRequest",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Angabe der neuen EMail Adresse, für die der Code gültig sein soll",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Erfolgreiche Codeanfrage. Es wird ein Sicherheitscode an die hinterlegte Rufnummer per SMS versendet, der 10 Minuten gültig ist."
          },
          "401": {
            "description": "Authorisierung ist fehlgeschlagen. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Zu häufige Abfragen innerhalb einer bestimmten Zeit. Die Mindestdauer zwischen den Abfragen darf 30 Sekunden nicht unterschreiten.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Client/SetEMail": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Änderung der EMail Adresse",
        "description": "Änderung der EMail Adresse über einen zuvor anfgefragten Sicherheitscode per 'EMailRequest'. Die übergebene EMail Adresse wird gegen die zuvor im 'EMailRequest' übergebene EMail Adresse auf Gleichheit geprüft.\n\nAuthentifizierung und Validierung der Abfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Client_PostSetEMail",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Wiederholung der neuen EMail Adresse aus MailRequest",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "code",
            "in": "query",
            "description": "Änderungs-Code, der über EMailRequest angefordert wurde",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Erfolgreiche Änderung der EMail Adresse. Es wurde eine Test EMail zur Bestätigung versendet."
          },
          "401": {
            "description": "Authorisierung ist fehlgeschlagen. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Client/MobileRequest": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Anfrage Sicherheitscode zur Rufnummer-Änderung",
        "description": "Anfrage eines Sicherheitscodes per EMail, der zum ändern der Rufnummer über 'SetMobile' verwendet wird. Die spätere zu übernehmende Rufnummer wird hier bereits mitgegeben und gegen die in 'SetMobile' übergebene Rufnummer abgeglichen.\n\nAuthentifizierung und Validierung der Abfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Client_PostMobileRequest",
        "parameters": [
          {
            "name": "mobile",
            "in": "query",
            "description": "Angabe der neuen Rufnummer, für die der Code gültig sein soll",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Erfolgreiche Codeanfrage. Es wird ein Sicherheitscode an die hinterlegte EMail Adresse versendet, der 10 Minuten gültig ist."
          },
          "401": {
            "description": "Authorisierung ist fehlgeschlagen. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Zu häufige Abfragen innerhalb einer bestimmten Zeit. Die Mindestdauer zwischen den Abfragen darf 30 Sekunden nicht unterschreiten.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Client/SetMobile": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Änderung der Rufnummer",
        "description": "Änderung der Rufnummer über einen zuvor anfgefragten Sicherheitscode per 'MobileRequest'. Die übergebene Rufnummer wird gegen die zuvor im 'MobileRequest' übergebene Rufnummer auf Gleichheit geprüft.\n\nAuthentifizierung und Validierung der Abfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Client_PostSetMobile",
        "parameters": [
          {
            "name": "mobile",
            "in": "query",
            "description": "Wiederholung der neuen Rufnummer aus MobileRequest",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "code",
            "in": "query",
            "description": "Änderungs-Code, der über MobileRequest angefordert wurde",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Erfolgreiche Änderung der Rufnummer. Es wurde eine Test SMS zur Bestätigung versendet."
          },
          "401": {
            "description": "Authorisierung ist fehlgeschlagen. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Client/TestEMail": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Bestätigungsinformation an hinterlegte EMail Adresse",
        "description": "An die im System hinterlegte EMail Adresse wird eine Test EMail als Bestätigungsinformation versendet.\n\nAuthentifizierung und Validierung der Abfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Client_PostTestEMail",
        "responses": {
          "200": {
            "description": "Es wurde eine Test EMail an die hinterlegte EMail Adresse versendet."
          },
          "401": {
            "description": "Authorisierung ist fehlgeschlagen. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Zu häufige Abfragen innerhalb einer bestimmten Zeit. Die Mindestdauer zwischen den Abfragen darf 30 Sekunden nicht unterschreiten.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Client/TestMobile": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Bestätigungsinformation an die hinterlegte Rufnummer",
        "description": "An die im System hinterlegte Rufnummer wird eine Test SMS als Bestätigungsinformation versendet.\n\nAuthentifizierung und Validierung der Abfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Client_PostTestMobile",
        "responses": {
          "200": {
            "description": "Es wurde eine Test SMS an die hinterlegte Rufnummer versendet."
          },
          "401": {
            "description": "Authorisierung ist fehlgeschlagen. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Zu häufige Abfragen innerhalb einer bestimmten Zeit. Die Mindestdauer zwischen den Abfragen darf 30 Sekunden nicht unterschreiten.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Letter/{letterID}": {
      "get": {
        "tags": [
          "Letter"
        ],
        "summary": "Statusabfrage mit Sendungs-ID",
        "description": "Statusabfrage einer bestimmten Sendung über die eindeutige Sendungs-ID.\n\nAuthentifizierung und Validierung der Sendungsabfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Letter_Get",
        "parameters": [
          {
            "name": "letterID",
            "in": "path",
            "required": true,
            "description": "Eindeutige Sendungs-ID (z.B. 6547890)",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Erfolgreiche Statusabfrage der Sendung. Gibt ein LetterStatus-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LetterStatus"
                }
              }
            }
          },
          "401": {
            "description": "Authorisierung ist fehlgeschlagen. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Zu hohe Abfragefrequenz von Letter-Status Anfragen. Die Mindestdauer zwischen 2 Statusabfragen liegt bei 5 Sekunden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Keine Statusrückgabe möglich",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Letter/TestResult": {
      "get": {
        "tags": [
          "Letter"
        ],
        "summary": "Abfrage der Testsendung",
        "description": "Abfrage des PDF-Resultats einer bestimmten Testsendung über die eindeutige Sendungs-ID.\nDiese Abfrage ist nur für Test-Einlieferungen möglich. \nDas PDF-Resultat wird als Base64-String bereitgestellt und ist nach einer technisch erfolgreichen \nVerarbeitung (ProcessedDate) 48 Std lang verfügbar.\n\nAuthentifizierung und Validierung der Sendungsabfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Letter_GetTestResult",
        "parameters": [
          {
            "name": "letterID",
            "in": "query",
            "description": "Eindeutige Sendungs-ID (z.B. 6547890)",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Erfolgreiche Rückgabe der Testsendung. Gibt ein LetterDataResult-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LetterDataResult"
                }
              }
            }
          },
          "401": {
            "description": "Authorisierung ist fehlgeschlagen. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Zu hohe Abfragefrequenz von LetterDataResult Anfragen. Die Mindestdauer zwischen Abfragen liegt bei 2 Sekunden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Keine LetterDataResult-Rückgabe möglich",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Letter/Batch": {
      "get": {
        "tags": [
          "Letter"
        ],
        "summary": "Statusabfrage eines Stapellaufs",
        "description": "Statusabfrage eines bestimmten Stapellaufs (BatchID)\n\nAuthentifizierung und Validierung der Sendungsabfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Letter_GetAll",
        "parameters": [
          {
            "name": "batchId",
            "in": "query",
            "description": "Nummer eines bestimmten Stapellaufs (z.B. 34756)",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "onlyIssues",
            "in": "query",
            "description": "Option: Nur fehlerhafte Einlieferungen rückmelden (Standardwert: false)",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Erfolgreiche Statusabfrage der Sendungen. Gibt ein Array von LetterStatus-Objekten zurück",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LetterStatus"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorisierung ist fehlgeschlagen. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Keine Statusrückgabe möglich",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Zu hohe Abfragefrequenz von Letter-Status Anfragen. Die Mindestdauer zwischen 2 Statusabfragen liegt bei 5 Sekunden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Letter/Custom1": {
      "get": {
        "tags": [
          "Letter"
        ],
        "summary": "Statusabfrage via Custom1",
        "description": "Statusabfrage von Sendungen über eine benutzerdefinierte Kennung (Custom1)\n\nAuthentifizierung und Validierung der Sendungsabfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Letter_GetAll2",
        "parameters": [
          {
            "name": "custom1",
            "in": "query",
            "description": "Kennung zur Suche bestimmter Sendungen über das Custom1-Feld (Letter-Model)",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "onlyIssues",
            "in": "query",
            "description": "Option: Nur fehlerhafte Einlieferungen rückmelden (Standardwert: false)",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Erfolgreiche Statusabfrage der Sendungen. Gibt ein Array von LetterStatus-Objekten zurück",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LetterStatus"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorisierung ist fehlgeschlagen. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Keine Statusrückgabe möglich",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Zu hohe Abfragefrequenz von Letter-Status Anfragen. Die Mindestdauer zwischen 2 Statusabfragen liegt bei 5 Sekunden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Letter/Date": {
      "get": {
        "tags": [
          "Letter"
        ],
        "summary": "Statusabfrage über einen Zeitraum",
        "description": "Statusabfrage von Sendungen innerhalb eines bestimmten Zeitfensters. Der maximale Zeitraum für Datumsabfragen beträgt 400 Tage rückwirkend.\nHierzu wird das Einlieferungsdatum der Sendungen verwendet (Letterstatus: CreateDate)\n\nAuthentifizierung und Validierung der Sendungsabfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Letter_GetAll3",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "Datum-Von (Nur Datum '2019-01-01' oder Datum mit Uhrzeit '2019-01-01T00:00:00') Wird nur der Datumsanteil verwendet, ist der Zeitanteil immer 00:00:00",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          },
          {
            "name": "tillDate",
            "in": "query",
            "description": "Datum-Bis (Nur Datum '2019-01-15' oder Datum mit Uhrzeit '2019-01-15T23:59:59') Wird nur der Datumsanteil verwendet, ist der Zeitanteil immer 00:00:00",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          },
          {
            "name": "onlyIssues",
            "in": "query",
            "description": "Option: Nur fehlerhafte Einlieferungen rückmelden (Standardwert: false)",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Erfolgreiche Statusabfrage der Sendungen. Gibt ein Array von LetterStatus-Objekten zurück",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LetterStatus"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorisierung ist fehlgeschlagen. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Keine Statusrückgabe möglich",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Zu hohe Abfragefrequenz von Letter-Status Anfragen. Die Mindestdauer zwischen 2 Statusabfragen liegt bei 5 Sekunden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Letter/Open": {
      "get": {
        "tags": [
          "Letter"
        ],
        "summary": "Statusabfrage aller offenen LIVE-Sendungen",
        "description": "Statusabfrage aller offenen LIVE-Sendungen (LetterStatus 1,2,3 und TestFlag=false). Versendete und fehlerhafte Briefe (LetterStatus 4,99) werden hierbei nicht zurückgegeben.\n\nAuthentifizierung und Validierung der Sendungsabfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Letter_GetOpenLetters",
        "responses": {
          "200": {
            "description": "Erfolgreiche Statusabfrage der Sendungen. Gibt ein Array von LetterStatus-Objekten zurück",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LetterStatus"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorisierung ist fehlgeschlagen. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Keine Statusrückgabe möglich",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Zu hohe Abfragefrequenz von Letter-Status Anfragen. Die Mindestdauer zwischen 2 Statusabfragen liegt bei 5 Sekunden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Letter/Registered": {
      "get": {
        "tags": [
          "Letter"
        ],
        "summary": "Statusabfrage von Einschreiben über einen Zeitraum",
        "description": "Statusabfrage von Einschreiben über einen bestimmten Zeitraum. Der maximale Zeitraum für Datumsabfragen beträgt 400 Tage rückwirkend.\n\nAuthentifizierung und Validierung der Sendungsabfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Letter_GetRegisteredLetters",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "Datum-Von (Nur Datum '2019-01-01' oder Datum mit Uhrzeit '2019-01-01T00:00:00') Wird nur der Datumsanteil verwendet, ist der Zeitanteil immer 00:00:00",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          },
          {
            "name": "tillDate",
            "in": "query",
            "description": "Datum-Bis (Nur Datum '2019-01-15' oder Datum mit Uhrzeit '2019-01-15T23:59:59') Wird nur der Datumsanteil verwendet, ist der Zeitanteil immer 00:00:00",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          },
          {
            "name": "onlyOpen",
            "in": "query",
            "description": "Option: Nur offene Einschreiben rückmelden (Standardwert: false)",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Erfolgreiche Statusabfrage der Sendungen. Gibt ein Array von LetterStatus-Objekten zurück",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LetterStatus"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorisierung ist fehlgeschlagen. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Keine Statusrückgabe möglich",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Zu hohe Abfragefrequenz von Letter-Status Anfragen. Die Mindestdauer zwischen 2 Statusabfragen liegt bei 5 Sekunden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Letter/PremiumAdressFeedback": {
      "get": {
        "tags": [
          "Letter"
        ],
        "summary": "Statusabfrage von PremiumAdress-PlugIN Feedback über einen Zeitraum",
        "description": "Statusabfrage von PremiumAdress-PlugIN Feedback über einen bestimmten Zeitraum. Der maximale Zeitraum für Datumsabfragen beträgt 400 Tage rückwirkend.\n\nAuthentifizierung und Validierung der Sendungsabfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Letter_GetPremiumAdressLetters",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "Datum-Von (Nur Datum '2019-01-01' oder Datum mit Uhrzeit '2019-01-01T00:00:00') Wird nur der Datumsanteil verwendet, ist der Zeitanteil immer 00:00:00",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          },
          {
            "name": "tillDate",
            "in": "query",
            "description": "Datum-Bis (Nur Datum '2019-01-15' oder Datum mit Uhrzeit '2019-01-15T23:59:59') Wird nur der Datumsanteil verwendet, ist der Zeitanteil immer 00:00:00",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          },
          {
            "name": "onlyFeedback",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Erfolgreiche Statusabfrage der Sendungen. Gibt ein Array von LetterStatus-Objekten zurück, welche eine PremiumAdress Rückinfo enthalten",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LetterStatus"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorisierung ist fehlgeschlagen. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Keine Statusrückgabe möglich",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Zu hohe Abfragefrequenz von Letter-Status Anfragen. Die Mindestdauer zwischen 2 Statusabfragen liegt bei 5 Sekunden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Letter/StatusQuery": {
      "post": {
        "tags": [
          "Letter"
        ],
        "summary": "Statusabfrage mit Sendungs-IDs",
        "description": "Statusabfrage durch eine übergegebene Liste der eindeutigen Sendungs-IDs (letterIDs). \nZur Validierung der Verarbeitung kann auf die fehlerhaften Schreiben (status = 99) mit onlyIssues eingeschränkt werden.\n\nAuthentifizierung und Validierung der Sendungsabfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)\n\nBeispiel-Anfrage:\n\n    [ 74567567, 65765678, 68843445 ]\n            \n            ",
        "operationId": "Letter_PostStatusQuery",
        "parameters": [
          {
            "name": "onlyIssues",
            "in": "query",
            "description": "Option: Nur fehlerhafte Einlieferungen rückmelden (Standardwert: false)",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "letters",
          "description": "Array mit eindeutigen Sendungs-IDs",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Erfolgreiche Statusabfrage der Sendungen. Gibt ein Array von LetterStatus-Objekten zurück",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LetterStatus"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorisierung ist fehlgeschlagen. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Keine Statusrückgabe möglich",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Zu hohe Abfragefrequenz von Letter-Status Anfragen. Die Mindestdauer zwischen 2 Statusabfragen liegt bei 5 Sekunden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Letter": {
      "post": {
        "tags": [
          "Letter"
        ],
        "summary": "Einlieferung von einer oder mehreren Sendungen",
        "description": "Einlieferung von einer oder mehreren Sendungen, wobei eine Gruppierung von mehreren Uploads über die individuelle batchID möglich ist. \nDie einzuliefernden PDF-Dateien dürfen pro Sendung 20 MB bzw. mehrere Sendungen per Request 300 MB nicht überschreiten. \nIm Erfolgsfall der Einlieferung wird zu jeder Datei eine eindeutige letterID als Response bereitgestellt, die im Folgenden die Sendung dauerhaft identifiziert. \n\nDie Sendung wird so dann der weiteren Aufbereitung und tieferen Prüfungen zugeführt und kann über Statusabfragen verfolgt werden. \n\nAuthentifizierung und Validierung der Sendungseinlieferung erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)\n\nBeispiel-Anfrage:\n\n    POST\n    [\n        {\n            \"fileName\": \"Testfile_72834.pdf\",\n            \"data\": \"xyz...\",\n            \"isColor\": true,\n            \"isDuplex\": false,\n            \"batchID\": 321,\n            \"testFlag\": true,\n            \"testShowRestrictedArea\": true,\n            \"testEMail\": \"yourEmail@yourWebspace.com\",\n            \"addressLine1\": \"Max Mustermann AG\",\n            \"addressLine2\": \"Abteilung Testbrief\",\n            \"addressLine3\": \"Musterstrasse 99\",\n            \"zipCode\": \"12345\",\n            \"city\": \"Testhausen\",\n            \"country\": \"\",\n            \"senderAdressLine1\": \"Meine Firma\",\n            \"senderStreet\": \"Am Weg 1\",\n            \"senderZipCode\": \"98765\",\n            \"senderCity\": \"ERP-Hausen\",\n            \"custom1\": \"RE-000123445\",\n            \"custom2\": \"01.07.2019\"\n        }\n    ]",
        "operationId": "Letter_Post",
        "requestBody": {
          "x-name": "letters",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Letter"
                }
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Erfolgreich angenommen. Gibt ein Array von LetterIdent-Objekten zurück",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LetterIdent"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorisierung ist fehlgeschlagen. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein Error-Objekt zurück ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Letter/CancelQueued": {
      "post": {
        "tags": [
          "Letter"
        ],
        "summary": "Abbruch von terminierten Sendungen",
        "description": "Abbruch von Sendungen, die ausschlieslich über das Upload-Management Plugin eingeliefert wurden und noch nicht den Mindestmengenversand oder Terminversand erreicht haben.\n\nAuthentifizierung und Validierung der Sendungsabfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)\n\nBeispiel-Anfrage:\n\n    [ 74567567, 65765678, 68843445 ]\n            \n            ",
        "operationId": "Letter_PostCancelQueued",
        "requestBody": {
          "x-name": "letters",
          "description": "Array mit eindeutigen Sendungs-IDs",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Erfolgreich angenommen. Gibt ein Array von LetterQueueStatus-Objekten zurück",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LetterQueueResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorisierung ist fehlgeschlagen. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein Error-Objekt zurück ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Letter/ReleaseQueued": {
      "post": {
        "tags": [
          "Letter"
        ],
        "summary": "Vorziehen von terminierten Sendungen",
        "description": "Vorziehen von Sendungen, die ausschlieslich über das Upload-Management Plugin eingeliefert wurden und noch nicht den Mindestmengenversand oder Terminversand erreicht haben.\n\nAuthentifizierung und Validierung der Sendungsabfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)\n\nBeispiel-Anfrage:\n\n    [ 74567567, 65765678, 68843445 ]\n            \n            ",
        "operationId": "Letter_PostReleaseQueued",
        "requestBody": {
          "x-name": "letters",
          "description": "Array mit eindeutigen Sendungs-IDs",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Erfolgreich angenommen. Gibt ein Array von LetterQueueStatus-Objekten zurück",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LetterQueueResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorisierung ist fehlgeschlagen. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein Error-Objekt zurück ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Login": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Anfrage eines JSON Web Token",
        "description": "Anfrage eines gültigen JWT (JSON Web Token) für den Zugriff auf die weiteren Controller der E-POSTBUSINESS API.\n\nBeispiel-Anfrage:\n            \n    POST\n    {\n       \"vendorID\": \"12345\",\n       \"ekp\": \"1234567890\",\n       \"secret\": \"77831f6f-d39b-4d5b-a5ae-b4006f894179\",\n       \"password\": \"56789\"\n    }",
        "operationId": "Login_Post",
        "requestBody": {
          "x-name": "login",
          "description": "Login-Objekt mit allen erforderlichen Zugangsdaten",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Die Login-Parameter wurden akzeptiert und es wurde eine gültige Tokeninformation per JSON zurückgegeben",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Die Login-Parameter sind ungültig. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Zu häufige Abfragen innerhalb einer bestimmten Zeit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Login/smsRequest": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Anfrage des SMS-Codes",
        "description": "Anfrage eines zeitlich begrenzten SMS-Code zur Verifizierung einer Passwortvergabe/änderung bzw. zur Aktivierung.\n\nBeispiel-Anfrage:\n            \n    POST\n    {\n       \"vendorID\": \"12345\",\n       \"ekp\": \"56789\"\n    }\n            ",
        "operationId": "Login_Post2",
        "requestBody": {
          "x-name": "smsCodeRequest",
          "description": "Objekt mit Software/Benutzer-Kennung",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SmsCodeRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "202": {
            "description": "Die Software/Benutzer-Kennung war gültig. Es wird ein Code an die hinterlegte Mobilnummer per SMS versendet, der 10 Minuten gültig ist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Die Software/Benutzer-Kennung war ungültig",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Zu häufige Abfragen innerhalb einer bestimmten Zeit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Login/setPassword": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Setzen des Passworts",
        "description": "Speichert ein benutzerdefiniertes Passwort in der E-POSTBUSINESS API. Liefert bei Erfolg einen Sicherheitsschlüssel der E-POSTBUSINESS API (secret) zurück, welcher für die Login-Methode erforderlich ist und aktiviert die E-POSTBUSINESS API.\n\nBeispiel-Anfrage:\n            \n    POST\n    {\n       \"vendorID\": \"123\",\n       \"ekp\": \"1234567890\",\n       \"newPassword\": \"qawsedrftg123\",\n       \"smsCode\": \"9182\"\n    }\n            ",
        "operationId": "Login_Post3",
        "requestBody": {
          "x-name": "setPassword",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetPassword"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Das Passwort wurde hinterlegt und kann für API-Anfragen genutzt werden. Liefert einen Sicherheitsschlüssel der EPost (secret) zurück, welcher für die Login-Methode erforderlich ist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Ungültige Anfragedaten. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Login/HealthCheck": {
      "get": {
        "tags": [
          "Login"
        ],
        "summary": "Status-Prüfung der API",
        "description": "Abfrage des Verfügbarkeitsstatus der E-POSTBUSINESS API und Bereitstelllung von Wartungsfenstern, sowie möglicher Störungen.",
        "operationId": "Login_GetHealthCheck",
        "responses": {
          "200": {
            "description": "Erfolgreiche Anfrage des API-Status. Es wird ein Error-Object zurückgeliefert, welches den Status anhand einer Information (I501 - API-Status: OK), Warnung (W501 - API-Status: Wartungsankündigung) oder eines Fehlers (E501 - API-Status: Inaktiv) zurückmeldet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Zu häufige Abfragen innerhalb einer bestimmten Zeit. Die Mindestdauer zwischen den Abfragen darf 5 Sekunden nicht unterschreiten.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/PlugIn/Automover": {
      "get": {
        "tags": [
          "PlugIn"
        ],
        "summary": "Dokumentation des Automover Plugin",
        "description": "Die inhaltliche Dokumentation des Plugin mit seinen Parametern und Response Elementen ist im jeweiligen aufgeführten Schema zu finden.\n\nInhalt des Response-Bereich (Code):\n\nCode 110: die Übergabesignatur des Automover PlugIn als Teil der PlugIn Liste im Letter Schemas\n\nCode 111: Response des Automover PlugIn als Teil der PlugInFeedback Liste im LetterStatus Schemas\n\nBitte beachten Sie auch den FAQ-Bereich für zusätzliche Informationen zu diesem PlugIn.\n\nBeispiel-Aufruf innerhalb der PlugInList des Letter Models:\n            \n    \"plugInList\": [\n    {\n        \"plugInName\": \"Automover\",\n        \"plugInModel\": {\n            \"useAutomover\": true\n        }\n    }\n    ]\n            ",
        "operationId": "PlugIn_PlugInExample",
        "responses": {
          "110": {
            "description": "Automover-PlugInModel, welches im LetterStatus übergeben werden kann",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Automover"
                }
              }
            }
          },
          "111": {
            "description": "Automover-PlugInFeedbackModel, welches im LetterStatus zurückgemeldet werden kann",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomoverFeedback"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/PlugIn/UploadManagement": {
      "get": {
        "tags": [
          "PlugIn"
        ],
        "summary": "Dokumentation des UploadManagement Plugin",
        "description": "Die inhaltliche Dokumentation des Plugin mit seinen Parametern und Response Elementen ist im jeweiligen aufgeführten Schema zu finden.\n\nInhalt des Response-Bereich (Code):\n\nCode 110: die Übergabesignatur des UploadManagement PlugIn als Teil der PlugIn Liste im Letter Schemas\n\nCode 111: Response des UploadManagement PlugIn als Teil der PlugInFeedback Liste im LetterStatus Schemas\n\nBitte beachten Sie auch den FAQ-Bereich für zusätzliche Informationen zu diesem PlugIn.\n\nBeispiel-Aufruf innerhalb der PlugInList des Letter Models \n(Mindestmengen-Versand und spätester Versand bei nicht erreichen am Freitag):\n            \n    \"plugInList\": [\n    {\n        \"plugInName\": \"UploadManagement\",\n        \"plugInModel\": {\n            \"UseMinimumQuantity\": true,\n            \"DueDayOfWeek\": \"Fr\"\n        }\n    }\n    ]\n            ",
        "operationId": "PlugIn_PlugInExample2",
        "responses": {
          "110": {
            "description": "UploadManagement-PlugInModel, welches im LetterStatus übergeben werden kann",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadManagement"
                }
              }
            }
          },
          "111": {
            "description": "UploadManagement-PlugInFeedbackModel, welches im LetterStatus zurückgemeldet werden kann",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadManagementFeedback"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/PlugIn/PremiumAdress": {
      "get": {
        "tags": [
          "PlugIn"
        ],
        "summary": "Dokumentation des PremiumAdress Plugin",
        "description": "Die inhaltliche Dokumentation des Plugin mit seinen Parametern und Response Elementen ist im jeweiligen aufgeführten Schema zu finden.\n\nInhalt des Response-Bereich (Code):\n\nCode 110: die Übergabesignatur des PremiumAdress PlugIn als Teil der PlugIn Liste im Letter Schemas\n\nCode 111: Response des PremiumAdress PlugIn als Teil der PlugInFeedback Liste im LetterStatus Schemas\n\n\nBeispiel-Aufruf innerhalb der PlugInList des Letter Models \n            \n            \n    \"plugInList\": [\n    {\n      \"plugInName\": \"PremiumAdress\",\n      \"plugInModel\": \n\t  {\n  \t\t\"productVariants\": \"basis\"\n      }\n    }\n    ]\n            ",
        "operationId": "PlugIn_PlugInExample5",
        "responses": {
          "110": {
            "description": "PremiumAdress-PlugInModel, welches im LetterStatus übergeben werden kann",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PremiumAdress"
                }
              }
            }
          },
          "111": {
            "description": "PremiumAdress-PlugInFeedbackModel, welches im LetterStatus zurückgemeldet werden kann",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PremiumAdressFeedback"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Vendor/LetterDetailsByDay": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Abfrage versendeter Briefe über einen Zeitraum",
        "description": "Anzahl versendeter Briefe (LetterStatus 4 'Verarbeitung im Druckzentrum'), gruppiert nach Sendungsdetails pro Tag. Es können maximal 400 Tage rückwirkend abgerufen werden.\nHierzu wird das Druckdatum der Sendungen verwendet (Letterstatus: PrintFeedbackDate), welches auch für die Ermittlung der Abrechnungsmengen pro Monat verwendet wird.\n\nAuthentifizierung und Validierung der Abfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Vendor_LetterDetailsByDay",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "Datum-Von (Nur Datum '2019-01-01' oder Datum mit Uhrzeit '2019-01-01T00:00:00'). Wird nur der Datumsanteil verwendet, ist der Zeitanteil immer 00:00:00.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          },
          {
            "name": "tillDate",
            "in": "query",
            "description": "Datum-Bis (Nur Datum '2019-01-15' oder Datum mit Uhrzeit '2019-01-15T23:59:59'). Wird nur der Datumsanteil verwendet, ist der Zeitanteil immer 00:00:00.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Erfolgreiche Anfrage des LetterReport-Arrays. ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LetterDetailsPrintedByDay"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorisierung ist fehlgeschlagen. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Zu häufige Abfragen innerhalb einer bestimmten Zeit. Die Mindestdauer zwischen den Abfragen darf 30 Sekunden nicht unterschreiten.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Vendor/CampaignDetails": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Abfrage des Kampagnenstatus über einen Zeitraum",
        "description": "Liste von CampaignStatus-Objekten über einen bestimmten Zeitraum. Es können maximal 400 Tage rückwirkend abgerufen werden.\nHierzu wird das Erstelldatum einer Kampagne verwendet (CampaignStatus: 1 - initalized).\nPersonenbezogene Kampagnen-Metadaten sind in dieser Liste ausgeblendet.\n\nAuthentifizierung und Validierung der Abfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Vendor_CampaignDetails",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "Datum-Von (Nur Datum '2019-01-01' oder Datum mit Uhrzeit '2019-01-01T00:00:00'). Wird nur der Datumsanteil verwendet, ist der Zeitanteil immer 00:00:00.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          },
          {
            "name": "tillDate",
            "in": "query",
            "description": "Datum-Bis (Nur Datum '2019-01-15' oder Datum mit Uhrzeit '2019-01-15T23:59:59'). Wird nur der Datumsanteil verwendet, ist der Zeitanteil immer 00:00:00.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Erfolgreiche Anfrage des Kampagnen-Arrays. ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CampaignStatus"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorisierung ist fehlgeschlagen. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Zu häufige Abfragen innerhalb einer bestimmten Zeit. Die Mindestdauer zwischen den Abfragen darf 30 Sekunden nicht unterschreiten.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Vendor/LetterDetailsByDayAsCsv": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Abfrage versendeter Briefe über einen Zeitraum als CSV",
        "description": "Anzahl versendeter Briefe (LetterStatus 4 'Verarbeitung im Druckzentrum'), gruppiert nach Sendungsdetails pro Tag. Die Rückgabe erfolgt der CSV-Datei.\nEs können maximal 400 Tage rückwirkend abgerufen werden.\nHierzu wird das Druckdatum der Sendungen verwendet (Letterstatus: PrintFeedbackDate), welches auch für die Ermittlung der Abrechnungsmengen pro Monat verwendet wird.\n\nAuthentifizierung und validierung der Sendungsabfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)\n\n\nAusgabe-Format der CSV-Datei:\n\n    Kopfzeile:  PrintFeedbackDate;VendorID;EKP;IsColor;IsDuplex;RegisteredLetter;Country;LetterCount\n    Datenzeile: 09.01.2021 00:00:00;VendorID12345;1234567890;False;False;;DEUTSCHLAND;25\n            \n    Die Datenwerte sind über das Schema LetterDetailsPrintedByDay definiert.\n            ",
        "operationId": "Vendor_LetterDetailsByDayAsCsv",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "Datum-Von (Nur Datum '2019-01-01' oder Datum mit Uhrzeit '2019-01-01T00:00:00'). Wird nur der Datumsanteil verwendet, ist der Zeitanteil immer 00:00:00.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          },
          {
            "name": "tillDate",
            "in": "query",
            "description": "Datum-Bis (Nur Datum '2019-01-15' oder Datum mit Uhrzeit '2019-01-15T23:59:59'). Wird nur der Datumsanteil verwendet, ist der Zeitanteil immer 00:00:00.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Erfolgreiche Anfrage und Bereitstellung der CSV-Datei per Download. ",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Authorisierung ist fehlgeschlagen. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Zu häufige Abfragen innerhalb einer bestimmten Zeit. Die Mindestdauer zwischen den Abfragen darf 30 Sekunden nicht unterschreiten.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Vendor/LettersWithError": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Abfrage fehlerhafter Briefe über einen Zeitraum",
        "description": "Abruf eines LetterStatus-Arrays mit allen Kunden-Sendungen (ohne personenbezogene Daten), die in der Verarbeitung auf Fehler gelaufen sind (LetterStatus=99). \nEs werden nur Sendungen ohne Testflag berücksichtigt. Hierzu wird das Einlieferungsdatum der Sendungen (Letterstatus: CreateDate) verwendet. \n\nAuthentifizierung und Validierung der Abfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Vendor_LettersWithError",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "Datum-Von (Nur Datum '2019-01-01' oder Datum mit Uhrzeit '2019-01-01T00:00:00'). Wird nur der Datumsanteil verwendet, ist der Zeitanteil immer 00:00:00.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          },
          {
            "name": "tillDate",
            "in": "query",
            "description": "Datum-Bis (Nur Datum '2019-01-15' oder Datum mit Uhrzeit '2019-01-15T23:59:59'). Wird nur der Datumsanteil verwendet, ist der Zeitanteil immer 00:00:00.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          },
          {
            "name": "hideEKP",
            "in": "query",
            "description": "Gibt an, ob die Kunden-EKP pro Sendung im Feld 'Custom5' angezeigt werden soll oder nicht",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Erfolgreicher Abruf des LetterStatus-Arrays.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LetterStatus"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorisierung ist fehlgeschlagen. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Zu häufige Abfragen innerhalb einer bestimmten Zeit. Die Mindestdauer zwischen den Abfragen darf 30 Sekunden nicht unterschreiten.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Vendor/SetContactInformations": {
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Ändern der Kontaktdaten des Vendors",
        "description": "Ändern der Kontaktdaten für den technischen und fachlichen Ansprechpartner. \nDiese Kontaktdaten sind komplett unabhängig von Login Daten aus dem Client-Pfad (bspw. /api/Client/SetEMail , /api/Client/SetMobile). \nDiese Vendor-spezifischen Informationen sind der eigenen Kundennummer (EKP) und VendorID zugeordnet. \nDer technische Kontakt (technical) ist relevant für z.B. Update-Ankündigungen oder ungeplante Wartungsarbeiten, \nder fachliche Kontakt (business) für vertragliche Infos/Rückfragen. \nBeide können jederzeit gesetzt werden und für eine erfolgreiche Änderung der Daten müssen alle Felder ausgefüllt sein. \n\nAuthentifizierung und Validierung der Abfrage erfolgt über Bearer-Token im Http-Header   \n(Authorization: Bearer #token#)",
        "operationId": "Vendor_PostContactInformations",
        "parameters": [
          {
            "name": "technicalContact",
            "in": "query",
            "description": "Name des technischen Ansprechpartners",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "technicalPhone",
            "in": "query",
            "description": "Telefonnummer des technischen Ansprechpartners. Bei mehreren Telefonnummern sind die Einträge nach Priorität und per Komma-Separierung anzuordnen",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "technicalEmail",
            "in": "query",
            "description": "Technische Email-Adresse, idealerweise als Gruppenverteiler-Email",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "businessContact",
            "in": "query",
            "description": "Name des geschäftlichen Ansprechpartners",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "businessPhone",
            "in": "query",
            "description": "Telefonnummer des geschäftlichen Ansprechpartners. Bei mehreren Telefonnummern sind die Einträge nach Priorität und per Komma-Separierung anzuordnen",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "businessEmail",
            "in": "query",
            "description": "Geschäftliche Email-Adresse, idealerweise als Gruppenverteiler-Email",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Erfolgreiche Änderung der übergebenen Partner-Kontaktdaten. Es wurden Bestätigungs-Email & SMS an die angegebenen Kontaktdaten versendet.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Authorisierung ist fehlgeschlagen. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Allgemeiner Fehler. Gibt ein Error-Objekt zurück",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "CampaignStatus": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "campaignID",
          "campaignName",
          "noOfPages",
          "quantity",
          "addressCompany1",
          "addressZipCode",
          "addressCity",
          "userFirstName",
          "userLastName",
          "userPhone",
          "userEMail",
          "senderLine"
        ],
        "properties": {
          "campaignID": {
            "type": "integer",
            "description": "Eindeutige KampagnenID",
            "format": "int64"
          },
          "campaignName": {
            "type": "string",
            "description": "Kundenindividueller Name der Kampagne, dient zur Wiedererkennung. Muss nicht eindeutig sein.",
            "maxLength": 100,
            "minLength": 0
          },
          "statusID": {
            "type": "integer",
            "description": "Status der Kampagne. \n            Die möglichen Statuswerte wiefolgt beschrieben:\n            \n            0: costRequest   - Vorab-Anfrage der Kosten über entsprechende Kampagnen-Metadaten      \n            1: initalized    - Kampagnen-Daten wurden erfolgreich an die E-POSTBUSINESS API übermittelt, aber noch nicht in Auftrag gegeben.\n            2: validated     - Kampagnen-Testsendungen wurden erstellt und abgerufen. Die Kampagne kann nun in Auftrag gegeben werden.\n            3: created       - Kampagnen-Daten wurden erfolgreich beauftragt und an die Produktion übermittelt.\n            4: in_production - Kampagne befindet sich in der Produktion\n            5: consigned     - Kampagne ist im Versandprozess\n            6: in_delivery   - Die Kampagnen-Sendungen befinden sich in der Zustellung\n            7: completed     - Die Kampagnen wurde erfolgreich abgeschlossen und in Rechnung gestellt. \n            \n            98: canceled     - Kampagne wurde vor einer Finalisierung (Status kleiner 3) abgebrochen\n            99: error        - Siehe CampaignError-Model\n            ",
            "format": "int32"
          },
          "statusDetails": {
            "type": "string",
            "description": "Beschreibung der zugehörigen statusID",
            "maxLength": 40,
            "minLength": 0,
            "nullable": true
          },
          "printPrice": {
            "type": "number",
            "description": "Ermittelte netto Produktionskosten in EUR auf Basis der Anzahl der bereitgestellten Adressen",
            "format": "decimal",
            "nullable": true
          },
          "postagePrice": {
            "type": "number",
            "description": "Ermittelte netto Versandkosten in EUR auf Basis der Anzahl der bereitgestellten Adressen",
            "format": "decimal",
            "nullable": true
          },
          "totalPrice": {
            "type": "number",
            "description": "Ermittelte Netto-Gesamtkosten (Summe aus Produktionskosten + Versandkosten) in EUR",
            "format": "decimal",
            "nullable": true
          },
          "tax": {
            "type": "number",
            "description": "Ermittelte Umsatzsteuer in EUR aus den jeweiligen Nettokosten gemäß der jeweils geltenden Umsatzsteuersätzen",
            "format": "decimal",
            "nullable": true
          },
          "grossTotalPrice": {
            "type": "number",
            "description": "Ermittelte Brutto-Gesamtkosten (Summe aus Produktionskosten + Versandkosten + Ermittelte gesamte Umsatzsteuer) in EUR",
            "format": "decimal",
            "nullable": true
          },
          "totalSend": {
            "type": "integer",
            "description": "Die versendete Gesamtmenge ab dem Zeitpunkt des Erreichen von statusID=7 (completed)",
            "format": "int32",
            "nullable": true
          },
          "noOfPages": {
            "type": "integer",
            "description": "Anzahl Seiten des Werbemittels (maximal 3 Seiten erlaubt)",
            "format": "int32"
          },
          "isColor": {
            "type": "boolean",
            "description": "Option Farbe oder S/W",
            "default": false
          },
          "isDuplex": {
            "type": "boolean",
            "description": "Option für doppelseitigen Druck",
            "default": false
          },
          "quantity": {
            "type": "integer",
            "description": "Druckmenge",
            "format": "int32"
          },
          "addressCompany1": {
            "type": "string",
            "description": "Rechnungsadresse - Zeile 1 (Name,Firma)",
            "maxLength": 35,
            "minLength": 1
          },
          "addressCompany2": {
            "type": "string",
            "description": "Rechnungsadresse - Zeile 2",
            "maxLength": 35,
            "minLength": 0,
            "nullable": true
          },
          "addressCompany3": {
            "type": "string",
            "description": "Rechnungsadresse - Zeile 3",
            "maxLength": 35,
            "minLength": 0,
            "nullable": true
          },
          "addressCompany4": {
            "type": "string",
            "description": "Rechnungsadresse - Zeile 4",
            "maxLength": 35,
            "minLength": 0,
            "nullable": true
          },
          "addressStreet": {
            "type": "string",
            "description": "Rechnungsadresse Strasse ",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "addressZipCode": {
            "type": "string",
            "description": "Rechnungsadresse PLZ",
            "maxLength": 5,
            "minLength": 0
          },
          "addressCity": {
            "type": "string",
            "description": "Rechnungsadresse Stadt",
            "maxLength": 50,
            "minLength": 0
          },
          "userTitle": {
            "type": "string",
            "description": "Ansprechpartner Titel (Im Falle einer erforderlichen Kontaktaufnahme durch das Service-Center)",
            "maxLength": 10,
            "minLength": 0,
            "nullable": true
          },
          "userSalutation": {
            "type": "string",
            "description": "Ansprechpartner Anrede",
            "maxLength": 13,
            "minLength": 0,
            "nullable": true
          },
          "userFirstName": {
            "type": "string",
            "description": "Ansprechpartner Vorname",
            "maxLength": 50,
            "minLength": 0
          },
          "userLastName": {
            "type": "string",
            "description": "Ansprechpartner Nachname",
            "maxLength": 50,
            "minLength": 0
          },
          "userPhone": {
            "type": "string",
            "description": "Ansprechpartner Telefon",
            "maxLength": 50,
            "minLength": 0
          },
          "userEMail": {
            "type": "string",
            "description": "Ansprechpartner EMail",
            "maxLength": 150,
            "minLength": 0
          },
          "senderLine": {
            "type": "string",
            "description": "Einzeilige Absenderadresse",
            "maxLength": 55,
            "minLength": 0
          },
          "useSenderLine": {
            "type": "boolean",
            "description": "Falls die Absenderadresse von dem Druckzentrum auf die erste Seite des Werbemittels aufgebracht werden soll, muss 'true' übergeben werden. Andersfalls muss 'false' übergeben werden.",
            "default": false
          },
          "palDate": {
            "type": "string",
            "description": "Das gewünschtes Postauflieferdatum (wann wird die Sendung an die Deutsche Post AG zur Produktion übergeben - hiermit ist NICHT das Zustelldatum gemeint). \n            Das PALDate muss mindestens 7 Werktage von Mo.-Fr.(zzgl. bundeseinheitlicher Feiertage) in der Zukunft liegen. \n            I.d.R. findet die Produktion und Auflieferung in die Briefzentren innerhalb dieses Zeitraumes zu den Dialogpost üblichen Versandzeiträumen statt.",
            "format": "date-time"
          },
          "vendorSystemInformation": {
            "type": "string",
            "description": "Benutzerdefiniertes Feld zur Mitgabe von systemspezifischen Kennungen und Informationen betreffend der vom Versender verwendeten Partner Software",
            "maxLength": 150,
            "minLength": 0,
            "nullable": true
          },
          "errorList": {
            "type": "array",
            "description": "Liste von CampaignError Objekten - Liefert Details zur Fehlern, Warnungen und Informationen",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CampaignError"
            }
          }
        }
      },
      "CampaignError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "description": "Error-Objekt - Liefert Fehlercodes und Details bei entsprechenden Rückmeldungen über die API.\n\nAufstellung der Fehler-Codes pro Typ:\n\nTODO: Errorcodes der DM-API hier mit abbilden\nError: Fehler aufgetreten, Handlungsbedarf, Verarbeitungsabbruch \n  \n  E001 - Ungültige Zugangsdaten - Bitte überprüfen Sie Ihre Anmeldedaten\n  \n  E004 - Diese EKP wurde von der Deutsche Post AG gesperrt\n\n  E101 - Ungültiges Token - Abgelaufen\n  \n  E201 - Ungültige Statusabfrage - Es wurde keine Kampagne über dieses Suchkriterium gefunden\n  \n  E301 - Kein PDF-Format erkannt\n  \n  E302 - Erkannte Verletzung des DVF Sperrbereich\n  \n  E303 - Maximale Dateigröße von 20 MB überschritten\n  \n  E304 - Maximale Seitenanzahl von 3 Seiten überschritten\n  \n  E305 - Anzahl der Adressen entspricht nicht dem Quantity-Kontrollwert\n  \n  E306 - Kampagnen-Finalisierung kann nicht abgerufen werden, da Status 2 noch nicht erreicht oder bereits überschritten ist\n  \n  E307 - Kampagnen befindet sich bereits in der Produktion und kann nicht mehr abgebrochen werden.\n  \n  E308 - Kein DinA4 Format - Dateiname: {Platzhalter für Fehlerdetails}\n  \n  E309 - Anzahl der zulässigen Testabrufe wurde überschritten, max 5 Testabrufe erlaubt\n  \n  E310 - Kampagnen-Finalisierung kann aufgrund des aktiven Testmodus nicht durchgeführt werden.\n  \n  E311 - Kampagnen-FinalisierungsInfo ist abweichend zu den hinterlegten Kampagnendaten und daher ungültig.\n  \n  E312 - Kampagnen-Finalisierung kann aufgrund des angegebenen PALDate nicht durchgeführt werden. Bitte erhöhen Sie dieses Datum in der Finalisierungsinformation. Das PALDate muss mindestens 7 Werktage von Mo.-Fr.(zzgl. bundeseinheitlicher Feiertage) in der Zukunft liegen.\n  \n  E313 - Schema Verletzung: {Platzhalter für Fehlerdetails}\n  \n  E314 - Fehler in Vorabprüfung: {Platzhalter für Fehlerdetails}\n  \n  E315 - Fehler in Vorverarbeitung: {Platzhalter für Fehlerdetails}\n  \n  E316 - Fehler in Produktion: {Platzhalter für Fehlerdetails}\n  \n  E317 - Kampagnen-FinalisierungsInfo: Es wurde eine Abweichung der Finalisierungsinfo zu den aktuell geltenden Preisen festgestellt.\n  \n  E320 - Kampagnen-Eröffnung kann aufgrund des angegebenen PALDate nicht durchgeführt werden. Das PALDate muss mindestens 7 Werktage von Mo.-Fr.(zzgl. bundeseinheitlicher Feiertage) in der Zukunft liegen.\n\n  E321 - Der Kampagnen-Status lässt eine generierung von Testdaten nicht mehr zu.\n\n  E322 - Zu hohe Abfragefrequenz von Status Anfragen. Die Mindestdauer zwischen 2 Statusabfragen liegt bei 5 Sekunden. \n\n  E399 - Allgemeiner Fehler: {Platzhalter für Fehlerdetails} \n  \n  E900 - Unspezifizierter Fehler: {Platzhalter für Fehlerdetails} \n            \n\nWarnungen: Fehler aufgetreten, möglicher Handlungsbedarf, kein Verarbeitungsabbruch\n  \n  W701 - Warnung: {Platzhalter für Details}\n\n\nInfos: Reine Information, kein Handlungsbedarf\n  \n  I701 - Info: {Platzhalter für Details}\n  I702 - Statusänderung der Kampagne: {Platzhalter für Details}\n  ",
            "additionalProperties": false
          }
        ]
      },
      "Error": {
        "type": "object",
        "description": "Error-Objekt - Liefert Fehlercodes und Details bei entsprechenden Rückmeldungen über die API.\n\nAufstellung der Fehler-Codes pro Typ:\n\n\nError: Fehler aufgetreten, Handlungsbedarf, Verarbeitungsabbruch \n  \n  E001 - Ungültige Zugangsdaten - Bitte überprüfen Sie Ihre Anmeldedaten\n  \n  E002 - Ungültige Zugangsdaten - VendorSubID ungültig\n  \n  E003 - Zu viele SMS Anfragen - Es wurden innerhalb kurzer Zeit zu viele SMS-Codes angefordert. Die Anfrage über diese Kennung ist für 15 min blockiert.\n \n  E004 - Diese EKP wurde von der Deutsche Post AG gesperrt\n\n  E101 - Ungültiges Token - Abgelaufen\n  \n  E201 - Ungültige Statusabfrage - Es wurde keine Sendung über dieses Suchkriterium gefunden\n  \n  E203 - Adress-Metadaten: Abweichungen festgestellt {Platzhalter für Fehlerdetails}\n  \n  E301 - Kein PDF-Format erkannt\n  \n  E302 - Erkannte Verletzung des DVF Sperrbereich\n  \n  E303 - Maximale Dateigröße von 20 MB überschritten\n  \n  E304 - Maximale Seitenanzahl von 94 Seiten überschritten\n  \n  E305 - Ungültiger Ländercode: {Platzhalter für Fehlerdetails}\n  \n  E306 - Ungültiges Format der Empfängeradresse erkannt: {Platzhalter für Fehlerdetails}\n  \n  E307 - 1. Seite im Querformat eingeliefert - Dateiname: {Platzhalter für Fehlerdetails}\n  \n  E308 - Kein DinA4 Format - Dateiname: {Platzhalter für Fehlerdetails}\n  \n  E309 - Dublette bei eingelieferten Dateinamen erkannt - {Platzhalter für Fehlerdetails}\n  \n  E311 - Unzulässige Kombination: Einschreiben und Ausland\n  \n  E312 - Unzulässige Kombination: Dublex + Einschreiben\n  \n  E313 - Verletzung des Letter-Schemas: {Platzhalter für Fehlerdetails}\n  \n  E314 - Maximale Deckblatt-Dateigröße von 1 MB überschritten\n  \n  E315 - Fehler in Sendungsverarbeitung: {Platzhalter für Fehlerdetails}\n  \n  E316 - Fehler bei Sendungsupload: {Platzhalter für Fehlerdetails}\n  \n  E317 - Unzulässiges Einschreiben-Format in Feld RegisteredLetter: {Platzhalter für Fehlerdetails}  \n  \n  E318 - Ablehnung in Druckzentrum: {Platzhalter für Fehlerdetails}  \n  \n  E319 - EKP ist nicht für das Druckzentrum freigegeben. Ein Live-Versand ist aktuell noch nicht möglich.\n\n  E320 - Die maximal zulässige Menge an Testsendungen pro Tag wurde erreicht. Es sind heute keine weiteren Testsendungen möglich\n    \n  E321 - (Überholt) Es wurden nicht alle notwendigen Rückschein-Adressfelder für Einschreiben per Rückschein angegeben\n\n  E322 - Zu hohe Abfragefrequenz von Letter-Status Anfragen. Die Mindestdauer zwischen 2 Statusabfragen liegt bei 5 Sekunden. \n\n  E323 - Kein Inhalt im Empfängerbereich der PDF erkannt (Weiße Fläche) \n\n  E399 - Allgemeiner Fehler: {Platzhalter für Fehlerdetails} \n  \n  E501 - API-Status: Inaktiv {Platzhalter für Fehlerdetails}\n            \n  E601 - PlugIn Fehler: {Platzhalter für Fehlerdetails} \n  \n  E900 - Unspezifizierter Fehler: {Platzhalter für Fehlerdetails} \n\nWarnungen: Fehler aufgetreten, möglicher Handlungsbedarf, kein Verarbeitungsabbruch\n \n  W101 - PDF/A Konvertierungswarnungen: {Platzhalter für Details}\n  \n  W201 - Überschreitung Adressbereich: {Platzhalter für Details}\n  \n  W202 - Überschreitung Sperrfläche Links: Dieser Bereich wird im Druckzentrum geweißt \n  \n  W203 - Adress-Metadaten: Abweichungen festgestellt {Platzhalter für Fehlerdetails}\n  \n  W220 - Die angegeben Daten zum Rückschein von Einschreiben werden mit dem 01.10.2022 nur noch automatisch aus dem Sichtfenster des Briefes ermittelt. Dies gilt insbesondere für die Rücksendeadresse aus der im Sichtfenster ermittelbaren Absenderzeile. Mögliche explizite Angaben werden ab diesem Zeitpunkt nicht mehr verwendet.\n  \n  W301 - Senderadresse nicht vorhanden\n   \n  W501 - API-Status: Wartungsankündigung {Platzhalter für Details}\n\n  W601 - PlugIn Warnung: {Platzhalter für Details} \n\n\nInfos: Reine Information, kein Handlungsbedarf\n  \n  I101 - Zusatzoption: PDF -> PDFA Konvertierung\n  \n  I501 - API-Status: OK\n  \n  I601 - PlugIn Info: {Platzhalter für Details} \n  \n  I701 - Track And Trace Statusmeldung: {Platzhalter für Details}  \n  \n  I751 - Statusmeldung zum Zielgebiet: {Platzhalter für Details}\n  \n  ",
        "additionalProperties": false,
        "required": [
          "level",
          "code",
          "description"
        ],
        "properties": {
          "level": {
            "type": "string",
            "description": "Art der Meldung: 'Info','Warning','Error'",
            "minLength": 1
          },
          "code": {
            "type": "string",
            "description": "Eindeutige Kennung der Meldung (z.B. E101). ",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "description": "Beschreibung der Meldung (z.B. 'Ungültige Sendungsnummer')",
            "minLength": 1
          },
          "date": {
            "type": "string",
            "description": "Zeitpunkt der Meldung",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "Campaign": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "campaignName",
          "data",
          "noOfPages",
          "quantity",
          "addressCompany1",
          "addressZipCode",
          "addressCity",
          "userFirstName",
          "userLastName",
          "userPhone",
          "userEMail"
        ],
        "properties": {
          "campaignName": {
            "type": "string",
            "description": "Kundenindividueller Name der Kampagne, dient zur Wiedererkennung. Muss nicht eindeutig sein.",
            "maxLength": 100,
            "minLength": 0
          },
          "data": {
            "type": "string",
            "description": "Werbemittel-PDF als Base64-String.\n             \n            Die erwartetet PDF Version PDF/X-3:2002 ermöglicht eine möglichst getreue Wiedergabe im Druckbild.\n            Zusatzfeatures von Transparenzen und Ebenen in der Version PDF/X-4 kann oft in der Produktion nicht unterstützt werden \n            und so bspw. zu Abweichungen im Druckbild führen. \n            Abweichende PDF Formate, insbesondere in den Austauschversionen PDF/X-1a, PDF/X-3 und PDF/X-4, \n            die im Rahmen der Dialogpost verarbeitet werden könnten, können ebenfalls bspw. zu Abweichungen im Druckbild führen.\n            Bei PDF Dateien ohne Archivfunktion müssen teilweise die verwendeten Fonts ggf.durch ähnliche Fonts ersetzt werden, \n            was durch mögliche Abweichungen maßgeblichen Einfluss zum gewünschte Layout hat, neben Transparenzen und Auflösungen, \n            die im Rahmen der Aufbereitung Veränderungen produzieren.\n            Das erwartete Dokument ist im DIN/A4 Hoch-Format ohne bspw. Anschnitt- und Schnittmarken bereitzustellen. "
          },
          "noOfPages": {
            "type": "integer",
            "description": "Anzahl Seiten des Werbemittels (maximal 3 Seiten erlaubt)",
            "format": "int32"
          },
          "isDuplex": {
            "type": "boolean",
            "description": "Option für doppelseitigen Druck",
            "default": false
          },
          "quantity": {
            "type": "integer",
            "description": "Druckmenge - Die Menge dient hier zur Konsistenzprüfung. Die Anzahl der Adress-Elemente in der AddressList muss dem angegebenen Wert entsprechen.",
            "format": "int32"
          },
          "addressCompany1": {
            "type": "string",
            "description": "Rechnungsadresse - Zeile 1 (Name,Firma)",
            "maxLength": 35,
            "minLength": 1
          },
          "addressCompany2": {
            "type": "string",
            "description": "Rechnungsadresse - Zeile 2",
            "maxLength": 35,
            "minLength": 0,
            "nullable": true
          },
          "addressCompany3": {
            "type": "string",
            "description": "Rechnungsadresse - Zeile 3",
            "maxLength": 35,
            "minLength": 0,
            "nullable": true
          },
          "addressCompany4": {
            "type": "string",
            "description": "Rechnungsadresse - Zeile 4",
            "maxLength": 35,
            "minLength": 0,
            "nullable": true
          },
          "addressStreet": {
            "type": "string",
            "description": "Rechnungsadresse Strasse inkl. Hausnummer",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "addressZipCode": {
            "type": "string",
            "description": "Rechnungsadresse PLZ",
            "maxLength": 5,
            "minLength": 0
          },
          "addressCity": {
            "type": "string",
            "description": "Rechnungsadresse Stadt",
            "maxLength": 50,
            "minLength": 0
          },
          "userTitle": {
            "type": "string",
            "description": "Ansprechpartner Titel (Im Falle einer erforderlichen Kontaktaufnahme durch das Service-Center)",
            "maxLength": 10,
            "minLength": 0,
            "nullable": true
          },
          "userSalutation": {
            "type": "string",
            "description": "Ansprechpartner Anrede",
            "maxLength": 13,
            "minLength": 0,
            "nullable": true
          },
          "userFirstName": {
            "type": "string",
            "description": "Ansprechpartner Vorname",
            "maxLength": 50,
            "minLength": 0
          },
          "userLastName": {
            "type": "string",
            "description": "Ansprechpartner Nachname",
            "maxLength": 50,
            "minLength": 0
          },
          "userPhone": {
            "type": "string",
            "description": "Ansprechpartner Telefon",
            "maxLength": 50,
            "minLength": 0
          },
          "userEMail": {
            "type": "string",
            "description": "Ansprechpartner - EMail-Adresse. Falls mehrere EMail-Adressen informiert werden müssen, ist hierzu ein Gruppenpostfach/Email-Verteiler zu hinterlegen.",
            "maxLength": 150,
            "minLength": 0
          },
          "senderLine": {
            "type": "string",
            "description": "Einzeilige Absenderadresse\n            \n            Beispiel: Muster GmbH, Musterstraße 11, 12345 Musterort\n            ",
            "maxLength": 55,
            "minLength": 0,
            "nullable": true
          },
          "useSenderLine": {
            "type": "boolean",
            "description": "Falls die Absenderadresse von dem Druckzentrum auf die erste Seite des Werbemittels aufgebracht werden soll, muss 'true' übergeben werden. Andersfalls muss 'false' übergeben werden.",
            "default": false
          },
          "palDate": {
            "type": "string",
            "description": "Das gewünschtes Postauflieferdatum (wann wird die Sendung an die Deutsche Post AG zur Produktion übergeben - hiermit ist NICHT das Zustelldatum gemeint). \n            Das PALDate muss mindestens 7 Werktage von Mo.-Fr.(zzgl. bundeseinheitlicher Feiertage) in der Zukunft liegen. \n            I.d.R. findet die Produktion und Auflieferung in die Briefzentren innerhalb dieses Zeitraumes zu den Dialogpost üblichen Versandzeiträumen statt.",
            "format": "date-time"
          },
          "vendorSystemInformation": {
            "type": "string",
            "description": "Benutzerdefiniertes Feld zur Mitgabe von systemspezifischen Kennungen und Informationen betreffend der vom Versender verwendeten Partner Software",
            "maxLength": 150,
            "minLength": 0,
            "nullable": true
          },
          "campaignAddressList": {
            "type": "array",
            "description": "Adressliste mit Empfängerdaten. Die Addresszeilen 1-6 sollten keine Leerzeilen enthalten. \n            Sie bilden insgesamt die gesamte Anschrift ab. Neben den Adresszeilen für die reinen Empfängerangeben (bspw. Anrede, Name/Firma) \n            ist in der Adresszeile für Ortsangaben immer die PLZ gefolgt vom Ort (bspw. 12345 Musterort) anzugeben. \n            Für Adresszeile mit Straße und Hausnummer gilt ähnliche Logik (Musterstraße 42a). Die in den Ortsangaben verwendete PLZ ist auch im zipCode zu hinterlegen.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CampaignAddress"
            }
          }
        }
      },
      "CampaignAddress": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "zipCode",
          "addressLine1"
        ],
        "properties": {
          "countryCode": {
            "type": "string",
            "description": "Adresse-Land - Hier muss der Ländercode nach ISO 3166-1 in GROßBUCHSTABEN hinterlegt werden. (z.B. 'DE')",
            "maxLength": 80,
            "minLength": 0,
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "Adresse-PLZ (z.B. 53115). Für Inlandssendungen ist die korrekte Postleitzahl zur genauen Ermittlung der Versandkosten anzugeben. Dieses Feld wird nicht im Adressbereich des Werbemittels aufgebracht. Die PLZ muss daher zusätzlich und zusammen mit dem Ort in der entsprechenden Addressline enthalten sein.",
            "maxLength": 20,
            "minLength": 3
          },
          "addressLine1": {
            "type": "string",
            "description": "Empfängerzeile 1 (z.B. Name/Firma)",
            "maxLength": 80,
            "minLength": 1
          },
          "addressLine2": {
            "type": "string",
            "description": "Empfängerzeile 2 (z.B. Straße + Hausnummer)",
            "maxLength": 80,
            "minLength": 0,
            "nullable": true
          },
          "addressLine3": {
            "type": "string",
            "description": "Empfängerzeile 3 (z.B. PLZ + Ort)",
            "maxLength": 80,
            "minLength": 0,
            "nullable": true
          },
          "addressLine4": {
            "type": "string",
            "description": "Empfängerzeile 4",
            "maxLength": 80,
            "minLength": 0,
            "nullable": true
          },
          "addressLine5": {
            "type": "string",
            "description": "Empfängerzeile 5",
            "maxLength": 80,
            "minLength": 0,
            "nullable": true
          },
          "addressLine6": {
            "type": "string",
            "description": "Empfängerzeile 6",
            "maxLength": 80,
            "minLength": 0,
            "nullable": true
          }
        }
      },
      "LetterIdent": {
        "type": "object",
        "description": "Ident-Objekt, welches nach Sendungseinlieferung zurückgegeben wird. Wird immer in einem Array übergeben.",
        "additionalProperties": false,
        "required": [
          "fileName"
        ],
        "properties": {
          "fileName": {
            "type": "string",
            "description": "Eindeutiger Dateiname einer Sendung. ",
            "maxLength": 200,
            "minLength": 1
          },
          "letterID": {
            "type": "integer",
            "description": "Eindeutige Sendungs-ID. Wird für spätere Statusabfragen verwendet.",
            "format": "int64"
          }
        }
      },
      "CampaignDataResult": {
        "type": "object",
        "description": "DataResult-Object, welches eine verarbeitete Datei als Base64-String zurück gibt",
        "additionalProperties": false,
        "properties": {
          "campaignID": {
            "type": "integer",
            "description": "Kampagnen-ID",
            "format": "int64"
          },
          "position": {
            "type": "integer",
            "description": "Position der verwendeten Adresse auf der übergebenen CampaignAdress-Liste",
            "format": "int32"
          },
          "letterID": {
            "type": "integer",
            "description": "Zugrunde liegende LetterID der Testverarbeitung",
            "format": "int64"
          },
          "statusID": {
            "type": "integer",
            "description": "Ident zum aktuellen Verarbeitungsstatus der Sendung:\n            \n            1 - Annahme der Testdaten\n                Die Testdaten wurden erfolreich übermittelt und es wurden keine Schema und Inhalts-Verletzungen im JSON festgestellt.\n                Status-Platzierung: Bei erfolgreichem Upload der Testdaten. Das Feld 'Data' liefert noch kein Ergebnis zurück.\n            \n            2 - Verarbeitung der Testdaten  \n                Die Vorschau der Testdaten wurde erfolgreich erstellt. Das Feld 'Data' liefert somit ein Ergebnis zurück.\n                Status-Platzierung: Einige Minuten nach Annahme der Testdaten\n                \n            99 - Verarbeitungsfehler: Siehe CampaignError-List\n            ",
            "format": "int32"
          },
          "statusDetails": {
            "type": "string",
            "description": "Details zum aktuellen Verarbeitungsstatus der Testdaten",
            "nullable": true
          },
          "data": {
            "type": "string",
            "description": "Ergebnis-Pdf als Base64-String, welches nur bei StatusID=2 zurückgeliefert wird.",
            "nullable": true
          },
          "errorList": {
            "type": "array",
            "description": "Liste von CampaignError Objekten - Liefert Details zur Fehlern, Warnungen und Informationen",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CampaignError"
            }
          }
        }
      },
      "CampaignFinalizeInfo": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "ekp",
          "addressCompany1",
          "addressZipCode",
          "addressCity",
          "userEMail"
        ],
        "properties": {
          "campaignID": {
            "type": "integer",
            "description": "Kampagnen-ID",
            "format": "int64"
          },
          "campaignName": {
            "type": "string",
            "description": "Kundenindividueller Name der Kampagne, dient zur Wiedererkennung",
            "nullable": true
          },
          "ekp": {
            "type": "string",
            "description": "DPAG-Kennung des Software-Kunden",
            "maxLength": 10,
            "minLength": 10
          },
          "noOfPages": {
            "type": "integer",
            "description": "Anzahl Seiten des Werbemittels (maximal 3 Seiten erlaubt)",
            "format": "int32"
          },
          "isColor": {
            "type": "boolean",
            "description": "Option Farbe oder S/W"
          },
          "isDuplex": {
            "type": "boolean",
            "description": "Option für doppelseitigen Druck"
          },
          "quantity": {
            "type": "integer",
            "description": "Druckmenge",
            "format": "int32"
          },
          "printPrice": {
            "type": "number",
            "description": "Ermittelte netto Produktionskosten in EUR auf Basis der Anzahl der bereitgestellten Adressen",
            "format": "decimal",
            "nullable": true
          },
          "postagePrice": {
            "type": "number",
            "description": "Ermittelte netto Versandkosten in EUR auf Basis der Anzahl der bereitgestellten Adressen",
            "format": "decimal",
            "nullable": true
          },
          "totalPrice": {
            "type": "number",
            "description": "Ermittelte Netto-Gesamtkosten (Summe aus Produktionskosten + Versandkosten) in EUR",
            "format": "decimal",
            "nullable": true
          },
          "tax": {
            "type": "number",
            "description": "Ermittelte Umsatzsteuer in EUR aus den jeweiligen Nettokosten gemäß der jeweils geltenden Umsatzsteuersätzen",
            "format": "decimal",
            "nullable": true
          },
          "grossTotalPrice": {
            "type": "number",
            "description": "Ermittelte Brutto-Gesamtkosten (Summe aus Produktionskosten + Versandkosten + Ermittelte gesamter Umsatzsteuer) in EUR",
            "format": "decimal",
            "nullable": true
          },
          "termsOfContract": {
            "type": "string",
            "description": "Vertragsbedingungen: Anzuzeigende Vertragsbedingungen als OptIn",
            "nullable": true
          },
          "termsOfContractUrl": {
            "type": "string",
            "description": "Vertragsbedingungen-URL",
            "nullable": true
          },
          "addressCompany1": {
            "type": "string",
            "description": "Rechnungsadresse - Zeile 1 (Name,Firma)",
            "maxLength": 35,
            "minLength": 1
          },
          "addressCompany2": {
            "type": "string",
            "description": "Rechnungsadresse - Zeile 2",
            "maxLength": 35,
            "minLength": 0,
            "nullable": true
          },
          "addressCompany3": {
            "type": "string",
            "description": "Rechnungsadresse - Zeile 3",
            "maxLength": 35,
            "minLength": 0,
            "nullable": true
          },
          "addressCompany4": {
            "type": "string",
            "description": "Rechnungsadresse - Zeile 4",
            "maxLength": 35,
            "minLength": 0,
            "nullable": true
          },
          "addressStreet": {
            "type": "string",
            "description": "Rechnungsadresse Strasse ",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "addressZipCode": {
            "type": "string",
            "description": "Rechnungsadresse PLZ",
            "maxLength": 5,
            "minLength": 0
          },
          "addressCity": {
            "type": "string",
            "description": "Rechnungsadresse Stadt",
            "maxLength": 50,
            "minLength": 0
          },
          "senderLine": {
            "type": "string",
            "description": "Einzeilige Absenderadresse",
            "maxLength": 55,
            "minLength": 0,
            "nullable": true
          },
          "useSenderLine": {
            "type": "boolean",
            "description": "Falls die Absenderadresse von der DPDS auf die erste Seite des Werbemittels aufgebracht werden soll, muss 'true' übergeben werden. Andersfalls muss 'false' übergeben werden.",
            "default": false
          },
          "userEMail": {
            "type": "string",
            "description": "Ansprechpartner EMail",
            "maxLength": 150,
            "minLength": 0
          },
          "palDate": {
            "type": "string",
            "description": "Das gewünschtes Postauflieferdatum (wann wird die Sendung an die Deutsche Post AG zur Produktion übergeben - hiermit ist NICHT das Zustelldatum gemeint). \n            Das PALDate muss mindestens 7 Werktage von Mo.-Fr.(zzgl. bundeseinheitlicher Feiertage) in der Zukunft liegen. \n            I.d.R. findet die Produktion und Auflieferung in die Briefzentren innerhalb dieses Zeitraumes zu den Dialogpost üblichen Versandzeiträumen statt.",
            "format": "date-time"
          },
          "finalizeInfoDate": {
            "type": "string",
            "description": "Erstelldatum der Finalisierungsinfo",
            "format": "date-time"
          }
        }
      },
      "LetterStatus": {
        "type": "object",
        "description": "Letter-Status - Liefert den aktuellen Status einer Sendung",
        "additionalProperties": false,
        "required": [
          "letterID",
          "fileName",
          "statusID"
        ],
        "properties": {
          "letterID": {
            "type": "integer",
            "description": "Eindeutige Sendungs-ID(z.B. '43556780')",
            "format": "int64",
            "example": 43556780
          },
          "fileName": {
            "type": "string",
            "description": "Eindeutiger Dateiname der eingelieferten Sendung, welcher von der Quell-Software mitgeliefert wurde. ",
            "maxLength": 200,
            "minLength": 1
          },
          "statusID": {
            "type": "integer",
            "description": "Ident zum aktuellen Verarbeitungsstatus der Sendung:\n            \n            1 - Annahme der Sendung\n                Die Sendung wurde erfolreich übermittelt und es wurden keine Schema und Inhalts-Verletzungen im JSON festgestellt.\n                Status-Platzierung: Bei erfolgreichem Upload der Sendung\n            \n            2 - Verarbeitung der Sendung  \n                 Die PDF wurde auf EPost-Konformität geprüft und ist für den Versand an das Druckzentrum freigegeben. \n                 Hinweis: Trotz bestmöglicher Prüfungen können technische Fehler in dem jeweiligen PDF Dokument zu \n                 einem Abbruch im Druckzentrum führen. Hierdurch wird nach dem Status 3 zeitnah der Status 99 \n                 zusammen mit den Fehlerinformationen signalisiert.\n                 Status-Platzierung: Einige Minuten nach Annahme der Sendung\n            \n            3 - Einlieferung in Druckzentrum\n                Die Sendung wurde an das Druckzentrum zur Produktion übertragen.\n                Hinweis: Sollten technische Fehler in dem jeweiligen PDF Dokument zu einem Abbruch im Druckzentrum führen, \n                wird dies zeitnah über den Status 99 zusammen mit den Fehlerinformationen signalisiert und der Status 4 wird nicht erreicht.\n                Status-Platzierung: Innerhalb der nächsten Stunden nach Verarbeitung der Sendung\n            \n            4 - Verarbeitung in Druckzentrum \n                Die Sendung wurde als \"versendet\" vom Druckzentrum an die API zurückgemeldet.\n                Status-Platzierung: 1-2 Werktage nach Einlieferung in das Druckzentrum\n            \n            \n            99 - Verarbeitungsfehler: Siehe errorList\n            ",
            "format": "int32"
          },
          "statusDetails": {
            "type": "string",
            "description": "Details zum aktuellen Verarbeitungsstatus der Sendung (z.B. Einlieferung in Druckzentrum)",
            "nullable": true,
            "example": "Einlieferung in Druckzentrum"
          },
          "createdDate": {
            "type": "string",
            "description": "Zeitpunkt der Sendungsannahme",
            "format": "date-time"
          },
          "processedDate": {
            "type": "string",
            "description": "Verarbeitungs-Zeitpunkt in docuguide",
            "format": "date-time",
            "nullable": true
          },
          "printUploadDate": {
            "type": "string",
            "description": "Einlieferungs-Zeitpunkt in das Druckzentrum",
            "format": "date-time",
            "nullable": true
          },
          "printFeedbackDate": {
            "type": "string",
            "description": "Verarbeitungs-Rückmeldung des Druckzentrums",
            "format": "date-time",
            "nullable": true
          },
          "testFlag": {
            "type": "boolean",
            "description": "Test-Kennzeichen - bei true wird die Sendung nur zur Prüfung verarbeitet. Es erfolgt kein Briefversand",
            "example": true
          },
          "testEMail": {
            "type": "string",
            "description": "Test-Emailadresse - An diese Email-Adresse wird bei aktiviertem Test-Flag die Test-Sendung als Anhang verschickt ",
            "nullable": true
          },
          "testShowRestrictedArea": {
            "type": "boolean",
            "description": "Test-Sperrflächenmodus - Über dieses Flag wird das per email zurückgesendete pdf-Dokument mit einer Schablone überlagert, damit Sperrflächenverletzungen schneller erkannt werden."
          },
          "registeredLetter": {
            "type": "string",
            "description": "Nationales Einschreiben-Kennzeichen - Mögliche Optionen: 'Einwurf Einschreiben', 'Einschreiben', 'Einschreiben eigenhändig', 'Einschreiben Rückschein', 'Einschreiben eigenhändig Rückschein'",
            "nullable": true
          },
          "registeredLetterID": {
            "type": "string",
            "description": "Einschreibennummer, wenn die Sendung als Einschreiben deklariert wurde. Diese Nummer wird nach der Übertragung in das Druckzentrum (Status 3) plaziert.",
            "nullable": true
          },
          "batchID": {
            "type": "integer",
            "description": "Kennung einer Stapelverarbeitung (z.b. 15342)",
            "format": "int32",
            "example": 12345
          },
          "coverLetter": {
            "type": "boolean",
            "description": "true -> Deckblatt vorhanden"
          },
          "noOfPages": {
            "type": "integer",
            "description": "Seitenanzahl der Sendung",
            "format": "int32"
          },
          "subVendorID": {
            "type": "string",
            "description": "Partnerverwaltete Kunden-Kennung, sofern vorhanden",
            "nullable": true
          },
          "custom1": {
            "type": "string",
            "description": "Benutzerdefiniertes Feld zur Mitgabe von Sendungsinformationen (z.B. RE345232)",
            "nullable": true,
            "example": "RE0136645"
          },
          "custom2": {
            "type": "string",
            "description": "Benutzerdefiniertes Feld zur Mitgabe von Sendungsinformationen",
            "nullable": true
          },
          "custom3": {
            "type": "string",
            "description": "Benutzerdefiniertes Feld zur Mitgabe von Sendungsinformationen",
            "nullable": true
          },
          "custom4": {
            "type": "string",
            "description": "Benutzerdefiniertes Feld zur Mitgabe von Sendungsinformationen",
            "nullable": true
          },
          "custom5": {
            "type": "string",
            "description": "Benutzerdefiniertes Feld zur Mitgabe von Sendungsinformationen",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "Empfänger Postleitzahl",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "Empfänger Stadt",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Empfänger Land (Kann bei Inlandsendungen leer sein)",
            "nullable": true
          },
          "isColor": {
            "type": "boolean",
            "description": "Option Farbe oder S/W"
          },
          "isDuplex": {
            "type": "boolean",
            "description": "Option für doppelseitigen Druck"
          },
          "registeredLetterStatus": {
            "type": "string",
            "description": "Aktuellste Statusmeldung zur angegebenen Einschreibennummer.",
            "nullable": true
          },
          "registeredLetterStatusDate": {
            "type": "string",
            "description": "Tag der aktuellsten Statusmeldung zur angegebenen Einschreibennummer.",
            "format": "date-time",
            "nullable": true
          },
          "vendorSystemInformation": {
            "type": "string",
            "description": "Benutzerdefiniertes Feld zur Mitgabe von systemspezifischen Kennungen und Informationen betreffend der vom Versender verwendeten Partner Software",
            "maxLength": 150,
            "minLength": 0,
            "nullable": true
          },
          "costCenter": {
            "type": "string",
            "description": "Kostenstelle mit einer möglichen Kombination der Zeichen 0-9, a-z, A-Z(keine Umlaute oder andere Sonderzeichen), auf welcher die Kosten bei der Abrechnung gruppiert werden",
            "maxLength": 8,
            "minLength": 0,
            "nullable": true
          },
          "frankierID": {
            "type": "string",
            "description": "Eindeutige FrankierID des Schreibens.Dieses Datum wird nach der erfolgreichen Verarbeitung im Druckzentrum (Status 4) plaziert, i.d.R.wenn das Schreiben im Zielgebiet eingetroffen ist.\n            \n            Hinweis: Erst mit dem 12.04.2023 stehen diese Produktivdaten bereit, vorher werden lediglich Beispiel- bzw. Leerwerte bereitgestellt. \n            ",
            "nullable": true
          },
          "destinationAreaStatus": {
            "type": "string",
            "description": "Aktuelle Statusmeldung des Schreibenseingangs im Zielgebiet.\n            \n            Hinweis: Erst mit dem 12.04.2023 stehen diese Produktivdaten bereit, vorher werden lediglich Beispiel- bzw. Leerwerte bereitgestellt. \n            ",
            "nullable": true
          },
          "destinationAreaStatusDate": {
            "type": "string",
            "description": "Tag der aktuellsten Statusmeldung zum Zielgebiet.\n            \n            Hinweis: Erst mit dem 12.04.2023 stehen diese Produktivdaten bereit, vorher werden lediglich Beispiel- bzw. Leerwerte bereitgestellt. \n            ",
            "format": "date-time",
            "nullable": true
          },
          "errorList": {
            "type": "array",
            "description": "Liste von Error Objekten - Liefert Details zur Fehlern, Warnungen und Informationen",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "plugInFeedbackList": {
            "type": "array",
            "description": "Liste von PlugInFeedback Objekten - Liefert spezifische Informationen zu angewandten PlugIns",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PlugInFeedback"
            }
          }
        }
      },
      "PlugInFeedback": {
        "type": "object",
        "description": "PlugInFeedback-Objekt zur Rückmeldung von funktionsspezifischen Informationen über den LetterStatus",
        "additionalProperties": false,
        "required": [
          "plugInName"
        ],
        "properties": {
          "plugInName": {
            "type": "string",
            "description": "Namenskennung des PlugIn",
            "maxLength": 200,
            "minLength": 0
          },
          "plugInFeedbackModel": {
            "description": "Mit Daten angereichertes PlugIn-Model im JSON Format",
            "nullable": true
          }
        }
      },
      "LetterDataResult": {
        "type": "object",
        "description": "DataResult-Object, welches eine verarbeitete Datei als Base64-String zurück gibt",
        "additionalProperties": false,
        "properties": {
          "letterID": {
            "type": "integer",
            "description": "Eindeutige Sendungs-ID",
            "format": "int64"
          },
          "fileName": {
            "type": "string",
            "description": "Dateiname der Sendung aus den Quellsystem",
            "nullable": true
          },
          "data": {
            "type": "string",
            "description": "Datei als Base64-String",
            "nullable": true
          }
        }
      },
      "Letter": {
        "type": "object",
        "description": "Letter-Klasse, die eine Sendung definiert. Wird immer in einem Array übergeben.",
        "additionalProperties": false,
        "required": [
          "fileName",
          "data",
          "addressLine1",
          "zipCode",
          "city"
        ],
        "properties": {
          "fileName": {
            "type": "string",
            "description": "Eindeutiger Dateiname der Sendung aus dem Quellsystem. Sonderzeichen sind nicht erlaubt",
            "maxLength": 200,
            "minLength": 5
          },
          "data": {
            "type": "string",
            "description": "PDF/A als Base64-String. Die ursprüngliche Dateigröße des PDFs darf ein Maximum von 20 MB nicht überscheiten."
          },
          "isColor": {
            "type": "boolean",
            "description": "Option Farbe oder S/W",
            "default": false,
            "example": true
          },
          "isDuplex": {
            "type": "boolean",
            "description": "Option für doppelseitigen Druck",
            "default": false,
            "example": true
          },
          "batchID": {
            "type": "integer",
            "description": "Kennung eines Stapellaufs (z.b. 15342). Kann für nachfolgende Statusabfragen als Gruppierungs-Kriterium verwendet werden. Erhält bei Nicht-Verwendung den Wert 0",
            "format": "int32",
            "example": 12345
          },
          "registeredLetter": {
            "type": "string",
            "description": "Nationales Einschreiben-Kennzeichen (nur Simplex) - Mögliche Optionen: 'Einwurf Einschreiben', 'Einschreiben', 'Einschreiben eigenhändig', 'Einschreiben Rückschein', 'Einschreiben eigenhändig Rückschein'",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "registeredLetterAdressLine1": {
            "type": "string",
            "description": "(Überholt) Einschreiben-Empfängerzeile 1 (z.B. Name,Firma) für den Rückschein, falls dieser als Einschreibenoption gewählt wird",
            "maxLength": 80,
            "minLength": 0,
            "nullable": true
          },
          "registeredLetterAdressLine2": {
            "type": "string",
            "description": "(Überholt) Einschreiben-Empfängerzeile 2 (z.B. Strasse,Adresszusatz) für den Rückschein, falls dieser als Einschreibenoption gewählt wird",
            "maxLength": 80,
            "minLength": 0,
            "nullable": true
          },
          "registeredLetterAdressLine3": {
            "type": "string",
            "description": "(Überholt) Einschreiben-Empfängerzeile 3 (z.B. Strasse,Adresszusatz) für den Rückschein, falls dieser als Einschreibenoption gewählt wird",
            "maxLength": 80,
            "minLength": 0,
            "nullable": true
          },
          "registeredLetterZipCode": {
            "type": "string",
            "description": "(Überholt) PLZ des Einschreiben-Empfängers (z.B. 73312) für den Rückschein, falls dieser als Einschreibenoption gewählt wird",
            "maxLength": 20,
            "minLength": 5,
            "nullable": true
          },
          "registeredLetterCity": {
            "type": "string",
            "description": "(Überholt) Stadt des Einschreiben-Empfänger (z.B. Geislingen an der Steige) für den Rückschein, falls dieser als Einschreibenoption gewählt wird",
            "maxLength": 80,
            "minLength": 0,
            "nullable": true
          },
          "testFlag": {
            "type": "boolean",
            "description": "Test-Kennzeichen - bei true wird die Sendung nur zur Prüfung verarbeitet. Es erfolgt kein Briefversand",
            "default": false,
            "example": true
          },
          "testEMail": {
            "type": "string",
            "description": "Test-Emailadresse - An diese Email-Adresse wird bei aktiviertem Test-Flag die Test-Sendung als Anhang verschickt ",
            "maxLength": 100,
            "minLength": 0,
            "nullable": true
          },
          "testShowRestrictedArea": {
            "type": "boolean",
            "description": "Test-Sperrflächenmodus - Über dieses Flag wird das per email zurückgesendete pdf-Dokument mit einer Schablone überlagert, damit Sperrflächenverletzungen schneller erkannt werden.",
            "default": false,
            "example": true
          },
          "coverLetter": {
            "type": "boolean",
            "description": "Deckblatt-Option - erzeugt ein Standard-Deckblatt mit validem Adressbereich. Wird ein eigenes PDF als Deckblatt (CoverData) übergeben , wird dieses anstelle der Standard-Vorlage verwendet. In beiden Fällen werden die übergebenen JSON-Adressdaten von der API verarbeitet und auf dem Deckblatt platziert.",
            "default": false
          },
          "coverData": {
            "type": "string",
            "description": "Optionales PDF/A-Deckblatt als Base64-String. Die ursprüngliche Deckblatt-Dateigröße darf ein Maximum von 500 kb nicht überscheiten.",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "description": "Empfängerzeile 1 (z.B. Name,Firma)",
            "maxLength": 80,
            "minLength": 1
          },
          "addressLine2": {
            "type": "string",
            "description": "Empfängerzeile 2 (z.B. Strasse,Adresszusatz)",
            "maxLength": 80,
            "minLength": 0,
            "nullable": true
          },
          "addressLine3": {
            "type": "string",
            "description": "Empfängerzeile 3 (z.B. Strasse,Adresszusatz)",
            "maxLength": 80,
            "minLength": 0,
            "nullable": true
          },
          "addressLine4": {
            "type": "string",
            "description": "Empfängerzeile 4 (z.B. Strasse,Adresszusatz)",
            "maxLength": 80,
            "minLength": 0,
            "nullable": true
          },
          "addressLine5": {
            "type": "string",
            "description": "Empfängerzeile 5 (Nur bei DE-Adressen nutzbar)",
            "maxLength": 80,
            "minLength": 0,
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "Adresse-PLZ (z.B. 53115). Für Empfänger im Ausland ohne Postleitzahlen ist das Feld mit drei Leerzeichen (Blanks) zu befüllen. Für Inlandssendungen ist die korrekte Postleitzahl anzugeben, Leerzeichen sind nicht zulässig.",
            "maxLength": 20,
            "minLength": 3
          },
          "city": {
            "type": "string",
            "description": "Adresse-Stadt (z.B. Bonn)",
            "maxLength": 80,
            "minLength": 1
          },
          "country": {
            "type": "string",
            "description": "Adresse-Land - Hier muss der Ländername nach ISO 3166-1 in GROßBUCHSTABEN und deutscher Sprache hinterlegt werden. (z.B. KROATIEN, ITALIEN, ÖSTERREICH ..). Inlandsendungen benötigen keine Länderangabe.",
            "maxLength": 80,
            "minLength": 0,
            "nullable": true
          },
          "senderAdressLine1": {
            "type": "string",
            "description": "Adresszeile1 des Versenders (z.B. Fa. Huber GmbH)",
            "maxLength": 80,
            "minLength": 0,
            "nullable": true
          },
          "senderStreet": {
            "type": "string",
            "description": "Strasse des Versenders (z.B. Am Weg 1)",
            "maxLength": 80,
            "minLength": 0,
            "nullable": true
          },
          "senderZipCode": {
            "type": "string",
            "description": "PLZ des Versenders (z.B. 76887)",
            "maxLength": 80,
            "minLength": 0,
            "nullable": true
          },
          "senderCity": {
            "type": "string",
            "description": "Stadt des Versenders (z.B. Bad Bergabern)",
            "maxLength": 80,
            "minLength": 0,
            "nullable": true
          },
          "senderAdressLineComplete": {
            "type": "string",
            "description": "Optionale Übergabe der kompletten Versenderadresse in einer Zeile, anstelle der einzelnen Versenderfelder (SenderAdressLine1,SenderStreet,SenderZipCode,SenderCity)",
            "maxLength": 200,
            "minLength": 0,
            "nullable": true
          },
          "custom1": {
            "type": "string",
            "description": "Benutzerdefiniertes Feld zur Mitgabe von Sendungsinformationen (z.B. RE345232)",
            "maxLength": 80,
            "minLength": 0,
            "nullable": true,
            "example": "RE0136645"
          },
          "custom2": {
            "type": "string",
            "description": "Benutzerdefiniertes Feld zur Mitgabe von Sendungsinformationen",
            "maxLength": 80,
            "minLength": 0,
            "nullable": true
          },
          "custom3": {
            "type": "string",
            "description": "Benutzerdefiniertes Feld zur Mitgabe von Sendungsinformationen",
            "maxLength": 80,
            "minLength": 0,
            "nullable": true
          },
          "custom4": {
            "type": "string",
            "description": "Benutzerdefiniertes Feld zur Mitgabe von Sendungsinformationen",
            "maxLength": 80,
            "minLength": 0,
            "nullable": true
          },
          "custom5": {
            "type": "string",
            "description": "Benutzerdefiniertes Feld zur Mitgabe von Sendungsinformationen",
            "maxLength": 80,
            "minLength": 0,
            "nullable": true
          },
          "vendorSystemInformation": {
            "type": "string",
            "description": "Benutzerdefiniertes Feld zur Mitgabe von systemspezifischen Kennungen und Informationen betreffend der vom Versender verwendeten Partner Software",
            "maxLength": 120,
            "minLength": 0,
            "nullable": true
          },
          "costCenter": {
            "type": "string",
            "description": "Kostenstelle mit einer möglichen Kombination der Zeichen 0-9, a-z, A-Z(keine Umlaute oder andere Sonderzeichen), auf welcher die Kosten bei der Abrechnung gruppiert werden",
            "maxLength": 8,
            "minLength": 0,
            "nullable": true
          },
          "plugInList": {
            "type": "array",
            "description": "Liste von PlugIn-Objekten, über die zusätzliche Funktionen angesprochen werden können",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PlugIn"
            }
          }
        }
      },
      "PlugIn": {
        "type": "object",
        "description": "PlugIn-Objekt, zur Erweiterung um spezifische Informationen und Funktionen",
        "additionalProperties": false,
        "required": [
          "plugInName"
        ],
        "properties": {
          "plugInName": {
            "type": "string",
            "description": "Namenskennung des PlugIn",
            "maxLength": 200,
            "minLength": 0
          },
          "plugInModel": {
            "description": "Mit Daten angereichertes PlugIn-Model im JSON Format",
            "nullable": true
          }
        }
      },
      "LetterQueueResult": {
        "type": "object",
        "description": "LetterQueueResult-Objekt, welches bei Aktionen zu einer terminierten Sendung (UploadManagment-PlugIn) zurückgegeben wird.",
        "additionalProperties": false,
        "required": [
          "message"
        ],
        "properties": {
          "letterID": {
            "type": "integer",
            "description": "Eindeutige Sendungs-ID",
            "format": "int64"
          },
          "successful": {
            "type": "boolean",
            "description": "Feedback-Flag, ob die aufgerufenene Aktion erfolgreich war"
          },
          "message": {
            "type": "string",
            "description": "Feedback-Text zur erfolgten Aktion. Folgende Rückgaben sind möglich:\n            \n             Erfolg: \"Abruch/Freigabe der Sendung war erfolgreich\"\n             Fehler: \"Die angegebene LetterID ist ungültig/unbekannt.\"\n             Fehler: \"Die angegebene LetterID befindet sich nicht in der Warteschlange\"\n             Fehler: \"Die angegebene LetterID wurde bereits in die Produktion überführt\"\n              ",
            "maxLength": 200,
            "minLength": 1
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "description": "Rückgabe eines Token nach Login ",
        "additionalProperties": false,
        "required": [
          "token"
        ],
        "properties": {
          "token": {
            "type": "string",
            "description": "Token-Schlüssel",
            "minLength": 1
          }
        }
      },
      "Login": {
        "type": "object",
        "description": "Login-Objekt zur Anmeldung und ermitteln des JWT",
        "additionalProperties": false,
        "required": [
          "vendorID",
          "ekp",
          "secret",
          "password"
        ],
        "properties": {
          "vendorID": {
            "type": "string",
            "description": "DPAG-Kennung des Software-Herstellers",
            "minLength": 1
          },
          "ekp": {
            "type": "string",
            "description": "DPAG-Kennung des Software-Kunden",
            "maxLength": 10,
            "minLength": 10
          },
          "secret": {
            "type": "string",
            "description": "Sicherheitsschlüssel der EPost, welcher bei der Passwort-Festlegung (Route: SetPassword) zurückgemeldet wurde",
            "maxLength": 100,
            "minLength": 0
          },
          "password": {
            "type": "string",
            "description": "Benutzerdefiniertes Passwort des Software-Kunden",
            "maxLength": 100,
            "minLength": 5
          },
          "vendorSubID": {
            "type": "string",
            "description": "(optional) Partnerverwaltete Kunden-Kennung",
            "maxLength": 100,
            "minLength": 0,
            "nullable": true
          },
          "tokenDuration": {
            "type": "integer",
            "description": "(optional) Lebendauer des Tokens in Minuten. Maximum und Standardwert ist 1440 (24 Std)",
            "format": "int32"
          }
        }
      },
      "SmsCodeRequest": {
        "type": "object",
        "description": "Anforderungsobjekt zur Anfrage eines SMS-Code, der 10 Minuten gültig ist. Dieser ist notwendig, um eine Erstellung/Änderung des benutzerdefinierten Passwort zu verifizieren",
        "additionalProperties": false,
        "required": [
          "vendorID",
          "ekp"
        ],
        "properties": {
          "vendorID": {
            "type": "string",
            "description": "DPAG-Kennung des Software-Herstellers",
            "minLength": 1
          },
          "ekp": {
            "type": "string",
            "description": "DPAG-Kennung des Software-Kunden.",
            "maxLength": 10,
            "minLength": 10
          }
        }
      },
      "SetPassword": {
        "type": "object",
        "description": "Informations-Objekt zur Festlegung eines neuen Passworts",
        "additionalProperties": false,
        "required": [
          "vendorID",
          "ekp",
          "newPassword",
          "smsCode"
        ],
        "properties": {
          "vendorID": {
            "type": "string",
            "description": "DPAG-Kennung des Software-Herstellers",
            "minLength": 1
          },
          "ekp": {
            "type": "string",
            "description": "DPAG-Kennung des Software-Kunden",
            "maxLength": 10,
            "minLength": 10
          },
          "newPassword": {
            "type": "string",
            "description": "Benutzerdefiniertes Password des Software-Kunden. ",
            "maxLength": 100,
            "minLength": 5
          },
          "smsCode": {
            "type": "string",
            "description": "SMS Code, welcher durch einen SMSCodeRequest zugesendet wurde",
            "maxLength": 6,
            "minLength": 6
          }
        }
      },
      "Automover": {
        "type": "object",
        "description": "Automover-PlugIn zur Positionierung oder Repositionierung von Adressdaten\n            \n           Regeln der Adressen-Platzierung nach E-POST Vorgabe\n            \n           A) Adressbereich mit bekannten Daten überschreiben\n              Adressdaten sind bekannt und für Versender und Empfänger im JSON belegt\n              (senderAdressLine1, senderStreet, senderZipCode, senderCity, addressLine1-5, zipCode, city)\n            \n            - Es wird der E-POST konforme Bereich für die Adressdaten auf der ersten Seite des übergebenen PDF geweißt.\n            - Sender- und Empfängeradresse werden gemäß der übergebenen Daten auf der ersten Seite aufgebracht.\n            - Ist zusätzlich die Option 'CoverLetter' aktiviert, wird diese Funktion nicht verwendet und ein Deckblatt erzeugt.\n            \n           B) ausgefüllter Adressbereich im PDF automatisch repositionieren\n              Adressdaten (Versender und Empfänger) sind nur auf dem Dokument als erkennbarer Text vorhanden\n            \n            - Es wird in einem vorgegebenen Bereich (siehe Parameter searchAreaXYWH) nach Sender- und Empfängeradresse gesucht.\n            - Es muss mindestens die Empfängeradresse vorhanden sein bzw. erkannt werden, damit die Repositionierung erfolgreich ist\n            - Die Adressdaten für Versender und Empfänger aus dem JSON werden für die Suche im Dokument nicht berücksichtigt.\n            - Bei der Repositionierung wird ein E-POST konformer Adressbereich durch eine überlagerte Weißfläche vorbereitet, \n              auf der die erkannten Adressen E-POST konform platziert werden.\n            - Schriftart, Farbe und Größe werden dabei nach E-POST Vorgabe angepasst: \n              Senderadresse     Schriftart Arial, Farbe Schwarz, Größe 6\n              Empfängeradresse  Schriftart Arial, Farbe Schwarz, Größe 9\n            - die Adressfelder 'zipCode' und 'City' im LetterStatus-Objekt werden durch die erkannten Werte befüllt.\n            - Eine Kombination mit Einschreiben (registeredLetter) und/oder der automatischen Erzeugung \n              eines Deckblattes werden nicht unterstützt, da hierfür die notwendigen Metadaten explizit vorliegen müssen\n              \n             Behandlung von Pflichtfeldern im Letter-Model, wenn KEINE Adress-Metadaten vorhanden sind\n             und die Adress-Repositionierung verwendet werden muss \n           \n            - addressLine1: Muss mit der Kennung *AUTOMOVER* befüllt werden\n            - zipCode: Muss mit der Kennung *99999* befüllt werden\n            - city: Muss mit der Kennung *AUTOMOVER* befüllt werden\n           \n            \n           Folgende Info kann zusätzlich durch dieses PlugIn gemeldet werden:\n           \n                I601 - PlugIn Info: {Platzhalter für Details}\n                I611 - Automover: Es wurde die Coverletter-Option in Verbindung mit aktivierter Adresspositionierung angegeben. Es wurde die Deckblatt-Option verwendet.\n           \n           Folgende Warnung kann zusätzlich durch dieses PlugIn gemeldet werden:\n           \n                W601 - PlugIn Warnung: {Platzhalter für Details}\n                W611 - Automover: Es wurde keine Senderadresse mitgegeben\n           \n           Folgende Fehlercodes können zusätzlich durch dieses PlugIn gemeldet werden:\n                \n           99 - Verarbeitungsfehler\n                E601 - PlugIn Fehler: {Platzhalter für Fehlerdetails}\n                E612 - Es konnte keine Empfängeradresse im Suchbereich ermittelt werden\n                E613 - Es konnte keine gültige PLZ ermittelt werden\n                E614 - In der PDF-Datei konnte kein Text gefunden werden. Ggf. handelt es sich um ein gescanntes Dokument \n                oder ein Dokument, dessen Text nicht lesbar ist.\n                E615 - Für Einschreiben muss ein Deckblatt (CoverLetter=true) bei einer Adress-Repositionierung verwendet werden\n            \n            ",
        "additionalProperties": false,
        "required": [
          "useAutomover"
        ],
        "properties": {
          "useAutomover": {
            "type": "boolean",
            "description": "Soll das Automover-PlugIn aktiv werden, ist dieses Flag auf true zu stellen"
          },
          "parameters": {
            "type": "array",
            "description": "Liste von optionalen Automover-Parametern für die Repositionierung\n            \n             Key: 'searchAreaXYWH'  Default-Value: '0,0,120,110' - Koordinaten in Millimeter, Ausgangspunkt Oben Links: 'X,Y,Breite,Höhe'\n             Hierdurch wird der zu durchsuchende Bereich über Koordinaten vorgegeben. \n             Dieser kann entsprechend geändert werden, falls dieser Bereich angepasst werden muss.\n             \n             Key: 'ShowSearchAreaOnTest'  Default-Value: '0'  - Bei Wert '1' wird der Suchbereich (searchAreaXYWH) über ein Rechteck visualisiert. Dies gilt nur für den Testmodus.\n            \n            \n            ",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AutomoverParameter"
            }
          }
        }
      },
      "AutomoverParameter": {
        "type": "object",
        "description": "Parameter für das Automover-PlugIn (Key-Value Pair)",
        "additionalProperties": false,
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Parameter Kennzeichnung",
            "maxLength": 50,
            "minLength": 1
          },
          "value": {
            "type": "string",
            "description": "Parameter Wert",
            "minLength": 1
          }
        }
      },
      "AutomoverFeedback": {
        "type": "object",
        "description": "AutomoverFeedback - Liefert PlugIn Informationen zum Automover innerhalb eines LetterStatus",
        "additionalProperties": false,
        "properties": {
          "useAutomover": {
            "type": "boolean",
            "description": "Info, ob das Automover-Plugin verwendet wurde, oder ob JSON-Adressdaten in Kombination mit einem Deckblatt vorlagen. "
          },
          "parameters": {
            "type": "array",
            "description": "Liste der übergebenen Automover-Parameter",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AutomoverParameter"
            }
          },
          "jsonAddressDataUsed": {
            "type": "boolean",
            "description": "Wurden JSON-Adressdaten für die Positionierung übergeben, ist dieses Flag auf true."
          }
        }
      },
      "UploadManagement": {
        "type": "object",
        "description": "UploadManagement-PlugIn zur Versand-Steuerung von Briefen\n            \n           Mindestmengen-Versand\n                Der Mindestmengen-Versand dient zur automatischen Sammlung von mindestens 50 Sendungen über einen Zeitraum\n                von 24 Stunden beginnend ab 14:00. Für terminlich relevante Sendungen kann eine Stichtag-Option genutzt werden,\n                so dass diese Schreiben zum Stichtag/-zeitpunkt in das Druckzentrum übertragen werden.\n                Der Mindestmengen-Versand wird über useMinimumQuantity = true aktiviert.\n                Wird das UploadManagement-PlugIn nicht explizit mitgegeben, werden die Sendungen unverändert direkt dem \n                Druckzentrum zugeführt.\n                \n                - Für Mindestmengen ist ein fester Wert von 50 Sendungen pro Tag vorgegeben.\n                - Wird diese Mindestmenge vor 14:00 Uhr erreicht, werden gesammelte und alle weiteren Sendungen bis 14:00 Uhr \n                  in die Produktion überführt.\n                - D.h. es werden Sendungen berücksichtigt, die vom Vortag 14:00 bis 14:00 Uhr erfolgreich verarbeitet wurden \n                  (Status 2 - ProcessedDate) \n                - Wird die tägliche Mindestmenge bis 14:00 Uhr nicht erreicht, wird pro Sendung die hinterlegte \n                  Stichtag-/Terminoption (DueDays,DueDate, DueDayOfWeek) geprüft und ggf. versendet.\n                - Sendungen mit TestFlag = True werden nicht berücksichtigt.\n                - Einschreiben und Auslandsendungen werden bei der Zählung nicht berücksichtigt. \n                  Hier gilt nur die mögliche angegebene Terminoption.\n                \n           Terminversand\n                Unabhängig von der Mindestmengen kann ein reiner Terminversand genutzt werden:\n                Hierzu muss der Mindestmengen-Versand über useMinimumQuantity = false ausgeschaltet werden.\n                Wird das UploadManagement-PlugIn nicht explizit mitgegeben, werden die Sendungen unverändert direkt dem Druckzentrum zugeführt.\n            \n                - Es darf nur eine der 3 Terminoptionen (DueDays,DueDate,DueDayofWeek) verwendet werden.\n                - Wird keine Terminoption angegeben, wird die Option DueDays auf 1 gesetzt.\n                - Ist der Mindestmengen-Versand deaktiviert (UseMinimumQuantity = false), gilt nur die Terminoption \n                  als Versand-Kriterium\n                - Sendungen mit TestFlag = True werden nicht berücksichtigt.\n            \n           Folgende Info kann zusätzlich durch dieses PlugIn gemeldet werden:\n           \n                I601 - PlugIn Info: {Platzhalter für Details}\n           \n           Folgende Warnung kann zusätzlich durch dieses PlugIn gemeldet werden:\n           \n                W601 - PlugIn Warnung: {Platzhalter für Details}\n                W622 - UploadManagement: Einschreiben und Auslandsendungen können nicht bei Mindestmengen-Versand \n                       berücksichtigt werden. Hier gilt nur die Terminoption.\n           \n           Folgende Fehlercodes können zusätzlich durch dieses PlugIn gemeldet werden:\n                \n           99 - Verarbeitungsfehler\n                E601 - UploadManagement: {Platzhalter für Fehlerdetails}\n                E621 - UploadManagement: Es wurde mehr als eine Stichtag-Option angegeben\n                E622 - UploadManagement: Die verwendete Termin-Option muss mindestens 1 Tag und nicht weiter \n                       als 31 Tage in der Zukunft liegen\n                E700 - Abbruch des terminierten Versands durch Kunde\n            \n            ",
        "additionalProperties": false,
        "required": [
          "useMinimumQuantity"
        ],
        "properties": {
          "useMinimumQuantity": {
            "type": "boolean",
            "description": "Mindestmengen-Option:\n             \n            Aktiv: Es wird regelmäßig in einem Zeitfenster ab 14:00 Uhr des Vortages bis 14:00 Uhr geprüft, ob eine fest vorgegebene\n            und tägliche Mindestmenge von 50 Sendungen erreicht wurde. \n            Ab dieser Menge werden die angesammelten (und alle folgenden) Sendungen für den Upload in das Druckzentrum \n            freigegebenen und hochgeladen. Ausserhalb dieses Zeitfensters findet kein Sendungsupload statt.\n            \n            Nicht aktiv: Es wird nur die Stichtag-Option (DueDays, DueDate, DueDayOfWeek ) für einen Sendungsupload \n            verwendet. Der Upload in das Druckzentrum findet im dem Fall am Stichtag vor 14:00 Uhr statt.\n            "
          },
          "dueDays": {
            "type": "integer",
            "description": "Stichtag-Option für Sendungsupload\n            \n             Angabe, in wie viel Tagen ab erfolgreicher Sendungsverarbeitung (Status 2 - ProcessedDate) der Stichtag \n             erreicht ist.\n             Diese Termin-Option darf nicht weiter als 31 Tage in der Zukunft liegen.\n             Standard-Vorgabewert, sofern keine Stichtag-Option angegeben wurde: 1\n             \n            ",
            "format": "int32",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "Stichtag-Optionen für Sendungsupload\n            \n             Angabe, zu welchen Datum (Zeitanteil wird ignoriert) der Stichtag für diese Sendung erreicht ist.\n             Das Datum muss mindestens 1 Tag in der Zukunft liegen.\n             Diese Termin-Option darf nicht weiter als 31 Tage in der Zukunft liegen.\n             \n            ",
            "format": "date-time",
            "nullable": true
          },
          "dueDayofWeek": {
            "type": "string",
            "description": "Stichtag-Optionen für Sendungsupload\n            \n             Angabe, an welchem Wochentag der Stichtag für diese Sendung erreicht ist.\n             \n             Mögliche Angaben: Mo, Di, Mi, Do, Fr, Sa, So\n             Es darf nur ein Wochentag-Kürzel angeben werden. Eine Übergabe mehrerer Wochentage ist nicht möglich.\n             Entspricht die Angabe dem Wochentag der Sendungsverarbeitung vor 14:00 Uhr, gilt dieser Tag als Stichtag. \n             Nach 14:00 Uhr gilt der entsprechende Tag der nächsten Woche.\n             \n            ",
            "maxLength": 2,
            "minLength": 2,
            "nullable": true
          }
        }
      },
      "UploadManagementFeedback": {
        "type": "object",
        "description": "UploadManagementFeedback - Liefert PlugIn Informationen zum UploadManagement innerhalb eines LetterStatus",
        "additionalProperties": false,
        "required": [
          "useMinimumQuantity"
        ],
        "properties": {
          "useMinimumQuantity": {
            "type": "boolean",
            "description": "Mindestmengen-Option:\n            Info, ob die Mindestmengen-Option (true) oder lediglich ein Terminversand (false) verwendet wurde\n            "
          },
          "dueDays": {
            "type": "integer",
            "description": "Stichtag-Option für Sendungsupload\n            \n             Angabe, in wie viel Tagen ab erfolgreicher Sendungsverarbeitung (Status 2 - ProcessedDate) der Stichtag erreicht ist.\n             Diese Termin-Option darf nicht weiter als 31 Tage in der Zukunft liegen.\n             Standard-Vorgabewert, sofern keine Stichtag-Option angegeben wurde: 1\n             \n            ",
            "format": "int32",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "Stichtag-Optionen für Sendungsupload\n            \n             Angabe, zu welchen Datum (Zeitanteil wird ignoriert) der Stichtag für diese Sendung erreicht ist.\n             Das Datum muss mindestens 1 Tag in der Zukunft liegen.\n             Diese Termin-Option darf nicht weiter als 31 Tage in der Zukunft liegen.\n             \n            ",
            "format": "date-time",
            "nullable": true
          },
          "dueDayofWeek": {
            "type": "string",
            "description": "Stichtag-Optionen für Sendungsupload\n            \n             Angabe, an welchem Wochentag der Stichtag für diese Sendung erreicht ist.\n             \n             Mögliche Angaben: Mo, Di, Mi, Do, Fr, Sa, So\n             Es darf nur ein Wochentag-Kürzel angeben werden. Eine Übergabe mehrerer Wochentage ist nicht möglich.\n             Entspricht die Angabe dem Wochentag der Sendungsverarbeitung vor 14:00 Uhr, gilt dieser Tag als Stichtag. \n             Nach 14:00 Uhr gilt der entsprechende Tag der nächsten Woche.\n             \n            ",
            "maxLength": 2,
            "minLength": 2,
            "nullable": true
          }
        }
      },
      "PremiumAdress": {
        "type": "object",
        "description": "PremiumAdress Variante\n             \n             PREMIUMADRESS mit den angegebenen Produktvarianten zur Verarbeitung von Letters. \n             Als Produktvarianten sind ausschließlich Basis und Report für nationale Sendungen, ausgenommen Einschreiben, verfügbar.\n              \n             \n             Folgende Info kann zusätzlich durch dieses PlugIn gemeldet werden:\n            \n                 I601 - PlugIn Info: {Platzhalter für Details}\n            \n             Folgende Warnung kann zusätzlich durch dieses PlugIn gemeldet werden:\n            \n                 W601 - PlugIn Warnung: {Platzhalter für Details}\n            \n             Folgende Fehlercodes können zusätzlich durch dieses PlugIn gemeldet werden:\n                 \n             99 - Verarbeitungsfehler\n                 E601 - PremiumAdress: {Platzhalter für Fehlerdetails}\n             \n             ",
        "additionalProperties": false,
        "required": [
          "productVariants"
        ],
        "properties": {
          "productVariants": {
            "type": "string",
            "description": "Parameter Produktvarianten \"Basic\" oder \"Report\"",
            "minLength": 1
          }
        }
      },
      "PremiumAdressFeedback": {
        "type": "object",
        "description": "UploadManagementFeedback - Liefert PlugIn Informationen zum UploadManagement innerhalb eines LetterStatus",
        "additionalProperties": false,
        "required": [
          "productVariants"
        ],
        "properties": {
          "productVariants": {
            "type": "string",
            "description": "Parameter Produktvarianten \"Basic\" oder \"Report\"",
            "minLength": 1
          },
          "premiumAdressResult": {
            "description": "PremiumAdressResult - Enthält alle Details einer PremiumAdress-Quittung. \nDiese kann je nach Zustell-Szenario zwischen 4-14 Werktage dauern, bis eine Rückmeldung vorliegt.\nDetails zu den folgenden Feldern entnehmen Sie bitte dem PREMIUMADRESS Handbuch",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PremiumAdressResult"
              }
            ]
          }
        }
      },
      "PremiumAdressResult": {
        "type": "object",
        "description": "PremiumAdressResult - Enthält alles Details einer PremiumAdress-Quittung. \nDiese kann je nach Zustell-Szenario zwischen 4-14 Werktage dauern, bis eine Rückmeldung vorliegt.\nDetails zu den folgenden Feldern entnehmen Sie bitte dem PREMIUMADRESS Handbuch",
        "additionalProperties": false,
        "properties": {
          "sdgS": {
            "type": "integer",
            "description": "Parameter SdgS Kennung des Sendungsschicksales",
            "format": "int32"
          },
          "kd_Na1": {
            "type": "string",
            "description": "Parameter Kd_Na1 Vorname oder erste Zeile des Firmennamens auf der Originalsendung",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "kd_Na2": {
            "type": "string",
            "description": "Parameter Kd_Na2 Nachname oder zweite Zeile des Firmennamens auf der Originalsendung",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "kd_Na3": {
            "type": "string",
            "description": "Parameter Kd_Na3 Adresszusatz oder dritte Zeile des Firmennamens auf der Originalsendung",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "kd_Na4": {
            "type": "string",
            "description": "Parameter Kd_Na4 Adresszusatz oder vierte Zeile des Firmennamens auf der Originalsendung",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "kd_Str": {
            "type": "string",
            "description": "Parameter Kd_Str Original Anschrift Straße",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "kd_HNr": {
            "type": "string",
            "description": "Parameter Kd_HNr Original Anschrift Hausnummer",
            "maxLength": 20,
            "minLength": 0,
            "nullable": true
          },
          "kd_PLZ": {
            "type": "string",
            "description": "Parameter Kd_PLZ Original Anschrift PLZ",
            "maxLength": 5,
            "minLength": 0,
            "nullable": true
          },
          "kd_Ort": {
            "type": "string",
            "description": "Parameter Kd_Ort Original Anschrift Ort",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "kd_Postf": {
            "type": "string",
            "description": "Parameter Kd_Postf Original Anschrift Postfach",
            "maxLength": 12,
            "minLength": 0,
            "nullable": true
          },
          "e_Na1": {
            "type": "string",
            "description": "Parameter E_Na1 Ergebnisdatensatz Vorname oder erste Zeile des Firmennamens ",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "e_Na2": {
            "type": "string",
            "description": "Parameter E_Na2 Ergebnisdatensatz Nachname oder zweite Zeile des Firmennamens",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "e_Na3": {
            "type": "string",
            "description": "Parameter E_Na3 Ergebnisdatensatz Adresszusatz oder dritte Zeile des Firmennamens",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "e_Na4": {
            "type": "string",
            "description": "Parameter E_Na4 Ergebnisdatensatz Adresszusatz oder vierte Zeile des Firmennamens",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "e_Str": {
            "type": "string",
            "description": "Parameter E_Str Ergebnisdatensatz Straße",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "e_HNr": {
            "type": "string",
            "description": "Parameter E_HNr Ergebnisdatensatz Hausnummer",
            "maxLength": 20,
            "minLength": 0,
            "nullable": true
          },
          "e_PLZ": {
            "type": "string",
            "description": "Parameter E_PLZ Ergebnisdatensatz PLZ",
            "maxLength": 5,
            "minLength": 0,
            "nullable": true
          },
          "e_Ort": {
            "type": "string",
            "description": "Parameter E_Ort Ergebnisdatensatz Ort",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "e_Postf": {
            "type": "string",
            "description": "Parameter E_Postf Ergebnisdatensatz Postfach",
            "maxLength": 12,
            "minLength": 0,
            "nullable": true
          },
          "nsA_Na1": {
            "type": "string",
            "description": "Parameter NSA_Na1 Nachsendeauftrag Vorname oder erste Zeile des Firmennamens ",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "nsA_Na2": {
            "type": "string",
            "description": "Parameter NSA_Na2 Nachsendeauftrag Nachname oder zweite Zeile des Firmennamens",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "nsA_Na3": {
            "type": "string",
            "description": "Parameter NSA_Na3 Nachsendeauftrag Adresszusatz oder dritte Zeile des Firmennamens",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "nsA_Na4": {
            "type": "string",
            "description": "Parameter NSA_Na4 Nachsendeauftrag Adresszusatz oder vierte Zeile des Firmennamens",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "nsA_Str": {
            "type": "string",
            "description": "Parameter NSA_Str Nachsendeauftrag Straße",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "nsA_HNr": {
            "type": "string",
            "description": "Parameter NSA_HNr Nachsendeauftrag Hausnummer",
            "maxLength": 20,
            "minLength": 0,
            "nullable": true
          },
          "nsA_PLZ": {
            "type": "string",
            "description": "Parameter NSA_PLZ Nachsendeauftrag PLZ",
            "maxLength": 5,
            "minLength": 0,
            "nullable": true
          },
          "nsA_Ort": {
            "type": "string",
            "description": "Parameter NSA_Ort Nachsendeauftrag Ort",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "nsA_Land": {
            "type": "string",
            "description": "Parameter NSA_Land Nachsendeauftrag Land : Deutsche Schreibweise ausgeschrieben, z.B. „Österreich“. Handelt es sich um eine Inlandsadresse, bleibt das Feld leer.",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "nsA_Postf": {
            "type": "string",
            "description": "Parameter NSA_Postf Nachsendeauftrag Postfach",
            "maxLength": 12,
            "minLength": 0,
            "nullable": true
          },
          "nsA_PLZ_Postf": {
            "type": "string",
            "description": "Parameter NSA_PLZ_Postf Nachsendeauftrag PLZ zum Postfach",
            "maxLength": 12,
            "minLength": 0,
            "nullable": true
          },
          "nsA_Ort_Postf": {
            "type": "string",
            "description": "Parameter NSA_Ort_Postf Nachsendeauftrag Ort zum Postfach",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "nsA_Land_Postf": {
            "type": "string",
            "description": "Parameter NSA_Land_Postf Nachsendeauftrag Land zum Postfach",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          }
        }
      },
      "LetterDetailsPrintedByDay": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "printFeedbackDate": {
            "type": "string",
            "description": "Gruppierung: Produktionstag (Es werden nur Sendungen mit LetterStatus 4-'Verarbeitung im Druckzentrum' berücksichtigt)",
            "format": "date-time"
          },
          "vendorID": {
            "type": "string",
            "description": "Gruppierung: API-Partner Kennung",
            "nullable": true
          },
          "ekp": {
            "type": "string",
            "description": "Gruppierung: Deutsche Post AG - Kundennummer des Versenders",
            "nullable": true
          },
          "isColor": {
            "type": "boolean",
            "description": "Gruppierung: Farbe oder S/W"
          },
          "isDuplex": {
            "type": "boolean",
            "description": "Gruppierung: doppelseitiger oder einseitiger Druck"
          },
          "registeredLetter": {
            "type": "string",
            "description": "Gruppierung: Nationales Einschreiben-Kennzeichen oder Leerstring für Standard-Sendungen",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Gruppierung: Empfängerland",
            "nullable": true
          },
          "letterCount": {
            "type": "integer",
            "description": "Anzahl: Produzierte Sendungen ",
            "format": "int32"
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Bitte JWT eingeben, welcher durch die Login-Methode zurückgeliefert wurde: \r\n\r\n                    Bearer {JWT}.\r\n\r\n                    ",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "tags": [
    {
      "name": "Campaign",
      "description": "Campaign-Bereich für DialogPost nationaler Versand. Authentifizierung erfolgt über Bearer-Token im Http-Header (Authorization: Bearer #token#) "
    },
    {
      "name": "Client",
      "description": "Client-Bereich zum Anpassen von anmeldespezifischen Daten. Authentifizierung erfolgt über Bearer-Token im Http-Header (Authorization: Bearer #token#) "
    },
    {
      "name": "Letter",
      "description": "Einliefern von Sendungen und Status-Abfragen. Authentifizierung erfolgt über Bearer-Token im Http-Header (Authorization: Bearer #token#) "
    },
    {
      "name": "Login",
      "description": "Anfordern eines JWT (JSON Web Token) für Zugriff auf den Letter-Controller. "
    },
    {
      "name": "PlugIn",
      "description": "Ausschließlicher Dokumentationsbereich für anwendbare PlugIns, ohne jegliche Funktion. Die im Letter-Model (PlugInList) angegeben dynamischen Plugins sind je PlugIn mit ihrer PlugInList-Signatur als Methode dokumentiert. Die jeweiligen relevanten Schemas (Übergabe und Response) werden dort als ReturnCodes dokumentiert."
    },
    {
      "name": "Vendor",
      "description": "Vendor-Bereich zum Abfragen von Sendungsauswertungen über den angemeldeten Partner. Authentifizierung erfolgt über Bearer-Token im Http-Header (Authorization: Bearer #token#) "
    }
  ]
}