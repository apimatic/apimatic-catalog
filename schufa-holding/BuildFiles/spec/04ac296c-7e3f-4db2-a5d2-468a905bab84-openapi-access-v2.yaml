openapi: 3.0.1
info:
  title: finAPI Access V2
  description: |
    <strong>RESTful API for Account Information Services (AIS) and Payment Initiation Services (PIS)</strong>
    <br/>
    <strong>Application Version:</strong> 2.45.1
    <br/>

    The following pages give you some general information on how to use our APIs.<br/>
    The actual API services documentation then follows further below. You can use the menu to jump between API sections.
    <br/>
    <br/>
    This page has a built-in HTTP(S) client, so you can test the services directly from within this page,
    by filling in the request parameters and/or body in the respective services, and then hitting the TRY button.
    Note that you need to be authorized to make a successful API call. To authorize, refer to the 'Authorization'
    section of the API, or just use the OAUTH button that can be found near the TRY button.
    <br/>

    <h2 id="general-information">General information</h2>

    <h3 id="general-error-responses"><strong>Error Responses</strong></h3>
    When an API call returns with an error, then in general it has the structure shown in the following example:

    <pre>
    {
      "errors": [
        {
          "message": "Interface 'FINTS_SERVER' is not supported for this operation.",
          "code": "BAD_REQUEST",
          "type": "TECHNICAL"
        }
      ],
      "date": "2020-11-19T16:54:06.854+01:00",
      "requestId": "selfgen-312042e7-df55-47e4-bffd-956a68ef37b5",
      "endpoint": "POST /api/v2/bankConnections/import",
      "authContext": "1/21",
      "bank": "DEMO0002 - finAPI Test Redirect Bank (id: 280002, location: none)"
    }
    </pre>

    If an API call requires an additional authentication by the user, HTTP code 510 is returned and the error response
    contains the additional "multiStepAuthentication" object, see the following example:

    <pre>
    {
      "errors": [
        {
          "message": "An additional authentication is required. Please enter the following code: 123456",
          "code": "ADDITIONAL_AUTHENTICATION_REQUIRED",
          "type": "BUSINESS",
          "multiStepAuthentication": {
            "hash": "678b13f4be9ed7d981a840af8131223a",
            "status": "CHALLENGE_RESPONSE_REQUIRED",
            "challengeMessage": "An additional authentication is required. Please enter the following code: 123456",
            "answerFieldLabel": "TAN",
            "redirectUrl": null,
            "redirectContext": null,
            "redirectContextField": null,
            "twoStepProcedures": null,
            "photoTanMimeType": null,
            "photoTanData": null,
            "opticalData": null,
            "opticalDataAsReinerSct": false
          }
        }
      ],
      "date": "2019-11-29T09:51:55.931+01:00",
      "requestId": "selfgen-45059c99-1b14-4df7-9bd3-9d5f126df294",
      "endpoint": "POST /api/v2/bankConnections/import",
      "authContext": "1/18",
      "bank": "DEMO0001 - finAPI Test Bank"
    }
    </pre>

    An exception to this error format are API authentication errors, where the following structure is returned:

    <pre>
    {
      "error": "invalid_token",
      "error_description": "Invalid access token: cccbce46-xxxx-xxxx-xxxx-xxxxxxxxxx"
    }
    </pre>

    <h3 id="general-paging"><strong>Paging</strong></h3>
    API services that may potentially return a lot of data implement paging.
    They return a limited number of entries within a "page". Further entries must be fetched with
    subsequent calls.
    <br/><br/>
    Any API service that implements paging provides the following input parameters:<br/>
    &bull; "page": the number of the page to be retrieved (starting with 1).<br/>
    &bull; "perPage": the number of entries within a page. The default and maximum value is stated
    in the documentation of the respective services.

    A paged response contains an additional "paging" object with the following structure:

    <pre>
    {
      ...
      ,
      "paging": {
        "page": 1,
        "perPage": 20,
        "pageCount": 234,
        "totalCount": 4662
      }
    }
    </pre>

    <h3 id="general-internationalization"><strong>Internationalization</strong></h3>
    The finAPI services support internationalization which means you can define the language you prefer
    for API service responses.
    <br/><br/>
    The following languages are available: German, English, Czech, Slovak.
    <br/><br/>
    The preferred language can be defined by providing the official HTTP <strong>Accept-Language</strong>
    header.
    <br/><br/>
    finAPI reacts on the official iso language codes &quot;de&quot;, &quot;en&quot;, &quot;cs&quot;
    and &quot;sk&quot; for the named languages.
    Additional subtags supported by the Accept-Language header may be provided,
    e.g. &quot;en-US&quot;, but are ignored.
    <br/>
    If no Accept-Language header is given, German is used as the default language.
    <br/><br/>
    Exceptions:<br/>
    &bull; Bank login hints and login fields are only available in the language of the bank and not
    being translated.<br/>
    &bull; Direct messages from the bank systems typically returned as BUSINESS errors will not
    be translated.<br/>
    &bull; BUSINESS errors created by finAPI directly are available in German and English.<br/>
    &bull; TECHNICAL errors messages meant for developers are mostly in English, but also may be
    translated.

    <h3 id="general-request-ids"><strong>Request IDs</strong></h3>
    With any API call, you can pass a request ID via a header with name "X-Request-Id".
    The request ID can be an arbitrary string with up to 255 characters.
    Passing a longer string will result in an error.
    <br/><br/>
    If you don't pass a request ID for a call, finAPI will generate a random ID internally.
    <br/><br/>
    The request ID is always returned back in the response of a service, as a header with
    name "X-Request-Id".
    <br/><br/>
    We highly recommend to always pass a (preferably unique) request ID, and include it into your
    client application logs whenever you make a request or receive a response
    (especially in the case of an error response). finAPI is also logging request IDs on its end.
    Having a request ID can help the finAPI support team to work more efficiently and solve tickets faster.

    <h3 id="general-overriding-http-methods"><strong>Overriding HTTP methods</strong></h3>
    Some HTTP clients do not support the HTTP methods PATCH or DELETE.
    If you are using such a client in your application, you can use a POST request instead with a special
    HTTP header indicating the originally intended HTTP method.
    <br/><br/>
    The header's name is <strong>X-HTTP-Method-Override</strong>. Set its value to either
    <strong>PATCH</strong> or <strong>DELETE</strong>.
    POST Requests having this header set will be treated either as PATCH or DELETE by the finAPI servers.
    <br/><br/>
    Example:
    <br/><br/>
    <strong>X-HTTP-Method-Override: PATCH</strong><br/>
    POST /api/v2/label/51<br/>
    {"name": "changed label"}<br/><br/>
    will be interpreted by finAPI as:<br/><br/>
    PATCH /api/v2/label/51<br/>
    {"name": "changed label"}<br/>

    <h3 id="general-user-metadata"><strong>User metadata</strong></h3>
    With the migration to PSD2 APIs, a new term called "User metadata"
    (also known as "PSU metadata") has been introduced to the API.
    This user metadata aims to inform the banking API if there was a real end-user
    behind an HTTP request or if the request was triggered by a system
    (e.g. by an automatic batch update). In the latter case, the bank may apply some restrictions
    such as limiting the number of HTTP requests for a single consent.
    Also, some operations may be forbidden entirely by the banking API.
    For example, some banks do not allow issuing a new consent without the end-user being involved.
    Therefore, it is certainly necessary and obligatory for the customer to provide the PSU metadata for such operations.
    <br/><br/>
    As finAPI does not have direct interaction with the end-user,
    it is the client application's responsibility to provide all the necessary
    information about the end-user. This must be done by sending additional headers with every request
    triggered on behalf of the end-user.
    <br/><br/>
    At the moment, the following headers are supported by the API:<br/>
    &bull; "PSU-IP-Address" - the IP address of the user's device. It has to be an IPv4 address, as some banks cannot work
    with IPv6 addresses. If a non-IPv4 address is passed, we will replace the value with our own IPv4 address as a
    fallback.<br/>
    &bull; "PSU-Device-OS" - the user's device and/or operating system identification.<br/>
    &bull; "PSU-User-Agent" - the user's web browser or other client device identification.

    <h3 id="general-faq"><strong>FAQ</strong></h3>
    <strong>Is there a finAPI SDK?</strong>
    <br/>
    Currently we do not offer a native SDK, but there is the option to generate an SDK
    for almost any target language via OpenAPI. Use the 'Download SDK' button on this page for SDK
    generation.
    <br/>
    <br/>
    <strong>How can I enable finAPI's automatic batch update?</strong>
    <br/>
    Currently there is no way to set up the batch update via the API.
    Please contact support@finapi.io for this.
    <br/>
    <br/>
    <strong>Why do I need to keep authorizing when calling services on this page?</strong>
    <br/>
    This page is a "one-page-app". Reloading the page resets the OAuth authorization context.
    There is generally no need to reload the page, so just don't do it and your authorization will persist.
  contact:
    name: finAPI GmbH
    url: https://www.finapi.io/impressum
    email: kontakt@finapi.io
  version: 2024.32.2
servers:
- url: https://sandbox.finapi.io
  description: finAPI sandbox environment
tags:
- name: Authorization
- name: Mandator Administration
- name: TPP Certificates
- name: TPP Credentials
- name: Client Configuration
- name: Users
- name: Banks
- name: Bank Connections
- name: Accounts
- name: Transactions
- name: Pending Transactions
- name: Securities
- name: Payments
- name: Standing Orders
- name: Categories
- name: Labels
- name: Notification Rules
- name: Mocks and Tests
paths:
  /api/v2/users:
    get:
      tags:
      - Users
      summary: Get the authorized user
      description: "Get the authorized user's data. Must pass the user's access_token.\
        \ Only the authorized user can get his data, i.e. his access_token must be\
        \ used. This service returns the user's password as 'XXXXX'."
      operationId: getAuthorizedUser
      parameters:
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: Authorized user's data
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    post:
      tags:
      - Users
      summary: Create a new user
      description: "<p>Create a new user. Must pass your global (i.e. client) access_token.\
        \ </p><p>This service returns the user's password as plain text. </p><p>The\
        \ automatic update of the user's bank connections is disabled by default for\
        \ any new user. User identifiers are regarded case-insensitive by finAPI.</p><p>Please\
        \ note that finAPI generally has a restricted set of allowed characters for\
        \ input fields. You can find the allowed characters <a href = \"https://documentation.finapi.io/access/Allowed-Characters.2764767279.html\"\
        >here</a>. If a field does not explicitly specify a set of allowed characters,\
        \ then these are the characters that are allowed for the field. Some fields\
        \ may specify a different set of characters, in which case this will be documented\
        \ for the field (like for the 'id' field in this service).</p>"
      operationId: createUser
      parameters:
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: User's details
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreateParams"
        required: true
      responses:
        "201":
          description: Created user's data
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad request (for instance if the given password is too short/long)
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "422":
          description: "ENTITY_EXISTS if the given userId already exists; ILLEGAL_ENTITY_STATE\
            \ if you passed 'isAutoUpdateEnabled' = true, but the automatic update\
            \ can't be enabled for this user (as it is disabled for the client)."
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    delete:
      tags:
      - Users
      summary: Delete the authorized user
      description: "Delete the authorized user. Must pass the user's access_token.\
        \ ATTENTION: This deletes the user including all of his bank connections,\
        \ accounts, balance data and transactions! Also the user's consents will get\
        \ deleted on the bank's side. THIS PROCESS CANNOT BE UNDONE! Note that a user\
        \ cannot get deleted while any of his bank connections are currently busy\
        \ (in the process of import, update, or transaction categorization). <br/><br/>Notes:\
        \ <br/>&bull; finAPI will send a notification about the deletion of the user\
        \ to each of your clients that has a user synchronization callback URL set\
        \ in its configuration. This also includes the client that is performing this\
        \ request.<br/>&bull; If a consent will get deleted by this service, it's\
        \ not guaranteed that the consent will also get deleted on the bank's side,\
        \ as not all banks may support this. Also errors during bank consent deletion\
        \ will be ignored, so the service won't fail due to this.<br/><br/><b>ATTENTION:</b>\
        \ For the deletion of XS2A consents, additional headers should be included\
        \ in the request if the end user is involved. Please refer to the <a href='#general-user-metadata'>User\
        \ metadata</a> section under 'General Information' of the API documentation."
      operationId: deleteAuthorizedUser
      parameters:
      - name: PSU-IP-Address
        $ref: "#/components/parameters/PSU-IP-Address"
      - name: PSU-Device-OS
        $ref: "#/components/parameters/PSU-Device-OS"
      - name: PSU-User-Agent
        $ref: "#/components/parameters/PSU-User-Agent"
      - name: X-HTTP-Method-Override
        $ref: "#/components/parameters/X-HTTP-Method-Override"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: User deleted (empty response body)
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "423":
          description: "User cannot get deleted at the moment as at least one of his\
            \ bank connections is currently being imported or updated (either by the\
            \ user or by finAPI's automatic batch update), or because the categorization\
            \ of transactions is performed."
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http423ResponseExample:
                  $ref: "#/components/examples/http423ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    patch:
      tags:
      - Users
      summary: Edit the authorized user
      description: Edit the authorized user's data and settings. Must pass the user's
        access_token. Pass an empty string (but not null) to unset either the email
        or phone number. At least one field must have a non-null value in the request
        body. This service returns the user's password as 'XXXXX'.
      operationId: editAuthorizedUser
      parameters:
      - name: X-HTTP-Method-Override
        $ref: "#/components/parameters/X-HTTP-Method-Override"
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: User's details
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateParams"
        required: true
      responses:
        "200":
          description: Edited user data
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "422":
          description: The automatic update cannot be enabled
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/users/verify/{userId}:
    post:
      tags:
      - Users
      summary: Verify a user
      description: Verify a user. User verification is only required when your client
        does not have auto-verification enabled (see field 'isUserAutoVerificationEnabled'
        in Client Configuration Resource). Must pass your global (i.e. client) access_token.
        Note that finAPI regards user identifiers case-insensitive.
      operationId: verifyUser
      parameters:
      - name: userId
        in: path
        description: User's identifier
        required: true
        schema:
          type: string
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: User verified (empty response body)
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: User not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "422":
          description: User already verified
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/users/requestPasswordChange:
    post:
      tags:
      - Users
      summary: Request password change
      description: Request password change for a user. Must pass your global (i.e.
        client) access_token. Note that finAPI regards user identifiers case-insensitive.
      operationId: requestPasswordChange
      parameters:
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestPasswordChangeParams"
        required: true
      responses:
        "200":
          description: Details of change password request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PasswordChangingResource"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: User not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "422":
          description: User is not verified
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/users/executePasswordChange:
    post:
      tags:
      - Users
      summary: Execute password change
      description: "Change the password of a user. Must pass your global (i.e. client)\
        \ access_token.<br/><br/>Note: When changing the password of a user, all tokens\
        \ that have been handed out for that user (for whatever client) will be revoked!\
        \ Also note that finAPI regards user identifiers case-insensitive."
      operationId: executePasswordChange
      parameters:
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExecutePasswordChangeParams"
        required: true
      responses:
        "200":
          description: Password changed (empty response body)
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: User not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/transactions/{id}/split:
    post:
      tags:
      - Transactions
      summary: Split a transaction
      description: "Split a transaction into several logical sub-transactions. If\
        \ the given transaction is split already, all its current sub-transactions\
        \ will get deleted before the new sub-transactions will get created."
      operationId: splitTransaction
      parameters:
      - name: id
        in: path
        description: Transaction identifier
        required: true
        schema:
          type: integer
          format: int64
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: Split transactions parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SplitTransactionsParams"
        required: true
      responses:
        "200":
          description: Split transaction
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: "Transaction, category or labels not found"
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "422":
          description: "ILLEGAL_ENTITY_STATE if the transaction you are trying to\
            \ split is a sub-transaction; ILLEGAL_FIELD_VALUE if there is less than\
            \ two sub-transactions specified, or the specified sub-transactions' amounts\
            \ do not add up to the original transaction's amount"
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/transactions/{id}/restore:
    post:
      tags:
      - Transactions
      summary: Restore a transaction
      description: Restore a previously split transaction. Removes all of its sub-transactions.
      operationId: restoreTransaction
      parameters:
      - name: id
        in: path
        description: Transaction identifier
        required: true
        schema:
          type: integer
          format: int64
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: Restored transaction
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Transaction not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "422":
          description: The request transaction is a sub-transaction and can not be
            restored.
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/transactions/triggerCategorization:
    post:
      tags:
      - Transactions
      summary: Trigger categorization
      description: "Triggers finAPI's background categorization process for all uncategorized\
        \ transactions of the given bank connection(s) (or of all of the user's bank\
        \ connections, if no bank connection identifiers are passed). The service\
        \ returns as soon as the categorizations are scheduled. At this point, the\
        \ bank connections will have their 'categorizationStatus' set to 'PENDING'.\
        \ Use the service \"Get a bank connection\" or \"Get all bank connections\"\
        \ to check when the categorization has finished (this is the case when the\
        \ categorizationStatus has switched to 'READY').<br/><br/>Note that if at\
        \ least one of the target bank connections is currently locked at the time\
        \ when you call this service (i.e. the bank connection is currently being\
        \ updated, or another categorization is already scheduled for it), then no\
        \ categorization will be triggered at all and the service will respond with\
        \ HTTP code 422.<br/><br/>Please also note:<br/>&bull; finAPI's background\
        \ categorization process is executed automatically whenever you import or\
        \ update a bank connection (though in case of update, it will categorize only\
        \ the new transactions, and not re-run categorization for previously imported\
        \ transactions). This means that in general you do not have to call this service\
        \ after an import or update. Use this service only when you wish to re-run\
        \ the categorization of all existing uncategorized transactions.<br/>&bull;\
        \ if you wish to just manually assign categories to transactions, please use\
        \ the service \"Edit a transaction\" or \"Edit multiple transactions\" instead."
      operationId: triggerCategorization
      parameters:
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: Trigger categorization parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TriggerCategorizationParams"
        required: true
      responses:
        "200":
          description: Categorizations have been scheduled (empty response body)
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Given bank connection(s) not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "422":
          description: "At least one of the target bank connections is currently locked,\
            \ or there are no bank connections to trigger categorization for"
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/tppCredentials:
    get:
      tags:
      - TPP Credentials
      summary: Get all TPP credentials
      description: "Get and search all TPP credentials. Must pass the <a href='https://documentation.finapi.io/access/application-management'\
        \ target='_blank'>mandator admin client</a>'s access_token. You can set optional\
        \ search criteria to get only those TPP credentials that you are interested\
        \ in. If you do not specify any search criteria, then this service functions\
        \ as a 'get all' service."
      operationId: getAllTppCredentials
      parameters:
      - name: search
        in: query
        description: "Returns only the TPP credentials belonging to those banks whose\
          \ 'name', 'blz', or 'bic' contains the given search string (the matching\
          \ works case-insensitive). You may also pass an IBAN in this field, in which\
          \ case finAPI will try to detect the related bank(s) and regard only those\
          \ banks for the search (The IBAN may not contain spaces). If the given search\
          \ string consists of several terms (separated by whitespace), then ALL of\
          \ these terms must apply to a bank for it to get regarded for the result."
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Result page that you want to retrieve
        schema:
          minimum: 1
          type: integer
          default: 1
      - name: perPage
        in: query
        description: Maximum number of records per page. By default it's 20.
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 20
      - name: order
        in: query
        description: "Determines the order of the results. You can order the results\
          \ by 'label'. The default order for this service is 'label,asc'. The general\
          \ format is: 'property[,asc|desc]', with 'asc' being the default value."
        schema:
          type: array
          items:
            type: string
            default: "label,asc"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: Requested TPP credentials
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageableTppCredentialResources"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    post:
      tags:
      - TPP Credentials
      summary: Upload TPP credentials
      description: Upload TPP credentials for a TPP Authentication Group. Must pass
        the <a href='https://documentation.finapi.io/access/application-management'
        target='_blank'>mandator admin client</a>'s access_token.
      operationId: createTppCredential
      parameters:
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: Parameters of a new set of TPP credentials
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TppCredentialsParams"
        required: true
      responses:
        "201":
          description: Uploaded TPP credentials
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TppCredentials"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "422":
          description: UNKNOWN_ENTITY if the specified TPP authentication group does
            not exist;<br/>ILLEGAL_FIELD_VALUE if the given validity dates are invalid
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/tppCertificates:
    get:
      tags:
      - TPP Certificates
      summary: Get all TPP certificates
      description: Returns all TPP certificates that you have uploaded via 'Upload
        TPP certificate' service. Must pass the <a href='https://documentation.finapi.io/access/application-management'
        target='_blank'>mandator admin client</a>'s access_token.
      operationId: getAllCertificates
      parameters:
      - name: page
        in: query
        description: Result page that you want to retrieve
        schema:
          minimum: 1
          type: integer
          default: 1
      - name: perPage
        in: query
        description: Maximum number of records per page. By default it's 20.
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 20
      - name: order
        in: query
        description: "Determines the order of the results. You can order the results\
          \ by 'label'. The default order for this service is 'label,asc'. The general\
          \ format is: 'property[,asc|desc]', with 'asc' being the default value."
        schema:
          type: array
          items:
            type: string
            default: "label,asc"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: Requested TPP certificates
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageableTppCertificateList"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    post:
      tags:
      - TPP Certificates
      summary: Upload TPP certificate
      description: Upload a new TPP certificate. Must pass the <a href='https://documentation.finapi.io/access/application-management'
        target='_blank'>mandator admin client</a>'s access_token. QWAC certificate
        is used to verify your identity by the bank during the TLS handshake.<br/>QsealC
        certificate is used to sign the requests to the bank.
      operationId: createNewCertificate
      parameters:
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: Create new TPP certificate parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TppCertificateParams"
        required: true
      responses:
        "200":
          description: Uploaded TPP certificate
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TppCertificate"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "422":
          description: TPP certificate is invalid or expired
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/tests/mockBatchUpdate:
    post:
      tags:
      - Mocks and Tests
      summary: Mock batch update
      description: "This service can be used to mock an update of one or several bank\
        \ connections by letting you simulate finAPI's communication with a bank server.\
        \ More specifically, you can provide custom balances and transactions for\
        \ existing accounts and finAPI will import that data into the accounts as\
        \ if the data had been delivered by a real bank server during a real update.\
        \ The idea of this service is to allow you to create accounts with specific\
        \ data in them so that you can test your application in different scenarios.<br/><br/>You\
        \ can also test your application's reception and processing of push notifications\
        \ with this service, by enabling the 'triggerNotifications' flag in your request.\
        \ When this flag is enabled, finAPI will send notifications to your application\
        \ based on the notification rules that are set up for the user and on the\
        \ data you provided in the request, the same way as it works with finAPI's\
        \ real automatic batch update process.<br/><br/>Note that this service behaves\
        \ mostly like calling the bank connection update service, meaning that it\
        \ returns immediately after having asynchronously started the update process,\
        \ and also meaning that you have to check the status of the updated bank connections\
        \ and accounts to find out when the update has finished and what the result\
        \ is. As you can update several bank connections at once, this service is\
        \ closer to how finAPI's automatic batch updates work as it is to the manual\
        \ update service though. Because of this, the result of the mocked bank connection\
        \ updates will be stored in the 'lastAutoUpdate' field of the bank connection\
        \ interface and not in the 'lastManualUpdate' field. Also, just like with\
        \ the real batch update, any bank connection that you use with this service\
        \ must have a PIN stored (even though it is not actually forwarded to any\
        \ bank server).<br/><br/>Also note that this service may be called only when\
        \ the user's automatic bank connection updates are disabled, to make sure\
        \ that the mock updates cannot intervene with a real update (please see the\
        \ User field 'isAutoUpdateEnabled'). Also, it is currently not possible to\
        \ mock data for security accounts with this service, as you can only pass\
        \ transactions, but not security positions.<br/><br/>Please be aware that\
        \ you will 'mess up' the accounts when using this service, meaning that when\
        \ you perform a real update of accounts that you have previously updated with\
        \ this service, finAPI might detect inconsistencies in the data that exists\
        \ in its database and the data that is reported by the bank server, and try\
        \ to fix this with the insertion of an adjusting entry ('Zwischensaldo' transaction).\
        \ Also, new real transactions might not get imported as finAPI could match\
        \ them to mocked transactions. Also note that transactions older than 89 days\
        \ from the current date will be skipped. <b>THIS SERVICE IS MEANT FOR TESTING\
        \ PURPOSES DURING DEVELOPMENT OF YOUR APPLICATION ONLY!</b> This is why it\
        \ will work only on the sandbox or alpha environments. Calling it on the live\
        \ environment will result in <b>403 Forbidden</b>."
      operationId: mockBatchUpdate
      parameters:
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: Data for mock bank connection updates
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MockBatchUpdateParams"
        required: true
      responses:
        "200":
          description: Mock batch update has been started (empty response body)
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Bank connection or account not found; or account does not belong
            to the bank connection it is nested in.
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "422":
          description: "ILLEGAL_ENTITY_STATE if at least one of the given bank connections\
            \ is currently locked due to a running import or update, or if not all\
            \ given bank connections have a PIN stored;<br/>ILLEGAL_FIELD_VALUE if\
            \ a given transaction type is invalid, or if one of the given account\
            \ identifiers refers to a security account, or if the number of transactions\
            \ exceeds the limit of 1000."
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/tests/checkCategorization:
    post:
      tags:
      - Mocks and Tests
      summary: Check categorization
      description: "This service can be used to check the categorization for a given\
        \ set of transactions, without the need of having the transactions imported\
        \ in finAPI. You must pass the user's access_token.<br/><br/>Note that the\
        \ result of the categorization is generally the same as if the transactions\
        \ were actually imported (the service regards the user-specific categorization\
        \ rules), but there is one exception: If you pass a 'mcCode', this will also\
        \ be regarded during categorization - which is not the case when transactions\
        \ get categorized during import (because most banks do not deliver this field)."
      operationId: checkCategorization
      parameters:
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: Transactions data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckCategorizationData"
        required: true
      responses:
        "200":
          description: "List of given transaction IDs, mapped to their found category"
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategorizationCheckResults"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "422":
          description: The number of transactions exceeds the maximum limit
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/standingOrders:
    get:
      tags:
      - Standing Orders
      summary: Get standing orders
      description: Get standing orders of the user that is authorized by the access_token.
        Must pass the user's access_token.<br/><br/><br/>Web Form 2.0 customers should
        also use this endpoint to learn about the status of the standing order initiation.
        (The Standing Order ID can be found in the payload of the API response from
        the relevant Web Form 2.0 API endpoint).
      operationId: getStandingOrders
      parameters:
      - name: ids
        in: query
        description: "A comma-separated list of standing order identifiers. If specified,\
          \ then only standing orders whose identifier is matching any of the given\
          \ identifiers will be regarded. The maximum number of identifiers is 1000."
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: accountIds
        in: query
        description: "A comma-separated list of account identifiers. If specified,\
          \ then only standing orders that relate to the given account(s) will be\
          \ regarded. The maximum number of identifiers is 1000."
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: minAmount
        in: query
        description: "If specified, then only those standing orders are regarded whose\
          \ (absolute) total amount is equal or greater than the given amount will\
          \ be regarded. The value must be a positive (absolute) amount."
        required: false
        schema:
          type: number
      - name: maxAmount
        in: query
        description: "If specified, then only those standing orders are regarded whose\
          \ (absolute) total amount is equal or less than the given amount will be\
          \ regarded. Value must be a positive (absolute) amount."
        required: false
        schema:
          type: number
      - name: status
        in: query
        description: "A comma-separated list of standing order statuses. If provided,\
          \ then only standing orders whose status is matching any of the given statuses\
          \ will be returned. Allowed values: 'OPEN', 'PENDING', 'SUCCESSFUL', 'NOT_SUCCESSFUL'\
          \ or 'DISCARDED'. Example: 'OPEN,PENDING'."
        required: false
        schema:
          type: array
          items:
            type: string
            enum:
            - OPEN
            - PENDING
            - SUCCESSFUL
            - NOT_SUCCESSFUL
            - DISCARDED
      - name: page
        in: query
        description: Result page that you want to retrieve
        schema:
          minimum: 1
          type: integer
          default: 1
      - name: perPage
        in: query
        description: Maximum number of records per page. By default it's 20.
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 20
      - name: order
        in: query
        description: "Determines the order of the results. You can use the following\
          \ fields for ordering the response: 'id', 'amount', 'requestDate', 'requestCompletionDate'.\
          \ The default order for all services is 'id,asc'."
        schema:
          type: array
          items:
            type: string
            default: "id,ASC"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: List of requested standing orders
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageableStandingOrderResources"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Authentication required
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "500":
          description: Unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    post:
      tags:
      - Standing Orders
      summary: Create a standing order
      description: "To use this service PIS must be enabled by our customer support\
        \ for your client.<br/><br/>If you are unlicensed, or licensed but using finAPI’\
        s Web Form, this endpoint is not relevant to you. Please use the endpoint\
        \ <a href='?product=web_form_2.0#post-/api/webForms/standingOrder' target='_blank'>\
        \ here</a> to initiate (create and also submit) standing orders!<br/><br/>Note\
        \ that this service only creates a standing order resource in finAPI and there\
        \ is no bank communication involved.<br/>To submit the standing order to the\
        \ bank, call the 'Submit standing order' service"
      operationId: createStandingOrder
      parameters:
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: Create standing order parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateStandingOrderParams"
        required: true
      responses:
        "201":
          description: Created standing order
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandingOrder"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Given account not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "422":
          description: ILLEGAL_FIELD_VALUE:<br/> - if the amount is negative;<br/>
            - if the given start date is not in the future;<br/> - if the frequency
            has an incorrect value;<br/>ILLEGAL_ENTITY_STATE:<br/> - if the mandator
            is not configured correctly to use this service. Please contact our support;<br/>UNSUPPORTED_ORDER:<br/>
            - if none of the interfaces connected to the given account support standing
            orders; or if the given IBAN relates to a bank that is unknown or not
            available to you or none of the bank’s interfaces support standing orders
            (you may want to use the 'Get and search all banks' service to check the
            IBAN before calling this service); or if a given counterpartIban doesn't
            belong to the SEPA area; or if the given source IBAN doesn't belong to
            the SEPA area (excluding Switzerland and The United Kingdom).<br/>MISSING_FIELD:<br/>
            - if the 'bankId' parameter is required but not provided;
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/standingOrders/submit:
    post:
      tags:
      - Standing Orders
      summary: Submit standing order
      description: "To use this service PIS must be enabled by our customer support\
        \ for your client.<br/><br/>If you are unlicensed, or licensed but using finAPI’\
        s Web Form, this endpoint is not relevant to you. Please use the endpoint\
        \ <a href='?product=web_form_2.0#post-/api/webForms/standingOrder' target='_blank'>\
        \ here</a> to initiate (create and also submit) standing orders!<br/><br/>Submit\
        \ a standing order to the bank which was previously created with the 'Create\
        \ a standing order' service.<br/><br/>Before you submit the standing order,\
        \ please check that the given bank interface supports the required PIS capabilities,\
        \ otherwise the standing order could get rejected.<br/>In case the standing\
        \ order is initiated from a given IBAN, please refer to the field BankInterface.paymentCapabilities\
        \ to be sure the standing order you are creating is currently supported by\
        \ the bank.<br/><br/>Usually banks require a multi-step authentication to\
        \ authorize the standing order. In this case, and if the finAPI Web Form flow\
        \ is not used, the service will respond with HTTP code 510 and an error object\
        \ containing a multiStepAuthentication object which describes the necessary\
        \ next authentication steps. You must then retry the service call, passing\
        \ the same arguments plus an additional 'multiStepAuthentication' element.<br/>Please\
        \ refer to the description of the HTTP 510 error code below and the documentation\
        \ of the 'MultiStepAuthenticationCallback' response object for details.<br/><br/><b>ATTENTION:</b>\
        \ For XS2A interface additional headers must be included in the request if\
        \ the end user is involved. Please refer to the <a href='#general-user-metadata'>User\
        \ metadata</a> section under 'General Information' of the API documentation."
      operationId: submitStandingOrder
      parameters:
      - name: PSU-IP-Address
        $ref: "#/components/parameters/PSU-IP-Address"
      - name: PSU-Device-OS
        $ref: "#/components/parameters/PSU-Device-OS"
      - name: PSU-User-Agent
        $ref: "#/components/parameters/PSU-User-Agent"
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: Parameters for standing order submission
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubmitStandingOrderParams"
        required: true
      responses:
        "200":
          description: Submitted standing order with updated status
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandingOrder"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Given standing order not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "422":
          description: "ILLEGAL_ENTITY_STATE:<br/> - if finAPI supports only web scraping\
            \ for the bank, but web scraping is disabled for the client;<br/> - if\
            \ not all login fields required by the bank connection interface are provided;<br/>\
            \ - if the given interface doesn't exist for the account or has deprecated\
            \ status;<br/> - if the mandator is not configured correctly to use this\
            \ service. Please contact our support;<br/> - if the standing order is\
            \ in a status that does not support the given request;<br/>ILLEGAL_FIELD_VALUE:<br/>\
            \ - if 'redirectUrl' is not given, but the bank connection's interface\
            \ has the REDIRECT_APPROACH property set;<br/> - if 'redirectUrl' is given,\
            \ but the bank connection's interface doesn't have the REDIRECT_APPROACH\
            \ property set or the Web Form flow is used;<br/>UNSUPPORTED_ORDER:<br/>\
            \ - if the given interface doesn't have the required capabilities to submit\
            \ the standing order; or if the standing order relates to a bank that\
            \ is unknown or not available to you.<br/>UNSUPPORTED_FEATURE:<br/> -\
            \ if the bank rejects the standing orders because it requires a feature\
            \ that the bank does not support;<br/>BANK_SERVER_REJECTION:<br/>- if\
            \ the bank rejects the standing order for an unexpected/unknown reason;<br/>NO_EXISTING_CHALLENGE\
            \ in case the 'multiStepAuthentication.challengeResponse' field was set,\
            \ but there is no pending challenge;<br/>"
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
        "501":
          description: The bank associated with the standing order is currently not
            supported by finAPI
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http501ResponseExample:
                  $ref: "#/components/examples/http501ResponseExample"
        "510":
          description: "In case the bank requires an additional authentication by\
            \ the user. The error's 'multiStepAuthentication' field contains further\
            \ instructions. The actual MSA flow depends on the bank and may contain\
            \ following statuses:<br/><br/>TWO_STEP_PROCEDURE_REQUIRED means that\
            \ the bank has requested an SCA method selection for the user. In this\
            \ case, the service should be recalled with a chosen TSP-ID set to the\
            \ 'twoStepProcedureId' field.<br/><br/>CHALLENGE_RESPONSE_REQUIRED means\
            \ that the bank has requested a challenge code for the previously given\
            \ TSP (SCA). This status can be completed by setting the 'challengeResponse'\
            \ field.<br/><br/>REDIRECT_REQUIRED means that the user must be redirected\
            \ to the bank's website, where the authentication can be finished.<br/><br/>DECOUPLED_AUTH_REQUIRED\
            \ means that the bank has asked for the decoupled authentication. In this\
            \ case, the 'decoupledCallback' field must be set to true to complete\
            \ the authentication.<br/><br/>DECOUPLED_AUTH_IN_PROGRESS means that the\
            \ bank is waiting for the completion of the decoupled authentication by\
            \ the user. Until this is done, the service should be recalled at most\
            \ every 5 seconds with the 'decoupledCallback' field set to 'true'. Once\
            \ the decoupled authentication is completed by the user, the service returns\
            \ a successful response."
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http510ResponseExample:
                  $ref: "#/components/examples/http510ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/payments/submit:
    post:
      tags:
      - Payments
      summary: Submit payment
      description: "To use this service PIS must be enabled by our customer support\
        \ for your client.<br/><br/>If you are unlicensed, or licensed but using finAPI’\
        s Web Form, this endpoint is not relevant to you. The workflow has been simplified.\
        \ Please use the endpoint <a href='?product=web_form_2.0#tag--Payment-Initiation-Services'\
        \ target='_blank'>here</a> to initiate (create and also submit) payments (money\
        \ transfers + direct debits)!<br/><br/>Submit a payment to the bank which\
        \ was previously created with either the createMoneyTransfer or createDirectDebit\
        \ service.<br/><br/>Before you submit the payment, please check that the given\
        \ bank interface supports the required payment capabilities, otherwise the\
        \ payment could get rejected.<br/>If the account has been imported via finAPI,\
        \ then you could check the capabilities on the account level. Please refer\
        \ to the field AccountInterface.capabilities.<br/>In case the payment is initiated\
        \ from a given IBAN, please refer to the field BankInterface.paymentCapabilities\
        \ to be sure the payment type you are creating is currently supported by the\
        \ bank.<br/><br/>Usually banks require a multi-step authentication to authorize\
        \ the payment. In this case, the service will respond with HTTP code 510 and\
        \ an error object containing a multiStepAuthentication object which describes\
        \ the necessary next authentication steps. You must then retry the service\
        \ call, passing the same arguments plus an additional 'multiStepAuthentication'\
        \ element.<br/>Please refer to the description of the HTTP 510 error code\
        \ below and the documentation of the 'MultiStepAuthenticationCallback' response\
        \ object for details.<br/><br/><b>ATTENTION:</b> For XS2A interface additional\
        \ headers must be included in the request if the end user is involved. Please\
        \ refer to the <a href='#general-user-metadata'>User metadata</a> section\
        \ under 'General Information' of the API documentation."
      operationId: submitPayment
      parameters:
      - name: PSU-IP-Address
        $ref: "#/components/parameters/PSU-IP-Address"
      - name: PSU-Device-OS
        $ref: "#/components/parameters/PSU-Device-OS"
      - name: PSU-User-Agent
        $ref: "#/components/parameters/PSU-User-Agent"
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: Parameters for payment submission
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubmitPaymentParams"
        required: true
      responses:
        "200":
          description: Submitted payment with updated status
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Given payment not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "422":
          description: "ILLEGAL_ENTITY_STATE:<br/> - if finAPI supports only web scraping\
            \ for the bank, but web scraping is disabled for the client;<br/> - if\
            \ not all login fields required by the bank connection interface are provided;<br/>\
            \ - if the given interface doesn't exist for the account or has deprecated\
            \ status;<br/> - if the mandator is not configured correctly to use this\
            \ service. Please contact our support;<br/> - if the payment is in a status\
            \ that does not support the given request;<br/>ILLEGAL_FIELD_VALUE:<br/>\
            \ - if 'redirectUrl' is not given, but the bank connection's interface\
            \ has the REDIRECT_APPROACH property set;<br/> - if 'redirectUrl' is given,\
            \ but the bank connection's interface doesn't have the REDIRECT_APPROACH\
            \ property set;<br/>UNSUPPORTED_ORDER:<br/> - if the given interface doesn't\
            \ have the required capabilities to submit the payment; or if the payment\
            \ relates to a bank that is unknown or not available to you.<br/>UNSUPPORTED_FEATURE:<br/>\
            \ - if the bank rejects the payment because it requires a feature that\
            \ the bank does not support (e.g. FUTURE_DATED_PAYMENT);<br/>BANK_SERVER_REJECTION:<br/>-\
            \ if the bank rejects the payment for an unexpected/unknown reason;<br/>NO_EXISTING_CHALLENGE\
            \ in case the 'multiStepAuthentication.challengeResponse' field was set,\
            \ but there is no pending challenge;<br/>"
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
        "501":
          description: The bank associated with the payment is currently not supported
            by finAPI
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http501ResponseExample:
                  $ref: "#/components/examples/http501ResponseExample"
        "510":
          description: "In case the bank requires an additional authentication by\
            \ the user. The error's 'multiStepAuthentication' field contains further\
            \ instructions. The actual MSA flow depends on the bank and may contain\
            \ following statuses:<br/><br/>TWO_STEP_PROCEDURE_REQUIRED means that\
            \ the bank has requested an SCA method selection for the user. In this\
            \ case, the service should be recalled with a chosen TSP-ID set to the\
            \ 'twoStepProcedureId' field.<br/><br/>CHALLENGE_RESPONSE_REQUIRED means\
            \ that the bank has requested a challenge code for the previously given\
            \ TSP (SCA). This status can be completed by setting the 'challengeResponse'\
            \ field.<br/><br/>REDIRECT_REQUIRED means that the user must be redirected\
            \ to the bank's website, where the authentication can be finished.<br/><br/>DECOUPLED_AUTH_REQUIRED\
            \ means that the bank has asked for the decoupled authentication. In this\
            \ case, the 'decoupledCallback' field must be set to true to complete\
            \ the authentication.<br/><br/>DECOUPLED_AUTH_IN_PROGRESS means that the\
            \ bank is waiting for the completion of the decoupled authentication by\
            \ the user. Until this is done, the service should be recalled at most\
            \ every 5 seconds with the 'decoupledCallback' field set to 'true'. Once\
            \ the decoupled authentication is completed by the user, the service returns\
            \ a successful response."
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http510ResponseExample:
                  $ref: "#/components/examples/http510ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/payments/moneyTransfers:
    post:
      tags:
      - Payments
      summary: Create money transfer
      description: "To use this service PIS must be enabled by our customer support\
        \ for your client.<br/><br/>If you are unlicensed, or licensed but using finAPI’\
        s Web Form, this endpoint is not relevant to you. The workflow has been simplified.\
        \ Please use the endpoint <a href='?product=web_form_2.0#tag--Payment-Initiation-Services'\
        \ target='_blank'>here</a> to initiate (create and also submit) money transfers!<br/><br/>Create\
        \ a payment for a single or collective money transfer order.<br/>Note that\
        \ this service only creates a payment resource in finAPI and there is no bank\
        \ communication involved.<br/>To submit the money transfer to the bank, call\
        \ the 'Submit payment' service.<br/><br/>A collective money transfer contains\
        \ more than one order in the 'moneyTransfers' list. It is specially handled\
        \ by the bank and can be booked by the bank either as one booking for each\
        \ order, or as a single cumulative booking. The preferred booking type can\
        \ be given with the 'singleBooking' flag, but it is not guaranteed that every\
        \ bank will regard this flag."
      operationId: createMoneyTransfer
      parameters:
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: Create money transfer parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMoneyTransferParams"
        required: true
      responses:
        "201":
          description: Created payment
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Given account not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "422":
          description: ILLEGAL_FIELD_VALUE:<br/> - if the given execution date is
            invalid;<br/> - if the payment doesn't fulfill bank-specific constraints
            (see BankInterface.paymentConstraints);<br/>ILLEGAL_ENTITY_STATE:<br/>
            - if the mandator is not configured correctly to use this service. Please
            contact our support;<br/>UNSUPPORTED_ORDER:<br/>- if the request doesn't
            fit to the capabilities of any of the interfaces connected to the given
            account; or if the given IBAN relates to a bank that is unknown or not
            available to you (you may want to use the 'Get and search all banks' service
            to check the IBAN before calling this service); or if a given counterpartIban
            doesn't belong to the SEPA area; or if the given source IBAN doesn't belong
            to the SEPA area (excluding Switzerland and The United Kingdom).<br/>MISSING_FIELD:<br/>-
            if the 'bankId' parameter is required but not provided;
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/payments/directDebits:
    post:
      tags:
      - Payments
      summary: Create direct debit
      description: "To use this service PIS must be enabled by our customer support\
        \ for your client.<br/><br/>If you are unlicensed, or licensed but using finAPI’\
        s Web Form, this endpoint is not relevant to you. The workflow has been simplified.\
        \ Please use the endpoint <a href='?product=web_form_2.0#post-/api/webForms/directDebitWithAccountId'\
        \ target='_blank'>here</a> to initiate (create and also submit) direct debits!<br/><br/>Create\
        \ a payment for a single or collective direct debit order.<br/>Note that this\
        \ service only creates a payment resource in finAPI and there is no bank communication\
        \ involved.<br/>To submit the direct debit to the bank, please call the submitPayment\
        \ service afterwards.<br/>Existing direct debits can be retrieved by the getPayments\
        \ service.<br/><br/>A collective direct debit contains more than one order\
        \ in the 'directDebits' list. It is specially handled by the bank and can\
        \ be booked by the bank either as a single booking for each order or as a\
        \ single cumulative booking. The preferred booking type can be given with\
        \ the 'singleBooking' flag, but it is not guaranteed each bank will regard\
        \ this flag."
      operationId: createDirectDebit
      parameters:
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: Create direct debit parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDirectDebitParams"
        required: true
      responses:
        "201":
          description: Created payment
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Given account not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "422":
          description: ILLEGAL_FIELD_VALUE:<br/> - if the given execution date is
            in the past;<br/>ILLEGAL_ENTITY_STATE:<br/> - if the mandator is not configured
            correctly to use this service. Please contact our support;<br/>UNSUPPORTED_ORDER:<br/>
            - if the request doesn't fit to the capabilities of any of the interfaces
            connected to the given account; or if a given counterpartIban doesn't
            belong to the SEPA area; or if the given account's IBAN doesn't belong
            to the SEPA area (excluding Switzerland and The United Kingdom).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/oauth/token:
    post:
      tags:
      - Authorization
      summary: Get tokens
      description: |-
        finAPI implements the OAuth 2.0 Standard for authorizing applications and users within applications. OAuth uses the terminology of clients and users. A client represents an application that calls finAPI services. A service call might be in the context of a user of the client (e.g.: getting a user's bank connections), or outside any user context (e.g.: editing your client's configuration, or creating a new user for your client). In any case, every service call must be authorized by an access_token. This service can be used to get such an access_token, for either one of the client's users, or for the client itself. Also, this service can be used to refresh the access_token of a user that has previously requested an access_token.<br/><br/>To get a token, you must always pass a valid client identifier and client secret (=client credentials). You can get free client credentials for the sandbox <a href='https://www.finapi.io/jetzt-testen/' target='_blank'>here</a>. Alternatively, you can also contact us at <a href='mailto:support@finapi.io'>support@finapi.io</a>.<br/><br/>The authorization process is similar for both a user within a client, and for the client itself: <br/>&bull; To authorize a client (i.e. application), use <code>grant_type=client_credentials</code><br/>&bull; To authorize a user, use <code>grant_type=password</code><p><b>NOTE: The Content-Type of the request must be set to 'application/x-www-form-urlencoded'</b></p><br/>If the given parameters are valid, the service will respond with the authorization data. <br/>Here is an example of a response when authorizing a user: <br/><pre>{
           "access_token": "yvMbx_TgwdYE0hgOVb8N4ZOvxOukqfjzYOGRZcJiCjQuRGkVIBfjjV3YG4zKTGiY2aPn2cQTGaQOT8uo5uo7_QOXts1s5UBSVuRHc6a8X30RrGBTyqV9h26SUHcZPNbZ",
           "token_type": "bearer",
           "refresh_token": "0b9KjiBVlZLz7a4HshSAIcFuscStiXT1VzT5mgNYwCQ_dWctTDsaIjedAhD1LpsOFJ7x6K8Emf8M3VOQkwNFR9FHijALYSQw2UeRwAC2MvrOKwfF1dHmOq5VEVYEaGf6",
           "expires_in": 3600,
           "scope": "all"
        }</pre><br/><p>Use the returned access_token for other service calls by sending it in a 'Authorization' header, with the word 'Bearer' in front of the token. Like this:</p><pre>Authorization: Bearer yvMbx_TgwdYE0hgOVb8N4ZOvxOukqfjzYOGRZcJiCjQuRGkVIBfjjV3YG4zKTGiY2aPn2cQTGaQOT8uo5uo7_QOXts1s5UBSVuRHc6a8X30RrGBTyqV9h26SUHcZPNbZ</pre><p>By default, the access tokens have an expiration time of one hour (however, you can change this via the service PATCH /clientConfiguration). If a token has expired, then using the token for a service call will result in a HTTP code 401. To restore access you can simply get a new token (as it is described above) or use <code>grant_type=refresh_token</code> (which works for user-related tokens only). In the latter case you just have to pass the previously received <code>refresh_token</code> for the user.</p><p>If explicit user verification is required (the 'isUserAutoVerificationEnabled' flag in the client configuration is set to false, see Client Configuration) and the user that you want to authorize is not yet verified by the client (see Verify a User), then the service will respond with HTTP code 403. If the user is locked (see 'maxUserLoginAttempts' in the Client Configuration), the service will respond with HTTP code 423.</p><p>If the current role has no privileges to call a certain service (e.g. if a user tries to create a new user, or if a client tries to access user data outside of any user context), then the request will fail with the HTTP code 403.</p><p>You should use this service only when you actually need a new token. As long as a token exists and has not expired, the service will always return the same token for the same credentials. Calling this service repeatedly with the same credentials contradicts the idea behind the tokens in OAuth, and will have a negative impact on the performance of your application. So instead of retrieving the same tokens over and over with this service, you should cache the tokens and re-use them as long as they have not expired - or at least as long as you're using the same tokens repeatedly, e.g. for the time of an active user session in your application.</p>
      operationId: getToken
      parameters:
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/GetTokenParams"
        required: true
      responses:
        "200":
          description: Requested token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessToken"
        "400":
          description: "Bad user credentials, or invalid refresh_token, or unsupported\
            \ grant_type"
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Bad client credentials
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "423":
          description: User is locked
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http423ResponseExample:
                  $ref: "#/components/examples/http423ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
  /api/v2/oauth/revoke:
    post:
      tags:
      - Authorization
      summary: Revoke a token
      description: |-
        An additional endpoint for the OAuth 2.0 Standard, which allows clients to notify finAPI that a previously obtained refresh_token or access_token is no longer required. A successful request will invalidate the given token. The revocation of a particular token may also cause the revocation of related tokens and the underlying authorization grant. For token_type_hint=access_token finAPI will invalidate only the given access_token. For token_type_hint=refresh_token, finAPI will invalidate the refresh token and all access tokens based on the same authorization grant. If the token_type_hint is not defined, finAPI will revoke all access and refresh tokens (if applicable) that are based on the same authorization grant.<br/><br/>Note that the service responds with HTTP status code 200 both if the token has been revoked successfully, and if the client submitted an invalid token.<br/><br/>Note also that the client's access_token is required to authenticate the revocation.<br/><br/>Here is an example of how to revoke a user's refresh_token (and therefore also his access tokens):<pre>Authorization: Bearer {client_access_token}
        Content-Type: application/x-www-form-urlencoded
        POST /oauth/revoke
        token={refresh_token}&token_type_hint=refresh_token</pre><p><b>NOTE: The Content-Type of the request must be set to 'application/x-www-form-urlencoded'</b></p>
      operationId: revokeToken
      parameters:
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/RevokeTokenParams"
        required: true
      responses:
        "200":
          description: Token was invalidated successfully or token was invalid (empty
            response body)
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
        "400":
          description: The service does not support the revocation of the presented
            token type.
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/notificationRules:
    get:
      tags:
      - Notification Rules
      summary: Get and search all notification rules
      description: "Get notification rules of the user that is authorized by the access_token.\
        \ Must pass the user's access_token. You can set optional search criteria\
        \ to get only those notification rules that you are interested in. If you\
        \ do not specify any search criteria, then this service functions as a 'get\
        \ all' service."
      operationId: getAndSearchAllNotificationRules
      parameters:
      - name: ids
        in: query
        description: "A comma-separated list of notification rule identifiers. If\
          \ specified, then only notification rules whose identifier match any of\
          \ the given identifiers will be regarded. The maximum number of identifiers\
          \ is 1000."
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: triggerEvent
        in: query
        description: "If specified, then only notification rules with given trigger\
          \ event will be regarded."
        required: false
        schema:
          type: string
          enum:
          - NEW_ACCOUNT_BALANCE
          - NEW_TRANSACTIONS
          - BANK_LOGIN_ERROR
          - FOREIGN_MONEY_TRANSFER
          - LOW_ACCOUNT_BALANCE
          - HIGH_TRANSACTION_AMOUNT
          - CATEGORY_CASH_FLOW
          - NEW_TERMS_AND_CONDITIONS
      - name: includeDetails
        in: query
        description: "If specified, then only notification rules that include or not\
          \ include details will be regarded."
        required: false
        schema:
          type: boolean
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: List of requested notification rules
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationRuleList"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    post:
      tags:
      - Notification Rules
      summary: Create a new notification rule
      description: "Create a new notification rule for a specific user. Must pass\
        \ the user's access_token.<br/><br/>Setting up notification rules for a user\
        \ allows your client application to get notified about changes in the user's\
        \ data, e.g. when new transactions were downloaded, an account's balance has\
        \ changed, or the user's banking credentials are no longer correct. Note that\
        \ currently, this feature is implemented only for finAPI's automatic batch\
        \ update, i.e. notification rules are only relevant when the user has activated\
        \ the automatic updates (and when the automatic batch update is activated\
        \ in general for your client).<br/><br/>There are different kinds of notification\
        \ rules. The kind of a rule is depicted by the 'triggerEvent'. The trigger\
        \ event specifies what data you have to pass when creating a rule (specifically,\
        \ the contents of the 'params' field), on which events finAPI will send notifications\
        \ to your client application, as well as what data is contained in those notifications.\
        \ The specifics of the different trigger events are documented <a href='https://documentation.finapi.io/access/Push-Notifications-(Web-Hooks).2766405696.html'\
        \ target='_blank'>here</a>."
      operationId: createNotificationRule
      parameters:
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: Notification rule parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationRuleParams"
        required: true
      responses:
        "201":
          description: Created notification rule
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationRule"
        "400":
          description: Bad Request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "422":
          description: "ILLEGAL_FIELD_VALUE if the given 'triggerEvent' does not match\
            \ any of the known constants, or if the 'params' field contains illegal\
            \ parameters for the respective trigger event; ENTITY_EXISTS if such a\
            \ notification rule already exists"
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "423":
          description: Notification rules cannot get created at the moment as finAPI's
            automatic batch update is currently being executed
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http423ResponseExample:
                  $ref: "#/components/examples/http423ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    delete:
      tags:
      - Notification Rules
      summary: Delete all notification rules
      description: 'Delete all notification rules of the user that is authorized by
        the access_token. Must pass the user''s access_token. '
      operationId: deleteAllNotificationRules
      parameters:
      - name: X-HTTP-Method-Override
        $ref: "#/components/parameters/X-HTTP-Method-Override"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: List of identifiers of deleted notification rules
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdentifierList"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "423":
          description: Notification rules cannot get deleted at the moment as finAPI's
            automatic batch update is currently being executed
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http423ResponseExample:
                  $ref: "#/components/examples/http423ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/mandatorAdmin/switchApiVersion:
    post:
      tags:
      - Mandator Administration
      summary: Switch API Version
      description: Switch your client to a different version of the API. Must pass
        the <a href='https://documentation.finapi.io/access/application-management'
        target='_blank'>mandator admin client</a>'s access_token.<br/><br/>Please
        make sure to read the article on <a href='https://documentation.finapi.io/access/Upgrading-to-a-new-API-Version.3102277666.html'
        target='_blank'>Upgrading to a new API Version</a> before you use this service.
      operationId: switchApiVersion
      parameters:
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: Parameters for switching the API version
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SwitchApiVersionParams"
        required: true
      responses:
        "200":
          description: Successfully switched API version (contains a response message
            with additional details)
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/mandatorAdmin/keywordRules:
    get:
      tags:
      - Mandator Administration
      summary: Get keyword rules
      description: Returns all keyword-based categorization rules that you have defined
        for your users via the 'Create keyword rules' service.
      operationId: getKeywordRuleList
      parameters:
      - name: page
        in: query
        description: Result page that you want to retrieve
        schema:
          minimum: 1
          type: integer
          default: 1
      - name: perPage
        in: query
        description: Maximum number of records per page. By default it's 20.
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 20
      - name: order
        in: query
        description: "Determines the order of the results. You can order the results\
          \ by 'id'. The default order for this service is 'id,asc'. The general format\
          \ is: 'property[,asc|desc]', with 'asc' being the default value."
        schema:
          type: array
          items:
            type: string
            default: "id,asc"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: Requested keyword rules
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageableKeywordRuleList"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    post:
      tags:
      - Mandator Administration
      summary: Create keyword rules
      description: "This service can be used to define keyword rules for finAPI's\
        \ transaction categorization system. The transaction categorization is run\
        \ automatically whenever new transactions are imported (if enabled; see GET\
        \ /clientConfiguration, field 'isAutoCategorizationEnabled'), as well as when\
        \ you call the services 'Check categorization' or 'Trigger categorization'.\
        \ <br/><br/>A keyword rule maps a set of keywords (of a given language) to\
        \ a certain category. finAPI's categorization system will pick the category\
        \ as a candidate for any transaction that matches the given keywords' language,\
        \ and that contains at least one of the keywords in its purpose or counterpart\
        \ information. It is not guaranteed though that this candidate will actually\
        \ be applied, as there could be other categorization rules that have higher\
        \ priority or that are an even better match for the transaction. If there\
        \ are multiple keyword rules that match a transaction, finAPI will pick the\
        \ one with the highest count of matched keywords.<br/><br/>Note that the rules\
        \ that you define here will be applied to all of your users. They have higher\
        \ priority than finAPI's default categorization rules, but lower priority\
        \ than user-specific rules (User-specific rules are created implicitly whenever\
        \ a category is manually assigned to a transaction via the PATCH /transactions\
        \ services). Keyword rules have a lower priority than IBAN rules (see the\
        \ 'Create IBAN rules' service)."
      operationId: createKeywordRules
      parameters:
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: Keyword rule definitions
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeywordRulesParams"
        required: true
      responses:
        "201":
          description: Created keyword rules
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeywordRuleList"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Category not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "422":
          description: ENTITY_EXISTS if at least one of the given rules already exists;
            ILLEGAL_FIELD_VALUE if the request contains incorrect keywords.
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/mandatorAdmin/keywordRules/delete:
    post:
      tags:
      - Mandator Administration
      summary: Delete keyword rules
      description: Delete one or multiple keyword rules that you have previously created
        via the 'Create keyword rules' service.
      operationId: deleteKeywordRules
      parameters:
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: List of keyword rule identifiers. The maximum number of identifiers
          is 100.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeywordRuleIdentifiersParams"
        required: true
      responses:
        "200":
          description: List of identifiers of deleted keyword rules
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdentifierList"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Keyword rule not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/mandatorAdmin/ibanRules:
    get:
      tags:
      - Mandator Administration
      summary: Get IBAN rules
      description: Returns all IBAN-based categorization rules that you have defined
        for your users via the 'Create IBAN rules' service.
      operationId: getIbanRuleList
      parameters:
      - name: page
        in: query
        description: Result page that you want to retrieve
        schema:
          minimum: 1
          type: integer
          default: 1
      - name: perPage
        in: query
        description: Maximum number of records per page. By default it's 20.
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 20
      - name: order
        in: query
        description: "Determines the order of the results. You can order the results\
          \ by 'id'. The default order for this service is 'id,asc'. The general format\
          \ is: 'property[,asc|desc]', with 'asc' being the default value."
        schema:
          type: array
          items:
            type: string
            default: "id,asc"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: Requested IBAN rules
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageableIbanRuleList"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    post:
      tags:
      - Mandator Administration
      summary: Create IBAN rules
      description: "This service can be used to define IBAN rules for finAPI's transaction\
        \ categorization system. The transaction categorization is run automatically\
        \ whenever new transactions are imported, as well as when you call the services\
        \ 'Check categorization' or 'Trigger categorization'. <br/><br/>An IBAN rule\
        \ maps an IBAN to a certain category. finAPI's categorization system will\
        \ pick the category as a candidate for any transaction whose counterpart's\
        \ account matches the IBAN. It is not guaranteed though that this candidate\
        \ will actually be applied, as there could be other categorization rules that\
        \ have higher priority or that are an even better match for the transaction.<br/><br/>Note\
        \ that the rules that you define here will be applied to all of your users.\
        \ They have higher priority than finAPI's default categorization rules, but\
        \ lower priority than user-specific rules (User-specific rules are created\
        \ implicitly whenever a category is manually assigned to a transaction via\
        \ the PATCH /transactions services). IBAN rules have a higher priority than\
        \ keyword rules (see the 'Create keyword rules' service)."
      operationId: createIbanRules
      parameters:
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: IBAN rule definitions
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IbanRulesParams"
        required: true
      responses:
        "201":
          description: Created IBAN rules
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IbanRuleList"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Category not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "422":
          description: ENTITY_EXISTS if at least one of the given rules already exists
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/mandatorAdmin/ibanRules/delete:
    post:
      tags:
      - Mandator Administration
      summary: Delete IBAN rules
      description: Delete one or multiple IBAN rules that you have previously created
        via the 'Create IBAN rules' service.
      operationId: deleteIbanRules
      parameters:
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: List of IBAN rules identifiers. The maximum number of identifiers
          is 100.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IbanRuleIdentifiersParams"
        required: true
      responses:
        "200":
          description: List of identifiers of deleted IBAN rules
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdentifierList"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: IBAN rule not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/mandatorAdmin/deleteUsers:
    post:
      tags:
      - Mandator Administration
      summary: Delete users
      description: "Delete one or several users, which are specified by a given list\
        \ of identifiers. Must pass the <a href='https://documentation.finapi.io/access/application-management'\
        \ target='_blank'>mandator admin client</a>'s access_token. <br/><br/><b>NOTE</b>:\
        \ finAPI may fail to delete one (or several, or all) of the specified users.\
        \ A user cannot get deleted when his data is currently locked by an internal\
        \ process (for instance, update of a bank connection or transaction categorization).\
        \ The response contains the identifiers of all users that could not get deleted,\
        \ and all users that could get deleted, separated in two lists. The mandator\
        \ admin client can retry the request at a later time for the users who could\
        \ not get deleted.<br/> Note that non-existing user identifiers will be ignored\
        \ entirely, meaning that those identifiers will not appear in the response\
        \ at all."
      operationId: deleteUsers
      parameters:
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: List of user identifiers
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserIdentifiersParams"
        required: true
      responses:
        "200":
          description: List of identifiers of deleted and not deleted users
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserIdentifiersList"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/mandatorAdmin/changeClientCredentials:
    post:
      tags:
      - Mandator Administration
      summary: Change client credentials
      description: "Change the client_secret for any of your clients, including the\
        \ mandator admin client. Must pass the <a href='https://documentation.finapi.io/access/application-management'\
        \ target='_blank'>mandator admin client</a>'s access_token. <br/><br/>NOTES:<br/>&bull;\
        \ When you change a client's secret, then all of its existing access tokens\
        \ will be revoked. User access tokens are not affected.<br/>&bull; finAPI\
        \ is storing client secrets with a one-way encryption. A lost client secret\
        \ can NOT be recovered."
      operationId: changeClientCredentials
      parameters:
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: Parameters for changing client credentials
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeClientCredentialsParams"
        required: true
      responses:
        "200":
          description: Client secret successfully changed (empty response body)
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "422":
          description: The given 'clientId' is unknown or the given 'oldClientSecret'
            is incorrect
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/labels:
    get:
      tags:
      - Labels
      summary: Get and search all labels
      description: "Get labels of the user that is authorized by the access_token.\
        \ Must pass the user's access_token. You can set optional search criteria\
        \ to get only those labels that you are interested in. If you do not specify\
        \ any search criteria, then this service functions as a 'get all' service."
      operationId: getAndSearchAllLabels
      parameters:
      - name: ids
        in: query
        description: "A comma-separated list of label identifiers. If specified, then\
          \ only labels whose identifier match any of the given identifiers will be\
          \ regarded. The maximum number of identifiers is 1000."
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: search
        in: query
        description: "If specified, then only those labels will be contained in the\
          \ result whose 'name' contains the given search string (the matching works\
          \ case-insensitive). If no labels contain the search string in their name,\
          \ then the result will be an empty list. NOTE: If the given search string\
          \ consists of several terms (separated by whitespace), then ALL of these\
          \ terms must be contained in the name for a label to get included into the\
          \ result."
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Result page that you want to retrieve
        schema:
          minimum: 1
          type: integer
          default: 1
      - name: perPage
        in: query
        description: Maximum number of records per page. By default it's 20.
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 20
      - name: order
        in: query
        description: "Determines the order of the results. You can order the results\
          \ by 'id' or 'name'. The default order for all services is 'id,asc'. Since\
          \ both fields (id and name) are unique, ordering by multiple fields is pointless.\
          \ The general format is: 'property[,asc|desc]', with 'asc' being the default\
          \ value."
        schema:
          type: array
          items:
            type: string
            default: "id,ASC"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: List of requested labels
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageableLabelList"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    post:
      tags:
      - Labels
      summary: Create a new label
      description: "Create a new label for a specific user. Must pass the new label's\
        \ name and the user's access_token.<br/><br/>Users can create labels to flag\
        \ transactions (see method PATCH /transactions), with the goal of collecting\
        \ and getting an overview of all transactions of a certain 'type'. In this\
        \ sense, labels are similar to transaction categories. However, labels are\
        \ supposed to depict more of an implicit meaning of a transaction. For instance,\
        \ a user might want to assign a flag to a transaction that reminds him that\
        \ he can offset it against tax. At the same time, the category of the transactions\
        \ might be something like 'insurance', which is a more 'fact-based', or 'objective'\
        \ way of typing the transaction. Despite this semantic difference between\
        \ categories and labels, there is also the difference that a transaction can\
        \ be assigned multiple labels at the same time (while in contrast it can have\
        \ just a single category)."
      operationId: createLabel
      parameters:
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: Label's name
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LabelParams"
        required: true
      responses:
        "201":
          description: Created label
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Label"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "422":
          description: ENTITY_EXISTS if a label with the given name already exists
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    delete:
      tags:
      - Labels
      summary: Delete all labels
      description: Delete all labels of the user that is authorized by the access_token.
        Must pass the user's access_token.
      operationId: deleteAllLabels
      parameters:
      - name: X-HTTP-Method-Override
        $ref: "#/components/parameters/X-HTTP-Method-Override"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: List of identifiers of deleted labels
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdentifierList"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/categories:
    get:
      tags:
      - Categories
      summary: Get and search all categories
      description: "Get a list of all global finAPI categories as well as all custom\
        \ categories of the authorized user. Must pass the user's access_token. You\
        \ can set optional search criteria to get only those categories that you are\
        \ interested in. If you do not specify any search criteria, then this service\
        \ functions as a 'get all' service."
      operationId: getAndSearchAllCategories
      parameters:
      - name: ids
        in: query
        description: "A comma-separated list of category identifiers. If specified,\
          \ then only categories whose identifier match any of the given identifiers\
          \ will be regarded. The maximum number of identifiers is 1000."
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: search
        in: query
        description: "If specified, then only those categories will be contained in\
          \ the result whose 'name' contains the given search string (the matching\
          \ works case-insensitive). If no categories contain the search string in\
          \ their name, then the result will be an empty list. NOTE: If the given\
          \ search string consists of several terms (separated by whitespace), then\
          \ ALL of these terms must be contained in the name for a category to get\
          \ included into the result."
        required: false
        schema:
          type: string
      - name: isCustom
        in: query
        description: "If specified, then the result will contain only categories that\
          \ are either finAPI global (in case of value 'false'), or only categories\
          \ that have been created by the authorized user (in case of value 'true')."
        required: false
        schema:
          type: boolean
      - name: page
        in: query
        description: Result page that you want to retrieve.
        schema:
          minimum: 1
          type: integer
          default: 1
      - name: perPage
        in: query
        description: Maximum number of records per page. By default it's 20.
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 20
      - name: order
        in: query
        description: "Determines the order of the results. You can order the results\
          \ by 'id', 'name' and 'isCustom'. The default order is 'id,asc'. You can\
          \ also order by multiple properties. In that case the order of the parameters\
          \ passed is important. Example: '/categories?order=isCustom,desc&order=name'\
          \ will return all custom categories followed by all default categories.\
          \ Both groups are ordered ascending by name. The general format is: 'property[,asc|desc]',\
          \ with 'asc' being the default value."
        schema:
          type: array
          items:
            type: string
            default: "id,ASC"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: List of requested categories
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageableCategoryList"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    post:
      tags:
      - Categories
      summary: Create a new category
      description: "Create a new custom transaction category for the authorized user,\
        \ that can then be assigned to transactions via PATCH /transactions, and that\
        \ will also be regarded in finAPI's automatic transaction categorization process.\
        \ Must pass the user's access_token."
      operationId: createCategory
      parameters:
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: Parameters of the new category
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoryParams"
        required: true
      responses:
        "201":
          description: Created category
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
        "400":
          description: The category name is too long. The maximum length for a category
            name is 128.
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: UNKNOWN_ENTITY if the parent category does not exist.
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "422":
          description: "ILLEGAL_ENTITY_STATE if The given parentId references a sub-category\
            \ instead of a main category (Multi-level sub-categories are not supported);\
            \ <br/>ENTITY_EXISTS if a category with that name already exists.<br/>NOTE:\
            \ A category already exists means that there is another category of the\
            \ same name on the same hierarchy level.<br/>Examples:<br/>&bull; if you\
            \ want to add a sub-category 'Sub' to the main category 'Main', and 'Main'\
            \ already contains 'Sub', then the category already exists and cannot\
            \ get created.<br/>&bull; if you want to add a sub-category 'Sub' to the\
            \ main category 'Main', and some other main category contains 'Sub' (or\
            \ a main category itself is called 'Sub'), then the category can still\
            \ get created, because there is no 'Sub' in the 'Main' category<br/>&bull;\
            \ if you want to add a new main-category 'Main' and there is already a\
            \ main category with that name, then the category already exists and cannot\
            \ get created"
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    delete:
      tags:
      - Categories
      summary: Delete all categories
      description: Delete all custom categories of the user that is authorized by
        the access_token. Must pass the user's access_token. Note that this deletes
        both parent categories as well as any related sub-categories.
      operationId: deleteAllCategories
      parameters:
      - name: X-HTTP-Method-Override
        $ref: "#/components/parameters/X-HTTP-Method-Override"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: List of identifiers of deleted categories
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdentifierList"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/categories/trainCategorization:
    post:
      tags:
      - Categories
      summary: Train categorization
      description: "This service allows you to create user-specific categorization\
        \ rules (for the user that is authorized by the access_token). Pass a categorization\
        \ sample (=set of transaction data and a target category), and finAPI will\
        \ train the user's categorization rules so that similar transactions will\
        \ be categorized accordingly in future. Basically, this service behaves the\
        \ same as when assigning categories to existing transactions via the 'Edit\
        \ a transaction' service, with the difference that you can directly pass transaction\
        \ data to this service, without the need of having any transactions actually\
        \ imported in finAPI. Must pass the user's access_token."
      operationId: trainCategorization
      parameters:
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: Categorization sample
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TrainCategorizationData"
        required: true
      responses:
        "200":
          description: Categorization rules updated (empty response body)
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Category not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "422":
          description: The number of transactions exceeds the limit of 100.
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/bankConnections/update:
    post:
      tags:
      - Bank Connections
      summary: Update a bank connection
      description: "If you are unlicensed, or licensed but using finAPI’s Web Form,\
        \ this endpoint is not relevant to you. Instead, please refer to the endpoint\
        \ <a href='?product=web_form_2.0#post-/api/tasks/backgroundUpdate' target='_blank'>here</a>.<br/><br/>Update\
        \ an existing bank connection of the user that is authorized by the access_token.\
        \ Downloads and imports the current account balances and new transactions.\
        \ Note that if the bank connection has several interfaces and some of its\
        \ accounts was previously imported or updated via an interface which have\
        \ higher priority than the interface used in the current update, then balances\
        \ and transactions will not be downloaded for such accounts (The XS2A interface\
        \ has the highest priority, followed by FINTS_SERVER and finally WEB_SCRAPER).\
        \ Must pass the connection's identifier and the user's access_token. For more\
        \ information about the processes of authentication, data download and transaction\
        \ categorization, see POST /bankConnections/import. Note that supported two-step-procedures\
        \ are updated as well. It may unset the current default two-step-procedure\
        \ of the given bank connection (but only if this procedure is not supported\
        \ anymore by the bank). <br/><br/>Note that you cannot trigger an update of\
        \ a bank connection as long as there is still a previously triggered update\
        \ running.<br/><br/>For a more in-depth understanding of the update process,\
        \ please also read this page on our Access Public Documentation: <a href='https://documentation.finapi.io/access/Post-Processing-of-Bank-Account-Import%2FUpdate.2766405656.html'\
        \ target='_blank'>Post Processing of Bank Account Import/Update</a><br/><br/><b>ATTENTION:</b><ul><li>For\
        \ XS2A interface additional headers must be included in the request if the\
        \ end user is involved. Please refer to the <a href='#general-user-metadata'>User\
        \ metadata</a> section under 'General Information' of the API documentation.</li><li>Due\
        \ to bank-side changes we have been forced to limit the transactions download\
        \ range to 89 days, to reduce the risk of strong customer authentication (SCA)\
        \ requests.<br/>Now any update of a bank connection will fetch at most the\
        \ last three months of transactions per account. If the last successful update\
        \ was more than 3 months ago, an adjusting entry ('Zwischensaldo' transaction)\
        \ might be created.</li></ul>"
      operationId: updateBankConnection
      parameters:
      - name: PSU-IP-Address
        $ref: "#/components/parameters/PSU-IP-Address"
      - name: PSU-Device-OS
        $ref: "#/components/parameters/PSU-Device-OS"
      - name: PSU-User-Agent
        $ref: "#/components/parameters/PSU-User-Agent"
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: Update bank connection parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBankConnectionParams"
        required: true
      responses:
        "200":
          description: Bank connection that the update was triggered for
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BankConnection"
        "400":
          description: Bad Request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Bank connection not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "422":
          description: "MISSING_FIELD if the credentials (stored in finAPI and provided\
            \ in the request) do not contain at least one non-secret and one secret\
            \ field;<br/>ILLEGAL_FIELD_VALUE:<br/> - if any of the specified credentials\
            \ contain illegal characters;<br/> - if you tried to update a bank connection\
            \ with an invalid credential label;<br/> - if the bank connection's credentials\
            \ were tried to be changed, but the new credentials are equal to the credentials\
            \ of another existing bank connection of the same bank;<br/> - if the\
            \ given 'accountReferences' contain a wrong IBAN;<br/> - if 'redirectUrl'\
            \ is not given, but the bank connection has the REDIRECT_APPROACH property\
            \ set;<br/>ILLEGAL_ENTITY_STATE:<br/> - if finAPI supports only web scraping\
            \ for the bank, but web scraping is disabled for the client;<br/> - if\
            \ the mandator is not configured correctly to use this service. Please\
            \ contact our support;<br/>- if 'importNewAccounts' was set to true, but\
            \ the bank connection interface’s 'aisConsent' has 'supportsImportNewAccounts'\
            \ set to false;<br/>BANK_SERVER_REJECTION if the bank server responded\
            \ with an error message when finAPI tried to  retrieve the user's data.\
            \ The response's error message typically contains useful information from\
            \ the bank (like that the given login credentials were not correct or\
            \ that the connection is not activated for online banking) and may be\
            \ forwarded to the user;<br/>NO_EXISTING_CHALLENGE in case the 'multiStepAuthentication.challengeResponse'\
            \ field was set, but there is no pending challenge;<br/>INVALID_CONSENT\
            \ if the stored consent of the bank connection has already expired, or\
            \ could not be used for other reasons (e.g. because it was not sufficient\
            \ for fetching the complete transaction history). Please retry the call\
            \ to request a new consent."
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "423":
          description: Bank connection cannot get updated at the moment as it is currently
            being imported or updated (either by the user or by finAPI's automatic
            batch update).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http423ResponseExample:
                  $ref: "#/components/examples/http423ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
        "501":
          description: This bank is currently not supported by finAPI
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http501ResponseExample:
                  $ref: "#/components/examples/http501ResponseExample"
        "510":
          description: "In case the bank requires an additional authentication by\
            \ the user. The error's 'multiStepAuthentication' field contains further\
            \ instructions. The actual MSA flow depends on the bank and may contain\
            \ following statuses:<br/><br/>TWO_STEP_PROCEDURE_REQUIRED means that\
            \ the bank has requested an SCA method selection for the user. In this\
            \ case, the service should be recalled with a chosen TSP-ID set to the\
            \ 'twoStepProcedureId' field.<br/><br/>CHALLENGE_RESPONSE_REQUIRED means\
            \ that the bank has requested a challenge code for the previously given\
            \ TSP (SCA). This status can be completed by setting the 'challengeResponse'\
            \ field.<br/><br/>REDIRECT_REQUIRED means that the user must be redirected\
            \ to the bank's website, where the authentication can be finished.<br/><br/>DECOUPLED_AUTH_REQUIRED\
            \ means that the bank has asked for the decoupled authentication. In this\
            \ case, the 'decoupledCallback' field must be set to true to complete\
            \ the authentication.<br/><br/>DECOUPLED_AUTH_IN_PROGRESS means that the\
            \ bank is waiting for the completion of the decoupled authentication by\
            \ the user. Until this is done, the service should be recalled at most\
            \ every 5 seconds with the 'decoupledCallback' field set to 'true'. Once\
            \ the decoupled authentication is completed by the user, the service returns\
            \ a successful response."
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http510ResponseExample:
                  $ref: "#/components/examples/http510ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/bankConnections/removeInterface:
    post:
      tags:
      - Bank Connections
      summary: Remove an interface
      description: "Remove an interface from bank connection and from all associated\
        \ accounts in the bank connection. If a consent exists for the interface,\
        \ it will get removed on the bank's side.<br/><br/>Notes: <br/>&bull; An interface\
        \ cannot get deleted while it is in the process of import or update.<br/>&bull;\
        \ If a consent will get deleted by this service, it's not guaranteed that\
        \ the consent will also get deleted on the bank's side, as not all banks may\
        \ support this. Also errors during bank consent deletion will be ignored,\
        \ so the service won't fail due to this.<br/><br/><b>ATTENTION:</b> For the\
        \ deletion of XS2A consents, additional headers should be included in the\
        \ request if the end user is involved. Please refer to the <a href='#general-user-metadata'>User\
        \ metadata</a> section under 'General Information' of the API documentation."
      operationId: removeInterface
      parameters:
      - name: PSU-IP-Address
        $ref: "#/components/parameters/PSU-IP-Address"
      - name: PSU-Device-OS
        $ref: "#/components/parameters/PSU-Device-OS"
      - name: PSU-User-Agent
        $ref: "#/components/parameters/PSU-User-Agent"
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: Remove interface parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemoveInterfaceParams"
        required: true
      responses:
        "200":
          description: Bank connection interface removed (empty response body)
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Bank connection interface not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "423":
          description: Bank connection interface cannot be removed at the moment as
            it is currently being imported or updated (either by the user or by finAPI's
            automatic batch update).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http423ResponseExample:
                  $ref: "#/components/examples/http423ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/bankConnections/import:
    post:
      tags:
      - Bank Connections
      summary: Import a new bank connection
      description: "If you are unlicensed, or licensed but using finAPI’s Web Form,\
        \ this endpoint is not relevant to you. Instead, please refer to the endpoint\
        \ <a href='?product=web_form_2.0#post-/api/webForms/bankConnectionImport'\
        \ target='_blank'>here</a>.<br/><br/>Imports a new bank connection for a specific\
        \ user. Must pass the connection credentials and the user's access_token.\
        \ All bank accounts will get downloaded and imported with their current balances,\
        \ transactions and supported two-step-procedures (note that the amount of\
        \ available transactions may vary between banks, e.g. some banks deliver all\
        \ transactions from the past year, others only deliver the transactions from\
        \ the past three months). The balance and transactions download process runs\
        \ asynchronously, so this service may return before all balances and transactions\
        \ have been imported. Also, all downloaded transactions will be categorized\
        \ by a separate background process that runs asynchronously too. To check\
        \ the status of the balance and transactions download process as well as the\
        \ background categorization process, see the status flags that are returned\
        \ by the GET /bankConnections/&lt;id&gt; service.<br/><br/>To test the API,\
        \ you can import one of our finAPI test banks. For more details, please see\
        \ the associated <a href='https://documentation.finapi.io/access/finAPI-Test-Banks.2556264541.html'\
        \ target='_blank'>documentation</a>.<br/><br/>For a more in-depth understanding\
        \ of the import process, please also read this page on our Access Public Documentation:\
        \ <a href='https://documentation.finapi.io/access/Post-Processing-of-Bank-Account-Import%2FUpdate.2766405656.html'\
        \ target='_blank'>Post Processing of Bank Account Import/Update</a><br/><br/><b>ATTENTION:</b><ul><li>For\
        \ XS2A interface additional headers must be included in the request if the\
        \ end user is involved. Please refer to the <a href='#general-user-metadata'>User\
        \ metadata</a> section under 'General Information' of the API documentation.</li><li>Due\
        \ to bank-side changes we have been forced to limit the transactions download\
        \ range to 89 days, to reduce the risk of strong customer authentication (SCA)\
        \ requests.<br/>If you have implemented the SCA flow, please contact us, so\
        \ that we can remove this limitation from your client.</li></ul>"
      operationId: importBankConnection
      parameters:
      - name: PSU-IP-Address
        $ref: "#/components/parameters/PSU-IP-Address"
      - name: PSU-Device-OS
        $ref: "#/components/parameters/PSU-Device-OS"
      - name: PSU-User-Agent
        $ref: "#/components/parameters/PSU-User-Agent"
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: Import bank connection parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportBankConnectionParams"
        required: true
      responses:
        "201":
          description: Imported bank connection
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BankConnection"
        "400":
          description: Bad Request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "422":
          description: "UNKNOWN_ENTITY if the specified bank identifier does not exist;<br/>ENTITY_EXISTS\
            \ if such a bank connection already exists;<br/>ILLEGAL_FIELD_VALUE:<br/>\
            \ - if the given credentials do not contain a mandatory login field;<br/>\
            \ - if 'accountReferences' are not given, but the bank connection has\
            \ the DETAILED_CONSENT property set, or the given 'accountReferences'\
            \ contain a wrong IBAN;<br/> - if 'redirectUrl' is not given, but the\
            \ bank connection has the REDIRECT_APPROACH property set;<br/>ILLEGAL_ENTITY_STATE:<br/>\
            \ - if finAPI supports only web scraping for the bank, but web scraping\
            \ is disabled for the client;<br/> - if the mandator is not configured\
            \ correctly to use this service. Please contact our support;<br/>BANK_SERVER_REJECTION\
            \ if the bank server responded with an error message when finAPI tried\
            \ to retrieve the user's data. The response's error message typically\
            \ contains useful information from the bank (like that the given login\
            \ credentials were not correct or that the connection is not activated\
            \ for online banking) and may be forwarded to the user;<br/>NO_ACCOUNTS_FOR_TYPE_LIST\
            \ if none of the accounts that the bank returned matched the given account\
            \ types (or if the bank didn’t return any accounts at all);<br/>NO_EXISTING_CHALLENGE\
            \ in case the 'multiStepAuthentication.challengeResponse' field was set,\
            \ but there is no pending challenge;<br/>"
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
        "501":
          description: This bank is currently not supported by finAPI
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http501ResponseExample:
                  $ref: "#/components/examples/http501ResponseExample"
        "510":
          description: "In case the bank requires an additional authentication by\
            \ the user. The error's 'multiStepAuthentication' field contains further\
            \ instructions. The actual MSA flow depends on the bank and may contain\
            \ following statuses:<br/><br/>TWO_STEP_PROCEDURE_REQUIRED means that\
            \ the bank has requested an SCA method selection for the user. In this\
            \ case, the service should be recalled with a chosen TSP-ID set to the\
            \ 'twoStepProcedureId' field.<br/><br/>CHALLENGE_RESPONSE_REQUIRED means\
            \ that the bank has requested a challenge code for the previously given\
            \ TSP (SCA). This status can be completed by setting the 'challengeResponse'\
            \ field.<br/><br/>REDIRECT_REQUIRED means that the user must be redirected\
            \ to the bank's website, where the authentication can be finished.<br/><br/>DECOUPLED_AUTH_REQUIRED\
            \ means that the bank has asked for the decoupled authentication. In this\
            \ case, the 'decoupledCallback' field must be set to true to complete\
            \ the authentication.<br/><br/>DECOUPLED_AUTH_IN_PROGRESS means that the\
            \ bank is waiting for the completion of the decoupled authentication by\
            \ the user. Until this is done, the service should be recalled at most\
            \ every 5 seconds with the 'decoupledCallback' field set to 'true'. Once\
            \ the decoupled authentication is completed by the user, the service returns\
            \ a successful response."
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http510ResponseExample:
                  $ref: "#/components/examples/http510ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/bankConnections/connectInterface:
    post:
      tags:
      - Bank Connections
      summary: Connect a new interface
      description: "If you are unlicensed, or licensed but using finAPI’s Web Form,\
        \ this endpoint is not relevant to you. Instead, please refer to the endpoint\
        \ <a href='?product=web_form_2.0#post-/api/tasks/backgroundUpdate' target='_blank'>here</a>.<br/><br/>Connects\
        \ a new interface to an existing bank connection for a specific user. Must\
        \ pass the connection credentials and the user's access_token. All bank accounts\
        \ will get downloaded and imported with their current balances, transactions\
        \ and supported two-step-procedures (note that the amount of available transactions\
        \ may vary between banks, e.g. some banks deliver all transactions from the\
        \ past year, others only deliver the transactions from the past three months).\
        \ The balance and transactions download process runs asynchronously, so this\
        \ service may return before all balances and transactions have been imported.\
        \ Also, all downloaded transactions will be categorized by a separate background\
        \ process that runs asynchronously too. To check the status of the balance\
        \ and transactions download process as well as the background categorization\
        \ process, see the status flags that are returned by the GET /bankConnections/&lt;id&gt;\
        \ service.<br/><br/><b>ATTENTION:</b><ul><li>For XS2A interface additional\
        \ headers must be included in the request if the end user is involved. Please\
        \ refer to the <a href='#general-user-metadata'>User metadata</a> section\
        \ under 'General Information' of the API documentation.</li><li>Due to bank-side\
        \ changes we have been forced to limit the transactions download range to\
        \ 89 days, to reduce the risk of strong customer authentication (SCA) requests.<br/>If\
        \ you have implemented the SCA flow, please contact us, so that we can remove\
        \ this limitation from your client.</li></ul>"
      operationId: connectInterface
      parameters:
      - name: PSU-IP-Address
        $ref: "#/components/parameters/PSU-IP-Address"
      - name: PSU-Device-OS
        $ref: "#/components/parameters/PSU-Device-OS"
      - name: PSU-User-Agent
        $ref: "#/components/parameters/PSU-User-Agent"
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: Connect interface parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConnectInterfaceParams"
        required: true
      responses:
        "200":
          description: Bank connection with the new interface
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BankConnection"
        "400":
          description: Bad Request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "422":
          description: "UNKNOWN_ENTITY:<br/> - if the specified bank connection identifier\
            \ does not exist;<br/> - if the given source interface does not exist\
            \ for the given bank connection;<br/>ILLEGAL_FIELD_VALUE:<br/> - if the\
            \ given credentials do not contain a mandatory login field;<br/> - if\
            \ 'accountReferences' are not given, but the bank connection has the DETAILED_CONSENT\
            \ property set, or the given 'accountReferences' contain a wrong IBAN;<br/>\
            \ - if 'redirectUrl' is not given, but the bank connection has the REDIRECT_APPROACH\
            \ property set;<br/>ENTITY_EXISTS if such a bank connection interface\
            \ already exists;<br/>ILLEGAL_ENTITY_STATE:<br/> - if finAPI supports\
            \ only web scraping for the bank, but web scraping is disabled for the\
            \ client;<br/> - if the mandator is not configured correctly to use this\
            \ service. Please contact our support;<br/>BANK_SERVER_REJECTION if the\
            \ bank server responded with an error message when finAPI tried to retrieve\
            \ the user's data. The response's error message typically contains useful\
            \ information from the bank (like that the given login credentials were\
            \ not correct or that the connection is not activated for online banking)\
            \ and may be forwarded to the user;<br/>NO_ACCOUNTS_FOR_TYPE_LIST if none\
            \ of the accounts that the bank returned matched the given account types\
            \ (or if the bank didn't return any accounts at all);<br/>NO_EXISTING_CHALLENGE\
            \ in case the 'multiStepAuthentication.challengeResponse' field was set,\
            \ but there is no pending challenge;<br/>LOGIN_FIELDS_MISMATCH if the\
            \ source interface is given, but its login fields differ to the main interface;<br/>MISSING_CREDENTIALS\
            \ if not all login fields of the source interface have stored values;"
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "423":
          description: An interface cannot get connected at the moment as the related
            bank connection is currently being imported or updated (either by the
            user or by finAPI's automatic batch update).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http423ResponseExample:
                  $ref: "#/components/examples/http423ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
        "501":
          description: This bank is currently not supported by finAPI
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http501ResponseExample:
                  $ref: "#/components/examples/http501ResponseExample"
        "510":
          description: "In case the bank requires an additional authentication by\
            \ the user. The error's 'multiStepAuthentication' field contains further\
            \ instructions. The actual MSA flow depends on the bank and may contain\
            \ following statuses:<br/><br/>TWO_STEP_PROCEDURE_REQUIRED means that\
            \ the bank has requested an SCA method selection for the user. In this\
            \ case, the service should be recalled with a chosen TSP-ID set to the\
            \ 'twoStepProcedureId' field.<br/><br/>CHALLENGE_RESPONSE_REQUIRED means\
            \ that the bank has requested a challenge code for the previously given\
            \ TSP (SCA). This status can be completed by setting the 'challengeResponse'\
            \ field.<br/><br/>REDIRECT_REQUIRED means that the user must be redirected\
            \ to the bank's website, where the authentication can be finished.<br/><br/>DECOUPLED_AUTH_REQUIRED\
            \ means that the bank has asked for the decoupled authentication. In this\
            \ case, the 'decoupledCallback' field must be set to true to complete\
            \ the authentication.<br/><br/>DECOUPLED_AUTH_IN_PROGRESS means that the\
            \ bank is waiting for the completion of the decoupled authentication by\
            \ the user. Until this is done, the service should be recalled at most\
            \ every 5 seconds with the 'decoupledCallback' field set to 'true'. Once\
            \ the decoupled authentication is completed by the user, the service returns\
            \ a successful response."
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http510ResponseExample:
                  $ref: "#/components/examples/http510ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/transactions:
    get:
      tags:
      - Transactions
      summary: Get and search all transactions
      description: "Get transactions of the user that is authorized by the access_token.\
        \ Must pass the user's access_token. You can set optional search criteria\
        \ to get only those transactions that you are interested in. If you do not\
        \ specify any search criteria, then this service functions as a 'get all'\
        \ service."
      operationId: getAndSearchAllTransactions
      parameters:
      - name: ids
        in: query
        description: "A comma-separated list of transaction identifiers. If specified,\
          \ then only transactions whose identifier match any of the given identifiers\
          \ will be regarded. The maximum number of identifiers is 1000."
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: view
        in: query
        description: "This parameter defines finAPI's logical view on the transactions\
          \ when querying them: 'bankView' regards only the original transactions\
          \ as they were received from the bank, without considering how the transactions\
          \ might have gotten split by the user (see POST /transactions/&lt;id&gt;/split).\
          \ This means that if a transaction is split into logical sub-transactions,\
          \ then the service will still regard only the original transaction, and\
          \ NOT the logical sub-transactions in its processing (though for convenience,\
          \ the transactions will have the data of their sub-transactions included\
          \ in the response). 'userView' by contrast regards the transactions as they\
          \ exist for the user. For transactions that have not been split into logical\
          \ sub-transactions, there is no difference to the \"bankView\". But for\
          \ transaction that have been split into logical sub-transactions, the service\
          \ will ONLY regard these sub-transactions, and not the originally received\
          \ transaction (though for convenience, the sub-transactions will have the\
          \ identifier of their original transaction included in the response)."
        required: true
        schema:
          type: string
          enum:
          - bankView
          - userView
        example: userView
      - name: search
        in: query
        description: "If specified, then only those transactions will be contained\
          \ in the result whose 'purpose', 'endToEndReference', or one of the counterpart\
          \ fields ('counterpart', 'counterpartAccountNumber', 'counterpartIban',\
          \ 'counterpartBlz', 'counterpartBic', 'mandateReference', 'customerReference',\
          \ 'creditorId', or 'debitorId') contain the given search string (the matching\
          \ works case-insensitive). If no transactions contain the search string\
          \ in any of these fields, then the result will be an empty list. NOTE: If\
          \ the given search string consists of several terms (separated by whitespace),\
          \ then ALL of these terms must be contained in the searched fields for a\
          \ transaction to get included into the result."
        required: false
        schema:
          type: string
      - name: counterpart
        in: query
        description: "If specified, then only those transactions will be contained\
          \ in the result whose counterpart fields ('counterpart', 'counterpartAccountNumber',\
          \ 'counterpartIban', 'counterpartBlz', 'counterpartBic', 'mandateReference',\
          \ 'customerReference', 'creditorId', or 'debitorId') contain the given search\
          \ string (the matching works case-insensitive). If no transactions contain\
          \ the search string in any of the counterpart fields, then the result will\
          \ be an empty list. NOTE: If the given search string consists of several\
          \ terms (separated by whitespace), then ALL of these terms must be contained\
          \ in the searched fields for a transaction to get included into the result."
        required: false
        schema:
          type: string
      - name: purpose
        in: query
        description: "If specified, then only those transactions will be contained\
          \ in the result whose purpose field contains the given search string (the\
          \ matching works case-insensitive). If no transactions contain the search\
          \ string in the purpose field, then the result will be an empty list. NOTE:\
          \ If the given search string consists of several terms (separated by whitespace),\
          \ then ALL of these terms must be contained in the purpose for a transaction\
          \ to get included into the result."
        required: false
        schema:
          type: string
      - name: accountIds
        in: query
        description: "A comma-separated list of account identifiers. If specified,\
          \ then only transactions that relate to the given accounts will be regarded.\
          \ If not specified, then all accounts will be regarded."
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: minBankBookingDate
        in: query
        description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Lower bound for a\
          \ transaction's booking date as returned by the bank (= original booking\
          \ date), e.g. '2016-01-01'. If specified, then only transactions whose 'bankBookingDate'\
          \ is equal to or later than the given date will be regarded."
        required: false
        schema:
          type: string
          format: date
      - name: maxBankBookingDate
        in: query
        description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Upper bound for a\
          \ transaction's booking date as returned by the bank (= original booking\
          \ date), e.g. '2016-01-01'. If specified, then only transactions whose 'bankBookingDate'\
          \ is equal to or earlier than the given date will be regarded."
        required: false
        schema:
          type: string
          format: date
      - name: minFinapiBookingDate
        in: query
        description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Lower bound for a\
          \ transaction's booking date as set by finAPI, e.g. '2016-01-01'. For details\
          \ about the meaning of the finAPI booking date, please see the field's documentation\
          \ in the service's response."
        required: false
        schema:
          type: string
          format: date
      - name: maxFinapiBookingDate
        in: query
        description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Upper bound for a\
          \ transaction's booking date as set by finAPI, e.g. '2016-01-01'. For details\
          \ about the meaning of the finAPI booking date, please see the field's documentation\
          \ in the service's response."
        required: false
        schema:
          type: string
          format: date
      - name: minAmount
        in: query
        description: "If specified, then only transactions whose amount is equal to\
          \ or greater than the given amount will be regarded. Can contain a positive\
          \ or negative number with at most two decimal places. Examples: -300.12,\
          \ or 90.95"
        required: false
        schema:
          type: number
      - name: maxAmount
        in: query
        description: "If specified, then only transactions whose amount is equal to\
          \ or less than the given amount will be regarded. Can contain a positive\
          \ or negative number with at most two decimal places. Examples: -300.12,\
          \ or 90.95"
        required: false
        schema:
          type: number
      - name: direction
        in: query
        description: "If specified, then only transactions with the given direction(s)\
          \ will be regarded. Use 'income' for regarding only received payments (amount\
          \ >= 0), 'spending' for regarding only outgoing payments (amount < 0), or\
          \ 'all' to regard both directions. If not specified, the direction defaults\
          \ to 'all'."
        required: false
        schema:
          type: string
          default: all
          enum:
          - all
          - income
          - spending
      - name: labelIds
        in: query
        description: "A comma-separated list of label identifiers. If specified, then\
          \ only transactions that  have been marked with at least one of the given\
          \ labels will be contained in the result."
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: categoryIds
        in: query
        description: "A comma-separated list of category identifiers. If specified,\
          \ then the result will contain only transactions whose category is either\
          \ one of the target categories, or - but only if the 'includeChildCategories'\
          \ flag is set to 'true' - whose category is a sub-category of one of the\
          \ target categories. To include transactions without any category, pass\
          \ the value '0' as the category ID.<br/><br/>NOTE: If your client is restricted\
          \ to certain categories (see GET /clientConfiguration, field 'categoryRestrictions'),\
          \ then you may only specify categories that match your restrictions. Alternatively,\
          \ you can leave this field unset, in which case finAPI will automatically\
          \ populate this field with all categories that are defined in your restrictions."
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: includeChildCategories
        in: query
        description: "This flag controls how the 'categoryIds' are handled. If set\
          \ to 'true', then all transactions with the target categories, as well as\
          \ all transactions with any of their sub-categories will be regarded. If\
          \ set to 'false', then sub-categories of a category are excluded and only\
          \ those transactions are regarded whose category matches exactly the target\
          \ category. The default value for this flag is 'true'.<br/><br/>Note that\
          \ this field has an effect independent of whether you pass the 'categoryIds'\
          \ yourself, or whether the 'categoryIds' are populated automatically based\
          \ on your client's category restrictions (see GET /clientConfiguration,\
          \ field 'categoryRestrictions')."
        required: false
        schema:
          type: boolean
          default: true
      - name: isNew
        in: query
        description: "If specified, then only transactions that have their 'isNew'\
          \ flag set to true/false will be regarded."
        required: false
        schema:
          type: boolean
      - name: isPotentialDuplicate
        in: query
        description: "If specified, then only transactions that have their 'isPotentialDuplicate'\
          \ flag set to true/false will be regarded."
        required: false
        schema:
          type: boolean
      - name: isAdjustingEntry
        in: query
        description: "If specified, then only transactions that have their 'isAdjustingEntry'\
          \ flag set to true/false will be regarded."
        required: false
        schema:
          type: boolean
      - name: minImportDate
        in: query
        description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Lower bound for a\
          \ transaction's import date, e.g. '2016-01-01'. If specified, then only\
          \ transactions whose 'importDate' is equal to or later than the given date\
          \ will be regarded."
        required: false
        schema:
          type: string
          format: date
      - name: maxImportDate
        in: query
        description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Upper bound for a\
          \ transaction's import date, e.g. '2016-01-01'. If specified, then only\
          \ transactions whose 'importDate' is equal to or earlier than the given\
          \ date will be regarded."
        required: false
        schema:
          type: string
          format: date
      - name: page
        in: query
        description: Result page that you want to retrieve.
        schema:
          minimum: 1
          type: integer
          default: 1
      - name: perPage
        in: query
        description: Maximum number of records per page. By default it's 20.
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 20
      - name: order
        in: query
        description: "Determines the order of the results. You can use the following\
          \ fields for ordering the response: 'id', 'parentId', 'accountId', 'valueDate',\
          \ 'bankBookingDate', 'finapiBookingDate', 'amount', 'purpose', 'counterpartName',\
          \ 'counterpartAccountNumber', 'counterpartIban', 'counterpartBlz', 'counterpartBic',\
          \ 'type', 'primanota', 'category.id', 'category.name', 'isPotentialDuplicate',\
          \ 'isNew' and 'importDate'. The default order for all services is 'id,asc'.\
          \ You can also order by multiple properties. In that case the order of the\
          \ parameters passed is important. Example: '/transactions?order=finapiBookingDate,desc&order=counterpartName'\
          \ will return the latest transactions first. If there are more transactions\
          \ on the same day, then these transactions are ordered by the counterpart\
          \ name (ascending). The general format is: 'property[,asc|desc]', with 'asc'\
          \ being the default value."
        schema:
          type: array
          items:
            type: string
            default: "id,ASC"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: List of requested transactions
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageableTransactionList"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    delete:
      tags:
      - Transactions
      summary: Delete all transactions
      description: "Delete a set, or the entirety, of transactions of the currently\
        \ authorized user."
      operationId: deleteAllTransactions
      parameters:
      - name: maxDeletionDate
        in: query
        description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>If specified, then\
          \ only those transactions are being deleted whose 'finapiBookingDate' is\
          \ equal to or earlier to the given date. The date may not be in future.\
          \ If not specified, then no date limitation will be in place for the deletion."
        required: false
        schema:
          type: string
          format: date
      - name: minImportDate
        in: query
        description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>If specified, then\
          \ only those transactions are being deleted whose 'importDate' is later\
          \ than or equal to the given date. The date may not be in future. This is\
          \ useful e.g. if a bank returns incorrect transactions and then fixes that\
          \ issue. Then you could put the date when the error was first observed as\
          \ 'minImportDate'. This would lead to deletion of all transactions after\
          \ the issue was introduced and allow finAPI to refetch them from scratch.\
          \ This only works if safeMode is set to false and 'rememberDeletion' is\
          \ undefined or set to false. You also can not use this parameter alongside\
          \ 'maxDeletionDate'."
        required: false
        schema:
          type: string
          format: date
      - name: accountIds
        in: query
        description: "A comma-separated list of account identifiers. If specified,\
          \ then only transactions whose account's identifier is included in this\
          \ list will be get deleted. The maximum number of identifiers is 1000."
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: safeMode
        in: query
        description: "When passing 'true', then only those transactions are being\
          \ deleted where at least one of the following holds true: <br/>1. The transaction\
          \ belongs to an account of a test bank <br/>2. The transaction's 'potentialDuplicate'\
          \ flag is set to TRUE<br/>3. The transaction is an adjusting entry ('Zwischensaldo'\
          \ transaction) that was added by finAPI<br/> When passing 'false', then\
          \ finAPI will delete transactions independent of these characteristics.\
          \ The default value for this parameter is 'true'."
        required: false
        schema:
          type: boolean
          default: true
      - name: rememberDeletion
        in: query
        description: "When passing 'true', then finAPI will make sure to not re-import\
          \ deleted transactions on future account updates. When 'false', then deleted\
          \ transactions might be re-imported. Default value for this parameter is\
          \ 'false'."
        required: false
        schema:
          type: boolean
          default: false
      - name: X-HTTP-Method-Override
        $ref: "#/components/parameters/X-HTTP-Method-Override"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: List of identifiers of all deleted transactions
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdentifierList"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    patch:
      tags:
      - Transactions
      summary: Edit multiple transactions
      description: "Edit one or multiple transactions. You can edit the following\
        \ fields: 'isNew=true|false' and/or 'isPotentialDuplicate=false' and/or 'categoryId=&lt;id&gt;'\
        \ and/or 'labelIds=[&lt;ids&gt;]'. To clear the category of the given transactions\
        \ (so that they are no longer categorized), pass the value '0' as the categoryId.\
        \ To clear the labels of the given transactions, pass an empty array of label\
        \ identifiers: '[]'. The parameters 'categoryId' and 'labelIds' are forbidden\
        \ if 'ids' is NOT set (i.e. you cannot update the category or labels for ALL\
        \ transactions). The result is a list of identifiers of only those transactions\
        \ that have changed as a result of this service call."
      operationId: editMultipleTransactions
      parameters:
      - name: X-HTTP-Method-Override
        $ref: "#/components/parameters/X-HTTP-Method-Override"
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: Update transactions parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMultipleTransactionsParams"
        required: true
      responses:
        "200":
          description: List of identifiers of all updated transactions
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdentifierList"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Category or labels not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "422":
          description: If 'isPotentialDuplicate' is set to 'true' (only 'false' is
            allowed)
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/transactions/{id}:
    get:
      tags:
      - Transactions
      summary: Get a transaction
      description: Get a single transaction of the user that is authorized by the
        access_token. Must pass the transaction's identifier and the user's access_token.
      operationId: getTransaction
      parameters:
      - name: id
        in: path
        description: Identifier of transaction
        required: true
        schema:
          type: integer
          format: int64
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: Requested transaction
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Transaction not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    delete:
      tags:
      - Transactions
      summary: Delete a transaction
      description: Delete a single transaction of the user that is authorized by the
        access_token.<br/><br/> A transaction can only get deleted if at least one
        of the following holds true:<br/>1. The transaction belongs to an account
        of a test bank <br/>2. The transaction's 'potentialDuplicate' flag is set
        to TRUE<br/>3. The transaction is an adjusting entry ('Zwischensaldo' transaction)
        that was added by finAPI<br/><br/>Note that the 'Delete all transactions'
        service has additional functionality and allows you to delete transactions
        that you cannot delete with this service.
      operationId: deleteTransaction
      parameters:
      - name: id
        in: path
        description: Identifier of transaction
        required: true
        schema:
          type: integer
          format: int64
      - name: X-HTTP-Method-Override
        $ref: "#/components/parameters/X-HTTP-Method-Override"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: Transaction deleted (empty response body)
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Transaction not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "422":
          description: Transaction cannot get deleted
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    patch:
      tags:
      - Transactions
      summary: Edit a transaction
      description: "Change a transaction's fields. You can change the following fields:\
        \ 'isNew=true|false' and/or 'isPotentialDuplicate=false' and/or 'categoryId=&lt;id&gt;'\
        \ and/or 'labelIds=[&lt;ids&gt;]'. To clear a transaction's category (so that\
        \ it is no longer categorized), pass the value '0' as the categoryId. To clear\
        \ the labels of the given transaction, pass an empty array of label identifiers:\
        \ '[]'."
      operationId: editTransaction
      parameters:
      - name: id
        in: path
        description: Identifier of transaction
        required: true
        schema:
          type: integer
          format: int64
      - name: X-HTTP-Method-Override
        $ref: "#/components/parameters/X-HTTP-Method-Override"
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: Update transactions parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTransactionsParams"
        required: true
      responses:
        "200":
          description: Edited transaction
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: "Transaction, category or labels not found"
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "422":
          description: If 'isPotentialDuplicate' is set to 'true' (only 'false' is
            allowed)
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/tppCredentials/{id}:
    get:
      tags:
      - TPP Credentials
      summary: Get a set of TPP credentials
      description: Get a single set of TPP credentials by its id. Must pass the <a
        href='https://documentation.finapi.io/access/application-management' target='_blank'>mandator
        admin client</a>'s access_token.
      operationId: getTppCredential
      parameters:
      - name: id
        in: path
        description: Id of the requested TPP credentials
        required: true
        schema:
          type: integer
          format: int64
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: Requested TPP credentials
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TppCredentials"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: TPP credentials not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    delete:
      tags:
      - TPP Credentials
      summary: Delete a set of TPP credentials
      description: Delete a single set of TPP credentials by its id. Must pass the
        <a href='https://documentation.finapi.io/access/application-management' target='_blank'>mandator
        admin client</a>'s access_token.
      operationId: deleteTppCredential
      parameters:
      - name: id
        in: path
        description: Id of the TPP credentials to delete
        required: true
        schema:
          type: integer
          format: int64
      - name: X-HTTP-Method-Override
        $ref: "#/components/parameters/X-HTTP-Method-Override"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: TPP credentials deleted (empty response body)
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: TPP credentials not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    patch:
      tags:
      - TPP Credentials
      summary: Edit a set of TPP credentials
      description: Edit TPP credentials data. Must pass the <a href='https://documentation.finapi.io/access/application-management'
        target='_blank'>mandator admin client</a>'s access_token.
      operationId: editTppCredential
      parameters:
      - name: id
        in: path
        description: Id of the TPP credentials to edit
        required: true
        schema:
          type: integer
          format: int64
      - name: X-HTTP-Method-Override
        $ref: "#/components/parameters/X-HTTP-Method-Override"
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: New TPP credentials parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditTppCredentialParams"
        required: true
      responses:
        "200":
          description: Edited TPP credentials
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TppCredentials"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: TPP credentials not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "422":
          description: UNKNOWN_ENTITY if the specified TPP authentication group does
            not exist;<br/>ILLEGAL_FIELD_VALUE if the given validity dates are invalid
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/labels/{id}:
    get:
      tags:
      - Labels
      summary: Get a label
      description: Get a single label of the user that is authorized by the access_token.
        Must pass the label's identifier and the user's access_token.
      operationId: getLabel
      parameters:
      - name: id
        in: path
        description: Identifier of requested label
        required: true
        schema:
          type: integer
          format: int64
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: Requested label
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Label"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Label not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    delete:
      tags:
      - Labels
      summary: Delete a label
      description: Delete a single label of the user that is authorized by the access_token.
        Must pass the label's identifier and the user's access_token.
      operationId: deleteLabel
      parameters:
      - name: id
        in: path
        description: Identifier of the label to delete
        required: true
        schema:
          type: integer
          format: int64
      - name: X-HTTP-Method-Override
        $ref: "#/components/parameters/X-HTTP-Method-Override"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: Label deleted (empty response body)
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Label not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    patch:
      tags:
      - Labels
      summary: Edit a label
      description: "Change the name of a label of the user that is authorized by the\
        \ access_token. Must pass the label's identifier, the label's new name and\
        \ the user's access_token."
      operationId: editLabel
      parameters:
      - name: id
        in: path
        description: Label's identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: X-HTTP-Method-Override
        $ref: "#/components/parameters/X-HTTP-Method-Override"
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: Label's new name
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LabelParams"
        required: true
      responses:
        "200":
          description: Edited label
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Label"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Label not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "422":
          description: ENTITY_EXISTS if a label with the given name already exists
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/clientConfiguration:
    get:
      tags:
      - Client Configuration
      summary: Get client configuration
      description: Get your client's configuration. Must pass your global (i.e. client)
        access_token.
      operationId: getClientConfiguration
      parameters:
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: Current client configuration
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientConfiguration"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    patch:
      tags:
      - Client Configuration
      summary: Edit client configuration
      description: "Edit your client's configuration. Must pass your global (i.e.\
        \ client) access_token.<br/><br/> <b>NOTE</b>: When token validity periods\
        \ are changed, this only applies to newly requested tokens, and does not change\
        \ the expiration time of already existing tokens."
      operationId: editClientConfiguration
      parameters:
      - name: X-HTTP-Method-Override
        $ref: "#/components/parameters/X-HTTP-Method-Override"
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: Client configuration parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClientConfigurationParams"
        required: true
      responses:
        "200":
          description: New client configuration
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientConfiguration"
        "400":
          description: Bad request (e.g. invalid callback URL)
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/categories/{id}:
    get:
      tags:
      - Categories
      summary: Get a category
      description: Get a single category that is either a global finAPI category or
        a custom category of the authorized user. Must pass the category's identifier
        and the user's access_token.
      operationId: getCategory
      parameters:
      - name: id
        in: path
        description: Category identifier
        required: true
        schema:
          type: integer
          format: int64
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: Requested category
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Category not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    delete:
      tags:
      - Categories
      summary: Delete a category
      description: "Delete a single category of the user that is authorized by the\
        \ access_token. Must pass the user's access_token. Note that you can only\
        \ delete user-custom categories (category's where the 'isCustom' flag is true).\
        \ Also note that when deleting a parent category, all its sub-categories will\
        \ be deleted as well."
      operationId: deleteCategory
      parameters:
      - name: id
        in: path
        description: Category identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: X-HTTP-Method-Override
        $ref: "#/components/parameters/X-HTTP-Method-Override"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: Category was deleted successfully (empty response body)
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Category not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "422":
          description: Category cannot be deleted
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    patch:
      tags:
      - Categories
      summary: Edit a category
      description: Change the name of a custom transaction category belonging to the
        authorized user. Must pass the user's access_token.
      operationId: editCategory
      parameters:
      - name: id
        in: path
        description: Identifier of the category to edit
        required: true
        schema:
          type: integer
          format: int64
      - name: X-HTTP-Method-Override
        $ref: "#/components/parameters/X-HTTP-Method-Override"
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: New category name
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditCategoryParams"
        required: true
      responses:
        "200":
          description: Edited transaction category
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Category not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "422":
          description: Category cannot be edited
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/bankConnections/{id}:
    get:
      tags:
      - Bank Connections
      summary: Get a bank connection
      description: Get a single bank connection of the user that is authorized by
        the access_token. Must pass the connection's identifier and the user's access_token.<br/>Web
        Form 2.0 customers should also use this endpoint to learn about the status
        of the bank connection (The bank connection ID can be found in the payload
        of the API response from the relevant Web Form 2.0 API endpoint).
      operationId: getBankConnection
      parameters:
      - name: id
        in: path
        description: Identifier of requested bank connection
        required: true
        schema:
          type: integer
          format: int64
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: Requested bank connection
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BankConnection"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Bank connection not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    delete:
      tags:
      - Bank Connections
      summary: Delete a bank connection
      description: "Delete a single bank connection of the user that is authorized\
        \ by the access_token, including all of its accounts and their transactions\
        \ and balance data. Also the bank connection's consents will get deleted on\
        \ the bank's side. Must pass the connection's identifier and the user's access_token.<br/><br/>Notes:\
        \ <br/>&bull; All notification rules that are connected to the bank connection\
        \ will get adjusted so that they no longer have this connection listed. Notification\
        \ rules that are connected to just this bank connection (and no other connection)\
        \ will get deleted altogether. <br/>&bull; A bank connection cannot get deleted\
        \ while it is in the process of import, update, or transaction categorization.<br/>&bull;\
        \ If a consent will get deleted by this service, it's not guaranteed that\
        \ the consent will also get deleted on the bank's side, as not all banks may\
        \ support this. Also errors during bank consent deletion will be ignored,\
        \ so the service won't fail due to this.<br/><br/><b>ATTENTION:</b> For the\
        \ deletion of XS2A consents, additional headers should be included in the\
        \ request if the end user is involved. Please refer to the <a href='#general-user-metadata'>User\
        \ metadata</a> section under 'General Information' of the API documentation."
      operationId: deleteBankConnection
      parameters:
      - name: id
        in: path
        description: Identifier of the bank connection to delete
        required: true
        schema:
          type: integer
          format: int64
      - name: PSU-IP-Address
        $ref: "#/components/parameters/PSU-IP-Address"
      - name: PSU-Device-OS
        $ref: "#/components/parameters/PSU-Device-OS"
      - name: PSU-User-Agent
        $ref: "#/components/parameters/PSU-User-Agent"
      - name: X-HTTP-Method-Override
        $ref: "#/components/parameters/X-HTTP-Method-Override"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: Bank connection deleted (empty response body)
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Bank connection not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "423":
          description: "Bank connection cannot get deleted at the moment as it is\
            \ currently being imported or updated (either by the user or by finAPI's\
            \ automatic batch update), or because the categorization of transactions\
            \ is currently performed."
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http423ResponseExample:
                  $ref: "#/components/examples/http423ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    patch:
      tags:
      - Bank Connections
      summary: Edit a bank connection
      description: "If you are unlicensed, or licensed but using finAPI’s Web Form,\
        \ this endpoint is relevant to you ONLY if you want to update the name of\
        \ the bank connection. Please check <a href='?product=web_form_2.0#post-/api/tasks/backgroundUpdate'\
        \ target='_blank'>this</a> endpoint for all other functionalities instead.<br/><br/>Edit\
        \ bank connection data. Must pass the connection's identifier and the user's\
        \ access_token.<br/><br/>Note that a bank connection's credentials cannot\
        \ be changed while it is in the process of being imported, updated, or connecting\
        \ a new interface."
      operationId: editBankConnection
      parameters:
      - name: id
        in: path
        description: Identifier of the bank connection to change the parameters for
        required: true
        schema:
          type: integer
          format: int64
      - name: X-HTTP-Method-Override
        $ref: "#/components/parameters/X-HTTP-Method-Override"
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: New bank connection parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditBankConnectionParams"
        required: true
      responses:
        "200":
          description: Edited bank connection
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BankConnection"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Bank connection not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "422":
          description: "INVALID_TWO_STEP_PROCEDURE:<br/>if submitted two-step-procedure\
            \ does not exist for the user. Please use one of the procedures that are\
            \ listed in the bank connection;<br/>ILLEGAL_FIELD_VALUE:<br/>- if the\
            \ bank connection's credentials were tried to be changed, but the new\
            \ credentials are equal to the credentials of another existing bank connection\
            \ of the same bank.<br/> - in case an update attempt is made using an\
            \ interface that is not connected to the bank;<br/>ILLEGAL_ENTITY_STATE:<br/>\
            \ - if the mandator is not configured correctly to use this service. Please\
            \ contact our support;"
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "423":
          description: "Bank connection cannot get edited at the moment as it is currently\
            \ being imported, updated (either by the user or by finAPI's automatic\
            \ batch update) or a new interface is being connected."
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http423ResponseExample:
                  $ref: "#/components/examples/http423ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/accounts/{id}:
    get:
      tags:
      - Accounts
      summary: Get an account
      description: Get a single bank account of the user that is authorized by the
        access_token. Must pass the account's identifier and the user's access_token.
      operationId: getAccount
      parameters:
      - name: id
        in: path
        description: Identifier of requested account
        required: true
        schema:
          type: integer
          format: int64
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: Requested account
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Account not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    delete:
      tags:
      - Accounts
      summary: Delete an account
      description: "Delete a single bank account of the user that is authorized by\
        \ the access_token, including its transactions and balance data. Must pass\
        \ the account's identifier and the user's access_token.<br/><br/>Notes: <br/>&bull;\
        \ You cannot delete an account while the bank connection that it relates to\
        \ is currently in the process of import, update, or transaction categorization.<br/>&bull;\
        \ If the deleted account was connected to interfaces that no other account\
        \ of the same bank connection is supporting, then those interfaces will be\
        \ removed from the bank connection as well.<br/>&bull; When the last remaining\
        \ account of a bank connection gets deleted, then the entire bank connection\
        \ will get deleted as well, including consents on the bank's side.<br/>&bull;\
        \ All notification rules that are connected to the account will get adjusted\
        \ so that they no longer have this account listed. Notification rules that\
        \ are connected to just this account (and no other accounts) will get deleted\
        \ altogether.<br/>&bull; If a consent will get deleted by this service, it's\
        \ not guaranteed that the consent will also get deleted on the bank's side,\
        \ as not all banks may support this. Also errors during bank consent deletion\
        \ will be ignored, so the service won't fail due to this.<br/><br/><b>ATTENTION:</b>\
        \ For the deletion of XS2A consents, additional headers should be included\
        \ in the request if the end user is involved. Please refer to the <a href='#general-user-metadata'>User\
        \ metadata</a> section under 'General Information' of the API documentation."
      operationId: deleteAccount
      parameters:
      - name: id
        in: path
        description: Identifier of the account to delete
        required: true
        schema:
          type: integer
          format: int64
      - name: PSU-IP-Address
        $ref: "#/components/parameters/PSU-IP-Address"
      - name: PSU-Device-OS
        $ref: "#/components/parameters/PSU-Device-OS"
      - name: PSU-User-Agent
        $ref: "#/components/parameters/PSU-User-Agent"
      - name: X-HTTP-Method-Override
        $ref: "#/components/parameters/X-HTTP-Method-Override"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: Account deleted (empty response body)
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Account not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "423":
          description: "Account cannot get deleted at the moment as it is currently\
            \ being imported or updated (either by the user or by finAPI's automatic\
            \ batch update), or because the categorization of transactions is performed."
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http423ResponseExample:
                  $ref: "#/components/examples/http423ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    patch:
      tags:
      - Accounts
      summary: Edit an account
      description: "Change the name and/or the type and/or the 'isNew' flag of a single\
        \ bank account of the user that is authorized by the access_token. Must pass\
        \ the account's identifier, the account's new name and/or type and/or 'isNew'\
        \ flag, and the user's access_token."
      operationId: editAccount
      parameters:
      - name: id
        in: path
        description: Identifier of the account to edit
        required: true
        schema:
          type: integer
          format: int64
      - name: X-HTTP-Method-Override
        $ref: "#/components/parameters/X-HTTP-Method-Override"
      - $ref: "#/components/parameters/X-Request-Id"
      requestBody:
        description: New account name and/or type and/or 'isNew' flag
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountParams"
        required: true
      responses:
        "200":
          description: Edited account
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "400":
          description: "BAD_REQUEST if request is incorrect; MISSING_FIELD if neither\
            \ a name, nor a type, nor the 'isNew' flag were specified; ILLEGAL_FIELD_VALUE\
            \ if the given account type is invalid"
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Account not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "423":
          description: Account cannot get edited at the moment as it is currently
            being imported or updated (either by the user or by finAPI's automatic
            batch update).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http423ResponseExample:
                  $ref: "#/components/examples/http423ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/users/verificationStatus:
    get:
      tags:
      - Users
      summary: Get a user's verification status
      description: Get the verification status of the requested user. Must pass your
        global (i.e. client) access_token. Note that finAPI regards user identifiers
        case-insensitive.
      operationId: getVerificationStatus
      parameters:
      - name: userId
        in: query
        description: User's identifier
        required: true
        schema:
          type: string
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: User's verification status
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationStatusResource"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: User not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/tppCredentials/tppAuthenticationGroups:
    get:
      tags:
      - TPP Credentials
      summary: Get all TPP Authentication Groups
      description: "Get and search across all available TPP authentication groups.\
        \ Must pass the <a href='https://documentation.finapi.io/access/application-management'\
        \ target='_blank'>mandator admin client</a>'s access_token. You can set optional\
        \ search criteria to get only those TPP authentication groups that you are\
        \ interested in. If you do not specify any search criteria, then this service\
        \ functions as a 'get all' service."
      operationId: getAndSearchTppAuthenticationGroups
      parameters:
      - name: ids
        in: query
        description: "A comma-separated list of TPP authentication group identifiers.\
          \ If specified, then only TPP authentication groups whose identifier match\
          \ any of the given identifiers will be regarded. The maximum number of identifiers\
          \ is 1000."
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: name
        in: query
        description: Only the tpp authentication groups with name matching the given
          one should appear in the result list
        required: false
        schema:
          type: string
      - name: bankBlz
        in: query
        description: "Search by connected banks: only the banks with BLZ matching\
          \ the given one should appear in the result list"
        required: false
        schema:
          type: string
      - name: bankName
        in: query
        description: "Search by connected banks: only the banks with name matching\
          \ the given one should appear in the result list"
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Result page that you want to retrieve
        schema:
          minimum: 1
          type: integer
          default: 1
      - name: perPage
        in: query
        description: Maximum number of records per page. By default it's 20.
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 20
      - name: order
        in: query
        description: "Determines the order of the results. You can order the results\
          \ by 'id' and 'name'. The default order for this service is 'id,asc'. The\
          \ general format is: 'property[,asc|desc]', with 'asc' being the default\
          \ value."
        schema:
          type: array
          items:
            type: string
            default: "id,asc"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: Requested TPP authentication groups
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageableTppAuthenticationGroupResources"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/tppCertificates/{id}:
    get:
      tags:
      - TPP Certificates
      summary: Get a TPP certificate
      description: Get a single TPP certificate by its id. Must pass the <a href='https://documentation.finapi.io/access/application-management'
        target='_blank'>mandator admin client</a>'s access_token.
      operationId: getCertificate
      parameters:
      - name: id
        in: path
        description: Id of requested TPP certificate
        required: true
        schema:
          type: integer
          format: int64
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: Requested TPP certificate
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TppCertificate"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: TPP certificate not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    delete:
      tags:
      - TPP Certificates
      summary: Delete a TPP certificate
      description: Delete a single TPP certificate by its id. Must pass the <a href='https://documentation.finapi.io/access/application-management'
        target='_blank'>mandator admin client</a>'s access_token.
      operationId: deleteCertificate
      parameters:
      - name: id
        in: path
        description: Id of the TPP certificate to delete
        required: true
        schema:
          type: integer
          format: int64
      - name: X-HTTP-Method-Override
        $ref: "#/components/parameters/X-HTTP-Method-Override"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: TPP certificate deleted (empty response body)
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: TPP certificate not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/securities:
    get:
      tags:
      - Securities
      summary: Get and search all securities
      description: "Get securities of the user that is authorized by the access_token.\
        \ Must pass the user's access_token. You can set optional search criteria\
        \ to get only those securities that you are interested in. If you do not specify\
        \ any search criteria, then this service functions as a 'get all' service.<p>Note:\
        \ Whenever a security account is being updated, its security positions will\
        \ be internally re-created, meaning that the identifier of a security position\
        \ might change over time.</p>"
      operationId: getAndSearchAllSecurities
      parameters:
      - name: ids
        in: query
        description: "A comma-separated list of security identifiers. If specified,\
          \ then only securities whose identifier match any of the given identifiers\
          \ will be regarded. The maximum number of identifiers is 1000."
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: search
        in: query
        description: "If specified, then only those securities will be contained in\
          \ the result whose 'name', 'isin' or 'wkn' contains the given search string\
          \ (the matching works case-insensitive). If no securities contain the search\
          \ string in any of these fields, then the result will be an empty list.\
          \ NOTE: If the given search string consists of several terms (separated\
          \ by whitespace), then ALL of these terms must be contained in the searched\
          \ fields for a security to get included into the result."
        required: false
        schema:
          type: string
      - name: accountIds
        in: query
        description: Comma-separated list of identifiers of accounts
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: page
        in: query
        description: Result page that you want to retrieve.
        schema:
          minimum: 1
          type: integer
          default: 1
      - name: perPage
        in: query
        description: Maximum number of records per page. By default it's 20.
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 20
      - name: order
        in: query
        description: "Determines the order of the results. You can order the results\
          \ by next fields: 'id', 'name', 'isin', 'wkn', 'quote', 'quantityNominal',\
          \ 'marketValue' and 'entryQuote'. The default order for all services is\
          \ 'id,asc'. You can also order by multiple properties. In that case the\
          \ order of the parameters passed is important. The general format is: 'property[,asc|desc]',\
          \ with 'asc' being the default value."
        schema:
          type: array
          items:
            type: string
            default: "id,ASC"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: List of requested securities
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageableSecurityList"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/securities/{id}:
    get:
      tags:
      - Securities
      summary: Get a security
      description: "Get a single security for a specific user. Must pass the security's\
        \ identifier and the user's access_token. <p>Note: Whenever a security account\
        \ is being updated, its security positions will be internally re-created,\
        \ meaning that the identifier of a security position might change over time.</p>"
      operationId: getSecurity
      parameters:
      - name: id
        in: path
        description: Security identifier
        required: true
        schema:
          type: integer
          format: int64
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: Requested security
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Security"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Security not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/pendingTransactions:
    get:
      tags:
      - Pending Transactions
      summary: Get and search all pending transactions
      description: "Get pending transactions of the user that is authorized by the\
        \ access_token. Must pass the user's access_token. You can set optional search\
        \ criteria to get only those pending transactions that you are interested\
        \ in. If you do not specify any search criteria, then this service functions\
        \ as a 'get all' service."
      operationId: getAndSearchAllPendingTransactions
      parameters:
      - name: ids
        in: query
        description: "A comma-separated list of pending transaction identifiers. If\
          \ specified, then only pending transactions whose identifier match any of\
          \ the given identifiers will be regarded. The maximum number of identifiers\
          \ is 1000."
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: accountIds
        in: query
        description: "A comma-separated list of account identifiers. If specified,\
          \ then only pending transactions that relate to the given accounts will\
          \ be regarded. If not specified, then all accounts will be regarded."
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: page
        in: query
        description: Result page that you want to retrieve.
        schema:
          minimum: 1
          type: integer
          default: 1
      - name: perPage
        in: query
        description: Maximum number of records per page. By default it's 20.
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 20
      - name: order
        in: query
        description: "Determines the order of the results. You can use the following\
          \ fields for ordering the response: 'id', 'accountId', 'valueDate', 'bankBookingDate',\
          \ 'importDate' and 'amount'. The default order for all services is 'id,asc'.\
          \ You can also order by multiple properties. In that case the order of the\
          \ parameters passed is important. Example: '/pendingTransactions?order=valueDate,desc&order=counterpartyName'\
          \ will return the latest pending transactions first. If there are more pending\
          \ transactions on the same day, then these pending transactions are ordered\
          \ by the counterparty name (ascending). The general format is: 'property[,asc|desc]',\
          \ with 'asc' being the default value."
        schema:
          type: array
          items:
            type: string
            default: "id,ASC"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: List of requested pending transactions
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageablePendingTransactionResources"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/pendingTransactions/{id}:
    get:
      tags:
      - Pending Transactions
      summary: Get a pending transaction
      description: Get a single pending transaction of the user that is authorized
        by the access_token. Must pass the pending transaction's identifier and the
        user's access_token.
      operationId: getPendingTransaction
      parameters:
      - name: id
        in: path
        description: Identifier of pending transaction
        required: true
        schema:
          type: integer
          format: int64
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: Requested pending transaction
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PendingTransaction"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Pending transaction not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/payments:
    get:
      tags:
      - Payments
      summary: Get payments
      description: Get payments of the user that is authorized by the access_token.
        Must pass the user's access_token.<br/><br/>You can set optional search criteria
        to get only those payments returned you are interested in.<br/><br/>Web Form
        2.0 customers should also use this endpoint to learn about the status of the
        payment initiation. (The Payment ID can be found in the payload of the API
        response from the relevant Web Form 2.0 API endpoint).
      operationId: getPayments
      parameters:
      - name: ids
        in: query
        description: "A comma-separated list of payment identifiers. If specified,\
          \ then only payments whose identifier is matching any of the given identifiers\
          \ will be regarded. The maximum number of identifiers is 1000."
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: accountIds
        in: query
        description: "A comma-separated list of account identifiers. If specified,\
          \ then only payments that relate to the given account(s) will be regarded.\
          \ The maximum number of identifiers is 1000."
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: minAmount
        in: query
        description: "If specified, then only those payments are regarded whose (absolute)\
          \ total amount is equal or greater than the given amount will be regarded.\
          \ The value must be a positive (absolute) amount."
        required: false
        schema:
          type: number
      - name: maxAmount
        in: query
        description: "If specified, then only those payments are regarded whose (absolute)\
          \ total amount is equal or less than the given amount will be regarded.\
          \ Value must be a positive (absolute) amount."
        required: false
        schema:
          type: number
      - name: status
        in: query
        description: "A comma-separated list of payment statuses. If provided, then\
          \ only payments whose status is matching any of the given statuses will\
          \ be returned. Allowed values: 'OPEN', 'PENDING', 'SUCCESSFUL', 'NOT_SUCCESSFUL'\
          \ or 'DISCARDED'. Example: 'OPEN,PENDING'."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Result page that you want to retrieve
        schema:
          minimum: 1
          type: integer
          default: 1
      - name: perPage
        in: query
        description: Maximum number of records per page. By default it's 20.
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 20
      - name: order
        in: query
        description: "Determines the order of the results. You can use the following\
          \ fields for ordering the response: 'id', 'amount', 'requestDate', 'executionDate'\
          \ and 'instructedExecutionDate'. The default order for all services is 'id,asc'."
        schema:
          type: array
          items:
            type: string
            default: "id,ASC"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: List of requested payments
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageablePaymentResources"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Authentication required
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "500":
          description: Unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/notificationRules/{id}:
    get:
      tags:
      - Notification Rules
      summary: Get a notification rule
      description: Get a single notification rule of the user that is authorized by
        the access_token. Must pass the notification rule's identifier and the user's
        access_token.
      operationId: getNotificationRule
      parameters:
      - name: id
        in: path
        description: Identifier of requested notification rule
        required: true
        schema:
          type: integer
          format: int64
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: Requested notification rule
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationRule"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Notification rule not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    delete:
      tags:
      - Notification Rules
      summary: Delete a notification rule
      description: Delete a single notification rule of the user that is authorized
        by the access_token. Must pass the notification rule's identifier and the
        user's access_token.
      operationId: deleteNotificationRule
      parameters:
      - name: id
        in: path
        description: Identifier of the notification rule to delete
        required: true
        schema:
          type: integer
          format: int64
      - name: X-HTTP-Method-Override
        $ref: "#/components/parameters/X-HTTP-Method-Override"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: Notification rule deleted (empty response body)
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Notification rule not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "423":
          description: Notification rules cannot get deleted at the moment as finAPI's
            automatic batch update is currently being executed
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http423ResponseExample:
                  $ref: "#/components/examples/http423ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/mandatorAdmin/getUserList:
    get:
      tags:
      - Mandator Administration
      summary: Get user list
      description: "<p>Get a list of the users of the mandator that is authorized\
        \ by the access_token. Must pass the <a href='https://documentation.finapi.io/access/application-management'\
        \ target='_blank'>mandator admin client</a>'s access_token. You can set optional\
        \ search criteria to get only those users that you are interested in. If you\
        \ do not specify any search criteria, then this service functions as a 'get\
        \ all' service.</p><p>Note that the original user id is no longer available\
        \ in finAPI once a user has been deleted. Because of this, the userId of deleted\
        \ users will be a distorted version of the original userId. For example, if\
        \ the deleted user's id was originally 'user', then this service will return\
        \ 'uXXr' as the userId.</p>"
      operationId: getUserList
      parameters:
      - name: minRegistrationDate
        in: query
        description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Lower bound for a\
          \ user's registration date, e.g. '2016-01-01'. If specified, then only users\
          \ whose 'registrationDate' is equal to or later than the given date will\
          \ be regarded."
        required: false
        schema:
          type: string
          format: date
      - name: maxRegistrationDate
        in: query
        description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Upper bound for a\
          \ user's registration date, e.g. '2016-01-01'. If specified, then only users\
          \ whose 'registrationDate' is equal to or earlier than the given date will\
          \ be regarded."
        required: false
        schema:
          type: string
          format: date
      - name: minDeletionDate
        in: query
        description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Lower bound for a\
          \ user's deletion date, e.g. '2016-01-01'. If specified, then only users\
          \ whose 'deletionDate' is not null, and is equal to or later than the given\
          \ date will be regarded."
        required: false
        schema:
          type: string
          format: date
      - name: maxDeletionDate
        in: query
        description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Upper bound for a\
          \ user's deletion date, e.g. '2016-01-01'. If specified, then only users\
          \ whose 'deletionDate' is null, or is equal to or earlier than the given\
          \ date will be regarded."
        required: false
        schema:
          type: string
          format: date
      - name: minLastActiveDate
        in: query
        description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Lower bound for a\
          \ user's last active date, e.g. '2016-01-01'. If specified, then only users\
          \ whose 'lastActiveDate' is not null, and is equal to or later than the\
          \ given date will be regarded."
        required: false
        schema:
          type: string
          format: date
      - name: maxLastActiveDate
        in: query
        description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Upper bound for a\
          \ user's last active date, .g. '2016-01-01'. If specified, then only users\
          \ whose 'lastActiveDate' is null, or is equal to or earlier than the given\
          \ date will be regarded."
        required: false
        schema:
          type: string
          format: date
      - name: includeMonthlyStats
        in: query
        description: "Whether to include the 'monthlyStats' for the returned users.\
          \ If not specified, then the field defaults to 'false'."
        required: false
        schema:
          type: boolean
          default: false
      - name: monthlyStatsStartDate
        in: query
        description: "<strong>Format:</strong> 'YYYY-MM'<br/>Minimum bound for the\
          \ monthly stats (=oldest month that should be included). If not specified,\
          \ then the monthly stats will go back up to the first month in which the\
          \ user existed (date of the user's registration). Note that this field is\
          \ only regarded if 'includeMonthlyStats' = true."
        required: false
        schema:
          type: string
      - name: monthlyStatsEndDate
        in: query
        description: "<strong>Format:</strong> 'YYYY-MM'<br/>Maximum bound for the\
          \ monthly stats (=latest month that should be included). If not specified,\
          \ then the monthly stats will go up to either the current month (for active\
          \ users), or up to the month of deletion (for deleted users). Note that\
          \ this field is only regarded if  'includeMonthlyStats' = true."
        required: false
        schema:
          type: string
      - name: minBankConnectionCountInMonthlyStats
        in: query
        description: A value of X means that the service will return only those users
          which had at least X bank connections imported at any time within the returned
          monthly stats set. This field is only regarded when 'includeMonthlyStats'
          is set to 'true'. The default value for this field is 0.
        required: false
        schema:
          type: integer
          default: 0
      - name: userId
        in: query
        description: "The identifier of a user to search for. If specified, then only\
          \ the user with the given id will be regarded. If no user can be found for\
          \ the passed userId, then the result list will be empty."
        required: false
        schema:
          type: string
      - name: isDeleted
        in: query
        description: "If NOT specified, then the service will regard both active and\
          \ deleted users in the search. If set to 'true', then ONLY deleted users\
          \ will be regarded. If set to 'false', then ONLY active users will be regarded."
        required: false
        schema:
          type: boolean
      - name: isLocked
        in: query
        description: "If NOT specified, then the service will regard both locked and\
          \ not locked users in the search. If set to 'true', then ONLY locked users\
          \ will be regarded. If set to 'false', then ONLY not locked users will be\
          \ regarded."
        required: false
        schema:
          type: boolean
      - name: page
        in: query
        description: Result page that you want to retrieve
        schema:
          minimum: 1
          type: integer
          default: 1
      - name: perPage
        in: query
        description: Maximum number of records per page. By default it's 20.
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 20
      - name: order
        in: query
        description: "Determines the order of the results. You can order the results\
          \ by 'userId'. The default order for this service is 'userId,asc'. The general\
          \ format is: 'property[,asc|desc]', with 'asc' being the default value."
        schema:
          type: array
          items:
            type: string
            default: "userId,ASC"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: Requested users list
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageableUserInfoList"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/categories/cashFlows:
    get:
      tags:
      - Categories
      summary: Get cash flows
      description: "Get the cash flow(s) (= total income, spending, and balance) for\
        \ one or several categories. You can specify various criteria such as the\
        \ time period to calculate the cash flows for, or what categories to do the\
        \ calculations for. The cash flow for a category may include the cash flows\
        \ for all of its sub-categories, or not include it, depending on the 'includeSubCashFlows'\
        \ setting. Must pass the user's access_token.<br/><br/>NOTE: This service\
        \ is not calculating exchange rates for transactions, so if the regarded transactions\
        \ do not all have the same currency, then this service is unable to provide\
        \ accurate data."
      operationId: getCashFlows
      parameters:
      - name: search
        in: query
        description: "If specified, then only transactions that contain the search\
          \ term in their purpose or counterpart fields will be contained in the result.\
          \ Note that the search is case insensitive."
        required: false
        schema:
          type: string
      - name: counterpart
        in: query
        description: "The counterpart is the person or institution that received your\
          \ payment, or that you made the payment to. If this parameter is specified,\
          \ then only transactions that contain the given term in one (or more) of\
          \ their counterpart fields ('counterpartName', 'counterpartAccountNumber',\
          \ 'counterpartIban', 'counterpartBic' or 'counterpartBlz') will be contained\
          \ in the result. Note that the search is case insensitive."
        required: false
        schema:
          type: string
      - name: purpose
        in: query
        description: "If specified, then only those transactions will be contained\
          \ in the result whose purpose field contains the given search string. Note\
          \ that the search is case insensitive.NOTE: If the given search string consists\
          \ of several terms (separated by whitespace), then ALL of these terms must\
          \ be contained in the purpose for a transaction to get included into the\
          \ result."
        required: false
        schema:
          type: string
      - name: accountIds
        in: query
        description: "A comma-separated list of account identifiers. If specified,\
          \ then only transactions that relate to the given accounts will be regarded.\
          \ If not specified, then all accounts will be regarded."
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: minBankBookingDate
        in: query
        description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Lower bound for a\
          \ transaction's booking date as returned by the bank (= original booking\
          \ date), e.g. '2016-01-01'. If specified, then only transactions whose 'bankBookingDate'\
          \ is equal to or later than the given date will be regarded."
        required: false
        schema:
          type: string
          format: date
      - name: maxBankBookingDate
        in: query
        description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Upper bound for a\
          \ transaction's booking date as returned by the bank (= original booking\
          \ date), e.g. '2016-01-01'. If specified, then only transactions whose 'bankBookingDate'\
          \ is equal to or earlier than the given date will be regarded."
        required: false
        schema:
          type: string
          format: date
      - name: minFinapiBookingDate
        in: query
        description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Lower bound for a\
          \ transaction's booking date as set by finAPI, e.g. '2016-01-01'. For details\
          \ about the meaning of the finAPI booking date, please see the field's documentation\
          \ in the service's response."
        required: false
        schema:
          type: string
          format: date
      - name: maxFinapiBookingDate
        in: query
        description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Upper bound for a\
          \ transaction's booking date as set by finAPI, e.g. '2016-01-01'. For details\
          \ about the meaning of the finAPI booking date, please see the field's documentation\
          \ in the service's response."
        required: false
        schema:
          type: string
          format: date
      - name: minAmount
        in: query
        description: "If specified, then only transactions whose amount is equal to\
          \ or greater than the given amount will be regarded. Can contain a positive\
          \ or negative number with at most two decimal places. Examples: -300.12,\
          \ or 90.95"
        required: false
        schema:
          type: number
      - name: maxAmount
        in: query
        description: "If specified, then only transactions whose amount is equal to\
          \ or less than the given amount will be regarded. Can contain a positive\
          \ or negative number with at most two decimal places. Examples: -300.12,\
          \ or 90.95"
        required: false
        schema:
          type: number
      - name: direction
        in: query
        description: "If specified, then only transactions with the given direction(s)\
          \ will be regarded. Use 'income' for regarding only received payments (amount\
          \ >= 0), 'spending' for regarding only outgoing payments (amount < 0), or\
          \ 'all' to regard both directions. If not specified, the direction defaults\
          \ to 'all'."
        required: false
        schema:
          type: string
          default: all
          enum:
          - all
          - income
          - spending
      - name: labelIds
        in: query
        description: "A comma-separated list of label identifiers. If specified, then\
          \ only transactions that have been marked with at least one of the given\
          \ labels will be contained in the result."
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: categoryIds
        in: query
        description: "If specified, then the result will contain only those cash flows\
          \ that relate to the given categories. Note that the cash flow for a category\
          \ may include/exclude the cash flows of its sub-categories, depending on\
          \ the 'includeSubCashFlows' setting. To include the cash flow of not categorized\
          \ transactions, pass the value '0' as categoryId. Note: When this parameter\
          \ is NOT set, then the result will contain a cash flow for all categories\
          \ that have transactions associated to them (this includes the 'null'-category\
          \ for the cash flow of not categorized transactions), more precisely: transactions\
          \ that fulfill the filter criteria. Categories that have no associated transactions\
          \ according to the filter criteria will not appear in the result. However,\
          \ when you specify this parameter, then all specified categories will have\
          \ a cash flow entry in the result, even if there are no associated transactions\
          \ for the category (the cash flow will have income, spending and balance\
          \ all set to zero)."
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: isNew
        in: query
        description: "If specified, then only transactions that have their 'isNew'\
          \ flag set to true/false will be regarded for the cash flow calculations."
        required: false
        schema:
          type: boolean
      - name: minImportDate
        in: query
        description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Lower bound for a\
          \ transaction's import date, e.g. '2016-01-01'. If specified, then only\
          \ transactions whose 'importDate' is equal to or later than the given date\
          \ will be regarded."
        required: false
        schema:
          type: string
          format: date
      - name: maxImportDate
        in: query
        description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Upper bound for a\
          \ transaction's import date, e.g. '2016-01-01'. If specified, then only\
          \ transactions whose 'importDate' is equal to or earlier than the given\
          \ date will be regarded."
        required: false
        schema:
          type: string
          format: date
      - name: includeSubCashFlows
        in: query
        description: "If it is true, then the income, spending, balance and count\
          \ of transactions of a main category results from all transactions that\
          \ have either this (main) category or any of its subcategories assigned\
          \ (of course all transactions depends from the other filtering settings);\
          \ If it is false, then the income, spending, balance and count of transactions\
          \ of a main category only results from the transactions that have exactly\
          \ this (main) category assigned. Default value for this parameter is 'true'."
        required: false
        schema:
          type: boolean
          default: true
      - name: order
        in: query
        description: "Determines the order of the results. You can order the results\
          \ by 'income', 'spending', 'balance', 'category.id' or 'category.name'.\
          \ The default order for this service is 'category.id,asc'. You can also\
          \ order by multiple properties. In that case the order of the parameters\
          \ passed is important. Example: '/cashFlows?order=income,desc&order=spending,asc&balance,desc'\
          \ will return as first result the category with the highest income. If two\
          \ categories have the same income, it returns the category with the highest\
          \ spending first (because spending is a negative value) and so on. The general\
          \ format is: 'property[,asc|desc]', with 'asc' being the default value."
        schema:
          type: array
          items:
            type: string
            default: "category.id,ASC"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: List of requested cash flows
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CashFlowList"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Category not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/banks:
    get:
      tags:
      - Banks
      summary: Get and search all banks
      description: "Get and search banks from finAPI's database of banks. Must pass\
        \ the authorized user's access_token, or your client's access_token. You can\
        \ set optional search criteria to get only those banks that you are interested\
        \ in. If you do not specify any search criteria, then this service functions\
        \ as a 'get all' service."
      operationId: getAndSearchAllBanks
      parameters:
      - name: ids
        in: query
        description: "A comma-separated list of bank identifiers. If specified, then\
          \ only banks whose identifier match any of the given identifiers will be\
          \ regarded. The maximum number of identifiers is 1000."
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: search
        in: query
        description: "If specified, then only those banks will be contained in the\
          \ result whose 'name', 'blz', 'bic' or 'city' contains the given search\
          \ string (the matching works case-insensitive). If no banks contain the\
          \ search string in any of the regarded fields, then the result will be an\
          \ empty list. You may also pass an IBAN in this field, in which case finAPI\
          \ will try to detect the related bank(s) and regard only those banks for\
          \ the search (The IBAN may not contain spaces). If the given search string\
          \ consists of several terms (separated by whitespace), then ALL of these\
          \ terms must apply to a bank for it to get regarded for the result."
        required: false
        schema:
          type: string
      - name: supportedBankingInterfaces
        in: query
        description: "Comma-separated list of banking interfaces. Possible values:\
          \ FINTS_SERVER,WEB_SCRAPER,XS2A. If this parameter is specified, then all\
          \ the banks that support at least one of the given interfaces will be returned.\
          \ Note that this does NOT imply that those interfaces must be the only ones\
          \ that are supported by a bank."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: location
        in: query
        description: "Comma-separated list of two-letter country codes (<a href='https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2'\
          \ target='_blank'>ISO 3166 ALPHA-2</a>), for example: DE,AT. If set, then\
          \ only those banks will be regarded in the search that are located in the\
          \ specified countries. Notes: Banks which do not have a location set (i.e.\
          \ international institutes) will ALWAYS be regarded in the search, independent\
          \ of what you specify for this field. When you pass a country code that\
          \ doesn't exist in the ISO 3166 ALPHA-2 standard, then the service will\
          \ respond with 400 BAD_REQUEST."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: tppAuthenticationGroupIds
        in: query
        description: "A comma-separated list of TPP authentication group identifiers.\
          \ If specified, then only banks who have at least one interface belonging\
          \ to one of the given groups will be regarded. The maximum number of identifiers\
          \ is 1000."
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: isTestBank
        in: query
        description: "If specified, then only those banks will be regarded that have\
          \ the given value (true or false) for their 'isTestBank' field."
        required: false
        schema:
          type: boolean
      - name: page
        in: query
        description: Result page that you want to retrieve.
        schema:
          minimum: 1
          type: integer
          default: 1
      - name: perPage
        in: query
        description: Maximum number of records per page. By default it's 20.
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 20
      - name: order
        in: query
        description: "Determines the order of the results. You can order the results\
          \ by 'id', 'name', 'blz', 'bic' or 'popularity'. The default order for all\
          \ services is 'id,asc'. You can also order by multiple properties. In that\
          \ case the order of the parameters passed is important. Example: '/banks?order=name,desc&order=id,asc'\
          \ will return banks ordered by 'name' (descending), where banks with the\
          \ same 'name' are ordered by 'id' (ascending). The general format is: 'property[,asc|desc]',\
          \ with 'asc' being the default value."
        schema:
          type: array
          items:
            type: string
            default: "id,ASC"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: List of requested banks
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageableBankList"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/banks/{id}:
    get:
      tags:
      - Banks
      summary: Get a bank
      description: "Get a single bank from finAPI's database of banks. You have to\
        \ pass the bank's identifier, and either the authorized user's access_token,\
        \ or your client's access token."
      operationId: getBank
      parameters:
      - name: id
        in: path
        description: Identifier of requested bank
        required: true
        schema:
          type: integer
          format: int64
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: Requested Bank
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bank"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Bank not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/bankConnections:
    get:
      tags:
      - Bank Connections
      summary: Get all bank connections
      description: "Get bank connections of the user that is authorized by the access_token.\
        \ Must pass the user's access_token. You can set optional search criteria\
        \ to get only those bank connections that you are interested in. If you do\
        \ not specify any search criteria, then this service functions as a 'get all'\
        \ service.<br/>Web Form 2.0 customers should also use this endpoint to learn\
        \ about the status of the bank connection (The bank connection ID can be found\
        \ in the payload of the API response from the relevant Web Form 2.0 API endpoint)."
      operationId: getAllBankConnections
      parameters:
      - name: ids
        in: query
        description: "A comma-separated list of bank connection identifiers. If specified,\
          \ then only bank connections whose identifier match any of the given identifiers\
          \ will be regarded. The maximum number of identifiers is 1000."
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: List of requested bank connections
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BankConnectionList"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    delete:
      tags:
      - Bank Connections
      summary: Delete all bank connections
      description: "Delete all bank connections of the user that is authorized by\
        \ the access_token. Also all bank connection's consents will get deleted on\
        \ the bank's side. Must pass the user's access_token.<br/><br/>Notes: <br/>&bull;\
        \ All notification rules that are connected to any specific bank connection\
        \ will get deleted as well. <br/>&bull; If at least one bank connection is\
        \ busy (currently in the process of import, update, or transaction categorization),\
        \ then this service will perform no action at all.<br/>&bull; If a consent\
        \ will get deleted by this service, it's not guaranteed that the consent will\
        \ also get deleted on the bank's side, as not all banks may support this.\
        \ Also errors during bank consent deletion will be ignored, so the service\
        \ won't fail due to this.<br/><br/><b>ATTENTION:</b> For the deletion of XS2A\
        \ consents, additional headers should be included in the request if the end\
        \ user is involved. Please refer to the <a href='#general-user-metadata'>User\
        \ metadata</a> section under 'General Information' of the API documentation."
      operationId: deleteAllBankConnections
      parameters:
      - name: PSU-IP-Address
        $ref: "#/components/parameters/PSU-IP-Address"
      - name: PSU-Device-OS
        $ref: "#/components/parameters/PSU-Device-OS"
      - name: PSU-User-Agent
        $ref: "#/components/parameters/PSU-User-Agent"
      - name: X-HTTP-Method-Override
        $ref: "#/components/parameters/X-HTTP-Method-Override"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: List of identifiers of deleted bank connections
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdentifierList"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "423":
          description: "No action was performed at the moment as at least one bank\
            \ connection is being imported, updated (either by the user or by finAPI's\
            \ automatic batch update), or because the categorization of transactions\
            \ is currently performed."
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http423ResponseExample:
                  $ref: "#/components/examples/http423ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/accounts:
    get:
      tags:
      - Accounts
      summary: Get and search all accounts
      description: "Get bank accounts of the user that is authorized by the access_token.\
        \ Must pass the user's access_token. You can set optional search criteria\
        \ to get only those bank accounts that you are interested in. If you do not\
        \ specify any search criteria, then this service functions as a 'get all'\
        \ service."
      operationId: getAndSearchAllAccounts
      parameters:
      - name: ids
        in: query
        description: "A comma-separated list of account identifiers. If specified,\
          \ then only accounts whose identifier match any of the given identifiers\
          \ will be regarded. The maximum number of identifiers is 1000."
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: search
        in: query
        description: "If specified, then only those accounts will be contained in\
          \ the result whose 'accountName', 'iban', 'accountNumber' or 'subAccountNumber'\
          \ contains the given search string (the matching works case-insensitive).\
          \ If no accounts contain the search string in any of these fields, then\
          \ the result will be an empty list. NOTE: If the given search string consists\
          \ of several terms (separated by whitespace), then ALL of these terms must\
          \ be contained in the searched fields for an account to get included into\
          \ the result."
        required: false
        schema:
          type: string
      - name: accountTypes
        in: query
        description: "A comma-separated list of account types. If specified, then\
          \ only accounts that relate to the given types will be regarded. If not\
          \ specified, then all accounts will be regarded."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: bankConnectionIds
        in: query
        description: "A comma-separated list of bank connection identifiers. If specified,\
          \ then only accounts that relate to the given bank connections will be regarded.\
          \ If not specified, then all accounts will be regarded."
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: minLastSuccessfulUpdate
        in: query
        description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Lower bound for an\
          \ account's last successful update date, e.g. '2016-01-01'. If specified,\
          \ then an account will only be regarded if any of its interfaces has a 'lastSuccessfulUpdate'\
          \ that is equal to or later than the given date."
        required: false
        schema:
          type: string
          format: date
      - name: maxLastSuccessfulUpdate
        in: query
        description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Upper bound for an\
          \ account's last successful update date, e.g. '2016-01-01'. If specified,\
          \ then an account will only be regarded if any of its interfaces has a 'lastSuccessfulUpdate'\
          \ that is equal to or earlier than the given date."
        required: false
        schema:
          type: string
          format: date
      - name: minBalance
        in: query
        description: "If specified, then only accounts whose balance is equal to or\
          \ greater than the given balance will be regarded. Can contain a positive\
          \ or negative number with at most two decimal places. Examples: -300.12,\
          \ or 90.95"
        required: false
        schema:
          type: number
      - name: maxBalance
        in: query
        description: "If specified, then only accounts whose balance is equal to or\
          \ less than the given balance will be regarded. Can contain a positive or\
          \ negative number with at most two decimal places. Examples: -300.12, or\
          \ 90.95"
        required: false
        schema:
          type: number
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: List of requested accounts
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountList"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
    delete:
      tags:
      - Accounts
      summary: Delete all accounts
      description: "Delete all accounts of the user that is authorized by the access_token,\
        \ including all transactions and balance data. Must pass the user's access_token.<br/><br/>Notes:\
        \ <br/>&bull; Deleting all of the user's accounts also deletes all of his\
        \ bank connections, including consents on the bank's side.<br/>&bull; All\
        \ notification rules that are connected to any specific accounts will get\
        \ deleted as well.<br/>&bull; If at least one of the user's bank connections\
        \ in currently in the process of import, update, or transaction categorization,\
        \ then this service will perform no action at all.<br/>&bull; If a consent\
        \ will get deleted by this service, it's not guaranteed that the consent will\
        \ also get deleted on the bank's side, as not all banks may support this.\
        \ Also errors during bank consent deletion will be ignored, so the service\
        \ won't fail due to this.<br/><br/><b>ATTENTION:</b> For the deletion of XS2A\
        \ consents, additional headers should be included in the request if the end\
        \ user is involved. Please refer to the <a href='#general-user-metadata'>User\
        \ metadata</a> section under 'General Information' of the API documentation."
      operationId: deleteAllAccounts
      parameters:
      - name: PSU-IP-Address
        $ref: "#/components/parameters/PSU-IP-Address"
      - name: PSU-Device-OS
        $ref: "#/components/parameters/PSU-Device-OS"
      - name: PSU-User-Agent
        $ref: "#/components/parameters/PSU-User-Agent"
      - name: X-HTTP-Method-Override
        $ref: "#/components/parameters/X-HTTP-Method-Override"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: List of identifiers of deleted accounts
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdentifierList"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "423":
          description: "No action was performed as at least one account is currently\
            \ being imported, updated (either by the user or by finAPI's automatic\
            \ batch update), or because the categorization of transactions is performed."
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http423ResponseExample:
                  $ref: "#/components/examples/http423ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/accounts/dailyBalances:
    get:
      tags:
      - Accounts
      summary: Get daily balances
      description: "Returns the user's daily balances for a given period and a set\
        \ of specified accounts (or all accounts, if none are specified). The daily\
        \ balances are calculated by finAPI and are based on the current balances\
        \ of the regarded accounts.<br/><br/>NOTES:<br/>&bull; This service is not\
        \ calculating exchange rates for transactions, so if an account contains any\
        \ transactions with a currency different to the account's currency, then the\
        \ service is unable to provide accurate data.<br/>&bull; This service may\
        \ return incorrect results if the 'skipBalancesDownload' and/or the 'skipPositionsDownload'\
        \ flag have been set to true during an import, update or connect interface\
        \ service call."
      operationId: getDailyBalances
      parameters:
      - name: accountIds
        in: query
        description: "A comma-separated list of (non-security) account identifiers.\
          \ If no accounts are specified, all (non-security) accounts of the user\
          \ are regarded."
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: startDate
        in: query
        description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Lower bound for the\
          \ date range to be returned. Note that the requested date range [startDate\
          \ .. endDate] may not exceed 1 year (366 days - considering Leap Years too).If\
          \ 'startDate' is not specified, it defaults to 'endDate' minus one month."
        required: false
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Upper bound for the\
          \ date range to be returned. Note that the requested date range [startDate\
          \ .. endDate] may not exceed 1 year (366 days - considering Leap Years too).\
          \ If 'endDate' is not specified, it defaults to today's date."
        required: false
        schema:
          type: string
          format: date
      - name: withProjection
        in: query
        description: "Whether finAPI should project the first and last actually existing\
          \ balance of an account into the past and future. When passing 'true', then\
          \ the result will always contain a daily balance for every day of the entire\
          \ requested date range, even for days before the first actually existing\
          \ balance, resp. after the last actually existing balance. Those days will\
          \ have the same balance as the day of the first actual balance, resp. last\
          \ actual balance, i.e. the first/last balance will be infinitely projected\
          \ into the past/the future. When passing 'false', then the result will contain\
          \ daily balances only from the day on where the first actual balance exists\
          \ for any of the regarded accounts, and only up to the day where the last\
          \ actual balance exists for any of the regarded accounts. Note that when\
          \ in this case there are no actual balances within the requested date range,\
          \ then an empty array will be returned. Default value for this parameter\
          \ is 'true'."
        required: false
        schema:
          type: boolean
          default: true
      - name: page
        in: query
        description: Result page that you want to retrieve.
        schema:
          minimum: 1
          type: integer
          default: 1
      - name: perPage
        in: query
        description: Maximum number of records per page. By default it's 20.
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 20
      - name: order
        in: query
        description: "Determines the order of the results. You can order the results\
          \ by 'date', 'balance', 'income' or 'spending'. The default order for this\
          \ service is 'date,asc'. You can also order by multiple properties. In that\
          \ case the order of the parameters passed is important. Example: '/accounts/dailyBalances?order=date,desc&order=balance,asc'\
          \ will return daily balances ordered by 'date' (descending), where items\
          \ with the same 'date' are ordered by 'balance' (ascending). The general\
          \ format is: 'property[,asc|desc]', with 'asc' being the default value."
        schema:
          type: array
          items:
            type: string
            default: "date,ASC"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: List of requested daily balances
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DailyBalanceList"
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: Account(s) not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "422":
          description: Invalid date range (e.g. endDate < startDate)
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/users/{userId}:
    delete:
      tags:
      - Users
      summary: Delete an unverified user
      description: Delete an unverified user. Must pass your global (i.e. client)
        access_token.<br/><br/>Notes:<br/>&bull; Unverified users can only exist if
        the field 'isUserAutoVerificationEnabled' (see Client Configuration Resource)
        is set to 'false' (or had been false at some point in the past).<br/>&bull;
        finAPI will send a notification about the deletion of the user to each of
        your clients that has a user synchronization callback URL set in its configuration.
        This also includes the client that is performing this request.<br/>&bull;
        finAPI regards user identifiers case-insensitive.
      operationId: deleteUnverifiedUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: X-HTTP-Method-Override
        $ref: "#/components/parameters/X-HTTP-Method-Override"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: User deleted (empty response body)
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
        "400":
          description: Identifier is not given
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "404":
          description: User not found
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http404ResponseExample:
                  $ref: "#/components/examples/http404ResponseExample"
        "422":
          description: The user with the given identifier is already verified
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
  /api/v2/bankConnections/{id}/aisConsent:
    delete:
      tags:
      - Bank Connections
      summary: Delete a consent
      description: "Deletes a consent for an interface of a bank connection, on finAPI\
        \ and on the bank's side.<br/><br/><b>ATTENTION:</b> For XS2A interface additional\
        \ headers must be included in the request if the end user is involved. Please\
        \ refer to the <a href='#general-user-metadata'>User metadata</a> section\
        \ under 'General Information' of the API documentation."
      operationId: deleteConsent
      parameters:
      - name: id
        in: path
        description: Identifier of a bank connection
        required: true
        schema:
          type: integer
          format: int64
      - name: bankingInterface
        in: query
        description: Target banking interface
        required: true
        schema:
          type: string
          enum:
          - WEB_SCRAPER
          - FINTS_SERVER
          - XS2A
      - name: forceDeletion
        in: query
        description: "Whether the consent should get deleted from the finAPI database\
          \ in any case, even if it couldn't get deleted on the bank’s side. Default\
          \ value is 'false'"
        required: false
        schema:
          type: boolean
      - name: PSU-IP-Address
        $ref: "#/components/parameters/PSU-IP-Address"
      - name: PSU-Device-OS
        $ref: "#/components/parameters/PSU-Device-OS"
      - name: PSU-User-Agent
        $ref: "#/components/parameters/PSU-User-Agent"
      - name: X-HTTP-Method-Override
        $ref: "#/components/parameters/X-HTTP-Method-Override"
      - $ref: "#/components/parameters/X-Request-Id"
      responses:
        "200":
          description: Consent deletion result
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteConsent"
        "400":
          description: Bad Request
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http400ResponseExample:
                  $ref: "#/components/examples/http400ResponseExample"
        "401":
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadCredentialsError"
              examples:
                http401ResponseExample:
                  $ref: "#/components/examples/http401ResponseExample"
        "403":
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http403ResponseExample:
                  $ref: "#/components/examples/http403ResponseExample"
        "422":
          description: UNKNOWN_ENTITY:<br/> - if the given bank connection identifier
            does not exist;<br/> - if the given interface does not exist for the bank
            connection;<br/>INVALID_CONSENT:<br/> - if the bank server responded with
            an error when finAPI tried to delete the consent.<br/>
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http422ResponseExample:
                  $ref: "#/components/examples/http422ResponseExample"
        "423":
          description: The consent cannot be removed at the moment as the bank connection
            interface is currently being imported or updated (either by the user or
            by finAPI's automatic batch update).
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http423ResponseExample:
                  $ref: "#/components/examples/http423ResponseExample"
        "500":
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: "#/components/headers/X-Request-Id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                http500ResponseExample:
                  $ref: "#/components/examples/http500ResponseExample"
      security:
      - finapi_auth:
        - all
components:
  schemas:
    AccessToken:
      required:
      - access_token
      - expires_in
      - scope
      - token_type
      type: object
      properties:
        scope:
          type: string
          description: Requested scopes (it's always 'all')
          example: all
        token_type:
          type: string
          description: Token type (it's always 'bearer')
          example: bearer
        refresh_token:
          type: string
          description: "Refresh token. Only set in case of grant_type='password'.\
            \ Token has a length of up to 8192 characters. Currently tokens with a\
            \ maximum length of 128 characters are returned, but longer token types\
            \ may be used in the future."
          example: 0b9KjiBVlZLz7a4HshSAIcFuscStiXT1VzT5mgNYwCQ_dWctTDsaIjedAhD1LpsOFJ7x6K8Emf8M3VOQkwNFR9FHijALYSQw2UeRwAC2MvrOKwfF1dHmOq5VEVYEaGf6
        access_token:
          type: string
          description: "Access token. Token has a length of up to 8192 characters.\
            \ Currently tokens with a maximum length of 128 characters are returned,\
            \ but longer token types may be used in the future."
          example: yvMbx_TgwdYE0hgOVb8N4ZOvxOukqfjzYOGRZcJiCjQuRGkVIBfjjV3YG4zKTGiY2aPn2cQTGaQOT8uo5uo7_QOXts1s5UBSVuRHc6a8X30RrGBTyqV9h26SUHcZPNbZ
        expires_in:
          type: integer
          description: "Expiration time in seconds. A value of 0 means that the token\
            \ never expires (unless it is explicitly invalidated, e.g. by revocation,\
            \ or when a user gets locked)."
          format: int32
          example: 3600
      description: OAuth access token data
    Account:
      required:
      - accountNumber
      - accountType
      - bankConnectionId
      - id
      - interfaces
      - isNew
      - isSeized
      type: object
      properties:
        id:
          type: integer
          description: Account identifier
          format: int64
          example: 1
        bankConnectionId:
          type: integer
          description: Identifier of the bank connection that this account belongs
            to
          format: int64
          example: 1
        accountName:
          type: string
          description: Account name
          example: Testaccount
        iban:
          type: string
          description: Account's IBAN. Note that this field can change from 'null'
            to a value - or vice versa - any time when the account is being updated.
            This is subject to changes within the bank's internal account management.
          example: DE89370400440532013000
        accountNumber:
          type: string
          description: "(National) account number. Note that this value might change\
            \ whenever the account is updated (for example, leading zeros might be\
            \ added or removed)."
          example: "12345678"
        subAccountNumber:
          type: string
          description: Account's sub-account-number. Note that this field can change
            from 'null' to a value - or vice versa - any time when the account is
            being updated. This is subject to changes within the bank's internal account
            management.
          example: "1234"
        accountHolderName:
          type: string
          description: Name of the account holder
          example: Herr Max Mustermann
        accountHolderId:
          type: string
          description: "Bank's internal identification of the account holder. Note\
            \ that if your client has no license for processing this field, it will\
            \ always be 'XXXXX'"
          example: XXXXX
        accountCurrency:
          type: string
          description: Account's currency
          example: EUR
        accountType:
          description: |-
            An account type.<br/><br/>Checking,<br/>Savings,<br/>CreditCard,<br/>Security,<br/>Loan,<br/>Membership,<br/>Bausparen<br/><br/><br/>
            <strong>Type:</strong> AccountType
          example: Checking
          allOf:
          - $ref: "#/components/schemas/AccountType"
        balance:
          type: number
          description: Current account balance
          example: 99.99
        overdraft:
          type: number
          description: Current overdraft
          example: 99.99
        overdraftLimit:
          type: number
          description: Overdraft limit
          example: 99.99
        availableFunds:
          type: number
          description: "Current available funds. Note that this field is only set\
            \ if finAPI can make a definite statement about the current available\
            \ funds. This might not always be the case, for example if there is not\
            \ enough information available about the overdraft limit and current overdraft."
          example: 99.99
        isNew:
          type: boolean
          description: "Indicating whether this account is 'new' or not. Any newly\
            \ imported account will have this flag initially set to true, and remain\
            \ so until you set it to false (see PATCH /accounts/<id>). How you use\
            \ this field is up to your interpretation, however it is recommended to\
            \ set the flag to false for all accounts right after the initial import\
            \ of the bank connection. This way, you will be able recognize accounts\
            \ that get newly imported during a later update of the bank connection,\
            \ by checking for any accounts with the flag set to true right after an\
            \ update."
          example: true
        interfaces:
          type: array
          description: |-
            Set of interfaces to which this account is connected<br/>
            <strong>Type:</strong> AccountInterface
          items:
            $ref: "#/components/schemas/AccountInterface"
        isSeized:
          type: boolean
          description: "Whether this account is seized. Note that this information\
            \ is not received from the bank, but determined by finAPI based on the\
            \ available account information."
          example: false
      description: Container for a bank account's data
    AccountCapability:
      type: string
      enum:
      - DATA_DOWNLOAD
      - IBAN_ONLY_SEPA_MONEY_TRANSFER
      - IBAN_ONLY_SEPA_DIRECT_DEBIT
      - SEPA_MONEY_TRANSFER
      - SEPA_COLLECTIVE_MONEY_TRANSFER
      - SEPA_BASIC_DIRECT_DEBIT
      - SEPA_BASIC_COLLECTIVE_DIRECT_DEBIT
      - SEPA_B2B_DIRECT_DEBIT
      - SEPA_B2B_COLLECTIVE_DIRECT_DEBIT
    AccountInterface:
      required:
      - bankingInterface
      - capabilities
      - paymentCapabilities
      - status
      type: object
      properties:
        bankingInterface:
          description: |-
            Banking interface. Possible values:<br><br>&bull; <code>WEB_SCRAPER</code> - finAPI will parse account data from the bank's online banking website.<br>&bull; <code>FINTS_SERVER</code> - finAPI will download account data via the bank's FinTS interface.<br>&bull; <code>XS2A</code> - finAPI will download account data via the bank's XS2A interface.<br><br/>
            <strong>Type:</strong> BankingInterface
          example: FINTS_SERVER
          allOf:
          - $ref: "#/components/schemas/BankingInterface"
        status:
          description: |-
            The current status of the account from the perspective of this interface. Possible values are:<br/>&bull; <code>UPDATED</code> means that the account is up to date from finAPI's point of view. This means that no current import/update is running, and the previous import/update had successfully updated the account's data (e.g. transactions and securities), and the bank given balance matched the transaction's calculated sum, meaning that no adjusting entry ('Zwischensaldo' transaction) was inserted.<br/>&bull; <code>UPDATED_FIXED</code> means that the account is up to date from finAPI's point of view (no current import/update is running, and the previous import/update had successfully updated the account's data), BUT there was a deviation in the bank given balance which was fixed by adding an adjusting entry ('Zwischensaldo' transaction).<br/>&bull; <code>DOWNLOAD_IN_PROGRESS</code> means that the account's data is currently being imported/updated.<br/>&bull; <code>DOWNLOAD_FAILED</code> means that the account data was not successfully imported or updated. Possible reasons: finAPI could not get the account's balance, or it could not parse all transactions/securities, or some internal error has occurred. Also, it could mean that finAPI could not even get to the point of receiving the account data from the bank server, for example because of incorrect login credentials or a network problem. Note however that when we get a balance and just an empty list of transactions or securities, then this is regarded as valid and successful download. The reason for this is that for some accounts that have little activity, we may actually get no recent transactions but only a balance.<br/>&bull; <code>DEPRECATED</code> means that the account could no longer be matched with any account from the bank server. This can mean either that the account was terminated by the user and is no longer sent by the bank server, or that finAPI could no longer match it because the account's data (name, type, iban, account number, etc.) has been changed by the bank.<br/>
            <strong>Type:</strong> AccountStatus
          example: UPDATED
          allOf:
          - $ref: "#/components/schemas/AccountStatus"
        capabilities:
          uniqueItems: true
          type: array
          description: |-
            List of account capabilities that this interface supports. Possible values are:<br/>&bull; <code>DATA_DOWNLOAD</code> - download of balance and transactions/securities<br/>&bull; <code>IBAN_ONLY_SEPA_MONEY_TRANSFER</code> - money transfer where the recipient's account is defined just by the IBAN<br/>&bull; <code>IBAN_ONLY_SEPA_DIRECT_DEBIT</code> - direct debit where the debitor's account is defined just by the IBAN<br/>&bull; <code>SEPA_MONEY_TRANSFER</code> - single money transfer<br/>&bull; <code>SEPA_COLLECTIVE_MONEY_TRANSFER</code> - collective money transfer<br/>&bull; <code>SEPA_BASIC_DIRECT_DEBIT</code> - single basic direct debit<br/>&bull; <code>SEPA_BASIC_COLLECTIVE_DIRECT_DEBIT</code> - collective basic direct debit<br/>&bull; <code>SEPA_B2B_DIRECT_DEBIT</code> - single Business-To-Business direct debit<br/>&bull; <code>SEPA_B2B_COLLECTIVE_DIRECT_DEBIT</code> - collective Business-To-Business direct debit<br/><br/>Note that this list may be empty if the interface is not supporting any of the above capabilities. Also note that the list may be refreshed each time the account is being updated through this interface, so available capabilities may get added or removed in the course of an account update.<br/>
            <strong>Type:</strong> AccountCapability
          example:
          - DATA_DOWNLOAD
          - IBAN_ONLY_SEPA_MONEY_TRANSFER
          - IBAN_ONLY_SEPA_DIRECT_DEBIT
          - SEPA_MONEY_TRANSFER
          - SEPA_COLLECTIVE_MONEY_TRANSFER
          - SEPA_BASIC_DIRECT_DEBIT
          - SEPA_BASIC_COLLECTIVE_DIRECT_DEBIT
          - SEPA_B2B_DIRECT_DEBIT
          - SEPA_B2B_COLLECTIVE_DIRECT_DEBIT
          items:
            allOf:
            - $ref: "#/components/schemas/AccountCapability"
        paymentCapabilities:
          type: object
          description: |-
            The payment capabilities of this account.<br/>
            <strong>Type:</strong> AccountInterfacePaymentCapabilities
          allOf:
          - $ref: "#/components/schemas/AccountInterfacePaymentCapabilities"
        lastSuccessfulUpdate:
          type: string
          description: "<strong>Format:</strong> 'YYYY-MM-DD'T'HH:MM:SS.SSSXXX' (RFC\
            \ 3339, section 5.6)<br/>Timestamp of when the account was last successfully\
            \ updated using this interface (or initially imported); more precisely:\
            \ time when the account data (balance and positions) has been stored into\
            \ the finAPI databases."
          format: date-time
          example: "2018-01-01T09:18:40.473+01:00"
        lastUpdateAttempt:
          type: string
          description: "<strong>Format:</strong> 'YYYY-MM-DD'T'HH:MM:SS.SSSXXX' (RFC\
            \ 3339, section 5.6)<br/>Timestamp of when the account was last tried\
            \ to be updated using this interface (or initially imported); more precisely:\
            \ time when the update (or initial import) was triggered."
          format: date-time
          example: "2018-01-01T09:18:40.473+01:00"
      description: Account interface details
    AccountInterfacePaymentCapabilities:
      required:
      - domesticCollectiveMoneyTransfer
      - domesticFutureCollectiveMoneyTransfer
      - domesticFutureMoneyTransfer
      - domesticMoneyTransfer
      - sepaFutureCollectiveMoneyTransfer
      - sepaFutureMoneyTransfer
      - sepaInstantMoneyTransfer
      type: object
      properties:
        sepaInstantMoneyTransfer:
          type: boolean
          description: Capability to do a (single) SEPA instant money transfer.
          example: true
        sepaFutureMoneyTransfer:
          type: boolean
          description: Capability to do a (single) SEPA money transfer with a future
            execution date.
          example: true
        sepaFutureCollectiveMoneyTransfer:
          type: boolean
          description: Capability to do a collective SEPA money transfer with a future
            execution date.
          example: true
        domesticMoneyTransfer:
          type: boolean
          description: Capability to do a domestic money transfer.
          example: true
        domesticCollectiveMoneyTransfer:
          type: boolean
          description: Capability to do a collective domestic money transfer.
          example: true
        domesticFutureMoneyTransfer:
          type: boolean
          description: Capability to do a (single) domestic money transfer with a
            future execution date.
          example: true
        domesticFutureCollectiveMoneyTransfer:
          type: boolean
          description: Capability to do a collective domestic money transfer with
            a future execution date.
          example: true
      description: Payment capabilities of a bank account
    AccountList:
      required:
      - accounts
      type: object
      properties:
        accounts:
          type: array
          description: |-
            List of bank accounts<br/>
            <strong>Type:</strong> Account
          items:
            $ref: "#/components/schemas/Account"
      description: Container for data of multiple bank accounts
    AccountParams:
      type: object
      properties:
        accountName:
          maxLength: 512
          minLength: 1
          pattern: "[A-Za-z0-9¡-ʯ &\\(\\)\\{\\}\\[\\]\\.:,;\\?!\\+\\-_\\$@#~`\\^€\
            ]*"
          type: string
          description: Account name.
          example: Testaccount
        accountType:
          description: |-
            An account type.<br/><br/>Checking,<br/>Savings,<br/>CreditCard,<br/>Security,<br/>Loan,<br/>Membership,<br/>Bausparen<br/><br/><br/>
            <strong>Type:</strong> AccountType
          example: Checking
          allOf:
          - $ref: "#/components/schemas/AccountType"
        isNew:
          type: boolean
          description: "Whether this account should be flagged as 'new' or not. Any\
            \ newly imported account will have this flag initially set to true, and\
            \ remain so until you set it to false (see PATCH /accounts/<id>). How\
            \ you use this field is up to your interpretation, however it is recommended\
            \ to set the flag to false for all accounts right after the initial import\
            \ of the bank connection. This way, you will be able to recognize accounts\
            \ that get newly imported during a later update of the bank connection,\
            \ by checking for any accounts with the flag set to 'true' after every\
            \ update of the bank connection."
          example: true
      description: "Container for an account's name, type and 'isNew' flag'."
    AccountReference:
      required:
      - iban
      type: object
      properties:
        iban:
          maxLength: 88
          minLength: 1
          type: string
          description: The account's IBAN
          example: DE89370400440532013000
      description: Account reference data
    AccountStatus:
      type: string
      enum:
      - UPDATED
      - UPDATED_FIXED
      - DOWNLOAD_IN_PROGRESS
      - DOWNLOAD_FAILED
      - DEPRECATED
    AccountType:
      type: string
      enum:
      - Checking
      - Savings
      - CreditCard
      - Security
      - Loan
      - Membership
      - Bausparen
    BadCredentialsError:
      required:
      - error
      - error_description
      type: object
      properties:
        error:
          type: string
          description: Error type
          example: invalid_token
        error_description:
          type: string
          description: Error description
          example: Not authenticated or invalid access_token
    Bank:
      required:
      - blz
      - id
      - interfaces
      - isBeta
      - isTestBank
      - name
      - popularity
      type: object
      properties:
        id:
          type: integer
          description: Bank identifier
          format: int64
          example: 277672
        name:
          type: string
          description: Name of bank
          example: FinAPI Test Bank
        bic:
          type: string
          description: BIC of bank
          example: TESTBANKING
        blz:
          type: string
          description: "BLZ of bank. Please do NOT use this field to identify a bank,\
            \ since there can be multiple banks with the same BLZ. If you need to\
            \ identify a bank, refer to the <code>id</code> field instead."
          example: "00000000"
        location:
          type: string
          description: "Bank location (two-letter country code; ISO 3166 ALPHA-2).\
            \ Note that when this field is not set, it means that this bank depicts\
            \ an international institute which is not bound to any specific country."
          example: DE
        city:
          type: string
          description: City that this bank is located in. Note that this field may
            not be set for some banks.
          example: München
        isTestBank:
          type: boolean
          description: "If true, then this bank does not depict a real bank, but rather\
            \ a testing endpoint provided by a bank or by finAPI. You probably want\
            \ to regard these banks only during the development of your application,\
            \ but not in production. You can filter out these banks in production\
            \ by making sure that the 'isTestBank' parameter is always set to 'false'\
            \ whenever your application is calling the 'Get and search all banks'\
            \ service."
          example: true
        popularity:
          type: integer
          description: "Popularity of this bank with your users (mandator-wide, i.e.\
            \ across all of your clients). The value equals the number of bank connections\
            \ that are currently imported for this bank across all of your users (which\
            \ means it is a constantly adjusting value). You can use this field for\
            \ statistical evaluation, and also for ordering bank search results (see\
            \ service 'Get and search all banks')."
          format: int32
          example: 95
        interfaces:
          type: array
          description: |-
            Set of interfaces that exist for the bank.<br/><br/>Note:<br/>&bull; If the set is empty, then the bank is not supported.<br/>&bull; Even if an interface is listed, it might not be usable at the moment. Please always refer to the fields 'BankInterface.isAisSupported' / 'BankInterface.isPisSupported' before you attempt to use an interface.<br/>&bull; The WEB_SCRAPER interface might be disabled for your client (see GET /clientConfiguration). When this is the case, then finAPI will not use the web scraper for data download, and if the web scraper is the only supported interface of this bank, then finAPI will not allow to download any data for this bank at all (for details, see POST /bankConnections/import and POST /bankConnections/update). Also, you will not be able to do payments via the WEB_SCRAPER interface, if web scraping is disabled for your client.<br/>
            <strong>Type:</strong> BankInterface
          items:
            $ref: "#/components/schemas/BankInterface"
        bankGroup:
          type: object
          description: |-
            Bank group<br/>
            <strong>Type:</strong> BankGroup
          allOf:
          - $ref: "#/components/schemas/BankGroup"
        isBeta:
          type: boolean
          description: "Whether this bank is in beta phase. For more details, please\
            \ refer to the field ClientConfiguration.betaBanksEnabled."
          example: true
        logo:
          type: object
          description: |-
            Logo of the bank. If available, the logo will be rendered on our Web Form 2.0 where applicable. Customers that do not use our Web Form can use this data to render the bank's logo within their application's front end.<br/>
            <strong>Type:</strong> BankImage
          allOf:
          - $ref: "#/components/schemas/BankImage"
        icon:
          type: object
          description: |-
            Icon of the bank. If available, the icon will be rendered on our Web Form 2.0 where applicable. Customers that do not use our Web Form can use this data to render the bank's icon within their application's front end.<br/>
            <strong>Type:</strong> BankImage
          allOf:
          - $ref: "#/components/schemas/BankImage"
      description: Container for a bank's data
    BankConnection:
      required:
      - accountIds
      - bank
      - categorizationStatus
      - id
      - interfaces
      - updateStatus
      type: object
      properties:
        id:
          type: integer
          description: Bank connection identifier
          format: int64
          example: 1
        name:
          type: string
          description: "Custom name for the bank connection. You can set this field\
            \ with the 'Edit a bank connection' service, as well as during the initial\
            \ import of the bank connection."
          example: Bank Connection
        updateStatus:
          type: string
          description: "Current status of data download (account balances and transactions/securities).\
            \ The POST /bankConnections/import and POST /bankConnections/<id>/update\
            \ services will set this flag to IN_PROGRESS before they return. Once\
            \ the import or update has finished, the status will be changed to READY."
          example: READY
          enum:
          - IN_PROGRESS
          - READY
        categorizationStatus:
          description: |-
            Current status of transaction categorization. The asynchronous download process that is triggered by a call of the POST /bankConnections/import and POST /bankConnections/<id>/update services (and also by finAPI's auto update, if enabled) will set this flag to PENDING once the download has finished and a categorization is scheduled for the imported transactions. A separate categorization thread will then start to categorize the transactions (during this process, the status is IN_PROGRESS). When categorization has finished, the status will be (re-)set to READY. Note that the current categorization status should only be queried after the download has finished, i.e. once the download status has switched from IN_PROGRESS to READY.<br/>
            <strong>Type:</strong> CategorizationStatus
          example: READY
          allOf:
          - $ref: "#/components/schemas/CategorizationStatus"
        interfaces:
          type: array
          description: |-
            Set of interfaces that are connected for this bank connection.<br/>
            <strong>Type:</strong> BankConnectionInterface
          items:
            $ref: "#/components/schemas/BankConnectionInterface"
        accountIds:
          type: array
          description: Identifiers of the accounts that belong to this bank connection
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
            format: int64
        owners:
          type: array
          description: |-
            Information about the owner(s) of the bank connection<br/>
            <strong>Type:</strong> BankConnectionOwner
          items:
            $ref: "#/components/schemas/BankConnectionOwner"
        bank:
          type: object
          description: |-
            Bank that this connection belongs to<br/>
            <strong>Type:</strong> Bank
          allOf:
          - $ref: "#/components/schemas/Bank"
      description: Container for a bank connection's data
    BankConnectionInterface:
      required:
      - bankingInterface
      - loginCredentials
      - maxDaysForDownload
      - twoStepProcedures
      - userActionRequired
      type: object
      properties:
        bankingInterface:
          description: |-
            Banking interface. Possible values:<br><br>&bull; <code>WEB_SCRAPER</code> - means that finAPI will parse data from the bank's online banking website.<br>&bull; <code>FINTS_SERVER</code> - means that finAPI will download data via the bank's FinTS interface.<br>&bull; <code>XS2A</code> - means that finAPI will download data via the bank's XS2A interface.<br><br/>
            <strong>Type:</strong> BankingInterface
          example: FINTS_SERVER
          allOf:
          - $ref: "#/components/schemas/BankingInterface"
        loginCredentials:
          type: array
          description: |-
            Login fields for this interface (in the order that we suggest to show them to the user), with their currently stored values. Note that this list always contains all existing login fields for this interface, even when there is no stored value for a field (value will be null in such a case).<br/>
            <strong>Type:</strong> LoginCredentialResource
          items:
            $ref: "#/components/schemas/LoginCredentialResource"
        defaultTwoStepProcedureId:
          type: string
          description: "The default two-step-procedure for this interface. Must match\
            \ one of the available 'procedureId's from the 'twoStepProcedures' list.\
            \ When this field is set, then finAPI will automatically try to select\
            \ the procedure wherever applicable. Note that the list of available procedures\
            \ of a bank connection may change as a result of an update of the connection,\
            \ and if this field references a procedure that is no longer available\
            \ after an update, finAPI will automatically clear the default procedure\
            \ (set it to null)."
          example: "955"
        twoStepProcedures:
          type: array
          description: |-
            Available two-step-procedures in this interface, used for submitting a money transfer or direct debit request (see /accounts/requestSepaMoneyTransfer or /requestSepaDirectDebit),or for multi-step-authentication during bank connection import or update. The available two-step-procedures mya be re-evaluated each time this bank connection is updated (/bankConnections/update). This means that this list may change as a result of an update.<br/>
            <strong>Type:</strong> TwoStepProcedure
          items:
            $ref: "#/components/schemas/TwoStepProcedure"
        aisConsent:
          type: object
          description: |-
            If this field is set, it means that this interface is handing out a consent to finAPI in exchange for the login credentials. finAPI needs to use this consent to get access to the account list and account data (i.e. Account Information Services, AIS). If this field is not set, it means that this interface does not use such consents.<br/>
            <strong>Type:</strong> BankConsent
          allOf:
          - $ref: "#/components/schemas/BankConsent"
        lastManualUpdate:
          type: object
          description: |-
            Result of the last manual update of the associated bank connection using this interface. If no manual update has ever been done so far with this interface, then this field will not be set.<br/>
            <strong>Type:</strong> UpdateResult
          allOf:
          - $ref: "#/components/schemas/UpdateResult"
        lastAutoUpdate:
          type: object
          description: |-
            Result of the last auto update of the associated bank connection using this interface (ran by finAPI's automatic batch update process). If no auto update has ever been done so far with this interface, then this field will not be set.<br/>
            <strong>Type:</strong> UpdateResult
          allOf:
          - $ref: "#/components/schemas/UpdateResult"
        userActionRequired:
          type: boolean
          description: "This field indicates whether the user's attention is required\
            \ for the next update of the given bank connection interface.<br/>If the\
            \ field is true, finAPI stops auto-updates of this bank connection interface\
            \ to mitigate the risk of locking the user's bank account and also of\
            \ triggering a multi-step authentication that might lead to a notification\
            \ being sent to the end-user.<br/>If the field is false, the user's attention\
            \ might still be required for the next bank update, e.g. because of new\
            \ Terms and Conditions that have to get approved by the user.(this only\
            \ applies to users whose mandator doesn't have an AIS license)<br/>Every\
            \ communication with the bank (e.g. updating a bank connection, submitting\
            \ a money transfer or a direct debit, etc.) can change the value of this\
            \ flag. If the field is true, we recommend to ask the end-user to trigger\
            \ a manual update of the bank connection interface (using the 'Update\
            \ a bank connection' service). If the update completes successfully without\
            \ triggering a strong customer authentication or results in storing a\
            \ valid XS2A consent, this flag will switch to false. The logic about\
            \ determination of the user's attention being required might change in\
            \ time. Please use this as a convenience function to know, when you have\
            \ to involve the user in the next communication with the bank. Once the\
            \ flag switches to false, the bank connection interface will be enabled\
            \ again for the auto-update (if it is configured)."
          example: true
        maxDaysForDownload:
          type: integer
          description: "This setting defines how much of an account's transactions\
            \ history will get downloaded whenever a new account is imported. More\
            \ technically, it depicts the number of days to download transactions\
            \ for, starting from - and including - the date of the account import.\
            \ For example, on an account import that happens today, the value 30 would\
            \ instruct finAPI to download transactions from the past 30 days (including\
            \ today). The minimum allowed value is 14, the maximum value is 3650.\
            \ Also possible is the value 0 (which is the default value), in which\
            \ case there will be no limit to the transactions download and finAPI\
            \ will try to get all transactions that it can. <br/><br/>NOTES:<br/>&bull;\
            \ There is no guarantee that finAPI will actually download transactions\
            \ for the entire defined date range, as there may be limitations to the\
            \ download range (set by the bank or by finAPI, e.g. see ClientConfiguration.transactionImportLimitation).\
            \ <br/>&bull; This parameter only applies to transactions, not to security\
            \ positions; For security accounts, finAPI will always download all security\
            \ positions that it can. <br/>&bull; This setting is stored for each interface\
            \ individually.<br/>&bull; After an interface has been connected with\
            \ this setting, there is no way to change the setting for that interface\
            \ afterwards.<br/>&bull; <b>If you do not limit the download range to\
            \ a value less than 90 days, the bank is more likely to trigger a strong\
            \ customer authentication request for the user when finAPI is attempting\
            \ to download the transactions.</b>"
          format: int32
          example: 365
      description: Resource representing a bank connection interface
    BankConnectionList:
      required:
      - connections
      type: object
      properties:
        connections:
          type: array
          description: |-
            List of bank connections<br/>
            <strong>Type:</strong> BankConnection
          items:
            $ref: "#/components/schemas/BankConnection"
      description: Container for data of multiple bank connections
    BankConnectionOwner:
      type: object
      properties:
        firstName:
          type: string
          description: First name
          example: Max
        lastName:
          type: string
          description: Last name
          example: Mustermann
        salutation:
          type: string
          description: Salutation
          example: Herr
        title:
          type: string
          description: Title
          example: Dr.
        email:
          type: string
          description: Email
          example: email@localhost.de
        dateOfBirth:
          type: string
          description: <strong>Format:</strong> 'YYYY-MM-DD'<br/>Date of birth
          format: date
          example: "1980-01-01"
        postCode:
          type: string
          description: Post code
          example: "80000"
        country:
          type: string
          description: Country
          example: Deutschland
        city:
          type: string
          description: City
          example: München
        street:
          type: string
          description: Street
          example: Musterstraße
        houseNumber:
          type: string
          description: House number
          example: "99"
      description: Container for a bank connection owner's data
    BankConsent:
      required:
      - status
      - supportsImportNewAccounts
      type: object
      properties:
        status:
          description: |-
            Status of the consent. If <code>PRESENT</code>, it means that finAPI has a consent stored and can use it to connect to the bank. If <code>NOT_PRESENT</code>, finAPI will need to acquire a consent when connecting to the bank, which may require login credentials (either passed by the client, or stored in finAPI), and/or user involvement. Note that even when a consent is <code>PRESENT</code>, it may no longer be valid and finAPI will still have to acquire a new consent.<br/>
            <strong>Type:</strong> BankConsentStatus
          example: PRESENT
          allOf:
          - $ref: "#/components/schemas/BankConsentStatus"
        expiresAt:
          type: string
          description: "<strong>Format:</strong> 'YYYY-MM-DD'T'HH:MM:SS.SSSXXX' (RFC\
            \ 3339, section 5.6)<br/>Expiration time of the consent."
          format: date-time
          example: "2018-01-01T09:18:40.473+01:00"
        supportsImportNewAccounts:
          type: boolean
          description: "Whether this consent supports the download of accounts that\
            \ weren't downloaded at the time when the consent was issued. If this\
            \ field is false, then you will have to delete this consent before you\
            \ can update the bank connection with 'importNewAccounts' = true (otherwise,\
            \ the update will result in an error). Please note that the user will\
            \ have to be involved in the process of issuing a new consent."
          example: true
      description: Bank consent information
    BankConsentStatus:
      type: string
      enum:
      - PRESENT
      - NOT_PRESENT
    BankGroup:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: Bank group identifier
          format: int64
          example: 1
        name:
          type: string
          description: Name of bank group
          example: FinAPI Test Bank Group
      description: Container for a bank group's data
    BankImage:
      required:
      - url
      type: object
      properties:
        url:
          type: string
          description: The URL to the bank's image resource.
          example: https://some-domain.io/assets/image.png
      description: Container for a bank's image
    BankInterface:
      required:
      - aisAccountTypes
      - bankingInterface
      - health
      - isAisSupported
      - isPisSupported
      - loginCredentials
      - paymentCapabilities
      - properties
      type: object
      properties:
        bankingInterface:
          description: |-
            Banking interface. Possible values:<br><br>&bull; <code>WEB_SCRAPER</code> - means that finAPI will parse data from the bank's online banking website.<br>&bull; <code>FINTS_SERVER</code> - means that finAPI will download data via the bank's FinTS server.<br>&bull; <code>XS2A</code> - means that finAPI will download data via the bank's XS2A interface.<br><br/>
            <strong>Type:</strong> BankingInterface
          example: FINTS_SERVER
          allOf:
          - $ref: "#/components/schemas/BankingInterface"
        tppAuthenticationGroup:
          type: object
          description: |-
            TPP Authentication Group which the bank interface is connected to<br/>
            <strong>Type:</strong> TppAuthenticationGroup
          allOf:
          - $ref: "#/components/schemas/TppAuthenticationGroup"
        loginCredentials:
          type: array
          description: |-
            Login fields for this interface (in the order that we suggest to show them to the user)<br/>
            <strong>Type:</strong> BankInterfaceLoginField
          items:
            $ref: "#/components/schemas/BankInterfaceLoginField"
        properties:
          uniqueItems: true
          type: array
          description: |-
            Set of interface properties/specifics. Possible values:<br><br>&bull; <code>REDIRECT_APPROACH</code> - means that the interface uses a redirect approach when authorizing the user. It requires you to pass the 'redirectUrl' field in all services which define the field. If the user already has imported a bank connection of the same bank that he is about to import, we recommend to confront the user with the question: <blockquote>For the selected bank you have already imported successfully the following accounts: &lt;account list&gt;. Are you sure that you want to import another bank connection from &lt;bank name&gt;?
            </blockquote>&bull; <code>DECOUPLED_APPROACH</code> - means that the interface can trigger a decoupled approval during user authorization.<br/><br/>&bull; <code>DETAILED_CONSENT</code> - means that the interface requires a list of account references when authorizing the user. It requires you to pass the 'accountReferences' field in all services which define the field.<br/><br/>Note that this set will be empty if the interface does not have any specific properties.<br/>
            <strong>Type:</strong> BankInterfaceProperty
          example:
          - REDIRECT_APPROACH
          items:
            allOf:
            - $ref: "#/components/schemas/BankInterfaceProperty"
        loginHint:
          type: string
          description: "Login hint. Contains a German message for the user that explains\
            \ what kind of credentials are expected.<br/><br/>Please note that it\
            \ is essential to always show the login hint to the user if there is one,\
            \ as the credentials that finAPI requires for the bank might be different\
            \ to the credentials that the user knows from his online banking.<br/><br/>Also\
            \ note that the contents of this field should always be interpreted as\
            \ HTML, as the text might contain HTML tags for highlighted words, paragraphs,\
            \ etc."
          example: Bitte geben Sie nur die ersten fünf Stellen Ihrer PIN ein.
        health:
          maximum: 100
          minimum: 0
          type: integer
          description: "The health status of this interface. This is a value between\
            \ 0 and 100, depicting the percentage of successful communication attempts\
            \ with the bank via this interface during the last couple of bank connection\
            \ imports or updates (across the entire finAPI system). <br/><br/>Note:<br/>&bull;\
            \ 'Successful' communication attempt means that there was no technical\
            \ error trying to establish a communication with the bank. Non-technical\
            \ errors (like incorrect credentials) are regarded successful communication\
            \ attempts.<br/>&bull; If an interface is not supported (see fields 'isAisSupported'/'isPisSupported'),\
            \ the health will always be 0."
          format: int32
          example: 100
        lastCommunicationAttempt:
          type: string
          description: "<strong>Format:</strong> 'YYYY-MM-DD'T'HH:MM:SS.SSSXXX' (RFC\
            \ 3339, section 5.6)<br/>Time of the last communication attempt with this\
            \ interface during an import, update or connect interface (across the\
            \ entire finAPI system)."
          format: date-time
          example: "2018-01-01T09:18:40.473+01:00"
        lastSuccessfulCommunication:
          type: string
          description: "<strong>Format:</strong> 'YYYY-MM-DD'T'HH:MM:SS.SSSXXX' (RFC\
            \ 3339, section 5.6)<br/>Time of the last successful communication with\
            \ this interface during an import, update or connect interface (across\
            \ the entire finAPI system)."
          format: date-time
          example: "2018-01-01T09:18:40.473+01:00"
        isAisSupported:
          type: boolean
          description: "Whether this interface has the general capability to perform\
            \ Account Information Services (AIS), i.e. if this interface can be used\
            \ to download accounts, balances and transactions. "
          example: true
        isPisSupported:
          type: boolean
          description: "Whether this interface has the general capability to perform\
            \ Payment Initiation Services (PIS). For more details, see the field 'paymentCapabilities'."
          example: true
        paymentCapabilities:
          type: object
          description: |-
            The general payment capabilities of this interface. If a capability is 'true', it means that the option is supported, as long as the involved account also supports it (see AccountInterface.capabilities and AccountInterface.paymentCapabilities).<br/><br/>If a capability is 'false', then the option is not supported for any account.<br/>
            <strong>Type:</strong> BankInterfacePaymentCapabilities
          allOf:
          - $ref: "#/components/schemas/BankInterfacePaymentCapabilities"
        paymentConstraints:
          $ref: "#/components/schemas/BankInterfacePaymentConstraints"
        aisAccountTypes:
          type: array
          description: |-
            The set of account types that we can confirm can be successfully imported through this interface. This field can help you select the appropriate interface if you want to fetch only specific account types when importing or updating a bank connection (see the field <code>accountTypes</code> in the respective services).<br/><br/>Note:<br/>&bull; The set can change over time. When we learn that a certain account type can be received, it will be added to the set. But an account type can also disappear from the set, when it was no longer received for a while.<br/>&bull; If an account type is not contained in the set, it could still be that the interface will provide such accounts - we just haven't seen this for a while. Accordingly, this field is only meant to hint you at the most promising interface. If none of a bank's interfaces have your desired account type listed, we still advise you to make an attempt.<br/>&bull; The set is not updated in real-time, but rather periodically. When you make a successful import of an account type that is not yet listed, there will be a delay until it appears.<br/>
            <strong>Type:</strong> AccountType
          example:
          - Checking
          - CreditCard
          items:
            allOf:
            - $ref: "#/components/schemas/AccountType"
      description: Interface used to connect to a bank
    BankInterfaceLoginField:
      required:
      - isMandatory
      - isSecret
      - isVolatile
      - label
      type: object
      properties:
        label:
          type: string
          description: "Contains a German label for the input field that you should\
            \ provide to the user. Also, these labels are used to identify login fields\
            \ on the API-level, when you pass credentials to the service."
          example: Nutzerkennung
        isSecret:
          type: boolean
          description: Whether this field has to be treated as a secret. In this case
            your application should use a password input field instead of a cleartext
            field.
          example: false
        isVolatile:
          type: boolean
          description: "This field depicts whether the given credential is volatile.\
            \ If a field is volatile, it means that the value for the field, which\
            \ is provided by the user, is valid only for a single authentication and\
            \ then gets invalidated on bank-side. If a login credential field is volatile,\
            \ it is not possible to store it in finAPI, as stored credentials will\
            \ never work for future authentications."
          example: false
        isMandatory:
          type: boolean
          description: Indicates whether this is a mandatory or optional login field.
            We recommend showing all login fields to the users (mandatory and optional).
          example: false
      description: Container for a bank's login credential field
    BankInterfacePaymentCapabilities:
      required:
      - domesticCollectiveMoneyTransfer
      - domesticFutureDatedMoneyTransfer
      - domesticMoneyTransfer
      - sepaCollectiveMoneyTransfer
      - sepaDirectDebit
      - sepaFutureDatedMoneyTransfer
      - sepaInstantMoneyTransfer
      - sepaMoneyTransfer
      - sepaStandingOrder
      type: object
      properties:
        sepaDirectDebit:
          type: boolean
          description: Capability to do SEPA direct debits.
          example: true
        sepaMoneyTransfer:
          type: boolean
          description: Capability to do a (single) SEPA money transfer.
          example: true
        sepaInstantMoneyTransfer:
          type: boolean
          description: Capability to do a (single) SEPA instant money transfer.
          example: true
        sepaCollectiveMoneyTransfer:
          type: boolean
          description: Capability to do a collective SEPA money transfer.
          example: true
        sepaFutureDatedMoneyTransfer:
          type: boolean
          description: Capability to do SEPA money transfers with a future execution
            date.
          example: true
        sepaStandingOrder:
          type: boolean
          description: Capability to do a SEPA standing order.
          example: true
        domesticMoneyTransfer:
          type: boolean
          description: Capability to do a domestic money transfer.
          example: true
        domesticCollectiveMoneyTransfer:
          type: boolean
          description: Capability to do a collective domestic money transfer.
          example: true
        domesticFutureDatedMoneyTransfer:
          type: boolean
          description: Capability to do a domestic money transfer with a future execution
            date.
          example: true
      description: Payment capabilities of a bank interface
    BankInterfacePaymentConstraints:
      type: object
      properties:
        sepaMoneyTransfer:
          $ref: "#/components/schemas/SepaMoneyTransferConstraints"
        domesticMoneyTransfer:
          $ref: "#/components/schemas/DomesticMoneyTransferConstraints"
      description: "Bank-specific constraints for payment execution via this interface.\
        \ Please be aware that certain banks impose extra conditions on payments.\
        \ When initiating a payment over finAPI, please take these constraints into\
        \ account to prevent payments from being rejected."
    BankInterfaceProperty:
      type: string
      enum:
      - REDIRECT_APPROACH
      - DECOUPLED_APPROACH
      - DETAILED_CONSENT
    BankingInterface:
      type: string
      enum:
      - WEB_SCRAPER
      - FINTS_SERVER
      - XS2A
    CashFlow:
      required:
      - balance
      - countAllTransactions
      - countIncomeTransactions
      - countSpendingTransactions
      - income
      - spending
      type: object
      properties:
        category:
          type: object
          description: |-
            Category of this cash flow. When null, then this is the cash flow of transactions that do not have a category.<br/>
            <strong>Type:</strong> Category
          allOf:
          - $ref: "#/components/schemas/Category"
        income:
          type: number
          description: The total calculated income for the given category
          example: 199.99
        spending:
          type: number
          description: The total calculated spending for the given category
          example: -99.99
        balance:
          type: number
          description: The calculated balance for the given category
          example: 100.0
        countIncomeTransactions:
          type: integer
          description: The total count of income transactions for the given category
          format: int32
          example: 5
        countSpendingTransactions:
          type: integer
          description: The total count of spending transactions for the given category
          format: int32
          example: 3
        countAllTransactions:
          type: integer
          description: The total count of all transactions for the given category
          format: int32
          example: 8
      description: Cash flow
    CashFlowList:
      required:
      - cashFlows
      - totalBalance
      - totalIncome
      - totalSpending
      type: object
      properties:
        cashFlows:
          type: array
          description: |-
            Array of cash flows<br/>
            <strong>Type:</strong> CashFlow
          items:
            $ref: "#/components/schemas/CashFlow"
        totalIncome:
          type: number
          description: The total income
          example: 199.99
        totalSpending:
          type: number
          description: The total spending
          example: -99.99
        totalBalance:
          type: number
          description: The total balance
          example: 100.0
      description: Cash flows
    CategorizationCheckResult:
      required:
      - transactionId
      type: object
      properties:
        transactionId:
          type: string
          description: "The transaction identifier. The transactionId of the transaction\
            \ that was passed to the service as input. This is not an actual ID of\
            \ a stored transaction in finAPI, as the checkCategorization service doesn't\
            \ store any data."
          example: transaction
        category:
          type: object
          description: |-
            A category. The determined transaction category for the given transactionId. This can be null, if the categorization algorithm fails to find a matching rule.<br/>
            <strong>Type:</strong> Category
          allOf:
          - $ref: "#/components/schemas/Category"
    CategorizationCheckResults:
      required:
      - categorizationCheckResult
      type: object
      properties:
        categorizationCheckResult:
          type: array
          description: |-
            List of results<br/>
            <strong>Type:</strong> CategorizationCheckResult
          items:
            $ref: "#/components/schemas/CategorizationCheckResult"
    CategorizationRuleDirection:
      type: string
      enum:
      - Income
      - Spending
      - Both
    CategorizationStatus:
      type: string
      enum:
      - PENDING
      - IN_PROGRESS
      - READY
    Category:
      required:
      - id
      - isCustom
      - name
      type: object
      properties:
        id:
          type: integer
          description: "Category identifier.<br/><br/>NOTE: Do NOT assume that the\
            \ identifiers of the global finAPI categories are the same across different\
            \ finAPI environments. In fact, the identifiers may change whenever a\
            \ new finAPI version is released, even within the same environment. The\
            \ identifiers are meant to be used for references within the finAPI services\
            \ only, but not for hard-coding them in your application. If you need\
            \ to hard-code the usage of a certain global category within your application,\
            \ please instead refer to the category name. Also, please make sure to\
            \ check the 'isCustom' flag, which is false for all global categories\
            \ (if you are not regarding this flag, you might end up referring to a\
            \ user-specific category, and not the global category)."
          format: int64
          example: 378
        name:
          type: string
          description: Category name
          example: Sport & Fitness
        parentId:
          type: integer
          description: Identifier of the parent category (if a parent category exists)
          format: int64
          example: 373
        parentName:
          type: string
          description: Name of the parent category (if a parent category exists)
          example: "Freizeit, Hobbys & Soziales"
        isCustom:
          type: boolean
          description: "Whether the category is a finAPI global category (in which\
            \ case this field will be false), or the category was created by a user\
            \ (in which case this field will be true)"
          example: false
        children:
          type: array
          description: List of sub-categories identifiers (if any exist)
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
            format: int64
      description: Category data
    CategoryParams:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 128
          minLength: 1
          pattern: "[A-Za-z0-9¡-ʯ &\\(\\)\\{\\}\\[\\]\\.:,;\\?!\\+\\-_\\$@#~`\\^€\
            ]*"
          type: string
          description: Name of the category.
          example: Sport & Fitness
        parentId:
          type: integer
          description: "Identifier of the parent category, if the new category should\
            \ be created as a sub-category. Must point to a main category in this\
            \ case. If the new category should be a main category itself, this field\
            \ must remain unset."
          format: int64
          example: 373
      description: Category parameters
    CertisTransactionData:
      type: object
      properties:
        variableSymbol:
          type: string
          description: "CERTIS variable symbol (VS). Maximum length: 10"
          example: "9999"
        constantSymbol:
          type: string
          description: "CERTIS constant symbol (KS). Maximum length: 10"
          example: "1110"
        specificSymbol:
          type: string
          description: "CERTIS specific symbol (SS). Maximum length: 10"
          example: "9999"
      description: Fields as defined by <a href='https://www.cnb.cz/en/payments/certis/'
        target='_blank'>CERTIS</a>.
    ChangeClientCredentialsParams:
      required:
      - clientId
      - newClientSecret
      - oldClientSecret
      type: object
      properties:
        clientId:
          maxLength: 45
          minLength: 1
          type: string
          description: client_id of the client that you want to change the secret
            for
          example: 01234567-89ab-cdef-0123-456789abcdef
        oldClientSecret:
          maxLength: 36
          minLength: 36
          type: string
          description: Old (=current) client_secret
          example: 01234567-89ab-cdef-0123-456789abcdef
        newClientSecret:
          maxLength: 36
          minLength: 36
          pattern: "[a-zA-Z0-9\\-]*"
          type: string
          description: "New client_secret. Allowed symbols: Digits (0 through 9),\
            \ lower-case and upper-case letters (A through Z), and the dash symbol\
            \ (\"-\")."
          example: 01234567-89ab-cdef-0123-456789abcdef
      description: Container for change client credentials parameters
    CheckCategorizationData:
      required:
      - transactionData
      type: object
      properties:
        transactionData:
          type: array
          description: |-
            Set of transaction data<br/>
            <strong>Type:</strong> CheckCategorizationTransactionData
          items:
            $ref: "#/components/schemas/CheckCategorizationTransactionData"
      description: Transactions data for categorization check
    CheckCategorizationTransactionData:
      required:
      - accountTypeId
      - amount
      - transactionId
      type: object
      properties:
        transactionId:
          minLength: 1
          type: string
          description: Identifier of transaction. This can be any arbitrary string
            that will be passed back in the response so that you can map the results
            to the given transactions. Note that the identifier must be unique within
            the given list of transactions.
          example: transaction
        accountTypeId:
          maximum: 7
          minimum: 1
          type: integer
          description: "Identifier of account type.<br/><br/>1 = Checking,<br/>2 =\
            \ Savings,<br/>3 = CreditCard,<br/>4 = Security,<br/>5 = Loan,<br/>7 =\
            \ Membership,<br/>8 = Bausparen<br/><br/>"
          format: int64
          example: 1
        amount:
          type: number
          description: Amount
          example: -99.99
        purpose:
          maxLength: 2000
          minLength: 0
          type: string
          description: "Purpose. Any symbols are allowed. Default value: null."
          example: Restaurantbesuch
        counterpart:
          maxLength: 80
          minLength: 0
          type: string
          description: "Counterpart. Any symbols are allowed. Default value: null."
          example: Bar Centrale
        counterpartIban:
          maxLength: 34
          minLength: 0
          type: string
          description: "Counterpart IBAN. Default value: null."
          example: DE13700800000061110500
        counterpartAccountNumber:
          maxLength: 34
          minLength: 0
          type: string
          description: "Counterpart account number. Default value: null."
          example: "61110500"
        counterpartBlz:
          maxLength: 8
          minLength: 0
          type: string
          description: "Counterpart BLZ. Default value: null."
          example: "70080000"
        counterpartBic:
          maxLength: 11
          minLength: 0
          type: string
          description: "Counterpart BIC. Default value: null."
          example: DRESDEFF700
        mcCode:
          maxLength: 4
          minLength: 0
          type: string
          description: "Merchant category code (for credit card transactions only).\
            \ Default value: null."
          example: "5542"
        typeCodeZka:
          type: string
          description: "ZKA business transaction code which relates to the transaction's\
            \ type (Number from 0 through 999). Default value: null."
          example: "999"
      description: Transaction data for categorization check
    ClientConfiguration:
      required:
      - accountTypeRestrictions
      - aisEnabled
      - aisViaWebForm
      - availableBankGroups
      - betaBanksEnabled
      - categoryRestrictions
      - categoryRestrictionsEnabled
      - clientAccessTokensValidityPeriod
      - enabledProducts
      - isAutoCategorizationEnabled
      - isAutomaticBatchUpdateEnabled
      - isDevelopmentModeEnabled
      - isMandatorAdmin
      - isNonEuroAccountsSupported
      - isStandalonePaymentsEnabled
      - isUserAutoVerificationEnabled
      - isWebScrapingEnabled
      - mandatorLicense
      - maxUserLoginAttempts
      - paymentsEnabled
      - pfmServicesEnabled
      - pisStandaloneViaWebForm
      - pisViaWebForm
      - preferredConsentType
      - products
      - refreshTokensValidityPeriod
      - transactionImportLimitation
      - userAccessTokensValidityPeriod
      type: object
      properties:
        pfmServicesEnabled:
          type: boolean
          description: "Whether your client is allowed to call PFM services (Personal\
            \ Finance Management). The set of PFM services is the following:<br/><br/>&bull;\
            \ all /mandatorAdmin/ibanRules/* and /mandatorAdmin/keywordRules/* services<br/>&bull;\
            \ GET /accounts/dailyBalances<br/>&bull; all /transactions/* services,\
            \ except for GET /transactions/[id(s)] and DELETE /transactions/[id]<br/>&bull;\
            \ all /categories/* services, except for GET /categories/[id(s)]<br/>&bull;\
            \ all /labels/* services<br/>&bull; all /notificationRules/* services<br/>&bull;\
            \ all /tests/* services"
          example: true
        isAutomaticBatchUpdateEnabled:
          type: boolean
          description: "Whether finAPI performs a regular automatic update of your\
            \ users' bank connections. To find out how the automatic batch update\
            \ is configured for your client, i.e. which bank connections get updated,\
            \ and at which time and interval, please contact your Sys-Admin. Note\
            \ that even if the automatic batch update is enabled for your client,\
            \ individual users can still disable the feature for their own bank connections.\
            \ Also, note that batch updates run only when you have AIS enabled (see\
            \ 'aisEnabled' flag)."
          example: true
        isDevelopmentModeEnabled:
          type: boolean
          description: "Whether development mode is enabled. This setting is enabled\
            \ on mandator level and allows any user to access the 'Mock batch update'\
            \ service. <br/><br/>NOTE: This flag is meant for testing purposes during\
            \ development of your application. <br/>This is why this will never be\
            \ enabled on a production environment."
          example: true
        isNonEuroAccountsSupported:
          type: boolean
          description: "Whether finAPI will download data (balance and transactions)\
            \ for bank accounts with a currency other than EUR (affects all users).\
            \ If this flag is false, then non-EUR accounts will still be returned\
            \ in the account list, but they will have no balance and no transactions.\
            \ Note that this currently applies to Checking accounts only."
          example: true
        isAutoCategorizationEnabled:
          type: boolean
          description: "Whether transactions will be categorized as soon as they are\
            \ downloaded. <br/>In case this flag is false, the user needs to manually\
            \ trigger categorization using the 'Trigger categorization' service."
          example: true
        mandatorLicense:
          description: |-
            The license associated with your client. <br/>The licensing model affects the TPP registration data used to connect to the bank (e.g. <b>finTSProductRegistrationNumber</b> for FINTS_SERVER interface). Licenses are administered by finAPI. Please contact the support to change the license that was set up for you.<br/>Possible values are:<br/>UNLICENSED: finAPI will use its own TPP registration to connect to the bank for both account information services (AIS) and payment initiation services (PIS).<br/>AISP: finAPI will use its own TPP registration to connect to the bank for PIS, and your registration for AIS.<br/>PISP: finAPI will use its own TPP registration to connect to the bank for AIS, and your registration for PIS.<br/>FULLY_LICENSED: finAPI will use your TPP registration to connect to the bank for both AIS and PIS.<br/>
            <strong>Type:</strong> MandatorLicense
          example: UNLICENSED
          allOf:
          - $ref: "#/components/schemas/MandatorLicense"
        preferredConsentType:
          description: |-
            The preferred consent type that will be used for the XS2A interface.<br/><br/>&bull; <b>ONETIME</b> - The consent can only be used once to download data associated with the account. The consent won’t be saved by finAPI.<br/>&bull; <b>RECURRING</b> - The consent is valid for up to 90 days and can be used by finAPI to access and download account data for up to 4 times per day.<br/><br/>NOTE: If the bank does not support the preferred consent type, then finAPI will default to the other type.<br/>
            <strong>Type:</strong> PreferredConsentType
          example: RECURRING
          allOf:
          - $ref: "#/components/schemas/PreferredConsentType"
        userNotificationCallbackUrl:
          type: string
          description: "Callback URL to which finAPI sends the notification messages\
            \ that are triggered from the automatic batch update of the users' bank\
            \ connections. This field is only relevant if the automatic batch update\
            \ is enabled for your client. For details about what the notification\
            \ messages look like, please see the documentation in the 'Notification\
            \ Rules' section. finAPI will call this URL with HTTP method POST. Note\
            \ that the response of the call is not processed by finAPI. Also note\
            \ that while the callback URL may be a non-secured (http) URL on the finAPI\
            \ sandbox or alpha environment, it MUST be a SSL-secured (https) URL on\
            \ the finAPI live system."
          example: https://some-domain.io/notification
        userSynchronizationCallbackUrl:
          type: string
          description: |-
            Callback URL for user synchronization. This field should be set if you - as a finAPI customer - have multiple clients using finAPI. In such case, all of your clients will share the same user base, making it possible for a user to be created in one client, but then deleted in another. To keep the client-side user data consistent in all clients, you should set a callback URL for each client. finAPI will send a notification to the callback URL of each client whenever a user of your user base gets deleted. Note that finAPI will send a deletion notification to ALL clients, including the one that made the user deletion request to finAPI. So when deleting a user in finAPI, a client should rely on the callback to delete the user on its own side. <p>The notification that finAPI sends to the clients' callback URLs will be a POST request, with this body: <pre>{
               "userId" : string // contains the identifier of the deleted user
               "event" : string // this will always be "DELETED"
            }</pre><br/>Note that finAPI does not process the response of this call. Also note that while the callback URL may be a non-secured (http) URL on the finAPI sandbox or alpha environment, it MUST be a SSL-secured (https) URL on the finAPI live system.</p>As long as you have just one client, you can ignore this field and let it be null. However keep in mind that in this case your client will not receive any callback when a user gets deleted - so the deletion of the user on the client-side must not be forgotten. Of course you may still use the callback URL even for just one client, if you want to implement the deletion of the user on the client-side via the callback from finAPI.
          example: https://some-domain.io/synchronization
        refreshTokensValidityPeriod:
          type: integer
          description: "The validity period that newly requested refresh tokens initially\
            \ have (in seconds). A value of 0 means that the tokens never expire (Unless\
            \ explicitly invalidated, e.g. by revocation, or when a user gets locked,\
            \ or when the password is reset for a user)."
          format: int32
          example: 3600
        userAccessTokensValidityPeriod:
          type: integer
          description: "The validity period that newly requested access tokens for\
            \ users initially have (in seconds). A value of 0 means that the tokens\
            \ never expire (Unless explicitly invalidated, e.g. by revocation, or\
            \ when a user gets locked, or when the password is reset for a user)."
          format: int32
          example: 3600
        clientAccessTokensValidityPeriod:
          type: integer
          description: "The validity period that newly requested access tokens for\
            \ clients initially have (in seconds). A value of 0 means that the tokens\
            \ never expire (Unless explicitly invalidated, e.g. by revocation)."
          format: int32
          example: 3600
        maxUserLoginAttempts:
          type: integer
          description: "Number of consecutive failed login attempts of a user into\
            \ his finAPI account that is allowed before finAPI locks the user's account.\
            \ When a user's account is locked, finAPI will invalidate all user's tokens\
            \ and it will deny any service call in the context of this user (i.e.\
            \ any call to a service using one of the user's authorization tokens,\
            \ as well as the service for requesting a new token for this user). To\
            \ unlock a user's account, a new password must be set for the account\
            \ by the client (see the services /users/requestPasswordChange and /users/executePasswordChange).\
            \ Once a new password has been set, all services will be available again\
            \ for this user and the user's failed login attempts counter is reset\
            \ to 0. The user's failed login attempts counter is also reset whenever\
            \ a new authorization token has been successfully retrieved, or whenever\
            \ the user himself changes his password.<br/><br/>Note that when this\
            \ field has a value of 0, it means that there is no limit for user login\
            \ attempts, i.e. finAPI will never lock user accounts."
          format: int32
          example: 3
        transactionImportLimitation:
          type: integer
          description: "This setting defines the upper limit of how much of an account's\
            \ transactions history may get downloaded whenever a new account is imported,\
            \ across all of your users. More technically, it depicts the maximum number\
            \ of days for which transactions might get downloaded, starting from -\
            \ and including - the date of the account import. '0' means that there\
            \ is no limitation."
          format: int32
          example: 0
        isUserAutoVerificationEnabled:
          type: boolean
          description: "Whether users that are created with this client are automatically\
            \ verified on creation. If this field is set to 'false', then any user\
            \ that is created with this client must first be verified with the \"\
            Verify a user\" service before he can be authorized. If the field is 'true',\
            \ then no verification is required by the client and the user can be authorized\
            \ immediately after creation."
          example: true
        isMandatorAdmin:
          type: boolean
          description: "Whether this client is a 'Mandator Admin'. Mandator Admins\
            \ are special clients that can access the 'Mandator Administration' section\
            \ of finAPI. If you do not yet have credentials for a Mandator Admin,\
            \ please contact us at support@finapi.io. For further information, please\
            \ refer to <a href='https://documentation.finapi.io/access/application-management'\
            \ target='_blank'>this page</a> on our Access Public Documentation."
          example: false
        isWebScrapingEnabled:
          type: boolean
          description: "Whether finAPI is allowed to use the WEB_SCRAPER interface\
            \ for data download or payments. <br/><br/>If this field is set to 'true',\
            \ then finAPI might download data from the online banking websites of\
            \ banks (either in addition to other interfaces, or as the sole data source\
            \ for the download). Also, it will be possible to do payments via the\
            \ WEB_SCRAPER interface.<br/><br/>If this field is set to 'false', then\
            \ finAPI will not use any web scrapers. Payments via the WEB_SCRAPER interface\
            \ will not be possible, and finAPI will not allow any data download for\
            \ banks where no other interface except WEB_SCRAPER is available. <br/><br/>Please\
            \ contact your Sys-Admin if you want to change this setting."
          example: true
        aisEnabled:
          type: boolean
          description: "Whether this client is allowed to do AIS (Account Information\
            \ Services). This setting must be enabled for doing bank connection imports\
            \ or updates (including finAPI's automatic batch updates), or calling\
            \ other AIS endpoints that relate to bank connections, accounts, or transactions/security\
            \ positions."
          example: true
        paymentsEnabled:
          type: boolean
          description: "Whether this client is allowed to do PIS (Payment Initiation\
            \ Services). This setting must be enabled for doing money transfers, direct\
            \ debits, and standing orders for imported accounts.<br/><br/>Note that\
            \ on the Sandbox environment, it is always possible to execute these services\
            \ regardless of what this field says, as long as you are using a test\
            \ bank (see <code>Bank.isTestBank</code>)"
          example: true
        isStandalonePaymentsEnabled:
          type: boolean
          description: "Whether this client is allowed to do standalone PIS (doing\
            \ money transfers and standing orders for accounts that are not imported\
            \ in finAPI).<br/><br/>Note that on the Sandbox environment, it is always\
            \ possible to execute these services regardless of what this field says,\
            \ as long as you are using a test bank (see <code>Bank.isTestBank</code>)"
          example: true
        availableBankGroups:
          type: array
          description: "List of bank groups that are available to this client. A bank\
            \ group is a collection of all banks that are located in a certain country,\
            \ and is defined by the country's ISO 3166 ALPHA-2 code (see also field\
            \ 'location' of Bank resource). If you want to extend or limit the available\
            \ bank groups for your client, please contact your Sys-Admin.<br/><br/>Note:\
            \ There is no bank group for international institutes (i.e. institutes\
            \ that are not bound to any specific country). Instead, those institutes\
            \ are always available. If this list is empty, it means that ONLY international\
            \ institutes are available."
          example:
          - DE
          - AT
          - IT
          items:
            type: string
        products:
          uniqueItems: true
          type: array
          description: |-
            THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer to the 'enabledProducts' field instead.<br/><br/>List of finAPI products that are available to this client. Newly added products won't be represented within this field, but only in the new 'enabledProducts' field.<br/>
            <strong>Type:</strong> Product
          example:
          - ACCESS
          items:
            allOf:
            - $ref: "#/components/schemas/Product"
        enabledProducts:
          $ref: "#/components/schemas/EnabledProducts"
        finTSProductRegistrationNumber:
          type: string
          description: "The FinTS product registration number. If a value is stored,\
            \ this will always be 'XXXXX'."
          example: XXXXX
        aisViaWebForm:
          type: boolean
          description: "Whether you must use finAPI's Web Form for Account Information\
            \ Services. See: https://documentation.finapi.io/webform"
          example: true
        pisViaWebForm:
          type: boolean
          description: "Whether you must use finAPI's Web Form for Standard Payment\
            \ Initiation Services (Payments for accounts that have been imported in\
            \ finAPI). See: https://documentation.finapi.io/webform"
          example: true
        pisStandaloneViaWebForm:
          type: boolean
          description: "Whether you must use finAPI's Web Form for Standalone Payment\
            \ Initiation Services (Payments without account import). See: https://documentation.finapi.io/webform"
          example: true
        betaBanksEnabled:
          type: boolean
          description: "Whether the set of banks that are available to your client\
            \ contains \"Beta banks\". Beta banks provide pre-release interfaces that\
            \ are still in a beta phase. Communication to the bank via such interfaces\
            \ might be unstable, and the correctness and/or quality of data delivery\
            \ or payment execution cannot be guaranteed.<br/>As the word \"BETA\"\
            \ already indicates, Beta banks are subject to changes. Their properties,\
            \ as well as their behaviour can change based on continuous tests and\
            \ customer feedback. Also, to keep our bank list clean, we might remove\
            \ Beta banks at any point in time, including all related user data (bank\
            \ connections, accounts, transactions etc). We still recommend you to\
            \ enable beta banks in your application, because it enables us to release\
            \ a stable interface faster. However, you should point it out to your\
            \ users when using a beta bank (also see field Bank.isBeta).<br/><br/>If\
            \ this field is true, then the GET /banks services will include beta banks\
            \ in their results, and you can use beta banks in any service where you\
            \ can pass a bank identifier. If the field is false, then beta banks will\
            \ not exist for your client."
          example: true
        categoryRestrictionsEnabled:
          type: boolean
          description: "Whether category restrictions are applied to your client.\
            \ If true, transaction access is restricted to the categories contained\
            \ in the ‘categoryRestrictions’ list. If false, then there are no restrictions\
            \ for your client, and you may retrieve the full set of imported transactions."
          example: true
        categoryRestrictions:
          type: array
          description: |-
            Defines the set of transaction categories to which your client is restricted. This field is only relevant if the 'categoryRestrictionsEnabled' flag is set to true. In this case, when retrieving transactions (via the GET /transactions services), you may request only those transactions whose 'category' is one of the listed categories. If the set is empty, you won’t be able to access any transactions.<br/>
            <strong>Type:</strong> Category
          items:
            $ref: "#/components/schemas/Category"
        accountTypeRestrictions:
          type: array
          description: |-
            The set of account types to which your client is restricted. You can only import or update accounts that match one of the listed types. For more information, refer to the <code>accountTypes</code> field of the services:<br/>&bull; bankConnections/import<br/>&bull; bankConnections/update<br/>&bull; bankConnections/connectInterface<br/><br/>If this set is empty, then your client has no account type limitations.<br/>
            <strong>Type:</strong> AccountType
          items:
            allOf:
            - $ref: "#/components/schemas/AccountType"
        corsAllowedOrigins:
          type: array
          description: "The list of allowed origins for cross-origin requests. The\
            \ CORS configuration applies to all the API services except for the /oauth\
            \ services. If this list is empty, then CORS is not enabled for this client.\
            \ Please contact the support if you want to enable or change the client's\
            \ CORS configuration."
          items:
            type: string
      description: Client configuration parameters
    ClientConfigurationParams:
      type: object
      properties:
        userNotificationCallbackUrl:
          type: string
          description: "Callback URL to which finAPI sends the notification messages\
            \ that are triggered from the automatic batch update of the users' bank\
            \ connections. This field is only relevant if the automatic batch update\
            \ is enabled for your client. For details about what the notification\
            \ messages look like, please see the documentation in the 'Notification\
            \ Rules' section. finAPI will call this URL with HTTP method POST. Note\
            \ that the response of the call is not processed by finAPI. Also note\
            \ that while the callback URL may be a non-secured (http) URL on the finAPI\
            \ sandbox or alpha environment, it MUST be a SSL-secured (https) URL on\
            \ the finAPI live system.<p>The maximum allowed length of the URL is 512.\
            \ If you have previously set a callback URL and now want to clear it (thus\
            \ disabling user-related notifications altogether), you can pass an empty\
            \ string (\"\")."
          example: https://some-domain.io/notification
        userSynchronizationCallbackUrl:
          type: string
          description: |-
            Callback URL for user synchronization. This field should be set if you - as a finAPI customer - have multiple clients using finAPI. In such case, all of your clients will share the same user base, making it possible for a user to be created in one client, but then deleted in another. To keep the client-side user data consistent in all clients, you should set a callback URL for each client. finAPI will send a notification to the callback URL of each client whenever a user of your user base gets deleted. Note that finAPI will send a deletion notification to ALL clients, including the one that made the user deletion request to finAPI. So when deleting a user in finAPI, a client should rely on the callback to delete the user on its own side. <p>The notification that finAPI sends to the clients' callback URLs will be a POST request, with this body: <pre>{
               "userId" : string // contains the identifier of the deleted user
               "event" : string // this will always be "DELETED"
            }</pre><br/>Note that finAPI does not process the response of this call. Also note that while the callback URL may be a non-secured (http) URL on the finAPI sandbox or alpha system, it MUST be a SSL-secured (https) URL on the live system.</p>As long as you have just one client, you can ignore this field and let it be null. However keep in mind that in this case your client will not receive any callback when a user gets deleted - so the deletion of the user on the client-side must not be forgotten. Of course you may still use the callback URL even for just one client, if you want to implement the deletion of the user on the client-side via the callback from finAPI.<p> The maximum allowed length of the URL is 512. If you have previously set a callback URL and now want to clear it (thus disabling user synchronization related notifications for this client), you can pass an empty string ("").
          example: https://some-domain.io/synchronization
        refreshTokensValidityPeriod:
          type: integer
          description: "The validity period that newly requested refresh tokens initially\
            \ have (in seconds). The value must be greater than or equal to 60, or\
            \ 0. A value of 0 means that the tokens never expire (Unless explicitly\
            \ invalidated, e.g. by revocation , or when a user gets locked, or when\
            \ the password is reset for a user)."
          format: int32
          example: 3600
        userAccessTokensValidityPeriod:
          type: integer
          description: "The validity period that newly requested access tokens for\
            \ users initially have (in seconds). The value must be greater than or\
            \ equal to 60, or 0. A value of 0 means that the tokens never expire."
          format: int32
          example: 3600
        clientAccessTokensValidityPeriod:
          type: integer
          description: "The validity period that newly requested access tokens for\
            \ clients initially have (in seconds). The value must be greater than\
            \ or equal to 60, or 0. A value of 0 means that the tokens never expire."
          format: int32
          example: 3600
        finTSProductRegistrationNumber:
          maxLength: 25
          minLength: 0
          pattern: "[0-9A-F]*"
          type: string
          description: "The FinTS product registration number. Please follow <a href='https://www.hbci-zka.de/register/prod_register.htm'\
            \ target='_blank'>this link</a> to apply for a registration number. Only\
            \ customers who have an AISP or PISP license must define their FinTS product\
            \ registration number. Customers who are relying on the finAPI Web Form\
            \ will be assigned to finAPI's FinTS product registration number automatically\
            \ and do not have to register themselves. If you have previously set a\
            \ FinTS product registration number and now want to clear it, you can\
            \ pass an empty string (\"\"). Only hexadecimal characters in capital\
            \ case are allowed.<br/><br/>NOTE: If you have multiple <a href='https://documentation.finapi.io/access/application-management'\
            \ target='_blank'>app clients</a> with different FinTS product registration\
            \ numbers, you must make sure that the client which you use for FinTS\
            \ bank communications for a certain user is always the client which was\
            \ used to create that user (otherwise the bank might reject a request\
            \ due to an unexpected registration number)."
          example: ABCDEF1234567890ABCDEF123
        betaBanksEnabled:
          type: boolean
          description: "Whether the set of banks that are available to your client\
            \ should include \"Beta banks\". Beta banks provide pre-release interfaces\
            \ that are still in a beta phase. Communication to the bank via such interfaces\
            \ might be unstable, and the correctness and/or quality of data delivery\
            \ or payment execution cannot be guaranteed.<br/>As the word \"BETA\"\
            \ already indicates, Beta banks are subject to changes. Their properties,\
            \ as well as their behaviour can change based on continuous tests and\
            \ customer feedback. Also, to keep our bank list clean, we might remove\
            \ Beta banks at any point in time, including all related user data (bank\
            \ connections, accounts, transactions etc). We still recommend you to\
            \ enable beta banks in your application, because it enables us to release\
            \ a stable interface faster. However, you should point it out to your\
            \ users when using a beta bank (also see field Bank.isBeta).<br/><br/>If\
            \ this field is true, then the GET /banks services will include beta banks\
            \ in their results, and you can use beta banks in any service where you\
            \ can pass a bank identifier. If the field is false, then beta banks will\
            \ not exist for your client.<br/><br/>NOTE: This setting affects ALL your\
            \ clients."
          example: true
        preferredConsentType:
          description: |-
            The preferred consent type that will be used for the XS2A interface.<br/><br/>&bull; <b>ONETIME</b> - The consent can only be used once to download data associated with the account. The consent won’t be saved by finAPI.<br/>&bull; <b>RECURRING</b> - The consent is valid for up to 90 days and can be used by finAPI to access and download account data for up to 4 times per day.<br/><br/>NOTE: If the bank does not support the preferred consent type, then finAPI will default to the other type.<br/><br/>NOTE: This setting affects ALL your clients.<br/>
            <strong>Type:</strong> PreferredConsentType
          example: RECURRING
          allOf:
          - $ref: "#/components/schemas/PreferredConsentType"
        userAutoVerificationEnabled:
          type: boolean
          description: "Whether users should automatically get verified upon creation.\
            \ If this field is set to 'false', then any user that is created must\
            \ first be verified with the \"Verify a user\" service before he can be\
            \ authorized. If the field is 'true', then no verification is required\
            \ by the client and the user can be authorized immediately after creation.\
            \ A change to this setting will affect only users that get created from\
            \ that point onward, but not users that have already existed previously.<br/><br/>NOTE:\
            \ This setting affects ALL your clients."
          example: true
      description: Client configuration parameters
    ConnectInterfaceParams:
      required:
      - bankConnectionId
      - bankingInterface
      type: object
      properties:
        bankConnectionId:
          type: integer
          description: Bank connection identifier
          format: int64
          example: 1
        bankingInterface:
          description: |-
            The interface to use for connecting with the bank.<br/>
            <strong>Type:</strong> BankingInterface
          example: XS2A
          allOf:
          - $ref: "#/components/schemas/BankingInterface"
        sourceBankingInterface:
          description: |-
            The source interface that should be used as the source of credentials. Set it to one of already existing bank connection's interfaces and finAPI will try to use the stored credentials of that interface for the current service call. The source interface must fit the following requirements:<br/>- it must have the same set of bank login fields as the main interface (the 'bankingInterface' parameter);<br/>- it must have stored values for all its bank login fields.<br/>If any of those conditions are not met - the service will throw an appropriate error.<br/>Note: the source interface is ignored if any login credentials are given.<br/>
            <strong>Type:</strong> BankingInterface
          example: XS2A
          allOf:
          - $ref: "#/components/schemas/BankingInterface"
        loginCredentials:
          type: array
          description: |-
            Set of login credentials. Must always be passed, unless the respective bank interface does not declare any login fields.<br/>
            <strong>Type:</strong> LoginCredential
          items:
            $ref: "#/components/schemas/LoginCredential"
        storeSecrets:
          type: boolean
          description: "Whether to store the secret login fields. If the secret fields\
            \ are stored, then updates can be triggered without the involvement of\
            \ the users, as long as the credentials remain valid and the bank consent\
            \ has not expired. Note that bank consent will be stored regardless of\
            \ the field value. Default value is false."
          example: true
          default: false
        skipBalancesDownload:
          type: boolean
          description: "Whether to skip the download of balances or not. May only\
            \ be set to true if 'skipPositionsDownload' is also true. If set to true,\
            \ then finAPI will download just the account list with the accounts' information\
            \ (like account name, number, holder, etc). Default is false.<br/><br/>NOTES:<br/>&bull;\
            \ Setting this flag to true is only meant to be used if A) you generally\
            \ never download balances and positions, because you are only interested\
            \ in the account list, or B) you want to get just the list of accounts\
            \ in the first step, and then delete unwanted accounts from the bank connection,\
            \ before you trigger another update that downloads balances and transactions.\
            \ This approach allows you to download balances only for the accounts\
            \ that you want.<br/>&bull; If you skip the download of balances during\
            \ an import or update, you can still download them with a later update.<br/>&bull;\
            \ If an account was stored with a balance already, and you skip the download\
            \ of its balance in a subsequent update, then the account's balance will\
            \ get outdated. Be also aware that certain services (like GET /accounts/dailyBalances)\
            \ may return incorrect results in such cases.<br/>&bull; If any bank connection\
            \ gets updated via finAPI's automatic batch update, then all balances\
            \ (of already imported accounts) <u>will</u> get downloaded in any case!"
          example: false
          default: false
        skipPositionsDownload:
          type: boolean
          description: "Whether to skip the download of transactions and securities\
            \ or not. If set to true, then finAPI will download just the account list\
            \ with the accounts' information (like account name, number, holder, etc),\
            \ as well as the accounts' balances (if possible), but skip the download\
            \ of transactions and securities. Default is false.<br/>You may also use\
            \ this flag in combination with 'skipBalancesDownload' = true, to additionally\
            \ skip the download of balances.<br/><br/>NOTES:<br/>&bull; Setting this\
            \ flag to true is only meant to be used if A) you generally never download\
            \ positions, because you are only interested in the account list and/or\
            \ balances, or B) you want to get just the list of accounts in the first\
            \ step, and then delete unwanted accounts from the bank connection, before\
            \ you trigger another update that downloads transactions. This approach\
            \ allows you to download transactions only for the accounts that you want.<br/>&bull;\
            \ If you skip the download of transactions and securities during an import\
            \ or update, you can still download them with a later update (though you\
            \ might not get all positions at a later point, because the date range\
            \ in which the bank servers provide this data is usually limited).<br/>&bull;\
            \ If an account already had any positions imported before an update, and\
            \ you skip the positions download in the update, then the account's updated\
            \ balance might not add up to the set of transactions / security positions.\
            \ Be aware that certain services (like GET /accounts/dailyBalances) may\
            \ return incorrect results for accounts in such a state.<br/>&bull; If\
            \ any bank connection gets updated via finAPI's automatic batch update,\
            \ then all transactions and security positions (of already imported accounts)\
            \ <u>will</u> get downloaded in any case!<br/>&bull; For security accounts,\
            \ skipping the downloading of the securities might result in the account's\
            \ balance also not being downloaded.<br/>&bull; For the WEB_SCRAPER interface,\
            \ it's technically required to download transactions for Bausparen accounts\
            \ even if 'skipPositionsDownload' is set to true, but they are not actively\
            \ processed by finAPI."
          example: false
          default: false
        loadOwnerData:
          type: boolean
          description: "Whether to load information about the bank connection owner(s)\
            \ - see field 'owners'. Default value is 'false'.<br/><br/>NOTE: This\
            \ feature is supported only by the WEB_SCRAPER interface."
          example: false
          default: false
        accountTypes:
          type: array
          description: |-
            If specified, then finAPI will import only those accounts whose type is one of the given types. Note that when the bank connection does not contain any accounts of the given types, the operation will fail with error code NO_ACCOUNTS_FOR_TYPE_LIST.<br/><br/><b>NOTE</b>: If your client is restricted to certain account types (see <code>ClientConfiguration.accountTypeRestrictions</code>), then you may only specify account types that are enabled for you, otherwise the service will return with an error. If your client has account type restrictions and you do not specify any types, then the service will implicitly limit the types according to your client's configuration.<br/>
            <strong>Type:</strong> AccountType
          example:
          - Checking
          - Savings
          - CreditCard
          - Security
          - Loan
          - Membership
          - Bausparen
          items:
            allOf:
            - $ref: "#/components/schemas/AccountType"
        accountReferences:
          type: array
          description: |-
            List of accounts for which access is requested from the bank. It must only be passed if the bank interface has the DETAILED_CONSENT property set.<br/>
            <strong>Type:</strong> AccountReference
          items:
            $ref: "#/components/schemas/AccountReference"
        multiStepAuthentication:
          type: object
          description: |-
            Container for multi-step authentication data. Required when a previous service call initiated a multi-step authentication.<br/>
            <strong>Type:</strong> MultiStepAuthenticationCallback
          allOf:
          - $ref: "#/components/schemas/MultiStepAuthenticationCallback"
        redirectUrl:
          type: string
          description: Must only be passed when the used interface has the property
            REDIRECT_APPROACH. The user will be redirected to the given URL from the
            bank's website after completing the bank login and (possibly) the SCA.
          example: https://some-domain.io/redirect
        maxDaysForDownload:
          type: integer
          description: "This setting defines how much of an account's transactions\
            \ history will get downloaded whenever a new account is imported. More\
            \ technically, it depicts the number of days to download transactions\
            \ for, starting from - and including - the date of the account import.\
            \ For example, on an account import that happens today, the value 30 would\
            \ instruct finAPI to download transactions from the past 30 days (including\
            \ today). The minimum allowed value is 14, the maximum value is 3650.\
            \ Also possible is the value 0 (which is the default value), in which\
            \ case there will be no limit to the transactions download and finAPI\
            \ will try to get all transactions that it can. <br/><br/>NOTES:<br/>&bull;\
            \ There is no guarantee that finAPI will actually download transactions\
            \ for the entire defined date range, as there may be limitations to the\
            \ download range (set by the bank or by finAPI, e.g. see ClientConfiguration.transactionImportLimitation).\
            \ <br/>&bull; This parameter only applies to transactions, not to security\
            \ positions; For security accounts, finAPI will always download all security\
            \ positions that it can. <br/>&bull; This setting is stored for each interface\
            \ individually.<br/>&bull; After an interface has been connected with\
            \ this setting, there is no way to change the setting for that interface\
            \ afterwards.<br/>&bull; <b>If you do not limit the download range to\
            \ a value less than 90 days, the bank is more likely to trigger a strong\
            \ customer authentication request for the user when finAPI is attempting\
            \ to download the transactions.</b>"
          format: int32
          example: 365
          default: 0
      description: Container for interface connection parameters
    CounterpartAddressData:
      type: object
      properties:
        street:
          maxLength: 70
          minLength: 1
          type: string
          description: Street of the counterpart.<br/>Bank-specific constraints may
            apply to this field. Please refer to BankInterface.paymentConstraints
            to make sure the payment you are creating won't get rejected.
          example: Pariser Platz
        houseNumber:
          maxLength: 16
          minLength: 1
          type: string
          description: House number of the counterpart.
          example: "1"
        city:
          maxLength: 35
          minLength: 1
          type: string
          description: City of the counterpart.<br/>Bank-specific constraints may
            apply to this field. Please refer to BankInterface.paymentConstraints
            to make sure the payment you are creating won't get rejected.
          example: Berlin
        postCode:
          maxLength: 16
          minLength: 1
          type: string
          description: Post code of the counterpart.
          example: "10117"
        country:
          description: |-
            Country of the counterpart.<br/>Bank-specific constraints may apply to this field. Please refer to BankInterface.paymentConstraints to make sure the payment you are creating won't get rejected.<br/>
            <strong>Type:</strong> ISO3166Alpha2Codes
          example: DE
          allOf:
          - $ref: "#/components/schemas/ISO3166Alpha2Codes"
      description: Container for counterpart address data
    CreateDirectDebitParams:
      required:
      - accountId
      - directDebitType
      - directDebits
      - executionDate
      - sequenceType
      type: object
      properties:
        singleBooking:
          type: boolean
          description: "This field is only relevant when you pass multiple orders.\
            \ It determines whether the orders should be processed by the bank as\
            \ one collective booking (in case of 'false'), or as single bookings (in\
            \ case of 'true'). Note that it is subject to the bank whether it will\
            \ regard the field. Default value is 'false'."
          example: false
          default: false
        accountId:
          type: integer
          description: Identifier of the account that should be used for the direct
            debit.
          format: int64
          example: 1
        directDebitType:
          description: |-
            Type of the direct debit; either <code>BASIC</code> or <code>B2B</code> (Business-To-Business).<br/>
            <strong>Type:</strong> DirectDebitType
          example: B2B
          allOf:
          - $ref: "#/components/schemas/DirectDebitType"
        sequenceType:
          description: |-
            Sequence type of the direct debit. Possible values:<br/><br/>&bull; <code>OOFF</code> - means that this is a one-time direct debit order<br/>&bull; <code>FRST</code> - means that this is the first in a row of multiple direct debit orders<br/>&bull; <code>RCUR</code> - means that this is one (but not the first or final) within a row of multiple direct debit orders<br/>&bull; <code>FNAL</code> - means that this is the final in a row of multiple direct debit orders<br/><br/><br/>
            <strong>Type:</strong> DirectDebitSequenceType
          example: OOFF
          allOf:
          - $ref: "#/components/schemas/DirectDebitSequenceType"
        directDebits:
          maxItems: 15000
          minItems: 1
          type: array
          description: |-
            List of direct debit orders (may contain at most 15000 items). Please note that collective direct debit may not always be supported.<br/>
            <strong>Type:</strong> DirectDebitOrderParams
          items:
            $ref: "#/components/schemas/DirectDebitOrderParams"
        executionDate:
          type: string
          description: <strong>Format:</strong> 'YYYY-MM-DD'<br/>Execution date for
            the direct debit(s). May not be in the past.
          format: date
          example: "2018-01-01"
      description: Container for direct debit creation parameters
    CreateMoneyTransferParams:
      required:
      - moneyTransfers
      type: object
      properties:
        accountId:
          type: integer
          description: "Identifier of the account that should be used for the order.\
            \ If you want to do a standalone order (finAPI Payment product, i.e. for\
            \ an account that is not imported in finAPI) leave this field unset and\
            \ instead use the fields <code>iban</code> and <code>bankId</code>."
          format: int64
          example: 1
        iban:
          type: string
          description: "IBAN of the account that should be used for the order. Use\
            \ this field only if you want to do a standalone order (finAPI Payment\
            \ product, i.e. for an account that is not imported in finAPI). Otherwise,\
            \ use the <code>accountId</code> field and leave this field unset."
          example: DE89370400440532013000
        bankId:
          type: integer
          description: "Identifier of the bank that should be used. Use this field\
            \ only if you want to do a standalone order (finAPI Payment product, i.e.\
            \ for an account that is not imported in finAPI) and when the <code>iban</code>\
            \ is not sufficient to uniquely identify the bank (a bank search for the\
            \ IBAN via <code>GET /banks?search=[IBAN]</code> returns multiple banks).\
            \ If the IBAN uniquely identifies the bank, you may leave this field unset.\
            \ Also, leave the field unset for non-standalone orders (using the <code>accountId</code>\
            \ field)."
          format: int64
          example: 1
        executionDate:
          type: string
          description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Execution date for\
            \ the money transfer(s). May not be in the past. For instant payments,\
            \ it must either be omitted, or be the current date. If not specified,\
            \ most banks will use the current date as the instructed date for execution."
          format: date
          example: "2018-01-01"
        moneyTransfers:
          maxItems: 15000
          minItems: 1
          type: array
          description: |-
            List of money transfer orders (may contain at most 15000 items). Please note that collective money transfer may not always be supported.<br/>Bank-specific constraints may apply to this field. Please refer to BankInterface.paymentConstraints to make sure the payment you are creating won't get rejected.<br/>
            <strong>Type:</strong> MoneyTransferOrderParams
          items:
            $ref: "#/components/schemas/MoneyTransferOrderParams"
        instantPayment:
          type: boolean
          description: "Whether the order should be submitted to the bank as an instant\
            \ SEPA order. Default value is 'false'.<br/><br/>NOTE:<br/>&bull; Instant\
            \ payments can only be submitted if you are self-licensed (and not using\
            \ the finAPI Web Form) OR via our Web Form from the endpoint <a href='?product=web_form_2.0#tag--Payment-Initiation-Services'\
            \ target='_blank'>here</a>.<br/>&bull; Submitting an instant payment will\
            \ work only with interfaces that support it, see BankInterface.paymentCapabilities.sepaInstantMoneyTransfer<br/>&bull;\
            \ Instant payments work only for a single order, not for collective orders.<br/>&bull;\
            \ The bank may charge a fee for instant payments, depending on the agreement\
            \ between the user and the bank.<br/>&bull; The payment might get rejected\
            \ if the source and/or target account doesn't support instant payments."
          example: false
          default: false
        singleBooking:
          type: boolean
          description: "This field is only relevant when you pass multiple orders.\
            \ It determines whether the orders should be processed by the bank as\
            \ one collective booking (in case of 'false'), or as single bookings (in\
            \ case of 'true'). Note that it is subject to the bank whether it will\
            \ regard the field. Default value is 'false'."
          example: false
          default: false
      description: Container for money transfer creation parameters
    CreateStandingOrderParams:
      required:
      - amount
      - counterpartIban
      - counterpartName
      - currency
      - frequency
      - startDate
      type: object
      properties:
        accountId:
          type: integer
          description: "Identifier of the account that should be used for the order.\
            \ If you want to do a standalone order (finAPI Payment product, i.e. for\
            \ an account that is not imported in finAPI) leave this field unset and\
            \ instead use the fields <code>iban</code> and <code>bankId</code>."
          format: int64
          example: 1
        iban:
          type: string
          description: "IBAN of the account that should be used for the order. Use\
            \ this field only if you want to do a standalone order (finAPI Payment\
            \ product, i.e. for an account that is not imported in finAPI). Otherwise,\
            \ use the <code>accountId</code> field and leave this field unset."
          example: DE89370400440532013000
        bankId:
          type: integer
          description: "Identifier of the bank that should be used. Use this field\
            \ only if you want to do a standalone order (finAPI Payment product, i.e.\
            \ for an account that is not imported in finAPI) and when the <code>iban</code>\
            \ is not sufficient to uniquely identify the bank (a bank search for the\
            \ IBAN via <code>GET /banks?search=[IBAN]</code> returns multiple banks).\
            \ If the IBAN uniquely identifies the bank, you may leave this field unset.\
            \ Also, leave the field unset for non-standalone orders (using the <code>accountId</code>\
            \ field)."
          format: int64
          example: 1
        counterpartName:
          maxLength: 70
          minLength: 1
          type: string
          description: "Name of the counterpart. Note: Neither finAPI nor the involved\
            \ bank servers are guaranteed to validate the counterpart name. Even if\
            \ the name does not depict the actual registered account holder of the\
            \ target account, the order might still be successful.<br/>Please refer\
            \ to the <a href='https://documentation.finapi.io/payments/payment-data-validation'\
            \ target='_blank'> Payment Data Validation documentation </a> for more\
            \ details."
          example: Max Mustermann
        counterpartIban:
          type: string
          description: IBAN of the counterpart's account.
          example: DE13700800000061110500
        amount:
          type: number
          description: The amount of the standing order. Must be a positive decimal
            number with at most two decimal places.<br/>Please refer to the <a href='https://documentation.finapi.io/payments/payment-data-validation'
            target='_blank'> Payment Data Validation documentation </a> for more details.
          example: 99.99
        currency:
          description: |-
            The currency code of the 'amount'. To be provided in the ISO 4217 Alpha 3 format.<br/>
            <strong>Type:</strong> Currency
          example: EUR
          allOf:
          - $ref: "#/components/schemas/Currency"
        purpose:
          maxLength: 2000
          minLength: 1
          type: string
          description: The purpose of the standing order.<br/>Please refer to the
            <a href='https://documentation.finapi.io/payments/payment-data-validation'
            target='_blank'> Payment Data Validation documentation </a> for more details.
          example: Standing Order
        sepaPurposeCode:
          type: string
          description: "SEPA purpose code, according to ISO 20022, external codes\
            \ set.<br/>Please note that the SEPA purpose code may be ignored by some\
            \ banks."
          example: OTHR
        endToEndId:
          maxLength: 35
          minLength: 1
          type: string
          description: End-To-End ID of the standing order.<br/>Please refer to the
            <a href='https://documentation.finapi.io/payments/payment-data-validation'
            target='_blank'> Payment Data Validation documentation </a> for more details.
          example: "001100550526"
        startDate:
          type: string
          description: <strong>Format:</strong> 'YYYY-MM-DD'<br/>Start date of the
            standing order. Date must be in the future (at least tomorrow).
          format: date
          example: "2023-01-01"
        endDate:
          type: string
          description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Termination date\
            \ of the standing order. If provided, it must be after the 'startDate'.\
            \ If not provided, then the standing order will have no termination."
          format: date
          example: "2024-01-01"
        frequency:
          description: |-
            The frequency of the standing order<br/>
            <strong>Type:</strong> StandingOrderFrequency
          example: MONTHLY
          allOf:
          - $ref: "#/components/schemas/StandingOrderFrequency"
      description: Container for standing order creation parameters
    Currency:
      type: string
      enum:
      - AED
      - AFN
      - ALL
      - AMD
      - ANG
      - AOA
      - ARS
      - AUD
      - AWG
      - AZN
      - BAM
      - BBD
      - BDT
      - BGN
      - BHD
      - BIF
      - BMD
      - BND
      - BOB
      - BOV
      - BRL
      - BSD
      - BTN
      - BWP
      - BYN
      - BZD
      - CAD
      - CDF
      - CHE
      - CHF
      - CHN
      - CHW
      - CLF
      - CLP
      - CNY
      - COP
      - COU
      - CRC
      - CUC
      - CUP
      - CVE
      - CZK
      - DJF
      - DKK
      - DOP
      - DZD
      - EGP
      - ERN
      - ETB
      - EUR
      - FJD
      - FKP
      - GBP
      - GEL
      - GGP
      - GHS
      - GIP
      - GMD
      - GNF
      - GTQ
      - GYD
      - HKD
      - HNL
      - HRK
      - HTG
      - HUF
      - IDR
      - ILS
      - IMP
      - INR
      - IQD
      - IRR
      - ISK
      - JEP
      - JMD
      - JOD
      - JPY
      - KES
      - KGS
      - KHR
      - KID
      - KMF
      - KPW
      - KRW
      - KWD
      - KYD
      - KZT
      - LAK
      - LBP
      - LKR
      - LRD
      - LSL
      - LYD
      - MAD
      - MDL
      - MGA
      - MKD
      - MMK
      - MNT
      - MOP
      - MRU
      - MUR
      - MVR
      - MWK
      - MXN
      - MXV
      - MYR
      - MZN
      - NAD
      - NGN
      - NIO
      - NIS
      - NOK
      - NPR
      - NTD
      - NZD
      - OMR
      - PAB
      - PEN
      - PGK
      - PHP
      - PKR
      - PLN
      - PRB
      - PYG
      - QAR
      - RMB
      - RON
      - RSD
      - RUB
      - RWF
      - SAR
      - SBD
      - SCR
      - SDG
      - SEK
      - SGD
      - SHP
      - SLL
      - SLS
      - SOS
      - SRD
      - SSP
      - STN
      - SVC
      - SYP
      - SZL
      - THB
      - TJS
      - TMT
      - TND
      - TOP
      - TRY
      - TTD
      - TVD
      - TWD
      - TZS
      - UAH
      - UGX
      - USD
      - USN
      - UYI
      - UYU
      - UYW
      - UZS
      - VEF
      - VES
      - VND
      - VUV
      - WST
      - XAF
      - XAG
      - XAU
      - XBA
      - XBB
      - XBC
      - XBD
      - XCD
      - XDR
      - XOF
      - XPD
      - XPF
      - XPT
      - XSU
      - XTS
      - XUA
      - XXX
      - YER
      - ZAR
      - ZMW
      - ZWB
      - ZWL
    DailyBalance:
      required:
      - balance
      - date
      - income
      - internalAdjustingEntries
      - spending
      - transactions
      type: object
      properties:
        date:
          type: string
          description: <strong>Format:</strong> 'YYYY-MM-DD'<br/>Date.
          format: date
          example: "2018-01-01"
        balance:
          type: number
          description: "Calculated balance at the end of day, across all regarded\
            \ accounts. Note that the balance may not always add up to the income/spending\
            \ of the day. This happens when a bank reports a balance that includes\
            \ transactions which the bank didn't (yet) deliver. In any case, it is\
            \ recommended to rely on the balance rather than on calculations based\
            \ on the income/spending."
          example: 999.0
        income:
          type: number
          description: "The sum of income of the given day, based on the 'transactions',\
            \ across all regarded accounts."
          example: 99.99
        spending:
          type: number
          description: "The sum of spending of the given day, based on the 'transactions',\
            \ across all regarded accounts. Note that this is an absolute (i.e. positive)\
            \ value."
          example: 99.99
        internalAdjustingEntries:
          type: number
          description: "Sometimes finAPI may detect deviations between the bank reported\
            \ account balance and the set of transactions received from the bank.\
            \ This is an expected behaviour when an account has not been updated for\
            \ a while, as banks provide only a limited history of transactions. In\
            \ such cases, finAPI adds an adjusting entry (see the field Transaction.isAdjustingEntry),\
            \ which will be contained in the 'transactions' list, just as any other\
            \ transaction.<br/><br/>However, if an account was regularly updated and\
            \ gaps in the transaction history are not expected, then finAPI will fix\
            \ such deviations by adding an internal adjusting entry. These internal\
            \ entries are not visible in the API and will not be contained in the\
            \ 'transactions' list, and thus also not regarded for the calculations\
            \ of 'income' and 'spending'. They are however regarded for the calculation\
            \ of the 'balance'.<br/><br/>As long as you don't do your own balance\
            \ calculations, you do not need to regard this field here; The 'balance'\
            \ will always be correct. But if you do your own calculations, then you\
            \ should not only regard the 'income' and 'spending', but this field as\
            \ well.<br/><br/>Note that unlike the 'income' and 'spending', this field\
            \ can have a positive or negative value."
          example: -99.99
        transactions:
          type: array
          description: Identifiers of the transactions for the given day
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
            format: int64
      description: Balance data for a single day
    DailyBalanceList:
      required:
      - dailyBalances
      - paging
      type: object
      properties:
        latestCommonBalanceTimestamp:
          type: string
          description: "<strong>Format:</strong> 'YYYY-MM-DD'T'HH:MM:SS.SSSXXX' (RFC\
            \ 3339, section 5.6)<br/>The latestCommonBalanceTimestamp is the latest\
            \ timestamp at which all regarded  accounts have been up to date. Only\
            \ balances with their date being smaller than the latestCommonBalanceTimestamp\
            \ are reliable. <br/>Example: A user has two accounts: A (last update\
            \ today, so balance from today) and B (last update yesterday, so balance\
            \ from yesterday). The service /accounts/dailyBalances will return a balance\
            \ for yesterday and for today, with the info latestCommonBalanceTimestamp=yesterday.\
            \ Since account B might have received transactions this morning, today's\
            \ balance might be wrong. So either make sure that all regarded accounts\
            \ are up to date before calling this service, or use the results carefully\
            \ in combination with the latestCommonBalanceTimestamp.<br/><br/>NOTE:<br/>The\
            \ returned balances are completely unreliable if the 'latestCommonBalanceTimestamp'\
            \ is null. This can occur if the balance download failed for any account\
            \ or the 'skipBalancesDownload' flag was set to true for the bank connection\
            \ import or a subsequent update."
          format: date-time
          example: "2018-01-01T09:18:40.473+01:00"
        dailyBalances:
          type: array
          description: |-
            List of daily balances for the requested period and account(s)<br/>
            <strong>Type:</strong> DailyBalance
          items:
            $ref: "#/components/schemas/DailyBalance"
        paging:
          type: object
          description: |-
            Information for pagination<br/>
            <strong>Type:</strong> Paging
          allOf:
          - $ref: "#/components/schemas/Paging"
      description: Contains a list of daily balances
    DeleteConsent:
      required:
      - local
      - remote
      type: object
      properties:
        local:
          description: |-
            Result of consent deletion in the finAPI database (local):<br/><br/>&bull; <code>DELETED</code> - if there was a stored consent and it was deleted.<br/>&bull; <code>NOT_EXIST</code> - if there was no stored consent.<br/><br/>
            <strong>Type:</strong> DeleteConsentResult
          example: DELETED
          allOf:
          - $ref: "#/components/schemas/DeleteConsentResult"
        remote:
          description: |-
            Result of consent deletion on the bank's side (remote):<br/><br/>&bull; <code>DELETED</code> - if the consent was successfully deleted on the bank side.<br/>&bull; <code>NOT_SUPPORTED</code> - if the bank doesn't support consent deletion.<br/>&bull; <code>NOT_EXIST</code> - if either there was no remote consent, or there was no local consent (making it impossible to identify any remote consent).<br/>&bull; <code>NOT_DELETED</code> - if the consent couldn't get deleted on the bank side.<br/><br/>
            <strong>Type:</strong> DeleteConsentResult
          example: DELETED
          allOf:
          - $ref: "#/components/schemas/DeleteConsentResult"
      description: Container for a result of the consent deleting
    DeleteConsentResult:
      type: string
      enum:
      - DELETED
      - NOT_EXIST
      - NOT_SUPPORTED
      - NOT_DELETED
    DirectDebitOrderParams:
      required:
      - amount
      - counterpartIban
      - counterpartName
      - creditorId
      - mandateDate
      - mandateId
      type: object
      properties:
        counterpartName:
          maxLength: 70
          minLength: 1
          type: string
          description: "Name of the counterpart. Note: Neither finAPI nor the involved\
            \ bank servers are guaranteed to validate the counterpart name. Even if\
            \ the name does not depict the actual registered account holder of the\
            \ target account, the order might still be successful.<br/>Please refer\
            \ to the <a href='https://documentation.finapi.io/payments/payment-data-validation'\
            \ target='_blank'> Payment Data Validation documentation </a> for more\
            \ details."
        counterpartIban:
          type: string
          description: IBAN of the counterpart's account.
          example: DE13700800000061110500
        counterpartBic:
          type: string
          description: BIC of the counterpart's account. Only required when there
            is no 'IBAN_ONLY'-capability in the respective account/interface combination
            that is to be used when submitting the payment.
          example: DRESDEFF700
        amount:
          type: number
          description: "The amount of the payment. Must be a positive decimal number\
            \ with at most two decimal places. When debiting money using the FINTS_SERVER\
            \ or WEB_SCRAPER interface, the currency is always EUR.<br/>Please refer\
            \ to the <a href='https://documentation.finapi.io/payments/payment-data-validation'\
            \ target='_blank'> Payment Data Validation documentation </a> for more\
            \ details."
          example: 99.99
        purpose:
          maxLength: 2000
          minLength: 1
          type: string
          description: The purpose of the transfer transaction.<br/>Please refer to
            the <a href='https://documentation.finapi.io/payments/payment-data-validation'
            target='_blank'> Payment Data Validation documentation </a> for more details.
          example: Test Payment
        sepaPurposeCode:
          type: string
          description: "SEPA purpose code, according to ISO 20022, external codes\
            \ set.<br/>Please note that the SEPA purpose code may be ignored by some\
            \ banks."
          example: OTHR
        endToEndId:
          maxLength: 35
          minLength: 1
          type: string
          description: End-To-End ID for the transfer transaction.<br/>Please refer
            to the <a href='https://documentation.finapi.io/payments/payment-data-validation'
            target='_blank'> Payment Data Validation documentation </a> for more details.
          example: "001100550526"
        mandateId:
          maxLength: 270
          minLength: 1
          type: string
          description: Mandate ID that this direct debit order is based on.
          example: "1"
        mandateDate:
          type: string
          description: <strong>Format:</strong> 'YYYY-MM-DD'<br/>Date of the mandate
            that this direct debit order is based on
          format: date
          example: "2018-01-01"
        creditorId:
          maxLength: 35
          minLength: 1
          type: string
          description: Creditor ID of the source account's holder
          example: DE02ABC01234567890
        counterpartAddress:
          maxLength: 140
          minLength: 1
          type: string
          description: The postal address of the debtor. This should be defined for
            direct debits created for debtors outside of the european union.
          example: "221b Baker St, London NW1 6XE"
        counterpartCountry:
          description: |-
            The ISO 3166 ALPHA-2 country code of the debtor’s address. Examples: 'GB' for the United Kingdom or 'CH' for Switzerland. This should be defined for direct debits created for debtors outside of the european union.<br/>
            <strong>Type:</strong> ISO3166Alpha2Codes
          example: GB
          allOf:
          - $ref: "#/components/schemas/ISO3166Alpha2Codes"
      description: Parameters for a direct debit order
    DirectDebitSequenceType:
      type: string
      enum:
      - OOFF
      - FRST
      - RCUR
      - FNAL
    DirectDebitType:
      type: string
      enum:
      - B2B
      - BASIC
    DomesticMoneyTransferConstraints:
      type: object
      properties:
        mandatoryFields:
          $ref: "#/components/schemas/DomesticMoneyTransferMandatoryFields"
      description: Payment constraints that apply to domestic money transfers.
    DomesticMoneyTransferMandatoryFields:
      type: object
      properties:
        endToEndId:
          type: boolean
          description: Indicates whether the endToEndId must be provided for domestic
            money transfers.
          example: true
      description: Set of mandatory fields for domestic money transfers via this interface.
    EditBankConnectionParams:
      type: object
      properties:
        name:
          maxLength: 64
          minLength: 0
          pattern: "[A-Za-z0-9¡-ʯ &\\(\\)\\{\\}\\[\\]\\.:,;\\?!\\+\\-_\\$@#~`\\^€\
            ]*"
          type: string
          description: "New name for the bank connection. If you do not want to change\
            \ the current name let this field remain unset. If you want to clear the\
            \ current name, set the field's value to an empty string (\"\").<br/><br/><strong>NOTE:</strong>\
            \ If you are a Web Form 2.0 customer, and would like to update the name\
            \ of your bank connection, please use the API parameter."
          example: Bank Connection
        bankingInterface:
          description: |-
            The interface for which you want to edit data. Must be given when you pass 'loginCredentials' and/or a 'defaultTwoStepProcedureId'.<br/>
            <strong>Type:</strong> BankingInterface
          example: FINTS_SERVER
          allOf:
          - $ref: "#/components/schemas/BankingInterface"
        loginCredentials:
          type: array
          description: |-
            Set of login credentials that you want to edit. Must be passed in combination with the 'bankingInterface' field. The labels that you pass must match with the login credential labels that the respective interface defines. If you want to clear the stored value for a credential, you can pass an empty string ("") as value. Note that any change in the credentials will automatically remove the saved consent data associated with those credentials.<br/><br/><strong>NOTE:</strong> If you are a  Web Form 2.0 customer, and would like to allow your end-users to change the credentials they have stored in our system, then please navigate <a target="_blank" href='?product=web_form_2.0#post-/api/tasks/backgroundUpdate' target='_blank'>here</a> to implement the same functionality.<br/>
            <strong>Type:</strong> LoginCredential
          items:
            $ref: "#/components/schemas/LoginCredential"
        defaultTwoStepProcedureId:
          maxLength: 512
          minLength: 0
          type: string
          description: "New default two-step-procedure. Must match the 'procedureId'\
            \ of one of the procedures that are listed in the bank connection. If\
            \ you do not want to change this field let it remain unset. If you want\
            \ to clear the current default two-step-procedure, set the field's value\
            \ to an empty string (\"\").<br/><br/><strong>NOTE:</strong> If you are\
            \ a Web Form 2.0 customer and would like to allow your end users to update\
            \ their preferred TAN procedure that is stored in our system, then please\
            \ navigate <a target=\"_blank\" href='?product=web_form_2.0#post-/api/tasks/backgroundUpdate'>here</a>\
            \ to implement the same functionality."
          example: "955"
      description: Container for bank connection edit params
    EditCategoryParams:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 128
          minLength: 1
          pattern: "[A-Za-z0-9¡-ʯ &\\(\\)\\{\\}\\[\\]\\.:,;\\?!\\+\\-_\\$@#~`\\^€\
            ]*"
          type: string
          description: New name of the category.
          example: Sport & Fitness
      description: Container for category edit params
    EditTppCredentialParams:
      type: object
      properties:
        tppAuthenticationGroupId:
          type: integer
          description: The TPP Authentication Group Id for which the credentials can
            be used
          format: int64
          example: 1
        label:
          maxLength: 256
          minLength: 1
          type: string
          description: Label for credentials
          example: Demo bank TPP credentials
        tppClientId:
          maxLength: 256
          minLength: 1
          type: string
          description: "ID of the TPP accessing the ASPSP API, as provided by the\
            \ ASPSP as the result of registration"
          example: a23312
        tppClientSecret:
          maxLength: 256
          minLength: 1
          type: string
          description: "Secret of the TPP accessing the ASPSP API, as provided by\
            \ the ASPSP as the result of registration"
          example: followTheWhiteRabbit
        tppApiKey:
          maxLength: 256
          minLength: 1
          type: string
          description: API Key provided by ASPSP  as the result of registration
          example: dontFollowTheWhiteRabbit
        tppName:
          maxLength: 256
          minLength: 1
          type: string
          description: TPP name
          example: finAPI
        validFromDate:
          type: string
          description: <strong>Format:</strong> 'YYYY-MM-DD'<br/>Credentials "valid
            from" date. Default is today's date
          format: date
          example: "2019-04-23"
        validUntilDate:
          type: string
          description: <strong>Format:</strong> 'YYYY-MM-DD'<br/>Credentials "valid
            until" date. Default is null which means "indefinite" (no limit)
          format: date
          example: "2022-04-23"
      description: A container for editing TPP client credentials data
    EnabledProducts:
      required:
      - access
      - contractManager
      - customerDashboard
      - dataIntelligence
      - debitFlex
      - diLabelling
      - giroCheck
      - giroIdent
      - kreditCheck
      - kreditCheckB2B
      - schufaApi
      - transparencyRegister
      - webForm
      type: object
      properties:
        access:
          type: boolean
          description: Whether Access is available to this client.
          example: true
        webForm:
          type: boolean
          description: Whether the Web Form is available to this client.
          example: false
        customerDashboard:
          type: boolean
          description: Whether the CustomerDashboard is available to this client.
          example: false
        dataIntelligence:
          type: boolean
          description: Whether Data Intelligence is available to this client.
          example: false
        giroIdent:
          type: boolean
          description: Whether GiroIdent is available to this client.
          example: false
        schufaApi:
          type: boolean
          description: Whether the SCHUFA API is available to this client.
          example: false
        diLabelling:
          type: boolean
          description: Whether DI Labelling is available to this client.
          example: false
        contractManager:
          type: boolean
          description: Whether the ContractManager is available to this client.
          example: false
        giroCheck:
          type: boolean
          description: Whether GiroCheck is available to this client.
          example: false
        kreditCheck:
          type: boolean
          description: Whether KreditCheck is available to this client.
          example: false
        kreditCheckB2B:
          type: boolean
          description: Whether KreditCheck B2B is available to this client.
          example: false
        debitFlex:
          type: boolean
          description: Whether DebitFlex is available to this client.
          example: false
        transparencyRegister:
          type: boolean
          description: Whether the TransparencyRegister is available to this client.
          example: false
      description: Information about the finAPI products available to this client.
    ErrorCode:
      type: string
      enum:
      - ADDITIONAL_AUTHENTICATION_REQUIRED
      - BAD_REQUEST
      - BANK_SERVER_REJECTION
      - COLLECTIVE_MONEY_TRANSFER_NOT_SUPPORTED
      - ENTITY_EXISTS
      - FORBIDDEN
      - IBAN_ONLY_DIRECT_DEBIT_NOT_SUPPORTED
      - IBAN_ONLY_MONEY_TRANSFER_NOT_SUPPORTED
      - ILLEGAL_ENTITY_STATE
      - ILLEGAL_FIELD_VALUE
      - ILLEGAL_PAGE_SIZE
      - INVALID_CONSENT
      - INVALID_FILTER_OPTIONS
      - INVALID_ACCOUNT_TYPES
      - INVALID_TOKEN
      - INVALID_TWO_STEP_PROCEDURE
      - LOCKED
      - LOGIN_FIELDS_MISMATCH
      - METHOD_NOT_ALLOWED
      - MISSING_CREDENTIALS
      - MISSING_FIELD
      - MISSING_TWO_STEP_PROCEDURE
      - NO_ACCOUNTS_FOR_TYPE_LIST
      - NO_CERTIFICATE
      - NO_EXISTING_CHALLENGE
      - NO_TPP_CLIENT_CREDENTIALS
      - NO_PSU_METADATA
      - TOO_MANY_IDS
      - UNAUTHORIZED_ACCESS
      - UNEXPECTED_ERROR
      - UNKNOWN_ENTITY
      - UNSUPPORTED_BANK
      - UNSUPPORTED_FEATURE
      - UNSUPPORTED_MEDIA_TYPE
      - UNSUPPORTED_ORDER
      - USER_ALREADY_VERIFIED
      - USER_NOT_VERIFIED
      - WEB_FORM_ABORTED
      - WEB_FORM_REQUIRED
    ErrorDetails:
      required:
      - code
      - type
      type: object
      properties:
        message:
          type: string
          description: Error message
          example: An unexpected error occurred
        code:
          description: |-
            Error code. See the documentation of the individual services for details about what values may be returned.<br/>
            <strong>Type:</strong> ErrorCode
          example: UNEXPECTED_ERROR
          allOf:
          - $ref: "#/components/schemas/ErrorCode"
        type:
          description: |-
            Error type. BUSINESS errors depict error messages in the language of the bank (or the preferred language) for the user, e.g. from a bank server. TECHNICAL errors are meant to be read by developers and depict internal errors.<br/>
            <strong>Type:</strong> ErrorType
          example: TECHNICAL
          allOf:
          - $ref: "#/components/schemas/ErrorType"
        multiStepAuthentication:
          type: object
          description: |-
            This field is set when a multi-step authentication is required, i.e. when you need to repeat the original service call and provide additional data. The field contains information about what additional data is required.<br/>
            <strong>Type:</strong> MultiStepAuthenticationChallenge
          allOf:
          - $ref: "#/components/schemas/MultiStepAuthenticationChallenge"
      description: Error details
    ErrorMessage:
      required:
      - authContext
      - date
      - endpoint
      - errors
      - requestId
      type: object
      properties:
        errors:
          type: array
          description: |-
            List of errors<br/>
            <strong>Type:</strong> ErrorDetails
          items:
            $ref: "#/components/schemas/ErrorDetails"
        date:
          type: string
          description: "<strong>Format:</strong> 'YYYY-MM-DD'T'HH:MM:SS.SSSXXX' (RFC\
            \ 3339, section 5.6)<br/>Server date of when the error(s) occurred"
          format: date-time
          example: "2018-01-01T09:18:40.473+01:00"
        requestId:
          type: string
          description: "ID of the request that caused this error. This is either what\
            \ you have passed for the header 'X-Request-Id', or an auto-generated\
            \ ID in case you didn't pass any value for that header.<br/><br/>"
          example: request-id-01234567890123456789
        endpoint:
          type: string
          description: The service endpoint that was called
          example: https://finapi.localhost
        authContext:
          type: string
          description: Information about the authorization context of the service
            call
          example: 1/2
        bank:
          type: string
          description: BLZ and name (in format "<BLZ> - <name>") of a bank that was
            used for the original request
          example: "00000000"
      description: Response type when a service call was not successful. Contains
        details about the error(s) that occurred.
    ErrorType:
      type: string
      enum:
      - BUSINESS
      - TECHNICAL
    ExecutePasswordChangeParams:
      required:
      - password
      - passwordChangeToken
      - userId
      type: object
      properties:
        userId:
          maxLength: 36
          minLength: 1
          pattern: "[a-zA-Z0-9\\-_\\.\\+@]*"
          type: string
          description: User identifier
          example: username
        password:
          maxLength: 128
          minLength: 6
          type: string
          description: User's new password.
          example: password
        passwordChangeToken:
          maxLength: 36
          minLength: 36
          pattern: "[0-9a-f\\-]*"
          type: string
          description: "Decrypted password change token (the token that you received\
            \ from the /users/requestPasswordChange service, decrypted with your data\
            \ decryption key)"
          example: 45a611d8-8a19-4a02-8726-a24b6a691ce9
      description: Execute password change parameters
    GetTokenParams:
      required:
      - client_id
      - client_secret
      - grant_type
      type: object
      properties:
        grant_type:
          type: string
          description: Determines the required type of authorization:password - authorize
            a user; client_credentials - authorize a client;refresh_token - refresh
            a user's access_token.
          enum:
          - password
          - client_credentials
          - refresh_token
        client_id:
          type: string
          description: Client identifier
        client_secret:
          type: string
          description: Client secret
          format: password
        refresh_token:
          type: string
          description: Refresh token. Required for grant_type=refresh_token only.
        username:
          type: string
          description: User identifier. Required for grant_type=password only.
        password:
          type: string
          description: User password. Required for grant_type=password only.
          format: password
    ISO3166Alpha2Codes:
      type: string
      enum:
      - AD
      - AE
      - AF
      - AG
      - AI
      - AL
      - AM
      - AO
      - AQ
      - AR
      - AS
      - AT
      - AU
      - AW
      - AX
      - AZ
      - BA
      - BB
      - BD
      - BE
      - BF
      - BG
      - BH
      - BI
      - BJ
      - BL
      - BM
      - BN
      - BO
      - BQ
      - BR
      - BS
      - BT
      - BV
      - BW
      - BY
      - BZ
      - CA
      - CC
      - CD
      - CF
      - CG
      - CH
      - CI
      - CK
      - CL
      - CM
      - CN
      - CO
      - CR
      - CU
      - CV
      - CW
      - CX
      - CY
      - CZ
      - DE
      - DJ
      - DK
      - DM
      - DO
      - DZ
      - EC
      - EE
      - EG
      - EH
      - ER
      - ES
      - ET
      - FI
      - FJ
      - FK
      - FM
      - FO
      - FR
      - GA
      - GB
      - GD
      - GE
      - GF
      - GG
      - GH
      - GI
      - GL
      - GM
      - GN
      - GP
      - GQ
      - GR
      - GS
      - GT
      - GU
      - GW
      - GY
      - HK
      - HM
      - HN
      - HR
      - HT
      - HU
      - ID
      - IE
      - IL
      - IM
      - IN
      - IO
      - IQ
      - IR
      - IS
      - IT
      - JE
      - JM
      - JO
      - JP
      - KE
      - KG
      - KH
      - KI
      - KM
      - KN
      - KP
      - KR
      - KW
      - KY
      - KZ
      - LA
      - LB
      - LC
      - LI
      - LK
      - LR
      - LS
      - LT
      - LU
      - LV
      - LY
      - MA
      - MC
      - MD
      - ME
      - MF
      - MG
      - MH
      - MK
      - ML
      - MM
      - MN
      - MO
      - MP
      - MQ
      - MR
      - MS
      - MT
      - MU
      - MV
      - MW
      - MX
      - MY
      - MZ
      - NA
      - NC
      - NE
      - NF
      - NG
      - NI
      - NL
      - "NO"
      - NP
      - NR
      - NU
      - NZ
      - OM
      - PA
      - PE
      - PF
      - PG
      - PH
      - PK
      - PL
      - PM
      - PN
      - PR
      - PS
      - PT
      - PW
      - PY
      - QA
      - RE
      - RO
      - RS
      - RU
      - RW
      - SA
      - SB
      - SC
      - SD
      - SE
      - SG
      - SH
      - SI
      - SJ
      - SK
      - SL
      - SM
      - SN
      - SO
      - SR
      - SS
      - ST
      - SV
      - SX
      - SY
      - SZ
      - TC
      - TD
      - TF
      - TG
      - TH
      - TJ
      - TK
      - TL
      - TM
      - TN
      - TO
      - TR
      - TT
      - TV
      - TW
      - TZ
      - UA
      - UG
      - UM
      - US
      - UY
      - UZ
      - VA
      - VC
      - VE
      - VG
      - VI
      - VN
      - VU
      - WF
      - WS
      - XK
      - YE
      - YT
      - ZA
      - ZM
      - ZW
    IbanRule:
      required:
      - category
      - creationDate
      - direction
      - iban
      - id
      type: object
      properties:
        id:
          type: integer
          description: Rule identifier
          format: int64
          example: 1
        category:
          type: object
          description: |-
            The category that this rule assigns to the transactions that it matches<br/>
            <strong>Type:</strong> Category
          allOf:
          - $ref: "#/components/schemas/Category"
        direction:
          description: |-
            Direction for the rule. 'Income' means that the rule applies to transactions with a positive amount only, 'Spending' means it applies to transactions with a negative amount only.<br/>
            <strong>Type:</strong> TransactionDirection
          example: Income
          allOf:
          - $ref: "#/components/schemas/TransactionDirection"
        creationDate:
          type: string
          description: "<strong>Format:</strong> 'YYYY-MM-DD'T'HH:MM:SS.SSSXXX' (RFC\
            \ 3339, section 5.6)<br/>Timestamp of when the rule was created."
          format: date-time
          example: "2018-01-01T09:18:40.473+01:00"
        iban:
          type: string
          description: The IBAN for this rule
          example: DE89370400440532013000
      description: Container for an IBAN rule
    IbanRuleIdentifiersParams:
      required:
      - ids
      type: object
      properties:
        ids:
          type: array
          description: List of identifiers
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
            format: int64
      description: IBAN Rule Identifier params
    IbanRuleList:
      required:
      - ibanRules
      type: object
      properties:
        ibanRules:
          type: array
          description: |-
            List of IBAN rules<br/>
            <strong>Type:</strong> IbanRule
          items:
            $ref: "#/components/schemas/IbanRule"
      description: Container for IBAN rules
    IbanRuleParams:
      required:
      - categoryId
      - direction
      - iban
      type: object
      properties:
        iban:
          type: string
          description: IBAN (case-insensitive)
          example: DE89370400440532013000
        categoryId:
          type: integer
          description: ID of the category that this rule should assign to the matching
            transactions
          format: int64
          example: 378
        direction:
          description: |-
            Direction for the rule. 'Income' means that the rule applies to transactions with a positive amount only, 'Spending' means it applies to transactions with a negative amount only. 'Both' means that it applies to both kind of transactions. Note that in case of 'Both', finAPI will create two individual rules (one with direction 'Income' and one with direction 'Spending').<br/>
            <strong>Type:</strong> CategorizationRuleDirection
          example: Spending
          allOf:
          - $ref: "#/components/schemas/CategorizationRuleDirection"
      description: Parameters of IBAN rule
    IbanRulesParams:
      required:
      - ibanRules
      type: object
      properties:
        ibanRules:
          maxItems: 100
          minItems: 1
          type: array
          description: |-
            IBAN rule definitions.<br/>
            <strong>Type:</strong> IbanRuleParams
          items:
            $ref: "#/components/schemas/IbanRuleParams"
      description: Params for creation of IBAN rules
    IdentifierList:
      required:
      - identifiers
      type: object
      properties:
        identifiers:
          type: array
          description: Set of identifiers (in ascending order)
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
            format: int64
      description: Set of identifiers (in ascending order)
    ImportBankConnectionParams:
      required:
      - bankId
      - bankingInterface
      type: object
      properties:
        bankId:
          type: integer
          description: Bank Identifier
          format: int64
          example: 280001
        name:
          maxLength: 64
          minLength: 1
          type: string
          description: "Custom name for the bank connection. If you do not want to\
            \ set a name, you can leave this field unset."
          example: Bank connection
        bankingInterface:
          description: |-
            The interface to use for connecting with the bank.<br/>
            <strong>Type:</strong> BankingInterface
          example: XS2A
          allOf:
          - $ref: "#/components/schemas/BankingInterface"
        loginCredentials:
          type: array
          description: |-
            Set of login credentials. Must always be passed, unless the respective bank interface does not declare any login fields.<br/>
            <strong>Type:</strong> LoginCredential
          items:
            $ref: "#/components/schemas/LoginCredential"
        storeSecrets:
          type: boolean
          description: "Whether to store the secret login fields. If the secret fields\
            \ are stored, then updates can be triggered without the involvement of\
            \ the users, as long as the credentials remain valid and the bank consent\
            \ has not expired. Note that bank consent will be stored regardless of\
            \ the field value. Default value is false."
          example: true
          default: false
        skipBalancesDownload:
          type: boolean
          description: "Whether to skip the download of balances or not. May only\
            \ be set to true if 'skipPositionsDownload' is also true. If set to true,\
            \ then finAPI will download just the account list with the accounts' information\
            \ (like account name, number, holder, etc). Default is false.<br/><br/>NOTES:<br/>&bull;\
            \ Setting this flag to true is only meant to be used if A) you generally\
            \ never download balances and positions, because you are only interested\
            \ in the account list, or B) you want to get just the list of accounts\
            \ in the first step, and then delete unwanted accounts from the bank connection,\
            \ before you trigger another update that downloads balances and transactions.\
            \ This approach allows you to download balances only for the accounts\
            \ that you want.<br/>&bull; If you skip the download of balances during\
            \ an import or update, you can still download them with a later update.<br/>&bull;\
            \ If an account was stored with a balance already, and you skip the download\
            \ of its balance in a subsequent update, then the account's balance will\
            \ get outdated. Be also aware that certain services (like GET /accounts/dailyBalances)\
            \ may return incorrect results in such cases.<br/>&bull; If any bank connection\
            \ gets updated via finAPI's automatic batch update, then all balances\
            \ (of already imported accounts) <u>will</u> get downloaded in any case!"
          example: false
          default: false
        skipPositionsDownload:
          type: boolean
          description: "Whether to skip the download of transactions and securities\
            \ or not. If set to true, then finAPI will download just the account list\
            \ with the accounts' information (like account name, number, holder, etc),\
            \ as well as the accounts' balances (if possible), but skip the download\
            \ of transactions and securities. Default is false.<br/>You may also use\
            \ this flag in combination with 'skipBalancesDownload' = true, to additionally\
            \ skip the download of balances.<br/><br/>NOTES:<br/>&bull; Setting this\
            \ flag to true is only meant to be used if A) you generally never download\
            \ positions, because you are only interested in the account list and/or\
            \ balances, or B) you want to get just the list of accounts in the first\
            \ step, and then delete unwanted accounts from the bank connection, before\
            \ you trigger another update that downloads transactions. This approach\
            \ allows you to download transactions only for the accounts that you want.<br/>&bull;\
            \ If you skip the download of transactions and securities during an import\
            \ or update, you can still download them with a later update (though you\
            \ might not get all positions at a later point, because the date range\
            \ in which the bank servers provide this data is usually limited).<br/>&bull;\
            \ If an account already had any positions imported before an update, and\
            \ you skip the positions download in the update, then the account's updated\
            \ balance might not add up to the set of transactions / security positions.\
            \ Be aware that certain services (like GET /accounts/dailyBalances) may\
            \ return incorrect results for accounts in such a state.<br/>&bull; If\
            \ any bank connection gets updated via finAPI's automatic batch update,\
            \ then all transactions and security positions (of already imported accounts)\
            \ <u>will</u> get downloaded in any case!<br/>&bull; For security accounts,\
            \ skipping the downloading of the securities might result in the account's\
            \ balance also not being downloaded.<br/>&bull; For the WEB_SCRAPER interface,\
            \ it's technically required to download transactions for Bausparen accounts\
            \ even if 'skipPositionsDownload' is set to true, but they are not actively\
            \ processed by finAPI."
          example: false
          default: false
        loadOwnerData:
          type: boolean
          description: "Whether to load information about the bank connection owner(s)\
            \ - see field 'owners'. Default value is 'false'.<br/><br/>NOTE: This\
            \ feature is supported only by the WEB_SCRAPER interface."
          example: false
          default: false
        maxDaysForDownload:
          type: integer
          description: "This setting defines how much of an account's transactions\
            \ history will get downloaded whenever a new account is imported. More\
            \ technically, it depicts the number of days to download transactions\
            \ for, starting from - and including - the date of the account import.\
            \ For example, on an account import that happens today, the value 30 would\
            \ instruct finAPI to download transactions from the past 30 days (including\
            \ today). The minimum allowed value is 14, the maximum value is 3650.\
            \ Also possible is the value 0 (which is the default value), in which\
            \ case there will be no limit to the transactions download and finAPI\
            \ will try to get all transactions that it can. <br/><br/>NOTES:<br/>&bull;\
            \ There is no guarantee that finAPI will actually download transactions\
            \ for the entire defined date range, as there may be limitations to the\
            \ download range (set by the bank or by finAPI, e.g. see ClientConfiguration.transactionImportLimitation).\
            \ <br/>&bull; This parameter only applies to transactions, not to security\
            \ positions; For security accounts, finAPI will always download all security\
            \ positions that it can. <br/>&bull; This setting is stored for each interface\
            \ individually.<br/>&bull; After an interface has been connected with\
            \ this setting, there is no way to change the setting for that interface\
            \ afterwards.<br/>&bull; <b>If you do not limit the download range to\
            \ a value less than 90 days, the bank is more likely to trigger a strong\
            \ customer authentication request for the user when finAPI is attempting\
            \ to download the transactions.</b>"
          format: int32
          example: 365
          default: 0
        accountTypes:
          type: array
          description: |-
            If specified, then finAPI will import only those accounts whose type is one of the given types. Note that when the bank connection does not contain any accounts of the given types, the operation will fail with error code NO_ACCOUNTS_FOR_TYPE_LIST.<br/><br/><b>NOTE</b>: If your client is restricted to certain account types (see <code>ClientConfiguration.accountTypeRestrictions</code>), then you may only specify account types that are enabled for you, otherwise the service will return with an error. If your client has account type restrictions and you do not specify any types, then the service will implicitly limit the types according to your client's configuration.<br/>
            <strong>Type:</strong> AccountType
          example:
          - Checking
          - Savings
          - CreditCard
          - Security
          - Loan
          - Membership
          - Bausparen
          items:
            allOf:
            - $ref: "#/components/schemas/AccountType"
        accountReferences:
          type: array
          description: |-
            List of accounts for which access is requested from the bank. It must only be passed if the bank interface has the DETAILED_CONSENT property set.<br/>
            <strong>Type:</strong> AccountReference
          items:
            $ref: "#/components/schemas/AccountReference"
        multiStepAuthentication:
          type: object
          description: |-
            Container for multi-step authentication data. Required when a previous service call initiated a multi-step authentication.<br/>
            <strong>Type:</strong> MultiStepAuthenticationCallback
          allOf:
          - $ref: "#/components/schemas/MultiStepAuthenticationCallback"
        redirectUrl:
          maxLength: 2048
          minLength: 1
          type: string
          description: Must only be passed when the used interface has the property
            REDIRECT_APPROACH. The user will be redirected to the given URL from the
            bank's website after completing the bank login and (possibly) the SCA.
          example: https://some-domain.io/redirect
      description: Container for bank connection import parameters
    KeywordRule:
      required:
      - allKeywordsMustMatch
      - category
      - creationDate
      - direction
      - id
      - keywords
      - keywordsLanguage
      type: object
      properties:
        id:
          type: integer
          description: Rule identifier
          format: int64
          example: 1
        category:
          type: object
          description: |-
            The category that this rule assigns to the transactions that it matches<br/>
            <strong>Type:</strong> Category
          allOf:
          - $ref: "#/components/schemas/Category"
        direction:
          description: |-
            Direction for the rule. 'Income' means that the rule applies to transactions with a positive amount only, 'Spending' means it applies to transactions with a negative amount only.<br/>
            <strong>Type:</strong> TransactionDirection
          example: Spending
          allOf:
          - $ref: "#/components/schemas/TransactionDirection"
        creationDate:
          type: string
          description: "<strong>Format:</strong> 'YYYY-MM-DD'T'HH:MM:SS.SSSXXX' (RFC\
            \ 3339, section 5.6)<br/>Timestamp of when the rule was created."
          format: date-time
          example: "2018-01-01T09:18:40.473+01:00"
        keywords:
          type: array
          description: Set of keywords that this rule defines.
          example:
          - pizza
          - kaffee
          - kuchen
          items:
            type: string
        keywordsLanguage:
          description: |-
            The language of the keywords (ISO 639-1 language code).<br/>
            <strong>Type:</strong> Language
          example: DE
          allOf:
          - $ref: "#/components/schemas/Language"
        allKeywordsMustMatch:
          type: boolean
          description: "This field is only relevant if the rule contains multiple\
            \ keywords. If set to 'true' it means that all keywords have to be found\
            \ in a transaction to apply the given category. If set to 'false', then\
            \ even a single matching keyword in a transaction can trigger this rule."
          example: false
      description: Container for a keyword rule
    KeywordRuleIdentifiersParams:
      required:
      - ids
      type: object
      properties:
        ids:
          type: array
          description: List of identifiers
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
            format: int64
      description: Keyword Rule Identifier params
    KeywordRuleList:
      required:
      - keywordRules
      type: object
      properties:
        keywordRules:
          type: array
          description: |-
            List of keyword rules<br/>
            <strong>Type:</strong> KeywordRule
          items:
            $ref: "#/components/schemas/KeywordRule"
      description: Container for keyword rules
    KeywordRuleParams:
      required:
      - categoryId
      - direction
      - keywords
      type: object
      properties:
        categoryId:
          type: integer
          description: ID of the category that this rule should assign to the matching
            transactions
          format: int64
          example: 378
        direction:
          description: |-
            Direction for the rule. 'Income' means that the rule applies to transactions with a positive amount only, 'Spending' means it applies to transactions with a negative amount only. 'Both' means that it applies to both kind of transactions. Note that in case of 'Both', finAPI will create two individual rules (one with direction 'Income' and one with direction 'Spending').<br/>
            <strong>Type:</strong> CategorizationRuleDirection
          example: Spending
          allOf:
          - $ref: "#/components/schemas/CategorizationRuleDirection"
        keywords:
          maxItems: 100
          minItems: 1
          type: array
          description: Set of keywords for the rule (Keywords are regarded case-insensitive).
          example:
          - pizza
          - kaffee
          - kuchen
          items:
            type: string
        keywordsLanguage:
          description: |-
            The language of the given keywords (ISO 639-1 language code).<br/>
            <strong>Type:</strong> Language
          example: DE
          allOf:
          - $ref: "#/components/schemas/Language"
          default: DE
        allKeywordsMustMatch:
          type: boolean
          description: "This field is only relevant if you pass multiple keywords.\
            \ If set to 'true', it means that all keywords have to be found in a transaction\
            \ to apply the given category. If set to 'false', then even a single matching\
            \ keyword in a transaction can trigger this rule. Default value is 'false'."
          example: true
          default: false
      description: Parameters of keyword rule
    KeywordRulesParams:
      required:
      - keywordRules
      type: object
      properties:
        keywordRules:
          maxItems: 100
          minItems: 1
          type: array
          description: |-
            Keyword rule definitions.<br/>
            <strong>Type:</strong> KeywordRuleParams
          items:
            $ref: "#/components/schemas/KeywordRuleParams"
      description: Params for creation of keyword rules
    Label:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: Label identifier
          format: int64
          example: 1
        name:
          type: string
          description: Label name
          example: test
      description: Container for a label's data
    LabelParams:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 288
          minLength: 1
          pattern: "[A-Za-z0-9¡-ʯ &\\(\\)\\{\\}\\[\\]\\.:,;\\?!\\+\\-_\\$@#~`\\^€\
            ]*"
          type: string
          description: Label's name.
          example: test
      description: Label's name
    Language:
      type: string
      enum:
      - AA
      - AB
      - AE
      - AF
      - AK
      - AM
      - AN
      - AR
      - AS
      - AV
      - AY
      - AZ
      - BA
      - BE
      - BG
      - BH
      - BI
      - BM
      - BN
      - BO
      - BR
      - BS
      - CA
      - CE
      - CH
      - CO
      - CR
      - CS
      - CU
      - CV
      - CY
      - DA
      - DE
      - DV
      - DZ
      - EE
      - EL
      - EN
      - EO
      - ES
      - ET
      - EU
      - FA
      - FF
      - FI
      - FJ
      - FO
      - FR
      - FY
      - GA
      - GD
      - GL
      - GN
      - GU
      - GV
      - HA
      - HE
      - HI
      - HO
      - HR
      - HT
      - HU
      - HY
      - HZ
      - IA
      - ID
      - IE
      - IG
      - II
      - IK
      - IO
      - IS
      - IT
      - IU
      - JA
      - JV
      - KA
      - KG
      - KI
      - KJ
      - KK
      - KL
      - KM
      - KN
      - KO
      - KR
      - KS
      - KU
      - KV
      - KW
      - KY
      - LA
      - LB
      - LG
      - LI
      - LN
      - LO
      - LT
      - LU
      - LV
      - MG
      - MH
      - MI
      - MK
      - ML
      - MN
      - MR
      - MS
      - MT
      - MY
      - NA
      - NB
      - ND
      - NE
      - NG
      - NL
      - NN
      - "NO"
      - NR
      - NV
      - NY
      - OC
      - OJ
      - OM
      - OR
      - OS
      - PA
      - PI
      - PL
      - PS
      - PT
      - QU
      - RM
      - RN
      - RO
      - RU
      - RW
      - SA
      - SC
      - SD
      - SE
      - SG
      - SI
      - SK
      - SL
      - SM
      - SN
      - SO
      - SQ
      - SR
      - SS
      - ST
      - SU
      - SV
      - SW
      - TA
      - TE
      - TG
      - TH
      - TI
      - TK
      - TL
      - TN
      - TO
      - TR
      - TS
      - TT
      - TW
      - TY
      - UG
      - UK
      - UR
      - UZ
      - VE
      - VI
      - VO
      - WA
      - WO
      - XH
      - YI
      - YO
      - ZA
      - ZH
      - ZU
    LoginCredential:
      required:
      - label
      - value
      type: object
      properties:
        label:
          type: string
          description: "The login field label, as defined by the respective bank interface."
          example: Onlinebanking-ID
        value:
          type: string
          description: The value for the login field
          example: max.mustermann
      description: Login credential
    LoginCredentialResource:
      required:
      - label
      type: object
      properties:
        label:
          type: string
          description: "Label for this login credential, as we suggest to show it\
            \ to the user."
          example: User ID
        value:
          type: string
          description: "Stored value for this login credential. Please NOTE:<br/>If\
            \ your client has no license for processing banking credentials, or if\
            \ this field contains a value that requires password protection (e.g.\
            \ PIN), then this field will always be 'XXXXX'."
          example: "123456"
      description: Container for a bank login credential
    MandatorLicense:
      type: string
      enum:
      - UNLICENSED
      - AISP
      - PISP
      - FULLY_LICENSED
    MockAccountData:
      required:
      - accountBalance
      - accountId
      type: object
      properties:
        accountId:
          type: integer
          description: Account identifier
          format: int64
          example: 1
        accountBalance:
          type: number
          description: "The balance that this account should be set to.<br/><br/><b>NOTE</b>:<br/>&bull;\
            \ If the specified balance does not add up to the account's current balance\
            \ plus the sum of the 'newTransactions', then finAPI will fix the balance\
            \ deviation with the insertion of an adjusting entry ('Zwischensaldo'\
            \ transaction).<br/>&bull; This service is not calculating exchange rates\
            \ for transactions, so if 'newTransactions' contains any transactions\
            \ with a currency different to the account's currency, then the balance\
            \ deviation might get calculated incorrectly."
          example: 99.99
        newTransactions:
          type: array
          description: |-
            New transactions that should be imported into the account (at most 1000 transactions at once). Please make sure that the value you pass in the 'accountBalance' field equals the current account balance plus the sum of the new transactions that you pass here, otherwise finAPI will detect a deviation in the balance and might add an adjusting entry ('Zwischensaldo' transaction). <br/>Please also note that it is not guaranteed that all transactions that you pass here will actually get imported. More specifically, finAPI will ignore any transactions whose booking date is prior to the date of the last successful account update minus 10 days (which is the default 'update window' that finAPI uses when importing new transactions). Also, finAPI will ignore any transactions that are considered duplicates of already existing transactions within the update window. This is the case for instance when you try to import a new transaction with the same booking date and same amount as an already existing transaction. In such cases, you might get an adjusting entry too ('Zwischensaldo' transaction), as your given balance might not add up to the transactions that will exist in the account after the update.<br/>
            <strong>Type:</strong> NewTransaction
          items:
            $ref: "#/components/schemas/NewTransaction"
      description: Mock account data
    MockBankConnectionUpdate:
      required:
      - bankConnectionId
      - bankingInterface
      type: object
      properties:
        bankConnectionId:
          type: integer
          description: Bank connection identifier
          format: int64
          example: 1
        bankingInterface:
          description: |-
            The banking interface to use.<br/>
            <strong>Type:</strong> BankingInterface
          example: XS2A
          allOf:
          - $ref: "#/components/schemas/BankingInterface"
        simulateBankLoginError:
          type: boolean
          description: "Whether to simulate the case that the update fails due to\
            \ incorrect banking credentials. Note that there is no real communication\
            \ to any bank server involved, so you won't lock your accounts when enabling\
            \ this flag. Default value is 'false'."
          example: false
          default: false
        mockAccountsData:
          type: array
          description: |-
            Mock accounts data. Note that for accounts that exist in a bank connection but that you do not specify in this list, the service will act like those accounts are not received by the bank servers. This means that any accounts that you do not specify here will be marked as deprecated. If you do not specify this list at all, all accounts in the bank connection will be marked as deprecated.<br/>
            <strong>Type:</strong> MockAccountData
          items:
            $ref: "#/components/schemas/MockAccountData"
      description: Data for a mock bank connection update
    MockBatchUpdateParams:
      required:
      - mockBankConnectionUpdates
      type: object
      properties:
        mockBankConnectionUpdates:
          type: array
          description: |-
            List of mock bank connection updates<br/>
            <strong>Type:</strong> MockBankConnectionUpdate
          items:
            $ref: "#/components/schemas/MockBankConnectionUpdate"
        triggerNotifications:
          type: boolean
          description: Whether this call should trigger the dispatching of notifications.
            Default is 'false'.
          example: true
          default: false
      description: Data for mock bank connection updates
    MoneyTransferOrderParams:
      required:
      - amount
      - counterpartIban
      - structuredRemittanceInformation
      type: object
      properties:
        counterpartName:
          maxLength: 70
          minLength: 1
          type: string
          description: "Name of the counterpart. Has to be provided for the SEPA EUR\
            \ transfers (see BankInterface.paymentConstraints.sepaMoneyTransfer.mandatoryFields.counterpartName).\
            \ Note: Neither finAPI nor the involved bank servers are guaranteed to\
            \ validate the counterpart name. Even if the name does not depict the\
            \ actual registered account holder of the target account, the order might\
            \ still be successful.<br/>Please refer to the <a href='https://documentation.finapi.io/payments/payment-data-validation'\
            \ target='_blank'> Payment Data Validation documentation </a> for more\
            \ details."
          example: Max Mustermann
        counterpartIban:
          type: string
          description: IBAN of the counterpart's account.
          example: DE13700800000061110500
        counterpartBic:
          type: string
          description: "BIC of the counterpart's account. This field is required for\
            \ SEPA payments (i.e. payments in EUR currency), when there is no 'IBAN_ONLY'-capability\
            \ in the respective account/interface combination that is to be used when\
            \ submitting the payment.<br/>Bank-specific constraints may apply to this\
            \ field. Please refer to BankInterface.paymentConstraints to make sure\
            \ the payment you are creating won't get rejected."
          example: DRESDEFF700
        counterpartBankName:
          maxLength: 128
          minLength: 1
          type: string
          description: "Name of the counterpart's bank. Only required for banks that\
            \ have BankInterface.paymentConstraints.sepaMoneyTransfer.mandatoryFields.counterpartBankName\
            \ constraint. <br/>Note: Neither finAPI nor the involved bank servers\
            \ are guaranteed to validate the counterpart bank name."
          example: finAPI Test Bank
        amount:
          type: number
          description: The amount of the payment. Must be a positive decimal number
            with at most two decimal places.<br/>Please refer to the <a href='https://documentation.finapi.io/payments/payment-data-validation'
            target='_blank'> Payment Data Validation documentation </a> for more details.
          example: 99.99
        currency:
          description: |-
            The currency code of the 'amount'. To be provided in the ISO 4217 Alpha 3 format.<br/><strong>NOTES:</strong><br/>&bull; If not set, then for money transfers over the XS2A interface, finAPI will interpret the amount to be in the currency of the related account. For money transfers over other interfaces (FINTS_SERVER, WEB_SCRAPER), as well as for standalone money transfers (finAPI Payment product) over all interfaces (FINTS_SERVER, WEB_SCRAPER, XS2A), finAPI will consider the amount to be in EUR.<br/>&bull; If set in the context of a collective money transfer, then all orders must have the same currency.<br/>&bull; If set for money transfers with an accountId, then the currency must match the account currency.<br/>
            <strong>Type:</strong> Currency
          example: EUR
          allOf:
          - $ref: "#/components/schemas/Currency"
        purpose:
          maxLength: 2000
          minLength: 1
          type: string
          description: The purpose of the transfer transaction.<br/>Please refer to
            the <a href='https://documentation.finapi.io/payments/payment-data-validation'
            target='_blank'> Payment Data Validation documentation </a> for more details.<br/>Bank-specific
            constraints may apply to this field. Please refer to BankInterface.paymentConstraints
            to make sure the payment you are creating won't get rejected.
          example: Test Payment
        sepaPurposeCode:
          type: string
          description: "SEPA purpose code, according to ISO 20022, external codes\
            \ set.<br/>Please note that the SEPA purpose code may be ignored by some\
            \ banks and will be discarded for the non-SEPA payments."
          example: OTHR
        counterpartAddress:
          type: object
          description: |-
            Counterpart Address. These address fields are only relevant in very few cases if the debtor bank requires the counterpart's address.<br/>Please refer to the <a href='https://documentation.finapi.io/payments/czech-republic-sepa-transfers' target='_blank'> Czech Republic SEPA Transfers documentation </a> for more details.<br/>
            <strong>Type:</strong> CounterpartAddressData
          allOf:
          - $ref: "#/components/schemas/CounterpartAddressData"
        endToEndId:
          maxLength: 35
          minLength: 1
          type: string
          description: End-To-End ID for the transfer transaction.<br/>Only applicable
            for the SEPA EUR transfers and will be discarded for other transfers.<br/>Please
            refer to the <a href='https://documentation.finapi.io/payments/payment-data-validation'
            target='_blank'> Payment Data Validation documentation </a> for more details.<br/>Bank-specific
            constraints may apply to this field. Please refer to BankInterface.paymentConstraints
            to make sure the payment you are creating won't get rejected.
          example: "001100550526"
        structuredRemittanceInformation:
          type: array
          description: Structure Remittance Information.<br/>This attribute is used
            to submit structured remittance information for the domestic payments.<br/>Please
            refer to the <a href='https://documentation.finapi.io/payments/Czech-Republic-Domestic-Transfers.3045916711.html'
            target='_blank'>documentation</a> for more details.
          example:
          - VS:501
          - KS:9
          - SS:1005
          items:
            maxLength: 2000
            minLength: 1
            type: string
      description: Parameters for a money transfer order
    MonthlyUserStats:
      required:
      - maxBankConnectionCount
      - minBankConnectionCount
      - month
      type: object
      properties:
        month:
          type: string
          description: "The month that the contained information applies to, in the\
            \ format 'YYYY-MM'."
          example: 2018-01
        minBankConnectionCount:
          type: integer
          description: Minimum count of bank connections that this user has had at
            any point during the month.
          format: int32
          example: 1
        maxBankConnectionCount:
          type: integer
          description: Maximum count of bank connections that this user has had at
            any point during the month.
          format: int32
          example: 5
      description: Information about a user's data or activities for a certain month
    MsaStatus:
      type: string
      enum:
      - CHALLENGE_RESPONSE_REQUIRED
      - TWO_STEP_PROCEDURE_REQUIRED
      - REDIRECT_REQUIRED
      - DECOUPLED_AUTH_REQUIRED
      - DECOUPLED_AUTH_IN_PROGRESS
    MultiStepAuthenticationCallback:
      required:
      - hash
      type: object
      properties:
        hash:
          maxLength: 32
          minLength: 1
          type: string
          description: Hash that was returned in the previous multi-step authentication
            error.
          example: c7af602c031117458affd825305fb56d
        challengeResponse:
          minLength: 1
          type: string
          description: Challenge response. Must be set when the previous multi-step
            authentication error had status 'CHALLENGE_RESPONSE_REQUIRED'.
          example: "0123"
        twoStepProcedureId:
          maxLength: 512
          minLength: 1
          type: string
          description: The bank-given ID of the two-step-procedure that should be
            used for authentication. Must be set when the previous multi-step authentication
            error had status 'TWO_STEP_PROCEDURE_REQUIRED'.
          example: "955"
        redirectCallback:
          maxLength: 2048
          minLength: 1
          type: string
          description: Must be passed when the previous multi-step authentication
            error had status 'REDIRECT_REQUIRED'. The value must consist of the complete
            query parameter list that was contained in the received redirect from
            the bank.
          example: bankParam1=X&bankParam2=Y
        decoupledCallback:
          type: boolean
          description: "Must be passed when the previous multi-step authentication\
            \ error had status 'DECOUPLED_AUTH_REQUIRED' or 'DECOUPLED_AUTH_IN_PROGRESS'.\
            \ The field represents the state of the decoupled authentication meaning\
            \ that when it's set to 'true', the end-user has completed the authentication\
            \ process on bank's side.<br/><br/>Please note: Don't repeat the service\
            \ call too frequently. Some banks limit the amount of requests per minute.\
            \ Our suggestion is to repeat the service call for the decoupled approach\
            \ every 5 seconds."
          example: true
      description: "Container for multi-step authentication data, as passed by the\
        \ client to finAPI"
    MultiStepAuthenticationChallenge:
      required:
      - hash
      - opticalDataAsReinerSct
      - status
      type: object
      properties:
        hash:
          type: string
          description: Hash for this multi-step authentication flow. Must be passed
            back to finAPI when continuing the flow.
          example: c7af602c031117458affd825305fb56d
        status:
          description: |-
            Indicates the current status of the multi-step authentication flow:<br/><br/>TWO_STEP_PROCEDURE_REQUIRED means that the bank has requested an SCA method selection for the user. In this case, the service should be recalled with a chosen TSP-ID set to the 'twoStepProcedureId' field.<br/><br/>CHALLENGE_RESPONSE_REQUIRED means that the bank has requested a challenge code for the previously given TSP (SCA). This status can be completed by setting the 'challengeResponse' field.<br/><br/>REDIRECT_REQUIRED means that the user must be redirected to the bank's website, where the authentication can be finished.<br/><br/>DECOUPLED_AUTH_REQUIRED means that the bank has asked for the decoupled authentication. In this case, the 'decoupledCallback' field must be set to true to complete the authentication.<br/><br/>DECOUPLED_AUTH_IN_PROGRESS means that the bank is waiting for the completion of the decoupled authentication by the user. Until this is done, the service should be recalled at most every 5 seconds with the 'decoupledCallback' field set to 'true'. Once the decoupled authentication is completed by the user, the service returns a successful response.<br/>
            <strong>Type:</strong> MsaStatus
          example: CHALLENGE_RESPONSE_REQUIRED
          allOf:
          - $ref: "#/components/schemas/MsaStatus"
        challengeMessage:
          type: string
          description: "In case of status = CHALLENGE_RESPONSE_REQUIRED, this field\
            \ contains a message from the bank containing instructions for the user\
            \ on how to proceed with the authorization."
          example: Please use the TAN you received by SMS.
        answerFieldLabel:
          type: string
          description: Suggestion from the bank on how you can label your input field
            where the user should enter his challenge response.
          example: TAN-Nummer
        redirectUrl:
          type: string
          description: "In case of status = REDIRECT_REQUIRED, this field contains\
            \ the URL to which you must direct the user. It already includes the redirect\
            \ URL back to your client that you have passed when initiating the service\
            \ call."
          example: https://some-domain.io/user-login
        redirectContext:
          type: string
          description: "Set in case of status = REDIRECT_REQUIRED. When the bank redirects\
            \ the user back to your client, the redirect URL will contain this string,\
            \ which you must process to identify the user context for the callback\
            \ on your side."
          example: "12345"
        redirectContextField:
          type: string
          description: Set in case of status = REDIRECT_REQUIRED. This field is set
            to the name of the query parameter that contains the 'redirectContext'
            in the redirect URL from the bank back to your client.
          example: state
        twoStepProcedures:
          uniqueItems: true
          type: array
          description: |-
            In case of status = TWO_STEP_PROCEDURE_REQUIRED, this field contains the available two-step procedures. Note that this set does not necessarily match the set that is stored in the respective bank connection interface. You should always use the set from this field for the multi-step authentication flow.<br/>
            <strong>Type:</strong> TwoStepProcedure
          items:
            $ref: "#/components/schemas/TwoStepProcedure"
        photoTanMimeType:
          type: string
          description: "In case that the 'photoTanData' field is set (i.e. not null),\
            \ this field contains the MIME type to use for interpreting the photo\
            \ data (e.g.: 'image/png')"
          example: image/svg+xml
        photoTanData:
          type: string
          description: "In case that the bank server has instructed the user to scan\
            \ a photo (or more generally speaking, any kind of QR-code-like data),\
            \ then this field will contain the raw data of the photo as a BASE-64\
            \ string. "
          example: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI/Pgo8IURPQ1RZUEUgc3ZnIFBVQkxJQyAiLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9HcmFwaGljcy9TVkcvMS4xL0RURC9zdmcxMS5kdGQiPgo8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHZlcnNpb249IjEuMSIgdmlld0JveD0iMCAwIDIxMi43NTUgMjEyLjc1NSIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMjEyLjc1NSAyMTIuNzU1IiB3aWR0aD0iMTZweCIgaGVpZ2h0PSIxNnB4Ij4KICA8Zz4KICAgIDxwYXRoIGQ9Ik0xMDYuMzc3LDBDNDcuNzIxLDAsMCw0Ny43MjEsMCwxMDYuMzc3czQ3LjcyMSwxMDYuMzc3LDEwNi4zNzcsMTA2LjM3N3MxMDYuMzc3LTQ3LjcyMSwxMDYuMzc3LTEwNi4zNzcgICBTMTY1LjAzNCwwLDEwNi4zNzcsMHogTTEwNi4zNzcsMTk4Ljc1NUM1NS40NCwxOTguNzU1LDE0LDE1Ny4zMTQsMTQsMTA2LjM3N1M1NS40NCwxNCwxMDYuMzc3LDE0czkyLjM3Nyw0MS40NCw5Mi4zNzcsOTIuMzc3ICAgUzE1Ny4zMTQsMTk4Ljc1NSwxMDYuMzc3LDE5OC43NTV6IiBmaWxsPSIjMDAwMDAwIi8+CiAgICA8cGF0aCBkPSJtMTEzLjM3NywxMDAuMDk2di0zOS43NDRjMy45NjEsMS40NzEgNy40MTcsNC4xNyA5LjgyLDcuODIgMi4xMjcsMy4yMjkgNi40NjgsNC4xMjMgOS42OTYsMS45OTcgMy4yMjktMi4xMjYgNC4xMjMtNi40NjcgMS45OTYtOS42OTYtNS4wMjktNy42MzYtMTIuNzc4LTEyLjgyLTIxLjUxMi0xNC42NDd2LTExLjEyYzAtMy44NjYtMy4xMzQtNy03LTdzLTcsMy4xMzQtNyw3djExLjA5OWMtMTUuNDkzLDMuMjMtMjcuMTY4LDE2Ljk4OS0yNy4xNjgsMzMuNDI2IDAsMTYuNDM3IDExLjY3NiwzMC4xOTggMjcuMTY4LDMzLjQyOHYzOS43NDRjLTMuOTYxLTEuNDcxLTcuNDE3LTQuMTctOS44Mi03LjgyLTIuMTI3LTMuMjI5LTYuNDY4LTQuMTI0LTkuNjk2LTEuOTk3LTMuMjI5LDIuMTI2LTQuMTIzLDYuNDY3LTEuOTk2LDkuNjk2IDUuMDI5LDcuNjM2IDEyLjc3OCwxMi44MiAyMS41MTIsMTQuNjQ3djExLjExOWMwLDMuODY2IDMuMTM0LDcgNyw3czctMy4xMzQgNy03di0xMS4wOThjMTUuNDkzLTMuMjMgMjcuMTY4LTE2Ljk4OSAyNy4xNjgtMzMuNDI2LTIuODQyMTdlLTE0LTE2LjQzNy0xMS42NzUtMzAuMTk4LTI3LjE2OC0zMy40Mjh6bS0yNy4xNjgtMjAuODY1YzAtOC42NTMgNS40OTQtMTYuMDI3IDEzLjE2OC0xOC44NzR2MzcuNzQ4Yy03LjY3NC0yLjg0Ny0xMy4xNjgtMTAuMjIxLTEzLjE2OC0xOC44NzR6bTI3LjE2OCw3My4xNjZ2LTM3Ljc0OGM3LjY3NCwyLjg0NyAxMy4xNjgsMTAuMjIxIDEzLjE2OCwxOC44NzRzLTUuNDkzLDE2LjAyNy0xMy4xNjgsMTguODc0eiIgZmlsbD0iIzAwMDAwMCIvPgogIDwvZz4KPC9zdmc+Cg==
        opticalData:
          type: string
          description: "In case that the bank server has instructed the user to scan\
            \ a flicker code, then this field will contain the raw data for the flicker\
            \ animation as a BASE-64 string."
          example: 11048813833205002812775114302C30315D
        opticalDataAsReinerSct:
          type: boolean
          description: "This field is only relevant when the field 'opticalData' is\
            \ set. It depicts whether the optical data should be processed with the\
            \ use of the Reiner SCT flicker algorithm. For more details, see: <a href='https://documentation.finapi.io/access/Flicker-Code-Template.2807824454.html'\
            \ target='_blank'>Flicker Code Template</a>"
          example: false
      description: "Container for multi-step authentication data, as returned by finAPI\
        \ to the client"
    NewTransaction:
      required:
      - amount
      type: object
      properties:
        amount:
          type: number
          description: Amount. Required.
          example: -99.99
        currency:
          description: |-
            Transaction currency.<br/>
            <strong>Type:</strong> Currency
          example: EUR
          allOf:
          - $ref: "#/components/schemas/Currency"
        originalAmount:
          type: number
          description: Original amount
          example: -99.99
        originalCurrency:
          description: |-
            Currency of the original amount.<br/>
            <strong>Type:</strong> Currency
          example: EUR
          allOf:
          - $ref: "#/components/schemas/Currency"
        purpose:
          maxLength: 2000
          minLength: 1
          type: string
          description: "Purpose. Any symbols are allowed. Optional. Default value:\
            \ null."
          example: Restaurantbesuch
        counterpart:
          maxLength: 80
          minLength: 1
          type: string
          description: "Counterpart. Any symbols are allowed. Optional. Default value:\
            \ null."
          example: Bar Centrale
        counterpartIban:
          type: string
          description: "Counterpart IBAN. Optional. Default value: null."
          example: DE13700800000061110500
        counterpartBlz:
          type: string
          description: "Counterpart BLZ. Optional. Default value: null."
          example: "70080000"
        counterpartBic:
          type: string
          description: "Counterpart BIC. Optional. Default value: null."
          example: DRESDEFF700
        counterpartAccountNumber:
          type: string
          description: "Counterpart account number. Maximum length is 34. Optional.\
            \ Default value: null."
          example: "61110500"
        bookingDate:
          type: string
          description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Booking date.<br/><br/>If\
            \ the date lies back more than 10 days from the booking date of the latest\
            \ transaction that currently exists in the account, then this transaction\
            \ will be ignored and not imported. If the date depicts a date in the\
            \ future, then finAPI will deal with it the same way as it does with real\
            \ transactions during a real update (see fields 'bankBookingDate' and\
            \ 'finapiBookingDate' in the Transaction Resource for explanation).<br/><br/>This\
            \ field is optional, default value is the current date."
          format: date
          example: "2018-01-01"
        valueDate:
          type: string
          description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Value date. Optional.\
            \ Default value: Same as the booking date."
          format: date
          example: "2018-01-01"
        typeId:
          type: integer
          description: "The transaction type id. It's usually a number between 1 and\
            \ 999. You can look up valid transaction in the following document on\
            \ page 198: <a href='https://www.hbci-zka.de/dokumente/spezifikation_deutsch/fintsv4/FinTS_4.1_Messages_Finanzdatenformate_2014-01-20-FV.pdf'\
            \ target='_blank'>FinTS Financial Transaction Services</a>.<br/> For numbers\
            \ not listed here, the service call might fail."
          format: int32
          example: 106
        counterpartMandateReference:
          maxLength: 270
          minLength: 1
          type: string
          description: The mandate reference of the counterpart.
          example: MR123
        counterpartCreditorId:
          maxLength: 270
          minLength: 1
          type: string
          description: The creditor ID of the counterpart. Exists only for SEPA direct
            debit transactions ("Lastschrift").
          example: DE02ABC01234567890
        counterpartCustomerReference:
          maxLength: 270
          minLength: 1
          type: string
          description: The customer reference of the counterpart.
          example: CUR123
        counterpartDebitorId:
          maxLength: 100
          minLength: 1
          type: string
          description: The originator's identification code. Exists only for SEPA
            money transfer transactions ("Überweisung").
          example: CRI098
        type:
          maxLength: 270
          minLength: 1
          type: string
          description: "Transaction type, according to the bank. If set, this will\
            \ contain a term in the language of the bank, that you can display to\
            \ the user. Some examples of common values are: \"Lastschrift\", \"Auslands&uuml;berweisung\"\
            , \"Geb&uuml;hren\", \"Zinsen\"."
          example: Überweisungsauftrag
        typeCodeSwift:
          type: string
          description: SWIFT transaction type code.
          example: RAPRDE51
        sepaPurposeCode:
          type: string
          description: SEPA purpose code.
          example: OTHR
      description: Mock transaction data
    NotificationRule:
      required:
      - id
      - includeDetails
      - params
      - triggerEvent
      type: object
      properties:
        id:
          type: integer
          description: Notification rule identifier
          format: int64
          example: 1
        triggerEvent:
          type: string
          description: Trigger event type
          example: NEW_ACCOUNT_BALANCE
          enum:
          - NEW_ACCOUNT_BALANCE
          - NEW_TRANSACTIONS
          - BANK_LOGIN_ERROR
          - FOREIGN_MONEY_TRANSFER
          - LOW_ACCOUNT_BALANCE
          - HIGH_TRANSACTION_AMOUNT
          - CATEGORY_CASH_FLOW
          - NEW_TERMS_AND_CONDITIONS
        params:
          type: object
          additionalProperties:
            type: string
            description: Additional parameters that are specific to the trigger event
              type. Please refer to the documentation for details.
            example: "{\"accountIds\":\"1,2,3\"}"
          description: Additional parameters that are specific to the trigger event
            type. Please refer to the documentation for details.
          example:
            accountIds: "1,2,3"
        callbackHandle:
          type: string
          description: The string that finAPI includes into the notifications that
            it sends based on this rule.
          example: handle
        includeDetails:
          type: boolean
          description: Whether the notification messages that will be sent based on
            this rule contain encrypted detailed data or not.
          example: true
      description: Data of notification rule
    NotificationRuleList:
      required:
      - notificationRules
      type: object
      properties:
        notificationRules:
          type: array
          description: |-
            List of notification rules<br/>
            <strong>Type:</strong> NotificationRule
          items:
            $ref: "#/components/schemas/NotificationRule"
      description: Container for notification rules
    NotificationRuleParams:
      required:
      - triggerEvent
      type: object
      properties:
        triggerEvent:
          maxLength: 32
          minLength: 0
          type: string
          description: Trigger event type
          example: NEW_ACCOUNT_BALANCE
          enum:
          - NEW_ACCOUNT_BALANCE
          - NEW_TRANSACTIONS
          - BANK_LOGIN_ERROR
          - FOREIGN_MONEY_TRANSFER
          - LOW_ACCOUNT_BALANCE
          - HIGH_TRANSACTION_AMOUNT
          - CATEGORY_CASH_FLOW
          - NEW_TERMS_AND_CONDITIONS
        params:
          type: object
          additionalProperties:
            type: string
            description: Additional parameters that are specific to the chosen trigger
              event type. The specifics of the different trigger events are documented
              <a href='https://documentation.finapi.io/access/Push-Notifications-(Web-Hooks).2766405696.html'
              target='_blank'>here</a>.
            example: "{\"accountIds\":\"1,2,3\"}"
          description: Additional parameters that are specific to the chosen trigger
            event type. The specifics of the different trigger events are documented
            <a href='https://documentation.finapi.io/access/Push-Notifications-(Web-Hooks).2766405696.html'
            target='_blank'>here</a>.
          example:
            accountIds: "1,2,3"
        callbackHandle:
          maxLength: 512
          minLength: 1
          pattern: "[A-Za-z0-9¡-ʯ &\\(\\)\\{\\}\\[\\]\\.:,;\\?!\\+\\-_\\$@#~`\\^€\
            /=%\"]*"
          type: string
          description: "An arbitrary string that finAPI will include into the notifications\
            \ that it sends based on this rule and that you can use to identify the\
            \ notification in your application. For instance, you could include the\
            \ identifier of the user that you create this rule for.<br/><br/>Note\
            \ that for this parameter, you can pass the symbols '/', '=', '%' and\
            \ '\"' in addition to the symbols that are generally allowed in finAPI\
            \ (see <a href='https://documentation.finapi.io/access/Allowed-Characters.2764767279.html'\
            \ target='_blank'>Allowed Characters</a>). This was done to enable you\
            \ to set Base64 encoded strings and JSON structures for the callback handle."
          example: handle
        includeDetails:
          type: boolean
          description: Whether the notification messages that will be sent based on
            this rule should contain encrypted detailed data or not. Default value
            is 'false'.
          example: true
          default: false
      description: Parameters of notification rule
    OrderInitiationStatus:
      type: string
      enum:
      - OPEN
      - PENDING
      - SUCCESSFUL
      - NOT_SUCCESSFUL
      - DISCARDED
    PageableBankList:
      required:
      - banks
      - paging
      type: object
      properties:
        banks:
          type: array
          description: |-
            Banks<br/>
            <strong>Type:</strong> Bank
          items:
            $ref: "#/components/schemas/Bank"
        paging:
          type: object
          description: |-
            Information for pagination<br/>
            <strong>Type:</strong> Paging
          allOf:
          - $ref: "#/components/schemas/Paging"
      description: Container for banks with paging information
    PageableCategoryList:
      required:
      - categories
      - paging
      type: object
      properties:
        categories:
          type: array
          description: |-
            Categories<br/>
            <strong>Type:</strong> Category
          items:
            $ref: "#/components/schemas/Category"
        paging:
          type: object
          description: |-
            Information for pagination<br/>
            <strong>Type:</strong> Paging
          allOf:
          - $ref: "#/components/schemas/Paging"
      description: Container for categories with paging information
    PageableIbanRuleList:
      required:
      - ibanRules
      - paging
      type: object
      properties:
        ibanRules:
          type: array
          description: |-
            List of iban rules information<br/>
            <strong>Type:</strong> IbanRule
          items:
            $ref: "#/components/schemas/IbanRule"
        paging:
          type: object
          description: |-
            Information for pagination<br/>
            <strong>Type:</strong> Paging
          allOf:
          - $ref: "#/components/schemas/Paging"
      description: Container for IBAN rule information with paging information
    PageableKeywordRuleList:
      required:
      - keywordRules
      - paging
      type: object
      properties:
        keywordRules:
          type: array
          description: |-
            List of keyword rules<br/>
            <strong>Type:</strong> KeywordRule
          items:
            $ref: "#/components/schemas/KeywordRule"
        paging:
          type: object
          description: |-
            Information for pagination<br/>
            <strong>Type:</strong> Paging
          allOf:
          - $ref: "#/components/schemas/Paging"
      description: Container for keyword rule information with paging information
    PageableLabelList:
      required:
      - labels
      - paging
      type: object
      properties:
        labels:
          type: array
          description: |-
            Labels<br/>
            <strong>Type:</strong> Label
          items:
            $ref: "#/components/schemas/Label"
        paging:
          type: object
          description: |-
            Information for pagination<br/>
            <strong>Type:</strong> Paging
          allOf:
          - $ref: "#/components/schemas/Paging"
      description: Label resources with paging information
    PageablePaymentResources:
      required:
      - paging
      - payments
      type: object
      properties:
        payments:
          type: array
          description: |-
            List of received account payments<br/>
            <strong>Type:</strong> Payment
          items:
            $ref: "#/components/schemas/Payment"
        paging:
          type: object
          description: |-
            Information for pagination<br/>
            <strong>Type:</strong> Paging
          allOf:
          - $ref: "#/components/schemas/Paging"
      description: Payment resources with paging information
    PageablePendingTransactionResources:
      required:
      - paging
      - pendingTransactions
      type: object
      properties:
        pendingTransactions:
          type: array
          description: |-
            Array of pending transactions (for the requested page)<br/>
            <strong>Type:</strong> PendingTransaction
          items:
            $ref: "#/components/schemas/PendingTransaction"
        paging:
          type: object
          description: |-
            Information for pagination<br/>
            <strong>Type:</strong> Paging
          allOf:
          - $ref: "#/components/schemas/Paging"
      description: Container for a page of pending transactions
    PageableSecurityList:
      required:
      - paging
      - securities
      type: object
      properties:
        securities:
          type: array
          description: |-
            List of securities<br/>
            <strong>Type:</strong> Security
          items:
            $ref: "#/components/schemas/Security"
        paging:
          type: object
          description: |-
            Information for pagination<br/>
            <strong>Type:</strong> Paging
          allOf:
          - $ref: "#/components/schemas/Paging"
      description: Container for page of securities
    PageableStandingOrderResources:
      required:
      - paging
      - standingOrders
      type: object
      properties:
        standingOrders:
          type: array
          description: |-
            List of standing orders<br/>
            <strong>Type:</strong> StandingOrder
          items:
            $ref: "#/components/schemas/StandingOrder"
        paging:
          type: object
          description: |-
            Information for pagination<br/>
            <strong>Type:</strong> Paging
          allOf:
          - $ref: "#/components/schemas/Paging"
      description: Standing order resources with paging information
    PageableTppAuthenticationGroupResources:
      required:
      - paging
      - tppAuthenticationGroups
      type: object
      properties:
        tppAuthenticationGroups:
          type: array
          description: |-
            List of received TPP authentication groups<br/>
            <strong>Type:</strong> TppAuthenticationGroup
          items:
            $ref: "#/components/schemas/TppAuthenticationGroup"
        paging:
          type: object
          description: |-
            Information for pagination<br/>
            <strong>Type:</strong> Paging
          allOf:
          - $ref: "#/components/schemas/Paging"
      description: TPP Authentication groups with paging information
    PageableTppCertificateList:
      required:
      - paging
      - tppCertificates
      type: object
      properties:
        paging:
          type: object
          description: |-
            Information for pagination<br/>
            <strong>Type:</strong> Paging
          allOf:
          - $ref: "#/components/schemas/Paging"
        tppCertificates:
          type: array
          description: |-
            List of certificates<br/>
            <strong>Type:</strong> TppCertificate
          items:
            $ref: "#/components/schemas/TppCertificate"
      description: Container for bank certificate information with paging information
    PageableTppCredentialResources:
      required:
      - paging
      - tppCredentials
      type: object
      properties:
        paging:
          type: object
          description: |-
            Information for pagination<br/>
            <strong>Type:</strong> Paging
          allOf:
          - $ref: "#/components/schemas/Paging"
        tppCredentials:
          type: array
          description: |-
            List of TPP client credentials<br/>
            <strong>Type:</strong> TppCredentials
          items:
            $ref: "#/components/schemas/TppCredentials"
      description: Container for TPP client credentials information with paging information
    PageableTransactionList:
      required:
      - balance
      - income
      - paging
      - spending
      - transactions
      type: object
      properties:
        transactions:
          type: array
          description: |-
            Array of transactions (for the requested page)<br/>
            <strong>Type:</strong> Transaction
          items:
            $ref: "#/components/schemas/Transaction"
        paging:
          type: object
          description: |-
            Information for pagination<br/>
            <strong>Type:</strong> Paging
          allOf:
          - $ref: "#/components/schemas/Paging"
        income:
          type: number
          description: The total income of all transactions (across all pages)
        spending:
          type: number
          description: The total spending of all transactions (across all pages)
        balance:
          type: number
          description: The total sum of all transactions (across all pages)
      description: "Container for a page of transactions, with data about the total\
        \ count of transactions and their balance with paging information"
    PageableUserInfoList:
      required:
      - paging
      - users
      type: object
      properties:
        users:
          type: array
          description: |-
            List of users information<br/>
            <strong>Type:</strong> UserInfo
          items:
            $ref: "#/components/schemas/UserInfo"
        paging:
          type: object
          description: |-
            Information for pagination<br/>
            <strong>Type:</strong> Paging
          allOf:
          - $ref: "#/components/schemas/Paging"
      description: Container for users information with paging information
    Paging:
      required:
      - page
      - pageCount
      - perPage
      - totalCount
      type: object
      properties:
        page:
          minimum: 1
          type: integer
          description: Current page number
          format: int32
          example: 1
        perPage:
          minimum: 1
          type: integer
          description: Current page size (number of entries in this page)
          format: int32
          example: 20
        pageCount:
          minimum: 0
          type: integer
          description: Total number of pages
          format: int32
          example: 10
        totalCount:
          minimum: 0
          type: integer
          description: Total number of entries across all pages
          format: int64
          example: 200
      description: Container for pagination information
    PasswordChangingResource:
      required:
      - passwordChangeToken
      - userId
      type: object
      properties:
        userId:
          type: string
          description: User identifier
          example: username
        userEmail:
          type: string
          description: "User's email, encrypted. Decrypt with your data decryption\
            \ key. If the user has no email set, then this field will be null."
          example: email@localhost.de
        passwordChangeToken:
          type: string
          description: "Encrypted password change token. Decrypt this token with your\
            \ data decryption key, and pass the decrypted token to the /users/executePasswordChange\
            \ service to set a new password for the user."
          example: EnCRyPTEDPassWordCHAnGEToKen==
      description: Password changing details
    Payment:
      required:
      - amount
      - bankId
      - id
      - orderCount
      - status
      - type
      type: object
      properties:
        id:
          type: integer
          description: Payment identifier
          format: int64
          example: 1
        accountId:
          type: integer
          description: Identifier of the account to which this payment relates. This
            field is only set if it was specified upon creation of the payment.
          format: int64
          example: 1
        iban:
          type: string
          description: IBAN of the account to which this payment relates. This field
            is only set if it was specified upon creation of the payment.
          example: DE89370400440532013000
        bankId:
          type: integer
          description: Identifier of the bank to which this payment relates.
          format: int64
          example: 1
        type:
          description: |-
            Payment type<br/>
            <strong>Type:</strong> PaymentType
          example: MONEY_TRANSFER
          allOf:
          - $ref: "#/components/schemas/PaymentType"
        amount:
          type: number
          description: "Total money amount of the payment order(s), as absolute value"
          example: 99.99
        orderCount:
          type: integer
          description: Total count of orders included in this payment
          format: int32
          example: 1
        status:
          description: |-
            Current payment status:<br/> &bull; OPEN: means that this payment has been created in finAPI, but not yet submitted to the bank.<br/> &bull; PENDING: means that this payment has been requested at the bank,  but has not been confirmed yet.<br/> &bull; SUCCESSFUL: means that this payment has been successfully initiated.<br/> &bull; NOT_SUCCESSFUL: means that this payment could not be initiated successfully.<br/> &bull; DISCARDED: means that this payment was discarded, either because another payment was requested for the same account before this payment was initiated and the bank does not support this, or because the user has aborted the initiation (when using finAPI's Web Form).<br/>
            <strong>Type:</strong> OrderInitiationStatus
          example: OPEN
          allOf:
          - $ref: "#/components/schemas/OrderInitiationStatus"
        bankMessage:
          type: string
          description: "The bank's response to the most recent request for this payment.\
            \ Possible requests are: Initial submission of the payment, execution\
            \ request or subsequent status checks. Note that this field may not always\
            \ (or never) be set. Also, as long as the payment has not reached its\
            \ final status, this field can always change."
        requestDate:
          type: string
          description: "<strong>Format:</strong> 'YYYY-MM-DD'T'HH:MM:SS.SSSXXX' (RFC\
            \ 3339, section 5.6)<br/>Time of when finAPI submitted this payment to\
            \ the bank."
          format: date-time
          example: "2018-01-01T09:18:40.473+01:00"
        executionDate:
          type: string
          description: "<strong>Format:</strong> 'YYYY-MM-DD'T'HH:MM:SS.SSSXXX' (RFC\
            \ 3339, section 5.6)<br/>Time of when the execution of this payment has\
            \ completed.<br/><br/>Note:<br/>&bull; When the execution of a payment\
            \ has completed, it does not necessarily mean that the payment was successful.\
            \ Please refer to the payment 'status' for its final status.<br/>&bull;\
            \ The execution date may deviate from the date when the bank will actually\
            \ book the payment (for example if the 'instructedExecutionDate' is in\
            \ the future)."
          format: date-time
          example: "2018-01-01T09:18:40.473+01:00"
        instructedExecutionDate:
          type: string
          description: <strong>Format:</strong> 'YYYY-MM-DD'<br/>The date that was
            specified as 'executionDate' upon creation of the payment. This field
            may not be set if no 'executionDate' was specified upon payment creation.
          format: date
          example: "2019-01-01"
        instantPayment:
          type: boolean
          description: Whether the order was submitted to the bank as an instant SEPA
            order.
          example: false
      description: Container for a payment's data
    PaymentType:
      type: string
      enum:
      - MONEY_TRANSFER
      - DIRECT_DEBIT
    PaypalTransactionData:
      type: object
      properties:
        invoiceNumber:
          type: string
          description: Invoice Number.
          example: INV2-KXVU-7Z64-DT6W-MG2X
        fee:
          type: number
          description: Fee value.
          example: -0.99
        net:
          type: number
          description: Net value.
          example: 9.99
      description: "Additional, PayPal-specific transaction data. This field is only\
        \ set for transactions that belong to an account of the PayPal bank."
    PendingTransaction:
      required:
      - accountId
      - amount
      - id
      - importDate
      - valueDate
      type: object
      properties:
        id:
          type: integer
          description: Pending transaction identifier
          format: int64
          example: 1
        accountId:
          type: integer
          description: Account identifier
          format: int64
          example: 1
        importDate:
          type: string
          description: "<strong>Format:</strong> 'YYYY-MM-DD'T'HH:MM:SS.SSSXXX' (RFC\
            \ 3339, section 5.6)<br/>Date of transaction import."
          format: date-time
          example: "2018-01-01T09:18:40.473+01:00"
        valueDate:
          type: string
          description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Value date.<br/><br/><strong>NOTE:</strong>\
            \ In case the bank does not deliver any date information for the transaction,\
            \ finAPI will use the current date (i.e. date of import)."
          format: date
          example: "2018-01-01"
        bankBookingDate:
          type: string
          description: <strong>Format:</strong> 'YYYY-MM-DD'<br/>Bank booking date.
          format: date
          example: "2018-01-01"
        amount:
          type: number
          description: Transaction amount
          example: -99.99
        currency:
          description: |-
            Transaction currency in ISO 4217 format.This field can be null if not explicitly provided the bank. In this case it can be assumed as account’s currency.<br/>
            <strong>Type:</strong> Currency
          example: EUR
          allOf:
          - $ref: "#/components/schemas/Currency"
        purpose:
          type: string
          description: "Transaction purpose. Maximum length: 2000"
          example: Restaurantbesuch
        counterpartyName:
          type: string
          description: "Counterparty name. Maximum length: 80"
          example: Bar Centrale
        counterpartyIban:
          type: string
          description: Counterparty IBAN
          example: DE13700800000061110500
        counterpartyAccountNumber:
          type: string
          description: Counterparty account number
          example: "0061110500"
        counterpartyBlz:
          type: string
          description: Counterparty BLZ
          example: "70080000"
        counterpartyBic:
          type: string
          description: Counterparty BIC
          example: DRESDEFF700
        counterpartyBankName:
          type: string
          description: Counterparty Bank name
          example: Commerzbank vormals Dresdner Bank
        counterpartyMandateReference:
          type: string
          description: The mandate reference of the counterparty
          example: MR123
        counterpartyCustomerReference:
          type: string
          description: The customer reference of the counterparty
          example: CUR123
        counterpartyCreditorId:
          type: string
          description: The creditor ID of the counterparty. Exists only for SEPA direct
            debit transactions ("Lastschrift").
          example: CRI123
        counterpartyDebtorId:
          type: string
          description: The originator's identification code. Exists only for SEPA
            money transfer transactions ("Überweisung").
          example: CRI098
        endToEndId:
          type: string
          description: End-To-End ID
          example: "001100550526"
        type:
          type: string
          description: "Transaction type, according to the bank. If set, this will\
            \ contain a term in the language of the bank, that you can display to\
            \ the user. Some examples of common values are: \"Lastschrift\", \"Auslands&uuml;berweisung\"\
            , \"Geb&uuml;hren\", \"Zinsen\". The maximum possible length of this field\
            \ is 255 characters."
          example: Überweisungsauftrag
        typeCodeZka:
          type: string
          description: "ZKA business transaction code which relates to the transaction's\
            \ type. Possible values range from 1 through 999. If no information about\
            \ the ZKA type code is available, then this field will be null."
          example: "999"
        typeCodeSwift:
          type: string
          description: "SWIFT transaction type code. If no information about the SWIFT\
            \ code is available, then this field will be null."
          example: RAPRDE51
        sepaPurposeCode:
          type: string
          description: "SEPA purpose code, according to ISO 20022"
          example: OTHR
        bankTransactionCode:
          type: string
          description: "Bank transaction code, according to ISO 20022"
          example: PMNT-RCDT-SALA
        bankTransactionCodeDescription:
          maxLength: 256
          type: string
          description: "Bank transaction code description, according to ISO 20022.<br/>The\
            \ field is dynamic and can be initialized in different languages depending\
            \ on the `Accept-Language` header provided within the request. Currently,\
            \ only English and German are implemented, but this can get extended on\
            \ demand."
          example: SEPA Credit Transfer
        primanota:
          type: string
          description: Transaction primanota (bank side identification number)
          example: Primanota
        compensationAmount:
          type: number
          description: Compensation Amount. Sum of reimbursement of out-of-pocket
            expenses plus processing brokerage in case of a national return / refund
            debit as well as an optional interest equalisation. Exists predominantly
            for SEPA direct debit returns.
          example: -1.11
        originalAmount:
          type: number
          description: Original Amount of the original direct debit. Exists predominantly
            for SEPA direct debit returns.
          example: -9.99
        originalCurrency:
          description: |-
            Currency of the original amount in ISO 4217 format. This field can be null if not explicitly provided the bank. In this case it can be assumed as account’s currency.<br/>
            <strong>Type:</strong> Currency
          example: EUR
          allOf:
          - $ref: "#/components/schemas/Currency"
        feeAmount:
          type: number
          description: Amount of the transaction fee. Some banks charge a specific
            fee per transaction. Only returned by a few banks.
          example: 4.5
        feeCurrency:
          description: |-
            Currency of the transaction fee in ISO 4217 format.<br/>
            <strong>Type:</strong> Currency
          example: EUR
          allOf:
          - $ref: "#/components/schemas/Currency"
        differentDebtor:
          type: string
          description: Payer's/debtor's reference party (in the case of a credit transfer)
            or payee's/creditor's reference party (in the case of a direct debit)
          example: DIFD70204
        differentCreditor:
          type: string
          description: Payee's/creditor's reference party (in the case of a credit
            transfer) or payer's/debtor's reference party (in the case of a direct
            debit)
          example: DIFC98450
        paypalData:
          type: object
          description: |-
            Additional, PayPal-specific transaction data.<br/>
            <strong>Type:</strong> PaypalTransactionData
          allOf:
          - $ref: "#/components/schemas/PaypalTransactionData"
        certisData:
          type: object
          description: |-
            Fields as defined by <a href='https://www.cnb.cz/en/payments/certis/' target='_blank'>CERTIS</a>.<br/>
            <strong>Type:</strong> CertisTransactionData
          allOf:
          - $ref: "#/components/schemas/CertisTransactionData"
      description: Container for a pending transaction's data
    PreferredConsentType:
      type: string
      enum:
      - ONETIME
      - RECURRING
    Product:
      type: string
      enum:
      - ACCESS
      - DATA_INTELLIGENCE
      - WEB_FORM
      - GIRO_IDENT
      - SCHUFA_API
      - DI_LABELLING
      - CONTRACT_MANAGER
      - GIROCHECK
      - KREDITCHECK
      - KREDITCHECK_B2B
      - DEBITFLEX
      - TRANSPARENCY_REGISTER
    RemoveInterfaceParams:
      required:
      - bankConnectionId
      - bankingInterface
      type: object
      properties:
        bankConnectionId:
          type: integer
          description: Bank connection identifier
          format: int64
          example: 1
        bankingInterface:
          description: |-
            The interface which you want to remove.<br/>
            <strong>Type:</strong> BankingInterface
          example: FINTS_SERVER
          allOf:
          - $ref: "#/components/schemas/BankingInterface"
      description: Container for interface removal parameters
    RequestPasswordChangeParams:
      required:
      - userId
      type: object
      properties:
        userId:
          maxLength: 36
          minLength: 1
          pattern: "[a-zA-Z0-9\\-_\\.\\+@]*"
          type: string
          description: User identifier
          example: username
      description: Request password change parameters
    ResponseMessage:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: Service response message
      description: Response message from a service
    RevokeTokenParams:
      required:
      - token
      type: object
      properties:
        token:
          type: string
          description: The token that the client wants to get revoked
        token_type_hint:
          type: string
          description: A hint about the type of the token submitted for revocation
          enum:
          - access_token
          - refresh_token
    Security:
      required:
      - accountId
      - id
      type: object
      properties:
        id:
          type: integer
          description: "Identifier. Note: Whenever a security account is being updated,\
            \ its security positions will be internally re-created, meaning that the\
            \ identifier of a security position might change over time."
          format: int64
          example: 1
        accountId:
          type: integer
          description: Security account identifier
          format: int64
          example: 1
        name:
          type: string
          description: Name
          example: Wertapapierbezeichnung
        isin:
          type: string
          description: ISIN
          example: DE0008404005
        wkn:
          type: string
          description: WKN
          example: "840400"
        quote:
          type: number
          description: Quote
          example: 99.999999
        quoteCurrency:
          type: string
          description: Currency of quote
          example: EUR
        quoteType:
          description: |-
            Type of quote. 'PERC' if quote is a percentage value, 'ACTU' if quote is the actual amount<br/>
            <strong>Type:</strong> SecurityPositionQuoteType
          example: ACTU
          allOf:
          - $ref: "#/components/schemas/SecurityPositionQuoteType"
        quoteDate:
          type: string
          description: "<strong>Format:</strong> 'YYYY-MM-DD'T'HH:MM:SS.SSSXXX' (RFC\
            \ 3339, section 5.6)<br/>Quote date."
          format: date-time
          example: "2018-01-01T09:18:40.473+01:00"
        quantityNominal:
          type: number
          description: Value of quantity or nominal
          example: 99.999999
        quantityNominalType:
          description: |-
            Type of quantity or nominal value. 'UNIT' if value is a quantity, 'FAMT' if value is the nominal amount<br/>
            <strong>Type:</strong> SecurityPositionQuantityNominalType
          example: UNIT
          allOf:
          - $ref: "#/components/schemas/SecurityPositionQuantityNominalType"
        marketValue:
          type: number
          description: Market value
          example: 99.999999
        marketValueCurrency:
          type: string
          description: Currency of market value
          example: EUR
        entryQuote:
          type: number
          description: Entry quote
          example: 99.999999
        entryQuoteCurrency:
          type: string
          description: Currency of entry quote
          example: EUR
        profitOrLoss:
          type: number
          description: Current profit or loss
          example: 99.999999
      description: Container for a security position's data
    SecurityPositionQuantityNominalType:
      type: string
      enum:
      - UNIT
      - FAMT
    SecurityPositionQuoteType:
      type: string
      enum:
      - ACTU
      - PERC
    SepaMoneyTransferConstraints:
      type: object
      properties:
        mandatoryFields:
          $ref: "#/components/schemas/SepaMoneyTransferMandatoryFields"
        purposeOrEndToEndId:
          type: boolean
          description: "Indicates whether the bank exclusively supports either the\
            \ 'purpose' or the 'endToEndId' for SEPA money transfers, but not both\
            \ within the same request."
          example: true
        maxCollectiveOrders:
          type: integer
          description: The maximum number of orders that the bank allows for a SEPA
            collective money transfer.
          format: int32
          example: 15
        maxPurposeLength:
          type: integer
          description: The maximum allowed chars of purpose for a SEPA money transfer.
          format: int32
          example: 15
      description: Payment constraints that apply to SEPA money transfers.
    SepaMoneyTransferCounterpartAddressMandatoryFields:
      type: object
      properties:
        street:
          type: boolean
          description: Indicates whether the street must be provided for SEPA money
            transfers.
          example: true
        houseNumber:
          type: boolean
          description: Indicates whether the house number must be provided for SEPA
            money transfers.
          example: true
        postCode:
          type: boolean
          description: Indicates whether the post code must be provided for SEPA money
            transfers.
          example: true
        city:
          type: boolean
          description: Indicates whether the city must be provided for SEPA money
            transfers.
          example: true
        country:
          type: boolean
          description: Indicates whether the country must be provided for SEPA money
            transfers.
          example: true
      description: Lists the counterparty (recipient) address fields required by the
        bank for SEPA money transfers.
    SepaMoneyTransferMandatoryFields:
      type: object
      properties:
        purpose:
          type: boolean
          description: Indicates whether the purpose must be provided for SEPA money
            transfers.
          example: true
        counterpartName:
          type: boolean
          description: Indicates whether the counterpart name must be provided for
            SEPA money transfers.
          example: true
        counterpartBic:
          type: boolean
          description: Indicates whether the counterpart BIC must be provided for
            SEPA money transfers.
          example: true
        counterpartBankName:
          type: boolean
          description: Indicates whether the counterpart bank name must be provided
            for SEPA money transfers.
          example: true
        endToEndId:
          type: boolean
          description: Indicates whether the endToEndId must be provided for SEPA
            money transfers.
          example: true
        counterpartAddress:
          $ref: "#/components/schemas/SepaMoneyTransferCounterpartAddressMandatoryFields"
      description: Set of mandatory fields for SEPA money transfers via this interface.
        Note that fields that are always required (independent of the bank/interface)
        are not defined here.
    SplitTransactionsParams:
      required:
      - subTransactions
      type: object
      properties:
        subTransactions:
          type: array
          description: |-
            List of sub-transactions<br/>
            <strong>Type:</strong> SubTransactionParams
          items:
            $ref: "#/components/schemas/SubTransactionParams"
      description: Set of logical sub-transactions that a transaction should get split
        into
    StandingOrder:
      required:
      - amount
      - bankId
      - currency
      - frequency
      - id
      - startDate
      - status
      type: object
      properties:
        id:
          type: integer
          description: Standing order identifier
          format: int64
          example: 1
        accountId:
          type: integer
          description: Identifier of the account to which this standing order relates.
            This field is only set if it was specified upon creation of the standing
            order.
          format: int64
          example: 1
        iban:
          type: string
          description: IBAN of the account to which this standing order relates. This
            field is only set if it was specified upon creation of the standing order.
        bankId:
          type: integer
          description: Identifier of the bank to which this standing order relates.
          format: int64
          example: 1
        amount:
          type: number
          description: "Amount of the standing order, as absolute value."
          example: 99.99
        currency:
          description: |-
            The currency code of the 'amount', in the ISO 4217 Alpha 3 format.<br/>
            <strong>Type:</strong> Currency
          example: EUR
          allOf:
          - $ref: "#/components/schemas/Currency"
        startDate:
          type: string
          description: <strong>Format:</strong> 'YYYY-MM-DD'<br/>Start date of the
            standing order.
          format: date
          example: "2023-01-01"
        endDate:
          type: string
          description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>Termination date\
            \ of the standing order. If this field is not set, then the standing order\
            \ has no termination date."
          format: date
          example: "2023-01-01"
        frequency:
          description: |-
            The frequency of the standing order.<br/>
            <strong>Type:</strong> StandingOrderFrequency
          example: MONTHLY
          allOf:
          - $ref: "#/components/schemas/StandingOrderFrequency"
        requestDate:
          type: string
          description: "<strong>Format:</strong> 'YYYY-MM-DD'T'HH:MM:SS.SSSXXX' (RFC\
            \ 3339, section 5.6)<br/>Time of when finAPI submitted this standing order\
            \ to the bank."
          format: date-time
          example: "2018-01-01T09:18:40.473+01:00"
        requestCompletionDate:
          type: string
          description: |-
            <strong>Format:</strong> 'YYYY-MM-DD'T'HH:MM:SS.SSSXXX' (RFC 3339, section 5.6)<br/>Time of when the submission of this standing order was finalized.
            Note: When the submission of a standing order is finalized, it does not necessarily mean that the bank accepted the standing order. Please refer to the standing order’s 'status' for its final status.
          format: date-time
          example: "2018-01-01T09:18:40.473+01:00"
        status:
          description: |-
            Current standing order status:<br/> &bull; OPEN: means that this standing order has been created in finAPI, but not yet submitted to the bank.<br/> &bull; PENDING: means that this standing order has been submitted to the bank,  but has not been confirmed yet.<br/> &bull; SUCCESSFUL: means that this standing order has been successfully initiated.<br/> &bull; NOT_SUCCESSFUL: means that this standing order could not be initiated successfully.<br/> &bull; DISCARDED: means that this standing order was discarded, either because another standing order was requested for the same account before this standing order was initiated and the bank does not support this, or because the user has aborted the initiation (when using finAPI's Web Form).<br/>
            <strong>Type:</strong> OrderInitiationStatus
          example: OPEN
          allOf:
          - $ref: "#/components/schemas/OrderInitiationStatus"
        bankMessage:
          type: string
          description: "The bank's response to the most recent request for this standing\
            \ order. Note that this field may not always (or never) be set. Also,\
            \ as long as the standing order has not reached its final status, this\
            \ field can always change."
      description: Container for a standing order's data
    StandingOrderFrequency:
      type: string
      enum:
      - MONTHLY
      - EVERY_TWO_MONTHS
      - QUARTERLY
      - SEMI_ANNUAL
      - ANNUAL
    SubTransactionParams:
      required:
      - amount
      type: object
      properties:
        amount:
          type: number
          description: Amount
          example: -99.99
        categoryId:
          type: integer
          description: "Category identifier. If not specified, the original transaction's\
            \ category will be applied. If you explicitly want the sub-transaction\
            \ to have no category, then pass this field with value '0' (zero)."
          format: int64
          example: 378
        purpose:
          maxLength: 2000
          minLength: 1
          pattern: "[A-Za-z0-9¡-ʯ &\\(\\)\\{\\}\\[\\]\\.:,;\\?!\\+\\-_\\$@#~`\\^€\
            ]*"
          type: string
          description: "Purpose. If not specified, the original transaction's value\
            \ will be applied."
          example: Restaurantbesuch
        counterpart:
          maxLength: 80
          minLength: 1
          pattern: "[A-Za-z0-9¡-ʯ &\\(\\)\\{\\}\\[\\]\\.:,;\\?!\\+\\-_\\$@#~`\\^€\
            ]*"
          type: string
          description: "Counterpart. If not specified, the original transaction's\
            \ value will be applied."
          example: TueV Bayern
        counterpartAccountNumber:
          maxLength: 34
          minLength: 1
          pattern: "[A-Za-z0-9¡-ʯ &\\(\\)\\{\\}\\[\\]\\.:,;\\?!\\+\\-_\\$@#~`\\^€\
            ]*"
          type: string
          description: "Counterpart account number. If not specified, the original\
            \ transaction's value will be applied."
          example: "61110500"
        counterpartIban:
          type: string
          description: "Counterpart IBAN. If not specified, the original transaction's\
            \ value will be applied."
          example: DE13700800000061110500
        counterpartBic:
          type: string
          description: "Counterpart BIC. If not specified, the original transaction's\
            \ value will be applied."
          example: DRESDEFF700
        counterpartBlz:
          type: string
          description: "Counterpart BLZ. If not specified, the original transaction's\
            \ value will be applied."
          example: "70080000"
        labelIds:
          type: array
          description: "List of connected labels. Note that when this field is not\
            \ specified, then the labels of the original transaction will NOT get\
            \ applied to the sub-transaction. Instead, the sub-transaction will have\
            \ no labels assigned to it."
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
            format: int64
      description: Data of a sub-transaction
    SubmitPaymentParams:
      required:
      - bankingInterface
      - paymentId
      type: object
      properties:
        paymentId:
          type: integer
          description: Payment identifier
          format: int64
          example: 1
        bankingInterface:
          description: |-
            Banking interface. Possible values:<br><br>&bull; <code>FINTS_SERVER</code> - means that finAPI will execute the payment via the bank's FinTS interface.<br>&bull; <code>WEB_SCRAPER</code> - means that finAPI will parse data from the bank's online banking website.<br>&bull; <code>XS2A</code> - means that finAPI will execute the payment via the bank's XS2A interface.Please note that XS2A doesn't support direct debits yet. <br/>To determine what interface(s) you can choose to submit a payment, please refer to the field AccountInterface.capabilities of the account that is related to the payment, or if this is a standalone payment without a related account imported in finAPI, refer to the field BankInterface.isMoneyTransferSupported.<br/>For standalone money transfers (finAPI Payment product) in particular, we suggest to always use XS2A if supported, and only use FINTS_SERVER or WEB_SCRAPER as a fallback, because non-XS2A interfaces might require not just a single, but multiple authentications when submitting the payment.<br/><br/>
            <strong>Type:</strong> BankingInterface
          example: FINTS_SERVER
          allOf:
          - $ref: "#/components/schemas/BankingInterface"
        loginCredentials:
          type: array
          description: |-
            Login credentials. May not be required when the credentials are stored in finAPI, or when the bank interface has no login credentials.<br/>
            <strong>Type:</strong> LoginCredential
          items:
            $ref: "#/components/schemas/LoginCredential"
        redirectUrl:
          maxLength: 2048
          minLength: 1
          type: string
          description: Must only be passed when the used interface has the property
            REDIRECT_APPROACH. The user will be redirected to the given URL from the
            bank's website after completing the bank login and (possibly) the SCA.
          example: https://some-domain.io/redirect
        multiStepAuthentication:
          type: object
          description: |-
            Container for multi-step authentication data. Required when a previous service call initiated a multi-step authentication.<br/>
            <strong>Type:</strong> MultiStepAuthenticationCallback
          allOf:
          - $ref: "#/components/schemas/MultiStepAuthenticationCallback"
      description: Payment submission parameters
    SubmitStandingOrderParams:
      required:
      - bankingInterface
      - standingOrderId
      type: object
      properties:
        standingOrderId:
          type: integer
          description: Standing order identifier
          format: int64
          example: 1
        bankingInterface:
          description: |-
            Banking interface. Possible values:<br><br>&bull; <code>FINTS_SERVER</code> - means that finAPI will execute the standing order via the bank's FinTS interface.<br>&bull; <code>WEB_SCRAPER</code> - means that finAPI will parse data from the bank's online banking website.<br>&bull; <code>XS2A</code> - means that finAPI will execute the standing order via the bank's XS2A interface.<br/>To determine what interface(s) you can choose to submit a standing order, please refer to the field paymentCapabilities.sepaStandingOrder in BankInterface.<br/>For standalone standing orders in particular, we suggest to always use XS2A if supported, and only use FINTS_SERVER or WEB_SCRAPER as a fallback, because non-XS2A interfaces might require not just a single, but multiple authentications when submitting the standing order.<br/><br/>
            <strong>Type:</strong> BankingInterface
          example: FINTS_SERVER
          allOf:
          - $ref: "#/components/schemas/BankingInterface"
        loginCredentials:
          type: array
          description: |-
            Login credentials. May not be required when the credentials are stored in finAPI, or when the bank interface has no login credentials.<br/>
            <strong>Type:</strong> LoginCredential
          items:
            $ref: "#/components/schemas/LoginCredential"
        redirectUrl:
          maxLength: 2048
          minLength: 1
          type: string
          description: Must only be passed when the used interface has the property
            REDIRECT_APPROACH. The user will be redirected to the given URL from the
            bank's website after completing the bank login and (possibly) the SCA.
          example: https://some-domain.io/redirect
        multiStepAuthentication:
          type: object
          description: |-
            Container for multi-step authentication data. Required when a previous service call initiated a multi-step authentication.<br/>
            <strong>Type:</strong> MultiStepAuthenticationCallback
          allOf:
          - $ref: "#/components/schemas/MultiStepAuthenticationCallback"
      description: Standing order submission parameters
    SwitchApiVersionParams:
      required:
      - apiVersion
      type: object
      properties:
        apiVersion:
          maxLength: 4
          minLength: 1
          type: string
          description: "The target API version to which you want to migrate your client.<br/><br/>Possible\
            \ values: <code>V1</code>,<code>V2</code>"
      description: Parameters for switching the API version
    TppAuthenticationGroup:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: TPP Authentication Group ID
          format: int64
          example: 1
        name:
          type: string
          description: TPP Authentication Group name
          example: AirBank XS2A CZ
      description: TPP authentication group represents certain bank group and contains
        a set of TPP credentials which can be used with bank interface connected to
        this group.
    TppCertificate:
      required:
      - certificateType
      - id
      - label
      - validFrom
      - validUntil
      type: object
      properties:
        id:
          type: integer
          description: A certificate identifier.
          format: int64
          example: 1
        certificateType:
          description: |-
            Type of certificate.<br/>
            <strong>Type:</strong> TppCertificateType
          example: QWAC
          allOf:
          - $ref: "#/components/schemas/TppCertificateType"
        label:
          type: string
          description: Label of certificate.
          example: Global QWAC till 2022
        validFrom:
          type: string
          description: <strong>Format:</strong> 'YYYY-MM-DD'<br/>Valid from date.
          format: date
          example: "2019-07-20"
        validUntil:
          type: string
          description: <strong>Format:</strong> 'YYYY-MM-DD'<br/>Valid until date.
          format: date
          example: "2019-07-20"
      description: A container for the bank certificate's data
    TppCertificateParams:
      required:
      - label
      - privateKey
      - publicKey
      - type
      type: object
      properties:
        type:
          description: |-
            The type of the submitted certificate<br/>
            <strong>Type:</strong> TppCertificateType
          allOf:
          - $ref: "#/components/schemas/TppCertificateType"
        publicKey:
          maxLength: 10000
          minLength: 1
          type: string
          description: A certificate (public key)
        privateKey:
          maxLength: 10000
          minLength: 1
          type: string
          description: "A private key in PKCS #8 or PKCS #1 format. PKCS #1/#8 private\
            \ keys are typically exchanged in the PEM base64-encoded format (https://support.quovadisglobal.com/kb/a37/what-is-pem-format.aspx)<br/><br/>NOTE:\
            \ The certificate should have one of the following headers:<br/>- '-----BEGIN\
            \ RSA PRIVATE KEY-----'<br/>- '-----BEGIN PRIVATE KEY-----'<br/>- '-----BEGIN\
            \ ENCRYPTED PRIVATE KEY-----'<br/>Any other header denotes that the private\
            \ key is neither in PKCS #8 nor in PKCS #1 formats!<br/><br/>Also, bear\
            \ in mind that if the private key is in PKCS #1 encrypted format, the\
            \ encryption information must be provided with explicitly separated lines\
            \ (the JSON must contain \"\\n\" at the end of each line), such as in\
            \ the example below:<br/>-----BEGIN RSA PRIVATE KEY-----<br/>Proc-Type:\
            \ 4,ENCRYPTED<br/>DEK-Info: AES-256-CBC,BFA11F426E7D634BC621C77A72B804DB<br/>...<br/>-----END\
            \ RSA PRIVATE KEY-----"
        passphrase:
          maxLength: 256
          minLength: 0
          type: string
          description: Optional passphrase for the private key
        caPublicKey:
          type: string
          description: A certificate (public key) of the certificate authority (CA)
            that signed the certificate. Required in certain cases to build the PKI
            path between Access and the bank's API when banks do not possess intermediate
            TLS certificates while placing the trust chain.
        label:
          maxLength: 256
          minLength: 1
          type: string
          description: A label for the certificate
        validFromDate:
          type: string
          description: <strong>Format:</strong> 'YYYY-MM-DD'<br/>Start day of the
            certificate's validity. Default is the passed certificate validFrom date
          format: date
          example: "2019-04-23"
        validUntilDate:
          type: string
          description: <strong>Format:</strong> 'YYYY-MM-DD'<br/>Expiration day of
            the certificate's validity. Default is the passed certificate validUntil
            date
          format: date
          example: "2022-04-23"
      description: A container for the new certificate data
    TppCertificateType:
      type: string
      enum:
      - QWAC
      - QSEALC
    TppCredentials:
      required:
      - id
      - label
      - tppAuthenticationGroupId
      - validFrom
      type: object
      properties:
        id:
          type: integer
          description: The credential identifier.
          format: int64
          example: 1
        label:
          type: string
          description: Label of tpp client credentials set.
          example: Credentials for imperial bank
        tppAuthenticationGroupId:
          type: integer
          description: TPP Authentication Group ID.
          format: int64
          example: 1
        validFrom:
          type: string
          description: <strong>Format:</strong> 'YYYY-MM-DD'<br/>Valid from date.
          format: date
          example: "2019-07-20"
        validUntil:
          type: string
          description: <strong>Format:</strong> 'YYYY-MM-DD'<br/>Valid until date.
          format: date
          example: "2019-07-20"
      description: A container for the TPP client credentials data
    TppCredentialsParams:
      required:
      - label
      - tppAuthenticationGroupId
      type: object
      properties:
        tppAuthenticationGroupId:
          type: integer
          description: The TPP Authentication Group Id for which the credentials can
            be used
          format: int64
          example: 1
        label:
          maxLength: 256
          minLength: 0
          type: string
          description: Label to credentials.
          example: Demo bank TPP credentials
        tppClientId:
          maxLength: 256
          minLength: 0
          type: string
          description: "ID of the TPP accessing the ASPSP API, as provided by the\
            \ ASPSP as the result of registration"
          example: a23312
        tppClientSecret:
          maxLength: 256
          minLength: 0
          type: string
          description: "Secret of the TPP accessing the ASPSP API, as provided by\
            \ the ASPSP as the result of registration"
          example: followTheWhiteRabbit
        tppApiKey:
          maxLength: 256
          minLength: 0
          type: string
          description: API Key provided by ASPSP as the result of registration
          example: dontFollowTheWhiteRabbit
        tppName:
          maxLength: 256
          minLength: 0
          type: string
          description: TPP name
          example: finAPI
        validFromDate:
          type: string
          description: <strong>Format:</strong> 'YYYY-MM-DD'<br/>Credentials "valid
            from" date. Default is today's date
          format: date
          example: "2019-04-23"
        validUntilDate:
          type: string
          description: <strong>Format:</strong> 'YYYY-MM-DD'<br/>Credentials "valid
            until" date. Default is null which means "indefinite" (no limit)
          format: date
          example: "2022-04-23"
      description: A container for new TPP client credentials data
    TrainCategorizationData:
      required:
      - categoryId
      - transactionData
      type: object
      properties:
        transactionData:
          type: array
          description: |-
            Set of transaction data (at most 100 transactions at once)<br/>
            <strong>Type:</strong> TrainCategorizationTransactionData
          items:
            $ref: "#/components/schemas/TrainCategorizationTransactionData"
        categoryId:
          type: integer
          description: Category identifier
          format: int64
          example: 378
      description: Sample data to train categorization
    TrainCategorizationTransactionData:
      required:
      - accountTypeId
      - amount
      type: object
      properties:
        accountTypeId:
          maximum: 7
          minimum: 1
          type: integer
          description: "Identifier of account type.<br/><br/>1 = Checking,<br/>2 =\
            \ Savings,<br/>3 = CreditCard,<br/>4 = Security,<br/>5 = Loan,<br/>7 =\
            \ Membership,<br/>8 = Bausparen<br/><br/>"
          format: int64
          example: 1
        amount:
          type: number
          description: Amount
          example: -99.99
        purpose:
          maxLength: 2000
          minLength: 1
          type: string
          description: "Purpose. Any symbols are allowed. Default value: null."
          example: Restaurantbesuch
        counterpart:
          maxLength: 80
          minLength: 1
          type: string
          description: "Counterpart. Any symbols are allowed. Default value: null."
          example: Bar Centrale
        counterpartIban:
          type: string
          description: "Counterpart IBAN. Default value: null."
          example: DE13700800000061110500
        counterpartAccountNumber:
          maxLength: 34
          minLength: 1
          type: string
          description: "Counterpart account number. Default value: null."
          example: "61110500"
        counterpartBlz:
          type: string
          description: "Counterpart BLZ. Default value: null."
          example: "70080000"
        counterpartBic:
          type: string
          description: "Counterpart BIC. Default value: null."
          example: DRESDEFF700
        mcCode:
          type: string
          description: "Merchant category code (for credit card transactions only).\
            \ Default value: null. NOTE: This field is currently not regarded."
          example: "5542"
      description: Transaction data for categorization training
    Transaction:
      required:
      - accountId
      - amount
      - bankBookingDate
      - finapiBookingDate
      - id
      - importDate
      - isAdjustingEntry
      - isNew
      - isPotentialDuplicate
      - labels
      - valueDate
      type: object
      properties:
        id:
          type: integer
          description: Transaction identifier
          format: int64
          example: 1
        parentId:
          type: integer
          description: Parent transaction identifier
          format: int64
          example: 2
        accountId:
          type: integer
          description: Account identifier
          format: int64
          example: 1
        valueDate:
          type: string
          description: <strong>Format:</strong> 'YYYY-MM-DD'<br/>Value date.
          format: date
          example: "2018-01-01"
        bankBookingDate:
          type: string
          description: <strong>Format:</strong> 'YYYY-MM-DD'<br/>Bank booking date.
          format: date
          example: "2018-01-01"
        finapiBookingDate:
          type: string
          description: "<strong>Format:</strong> 'YYYY-MM-DD'<br/>finAPI Booking date.\
            \ NOTE: In some cases, banks may deliver transactions that are booked\
            \ in future, but already included in the current account balance. To keep\
            \ the account balance consistent with the set of transactions, such \"\
            future transactions\" will be imported with their finapiBookingDate set\
            \ to the current date (i.e.: date of import). The finapiBookingDate will\
            \ automatically get adjusted towards the bankBookingDate each time the\
            \ associated bank account is updated. Example: A transaction is imported\
            \ on July, 3rd, with a bank reported booking date of July, 6th. The transaction\
            \ will be imported with its finapiBookingDate set to July, 3rd. Then,\
            \ on July 4th, the associated account is updated. During this update,\
            \ the transaction's finapiBookingDate will be automatically adjusted to\
            \ July 4th. This adjustment of the finapiBookingDate takes place on each\
            \ update until the bank account is updated on July 6th or later, in which\
            \ case the transaction's finapiBookingDate will be adjusted to its final\
            \ value, July 6th.<br/> The finapiBookingDate is the date that is used\
            \ by the finAPI PFM services. E.g. when you calculate the spendings of\
            \ an account for the current month, and have a transaction with finapiBookingDate\
            \ in the current month but bankBookingDate at the beginning of the next\
            \ month, then this transaction is included in the calculations (as the\
            \ bank has this transaction's amount included in the current account balance\
            \ as well)."
          format: date
          example: "2018-01-01"
        amount:
          type: number
          description: Transaction amount
          example: -99.99
        currency:
          description: |-
            Transaction currency in ISO 4217 format.This field can be null if not explicitly provided the bank. In this case it can be assumed as account’s currency.<br/>
            <strong>Type:</strong> Currency
          example: EUR
          allOf:
          - $ref: "#/components/schemas/Currency"
        purpose:
          type: string
          description: "Transaction purpose. Maximum length: 2000"
          example: Restaurantbesuch
        counterpartName:
          type: string
          description: "Counterpart name. Maximum length: 80"
          example: Bar Centrale
        counterpartAccountNumber:
          type: string
          description: Counterpart account number
          example: "0061110500"
        counterpartIban:
          type: string
          description: Counterpart IBAN
          example: DE13700800000061110500
        counterpartBlz:
          type: string
          description: Counterpart BLZ
          example: "70080000"
        counterpartBic:
          type: string
          description: Counterpart BIC
          example: DRESDEFF700
        counterpartBankName:
          type: string
          description: Counterpart Bank name
          example: Commerzbank vormals Dresdner Bank
        counterpartMandateReference:
          type: string
          description: The mandate reference of the counterpart
          example: MR123
        counterpartCustomerReference:
          type: string
          description: The customer reference of the counterpart
          example: CUR123
        counterpartCreditorId:
          type: string
          description: The creditor ID of the counterpart. Exists only for SEPA direct
            debit transactions ("Lastschrift").
          example: CRI123
        counterpartDebitorId:
          type: string
          description: The originator's identification code. Exists only for SEPA
            money transfer transactions ("Überweisung").
          example: CRI098
        type:
          type: string
          description: "Transaction type, according to the bank. If set, this will\
            \ contain a term in the language of the bank, that you can display to\
            \ the user. Some examples of common values are: \"Lastschrift\", \"Auslands&uuml;berweisung\"\
            , \"Geb&uuml;hren\", \"Zinsen\". The maximum possible length of this field\
            \ is 255 characters."
          example: Überweisungsauftrag
        typeCodeZka:
          type: string
          description: "ZKA business transaction code which relates to the transaction's\
            \ type. Possible values range from 1 through 999. If no information about\
            \ the ZKA type code is available, then this field will be null."
          example: "999"
        typeCodeSwift:
          type: string
          description: "SWIFT transaction type code. If no information about the SWIFT\
            \ code is available, then this field will be null."
          example: RAPRDE51
        sepaPurposeCode:
          type: string
          description: "SEPA purpose code, according to ISO 20022"
          example: OTHR
        bankTransactionCode:
          type: string
          description: "Bank transaction code, according to ISO 20022"
          example: PMNT-RCDT-SALA
        bankTransactionCodeDescription:
          maxLength: 256
          type: string
          description: "Bank transaction code description, according to ISO 20022.<br/>The\
            \ field is dynamic and can be initialized in different languages depending\
            \ on the `Accept-Language` header provided within the request. Currently,\
            \ only English and German are implemented, but this can get extended on\
            \ demand."
          example: SEPA Credit Transfer
        primanota:
          type: string
          description: Transaction primanota (bank side identification number)
          example: Primanota
        category:
          type: object
          description: |-
            Transaction category, if any is assigned. Note: Recently imported transactions that have currently no category assigned might still get categorized by the background categorization process. To check the status of the background categorization, see GET /bankConnections. Manual category assignments to a transaction will remove the transaction from the background categorization process (i.e. the background categorization process will never overwrite a manual category assignment).<br/>
            <strong>Type:</strong> Category
          allOf:
          - $ref: "#/components/schemas/Category"
        labels:
          type: array
          description: |-
            Array of assigned labels<br/>
            <strong>Type:</strong> Label
          items:
            $ref: "#/components/schemas/Label"
        isPotentialDuplicate:
          type: boolean
          description: "While finAPI uses a well-elaborated algorithm for uniquely\
            \ identifying transactions, there is still the possibility that during\
            \ an account update, a transaction that was imported previously may be\
            \ imported a second time as a new transaction. For example, this can happen\
            \ if some transaction data changes on the bank server side. However, finAPI\
            \ also includes an algorithm of identifying such \"potential duplicate\"\
            \ transactions. If this field is set to true, it means that finAPI detected\
            \ a similar transaction that might actually be the same. It is recommended\
            \ to communicate this information to the end user, and give him an option\
            \ to delete the transaction in case he confirms that it really is a duplicate."
          example: false
        isAdjustingEntry:
          type: boolean
          description: "Indicating whether this transaction is an adjusting entry\
            \ ('Zwischensaldo').<br/><br/>Adjusting entries do not originate from\
            \ the bank, but are added by finAPI during an account update when the\
            \ bank reported account balance does not add up to the set of transactions\
            \ that finAPI receives for the account. In this case, the adjusting entry\
            \ will fix the deviation between the balance and the received transactions\
            \ so that both adds up again.<br/><br/>Possible causes for such deviations\
            \ are:<br/>- Inconsistencies in how the bank calculates the balance, for\
            \ instance when not yet booked transactions are already included in the\
            \ balance, but not included in the set of transactions<br/>- Gaps in the\
            \ transaction history that finAPI receives, for instance because the account\
            \ has not been updated for a while and older transactions are no longer\
            \ available"
          example: false
        isNew:
          type: boolean
          description: "Indicating whether this transaction is 'new' or not. Any newly\
            \ imported transaction will have this flag initially set to true. How\
            \ you use this field is up to your interpretation. For example, you might\
            \ want to set it to false once a user has clicked on/seen the transaction.\
            \ You can change this flag to 'false' with the PATCH method."
          example: true
        importDate:
          type: string
          description: "<strong>Format:</strong> 'YYYY-MM-DD'T'HH:MM:SS.SSSXXX' (RFC\
            \ 3339, section 5.6)<br/>Date of transaction import."
          format: date-time
          example: "2018-01-01T09:18:40.473+01:00"
        children:
          type: array
          description: Sub-transactions identifiers (if this transaction is split)
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
            format: int64
        paypalData:
          type: object
          description: |-
            Additional, PayPal-specific transaction data.<br/>
            <strong>Type:</strong> PaypalTransactionData
          allOf:
          - $ref: "#/components/schemas/PaypalTransactionData"
        certisData:
          type: object
          description: |-
            Fields as defined by <a href='https://www.cnb.cz/en/payments/certis/' target='_blank'>CERTIS</a>.<br/>
            <strong>Type:</strong> CertisTransactionData
          allOf:
          - $ref: "#/components/schemas/CertisTransactionData"
        endToEndReference:
          type: string
          description: End-To-End reference
          example: "001100550526"
        compensationAmount:
          type: number
          description: Compensation Amount. Sum of reimbursement of out-of-pocket
            expenses plus processing brokerage in case of a national return / refund
            debit as well as an optional interest equalisation. Exists predominantly
            for SEPA direct debit returns.
          example: -1.11
        originalAmount:
          type: number
          description: Original Amount of the original direct debit. Exists predominantly
            for SEPA direct debit returns.
          example: -9.99
        originalCurrency:
          description: |-
            Currency of the original amount in ISO 4217 format. This field can be null if not explicitly provided the bank. In this case it can be assumed as account’s currency.<br/>
            <strong>Type:</strong> Currency
          example: EUR
          allOf:
          - $ref: "#/components/schemas/Currency"
        feeAmount:
          type: number
          description: Amount of the transaction fee. Some banks charge a specific
            fee per transaction. Only returned by a few banks.
          example: 4.5
        feeCurrency:
          description: |-
            Currency of the transaction fee in ISO 4217 format.<br/>
            <strong>Type:</strong> Currency
          example: EUR
          allOf:
          - $ref: "#/components/schemas/Currency"
        differentDebitor:
          type: string
          description: Payer's/debtor's reference party (in the case of a credit transfer)
            or payee's/creditor's reference party (in the case of a direct debit)
          example: DIFD70204
        differentCreditor:
          type: string
          description: Payee's/creditor's reference party (in the case of a credit
            transfer) or payer's/debtor's reference party (in the case of a direct
            debit)
          example: DIFC98450
      description: Container for a transaction's data
    TransactionDirection:
      type: string
      enum:
      - Income
      - Spending
    TriggerCategorizationParams:
      type: object
      properties:
        bankConnectionIds:
          type: array
          description: "List of identifiers of the bank connections that you want\
            \ to trigger categorization for. Leaving the list unset or empty will\
            \ trigger categorization for all of the user's bank connections. Please\
            \ note that if there are no bank connections, then the service will return\
            \ with HTTP code 422."
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
            format: int64
      description: Trigger categorization parameters
    TwoStepProcedure:
      required:
      - implicitExecute
      - procedureId
      - procedureName
      type: object
      properties:
        procedureId:
          type: string
          description: Bank-given ID of the procedure
          example: "955"
        procedureName:
          type: string
          description: Bank-given name of the procedure
          example: mobileTAN
        procedureChallengeType:
          type: string
          description: "The challenge type of the procedure. Possible values are:<br/><br/>&bull;\
            \ <code>TEXT</code> - the challenge will be a text that contains instructions\
            \ for the user on how to proceed with the authorization.<br/>&bull; <code>PHOTO</code>\
            \ - the challenge will contain a BASE-64 string depicting a photo (or\
            \ any kind of QR-code-like data) that must be shown to the user.<br/>&bull;\
            \ <code>FLICKER_CODE</code> - the challenge will contain a BASE-64 string\
            \ depicting a flicker code animation that must be shown to the user.<br/><br/>Note\
            \ that this challenge type information does not originate from the bank,\
            \ but is determined by finAPI internally. There is no guarantee that the\
            \ determined challenge type is correct. Note also that this field may\
            \ not be set, meaning that finAPI could not determine the challenge type\
            \ of the procedure."
          example: TEXT
        implicitExecute:
          type: boolean
          description: "If 'true', then there is no need for your client to pass back\
            \ anything to finAPI to continue the authorization when using this procedure.\
            \ The authorization will be dealt with directly between the user, finAPI,\
            \ and the bank."
          example: false
      description: Two-step-procedure for user authorization on bank-side
    UpdateBankConnectionParams:
      required:
      - bankConnectionId
      - bankingInterface
      type: object
      properties:
        bankConnectionId:
          type: integer
          description: Bank connection identifier
          format: int64
          example: 1
        bankingInterface:
          description: |-
            The interface to use for connecting with the bank.<br/>
            <strong>Type:</strong> BankingInterface
          example: XS2A
          allOf:
          - $ref: "#/components/schemas/BankingInterface"
        loginCredentials:
          type: array
          description: |-
            Set of login credentials. The labels that you pass must match with the login credential labels that the respective interface defines. finAPI will combine the given credentials with any credentials that it has stored. You can leave this field unset in case finAPI has stored all required credentials.<br/>
            <strong>Type:</strong> LoginCredential
          items:
            $ref: "#/components/schemas/LoginCredential"
        storeSecrets:
          type: boolean
          description: "Whether to store the secret login fields. If the secret fields\
            \ are stored, then updates can be triggered without the involvement of\
            \ the users, as long as the credentials remain valid and the bank consent\
            \ has not expired. Note that bank consent will be stored regardless of\
            \ the field value. Default value is false."
          example: true
          default: false
        importNewAccounts:
          type: boolean
          description: "Whether to import accounts that weren’t imported previously.\
            \ Default is false.<br/><br/>NOTES: <br/>&bull; For best performance,\
            \ you should not enable this flag unless you really expect new accounts\
            \ to be available in the connection. It is recommended to let your users\
            \ tell you through your application when they want the service to look\
            \ for new accounts.<br/>&bull; If you have imported an interface using\
            \ a limited set of 'accountTypes', you would import all other accounts\
            \ when setting this flag to true. To avoid importing account types that\
            \ you are not interested in, make sure to keep this flag unset (or set\
            \ to false).<br/>&bull; If there is an existing consent and it doesn’\
            t support the import of new accounts (see 'BankConnectionInterface.aisConsent.supportsImportNewAccounts'),\
            \ then an update attempt with 'importNewAccounts=true' will return an\
            \ error."
          example: false
          default: false
        skipBalancesDownload:
          type: boolean
          description: "Whether to skip the download of balances or not. May only\
            \ be set to true if 'skipPositionsDownload' is also true. If set to true,\
            \ then finAPI will download just the account list with the accounts' information\
            \ (like account name, number, holder, etc). Default is false.<br/><br/>NOTES:<br/>&bull;\
            \ Setting this flag to true is only meant to be used if A) you generally\
            \ never download balances and positions, because you are only interested\
            \ in the account list, or B) you want to get just the list of accounts\
            \ in the first step, and then delete unwanted accounts from the bank connection,\
            \ before you trigger another update that downloads balances and transactions.\
            \ This approach allows you to download balances only for the accounts\
            \ that you want.<br/>&bull; If you skip the download of balances during\
            \ an import or update, you can still download them with a later update.<br/>&bull;\
            \ If an account was stored with a balance already, and you skip the download\
            \ of its balance in a subsequent update, then the account's balance will\
            \ get outdated. Be also aware that certain services (like GET /accounts/dailyBalances)\
            \ may return incorrect results in such cases.<br/>&bull; If any bank connection\
            \ gets updated via finAPI's automatic batch update, then all balances\
            \ (of already imported accounts) <u>will</u> get downloaded in any case!"
          example: false
          default: false
        skipPositionsDownload:
          type: boolean
          description: "Whether to skip the download of transactions and securities\
            \ or not. If set to true, then finAPI will download just the account list\
            \ with the accounts' information (like account name, number, holder, etc),\
            \ as well as the accounts' balances (if possible), but skip the download\
            \ of transactions and securities. Default is false.<br/>You may also use\
            \ this flag in combination with 'skipBalancesDownload' = true, to additionally\
            \ skip the download of balances.<br/><br/>NOTES:<br/>&bull; Setting this\
            \ flag to true is only meant to be used if A) you generally never download\
            \ positions, because you are only interested in the account list and/or\
            \ balances, or B) you want to get just the list of accounts in the first\
            \ step, and then delete unwanted accounts from the bank connection, before\
            \ you trigger another update that downloads transactions. This approach\
            \ allows you to download transactions only for the accounts that you want.<br/>&bull;\
            \ If you skip the download of transactions and securities during an import\
            \ or update, you can still download them with a later update (though you\
            \ might not get all positions at a later point, because the date range\
            \ in which the bank servers provide this data is usually limited).<br/>&bull;\
            \ If an account already had any positions imported before an update, and\
            \ you skip the positions download in the update, then the account's updated\
            \ balance might not add up to the set of transactions / security positions.\
            \ Be aware that certain services (like GET /accounts/dailyBalances) may\
            \ return incorrect results for accounts in such a state.<br/>&bull; If\
            \ any bank connection gets updated via finAPI's automatic batch update,\
            \ then all transactions and security positions (of already imported accounts)\
            \ <u>will</u> get downloaded in any case!<br/>&bull; For security accounts,\
            \ skipping the downloading of the securities might result in the account's\
            \ balance also not being downloaded.<br/>&bull; For the WEB_SCRAPER interface,\
            \ it's technically required to download transactions for Bausparen accounts\
            \ even if 'skipPositionsDownload' is set to true, but they are not actively\
            \ processed by finAPI."
          example: false
          default: false
        loadOwnerData:
          type: boolean
          description: Whether to load/refresh information about the bank connection
            owner(s) - see field 'owners'. Default value is 'false'. Note that owner
            data is NOT loaded/refreshed during finAPI's automatic bank connection
            update.
          example: false
          default: false
        accountTypes:
          type: array
          description: |-
            If your client does NOT have any account type restrictions (see <code>ClientConfiguration.accountTypeRestrictions</code>), then this field is only regarded when the field <code>importNewAccounts</code> is set to true, and affects only new accounts that are not yet imported. If the field is specified, then a new account will be imported only when its determined type is one of the given types. If you leave this field unset, then all new accounts will be imported, regardless of their type.<br/><br/><b>NOTE</b>: If your client is restricted to certain account types (see <code>ClientConfiguration.accountTypeRestrictions</code>), then you may only specify account types that are enabled for you, otherwise the service will return with an error. If your client has account type restrictions and you do not specify any types, then the service will implicitly limit the types according to your client's configuration.<br/>Also note that when you have account type restrictions, this field is always regarded independent of the <code>importNewAccounts</code> field, and the restrictions are always applied to ALL accounts (both new accounts and existing accounts).<br/>
            <strong>Type:</strong> AccountType
          example:
          - Checking
          - Savings
          - CreditCard
          - Security
          - Loan
          - Membership
          - Bausparen
          items:
            allOf:
            - $ref: "#/components/schemas/AccountType"
        accountReferences:
          type: array
          description: |-
            List of accounts for which access is requested from the bank. It may only be passed if the bank interface has the DETAILED_CONSENT property set. if omitted, finAPI will use the list of existing accounts. Note that the parameter is still required if you want to import new accounts (i.e. call with importNewAccounts=true).<br/>
            <strong>Type:</strong> AccountReference
          items:
            $ref: "#/components/schemas/AccountReference"
        redirectUrl:
          maxLength: 2048
          minLength: 1
          type: string
          description: Must only be passed when the used interface has the property
            REDIRECT_APPROACH. The user will be redirected to the given URL from the
            bank's website after completing the bank login and (possibly) the SCA.
          example: https://some-domain.io/redirect
        multiStepAuthentication:
          type: object
          description: |-
            Container for multi-step authentication data. Required when a previous service call initiated a multi-step authentication.<br/>
            <strong>Type:</strong> MultiStepAuthenticationCallback
          allOf:
          - $ref: "#/components/schemas/MultiStepAuthenticationCallback"
      description: Container for bank connection update parameters
    UpdateMultipleTransactionsParams:
      type: object
      properties:
        isNew:
          type: boolean
          description: "Whether this transactions should be flagged as 'new' or not.\
            \ Any newly imported transaction will have this flag initially set to\
            \ true. How you use this field is up to your interpretation. For example,\
            \ you might want to set it to false once a user has clicked on/seen the\
            \ transaction."
          example: false
        isPotentialDuplicate:
          type: boolean
          description: "You can set this field only to 'false'. finAPI marks transactions\
            \ as a potential duplicates  when its internal duplicate detection algorithm\
            \ is signaling so. Transactions that are flagged as duplicates can be\
            \ deleted by the user. To prevent the user from deleting original transactions,\
            \ which might lead to incorrect balances, it is not possible to manually\
            \ set this flag to 'true'."
          example: false
        categoryId:
          type: integer
          description: "Identifier of the new category to apply to the transaction.\
            \ When updating the transaction's category, the category's fields 'id',\
            \ 'name', 'parentId', 'parentName', and 'isCustom' will all get updated.\
            \ To clear the category for the transaction, the categoryId field must\
            \ be passed with value 0."
          format: int64
          example: 378
        trainCategorization:
          type: boolean
          description: "This field is only regarded when the field 'categoryId' is\
            \ set. It controls whether finAPI's categorization system should learn\
            \ from the given categorization(s). If set to 'true', then the user's\
            \ categorization rules will be updated so that similar transactions will\
            \ get categorized accordingly in future. If set to 'false', then the service\
            \ will simply change the category of the given transaction(s), without\
            \ updating the user's categorization rules. The field defaults to 'true'\
            \ if not specified."
          example: true
          default: true
        labelIds:
          type: array
          description: "Identifiers of labels to apply to the transaction. To clear\
            \ transactions' labels, pass an empty array of identifiers: '[]'"
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
            format: int64
        ids:
          type: array
          description: "A comma-separated list of transaction identifiers. If specified,\
            \ then only transactions whose identifier match any of the given identifiers\
            \ will be regarded. The maximum number of identifiers is 100."
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
            format: int64
        accountIds:
          type: array
          description: "A comma-separated list of account identifiers. If specified,\
            \ then only transactions whose account's identifier is included in this\
            \ list will be regarded."
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
            format: int64
      description: Update specific transactions parameters
    UpdateResult:
      required:
      - result
      - timestamp
      type: object
      properties:
        result:
          description: |-
            Note that 'OK' just means that finAPI could successfully connect and log in to the bank server. However, it does not necessarily mean that all accounts could be updated successfully. For the latter, please refer to the 'status' field of the Account resource.<br/>
            <strong>Type:</strong> UpdateResultStatus
          example: INTERNAL_SERVER_ERROR
          allOf:
          - $ref: "#/components/schemas/UpdateResultStatus"
        errorMessage:
          type: string
          description: "In case the update result is not <code>OK</code>, this field\
            \ may contain an error message with details about why the update failed\
            \ (it is not guaranteed that a message is available though). In case the\
            \ update result is <code>OK</code>, the field will always be null."
          example: Internal server error
        errorType:
          description: |-
            In case the update result is not <code>OK</code>, this field contains the type of the error that occurred. BUSINESS means that the bank server responded with a non-technical error message for the user. TECHNICAL means that some internal error has occurred in finAPI or at the bank server.<br/>
            <strong>Type:</strong> ErrorType
          example: TECHNICAL
          allOf:
          - $ref: "#/components/schemas/ErrorType"
        timestamp:
          type: string
          description: "<strong>Format:</strong> 'YYYY-MM-DD'T'HH:MM:SS.SSSXXX' (RFC\
            \ 3339, section 5.6)<br/>Time of the update."
          format: date-time
          example: "2018-01-01T09:18:40.473+01:00"
      description: Container for a status of bank connection update
    UpdateResultStatus:
      type: string
      enum:
      - OK
      - BANK_SERVER_REJECTION
      - INTERNAL_SERVER_ERROR
    UpdateTransactionsParams:
      type: object
      properties:
        isNew:
          type: boolean
          description: "Whether this transactions should be flagged as 'new' or not.\
            \ Any newly imported transaction will have this flag initially set to\
            \ true. How you use this field is up to your interpretation. For example,\
            \ you might want to set it to false once a user has clicked on/seen the\
            \ transaction."
          example: false
        isPotentialDuplicate:
          type: boolean
          description: "You can set this field only to 'false'. finAPI marks transactions\
            \ as a potential duplicates  when its internal duplicate detection algorithm\
            \ is signaling so. Transactions that are flagged as duplicates can be\
            \ deleted by the user. To prevent the user from deleting original transactions,\
            \ which might lead to incorrect balances, it is not possible to manually\
            \ set this flag to 'true'."
          example: false
        categoryId:
          type: integer
          description: "Identifier of the new category to apply to the transaction.\
            \ When updating the transaction's category, the category's fields 'id',\
            \ 'name', 'parentId', 'parentName', and 'isCustom' will all get updated.\
            \ To clear the category for the transaction, the categoryId field must\
            \ be passed with value 0."
          format: int64
          example: 378
        trainCategorization:
          type: boolean
          description: "This field is only regarded when the field 'categoryId' is\
            \ set. It controls whether finAPI's categorization system should learn\
            \ from the given categorization(s). If set to 'true', then the user's\
            \ categorization rules will be updated so that similar transactions will\
            \ get categorized accordingly in future. If set to 'false', then the service\
            \ will simply change the category of the given transaction(s), without\
            \ updating the user's categorization rules. The field defaults to 'true'\
            \ if not specified."
          example: true
          default: true
        labelIds:
          type: array
          description: "Identifiers of labels to apply to the transaction. To clear\
            \ transactions' labels, pass an empty array of identifiers: '[]'"
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
            format: int64
      description: Update transactions parameters
    User:
      required:
      - id
      - isAutoUpdateEnabled
      - password
      type: object
      properties:
        id:
          type: string
          description: User identifier
          example: username
        password:
          type: string
          description: User's password. Please note that some services may return
            a distorted password (always 'XXXXX'). See the documentation of individual
            services to find out whether the password is returned as plain text or
            as 'XXXXX'.
          example: password
        email:
          type: string
          description: User's email address
          example: email@localhost.de
        phone:
          type: string
          description: User's phone number
          example: +49 99 999999-999
        isAutoUpdateEnabled:
          type: boolean
          description: "Whether the user's bank connections will get updated in the\
            \ course of finAPI's automatic batch update. Note that the automatic batch\
            \ update will only update bank connections where all of the following\
            \ applies:<br><br> - a valid consent exists OR the PIN is stored in finAPI\
            \ for the bank connection, and the related bank does not have volatile\
            \ PINs (see the 'isVolatile' flag of the 'loginCredentials')<br/> - the\
            \ user has accepted the latest Terms and Conditions (this only applies\
            \ to users whose mandator doesn't have an AIS license)<br> - the bank\
            \ connection interface flag 'userActionRequired' has to be false<br> -\
            \ the previous update using the stored credentials did not fail due to\
            \ the credentials being incorrect (or there was no previous update with\
            \ the stored credentials)<br> - the bank that the bank connection relates\
            \ to is included in the automatic batch update (please contact your Sys-Admin\
            \ for details about the batch update configuration)<br>- at least one\
            \ of the bank's supported data sources can be used by finAPI for your\
            \ client (i.e.: if a bank supports only web scraping, but web scraping\
            \ is disabled for your client, then bank connections of that bank will\
            \ not get updated by the automatic batch update)<br><br>Also note that\
            \ the automatic batch update must generally be enabled for your client\
            \ for this field to have any effect.<br/><br/>WARNING: The automatic update\
            \ will always download balances, transactions and security positions for\
            \ any account that it updates, even if the account was previously imported\
            \ or updated with 'skipBalancesDownload’ = true and/or ‘skipPositionsDownload'\
            \ = true."
          example: true
      description: Container for a user's data
    UserCreateParams:
      type: object
      properties:
        id:
          maxLength: 36
          minLength: 1
          pattern: "[a-zA-Z0-9\\-_\\.\\+@]*"
          type: string
          description: "User's identifier. Only the following symbols are allowed:\
            \ 0-9, A-Z, a-z, -, _, ., +, @. If not specified, then a unique random\
            \ value will be generated."
          example: username
        password:
          maxLength: 128
          minLength: 6
          type: string
          description: "User's password. If not specified, then a unique random value\
            \ will be generated."
          example: password
        email:
          maxLength: 320
          minLength: 1
          pattern: "[A-Za-z0-9¡-ʯ &\\(\\)\\{\\}\\[\\]\\.:,;\\?!\\+\\-_\\$@#~`\\^€\
            ]*"
          type: string
          description: User's email address.
          example: email@localhost.de
        phone:
          maxLength: 50
          minLength: 1
          pattern: "[A-Za-z0-9¡-ʯ &\\(\\)\\{\\}\\[\\]\\.:,;\\?!\\+\\-_\\$@#~`\\^€\
            ]*"
          type: string
          description: User's phone number.
          example: +49 99 999999-999
        isAutoUpdateEnabled:
          type: boolean
          description: "Whether the user's bank connections will get updated in the\
            \ course of finAPI's automatic batch update. Note that the automatic batch\
            \ update will only update bank connections where all of the following\
            \ applies:<br><br> - a valid consent exists OR the PIN is stored in finAPI\
            \ for the bank connection, and the related bank does not have volatile\
            \ PINs (see the 'isVolatile' flag of the 'loginCredentials')<br/> - the\
            \ user has accepted the latest Terms and Conditions (this only applies\
            \ to users whose mandator doesn't have an AIS license)<br> - the bank\
            \ connection interface flag 'userActionRequired' has to be false<br> -\
            \ the previous update using the stored credentials did not fail due to\
            \ the credentials being incorrect (or there was no previous update with\
            \ the stored credentials)<br> - the bank that the bank connection relates\
            \ to is included in the automatic batch update (please contact your Sys-Admin\
            \ for details about the batch update configuration)<br>- at least one\
            \ of the bank's supported data sources can be used by finAPI for your\
            \ client (i.e.: if a bank supports only web scraping, but web scraping\
            \ is disabled for your client, then bank connections of that bank will\
            \ not get updated by the automatic batch update)<br><br>Also note that\
            \ the automatic batch update must generally be enabled for your client\
            \ for this field to have any effect.<br/><br/>WARNING: The automatic update\
            \ will always download balances, transactions and security positions for\
            \ any account that it updates, even if the account was previously imported\
            \ or updated with 'skipBalancesDownload’ = true and/or ‘skipPositionsDownload'\
            \ = true.<br/><br/>Default value is false."
          example: true
          default: false
      description: User details
    UserIdentifiersList:
      required:
      - deletedUsers
      - nonDeletedUsers
      type: object
      properties:
        deletedUsers:
          uniqueItems: true
          type: array
          description: List of identifiers of deleted users (in ascending order)
          example:
          - first_user
          - second_user
          items:
            type: string
        nonDeletedUsers:
          uniqueItems: true
          type: array
          description: List of identifiers of not deleted users (in ascending order)
          example:
          - third_user
          - fourth_user
          items:
            type: string
      description: "Container for list of identifiers of deleted users, and not deleted\
        \ users (in ascending order)"
    UserIdentifiersParams:
      required:
      - userIds
      type: object
      properties:
        userIds:
          type: array
          description: List of user identifiers
          example:
          - first_user
          - second_user
          - third_user
          - fourth_user
          items:
            type: string
      description: User identifiers params
    UserInfo:
      required:
      - bankConnectionCount
      - isLocked
      - registrationDate
      - userId
      type: object
      properties:
        userId:
          type: string
          description: User's identifier.
          example: "1"
        registrationDate:
          type: string
          description: <strong>Format:</strong> 'YYYY-MM-DD'<br/>User's registration
            date.
          format: date
          example: "2018-01-01"
        deletionDate:
          type: string
          description: <strong>Format:</strong> 'YYYY-MM-DD'<br/>User's deletion date.
            May be null if the user has not been deleted.
          format: date
          example: "2018-01-31"
        lastActiveDate:
          type: string
          description: <strong>Format:</strong> 'YYYY-MM-DD'<br/>User's last active
            date. May be null if the user has not yet logged in.
          format: date
          example: "2018-01-31"
        bankConnectionCount:
          type: integer
          description: Number of bank connections that currently exist for this user.
          format: int32
          example: 5
        latestBankConnectionImportDate:
          type: string
          description: <strong>Format:</strong> 'YYYY-MM-DD'<br/>Latest date of when
            a bank connection was imported for this user. This field is null when
            there has never been a bank connection import.
          format: date
          example: "2018-01-01"
        latestBankConnectionDeletionDate:
          type: string
          description: <strong>Format:</strong> 'YYYY-MM-DD'<br/>Latest date of when
            a bank connection was deleted for this user. This field is null when there
            has never been a bank connection deletion.
          format: date
          example: "2018-01-31"
        monthlyStats:
          type: array
          description: |-
            Additional information about the user's data or activities, broken down in months. The list will by default contain an entry for each month starting with the month of when the user was registered, up to the current month. The date range may vary when you have limited it in the request. <br/><br/>Please note:<br/>&bull; this field is only set when 'includeMonthlyStats' = true, otherwise it will be null.<br/>&bull; the list is always ordered from the latest month first, to the oldest month last.<br/>&bull; the list will never contain an entry for a month that was prior to the month of when the user was registered, or after the month of when the user was deleted, even when you have explicitly set a respective date range. This means that the list may be empty if you are requesting a date range where the user didn't exist yet, or didn't exist any longer.<br/>
            <strong>Type:</strong> MonthlyUserStats
          items:
            $ref: "#/components/schemas/MonthlyUserStats"
        isLocked:
          type: boolean
          description: "Whether the user is currently locked (for further information,\
            \ see the 'maxUserLoginAttempts' setting in your client's configuration).\
            \ Note that deleted users will always have this field set to 'false'."
          example: false
      description: Container for user information
    UserUpdateParams:
      type: object
      properties:
        email:
          maxLength: 320
          minLength: 0
          pattern: "[A-Za-z0-9¡-ʯ &\\(\\)\\{\\}\\[\\]\\.:,;\\?!\\+\\-_\\$@#~`\\^€\
            ]*"
          type: string
          description: User's new email address. Pass an empty string ("") if you
            want to clear the current email address.
          example: email@localhost.de
        phone:
          maxLength: 50
          minLength: 0
          pattern: "[A-Za-z0-9¡-ʯ &\\(\\)\\{\\}\\[\\]\\.:,;\\?!\\+\\-_\\$@#~`\\^€\
            ]*"
          type: string
          description: User's new phone number. Pass an empty string ("") if you want
            to clear the current phone number.
          example: +49 99 999999-999
        isAutoUpdateEnabled:
          type: boolean
          description: "Whether the user's bank connections will get updated in the\
            \ course of finAPI's automatic batch update. Note that the automatic batch\
            \ update will only update bank connections where all of the following\
            \ applies:<br><br> - a valid consent exists OR the PIN is stored in finAPI\
            \ for the bank connection, and the related bank does not have volatile\
            \ PINs (see the 'isVolatile' flag of the 'loginCredentials')<br/> - the\
            \ user has accepted the latest Terms and Conditions (this only applies\
            \ to users whose mandator doesn't have an AIS license)<br> - the bank\
            \ connection interface flag 'userActionRequired' has to be false<br> -\
            \ the previous update using the stored credentials did not fail due to\
            \ the credentials being incorrect (or there was no previous update with\
            \ the stored credentials)<br> - the bank that the bank connection relates\
            \ to is included in the automatic batch update (please contact your Sys-Admin\
            \ for details about the batch update configuration)<br>- at least one\
            \ of the bank's supported data sources can be used by finAPI for your\
            \ client (i.e.: if a bank supports only web scraping, but web scraping\
            \ is disabled for your client, then bank connections of that bank will\
            \ not get updated by the automatic batch update)<br><br>Also note that\
            \ the automatic batch update must generally be enabled for your client\
            \ for this field to have any effect.<br/><br/>WARNING: The automatic update\
            \ will always download balances, transactions and security positions for\
            \ any account that it updates, even if the account was previously imported\
            \ or updated with 'skipBalancesDownload’ = true and/or ‘skipPositionsDownload'\
            \ = true.<br/><br/>Default value is false."
          example: true
      description: User details
    VerificationStatusResource:
      required:
      - isUserVerified
      - userId
      type: object
      properties:
        userId:
          type: string
          description: User's identifier
          example: username
        isUserVerified:
          type: boolean
          description: User's verification status
          example: true
      description: User's verification status
  parameters:
    PSU-IP-Address:
      name: PSU-IP-Address
      in: header
      description: "The IP address of the user's device. This header will be forwarded\
        \ to the bank on XS2A requests. It has to be an IPv4 address, as some banks\
        \ cannot work with IPv6 addresses. If a non-IPv4 address is passed, we will\
        \ replace the value with our own IPv4 address as a fallback."
      schema:
        type: string
        format: ipv4
    PSU-Device-OS:
      name: PSU-Device-OS
      in: header
      description: The user's device and/or operating system identification. This
        header will be forwarded to the bank on XS2A requests.
      schema:
        type: string
    PSU-User-Agent:
      name: PSU-User-Agent
      in: header
      description: The user's web browser or other client device identification. This
        header will be forwarded to the bank on XS2A requests.
      schema:
        type: string
    X-Request-Id:
      name: X-Request-Id
      in: header
      description: "With any API call, you can pass a request ID. The request ID can\
        \ be an arbitrary string with up to 255 characters. Passing a longer string\
        \ will result in an error. If you don't pass a request ID for a call, finAPI\
        \ will generate a random ID internally. The request ID is always returned\
        \ back in the response of a service, as a header with name 'X-Request-Id'.\
        \ We highly recommend to always pass a (preferably unique) request ID, and\
        \ include it into your client application logs whenever you make a request\
        \ or receive a response (especially in the case of an error response). finAPI\
        \ is also logging request IDs on its end. Having a request ID can help the\
        \ finAPI support team to work more efficiently and solve tickets faster."
      schema:
        type: string
    X-HTTP-Method-Override:
      name: X-HTTP-Method-Override
      in: header
      description: "Some HTTP clients do not support the HTTP methods PATCH or DELETE.\
        \ If you are using such a client in your application, you can use a POST request\
        \ instead with this header indicating the originally intended HTTP method.\
        \ POST Requests having this  header set will be treated either as PATCH or\
        \ DELETE by the finAPI servers."
      schema:
        type: string
        enum:
        - PATCH
        - DELETE
  examples:
    http400ResponseExample:
      value:
        errors:
        - message: Bad request
          code: BAD_REQUEST
          type: TECHNICAL
        date: "2018-01-01T09:18:40.473+01:00"
        requestId: selfgen-ddf0b8c9-fab5-4bc8-a8f8-51cc7e118ab3
        endpoint: https://finapi.io
        authContext: 1/2
        bank: "00000000"
    http401ResponseExample:
      value:
        error: invalid_token
        errorDescription: Not authenticated or invalid access_token
    http403ResponseExample:
      value:
        errors:
        - message: Access Denied
          code: UNAUTHORIZED_ACCESS
          type: TECHNICAL
        date: "2018-01-01T09:18:40.473+01:00"
        requestId: selfgen-ddf0b8c9-fab5-4bc8-a8f8-51cc7e118ab3
        endpoint: https://finapi.io
        authContext: 1/2
        bank: "00000000"
    http404ResponseExample:
      value:
        errors:
        - message: Resource not found
          code: UNKNOWN_ENTITY
          type: TECHNICAL
        date: "2018-01-01T09:18:40.473+01:00"
        requestId: selfgen-ddf0b8c9-fab5-4bc8-a8f8-51cc7e118ab3
        endpoint: https://finapi.io
        authContext: 1/2
        bank: "00000000"
    http422ResponseExample:
      value:
        errors:
        - message: Illegal field value given
          code: ILLEGAL_FIELD_VALUE
          type: TECHNICAL
        date: "2018-01-01T09:18:40.473+01:00"
        requestId: selfgen-ddf0b8c9-fab5-4bc8-a8f8-51cc7e118ab3
        endpoint: https://finapi.io
        authContext: 1/2
        bank: "00000000"
    http423ResponseExample:
      value:
        errors:
        - message: The requested resource is locked
          code: LOCKED
          type: TECHNICAL
        date: "2018-01-01T09:18:40.473+01:00"
        requestId: selfgen-ddf0b8c9-fab5-4bc8-a8f8-51cc7e118ab3
        endpoint: https://finapi.io
        authContext: 1/2
        bank: "00000000"
    http500ResponseExample:
      value:
        errors:
        - message: An unexpected error occurred
          code: UNEXPECTED_ERROR
          type: TECHNICAL
        date: "2018-01-01T09:18:40.473+01:00"
        requestId: selfgen-ddf0b8c9-fab5-4bc8-a8f8-51cc7e118ab3
        endpoint: https://finapi.io
        authContext: 1/2
        bank: "00000000"
    http501ResponseExample:
      value:
        errors:
        - message: The bank is currently not supported by finAPI.
          code: UNSUPPORTED_BANK
          type: TECHNICAL
        date: "2018-01-01T09:18:40.473+01:00"
        requestId: selfgen-ddf0b8c9-fab5-4bc8-a8f8-51cc7e118ab3
        endpoint: https://finapi.io
        authContext: 1/2
        bank: "00000000"
    http510ResponseExample:
      value:
        errors:
        - message: A two-step-procedure must be selected.
          code: ADDITIONAL_AUTHENTICATION_REQUIRED
          type: BUSINESS
          multiStepAuthentication:
            hash: 678b13f4be9ed7d981a840af8131223a
            status: TWO_STEP_PROCEDURE_REQUIRED
            challengeMessage: Please use the TAN you received by SMS.
            answerFieldLabel: TAN
            redirectUrl: https://some-domain.io/user-login
            redirectContext: "12345"
            redirectContextField: state
            twoStepProcedures:
            - procedureId: "955"
              procedureName: mobileTAN
              procedureChallengeType: TEXT
              implicitExecute: false
            photoTanMimeType: image/svg+xml
            photoTanData: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI/Pgo8IURPQ1RZUEUgc3ZnIFBVQkxJQyAiLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9HcmFwaGljcy9TVkcvMS4xL0RURC9zdmcxMS5kdGQiPgo8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHZlcnNpb249IjEuMSIgdmlld0JveD0iMCAwIDIxMi43NTUgMjEyLjc1NSIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMjEyLjc1NSAyMTIuNzU1IiB3aWR0aD0iMTZweCIgaGVpZ2h0PSIxNnB4Ij4KICA8Zz4KICAgIDxwYXRoIGQ9Ik0xMDYuMzc3LDBDNDcuNzIxLDAsMCw0Ny43MjEsMCwxMDYuMzc3czQ3LjcyMSwxMDYuMzc3LDEwNi4zNzcsMTA2LjM3N3MxMDYuMzc3LTQ3LjcyMSwxMDYuMzc3LTEwNi4zNzcgICBTMTY1LjAzNCwwLDEwNi4zNzcsMHogTTEwNi4zNzcsMTk4Ljc1NUM1NS40NCwxOTguNzU1LDE0LDE1Ny4zMTQsMTQsMTA2LjM3N1M1NS40NCwxNCwxMDYuMzc3LDE0czkyLjM3Nyw0MS40NCw5Mi4zNzcsOTIuMzc3ICAgUzE1Ny4zMTQsMTk4Ljc1NSwxMDYuMzc3LDE5OC43NTV6IiBmaWxsPSIjMDAwMDAwIi8+CiAgICA8cGF0aCBkPSJtMTEzLjM3NywxMDAuMDk2di0zOS43NDRjMy45NjEsMS40NzEgNy40MTcsNC4xNyA5LjgyLDcuODIgMi4xMjcsMy4yMjkgNi40NjgsNC4xMjMgOS42OTYsMS45OTcgMy4yMjktMi4xMjYgNC4xMjMtNi40NjcgMS45OTYtOS42OTYtNS4wMjktNy42MzYtMTIuNzc4LTEyLjgyLTIxLjUxMi0xNC42NDd2LTExLjEyYzAtMy44NjYtMy4xMzQtNy03LTdzLTcsMy4xMzQtNyw3djExLjA5OWMtMTUuNDkzLDMuMjMtMjcuMTY4LDE2Ljk4OS0yNy4xNjgsMzMuNDI2IDAsMTYuNDM3IDExLjY3NiwzMC4xOTggMjcuMTY4LDMzLjQyOHYzOS43NDRjLTMuOTYxLTEuNDcxLTcuNDE3LTQuMTctOS44Mi03LjgyLTIuMTI3LTMuMjI5LTYuNDY4LTQuMTI0LTkuNjk2LTEuOTk3LTMuMjI5LDIuMTI2LTQuMTIzLDYuNDY3LTEuOTk2LDkuNjk2IDUuMDI5LDcuNjM2IDEyLjc3OCwxMi44MiAyMS41MTIsMTQuNjQ3djExLjExOWMwLDMuODY2IDMuMTM0LDcgNyw3czctMy4xMzQgNy03di0xMS4wOThjMTUuNDkzLTMuMjMgMjcuMTY4LTE2Ljk4OSAyNy4xNjgtMzMuNDI2LTIuODQyMTdlLTE0LTE2LjQzNy0xMS42NzUtMzAuMTk4LTI3LjE2OC0zMy40Mjh6bS0yNy4xNjgtMjAuODY1YzAtOC42NTMgNS40OTQtMTYuMDI3IDEzLjE2OC0xOC44NzR2MzcuNzQ4Yy03LjY3NC0yLjg0Ny0xMy4xNjgtMTAuMjIxLTEzLjE2OC0xOC44NzR6bTI3LjE2OCw3My4xNjZ2LTM3Ljc0OGM3LjY3NCwyLjg0NyAxMy4xNjgsMTAuMjIxIDEzLjE2OCwxOC44NzRzLTUuNDkzLDE2LjAyNy0xMy4xNjgsMTguODc0eiIgZmlsbD0iIzAwMDAwMCIvPgogIDwvZz4KPC9zdmc+Cg==
            opticalData: 11048813833205002812775114302C30315D
            opticalDataAsReinerSct: false
        date: "2018-01-01T09:18:40.473+01:00"
        requestId: selfgen-ddf0b8c9-fab5-4bc8-a8f8-51cc7e118ab3
        endpoint: https://finapi.io
        authContext: 1/2
        bank: "00000000"
  headers:
    X-Request-Id:
      description: "The request ID that you passed to the request, or a finAPI-generated\
        \ ID in case you didn't pass a request ID."
      schema:
        type: string
  securitySchemes:
    finapi_auth:
      type: oauth2
      flows:
        password:
          tokenUrl: /api/v2/oauth/token
          scopes:
            all: no limitations
        clientCredentials:
          tokenUrl: /api/v2/oauth/token
          scopes:
            all: no limitations
