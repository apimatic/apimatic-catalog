---
openapi: 3.0.1
info:
  title: finAPI SCHUFA REST API
  version: "2024.31.1"
  description: |-
    Welcome to finAPI SCHUFA REST API!

    The following pages give you some general information on how to use the API.
    The actual API services documentation then follows further below.
    You can use the menu to jump between API sections.

    This page has a built-in HTTP(S) client, so you can test the services directly from within this page, by filling in the request parameters and/or body in the respective services, and then hitting the TRY button.
    Note that you need to be authorized to make a successful API call.
    To authorize, refer to the 'Authorization' section of the API, or just use the OAUTH button that can be found near the TRY button.

    You should also check out the Developer Portal for more information. If you need any help with the API, contact support@finapi.io
    
    In general, authorized API endpoints require authorization with an OAuth user-token with the necessary (product-specific- or administrative-) scopes as defined in this document. 
    **Authorization with OAuth client-tokens is not possible**. For retrieval of the required __authorization token__ to use this service, refer to the 
    [DI Solutions Public Documentation](https://documentation.finapi.io/dippd/getting-started-authorization)'s authorization-related chapter to elaborate the approach suitable for your product,
    and to understand the required scopes.
  
    This service relaxes the strict constraints of the SCHUFA SWS SOAP APIs for input parameter strings by implementing a mapping for special characters, moreover non-allowed characters are filtered.
    Nevertheless, for best user experience, additional validation is required upfront to a call to the API.
    Please refer SCHUFA's documentation.  

    > Note: 
    > 
    > finAPI provides and supports the REST API connectivity (technical support), whereas the product support is provided directly by SCHUFA.
    > Identity check, account check and credit check additionally require SCHUFA credentials to access the SCHUFA web services, please contact support@finapi.io for further details.

    <sub>Application-Version: 1.104.0</sub>
  contact:
    name: finAPI GmbH
    url: https://www.finapi.io/impressum/
    email: kontakt@finapi.io
  x-logo:
    url: https://docs.finapi.io/css/images/finapi-logo-new.png
servers:
  - url: 'https://schufa-ws-finapi-general-sandbox.finapi.io/api/v1'
  - url: 'https://schufa-ws-finapi-general-live.finapi.io/api/v1'
tags:
  - name: Identity Check
  - name: Bank Account
  - name: Name Similarity
  - name: Credit Rating
paths:
  "/schufa/identitycheck":
    post:
      tags:
        - Identity Check
      security:
        - ApiOAuth2: [ SCHUFA_API, DATA_INTELLIGENCE, FINAPI_INTERNAL ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityCheckRequest'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdentityCheckResult"
        '400':
          description: Input parameter is invalid.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorMessage"
        '401':
          description: Request rejected by SCHUFA API
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorMessageUnauthorized"
        '403':
          description: Request rejected by SCHUFA API
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorMessage"
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorMessage"
      operationId: identityCheck
      summary: SCHUFA identity check service
      description: Checks the provided consumer identity by verifying personal data and address information; it integrates with the SCHUFA web service "SCHUFA Identity Check".

  "/schufa/accountcheck":
    post:
      tags:
        - Bank Account
      security:
        - ApiOAuth2: [ SCHUFA_API, DATA_INTELLIGENCE, FINAPI_INTERNAL ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCheckRequest'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountCheckResult"
        '400':
          description: Input parameter is invalid.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorMessage"
        '401':
          description: Request rejected by SCHUFA API
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorMessageUnauthorized"
        '403':
          description: Request rejected by SCHUFA API
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorMessage"
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorMessage"
      operationId: accountCheck
      summary: SCHUFA account check plus IBAN service
      description: Validates the consumers address and bank account details; it integrates with the SCHUFA web service "SCHUFA Account Check plus IBAN".

  "/schufa/namesimilarity":
    post:
      tags:
        - Name Similarity
      security:
        - ApiOAuth2: [ SCHUFA_API, DATA_INTELLIGENCE, FINAPI_INTERNAL ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameSimilarityCheckRequest'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameSimilarityCheckResult"
        '400':
          description: Input parameter is invalid.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorMessage"
        '401':
          description: Request rejected by SCHUFA API
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorMessageUnauthorized"
        '403':
          description: Request rejected by SCHUFA API
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorMessage"
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorMessage"
      operationId: nameSimilarityCheck
      summary: Namesimilarity Check
      description: Calculates name similarity e.g. between consumer provided data and bank account information, using an algorithm proviced by SCHUFA. This endpoint does not require credentials for the SCHUFA web sevices.

  "/schufa/creditrating":
    post:
      tags:
        - Credit Rating
      security:
        - ApiOAuth2: [ SCHUFA_API, DATA_INTELLIGENCE, FINAPI_INTERNAL ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditRatingRequest'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreditRatingResult"
        '400':
          description: Input parameter is invalid.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorMessage"
        '401':
          description: Forbidden access.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorMessageUnauthorized"
        '403':
          description: Forbidden access to Schufa API.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorMessage"
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorMessage"
      operationId: creditRating
      summary: Credit Rating Check (Bonitätsauskunft)
      description: |-
        Executes a credit rating check against SCHUFA.
        The answer contains information about the customer's credits and contracts; it integrates with the SCHUFA web service "SCHUFA Credit Check".
        
        The query via this service is a JSON/REST abstraction of the SCHUFA interface and can only be executed with corresponding SCHUFA credentials.
  
        To enable better processing, the service offers additional ID's, which are assigned for each feature.
        These ID's can then reappear in the <code>parentId</code> field.
        In such a case this entry is associated to another one.
        This assignment is important in order to be able to arrange the correlations of the main entries and their sub-entries into a progression. 
        
        There are several variants or flavours of the SCHUFA Credit Rating Check (Bonitätsauskunft), for example "A-Auskunft", "B-Auskunft", "Freiberufler-Score".
        The SCHUFA product supports will enable the required variant for a given set of SCHUFA Credentials. 
        
        The request's <code>featureCode</code> parameter defines, which types of contracts/records ("characteristics") will be returned by the Credit Check. Please refer to the
        documentation provided by the SCHUFA product support. The result then contains further characteristics, again please refer to the SCHUFA 
        documentation for details.

components:
  securitySchemes:
    ApiOAuth2:
      type: oauth2
      flows:
        password:
          tokenUrl: https://localhost/api/v1/auth/token
          scopes:
            SCHUFA_API: Grants access to the SCHUFA API. The finAPI-Access mandator (configuration) has to have the SCHUFA_API product enabled.
            FINAPI_INTERNAL: internal calls from other finAPI services will be granted.
            DATA_INTELLIGENCE: Grants access to an endpoint. The finAPI-Access mandator (configuration) has to be DataIntelligence-enabled.

  schemas:
    SchufaCredentials:
      description: >-
        Schufa client credentials for the Service request.

        These credentials can be provided through the API or can be encrypted and deposited with the FinAPI
        report service for a client.

        It is mandatory that one of these requirements is met.SCHUFA client credentials for the Service request.
      type: object
      required:
        - schufaUserId
        - schufaPassword
      properties:
        schufaUserId:
          type: string
          description: Client app specific id for caller SCHUFA's contract (Teilnehmerkennung).
          example: 123/12345
        schufaPassword:
          type: string
          description: Password for caller SCHUFA's contract  (Teilnehmerkennwort).
          example: XYXYXY12
      title: SCHUFA credentials

    Address:
      description: Consumers's current address
      type: object
      required:
        - city
        - street
        - zipCode
      properties:
        street:
          type: string
          maxLength: 46
          minLength: 2
          description: Street and house number.
          example: Musterstraße 7
        zipCode:
          type: string
          maxLength: 10
          minLength: 2
          description: ZIP code. Must be a known valid ZIP code for the given country.
          example: 12345
        city:
          type: string
          maxLength: 44
          minLength: 2
          description: City.
          example: Beispielstadt
        country:
          type: string
          description: Country as provided by the consumer, must follow the ISO_3166-1_alpha-3 standard
          enum: [ DEU,AUT,CHE,TUR,AFG,ALB,DZA,ASM,VIR,AND,AGO,AIA,ATA,ATG,ARG,ARM,ABW,AZE,AUS,BHS,BHR,BGD,BRB,BLR,BEL,BLZ,BEN,
                  BMU,BTN,BOL,BES,BIH,BWA,BVT,BRA,VGB,IOT,BRN,BGR,BFA,BDI,CHL,CHN,COK,CRI,CUW,CIV,DMA,DOM,DJI,DNK,ECU,SLV,ERI,
                  EST,FLK,FJI,FIN,FRA,GUF,PYF,ATF,FRO,GAB,GMB,GEO,GHA,GIB,GRD,GRC,GRL,GLP,GUM,GTM,GGY,GIN,GNB,GUY,HTI,HMD,HND,
                  HKG,IND,IDN,IMN,IRQ,IRN,IRL,ISL,ISR,ITA,JAM,JPN,YEM,JEY,JOR,CYM,KHM,CMR,CAN,CPV,KAZ,QAT,KEN,KGZ,KIR,CCK,COL,
                  COM,COD,PRK,KOR,HRV,CUB,KWT,LAO,LSO,LVA,LBN,LBR,LBY,LIE,LTU,LUX,MAC,MDG,MWI,MYS,MDV,MLI,MLT,MAR,MHL,MTQ,MRT,
                  MUS,MYT,MKD,MEX,FSM,MDA,MCO,MNG,MNE,MSR,MOZ,MMR,NAM,NRU,NPL,NCL,NZL,NIC,NLD,NER,NGA,NIU,NFK,NOR,MNP,OMN,TLS,
                  PAK,PLW,PAN,PNG,PRY,PER,PHL,PCN,POL,PRT,PRI,TWN,COG,RWA,ROU,RUS,REU,BLM,MAF,SPM,SLB,ZMB,WSM,SMR,SAU,SWE,SEN,
                  SRB,SYC,SLE,ZWE,SGP,SXM,SVK,SVN,SOM,ESP,LKA,SHN,KNA,LCA,VCT,PSE,SDN,SUR,SJM,SWZ,SYR,STP,ZAF,SGS,SSD,TJK,TZA,
                  THA,TGO,TKL,TON,TTO,TCD,CZE,TUN,TKM,TCA,TUV,UGA,UKR,HUN,UMI,URY,UZB,VUT,VAT,VEN,ARE,USA,GBR,VNM,CXR,ESH,CAF,
                  CYP,EGY,GNQ,ETH,ALA ]
          default: DEU
          example: DEU
      title: Address

    Consumer:
      description: SCHUFA consumer, on behalf of this person the service will be called.
      type: object
      required:
        - gender
        - firstName
        - lastName
        - currentAddress
      properties:
        schufaId:
          type: string
          maxLength: 10
          description: Internal Schufa identifier of a user (only required for 'Basiskontoauskunft').
          example: 123
        title:
          type: string
          maxLength: 30
          description: Consumer's title.
          example: Dr.
        gender:
          type: string
          description: >-
            Consumer's gender. It can contain the following enums:
            <ul>
              <li>F - Female</li>
              <li>M - Male</li>
              <li>U - Unknown</li>
            </ul>
          enum: [F, M, U]
          example: M
        firstName:
          type: string
          maxLength: 44
          minLength: 2
          pattern: '^\D+'
          description: Consumers's first name.
          example: Fritz
        lastName:
          type: string
          maxLength: 46
          minLength: 2
          pattern: '.*[a-zA-Z].*'
          description: Consumers's last name
          example: Lang
        dateOfBirth:
          type: string
          example: "2000-01-01"
          description:  >-
            Consumer's date of birth in the format YYYY-MM-DD. Optional parameter on the API, but mandatory depending on the used
            SCHUFA service respectively service variant. 
            <br>
            The consumers age typically has to be between 7 and 101 years. Depending on the service, there might be less strict constraints.
            <br>
            Please refer to the SCHUFA service documentations.
          minLength: 10
          maxLength: 10
          pattern: '\d{4}\-(0?[1-9]|1[012])\-(0?[1-9]|[12][0-9]|3[01])$'
        placeOfBirth:
          type: string
          maxLength: 24
          minLength: 2
          description: Consumers place of birth
          example: Berlin
        currentAddress:
          "$ref": "#/components/schemas/Address"
        previousAddress:
          "$ref": "#/components/schemas/Address"
      title: SCHUFA Consumer

    ConsumerResult:
      description: SCHUFA consumer, on behalf of this person the service will be called.
      type: object
      required:
        - gender
        - firstName
        - lastName
        - currentAddress
      properties:
        schufaId:
          type: string
          description: Internal Schufa identifier of a user (only required for 'Basiskontoauskunft').
          example: 123
        title:
          type: string
          description: Consumer's title.
          example: Dr.
        gender:
          type: string
          description: >-
            Consumer's gender. It can contain the following enums:
            <ul>
              <li>F - Female</li>
              <li>M - Male</li>
              <li>U - Unknown</li>
            </ul>
          enum: [F, M, U]
          example: M
        firstName:
          type: string
          description: Consumers's first name.
          example: Fritz
        lastName:
          type: string
          description: Consumers's last name
          example: Lang
        dateOfBirth:
          type: string
          example: "2000-01-01"
          description:  >-
            Consumer's date of birth in the format YYYY-MM-DD. Optional parameter on the API, but mandatory depending on the used
            SCHUFA service respectively service variant. 
            <br>
            The consumers age typically has to be between 7 and 101 years. Depending on the service, there might be less strict constraints.
            <br>
            Please refer to the SCHUFA service documentations.
        placeOfBirth:
          type: string
          description: Consumers place of birth
          example: Berlin
        currentAddress:
          "$ref": "#/components/schemas/Address"
        previousAddress:
          "$ref": "#/components/schemas/Address"
      title: Consumer details as returned by the SCHUFA API

    IdentityCheckRequest:
      description: Identity check service parameters
      type: object
      required:
        - credentials
        - consumer
        - variant
      properties:
        credentials:
          $ref: '#/components/schemas/SchufaCredentials'
        consumer:
          $ref: '#/components/schemas/Consumer'
        variant:
          type: string
          enum: [Standard, Premium, Jugendschutz]
          example: Standard
          description: identity check variants are "Standard", "Jugendschutz" (youth protection) and "Premium".

    IdentityCheckResult:
      description: Identity check result.
      type: object
      required:
        - schufaIdentityCheck
      properties:
        schufaId:
          description: >-
            Identifier of the associated business transaction at SCHUFA.
          type: string
          maxLength: 10
        schufaReference:
          type: string
          description: >-
            Identifier of the associated business transaction at SCHUFA. It is transferred from Schufa to the participant of the report.
          example: "32ae1dc124h153d4gh53"
        participantReference:
          type: string
          description: >-
            Represents the SCHUFA field <code>TeilnehmerReferenz</code>.
            Identifier, used for uniquely assigning the received responses to their requests.
          example: "b7adf24e-10b6-4055-95eb-419587a8126d"
          maxLength: 80
        schufaIdentityCheck:
          type: number
          description: Value is 0 or between 85 and 100. 100 meaning exact match, 0 - complete missmatch.
          example: 0.88
        schufaIdentityCheckDetails:
          $ref: '#/components/schemas/SchufaIdentityCheckDetails'
        withPreviousAddress:
          type: boolean
          description: Represents the SCHUFA field <code>GefundenMitVoradresse</code>.
        schufaProvenIdentity:
          type: boolean
          description: >-
            Null if variant is not 'Premium'. True if SCHUFA's premium check was positive, false otherwise.
          example: true
        consumer:
          $ref: '#/components/schemas/ConsumerResult'
        results:
          type: array
          items:
            $ref: '#/components/schemas/SchufaResult'

    SchufaResult:
      description: Represents the SCHUFA field <code>Verarbeitungsinformation</code>.
      type: object
      properties:
        resultType:
          type: string
          description: Represents the SCHUFA field result type (<code>Ergebnistyp</code>)
          example: "TREFFER"
        text:
          type: string
          description: Represents the SCHUFA field check type (<code>Text</code>)
          example: "171"

    SchufaIdentityCheckDetails:
      description: >-
        Individual check results per consumer parameter. Values between 0 and 100. 100 meaning exact match, 0 - complete missmatch.
      type: object
      properties:
        BirthdayMatchScore:
          type: number
          description: Match score for the consumers birthday
          example: 0.88
        FirstNameMatchScore:
          type: number
          description: Match score for the consumers first name
          example: 0.88
        LastNameMatchScore:
          type: number
          description: Match score for the consumers last name
          example: 0.88
        CityMatchScore:
          type: number
          description: Match score for the consumer address city
          example: 0.88
        StreetMatchScore:
          type: number
          description: Match score for the consumer address street
          example: 0.88
        ZipMatchScore:
          type: number
          description: Match score for the consumer address zip code
          example: 0.88

    AccountCheckRequest:
      description: Account check check service parameters
      type: object
      required:
        - credentials
        - consumer
        - iban
      properties:
        credentials:
          $ref: '#/components/schemas/SchufaCredentials'
        consumer:
          $ref: '#/components/schemas/Consumer'
        iban:
          type: string
          description: >-
            Consumers's IBAN. 
            <br>
            The IBAN must be valid.
          example: DE89370400440532013000

    AccountCheckResult:
      description: Result for SCHUFA Account Check plus IBAN.
      type: object
      required:
        - accountCheckPlusIbanS
        - accountCheckPlusIbanP
      properties:
        schufaId:
          description: >-
            Identifier of the associated business transaction at SCHUFA.
          type: string
          maxLength: 10
        schufaReference:
          type: string
          description: >-
            Identifier of the associated business transaction at SCHUFA. It is transferred from Schufa to the participant of the report.
          example: "32ae1dc124h153d4gh53"
        participantReference:
          type: string
          description: >-
            Represents the SCHUFA field <code>TeilnehmerReferenz</code>.
            Identifier, used for uniquely assigning the received responses to their requests.
          example: "b7adf24e-10b6-4055-95eb-419587a8126d"
          maxLength: 80
        accountCheckPlusIbanP:
          type: string
          enum: [p01, p02, p03, p04, p05, p06]
          description: >-
            Result of SCHUFA's account syntax check. Can be interpreted according to the table checkheck type 2: Check of person identity data and bank details

            * p01 SCHUFA knows a combination of the bank details enquired about and the person identity data enquired about.

            * p02 SCHUFA knows of a payment transaction account with the bank enquired about for the person identity data enquired about.

            * p03 SCHUFA knows of a business relationship with the bank enquired about for the person identity data enquired about.

            * p04 A "Person deceased" note exists for the person identity data enquired about.

            * p05 SCHUFA does not know a combination of the bank details enquired about and the person identity data enquired about.

            * p06 A further check of the bank details is not carried out because the syntax check was not passed.
          example: p05
        accountCheckPlusIbanS:
          type: string
          enum: [s01, s02, s03, s04, s05]
          description: >-
            result of SCHUFA's account syntax check. Can be interpreted according to the table check type 1: Bank details syntax check

            * s01 Correct syntax of the bank details enquired about.

            * s02 Incorrect syntax of the bank details enquired about but the bank is known.

            * s03 Incorrect syntax of the bank details enquired about.

            * s04 The check digits checking procedure is currently not available.

            * s05 A check digits checking procedure does not exist for the bank enquired about or the particular bank account.
          example: s02

    NameSimilarityCheckRequest:
      description: Calculate the similarity between two given names.
      type: object
      required:
        - firstName
        - lastName
        - fullNameToMatch
      properties:
        firstName:
          type: string
          description: Provided first name.
          example: Fritz
        lastName:
          type: string
          description: Provided  last name.
          example: Lang
        fullNameToMatch:
          type: string
          description: Full name for matching calculation.
          example: Lang, Fritz

    NameSimilarityCheckResult:
      description: Calculation result of the SCHUFA name similarity service.
      type: object
      required:
        - nameEquality
        - nameEqualityScore
        - confirmedFirstName
        - confirmedLastName
      properties:
        nameEquality:
          type: boolean
          description: normalized equality score.
          example: 1
        nameEqualityScore:
          type: number
          description: >-
            Equality score for the best matching account holder name and first and last name provided.
            from (including) 0.00 to 1.00.

            * 0.00 no similarity at all

            * 1.00 completely equal
          example: 0.92
        decisionConfidence:
          type: number
          description: >-
            Confidence for the decision, from (including) 0.00 to 1.00.
          example: 0.92
        approvalRisk:
          type: number
          description: >-
            Risk of a faulty approval, from (including) 0.00 to 1.00.
          example: 0.01
        rejectionRisk:
          type: number
          description: >-
            Risk of a faulty rejection, from (including) 0.00 to 1.00.
            from (including) 0.00 to 1.00.
          example: 0.01
        confirmedFirstName:
          type: string
          description: Confirmed first name, the substring of <code>firstName</code> that could be matched with <code>fullNameToMatch</code>.
          example: Fritz
        confirmedLastName:
          type: string
          description: Confirmed last name, the substring of <code>lastName</code> that could be matched with <code>fullNameToMatch</code>.
          example: Lang

    CreditRatingRequest:
      description: >-
        Request information to start a credit rating check.
      type: object
      required:
        - credentials
        - consumer
      properties:
        featureCode:
          $ref: '#/components/schemas/CharacteristicCode'
        featureDetails:
          $ref: '#/components/schemas/FeatureDetails'
        credentials:
          $ref: '#/components/schemas/SchufaCredentials'
        consumer:
          $ref: '#/components/schemas/Consumer'

    CreditRatingResult:
      description: >-
        Result of a credit rating check.
      type: object
      properties:
        schufaId:
          description: >-
            Identifier of the associated business transaction at SCHUFA.
          type: string
          maxLength: 10
        schufaReference:
          type: string
          description: >-
            Identifier of the associated business transaction at SCHUFA. It is transferred from Schufa to the participant of the report.
          example: "32ae1dc124h153d4gh53"
        participantReference:
          type: string
          description: >-
            Represents the SCHUFA field <code>TeilnehmerReferenz</code>.
            Identifier, used for uniquely assigning the received responses to their requests.
          example: "b7adf24e-10b6-4055-95eb-419587a8126d"
          maxLength: 80
        consumer:
          $ref: '#/components/schemas/ConsumerResult'
        identityNotConfirmed:
          description: the identity, derived from first-, lastname and birthday, could not be confirmed
          type: boolean
        addressNotConfirmed:
          description: the address could not be confirmed
          type: boolean
        personWithoutBirthday:
          description: for the given person, no birthday is available in the dataset
          type: boolean
        schufaProvenIdentity:
          type: boolean
          description: >-
            True if SCHUFA's check was positive, false otherwise. Represents the SCHUFA field business transaction reference (<code>AusweisgepruefteIdentitaet</code>).
          example: true
        scoreCheck:
          description: >-
            Credit check data.
          type: array
          items:
           $ref: '#/components/schemas/ScoreCheck'
        schufaData:
          description: Schufa data.
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        schufaContracts:
          description: Schufa contract information.
          type: array
          items:
            $ref: '#/components/schemas/Contract'
        results:
          type: array
          items:
            $ref: '#/components/schemas/SchufaResult'

    ScoreCheck:
      description: >-
        Represents Represents the current Schufa Score of the user.
      type: object
      required:
        - score
      properties:
        score:
          $ref: '#/components/schemas/Score'
        scoreError:
          type: string
          description: >-
            Represents the SCHUFA field <code>Scorefehler</code>.
            In case of an error, the Score error element will be returned with the corresponding error text.
          example: "Interner Fehler"

    Score:
      description: >-
        Schufa score of the user.
      properties:
        description:
          type: string
          description: >-
            Description of the Schufa score.
          example: "Anfrage zum Girokonto"
        value:
          description: >-
            Represents the SCHUFA field <code>Scorewert</code>.
            Schufa score value of the consumer.
          type: string
          example: "8463"
        segment:
          description: >-
            Represents the SCHUFA field <code>Scorebereich</code>.
            The element contains the individual specification of the range associated with the score value (e.g. "B").
          type: string
          example: "B"
        text:
          description: >-
            Represents the SCHUFA field <code>Scoretext</code>.
            Text, that supplements and concretizes the Schufa score information.
          type: string
          example: "RATINGSTUFE K"
        infoText:
          description: >-
            Represents the SCHUFA field <code>ScoreInfoText</code>.
            Text, that contains further information about the Schufa score calculation or represents the exclusive score information.
          type: array
          items:
            type: string
            example: "UNBEKANNT VERZOGEN"
        riskQuote:
          description: >-
            Represents the SCHUFA field <code>Risikoquote</code>.
            The probability in percent that a (new) credit risk feature will be stored for the consumer under consideration within a period of 15 months.
          type: string
          example: "15,67"

    Contract:
      description: >-
        Contracts of the user, as known by SCHUFA.
      type: object
      required:
        - characteristicId
        - contractId
      properties:
        characteristicId:
          type: string
          description: >-
            if of the characteristic item mathing this identifier.
          example: "4612e3c2-9c17-4405-8cfc-fb5f9749dbcc"
        contractId:
          type: string
          description: encrypted contact identifier
          example: "abc123"

    Characteristic:
      description: >-
        Contracts of the user, as reported by SCHUFA.
      type: object
      required:
        - id
        - characteristicCode
        - characteristicAttributes
      properties:
        id:
          type: string
          description: >-
            Id of the unique element.
          example: "4612e3c2-9c17-4405-8cfc-fb5f9749dbcc"
        parentId:
          type: string
          description: >-
            If this element is set, it is a subelement of another element.
            The parentID refers to the ID of the other element.
          example: "185a7f74-39ef-4969-af4e-428037ba1f65"
        characteristicCode:
          $ref: '#/components/schemas/CharacteristicCode'
        description:
          type: string
          description: >-
            Represents the SCHUFA field <code>Beschreibung</code>
        contractDate:
          type: string
          description: >-
            Contract date in the format YYYY-MM-DD. Depending on the feature code, the date can represent various facts relating to the contract's subject matter, e.g. the date of the contract or the date of the first installment (e.g. in the case of loans). In the case of credit rates, the current date is often specified here.
          example: "2020-01-01"
        accountNumber:
          type: string
          maxLength: 25
          description: >-
            Represents the SCHUFA field <code>Kontonummer</code>.
            Describes the account number, which is used for this contract.
          example: "1234567890"
        amount:
          type: number
          description: >-
            Represents the SCHUFA field <code>Betrag</code>.
            Amount, paid for the contract.
          example: 200
        currency:
          type: string
          maxLength: 3
          minLength: 3
          description: >-
            Represents the SCHUFA field <code>Waehrung</code>.
            3 digits representation of the currency for the amount.
          example: "EUR"
        numberOfRates:
          type: integer
          description: >-
            Represents the SCHUFA field <code>Ratenzahl</code>.
            Number of installments, that have been agreed in terms of the contract.
          example: 15
        typeOfRate:
          type: string
          description: >-
            Type of rate. Can be:<br><code>MONTHLY</code> - monthly rate, <br><code>YEARLY</code>-yearly rate.
          enum:
            - MONTHLY
            - YEARLY
        text:
          type: string
          description: >-
            Represents the SCHUFA field <code>Text</code>
            Text, related to the contract.
          example: "2020-01-01"
        characteristicAttributes:
          $ref: '#/components/schemas/ContractCharacteristicAttribute'

    ContractCharacteristicAttribute:
      type: object
      description: >-
        This element is mandatory and specifies what type of characteristic it is. It can contain the following values:<br><code>MAIN</code>- hauptmerkmal <br><code>SUB</code>-untermerkmal, <br><code>SINGLE</code>-einzelmerkmal, <br><code>PERSON</code>-personenmerkmal, <br><code>COMPLETION</code>-erledigungsmerkmal.
      required:
        - attributeType
      properties:
        attributeType:
          description: >-
            This element is mandatory and specifies what type of feature it is. It can contain the following values:<br><code>MAIN</code>- hauptmerkmal <br><code>SUB</code>-untermerkmal, <br><code>SINGLE</code>-einzelmerkmal, <br><code>PERSON</code>-personenmerkmal, <br><code>COMPLETION</code>-erledigungsmerkmal.


            It can contain the following values:

            - <code>MAIN</code> ("hauptmerkmal")

            - <code>SUB</code> ("untermerkmal)

            - <code>SINGLE</code> ("einzelmerkmal")

            - <code>PERSON</code> ("personenmerkmal")

            - <code>COMPLETION</code> ("erledigungsmerkmal")
          type: string
          enum:
            - MAIN
            - SUB
            - SINGLE
            - PERSON
            - COMPLETION
        withoutDateOfBirth:
          description: >-
            Indicator, that shows that the characteristic was reported without a date of birth. This can be an indication that the assignment to the consumer may not be absolutely certain, since the date of birth is an important identification criterion. .
          type: boolean
          example: true
        customAttribute:
          description: >-
            Indicator of  whether the feature has been reported by the participant to whom it is now being reported. The optional element is only output in case of positive assignment in the request.
          type: boolean
          example: true

    CharacteristicCode:
      type: string
      description: >-
        Represents the SCHUFA field <code>Merkmalcode</code>, that is part of the field <code>Anfragemerkmal</code>.
        The characteristic code (Merkmalcode) describes the reason for the query.
      example: "XY"

    FeatureDetails:
      type: object
      description: >-
        Represents the SCHUFA field <code>Anfragemerkmal</code>, excluding <code>Merkmalcode</code>.
      properties:
        date:
          type: string
          description: >-
            Contract date in the format YYYY-MM-DD. Depending on the feature code, the date can represent various facts relating to the contract's subject matter, e.g. the date of the contract or the date of the first installment (e.g. in the case of loans). In the case of credit rates, the current date is often specified here.
            
            > Note: defined but not supported by SCHUFA SOAP API
          example: "2020-01-01"
          deprecated: true
        accountNumber:
          type: string
          maxLength: 25
          description: >-
            Represents the SCHUFA field <code>Kontonummer</code>.
            Describes the account number, which is used for this contract.
          example: "1234567890"
        amount:
          type: number
          description: >-
            Represents the SCHUFA field <code>Betrag</code>.
            Amount, paid for the contract.
            
            > Note: defined but not supported by SCHUFA SOAP API
          example: 200
          deprecated: true
        currency:
          type: string
          maxLength: 3
          minLength: 3
          description: >-
            Represents the SCHUFA field <code>Waehrung</code>.
            3 digits representation of the currency for the amount.
            
            > Note: defined but not supported by SCHUFA SOAP API
          example: "EUR"
          deprecated: true
        numberOfRates:
          type: integer
          description: >-
            Represents the SCHUFA field <code>Ratenzahl</code>.
            Number of installments, that have been agreed in terms of the contract.
            
            > Note: defined but not supported by SCHUFA SOAP API
          example: 15
          deprecated: true
        typeOfRate:
          type: string
          description: >-
            Type of rate. Can be:<br><code>MONTHLY</code> - monthly rate, <br><code>YEARLY</code>-yearly rate.
            
            > Note: defined but not supported by SCHUFA SOAP API
          enum:
            - MONTHLY
            - YEARLY
          deprecated: true
    ErrorMessage:
      description: >-
        Response type when a service call was not successful. Contains detail
        about the error(s) that occurred.
      required:
        - code
        - message
      type: object
      properties:
        code:
          description: Error code
          type: string
          example: UNEXPECTED_ERROR
        message:
          description: Error message
          type: string
          example: An unexpected error occurred
        date:
          description: >-
            Server date of when the error(s) occurred
          type: string
          format: 'date-time'
          example: '2020-01-01 00:00:00.000'
        requestId:
          description: UUID of the request
          type: string
          example: 4e760145-2e65-4242-ac33-488943528c93
        endpoint:
          description: The service endpoint that was called
          type: string
          example: 'https://finapi.localhost'
    ErrorMessageUnauthorized:
      description: Unauthorized
      type: object
      properties:
        error:
          description: Error code
          type: string
          example: "unauthorized"
        error_description:
          description: Error message
          type: string
          example: "An Authentication object was not found in the SecurityContext"
