openapi: 3.0.2
info:
  contact:
    email: support@tapico.io
    name: Tapico
    url: http://www.tapico.io
  description: PLACEHOLDER DESCRIPTION
  termsOfService: https://tapico.io/sandbox-tos/
  title: Tapico API
  version: 1.0.0
servers:
- description: Sandbox environment
  url: https://api.sandbox.tapico.io/v1
- description: Production environment
  url: https://api.prod.tapico.io/v1
paths:
  /ping:
    get:
      description: Ping the server.
      responses:
        "200":
          description: Site is up.
      summary: Ping the server
      tags:
      - Ping
  /oauth/token:
    post:
      description: Use this endpoint to exchange your Application's credentials for
        an access token
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenPostRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/TokenPostRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Successful token request
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      summary: OAuth2 token end point
      tags:
      - OAuth
  /account-access-consents:
    get:
      description: |
        An `Account Access Consent` represents the consent a user has given to an Application to access their data from an Account Servicer (e.g. their bank account data).

        Once consent has been granted by the user, an Application has permission to pull back account data on the users behalf through our API.

        This endpoint allows retrieval of the account access consents associated with your Application.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: A CSV of specific resource IDs to retrieve.
        explode: false
        in: query
        name: id
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
      - description: Only return results with the specified Account Servicer ID.
        in: query
        name: accountServicerId
        required: false
        schema:
          format: uuid
          type: string
      - description: Only return results with the specified Application ID.
        in: query
        name: applicationId
        required: false
        schema:
          format: uuid
          type: string
      - description: Only return results with the specified Authorising User ID.
        in: query
        name: authorisingUserId
        required: false
        schema:
          format: uuid
          type: string
      - description: Only return results with the specified status.
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/ConsentStatus'
      - description: |
          Each response payload may contain a nextCursor in the metadata, which is a pointer to the next set of results when more results are available.

          Set this query parameter to access the next page of results.
        in: query
        name: cursor
        required: false
        schema:
          type: string
      - description: The numbers of items to return.
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
      - description: Account Access Consents sorting options.
        explode: false
        in: query
        name: sort
        required: false
        schema:
          enum:
          - status:ASC
          - status:DESC
          - lastRefreshDateTime:ASC
          - lastRefreshDateTime:DESC
          - expiryDateTime:ASC
          - expiryDateTime:DESC
          - createdDateTime:ASC
          - createdDateTime:DESC
          - updatedDateTime:ASC
          - updatedDateTime:DESC
          type: string
      - description: Properties on the response payload to expand. When specified
          the property on the response payload will contain the full object. When
          not specified the property will just contain the ID reference.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - accountServicer
            - application
            - authorisingUser
            - consentTypes
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAccessConsentsSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: List and search account access consents
      tags:
      - Account Access
    post:
      description: |
        Initiate a request to gain consent from your user, to share their account data with your Application.

        Returns a URL where the user can securely authorise your data sharing request with their Account Servicer.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountAccessConsentPostRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAccessConsentsSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: This request is already in progress please try again later.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: Initiate an account access consent request
      tags:
      - Account Access
  /account-access-consents/{accountAccessConsentId}:
    delete:
      description: |
        Reject or Revoke an active consent.
        - Where the consent is requested but not yet granted this will reject the request.
        - Where the consent has been authorised this will revoke the granted access.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Account Access Consent ID.
        in: path
        name: accountAccessConsentId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: There is no content for the selected user.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Entity cannot be found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      - cookie: []
      summary: Reject or Revoke an account access consent
      tags:
      - Account Access
    get:
      description: |
        Get details for a specific account access consent.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Account Access Consent ID.
        in: path
        name: accountAccessConsentId
        required: true
        schema:
          type: string
      - description: Properties on the response payload to expand. When specified
          the property on the response payload will contain the full object. When
          not specified the property will just contain the ID reference.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - accountServicer
            - application
            - authorisingUser
            - consentTypes
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAccessConsentsSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Entity cannot be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      - cookie: []
      summary: Retrieve a specific account access consent
      tags:
      - Account Access
  /account-access-consents/{accountAccessConsentId}/reconfirm:
    put:
      description: |
        Initiate a request to reconfirm an existing account access consent before expiration (Open Banking and Starling only).
        Returns the account access consent reconfirmed if the account servicer is an Open Banking one or Starling.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Account Access Consent ID.
        in: path
        name: accountAccessConsentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAccessConsentsSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: This request is already in progress please try again later.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: Request to reconfirm an existing account access consent
      tags:
      - Account Access
  /authorising-users:
    get:
      description: |
        Get details of the authorising users associated with the API consumer.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Third party application system identifier for the user who is
          authorising sharing of their data.
        in: query
        name: externalUserId
        required: false
        schema:
          type: string
      - description: Only return results with the specified Application ID.
        in: query
        name: applicationId
        required: false
        schema:
          format: uuid
          type: string
      - description: |
          Each response payload may contain a nextCursor in the metadata, which is a pointer to the next set of results when more results are available.

          Set this query parameter to access the next page of results.
        in: query
        name: cursor
        required: false
        schema:
          type: string
      - description: The numbers of items to return.
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
      - description: Default sorting, by createdDateTime or updatedDateTime property.
        explode: false
        in: query
        name: sort
        required: false
        schema:
          enum:
          - createdDateTime:ASC
          - createdDateTime:DESC
          - updatedDateTime:ASC
          - updatedDateTime:DESC
          type: string
      - description: Authorising User expandable fields.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - identities
            - identities.servicingAgent
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorisingUsersSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: List and search authorising users
      tags:
      - Authorising Users
  /authorising-users/{authorisingUserId}:
    get:
      description: |
        Get details for a specific authorising user.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Authorising User expandable fields.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - identities
            - identities.servicingAgent
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorisingUsersSuccess'
          description: success response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Entity cannot be found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: Retrieve a specific authorising user
      tags:
      - Authorising Users
  /authorising-users/{authorisingUserId}/servicing-agents:
    get:
      description: |
        Get a list of account servicing agents from the source system.

        e.g. Advisers, Para-planners, Wealth or Discretionary managers.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Only return results with the specified Account Servicer ID.
        in: query
        name: accountServicerId
        required: false
        schema:
          format: uuid
          type: string
      - description: Filter Servicing Agent results by the source system primary entity
          identifier.
        in: query
        name: externalId
        required: false
        schema:
          type: string
      - description: |
          Each response payload may contain a nextCursor in the metadata, which is a pointer to the next set of results when more results are available.

          Set this query parameter to access the next page of results.
        in: query
        name: cursor
        required: false
        schema:
          type: string
      - description: The numbers of items to return.
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
      - description: Default sorting, by createdDateTime or updatedDateTime property.
        explode: false
        in: query
        name: sort
        required: false
        schema:
          enum:
          - createdDateTime:ASC
          - createdDateTime:DESC
          - updatedDateTime:ASC
          - updatedDateTime:DESC
          type: string
      - description: Servicing Agent expandable fields.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - accountServicer
            - servicingOrganisation
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicingAgentsSuccess'
          description: success response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: list and search account servicing agents
      tags:
      - Agents
  /authorising-users/{authorisingUserId}/servicing-agents/{servicingAgentId}:
    get:
      description: |
        Get an account servicing agent from the source system.

        e.g. Adviser, Para-planner, Wealth or Discretionary manager.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Servicing Agent ID.
        in: path
        name: servicingAgentId
        required: true
        schema:
          format: uuid
          type: string
      - description: Servicing Agent expandable fields.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - accountServicer
            - servicingOrganisation
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicingAgentsSuccess'
          description: success response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Entity cannot be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: Get a servicing agent
      tags:
      - Agents
  /authorising-users/{authorisingUserId}/servicing-organisations:
    get:
      description: |
        Get a list of account servicing organisations from the source system.

        e.g. Financial Advice Firms, Wealth Management Firms, or other financial intermediary organisation.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Only return results with the specified Account Servicer ID.
        in: query
        name: accountServicerId
        required: false
        schema:
          format: uuid
          type: string
      - description: Filter Servicing Organisation results by the source system primary
          entity identifier.
        in: query
        name: externalId
        required: false
        schema:
          type: string
      - description: |
          Each response payload may contain a nextCursor in the metadata, which is a pointer to the next set of results when more results are available.

          Set this query parameter to access the next page of results.
        in: query
        name: cursor
        required: false
        schema:
          type: string
      - description: The numbers of items to return.
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
      - description: Default sorting, by createdDateTime or updatedDateTime property.
        explode: false
        in: query
        name: sort
        required: false
        schema:
          enum:
          - createdDateTime:ASC
          - createdDateTime:DESC
          - updatedDateTime:ASC
          - updatedDateTime:DESC
          type: string
      - description: Servicing Organisation expandable fields.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - accountServicer
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicingOrganisationsSuccess'
          description: success response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: list and search account servicing organisations
      tags:
      - Agents
  /authorising-users/{authorisingUserId}/servicing-organisations/{servicingOrganisationId}:
    get:
      description: |
        Get an account servicing organisation from the source system.

        e.g. Financial Advice Firm, Wealth Management Firm, or other financial intermediary organisation.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Servicing Organisation ID.
        in: path
        name: servicingOrganisationId
        required: true
        schema:
          format: uuid
          type: string
      - description: Servicing Organisation expandable fields.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - accountServicer
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicingOrganisationsSuccess'
          description: success response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Entity cannot be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: Get a servicing organisation
      tags:
      - Agents
  /authorising-users/{authorisingUserId}/customers:
    get:
      description: |
        Get details of the customers for the specified authorising user.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: A CSV of specific resource IDs to retrieve.
        explode: false
        in: query
        name: id
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
      - description: Search for entities based on search term.
        in: query
        name: search
        required: false
        schema:
          maxLength: 30
          type: string
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Only return results with the specified Account Servicer ID.
        in: query
        name: accountServicerId
        required: false
        schema:
          format: uuid
          type: string
      - description: Customer Type.
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/CustomerType'
      - description: Filter Customer results by the source system primary entity identifier.
        in: query
        name: externalId
        required: false
        schema:
          type: string
      - description: Filter Customer results by the source system secondary entity
          identifier.
        in: query
        name: secondaryExternalId
        required: false
        schema:
          type: string
      - description: |
          Each response payload may contain a nextCursor in the metadata, which is a pointer to the next set of results when more results are available.

          Set this query parameter to access the next page of results.
        in: query
        name: cursor
        required: false
        schema:
          type: string
      - description: The numbers of items to return.
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
      - description: Default sorting, by createdDateTime or updatedDateTime property.
        explode: false
        in: query
        name: sort
        required: false
        schema:
          enum:
          - createdDateTime:ASC
          - createdDateTime:DESC
          - updatedDateTime:ASC
          - updatedDateTime:DESC
          type: string
      - description: Customer expandable fields.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - accountGroupRoles
            - accountGroupRoles.accountGroup
            - accountGroupRoles.accountGroup.servicingAgent
            - accountRoles
            - accountRoles.account
            - accountRoles.account.servicingAgent
            - accountServicer
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersSuccess'
          description: success response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Entity cannot be found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: List and search customers for an authorising user
      tags:
      - Customers
  /authorising-users/{authorisingUserId}/customers/{customerId}:
    get:
      description: |
        Get details for a specific customer.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Customer ID.
        in: path
        name: customerId
        required: true
        schema:
          format: uuid
          type: string
      - description: Customer expandable fields.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - accountGroupRoles
            - accountGroupRoles.accountGroup
            - accountGroupRoles.accountGroup.servicingAgent
            - accountRoles
            - accountRoles.account
            - accountRoles.account.servicingAgent
            - accountServicer
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersSuccess'
          description: success response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Entity cannot be found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: Retrieve a specific customer
      tags:
      - Customers
  /authorising-users/{authorisingUserId}/account-groups:
    get:
      description: |
        Get details of the account groups for the specified authorising user.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: A CSV of specific resource IDs to retrieve.
        explode: false
        in: query
        name: id
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
      - description: Search for entities based on search term.
        in: query
        name: search
        required: false
        schema:
          maxLength: 30
          type: string
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Filter Account Group results by the source system primary entity
          identifier.
        in: query
        name: externalId
        required: false
        schema:
          type: string
      - description: Only return results with the specified Account Servicer ID.
        in: query
        name: accountServicerId
        required: false
        schema:
          format: uuid
          type: string
      - description: |
          Each response payload may contain a nextCursor in the metadata, which is a pointer to the next set of results when more results are available.

          Set this query parameter to access the next page of results.
        in: query
        name: cursor
        required: false
        schema:
          type: string
      - description: The numbers of items to return.
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
      - description: Default sorting, by createdDateTime or updatedDateTime property.
        explode: false
        in: query
        name: sort
        required: false
        schema:
          enum:
          - createdDateTime:ASC
          - createdDateTime:DESC
          - updatedDateTime:ASC
          - updatedDateTime:DESC
          type: string
      - description: Account Group expandable fields.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - accounts
            - accountServicer
            - externalAccounts
            - roles
            - roles.customer
            - servicingAgent
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountGroupsSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: List and search account groups for an authorising user
      tags:
      - Account Groups
  /authorising-users/{authorisingUserId}/account-groups/{accountGroupId}:
    get:
      description: |
        Get details for a specific account group.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Account Group ID.
        in: path
        name: accountGroupId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountGroupsSuccess'
          description: success response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Entity cannot be found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: Retrieve a specific account group
      tags:
      - Account Groups
  /authorising-users/{authorisingUserId}/customers/{customerId}/account-groups:
    get:
      description: |
        Get details of the account groups associated with the specified customer.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: A CSV of specific resource IDs to retrieve.
        explode: false
        in: query
        name: id
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
      - description: Search for entities based on search term.
        in: query
        name: search
        required: false
        schema:
          maxLength: 30
          type: string
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Customer ID.
        in: path
        name: customerId
        required: true
        schema:
          format: uuid
          type: string
      - description: Filter Account Group results by the source system primary entity
          identifier.
        in: query
        name: externalId
        required: false
        schema:
          type: string
      - description: Filter Account Group results by the source system secondary entity
          identifier.
        in: query
        name: secondaryExternalId
        required: false
        schema:
          type: string
      - description: |
          Each response payload may contain a nextCursor in the metadata, which is a pointer to the next set of results when more results are available.

          Set this query parameter to access the next page of results.
        in: query
        name: cursor
        required: false
        schema:
          type: string
      - description: The numbers of items to return.
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
      - description: Default sorting, by createdDateTime or updatedDateTime property.
        explode: false
        in: query
        name: sort
        required: false
        schema:
          enum:
          - createdDateTime:ASC
          - createdDateTime:DESC
          - updatedDateTime:ASC
          - updatedDateTime:DESC
          type: string
      - description: Account Group expandable fields.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - accounts
            - accountServicer
            - externalAccounts
            - roles
            - roles.customer
            - servicingAgent
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountGroupsSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: List and search account groups for a customer
      tags:
      - Account Groups
  /authorising-users/{authorisingUserId}/accounts:
    get:
      description: |
        Get details of the accounts accessible by the specified authorising user.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: A CSV of specific resource IDs to retrieve.
        explode: false
        in: query
        name: id
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
      - description: Search for entities based on search term.
        in: query
        name: search
        required: false
        schema:
          maxLength: 30
          type: string
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Filter Account results by the source system primary entity identifier.
        in: query
        name: externalId
        required: false
        schema:
          type: string
      - description: Only return results with the specified Account Servicer ID.
        in: query
        name: accountServicerId
        required: false
        schema:
          format: uuid
          type: string
      - description: |
          Each response payload may contain a nextCursor in the metadata, which is a pointer to the next set of results when more results are available.

          Set this query parameter to access the next page of results.
        in: query
        name: cursor
        required: false
        schema:
          type: string
      - description: The numbers of items to return.
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
      - description: Default sorting, by createdDateTime or updatedDateTime property.
        explode: false
        in: query
        name: sort
        required: false
        schema:
          enum:
          - createdDateTime:ASC
          - createdDateTime:DESC
          - updatedDateTime:ASC
          - updatedDateTime:DESC
          type: string
      - description: Account expandable fields.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - accountGroup
            - accountServicer
            - roles
            - roles.customer
            - servicingAgent
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: List and search accounts for an authorising user
      tags:
      - Accounts
  /authorising-users/{authorisingUserId}/accounts/{accountId}:
    get:
      description: |
        Get details for a specific account.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Account ID.
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      - description: Account expandable fields.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - accountGroup
            - accountServicer
            - roles
            - roles.customer
            - servicingAgent
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsSuccess'
          description: success response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Entity cannot be found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: Retrieve a specific account
      tags:
      - Accounts
  /authorising-users/{authorisingUserId}/customers/{customerId}/accounts:
    get:
      description: |
        Get details of the accounts associated with the specified customer.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: A CSV of specific resource IDs to retrieve.
        explode: false
        in: query
        name: id
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
      - description: Search for entities based on search term.
        in: query
        name: search
        required: false
        schema:
          maxLength: 30
          type: string
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Customer ID.
        in: path
        name: customerId
        required: true
        schema:
          format: uuid
          type: string
      - description: Filter Account results by the source system primary entity identifier.
        in: query
        name: externalId
        required: false
        schema:
          type: string
      - description: Filter Account results by the source system secondary entity
          identifier.
        in: query
        name: secondaryExternalId
        required: false
        schema:
          type: string
      - description: |
          Each response payload may contain a nextCursor in the metadata, which is a pointer to the next set of results when more results are available.

          Set this query parameter to access the next page of results.
        in: query
        name: cursor
        required: false
        schema:
          type: string
      - description: The numbers of items to return.
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
      - description: Default sorting, by createdDateTime or updatedDateTime property.
        explode: false
        in: query
        name: sort
        required: false
        schema:
          enum:
          - createdDateTime:ASC
          - createdDateTime:DESC
          - updatedDateTime:ASC
          - updatedDateTime:DESC
          type: string
      - description: Account expandable fields.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - accountGroup
            - accountServicer
            - roles
            - roles.customer
            - servicingAgent
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: List and search accounts for a customer
      tags:
      - Accounts
  /authorising-users/{authorisingUserId}/account-groups/{accountGroupId}/accounts:
    get:
      description: |
        Get details of the accounts associated with the specified account group.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: A CSV of specific resource IDs to retrieve.
        explode: false
        in: query
        name: id
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
      - description: Search for entities based on search term.
        in: query
        name: search
        required: false
        schema:
          maxLength: 30
          type: string
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Account Group ID.
        in: path
        name: accountGroupId
        required: true
        schema:
          format: uuid
          type: string
      - description: Filter Account results by the source system primary entity identifier.
        in: query
        name: externalId
        required: false
        schema:
          type: string
      - description: |
          Each response payload may contain a nextCursor in the metadata, which is a pointer to the next set of results when more results are available.

          Set this query parameter to access the next page of results.
        in: query
        name: cursor
        required: false
        schema:
          type: string
      - description: The numbers of items to return.
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
      - description: Default sorting, by createdDateTime or updatedDateTime property.
        explode: false
        in: query
        name: sort
        required: false
        schema:
          enum:
          - createdDateTime:ASC
          - createdDateTime:DESC
          - updatedDateTime:ASC
          - updatedDateTime:DESC
          type: string
      - description: Account expandable fields.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - accountGroup
            - accountServicer
            - roles
            - roles.customer
            - servicingAgent
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: List and search accounts for an account group
      tags:
      - Accounts
  /authorising-users/{authorisingUserId}/external-accounts:
    get:
      description: |
        Get details of the external accounts accessible by the specified authorising user.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: A CSV of specific resource IDs to retrieve.
        explode: false
        in: query
        name: id
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
      - description: Search for entities based on search term.
        in: query
        name: search
        required: false
        schema:
          maxLength: 30
          type: string
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Filter External Account results by the source system primary
          entity identifier.
        in: query
        name: externalId
        required: false
        schema:
          type: string
      - description: Only return results with the specified Account Servicer ID.
        in: query
        name: accountServicerId
        required: false
        schema:
          format: uuid
          type: string
      - description: |
          Each response payload may contain a nextCursor in the metadata, which is a pointer to the next set of results when more results are available.

          Set this query parameter to access the next page of results.
        in: query
        name: cursor
        required: false
        schema:
          type: string
      - description: The numbers of items to return.
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
      - description: Default sorting, by createdDateTime or updatedDateTime property.
        explode: false
        in: query
        name: sort
        required: false
        schema:
          enum:
          - createdDateTime:ASC
          - createdDateTime:DESC
          - updatedDateTime:ASC
          - updatedDateTime:DESC
          type: string
      - description: External Account expandable fields.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - accountGroup
            - accountServicer
            - servicingAgent
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAccountsSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: List and search external accounts for an authorising user
      tags:
      - External Accounts
  /authorising-users/{authorisingUserId}/external-accounts/{externalAccountId}:
    get:
      description: |
        Get details for a specific external account.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: External Account ID.
        in: path
        name: externalAccountId
        required: true
        schema:
          format: uuid
          type: string
      - description: External Account expandable fields.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - accountGroup
            - accountServicer
            - servicingAgent
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAccountsSuccess'
          description: success response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Entity cannot be found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: Retrieve a specific external account
      tags:
      - External Accounts
  /authorising-users/{authorisingUserId}/customers/{customerId}/external-accounts:
    get:
      description: |
        Get details of the external accounts associated with the specified customer.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: A CSV of specific resource IDs to retrieve.
        explode: false
        in: query
        name: id
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
      - description: Search for entities based on search term.
        in: query
        name: search
        required: false
        schema:
          maxLength: 30
          type: string
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Customer ID.
        in: path
        name: customerId
        required: true
        schema:
          format: uuid
          type: string
      - description: Filter External Account results by the source system primary
          entity identifier.
        in: query
        name: externalId
        required: false
        schema:
          type: string
      - description: Filter External Account results by the source system secondary
          entity identifier.
        in: query
        name: secondaryExternalId
        required: false
        schema:
          type: string
      - description: |
          Each response payload may contain a nextCursor in the metadata, which is a pointer to the next set of results when more results are available.

          Set this query parameter to access the next page of results.
        in: query
        name: cursor
        required: false
        schema:
          type: string
      - description: The numbers of items to return.
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
      - description: Default sorting, by createdDateTime or updatedDateTime property.
        explode: false
        in: query
        name: sort
        required: false
        schema:
          enum:
          - createdDateTime:ASC
          - createdDateTime:DESC
          - updatedDateTime:ASC
          - updatedDateTime:DESC
          type: string
      - description: External Account expandable fields.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - accountGroup
            - accountServicer
            - servicingAgent
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAccountsSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: List and search external accounts for a customer
      tags:
      - External Accounts
  /authorising-users/{authorisingUserId}/account-groups/{accountGroupId}/external-accounts:
    get:
      description: |
        Get details of the external accounts associated with the specified account group.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: A CSV of specific resource IDs to retrieve.
        explode: false
        in: query
        name: id
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
      - description: Search for entities based on search term.
        in: query
        name: search
        required: false
        schema:
          maxLength: 30
          type: string
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Account Group ID.
        in: path
        name: accountGroupId
        required: true
        schema:
          format: uuid
          type: string
      - description: Filter External Account results by the source system primary
          entity identifier.
        in: query
        name: externalId
        required: false
        schema:
          type: string
      - description: |
          Each response payload may contain a nextCursor in the metadata, which is a pointer to the next set of results when more results are available.

          Set this query parameter to access the next page of results.
        in: query
        name: cursor
        required: false
        schema:
          type: string
      - description: The numbers of items to return.
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
      - description: Default sorting, by createdDateTime or updatedDateTime property.
        explode: false
        in: query
        name: sort
        required: false
        schema:
          enum:
          - createdDateTime:ASC
          - createdDateTime:DESC
          - updatedDateTime:ASC
          - updatedDateTime:DESC
          type: string
      - description: External Account expandable fields.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - accountGroup
            - accountServicer
            - servicingAgent
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAccountsSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: List and search external accounts for an account group
      tags:
      - External Accounts
  /authorising-users/{authorisingUserId}/accounts/{accountId}/holdings:
    get:
      description: |
        Get details of the holdings for the specified account.

        This includes cash balances returned by the `Cash Balances` endpoint.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Account ID.
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      - description: |
          Each response payload may contain a nextCursor in the metadata, which is a pointer to the next set of results when more results are available.

          Set this query parameter to access the next page of results.
        in: query
        name: cursor
        required: false
        schema:
          type: string
      - description: The numbers of items to return.
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
      - description: Holdings sorting options.
        explode: false
        in: query
        name: sort
        required: false
        schema:
          enum:
          - quantity:ASC
          - quantity:DESC
          - createdDateTime:ASC
          - createdDateTime:DESC
          - updatedDateTime:ASC
          - updatedDateTime:DESC
          type: string
      - description: Holding expandable fields.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - instrument
            - sourceInstrument
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HoldingsSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Entity cannot be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: List and search holdings for an account
      tags:
      - Holdings
  /authorising-users/{authorisingUserId}/accounts/{accountId}/transactions:
    get:
      description: |
        Get details of the transactions for the specified account.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Account ID.
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      - description: Booked Datetime.
        in: query
        name: bookedDateTime
        required: false
        schema:
          $ref: '#/components/schemas/DateTimeFilter'
      - description: Transaction type.
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/TransactionType'
      - description: Transaction subtype.
        in: query
        name: subType
        required: false
        schema:
          $ref: '#/components/schemas/TransactionSubType'
      - description: Updated Datetime.
        in: query
        name: updatedDateTime
        required: false
        schema:
          $ref: '#/components/schemas/DateTimeFilter'
      - description: |
          Each response payload may contain a nextCursor in the metadata, which is a pointer to the next set of results when more results are available.

          Set this query parameter to access the next page of results.
        in: query
        name: cursor
        required: false
        schema:
          type: string
      - description: The numbers of items to return.
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
      - description: Transactions sorting options.
        explode: false
        in: query
        name: sort
        required: false
        schema:
          enum:
          - quantity:ASC
          - quantity:DESC
          - instrument:ASC
          - instrument:DESC
          - bookedDateTime:ASC
          - bookedDateTime:DESC
          - valueDateTime:ASC
          - valueDateTime:DESC
          - updatedDateTime:ASC
          - updatedDateTime:DESC
          type: string
      - description: Transaction expandable fields.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - instrument
            - sourceInstrument
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Entity cannot be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: List and search transactions for an account
      tags:
      - Transactions
  /authorising-users/{authorisingUserId}/accounts/{accountId}/regular-payments:
    get:
      description: |
        Get details of the regular contributions or withdrawals for the specified account.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Account ID.
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      - description: Updated Datetime.
        in: query
        name: updatedDateTime
        required: false
        schema:
          $ref: '#/components/schemas/DateTimeFilter'
      - description: |
          Each response payload may contain a nextCursor in the metadata, which is a pointer to the next set of results when more results are available.

          Set this query parameter to access the next page of results.
        in: query
        name: cursor
        required: false
        schema:
          type: string
      - description: The numbers of items to return.
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
      - description: Regular Payment expandable fields.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - externalAccount
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegularPaymentsSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Entity cannot be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: List and search regular payments for an account
      tags:
      - Payments
  /authorising-users/{authorisingUserId}/accounts/{accountId}/cash-balances:
    get:
      description: |
        Get details of the cash balances for the specified account.

        This returns a subset of the records in the `Holdings` endpoint for when you are only interested in cash or dealing with accounts that only hold cash e.g. Open Banking.

        Use the `Holdings` endpoint instead if you are interested in the full valuations for the account.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Account ID.
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashBalancesSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Entity cannot be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: List and search balances for an account
      tags:
      - Cash Balances
  /authorising-users/{authorisingUserId}/customers/{customerId}/documents:
    get:
      description: |
        Get document meta data associated with the specified customer.

        Note: This is not available for Open Banking documents.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Customer ID.
        in: path
        name: customerId
        required: true
        schema:
          format: uuid
          type: string
      - description: Document Category.
        in: query
        name: category
        required: false
        schema:
          $ref: '#/components/schemas/DocumentCategory'
      - description: Document Added Datetime.
        in: query
        name: documentAddedDateTime
        required: false
        schema:
          $ref: '#/components/schemas/DateTimeFilter'
      - description: Document status.
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/DocumentStatus'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: List and search document meta data for the specified customer
      tags:
      - Documents
  /authorising-users/{authorisingUserId}/customers/{customerId}/documents/{documentId}:
    get:
      description: |
        Get a specific document's meta data for a customer.

        Note: This is not available for Open Banking documents.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Customer ID.
        in: path
        name: customerId
        required: true
        schema:
          format: uuid
          type: string
      - description: Document ID.
        in: path
        name: documentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: Retrieve a specific document's meta data for a customer
      tags:
      - Documents
  /authorising-users/{authorisingUserId}/customers/{customerId}/documents/{documentId}/file:
    get:
      description: |
        Retrieve the raw binary content for a customer's document.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Customer ID.
        in: path
        name: customerId
        required: true
        schema:
          format: uuid
          type: string
      - description: Document ID.
        in: path
        name: documentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: Retrieve the raw binary content for a customer's document
      tags:
      - Documents
  /authorising-users/{authorisingUserId}/customers/{customerId}/addresses:
    get:
      description: |
        Get address information for a specific customer.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Customer ID.
        in: path
        name: customerId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAddressesSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: Get the address information for a specific customer
      tags:
      - Addresses
  /authorising-users/{authorisingUserId}/account-groups/{accountGroupId}/documents:
    get:
      description: |
        Get document meta data associated with the specified account group.

        Note: This is not available for Open Banking documents.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Account Group ID.
        in: path
        name: accountGroupId
        required: true
        schema:
          format: uuid
          type: string
      - description: Document Category.
        in: query
        name: category
        required: false
        schema:
          $ref: '#/components/schemas/DocumentCategory'
      - description: Document Added Datetime.
        in: query
        name: documentAddedDateTime
        required: false
        schema:
          $ref: '#/components/schemas/DateTimeFilter'
      - description: Document status.
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/DocumentStatus'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: List and search document meta data for the specified account group
      tags:
      - Documents
  /authorising-users/{authorisingUserId}/account-groups/{accountGroupId}/documents/{documentId}:
    get:
      description: |
        Get a specific document's meta data for an account group.

        Note: This is not available for Open Banking documents.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Account Group ID.
        in: path
        name: accountGroupId
        required: true
        schema:
          format: uuid
          type: string
      - description: Document ID.
        in: path
        name: documentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: Retrieve a specific document's meta data for an account group
      tags:
      - Documents
  /authorising-users/{authorisingUserId}/account-groups/{accountGroupId}/documents/{documentId}/file:
    get:
      description: |
        Retrieve the raw binary content for an account group's document.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Account Group ID.
        in: path
        name: accountGroupId
        required: true
        schema:
          format: uuid
          type: string
      - description: Document ID.
        in: path
        name: documentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: Retrieve the raw binary content for an account group's document
      tags:
      - Documents
  /authorising-users/{authorisingUserId}/accounts/{accountId}/documents:
    get:
      description: |
        Get document meta data associated with the specified account.

        Note: This is not available for Open Banking documents.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Account ID.
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      - description: Document Category.
        in: query
        name: category
        required: false
        schema:
          $ref: '#/components/schemas/DocumentCategory'
      - description: Document Added Datetime.
        in: query
        name: documentAddedDateTime
        required: false
        schema:
          $ref: '#/components/schemas/DateTimeFilter'
      - description: Document status.
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/DocumentStatus'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: List and search document meta data for the specified account
      tags:
      - Documents
  /authorising-users/{authorisingUserId}/accounts/{accountId}/documents/{documentId}:
    get:
      description: |
        Get a specific document's meta data for an account.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Account ID.
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      - description: Document ID.
        in: path
        name: documentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: Retrieve a specific document's meta data for an account
      tags:
      - Documents
  /authorising-users/{authorisingUserId}/accounts/{accountId}/documents/{documentId}/file:
    get:
      description: |
        Retrieve the raw binary content for an account's document.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Account ID.
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      - description: Document ID.
        in: path
        name: documentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: Retrieve the raw binary content for an account's document
      tags:
      - Documents
  /authorising-users/{authorisingUserId}/accounts/{accountId}/beneficiaries:
    get:
      description: |
        Get details of the beneficiaries associated with the specified account.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Authorising User ID.
        in: path
        name: authorisingUserId
        required: true
        schema:
          format: uuid
          type: string
      - description: Account ID.
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeneficiariesSuccess'
          description: success response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Entity cannot be found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: List and search beneficiaries for an account
      tags:
      - Beneficiaries
  /instruments:
    get:
      description: |
        Get details of the financial instruments on the platform.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: A CSV of specific resource IDs to retrieve.
        explode: false
        in: query
        name: id
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
      - description: |
          Each response payload may contain a nextCursor in the metadata, which is a pointer to the next set of results when more results are available.

          Set this query parameter to access the next page of results.
        in: query
        name: cursor
        required: false
        schema:
          type: string
      - description: The numbers of items to return.
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
      - description: Instruments sorting options.
        explode: false
        in: query
        name: sort
        required: false
        schema:
          enum:
          - name:ASC
          - name:DESC
          - type:ASC
          - type:DESC
          - createdDateTime:ASC
          - createdDateTime:DESC
          - updatedDateTime:ASC
          - updatedDateTime:DESC
          type: string
      - description: Instrument expandable fields.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - targetAllocations
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstrumentsSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: List and search financial instruments
      tags:
      - Instruments
  /instruments/{instrumentId}:
    get:
      description: |
        Get details for a specific financial instrument.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Instrument ID.
        in: path
        name: instrumentId
        required: true
        schema:
          type: string
      - description: Instrument expandable fields.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - targetAllocations
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstrumentsSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Entity cannot be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: Retrieve a specific financial instrument
      tags:
      - Instruments
  /account-servicers:
    get:
      description: |
        Get a list of the account servicers.
      parameters:
      - description: A CSV of specific resource IDs to retrieve.
        explode: false
        in: query
        name: id
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
      - description: Search for entities based on search term.
        in: query
        name: search
        required: false
        schema:
          maxLength: 30
          type: string
      - description: Region.
        in: query
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Country Code.
        in: query
        name: countryCode
        required: false
        schema:
          description: Country code in ISO 3166 format.
          example: GBR
          type: string
      - description: |
          Each response payload may contain a nextCursor in the metadata, which is a pointer to the next set of results when more results are available.

          Set this query parameter to access the next page of results.
        in: query
        name: cursor
        required: false
        schema:
          type: string
      - description: The numbers of items to return.
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
      - description: Sort by name property or default options.
        explode: false
        in: query
        name: sort
        required: false
        schema:
          enum:
          - name:ASC
          - name:DESC
          - createdDateTime:ASC
          - createdDateTime:DESC
          - updatedDateTime:ASC
          - updatedDateTime:DESC
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountServicersSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: List and search account servicers
      tags:
      - Account Servicers
    post:
      description: Create a new account servicer.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountServicerPostRequest'
        description: The account servicer entity to create.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountServicersSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: This request is already in progress please try again later.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: Create an account servicer
      tags:
      - Account Servicers
  /account-servicers/{accountServicerId}:
    get:
      description: |
        Get details for a specific account servicer.
      parameters:
      - description: Account Servicer ID.
        in: path
        name: accountServicerId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountServicersSuccess'
          description: success response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Entity cannot be found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: Retrieve a specific account servicer
      tags:
      - Account Servicers
  /payment-instructions:
    get:
      description: List payment instructions.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: A CSV of specific resource IDs to retrieve.
        explode: false
        in: query
        name: id
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
      - description: Only return results with the specified Account Servicer ID for
          the Debtor Account.
        in: query
        name: accountServicerId
        required: false
        schema:
          format: uuid
          type: string
      - description: Only return results with the specified Application ID.
        in: query
        name: applicationId
        required: false
        schema:
          format: uuid
          type: string
      - description: Only return results with the specified ISO status.
        in: query
        name: isoStatus
        required: false
        schema:
          $ref: '#/components/schemas/PaymentIsoStatus'
      - description: Only return results with the specified instruction status.
        in: query
        name: instructionStatus
        required: false
        schema:
          $ref: '#/components/schemas/InstructionStatus'
      - description: |
          Each response payload may contain a nextCursor in the metadata, which is a pointer to the next set of results when more results are available.

          Set this query parameter to access the next page of results.
        in: query
        name: cursor
        required: false
        schema:
          type: string
      - description: The numbers of items to return.
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
      - description: Default sorting, by createdDateTime or updatedDateTime property.
        explode: false
        in: query
        name: sort
        required: false
        schema:
          enum:
          - createdDateTime:ASC
          - createdDateTime:DESC
          - updatedDateTime:ASC
          - updatedDateTime:DESC
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInstructionsSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: List and search payment instructions
      tags:
      - Payments
    post:
      description: Create a payment instruction.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: |
          Supports idempotency for safely retrying requests without accidentally performing the same operation twice.

          If the header is not included, the request will fail with a 400 response code.
        in: header
        name: x-idempotency-key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentInstructionPostRequest'
        description: The payment instruction to create.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInstructionsSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: This request is already in progress please try again later.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: Create a payment instruction
      tags:
      - Payments
  /payment-instructions/{instructionId}:
    delete:
      description: Reject a payment instruction. The instruction can only be rejected
        while at the initial status of Created.  i.e. it has not been submitted to
        the bank or authorised.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Payment Consent Instruction ID.
        in: path
        name: instructionId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          description: There is no content for the selected user.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Entity cannot be found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      - cookie: []
      summary: Reject payment instruction.
      tags:
      - Payments
    get:
      description: Get specific payment instruction.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Payment Consent Instruction ID.
        in: path
        name: instructionId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInstructionsSuccess'
          description: success response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Entity cannot be found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      - cookie: []
      summary: Retrieve specific payment instruction
      tags:
      - Payments
    put:
      description: Update an existing payment instruction.
      parameters:
      - description: "Specifies the Region for the request. \nWhen specified, this\
          \ must match the region that the application access token was generated\
          \ for. \n\nFor more information about regions see https://docs.tapico.io/docs/regions\n"
        example: EU
        in: header
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - description: Payment Consent Instruction ID.
        in: path
        name: instructionId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentInstructionPutRequest'
        description: The payment instruction to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInstructionsSuccess'
          description: success response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The credentials used are not recognised.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Entity cannot be found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request parameter validation error.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests sent in quick succession.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error.
      security:
      - bearer: []
      summary: Update a payment instruction
      tags:
      - Payments
components:
  schemas:
    TokenPostRequest:
      properties:
        client_id:
          description: Your Application's client_id - Get this from the Tapico developer
            portal
          example: 2b787704-3e77-440a-b8e7-fae903c23959
          type: string
        client_secret:
          description: Your Application's client_secret - Get this from the Tapico
            developer portal
          type: string
        grant_type:
          description: OAuth2 grant type
          enum:
          - client_credentials
          example: client_credentials
          type: string
        scope:
          description: OAuth2 scope
          example: https://tapico.io/open-wealth
          type: string
      required:
      - client_id
      - client_secret
      - grant_type
      - scope
      type: object
    Region:
      description: Specifies the Region of the Account Servicer, hence the Region
        where the data associated to that Account Servicer is stored.
      enum:
      - EU
      - Pacific
      - Asia
      - US
      - CA
      type: string
    Token:
      example:
        access_token: eyJhbGci.eyJqdGk.NXd21
        scope: https://tapico.io/open-wealth
        token_type: Bearer
        expires_in: 600
      properties:
        access_token:
          description: The bearer token in JWT format required to access the API
          example: eyJhbGci.eyJqdGk.NXd21
          format: JWT
          type: string
        token_type:
          description: The token is always of type Bearer
          enum:
          - Bearer
          example: Bearer
          type: string
        expires_in:
          description: The lifetime in seconds of the access token. Access tokens
            expire after 1 hour
          example: 600
          format: int32
          type: integer
        scope:
          description: The scope of the access token. Will reflect the value passed
            in the request
          example: https://tapico.io/open-wealth
          type: string
      type: object
    ErrorResponse:
      properties:
        code:
          type: string
        correlationId:
          example: cfadcc06-d059-4a1c-a5c2-b9d102c40294
          format: uuid
          type: string
        errors:
          items:
            type: string
          type: array
      required:
      - code
      - correlationId
      - errors
      type: object
    AccountAccessConsentsSuccess:
      example:
        data:
        - id: 18c68ff9-02af-4133-9166-454918ca63cc
          application: 64611b71-5942-4aae-8c00-b75387ecaaed
          accountServicer: 318b1f12-6b25-491f-bd44-322782d54a9b
          authorisingUser: 26d9cacd-b727-4e81-baf8-e84b037d52eb
          createdDateTime: 2019-12-01T14:57:59.202Z
          expiryDate: 2019-12-01T15:57:59.202Z
          lastRefreshDateTime: 2019-12-01T14:59:59.202Z
          status: Created
          redirectUri: https://sandbox.tapico.io/account-access-start/18c68ff9-02af-4133-9166-454918ca63cc
        - id: 18c68ff9-02af-4133-9166-454918ca63cc
          application: 64611b71-5942-4aae-8c00-b75387ecaaed
          accountServicer: 318b1f12-6b25-491f-bd44-322782d54a9b
          authorisingUser: 26d9cacd-b727-4e81-baf8-e84b037d52eb
          createdDateTime: 2019-12-01T14:57:59.202Z
          expiryDate: 2019-12-01T15:57:59.202Z
          lastRefreshDateTime: 2019-12-01T14:59:59.202Z
          status: Created
          redirectUri: https://sandbox.tapico.io/account-access-start/18c68ff9-02af-4133-9166-454918ca63cc
        meta:
          nextCursor: Cn8KGwoEbmFtZRITGhFBbGxpZWQgSXJpc2ggQm
          correlationId: cfadcc06-d059-4a1c-a5c2-b9d102c40294
      properties:
        meta:
          $ref: '#/components/schemas/Metadata'
        data:
          items:
            $ref: '#/components/schemas/AccountAccessConsent'
          type: array
      required:
      - data
      - meta
      type: object
    AccountAccessConsentPostRequest:
      example:
        externalUserId: UserId123
      properties:
        applicationId:
          description: Unique identifier for Application.
          example: 9588b9e9-9f1d-4943-b547-70b809c30db8
          format: uuid
          title: Application ID
          type: string
        accountServicerId:
          description: |
            Identifies the account servicer where data is to be shared from.

            Optional - If omitted then a list of account servicers will be displayed for the user to select from. If provided then this step will be skipped.
          format: uuid
          type: string
        externalUserId:
          description: |
            System identifier that represents the user in your Application. This will be used later to reference the data which is consented to be shared by this user.
          example: UserId123
          type: string
        consentTypes:
          description: The list of data points being requested from the user. Optional
            - If omitted then will default to the full set configured against your
            Application.
          items:
            $ref: '#/components/schemas/ConsentTypeName'
          type: array
        callbackUri:
          description: |
            Where the user will be sent back to once the consent journey is complete. Should typically be a location on your Application. Optional - If omitted then will default to the value configured against your Application.
          example: https://wealthplatform.co.uk/user-dashboard
          format: uri
          type: string
        transactionFromDateTime:
          description: |
            The earliest point from which transaction data can be retrieved against this consent. This applies to all attempts to retrieve data against this consent.

            If this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction.
          format: date-time
          type: string
        transactionToDateTime:
          description: |
            The latest point from which transaction data can be retrieved against this consent. This applies to all attempts to retrieve data against this consent.

            If this is not populated, the end date will be open ended, and data will be returned until the latest available transaction.
          format: date-time
          type: string
        userIpAddress:
          description: |
            The user's IP address if the user is currently logged in with the calling Application.
          type: string
        daysBeforeExpirationNotification:
          description: |
            Number of days before consent expiration when your application will receive a notification to remind about the need to reconfirm the consent.
            This field is only used by Open Banking consents.
            Optional - If omitted then a default value of 10 days will be used to send a notification before expiration.
          type: integer
      required:
      - externalUserId
      type: object
    ConsentStatus:
      enum:
      - Authorised
      - Created
      - Expired
      - PendingRevoke
      - Rejected
      - Revoked
      example: Authorised
      type: string
    AuthorisingUsersSuccess:
      example:
        data:
        - id: 18c68ff9-02af-4133-9166-454918ca63cc
          userId: efdddd0d-1173-4aa0-9382-09a441ada8da
          externalUserId: UserId123
          application: eaffde65-dcbb-4a37-bfc1-957beea68dc3
          createdDateTime: 2021-11-20T09:12:28Z
          updatedDateTime: 2022-02-20T09:12:28Z
          identities:
          - servicerUserId: "54321"
            accountServicer: 18c68ff9-02af-4133-9166-454918ca63cc
            displayName: Irene Adler
            sourceUserType: Adviser
            servicingAgent:
              id: e4b2242a-9e85-4496-bceb-b10732af075e
              externalId: 002-0000051754
              secondaryExternalId: EI006690000001
              name: Irene Adler
              status: Active
              address:
                addressLines:
                - 221b Baker St
                - London
                postCode: NW1 6XE
                countryCode: GBR
              servicingOrganisation: 039f9547-51c5-4768-89a1-79f145ef5174
              nationalCompetentAuthority: FCA_GBR
              nationalCompetentAuthorityCode: "123456"
              accountServicer: 4b6272d0-face-413a-869a-76ff9ce036ae
        - id: 18c68ff9-02af-4133-9166-454918ca63cc
          userId: efdddd0d-1173-4aa0-9382-09a441ada8da
          externalUserId: UserId123
          application: eaffde65-dcbb-4a37-bfc1-957beea68dc3
          createdDateTime: 2021-11-20T09:12:28Z
          updatedDateTime: 2022-02-20T09:12:28Z
          identities:
          - servicerUserId: "54321"
            accountServicer: 18c68ff9-02af-4133-9166-454918ca63cc
            displayName: Irene Adler
            sourceUserType: Adviser
            servicingAgent:
              id: e4b2242a-9e85-4496-bceb-b10732af075e
              externalId: 002-0000051754
              secondaryExternalId: EI006690000001
              name: Irene Adler
              status: Active
              address:
                addressLines:
                - 221b Baker St
                - London
                postCode: NW1 6XE
                countryCode: GBR
              servicingOrganisation: 039f9547-51c5-4768-89a1-79f145ef5174
              nationalCompetentAuthority: FCA_GBR
              nationalCompetentAuthorityCode: "123456"
              accountServicer: 4b6272d0-face-413a-869a-76ff9ce036ae
        meta:
          nextCursor: Cn8KGwoEbmFtZRITGhFBbGxpZWQgSXJpc2ggQm
          correlationId: cfadcc06-d059-4a1c-a5c2-b9d102c40294
      properties:
        meta:
          $ref: '#/components/schemas/Metadata'
        data:
          items:
            $ref: '#/components/schemas/AuthorisingUser'
          type: array
      required:
      - data
      - meta
      type: object
    ServicingAgentsSuccess:
      example:
        data:
        - id: a19811e2-4dbc-40ff-9afb-279c945217ae
          externalId: 002-0000051754
          secondaryExternalId: EI006690000001
          name: Irene Adler
          status: Active
          address:
            addressLines:
            - 221b Baker St
            - London
            postCode: NW1 6XE
            countryCode: GBR
          nationalCompetentAuthority: FCA_GBR
          nationalCompetentAuthorityCode: "123456"
          lastChangeDetectedDateTime: 2019-11-25T09:12:28Z
          accountServicer:
            id: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            name: Financial Platform A
            isActive: true
            hasAppStore: false
            defaultExpiryDays: 90
            hasPaymentsInitiation: true
            logoUri: https://cdn.sandbox.tapico.io/images/logos/logo.png
          servicingOrganisation:
            id: 039f9547-51c5-4768-89a1-79f145ef5174
            externalId: 003-0000006429
            secondaryExternalId: EI00669
            name: Adler Advisers
            type: Adviser
            lastChangeDetectedDateTime: 2019-11-25T09:12:28Z
            address:
              addressLines:
              - 221b Baker St
              - London
              postCode: NW1 6XE
              countryCode: GBR
            accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
        - id: a19811e2-4dbc-40ff-9afb-279c945217ae
          externalId: 002-0000051754
          secondaryExternalId: EI006690000001
          name: Irene Adler
          status: Active
          address:
            addressLines:
            - 221b Baker St
            - London
            postCode: NW1 6XE
            countryCode: GBR
          nationalCompetentAuthority: FCA_GBR
          nationalCompetentAuthorityCode: "123456"
          lastChangeDetectedDateTime: 2019-11-25T09:12:28Z
          accountServicer:
            id: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            name: Financial Platform A
            isActive: true
            hasAppStore: false
            defaultExpiryDays: 90
            hasPaymentsInitiation: true
            logoUri: https://cdn.sandbox.tapico.io/images/logos/logo.png
          servicingOrganisation:
            id: 039f9547-51c5-4768-89a1-79f145ef5174
            externalId: 003-0000006429
            secondaryExternalId: EI00669
            name: Adler Advisers
            type: Adviser
            lastChangeDetectedDateTime: 2019-11-25T09:12:28Z
            address:
              addressLines:
              - 221b Baker St
              - London
              postCode: NW1 6XE
              countryCode: GBR
            accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
        meta:
          nextCursor: Cn8KGwoEbmFtZRITGhFBbGxpZWQgSXJpc2ggQm
          correlationId: cfadcc06-d059-4a1c-a5c2-b9d102c40294
      properties:
        meta:
          $ref: '#/components/schemas/Metadata'
        data:
          description: List of account servicing agents
          items:
            $ref: '#/components/schemas/ServicingAgentWithRelations'
          type: array
      required:
      - data
      - meta
      type: object
    ServicingOrganisationsSuccess:
      example:
        data:
        - id: 039f9547-51c5-4768-89a1-79f145ef5174
          externalId: 003-0000006429
          secondaryExternalId: EI00669
          name: Adler Advisers
          type: Adviser
          lastChangeDetectedDateTime: 2019-11-25T09:12:28Z
          address:
            addressLines:
            - 221b Baker St
            - London
            postCode: NW1 6XE
            countryCode: GBR
          accountServicer:
            id: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            name: Financial Platform A
            isActive: true
            hasAppStore: false
            defaultExpiryDays: 90
            hasPaymentsInitiation: true
            logoUri: https://cdn.sandbox.tapico.io/images/logos/logo.png
        - id: 039f9547-51c5-4768-89a1-79f145ef5174
          externalId: 003-0000006429
          secondaryExternalId: EI00669
          name: Adler Advisers
          type: Adviser
          lastChangeDetectedDateTime: 2019-11-25T09:12:28Z
          address:
            addressLines:
            - 221b Baker St
            - London
            postCode: NW1 6XE
            countryCode: GBR
          accountServicer:
            id: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            name: Financial Platform A
            isActive: true
            hasAppStore: false
            defaultExpiryDays: 90
            hasPaymentsInitiation: true
            logoUri: https://cdn.sandbox.tapico.io/images/logos/logo.png
        meta:
          nextCursor: Cn8KGwoEbmFtZRITGhFBbGxpZWQgSXJpc2ggQm
          correlationId: cfadcc06-d059-4a1c-a5c2-b9d102c40294
      properties:
        meta:
          $ref: '#/components/schemas/Metadata'
        data:
          description: List of account servicing organisations
          items:
            $ref: '#/components/schemas/ServicingOrganisationWithRelations'
          type: array
      required:
      - data
      - meta
      type: object
    CustomersSuccess:
      example:
        data:
        - id: 92b74392-1c5f-4660-8d0e-78963df8b9fe
          type: Individual
          title: Major
          givenName: Motoko
          middleName: Matsu
          familyName: Kusanagi
          dateOfBirth: 2004-01-20
          retirementAge: "65"
          retirementDate: 2064-03-22
          maritalStatus: Single
          countryOfBirth: JPN
          countriesOfCitizenship:
          - JPN
          - GBR
          gender: Female
          externalId: 015-0000358748
          secondaryExternalId: "358748"
          updatedDateTime: 2019-12-01T14:57:59Z
          lastChangeDetectedDateTime: 2019-11-01T09:12:28Z
          accountServicer: 4b6272d0-face-413a-869a-76ff9ce036ae
          emails:
          - email: motoko.kusanagi@tapico.io
            type: Personal
          phoneNumbers:
          - number: +447777777777
            type: Personal
            countryCode: GBR
          - number: +647777777777
            type: Home
            countryCode: NZL
          employmentDetails:
            status: Active
            occupation: Developer
            name: SCC company
            addressLines:
            - 221b Baker St
            - London
            postCode: 6jq OX$
            countryCode: GBR
          taxCountries:
          - countryCode: GBR
            isPrimary: true
            taxNumber: SP123456C
            type: NationalInsuranceNumber
          accountRoles:
          - id: 5ad6553a-1de4-40fc-af88-43e438019c6a
            updatedDateTime: 2021-1-01T01:01:01Z
            roleType: Individual
            roleTypes:
            - Individual
            customer: 92b74392-1c5f-4660-8d0e-78963df8b9fe
            account:
              id: 18c68ff9-02af-4133-9166-454918ca63cc
              accountName: Brad's Account
              baseCurrency: GBP
              businessOrPersonal: Personal
              externalId: XYZ000001-001
              sourceType: CurrentAccount
              subtype: CurrentAccount
              type: Deposit
              updatedDateTime: 2019-11-20T09:12:28Z
              lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
              accountServicer: 4b6272d0-face-413a-869a-76ff9ce036ae
              agentIdentifiers:
              - identifier: 300053
                identifierType: SortCode
              identifiers:
              - identifier: 12345678
                identifierType: AccountNumber
        - id: 79a054fe-3597-491f-aa79-d3c072fe24ce
          type: Organisation
          externalId: 015-0000358748
          secondaryExternalId: "358748"
          name: Acme Co
          organisationType: Company
          registrationNumber: 25ad51
          registrationDate: 2001-01-01
          countryOfRegistration: GBR
          leiCode: 33321153OF5F3MYKUV33
          status: Active
          accountServicer: 4b6272d0-face-413a-869a-76ff9ce036ae
          updatedDateTime: 2019-12-01T14:57:59Z
          lastChangeDetectedDateTime: 2019-11-01T09:12:28Z
          emails:
          - email: motoko.kusanagi@tapico.io
            type: Personal
          phoneNumbers:
          - number: +447777777777
            type: Personal
          - number: +447777777777
            type: Home
          taxCountries:
          - countryCode: GBR
          accountRoles:
          - id: 5ad6553a-1de4-40fc-af88-43e438019c6a
            updatedDateTime: 2021-1-01T01:01:01Z
            roleType: Director
            roleTypes:
            - Director
            - Shareholder
            customer: 92b74392-1c5f-4660-8d0e-78963df8b9fe
            account:
              id: 18c68ff9-02af-4133-9166-454918ca63cc
              accountName: Trading Account
              baseCurrency: GBP
              businessOrPersonal: Business
              externalId: XYZ000001-001
              sourceType: GIA
              subtype: Investment
              type: Investment
              updatedDateTime: 2019-11-20T09:12:28Z
              lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
              accountServicer: 4b6272d0-face-413a-869a-76ff9ce036ae
              agentIdentifiers:
              - identifier: 300053
                identifierType: SortCode
              identifiers:
              - identifier: 12345678
                identifierType: AccountNumber
        meta:
          correlationId: cfadcc06-d059-4a1c-a5c2-b9d102c40294
      oneOf:
      - $ref: '#/components/schemas/Individual_Customers'
      - $ref: '#/components/schemas/Organisation_Customers'
      required:
      - data
      - meta
    CustomerType:
      enum:
      - NotSpecified
      - Individual
      - Organisation
      type: string
    AccountGroupsSuccess:
      example:
        data:
        - id: 80eafac6-33db-478a-bcc6-adda00c9bf93
          externalId: 001-0000000001
          secondaryExternalId: XYZ000001
          accountName: John Smith - Invididual
          accountServicer:
            id: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            name: Financial Platform A
            isActive: true
            hasAppStore: false
            defaultExpiryDays: 90
            hasPaymentsInitiation: true
            logoUri: https://cdn.sandbox.tapico.io/images/logos/logo.png
          servicingAgent:
            id: a19811e2-4dbc-40ff-9afb-279c945217ae
            externalId: 002-0000051754
            secondaryExternalId: EI006690000001
            name: Irene Adler
            status: Active
            address:
              addressLines:
              - 221b Baker St
              - London
              postCode: NW1 6XE
              countryCode: GBR
            servicingOrganisation: 039f9547-51c5-4768-89a1-79f145ef5174
            nationalCompetentAuthority: FCA_GBR
            nationalCompetentAuthorityCode: "123456"
            accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            lastChangeDetectedDateTime: 2019-11-25T09:12:28Z
          type: Individual
          accounts:
          - id: 18c68ff9-02af-4133-9166-454918ca63cc
            externalId: 000-0000000001
            secondaryExternalId: XYZ000001-001
            accountName: John Smith - Stocks and Shares ISA
            accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            baseCurrency: GBP
            businessOrPersonal: Personal
            sourceType: GIA
            subtype: InvestmentAccount
            type: Investment
            openingDate: 2010-01-01
            updatedDateTime: 2019-11-20T09:12:28Z
            lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
            accountGroup: 80eafac6-33db-478a-bcc6-adda00c9bf93
            agentIdentifiers:
            - identifier: 300053
              identifierType: SortCode
            identifiers:
            - identifier: 12345678
              identifierType: AccountNumber
            servicingAgent: a19811e2-4dbc-40ff-9afb-279c945217ae
          externalAccounts:
          - id: 12b6452c-85bd-4237-8938-1f95a1521bcb
            externalId: "157065"
            accountName: John Smith - Current Account
            accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            servicingAgent: a19811e2-4dbc-40ff-9afb-279c945217ae
            accountGroup: 80eafac6-33db-478a-bcc6-adda00c9bf93
            baseCurrency: GBP
            status: Active
            verificationStatus: Passed
            updatedDateTime: 2019-11-20T09:12:28Z
            lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
            agentIdentifiers:
            - identifier: 200042
              identifierType: SortCode
            identifiers:
            - identifier: 87654321
              identifierType: AccountNumber
          openingDate: 2010-01-01
          updatedDateTime: 2019-11-20T09:12:28Z
          lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
          roles:
          - id: 5ad6553a-1de4-40fc-af88-43e438019c6a
            updatedDateTime: 2021-1-01T01:01:01Z
            roleType: Individual
            roleTypes:
            - Individual
            accountGroupId: 80eafac6-33db-478a-bcc6-adda00c9bf93
            customer:
              id: 92b74392-1c5f-4660-8d0e-78963df8b9fe
              type: Individual
              givenName: Motoko
              familyName: Kusanagi
              dateOfBirth: 2004-01-20
              externalId: 015-0000358748
              secondaryExternalId: "358748"
              updatedDateTime: 2019-12-01T14:57:59Z
              lastChangeDetectedDateTime: 2019-11-01T09:12:28Z
              accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
              emails:
              - email: motoko.kusanagi@tapico.io
                type: Personal
              phoneNumbers:
              - number: +447777777777
                type: Personal
              - number: +447777777777
                type: Home
        - id: 80eafac6-33db-478a-bcc6-adda00c9bf93
          externalId: 001-0000000001
          secondaryExternalId: XYZ000001
          accountName: John Smith - Invididual
          accountServicer:
            id: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            name: Financial Platform A
            isActive: true
            hasAppStore: false
            defaultExpiryDays: 90
            hasPaymentsInitiation: true
            logoUri: https://cdn.sandbox.tapico.io/images/logos/logo.png
          servicingAgent:
            id: a19811e2-4dbc-40ff-9afb-279c945217ae
            externalId: 002-0000051754
            secondaryExternalId: EI006690000001
            name: Irene Adler
            status: Active
            address:
              addressLines:
              - 221b Baker St
              - London
              postCode: NW1 6XE
              countryCode: GBR
            servicingOrganisation: 039f9547-51c5-4768-89a1-79f145ef5174
            nationalCompetentAuthority: FCA_GBR
            nationalCompetentAuthorityCode: "123456"
            accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            lastChangeDetectedDateTime: 2019-11-25T09:12:28Z
          type: Individual
          accounts:
          - id: 18c68ff9-02af-4133-9166-454918ca63cc
            externalId: 000-0000000001
            secondaryExternalId: XYZ000001-001
            accountName: John Smith - Stocks and Shares ISA
            accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            baseCurrency: GBP
            businessOrPersonal: Personal
            sourceType: GIA
            subtype: InvestmentAccount
            type: Investment
            openingDate: 2010-01-01
            updatedDateTime: 2019-11-20T09:12:28Z
            lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
            accountGroup: 80eafac6-33db-478a-bcc6-adda00c9bf93
            agentIdentifiers:
            - identifier: 300053
              identifierType: SortCode
            identifiers:
            - identifier: 12345678
              identifierType: AccountNumber
            servicingAgent: a19811e2-4dbc-40ff-9afb-279c945217ae
          externalAccounts:
          - id: 12b6452c-85bd-4237-8938-1f95a1521bcb
            externalId: "157065"
            accountName: John Smith - Current Account
            accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            servicingAgent: a19811e2-4dbc-40ff-9afb-279c945217ae
            accountGroup: 80eafac6-33db-478a-bcc6-adda00c9bf93
            baseCurrency: GBP
            status: Active
            verificationStatus: Passed
            updatedDateTime: 2019-11-20T09:12:28Z
            lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
            agentIdentifiers:
            - identifier: 200042
              identifierType: SortCode
            identifiers:
            - identifier: 87654321
              identifierType: AccountNumber
          openingDate: 2010-01-01
          updatedDateTime: 2019-11-20T09:12:28Z
          lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
          roles:
          - id: 5ad6553a-1de4-40fc-af88-43e438019c6a
            updatedDateTime: 2021-1-01T01:01:01Z
            roleType: Individual
            roleTypes:
            - Individual
            accountGroupId: 80eafac6-33db-478a-bcc6-adda00c9bf93
            customer:
              id: 92b74392-1c5f-4660-8d0e-78963df8b9fe
              type: Individual
              givenName: Motoko
              familyName: Kusanagi
              dateOfBirth: 2004-01-20
              externalId: 015-0000358748
              secondaryExternalId: "358748"
              updatedDateTime: 2019-12-01T14:57:59Z
              lastChangeDetectedDateTime: 2019-11-01T09:12:28Z
              accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
              emails:
              - email: motoko.kusanagi@tapico.io
                type: Personal
              phoneNumbers:
              - number: +447777777777
                type: Personal
              - number: +447777777777
                type: Home
        meta:
          nextCursor: Cn8KGwoEbmFtZRITGhFBbGxpZWQgSXJpc2ggQm
          correlationId: cfadcc06-d059-4a1c-a5c2-b9d102c40294
      properties:
        meta:
          $ref: '#/components/schemas/Metadata'
        data:
          items:
            $ref: '#/components/schemas/AccountGroupWithRelations'
          type: array
      required:
      - data
      - meta
      type: object
    AccountsSuccess:
      example:
        data:
        - id: 18c68ff9-02af-4133-9166-454918ca63cc
          externalId: 000-0000000001
          secondaryExternalId: XYZ000001-001
          accountName: John Smith - Stocks and Shares ISA
          accountServicer:
            id: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            name: Financial Platform A
            isActive: true
            hasAppStore: false
            defaultExpiryDays: 90
            hasPaymentsInitiation: true
            logoUri: https://cdn.sandbox.tapico.io/images/logos/logo.png
          servicingAgent:
            id: a19811e2-4dbc-40ff-9afb-279c945217ae
            externalId: 002-0000051754
            secondaryExternalId: EI006690000001
            name: Irene Adler
            status: Active
            address:
              addressLines:
              - 221b Baker St
              - London
              postCode: NW1 6XE
              countryCode: GBR
            servicingOrganisation: 039f9547-51c5-4768-89a1-79f145ef5174
            nationalCompetentAuthority: FCA_GBR
            nationalCompetentAuthorityCode: "123456"
            accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            lastChangeDetectedDateTime: 2019-11-25T09:12:28Z
          accountGroup:
            id: 80eafac6-33db-478a-bcc6-adda00c9bf93
            externalId: 001-0000000001
            secondaryExternalId: XYZ000001
            accountName: John Smith - Invididual
            accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            type: Individual
            openingDate: 2010-01-01
            updatedDateTime: 2019-11-20T09:12:28Z
            lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
          baseCurrency: GBP
          businessOrPersonal: Personal
          sourceType: GIA
          subtype: InvestmentAccount
          type: Investment
          openingDate: 2010-01-01
          updatedDateTime: 2019-11-20T09:12:28Z
          lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
          agentIdentifiers:
          - identifier: 300053
            identifierType: SortCode
          identifiers:
          - identifier: 12345678
            identifierType: AccountNumber
          roles:
          - id: 5ad6553a-1de4-40fc-af88-43e438019c6a
            updatedDateTime: 2021-1-01T01:01:01Z
            roleType: Individual
            roleTypes:
            - Individual
            account: 18c68ff9-02af-4133-9166-454918ca63cc
            customer:
              id: 92b74392-1c5f-4660-8d0e-78963df8b9fe
              type: Individual
              givenName: Motoko
              familyName: Kusanagi
              dateOfBirth: 2004-01-20
              externalId: 015-0000358748
              secondaryExternalId: "358748"
              updatedDateTime: 2019-12-01T14:57:59Z
              lastChangeDetectedDateTime: 2019-11-01T09:12:28Z
              accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
              emails:
              - email: motoko.kusanagi@tapico.io
                type: Personal
              phoneNumbers:
              - number: +447777777777
                type: Personal
              - number: +447777777777
                type: Home
        - id: 18c68ff9-02af-4133-9166-454918ca63cc
          externalId: 000-0000000001
          secondaryExternalId: XYZ000001-001
          accountName: John Smith - Stocks and Shares ISA
          accountServicer:
            id: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            name: Financial Platform A
            isActive: true
            hasAppStore: false
            defaultExpiryDays: 90
            hasPaymentsInitiation: true
            logoUri: https://cdn.sandbox.tapico.io/images/logos/logo.png
          servicingAgent:
            id: a19811e2-4dbc-40ff-9afb-279c945217ae
            externalId: 002-0000051754
            secondaryExternalId: EI006690000001
            name: Irene Adler
            status: Active
            address:
              addressLines:
              - 221b Baker St
              - London
              postCode: NW1 6XE
              countryCode: GBR
            servicingOrganisation: 039f9547-51c5-4768-89a1-79f145ef5174
            nationalCompetentAuthority: FCA_GBR
            nationalCompetentAuthorityCode: "123456"
            accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            lastChangeDetectedDateTime: 2019-11-25T09:12:28Z
          accountGroup:
            id: 80eafac6-33db-478a-bcc6-adda00c9bf93
            externalId: 001-0000000001
            secondaryExternalId: XYZ000001
            accountName: John Smith - Invididual
            accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            type: Individual
            openingDate: 2010-01-01
            updatedDateTime: 2019-11-20T09:12:28Z
            lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
          baseCurrency: GBP
          businessOrPersonal: Personal
          sourceType: GIA
          subtype: InvestmentAccount
          type: Investment
          openingDate: 2010-01-01
          updatedDateTime: 2019-11-20T09:12:28Z
          lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
          agentIdentifiers:
          - identifier: 300053
            identifierType: SortCode
          identifiers:
          - identifier: 12345678
            identifierType: AccountNumber
          roles:
          - id: 5ad6553a-1de4-40fc-af88-43e438019c6a
            updatedDateTime: 2021-1-01T01:01:01Z
            roleType: Individual
            roleTypes:
            - Individual
            account: 18c68ff9-02af-4133-9166-454918ca63cc
            customer:
              id: 92b74392-1c5f-4660-8d0e-78963df8b9fe
              type: Individual
              givenName: Motoko
              familyName: Kusanagi
              dateOfBirth: 2004-01-20
              externalId: 015-0000358748
              secondaryExternalId: "358748"
              updatedDateTime: 2019-12-01T14:57:59Z
              lastChangeDetectedDateTime: 2019-11-01T09:12:28Z
              accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
              emails:
              - email: motoko.kusanagi@tapico.io
                type: Personal
              phoneNumbers:
              - number: +447777777777
                type: Personal
              - number: +447777777777
                type: Home
        meta:
          nextCursor: Cn8KGwoEbmFtZRITGhFBbGxpZWQgSXJpc2ggQm
          correlationId: cfadcc06-d059-4a1c-a5c2-b9d102c40294
      properties:
        meta:
          $ref: '#/components/schemas/Metadata'
        data:
          items:
            $ref: '#/components/schemas/AccountWithRelations'
          type: array
      required:
      - data
      - meta
      type: object
    ExternalAccountsSuccess:
      example:
        data:
        - id: 12b6452c-85bd-4237-8938-1f95a1521bcb
          externalId: "157065"
          accountName: John Smith - Current Account
          accountServicer:
            id: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            name: Financial Platform A
            isActive: true
            hasAppStore: false
            defaultExpiryDays: 90
            hasPaymentsInitiation: true
            logoUri: https://cdn.sandbox.tapico.io/images/logos/logo.png
          servicingAgent:
            id: a19811e2-4dbc-40ff-9afb-279c945217ae
            externalId: 002-0000051754
            secondaryExternalId: EI006690000001
            name: Irene Adler
            status: Active
            address:
              addressLines:
              - 221b Baker St
              - London
              postCode: NW1 6XE
              countryCode: GBR
            servicingOrganisation: 039f9547-51c5-4768-89a1-79f145ef5174
            nationalCompetentAuthority: FCA_GBR
            nationalCompetentAuthorityCode: "123456"
            accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            lastChangeDetectedDateTime: 2019-11-25T09:12:28Z
          accountGroup:
            id: 80eafac6-33db-478a-bcc6-adda00c9bf93
            externalId: 001-0000000001
            secondaryExternalId: XYZ000001
            accountName: John Smith - Invididual
            accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            type: Individual
            openingDate: 2010-01-01
            updatedDateTime: 2019-11-20T09:12:28Z
            lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
          baseCurrency: GBP
          type: Deposit
          subType: CurrentAccount
          sourceType: BankAccount
          status: Active
          verificationStatus: Passed
          updatedDateTime: 2019-11-20T09:12:28Z
          lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
          agentIdentifiers:
          - identifier: 200042
            identifierType: SortCode
          identifiers:
          - identifier: 87654321
            identifierType: AccountNumber
        - id: 12b6452c-85bd-4237-8938-1f95a1521bcb
          externalId: "157065"
          accountName: John Smith - Current Account
          accountServicer:
            id: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            name: Financial Platform A
            isActive: true
            hasAppStore: false
            defaultExpiryDays: 90
            hasPaymentsInitiation: true
            logoUri: https://cdn.sandbox.tapico.io/images/logos/logo.png
          servicingAgent:
            id: a19811e2-4dbc-40ff-9afb-279c945217ae
            externalId: 002-0000051754
            secondaryExternalId: EI006690000001
            name: Irene Adler
            status: Active
            address:
              addressLines:
              - 221b Baker St
              - London
              postCode: NW1 6XE
              countryCode: GBR
            servicingOrganisation: 039f9547-51c5-4768-89a1-79f145ef5174
            nationalCompetentAuthority: FCA_GBR
            nationalCompetentAuthorityCode: "123456"
            accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            lastChangeDetectedDateTime: 2019-11-25T09:12:28Z
          accountGroup:
            id: 80eafac6-33db-478a-bcc6-adda00c9bf93
            externalId: 001-0000000001
            secondaryExternalId: XYZ000001
            accountName: John Smith - Invididual
            accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            type: Individual
            openingDate: 2010-01-01
            updatedDateTime: 2019-11-20T09:12:28Z
            lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
          baseCurrency: GBP
          type: Deposit
          subType: CurrentAccount
          sourceType: BankAccount
          status: Active
          verificationStatus: Passed
          updatedDateTime: 2019-11-20T09:12:28Z
          lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
          agentIdentifiers:
          - identifier: 200042
            identifierType: SortCode
          identifiers:
          - identifier: 87654321
            identifierType: AccountNumber
        meta:
          nextCursor: Cn8KGwoEbmFtZRITGhFBbGxpZWQgSXJpc2ggQm
          correlationId: cfadcc06-d059-4a1c-a5c2-b9d102c40294
      properties:
        meta:
          $ref: '#/components/schemas/Metadata'
        data:
          items:
            $ref: '#/components/schemas/ExternalAccountWithRelations'
          type: array
      required:
      - data
      - meta
      type: object
    HoldingsSuccess:
      example:
        data:
        - instrument:
            id: AAPL
            displayName: Apple Inc.
            isin: US0378331005
            sedol: "2046251"
            assetClass: Equity
            currency: USD
            price: 267.09
            priceType: Last
            priceAsAtDateTime: 2019-12-11
          updatedDateTime: 2019-11-20T09:12:28Z
          quantity: 18
          unsettledQuantity: 10
          availableQuantity: 8
          value:
            amount: 3591.17
            currency: GBP
          baseCurrencyCost:
            amount: 193.96
            currency: GBP
        - instrument:
            id: BHP
            displayName: BHP Group PLC
            isin: GB00BH0P3Z91
            sedol: BH0P3Z9
            assetClass: Equity
            currency: GBP
            price: 1682.4
            priceType: Last
            priceAsAtDate: 2019-12-11
          updatedDateTime: 2019-11-20T09:12:28Z
          quantity: 20
          unsettledQuantity: 0
          availableQuantity: 20
          value:
            amount: 33648.0
            currency: GBP
          baseCurrencyCost:
            amount: 495.55
            currency: GBP
        - instrument:
            id: GBP
            displayName: Pound sterling
            assetClass: Currency
          updatedDateTime: 2019-11-20T09:12:28Z
          quantity: 1376.96
          unsettledQuantity: 0
          availableQuantity: 1376.96
          value:
            amount: 1376.96
            currency: GBP
        meta:
          correlationId: cfadcc06-d059-4a1c-a5c2-b9d102c40294
      properties:
        meta:
          $ref: '#/components/schemas/Metadata'
        data:
          items:
            $ref: '#/components/schemas/CompositeHolding'
          type: array
      required:
      - data
      - meta
      type: object
    TransactionsSuccess:
      example:
        data:
        - bookedDateTime: 2020-07-20T00:00:00.000Z
          id: 56727390-c6d8-4be6-a4ca-97e756252d93
          externalId: FnzCash-1573807281
          secondaryExternalId: Fee80661380
          narrative: BP PLC
          price: 5.37970297
          quantity: 101
          status: Booked
          type: ProductTransaction
          subType: BuyTrade
          sourceType: BuyTrade
          valueDate: 2020-07-20T00:00:00.000Z
          updatedDateTime: 2021-01-15T14:57:59
          lastChangeDetectedDateTime: 2021-01-10T09:12:28Z
          instrument: 4c19d374-d60a-4b5a-945b-8c12910f47c9
          sourceInstrument: a252bc27-41f0-41f0-929c-1b5bddc684a4
        - bookedDateTime: 2020-07-20T00:00:00.000Z
          id: 56727390-c6d8-4be6-a4ca-97e756252d93
          externalId: FnzCash-1573807281
          secondaryExternalId: Fee80661380
          narrative: BP PLC
          price: 5.37970297
          quantity: 101
          status: Booked
          type: ProductTransaction
          subType: BuyTrade
          sourceType: BuyTrade
          valueDate: 2020-07-20T00:00:00.000Z
          updatedDateTime: 2021-01-15T14:57:59
          lastChangeDetectedDateTime: 2021-01-10T09:12:28Z
          instrument: 4c19d374-d60a-4b5a-945b-8c12910f47c9
          sourceInstrument: a252bc27-41f0-41f0-929c-1b5bddc684a4
        meta:
          nextCursor: Cn8KGwoEbmFtZRITGhFBbGxpZWQgSXJpc2ggQm
          correlationId: cfadcc06-d059-4a1c-a5c2-b9d102c40294
      properties:
        meta:
          $ref: '#/components/schemas/Metadata'
        data:
          items:
            $ref: '#/components/schemas/Transaction'
          type: array
      required:
      - data
      - meta
      type: object
    DateTimeFilter:
      description: Advanced Date Filter Object
      oneOf:
      - $ref: '#/components/schemas/Advanced_Date_Filter'
      - description: Date-time equality
        format: date-time
        title: Date Equality
        type: string
      title: Date Time Filter Object
    TransactionType:
      description: Primary categorisation of transaction types. This provides a high-level
        category of the transactions. More granular categorisation is specified by
        TransactionSubType.  Source transaction types from account servicers can vary
        widely, they are normalised and mapped to one of these values.
      enum:
      - NotSpecified
      - CashTransaction
      - CorporateAction
      - Other
      - ProductTransaction
      type: string
    TransactionSubType:
      description: Subcategorisation of transaction types. This provides a more specific
        category of transactions that is more granular than TransactionType.  Source
        transaction types from account servicers can vary widely, they are normalised
        and mapped to one of these values.
      enum:
      - NotSpecified
      - Adjustment
      - BankTransaction
      - BonusIssue
      - BuyTrade
      - Charge
      - Compensation
      - Consolidation
      - Conversion
      - Correction
      - Coupon
      - Delisting
      - Demerger
      - Deposit
      - Distribution
      - Dividend
      - DRP
      - EqualisationPayment
      - ExternalTransfer
      - Extinction
      - FundNameChange
      - Interest
      - InternalTransfer
      - IPO
      - ManagedFundTransaction
      - Merger
      - OverUnderTrade
      - Rebate
      - ReturnOfCapital
      - RightsIssue
      - SellTrade
      - StockOffer
      - SwitchTrade
      - TaxPayable
      - TaxRelief
      - TenderOffer
      - TransferIn
      - TransferOut
      - Withdrawal
      type: string
    RegularPaymentsSuccess:
      example:
        data:
        - id: b3b63095-eada-4fc3-b189-cab4a573a59d
          externalId: "1234"
          type: Deposit
          method: DirectDebit
          frequency: Monthly
          amount: 1000
          currency: GBP
          startDate: 2020-01-01
          nextDate: 2020-02-01
          updatedDateTime: 2021-01-15T14:57:59
          lastChangeDetectedDateTime: 2021-01-10T09:12:28Z
        - id: b3b63095-eada-4fc3-b189-cab4a573a59d
          externalId: "1234"
          type: Deposit
          method: DirectDebit
          frequency: Monthly
          amount: 1000
          currency: GBP
          startDate: 2020-01-01
          nextDate: 2020-02-01
          updatedDateTime: 2021-01-15T14:57:59
          lastChangeDetectedDateTime: 2021-01-10T09:12:28Z
        meta:
          nextCursor: Cn8KGwoEbmFtZRITGhFBbGxpZWQgSXJpc2ggQm
          correlationId: cfadcc06-d059-4a1c-a5c2-b9d102c40294
      properties:
        meta:
          $ref: '#/components/schemas/Metadata'
        data:
          items:
            $ref: '#/components/schemas/RegularPayment'
          type: array
      required:
      - data
      - meta
      type: object
    CashBalancesSuccess:
      example:
        data:
        - currency: GBP
          available: 37600.54
          current: 38420.33
          updatedDateTime: 2019-11-20T09:12:28Z
          lastChangeDetectedDateTime: 2019-11-15T09:12:28Z
        - currency: USD
          available: 12360.98
          current: 12360.98
          updatedDateTime: 2019-11-20T09:12:28Z
          lastChangeDetectedDateTime: 2019-11-15T09:12:28Z
        meta:
          correlationId: cfadcc06-d059-4a1c-a5c2-b9d102c40294
      properties:
        meta:
          $ref: '#/components/schemas/Metadata'
        data:
          items:
            $ref: '#/components/schemas/Balance'
          type: array
      required:
      - data
      - meta
      type: object
    DocumentsSuccess:
      example:
        data:
        - reference: last statement
          fileName: regular-statement.pdf
          startDateTime: 2021-04-22T00:00:00Z
          displayName: Regular Statement
          isRead: true
          format:
            extension: pdf
            mediaType: application/pdf
          id: "1093"
          type:
            name: Regular Statement
            id: "68"
          endDateTime: 2021-05-21T23:59:59Z
          addedOn: 2000-01-23T04:56:07.000+00:00
        - reference: last statement
          fileName: regular-statement.pdf
          startDateTime: 2021-04-22T00:00:00Z
          displayName: Regular Statement
          isRead: true
          format:
            extension: pdf
            mediaType: application/pdf
          id: "1093"
          type:
            name: Regular Statement
            id: "68"
          endDateTime: 2021-05-21T23:59:59Z
          addedOn: 2000-01-23T04:56:07.000+00:00
        meta:
          nextCursor: Cn8KGwoEbmFtZRITGhFBbGxpZWQgSXJpc2ggQm
          correlationId: cfadcc06-d059-4a1c-a5c2-b9d102c40294
      properties:
        meta:
          $ref: '#/components/schemas/Metadata'
        data:
          items:
            $ref: '#/components/schemas/Document'
          type: array
      required:
      - data
      - meta
      type: object
    DocumentCategory:
      description: Represents the category of the Document. For Open Banking documents,
        the only category available is Statement
      enum:
      - NotSpecified
      - Confirmations
      - DirecPortal
      - Document
      - Form
      - FundFactSheet
      - Illustration
      - OrdersAndTrades
      - Other
      - Report
      - Statement
      type: string
    DocumentStatus:
      description: Represents the status of the Document in the account servicer source
        system. Not available for Open Banking documents
      enum:
      - NotSpecified
      - Requested
      - Created
      - SentClient
      - Failed
      type: string
    CustomerAddressesSuccess:
      example:
        data:
        - id: 125c2c4a-e45a-40f7-941f-e03ffb8310fd
          externalId: "1001"
          customerId: 22c68ff9-02af-4133-9166-454958ca63ab
          addressLines:
          - 221b Baker St
          - London
          postCode: NW1 6XE
          countryCode: GBR
          updatedDateTime: 2019-11-25T09:12:28Z
          lastChangeDetectedDateTime: 2019-11-20T09:12:28Z
        - id: 125c2c4a-e45a-40f7-941f-e03ffb8310fd
          externalId: "1001"
          customerId: 22c68ff9-02af-4133-9166-454958ca63ab
          addressLines:
          - 221b Baker St
          - London
          postCode: NW1 6XE
          countryCode: GBR
          updatedDateTime: 2019-11-25T09:12:28Z
          lastChangeDetectedDateTime: 2019-11-20T09:12:28Z
        meta:
          nextCursor: Cn8KGwoEbmFtZRITGhFBbGxpZWQgSXJpc2ggQm
          correlationId: cfadcc06-d059-4a1c-a5c2-b9d102c40294
      properties:
        meta:
          $ref: '#/components/schemas/Metadata'
        data:
          items:
            $ref: '#/components/schemas/CustomerAddress'
          type: array
      required:
      - data
      - meta
      type: object
    BeneficiariesSuccess:
      example:
        data:
        - id: b7081ff6-463a-44ff-97e0-65e4bf94be2a
          accountId: 18c68ff9-02af-4133-9166-454918ca63cc
          beneficiaryId: Ben1
          reference: Towbar Club
          updatedDateTime: 2019-11-20T09:12:28Z
          lastChangeDetectedDateTime: 2019-11-15T09:12:28Z
          beneficiaryAccount:
            identifierType: IBAN
            identifier: 80200112345678
            name: Mrs Juniper
            secondaryIdentification: 76878725
          beneficiaryAgent:
            identifierType: BIC
            identifier: 2149
            name: bank efe
            postalAddress:
              addressType: Business
              department: Technology
              subDepartment: Development
              streetName: Lombard street
              buildingNumber: 104
              postCode: B17 9EY
              townName: Birmingham
              countrySubDivision: West midlands
              country: GB
              addressLines:
              - Gordon Road flat number 2
              - Gordon Road flat number 2
        - id: b7081ff6-463a-44ff-97e0-65e4bf94be2a
          accountId: 18c68ff9-02af-4133-9166-454918ca63cc
          beneficiaryId: Ben1
          reference: Towbar Club
          updatedDateTime: 2019-11-20T09:12:28Z
          lastChangeDetectedDateTime: 2019-11-15T09:12:28Z
          beneficiaryAccount:
            identifierType: IBAN
            identifier: 80200112345678
            name: Mrs Juniper
            secondaryIdentification: 76878725
          beneficiaryAgent:
            identifierType: BIC
            identifier: 2149
            name: bank efe
            postalAddress:
              addressType: Business
              department: Technology
              subDepartment: Development
              streetName: Lombard street
              buildingNumber: 104
              postCode: B17 9EY
              townName: Birmingham
              countrySubDivision: West midlands
              country: GB
              addressLines:
              - Gordon Road flat number 2
              - Gordon Road flat number 2
        meta:
          nextCursor: Cn8KGwoEbmFtZRITGhFBbGxpZWQgSXJpc2ggQm
          correlationId: cfadcc06-d059-4a1c-a5c2-b9d102c40294
      properties:
        meta:
          $ref: '#/components/schemas/Metadata'
        data:
          items:
            $ref: '#/components/schemas/Beneficiary'
          type: array
      required:
      - data
      - meta
      type: object
    InstrumentsSuccess:
      example:
        data:
        - id: 4d200794-490e-4866-a57d-720bb26b9597
          displayName: BlackRock Cash A Acc
          isin: GB0005849467
          sedol: 584946.0
          type: ManagedFund
          currency: GBP
          price: 2.3868
        - id: 4d200794-490e-4866-a57d-720bb26b9597
          displayName: BlackRock Cash A Acc
          isin: GB0005849467
          sedol: 584946.0
          type: ManagedFund
          currency: GBP
          price: 2.3868
        meta:
          nextCursor: Cn8KGwoEbmFtZRITGhFBbGxpZWQgSXJpc2ggQm
          correlationId: cfadcc06-d059-4a1c-a5c2-b9d102c40294
      properties:
        meta:
          $ref: '#/components/schemas/Metadata'
        data:
          items:
            $ref: '#/components/schemas/Instrument'
          type: array
      required:
      - data
      - meta
      type: object
    AccountServicersSuccess:
      example:
        data:
        - null
        - null
        meta:
          nextCursor: Cn8KGwoEbmFtZRITGhFBbGxpZWQgSXJpc2ggQm
          correlationId: cfadcc06-d059-4a1c-a5c2-b9d102c40294
      properties:
        meta:
          $ref: '#/components/schemas/Metadata'
        data:
          items:
            $ref: '#/components/schemas/AccountServicer'
          type: array
      required:
      - data
      - meta
      type: object
    AccountServicerPostRequest:
      allOf:
      - $ref: '#/components/schemas/AccountServicerBase'
    PaymentInstructionsSuccess:
      example:
        data:
        - id: 7e5ddfa3-d84a-4ccc-8ed6-07a84002e518
          accountServicerPaymentId: c5e85c67-490a-4c3a-8bcb-7419935313d5
          amount: 150.54
          currency: GBP
          executionDate: 2019-11-12
          paymentMethod: Faster
          endToEndIdentification: PaymentIdent123
          externalCustomerId: CustomerABC
          remitterReference: User supplied ref
          remittanceInformation: Info to aid matching/reconciliation
          callbackUri: https://wealthplatform.co.uk/customer-dashboard
          creditorAccount:
            name: Destination Account Name
            accountIdentifier:
              identifier: 12345678
              identifierType: AccountNumber
            agentIdentifier:
              identifier: 300053
              identifierType: SortCode
          debtorAccount:
            name: Source Account Name
            accountIdentifier:
              identifier: 12345678
              identifierType: AccountNumber
            agentIdentifier:
              identifier: KBIMGB2L
              identifierType: BIC
          accountServicerId: ecedb699-7580-42a7-ac69-2465e83c810d
          applicationId: 1b00de1a-af76-49f2-b004-a951474e0d5e
        meta:
          totalResults: 1
          correlationId: cfadcc06-d059-4a1c-a5c2-b9d102c40294
      properties:
        meta:
          $ref: '#/components/schemas/Metadata'
        data:
          items:
            $ref: '#/components/schemas/PaymentInstruction'
          type: array
      required:
      - data
      - meta
      type: object
    PaymentInstructionPostRequest:
      allOf:
      - $ref: '#/components/schemas/PaymentInstructionPostRequest_allOf'
      - $ref: '#/components/schemas/PaymentInstructionBase'
      example:
        amount: 150.54
        currency: GBP
        executionDate: 2019-11-12
        paymentMethod: Faster
        endToEndIdentification: PaymentIdent123
        externalCustomerId: CustomerABC
        remitterReference: User supplied ref
        remittanceInformation: Info to aid matching/reconciliation
        callbackUri: https://wealthplatform.co.uk/customer-dashboard
        creditorAccount:
          name: Destination Account Name
          accountIdentifier:
            identifier: 12345678
            identifierType: AccountNumber
          agentIdentifier:
            identifier: 300053
            identifierType: SortCode
        debtorAccount:
          name: Source Account Name
          accountIdentifier:
            identifier: 12345678
            identifierType: AccountNumber
          agentIdentifier:
            identifier: KBIMGB2L
            identifierType: BIC
        accountServicerId: ecedb699-7580-42a7-ac69-2465e83c810d
        applicationId: 1b00de1a-af76-49f2-b004-a951474e0d5e
    PaymentIsoStatus:
      enum:
      - Pending
      - Rejected
      - AcceptedSettlementInProcess
      - AcceptedSettlementCompleted
      - AcceptedWithoutPosting
      - AcceptedCreditSettlementCompleted
      type: string
    InstructionStatus:
      enum:
      - Accepted
      - Failed
      - InsufficientFunds
      - Pending
      - Rejected
      type: string
    PaymentInstructionPutRequest:
      allOf:
      - $ref: '#/components/schemas/PaymentInstructionPutRequest_allOf'
      - $ref: '#/components/schemas/PaymentInstructionBase'
      example:
        id: 7e5ddfa3-d84a-4ccc-8ed6-07a84002e518
        amount: 150.54
        currency: GBP
        executionDate: 2019-11-12
        paymentMethod: Faster
        endToEndIdentification: PaymentIdent123
        externalCustomerId: CustomerABC
        remitterReference: User supplied ref
        remittanceInformation: Info to aid matching/reconciliation
        callbackUri: https://wealthplatform.co.uk/customer-dashboard
        creditorAccount:
          name: Destination Account Name
          accountIdentifier:
            identifier: 12345678
            identifierType: AccountNumber
          agentIdentifier:
            identifier: 300053
            identifierType: SortCode
        debtorAccount:
          name: Source Account Name
          accountIdentifier:
            identifier: 12345678
            identifierType: AccountNumber
          agentIdentifier:
            identifier: KBIMGB2L
            identifierType: BIC
        accountServicerId: ecedb699-7580-42a7-ac69-2465e83c810d
        applicationId: 1b00de1a-af76-49f2-b004-a951474e0d5e
    Metadata:
      example:
        nextCursor: Cn8KGwoEbmFtZRITGhFBbGxpZWQgSXJpc2ggQm
        correlationId: cfadcc06-d059-4a1c-a5c2-b9d102c40294
      properties:
        correlationId:
          description: A unique identifier for the request which can aid with support
            requests.
          example: cfadcc06-d059-4a1c-a5c2-b9d102c40294
          format: uuid
          type: string
        nextCursor:
          description: A pointer to the next page of results. Pass this back into
            the cursor query string parameter to retrieve the next page.
          example: Cn8KGwoEbmFtZRITGhFBbGxpZWQgSXJpc2ggQm
          type: string
      required:
      - correlationId
      type: object
    AccountAccessConsent:
      allOf:
      - $ref: '#/components/schemas/AccountAccessConsent_allOf'
      - $ref: '#/components/schemas/AuditEntity'
      example:
        id: 18c68ff9-02af-4133-9166-454918ca63cc
        application: 64611b71-5942-4aae-8c00-b75387ecaaed
        accountServicer: 318b1f12-6b25-491f-bd44-322782d54a9b
        authorisingUser: 26d9cacd-b727-4e81-baf8-e84b037d52eb
        createdDateTime: 2019-12-01T14:57:59.202Z
        expiryDate: 2019-12-01T15:57:59.202Z
        lastRefreshDateTime: 2019-12-01T14:59:59.202Z
        status: Created
        redirectUri: https://sandbox.tapico.io/account-access-start/18c68ff9-02af-4133-9166-454918ca63cc
    ApplicationId:
      description: Unique identifier for Application.
      example: 9588b9e9-9f1d-4943-b547-70b809c30db8
      format: uuid
      title: Application ID
      type: string
    ConsentTypeName:
      description: Specifies the type of consent being requested from the user.
      enum:
      - ReadAccounts
      - ReadAgents
      - ReadBalances
      - ReadBeneficiaries
      - ReadDocuments
      - ReadExternalAccounts
      - ReadParty
      - ReadPayments
      - ReadTransactions
      - WritePayments
      type: string
    AuthorisingUser:
      description: |
        The Authorising User represents an end user of your application through which access consents to Account Servicers are requested and granted.
        The Authorising User serves as the primary context for interaction with the Tapico API. You will notice that entity data access endpoints such as Accounts and Customers have a path prefix containing an Authorising User ID.
        Authorising Users are created automatically by requesting consents via the `POST /account-access-consent` endpoint and supplying a unique identifier for the end user of your application as the `externalUserId` request body parameter.
      example:
        id: 18c68ff9-02af-4133-9166-454918ca63cc
        userId: efdddd0d-1173-4aa0-9382-09a441ada8da
        externalUserId: UserId123
        application: eaffde65-dcbb-4a37-bfc1-957beea68dc3
        createdDateTime: 2021-11-20T09:12:28Z
        updatedDateTime: 2022-02-20T09:12:28Z
        identities:
        - servicerUserId: "54321"
          accountServicer: 18c68ff9-02af-4133-9166-454918ca63cc
          displayName: Irene Adler
          sourceUserType: Adviser
          servicingAgent:
            id: e4b2242a-9e85-4496-bceb-b10732af075e
            externalId: 002-0000051754
            secondaryExternalId: EI006690000001
            name: Irene Adler
            status: Active
            address:
              addressLines:
              - 221b Baker St
              - London
              postCode: NW1 6XE
              countryCode: GBR
            servicingOrganisation: 039f9547-51c5-4768-89a1-79f145ef5174
            nationalCompetentAuthority: FCA_GBR
            nationalCompetentAuthorityCode: "123456"
            accountServicer: 4b6272d0-face-413a-869a-76ff9ce036ae
      properties:
        id:
          example: 18c68ff9-02af-4133-9166-454918ca63cc
          format: uuid
          title: Authorising User ID
          type: string
        userId:
          deprecated: true
          description: Unique Tapico user identifier (deprecated in favour of AccountAccessConsent.userId
            in next version)
          example: 9fcc2393-12a4-4b74-ac70-4f695130a2cc
          format: uuid
          title: User ID
          type: string
        externalUserId:
          description: |
            Your unique system identifier for the Authorising User.
          type: string
        application:
          $ref: '#/components/schemas/ApplicationRelation'
        createdDateTime:
          format: date-time
          type: string
        updatedDateTime:
          format: date-time
          type: string
        identities:
          description: |
            The user's identity details in connected account servicer systems.

            Expand with `expand=identities`.
          items:
            $ref: '#/components/schemas/ServicerUserIdentity'
          type: array
      required:
      - application
      - createdDateTime
      - externalUserId
      - id
      title: Authorising User
      type: object
    ServicingAgentWithRelations:
      allOf:
      - $ref: '#/components/schemas/ServicingAgentBase'
      - $ref: '#/components/schemas/ServicingAgentWithRelations_allOf'
      example:
        id: a19811e2-4dbc-40ff-9afb-279c945217ae
        externalId: 002-0000051754
        secondaryExternalId: EI006690000001
        name: Irene Adler
        status: Active
        address:
          addressLines:
          - 221b Baker St
          - London
          postCode: NW1 6XE
          countryCode: GBR
        nationalCompetentAuthority: FCA_GBR
        nationalCompetentAuthorityCode: "123456"
        lastChangeDetectedDateTime: 2019-11-25T09:12:28Z
        accountServicer:
          id: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          name: Financial Platform A
          isActive: true
          hasAppStore: false
          defaultExpiryDays: 90
          hasPaymentsInitiation: true
          logoUri: https://cdn.sandbox.tapico.io/images/logos/logo.png
        servicingOrganisation:
          id: 039f9547-51c5-4768-89a1-79f145ef5174
          externalId: 003-0000006429
          secondaryExternalId: EI00669
          name: Adler Advisers
          type: Adviser
          lastChangeDetectedDateTime: 2019-11-25T09:12:28Z
          address:
            addressLines:
            - 221b Baker St
            - London
            postCode: NW1 6XE
            countryCode: GBR
          accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
    ServicingOrganisationWithRelations:
      allOf:
      - $ref: '#/components/schemas/ServicingOrganisationBase'
      - $ref: '#/components/schemas/ServicingOrganisationWithRelations_allOf'
      example:
        id: 039f9547-51c5-4768-89a1-79f145ef5174
        externalId: 003-0000006429
        secondaryExternalId: EI00669
        name: Adler Advisers
        type: Adviser
        lastChangeDetectedDateTime: 2019-11-25T09:12:28Z
        address:
          addressLines:
          - 221b Baker St
          - London
          postCode: NW1 6XE
          countryCode: GBR
        accountServicer:
          id: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          name: Financial Platform A
          isActive: true
          hasAppStore: false
          defaultExpiryDays: 90
          hasPaymentsInitiation: true
          logoUri: https://cdn.sandbox.tapico.io/images/logos/logo.png
    IndividualCustomerWithRelations:
      allOf:
      - $ref: '#/components/schemas/IndividualCustomer'
      - $ref: '#/components/schemas/IndividualCustomerWithRelations_allOf'
      example:
        id: 92b74392-1c5f-4660-8d0e-78963df8b9fe
        type: Individual
        givenName: Motoko
        familyName: Kusanagi
        dateOfBirth: 2004-01-20
        externalId: 015-0000358748
        secondaryExternalId: "358748"
        updatedDateTime: 2019-12-01T14:57:59Z
        lastChangeDetectedDateTime: 2019-11-01T09:12:28Z
        accountServicer:
          id: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          name: Financial Platform A
          isActive: true
          hasAppStore: false
          defaultExpiryDays: 90
          hasPaymentsInitiation: true
          logoUri: https://cdn.sandbox.tapico.io/images/logos/logo.png
        emails:
        - email: motoko.kusanagi@tapico.io
          type: Personal
        phoneNumbers:
        - number: +447777777777
          type: Personal
        - number: +447777777777
          type: Home
        accountRoles:
        - id: 5ad6553a-1de4-40fc-af88-43e438019c6a
          updatedDateTime: 2021-1-01T01:01:01Z
          roleType: Individual
          roleTypes:
          - Individual
          customer: 92b74392-1c5f-4660-8d0e-78963df8b9fe
          account:
            id: 18c68ff9-02af-4133-9166-454918ca63cc
            externalId: 000-0000000001
            secondaryExternalId: XYZ000001-001
            accountName: John Smith - Stocks and Shares ISA
            accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            servicingAgent: a19811e2-4dbc-40ff-9afb-279c945217ae
            baseCurrency: GBP
            businessOrPersonal: Personal
            sourceType: GIA
            subtype: InvestmentAccount
            type: Investment
            openingDate: 2010-01-01
            updatedDateTime: 2019-11-20T09:12:28Z
            lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
            agentIdentifiers:
            - identifier: 300053
              identifierType: SortCode
            identifiers:
            - identifier: 12345678
              identifierType: AccountNumber
        accountGroupRoles:
        - id: 5ad6553a-1de4-40fc-af88-43e438019c6a
          updatedDateTime: 2021-1-01T01:01:01Z
          roleType: Individual
          roleTypes:
          - Individual
          customer: 92b74392-1c5f-4660-8d0e-78963df8b9fe
          accountGroup:
            id: 80eafac6-33db-478a-bcc6-adda00c9bf93
            externalId: 001-0000000001
            secondaryExternalId: XYZ000001
            accountName: John Smith - Invididual
            accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            servicingAgent: a19811e2-4dbc-40ff-9afb-279c945217ae
            type: Individual
            openingDate: 2010-01-01
            updatedDateTime: 2019-11-20T09:12:28Z
            lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
    OrganisationCustomerWithRelations:
      allOf:
      - $ref: '#/components/schemas/OrganisationCustomer'
      - $ref: '#/components/schemas/IndividualCustomerWithRelations_allOf'
      example:
        id: 79a054fe-3597-491f-aa79-d3c072fe24ce
        type: Organisation
        name: Acme Co
        organisationType: Company
        registrationNumber: 25ad51
        registrationDate: 2001-01-01
        countryOfRegistration: GBR
        taxCountries:
        - countryCode: GBR
          isPrimary: false
          taxNumber: 65465-adg
        leiCode: 33321153OF5F3MYKUV33
        status: Active
        accountServicer:
          id: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          name: Financial Platform A
          isActive: true
          hasAppStore: false
          defaultExpiryDays: 90
          hasPaymentsInitiation: true
          logoUri: https://cdn.sandbox.tapico.io/images/logos/logo.png
        updatedDateTime: 2019-12-01T14:57:59Z
        lastChangeDetectedDateTime: 2019-11-01T09:12:28Z
        emails:
        - email: motoko.kusanagi@tapico.io
          type: Personal
        phoneNumbers:
        - number: +447777777777
          type: Personal
        - number: +447777777777
          type: Home
        accountRoles:
        - id: 5ad6553a-1de4-40fc-af88-43e438019c6a
          updatedDateTime: 2021-1-01T01:01:01Z
          roleType: Director
          roleTypes:
          - Director
          - Shareholder
          customer: 92b74392-1c5f-4660-8d0e-78963df8b9fe
          account:
            id: 18c68ff9-02af-4133-9166-454918ca63cc
            accountName: Trading Account
            baseCurrency: GBP
            businessOrPersonal: Business
            externalId: XYZ000001-001
            sourceType: GIA
            subtype: Investment
            type: Investment
            openingDate: 2010-01-01
            updatedDateTime: 2019-11-20T09:12:28Z
            lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
            accountServicer: 4b6272d0-face-413a-869a-76ff9ce036ae
            agentIdentifiers:
            - identifier: 300053
              identifierType: SortCode
            identifiers:
            - identifier: 12345678
              identifierType: AccountNumber
        accountGroupRoles:
        - id: 5ad6553a-1de4-40fc-af88-43e438019c6a
          updatedDateTime: 2021-1-01T01:01:01Z
          roleType: Director
          roleTypes:
          - Director
          - Shareholder
          customer: 92b74392-1c5f-4660-8d0e-78963df8b9fe
          accountGroup:
            id: 80eafac6-33db-478a-bcc6-adda00c9bf93
            accountName: Trading Account
            externalId: 001-0000000001
            secondaryExternalId: XYZ000001
            accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            servicingAgent: a19811e2-4dbc-40ff-9afb-279c945217ae
            type: Investment
            openingDate: 2010-01-01
            updatedDateTime: 2019-11-20T09:12:28Z
            lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
    AccountGroupWithRelations:
      allOf:
      - $ref: '#/components/schemas/AccountGroup'
      - $ref: '#/components/schemas/AccountGroupWithRelations_allOf'
      example:
        id: 80eafac6-33db-478a-bcc6-adda00c9bf93
        externalId: 001-0000000001
        secondaryExternalId: XYZ000001
        accountName: John Smith - Invididual
        accountServicer:
          id: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          name: Financial Platform A
          isActive: true
          hasAppStore: false
          defaultExpiryDays: 90
          hasPaymentsInitiation: true
          logoUri: https://cdn.sandbox.tapico.io/images/logos/logo.png
        servicingAgent:
          id: a19811e2-4dbc-40ff-9afb-279c945217ae
          externalId: 002-0000051754
          secondaryExternalId: EI006690000001
          name: Irene Adler
          status: Active
          address:
            addressLines:
            - 221b Baker St
            - London
            postCode: NW1 6XE
            countryCode: GBR
          servicingOrganisation: 039f9547-51c5-4768-89a1-79f145ef5174
          nationalCompetentAuthority: FCA_GBR
          nationalCompetentAuthorityCode: "123456"
          accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          lastChangeDetectedDateTime: 2019-11-25T09:12:28Z
        type: Individual
        accounts:
        - id: 18c68ff9-02af-4133-9166-454918ca63cc
          externalId: 000-0000000001
          secondaryExternalId: XYZ000001-001
          accountName: John Smith - Stocks and Shares ISA
          accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          baseCurrency: GBP
          businessOrPersonal: Personal
          sourceType: GIA
          subtype: InvestmentAccount
          type: Investment
          openingDate: 2010-01-01
          updatedDateTime: 2019-11-20T09:12:28Z
          lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
          accountGroup: 80eafac6-33db-478a-bcc6-adda00c9bf93
          agentIdentifiers:
          - identifier: 300053
            identifierType: SortCode
          identifiers:
          - identifier: 12345678
            identifierType: AccountNumber
          servicingAgent: a19811e2-4dbc-40ff-9afb-279c945217ae
        externalAccounts:
        - id: 12b6452c-85bd-4237-8938-1f95a1521bcb
          externalId: "157065"
          accountName: John Smith - Current Account
          accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          servicingAgent: a19811e2-4dbc-40ff-9afb-279c945217ae
          accountGroup: 80eafac6-33db-478a-bcc6-adda00c9bf93
          baseCurrency: GBP
          status: Active
          verificationStatus: Passed
          updatedDateTime: 2019-11-20T09:12:28Z
          lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
          agentIdentifiers:
          - identifier: 200042
            identifierType: SortCode
          identifiers:
          - identifier: 87654321
            identifierType: AccountNumber
        openingDate: 2010-01-01
        updatedDateTime: 2019-11-20T09:12:28Z
        lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
        roles:
        - id: 5ad6553a-1de4-40fc-af88-43e438019c6a
          updatedDateTime: 2021-1-01T01:01:01Z
          roleType: Individual
          roleTypes:
          - Individual
          accountGroupId: 80eafac6-33db-478a-bcc6-adda00c9bf93
          customer:
            id: 92b74392-1c5f-4660-8d0e-78963df8b9fe
            type: Individual
            givenName: Motoko
            familyName: Kusanagi
            dateOfBirth: 2004-01-20
            externalId: 015-0000358748
            secondaryExternalId: "358748"
            updatedDateTime: 2019-12-01T14:57:59Z
            lastChangeDetectedDateTime: 2019-11-01T09:12:28Z
            accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            emails:
            - email: motoko.kusanagi@tapico.io
              type: Personal
            phoneNumbers:
            - number: +447777777777
              type: Personal
            - number: +447777777777
              type: Home
    AccountWithRelations:
      allOf:
      - $ref: '#/components/schemas/AccountBase'
      - $ref: '#/components/schemas/AccountWithRelations_allOf'
      example:
        id: 18c68ff9-02af-4133-9166-454918ca63cc
        externalId: 000-0000000001
        secondaryExternalId: XYZ000001-001
        accountName: John Smith - Stocks and Shares ISA
        accountServicer:
          id: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          name: Financial Platform A
          isActive: true
          hasAppStore: false
          defaultExpiryDays: 90
          hasPaymentsInitiation: true
          logoUri: https://cdn.sandbox.tapico.io/images/logos/logo.png
        servicingAgent:
          id: a19811e2-4dbc-40ff-9afb-279c945217ae
          externalId: 002-0000051754
          secondaryExternalId: EI006690000001
          name: Irene Adler
          status: Active
          address:
            addressLines:
            - 221b Baker St
            - London
            postCode: NW1 6XE
            countryCode: GBR
          servicingOrganisation: 039f9547-51c5-4768-89a1-79f145ef5174
          nationalCompetentAuthority: FCA_GBR
          nationalCompetentAuthorityCode: "123456"
          accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          lastChangeDetectedDateTime: 2019-11-25T09:12:28Z
        accountGroup:
          id: 80eafac6-33db-478a-bcc6-adda00c9bf93
          externalId: 001-0000000001
          secondaryExternalId: XYZ000001
          accountName: John Smith - Invididual
          accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          type: Individual
          openingDate: 2010-01-01
          updatedDateTime: 2019-11-20T09:12:28Z
          lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
        baseCurrency: GBP
        businessOrPersonal: Personal
        sourceType: GIA
        subtype: InvestmentAccount
        type: Investment
        openingDate: 2010-01-01
        updatedDateTime: 2019-11-20T09:12:28Z
        lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
        agentIdentifiers:
        - identifier: 300053
          identifierType: SortCode
        identifiers:
        - identifier: 12345678
          identifierType: AccountNumber
        roles:
        - id: 5ad6553a-1de4-40fc-af88-43e438019c6a
          updatedDateTime: 2021-1-01T01:01:01Z
          roleType: Individual
          roleTypes:
          - Individual
          account: 18c68ff9-02af-4133-9166-454918ca63cc
          customer:
            id: 92b74392-1c5f-4660-8d0e-78963df8b9fe
            type: Individual
            givenName: Motoko
            familyName: Kusanagi
            dateOfBirth: 2004-01-20
            externalId: 015-0000358748
            secondaryExternalId: "358748"
            updatedDateTime: 2019-12-01T14:57:59Z
            lastChangeDetectedDateTime: 2019-11-01T09:12:28Z
            accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            emails:
            - email: motoko.kusanagi@tapico.io
              type: Personal
            phoneNumbers:
            - number: +447777777777
              type: Personal
            - number: +447777777777
              type: Home
    ExternalAccountWithRelations:
      allOf:
      - $ref: '#/components/schemas/ExternalAccountBase'
      - $ref: '#/components/schemas/ExternalAccountWithRelations_allOf'
      example:
        id: 12b6452c-85bd-4237-8938-1f95a1521bcb
        externalId: "157065"
        accountName: John Smith - Current Account
        accountServicer:
          id: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          name: Financial Platform A
          isActive: true
          hasAppStore: false
          defaultExpiryDays: 90
          hasPaymentsInitiation: true
          logoUri: https://cdn.sandbox.tapico.io/images/logos/logo.png
        servicingAgent:
          id: a19811e2-4dbc-40ff-9afb-279c945217ae
          externalId: 002-0000051754
          secondaryExternalId: EI006690000001
          name: Irene Adler
          status: Active
          address:
            addressLines:
            - 221b Baker St
            - London
            postCode: NW1 6XE
            countryCode: GBR
          servicingOrganisation: 039f9547-51c5-4768-89a1-79f145ef5174
          nationalCompetentAuthority: FCA_GBR
          nationalCompetentAuthorityCode: "123456"
          accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          lastChangeDetectedDateTime: 2019-11-25T09:12:28Z
        accountGroup:
          id: 80eafac6-33db-478a-bcc6-adda00c9bf93
          externalId: 001-0000000001
          secondaryExternalId: XYZ000001
          accountName: John Smith - Invididual
          accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          type: Individual
          openingDate: 2010-01-01
          updatedDateTime: 2019-11-20T09:12:28Z
          lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
        baseCurrency: GBP
        type: Deposit
        subType: CurrentAccount
        sourceType: BankAccount
        status: Active
        verificationStatus: Passed
        updatedDateTime: 2019-11-20T09:12:28Z
        lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
        agentIdentifiers:
        - identifier: 200042
          identifierType: SortCode
        identifiers:
        - identifier: 87654321
          identifierType: AccountNumber
    CompositeHolding:
      allOf:
      - $ref: '#/components/schemas/Holding'
      - $ref: '#/components/schemas/CompositeHolding_allOf'
      example:
        instrument:
          id: AAPL
          displayName: Apple Inc.
          isin: US0378331005
          sedol: "2046251"
          assetClass: Equity
          currency: USD
          price: 267.09
          priceType: Last
          priceAsAtDateTime: 2019-12-11
        updatedDateTime: 2019-11-20T09:12:28Z
        quantity: 18
        unsettledQuantity: 10
        availableQuantity: 8
        value:
          amount: 3591.17
          currency: GBP
        valueDate: 2019-11-20
        baseCurrencyCost:
          amount: 193.96
          currency: GBP
    Transaction:
      description: A financial transaction to increase or decrease holding within
        a financial instrument such as a currency, stock or fund.
      example:
        bookedDateTime: 2020-07-20T00:00:00.000Z
        id: 56727390-c6d8-4be6-a4ca-97e756252d93
        externalId: FnzCash-1573807281
        secondaryExternalId: Fee80661380
        narrative: BP PLC
        price: 5.37970297
        quantity: 101
        status: Booked
        type: ProductTransaction
        subType: BuyTrade
        sourceType: BuyTrade
        valueDate: 2020-07-20T00:00:00.000Z
        updatedDateTime: 2021-01-15T14:57:59
        lastChangeDetectedDateTime: 2021-01-10T09:12:28Z
        instrument: 4c19d374-d60a-4b5a-945b-8c12910f47c9
        sourceInstrument: a252bc27-41f0-41f0-929c-1b5bddc684a4
      properties:
        id:
          description: |
            Tapico generated unique surrogate key for the Transaction to deal with potential identifier conflicts across account servicers.

            Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
          example: c8361dd8-de63-4b54-823a-aa7435539068
          format: uuid
          title: Transaction ID
          type: string
        externalId:
          description: Primary identifier from the system this entity was imported
            from.
          maxLength: 210
          title: External Entity Identifier
          type: string
        secondaryExternalId:
          description: Secondary identifier from the system this entity was imported
            from.
          maxLength: 210
          title: External Entity Secondary Identifier
          type: string
        updatedDateTime:
          description: Timestamp of data refresh from source.
          example: 2019-11-20T09:12:28Z
          format: date-time
          type: string
        lastChangeDetectedDateTime:
          description: Timestamp of the last time a change was detected in data source.
          example: 2021-10-21T09:12:28Z
          format: date-time
          type: string
        narrative:
          maxLength: 500
          type: string
        quantity:
          description: |-
            Positive or negative transaction quantity.
            For investment transactions a positive quantity is used to represent share purchases, fund subscriptions or a transfer of the investment into the account. A negative quantity is used to represent share sales, fund redemptions or transfer of the investment out of the account.
          type: number
        price:
          description: |-
            This reflects the price at which the investment was bought or sold at. For investment transfers this may reflect the cost base of the transferred holding.
            For cash transactions, this property will be omitted.
          type: number
        bookedDateTime:
          format: date-time
          type: string
        valueDateTime:
          format: date-time
          type: string
        runningBalance:
          title: runningBalance
          type: number
        type:
          $ref: '#/components/schemas/TransactionType'
        subType:
          $ref: '#/components/schemas/TransactionSubType'
        sourceType:
          description: Transaction type as received from source system.
          type: string
        status:
          $ref: '#/components/schemas/TransactionStatus'
        instrument:
          $ref: '#/components/schemas/InstrumentRelation'
        sourceInstrument:
          $ref: '#/components/schemas/SourceInstrumentRelation'
      required:
      - bookedDateTime
      - externalId
      - id
      - instrument
      - narrative
      - quantity
      - status
      - type
      - updatedDateTime
      title: Transaction
      type: object
    RegularPayment:
      example:
        id: b3b63095-eada-4fc3-b189-cab4a573a59d
        externalId: "1234"
        type: Deposit
        method: DirectDebit
        frequency: Monthly
        amount: 1000
        currency: GBP
        startDate: 2020-01-01
        nextDate: 2020-02-01
        updatedDateTime: 2021-01-15T14:57:59
        lastChangeDetectedDateTime: 2021-01-10T09:12:28Z
      properties:
        id:
          description: |
            Tapico generated unique surrogate key for the Regular Payment to deal with potential identifier conflicts across account servicers.

            Refer to `externalId` for the origin system identifier.
          example: 646cb812-470c-4643-a4a3-ee1039952ff9
          format: uuid
          title: Transaction ID
          type: string
        externalId:
          description: Primary identifier from the system this entity was imported
            from.
          maxLength: 210
          title: External Entity Identifier
          type: string
        type:
          $ref: '#/components/schemas/RegularPaymentType'
        method:
          $ref: '#/components/schemas/PaymentMethod'
        frequency:
          $ref: '#/components/schemas/RegularPaymentFrequency'
        amount:
          description: Payment amount
          example: 222.5
          type: number
        currency:
          description: Payment currency in ISO 4217 format
          example: GBP
          type: string
        startDate:
          format: date
          type: string
        nextDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        externalAccount:
          $ref: '#/components/schemas/ExternalAccountRelation'
        updatedDateTime:
          description: Timestamp of data refresh from source.
          example: 2019-11-20T09:12:28Z
          format: date-time
          type: string
        lastChangeDetectedDateTime:
          description: Timestamp of the last time a change was detected in data source.
          example: 2021-10-21T09:12:28Z
          format: date-time
          type: string
      required:
      - amount
      - currency
      - externalId
      - frequency
      - id
      - nextDate
      - startDate
      - type
      - updatedDateTime
    Balance:
      description: Balance of a particular currency held in an account, formed from
        the summation of transactions for the relevant instrument.
      example:
        currency: GBP
        available: 37600.54
        current: 38420.33
        updatedDateTime: 2019-11-20T09:12:28Z
        lastChangeDetectedDateTime: 2019-11-15T09:12:28Z
      properties:
        currency:
          type: string
        available:
          title: available balance.
          type: number
        current:
          title: current balance.
          type: number
        updatedDateTime:
          description: Timestamp of data refresh from source.
          example: 2019-11-20T09:12:28Z
          format: date-time
          type: string
        lastChangeDetectedDateTime:
          description: Timestamp of the last time a change was detected in data source.
          example: 2021-10-21T09:12:28Z
          format: date-time
          type: string
      required:
      - available
      - currency
      - current
      - updatedDateTime
      type: object
    Document:
      description: Represents the meta data for a document stored on the associated
        users platform
      example:
        reference: last statement
        fileName: regular-statement.pdf
        startDateTime: 2021-04-22T00:00:00Z
        displayName: Regular Statement
        isRead: true
        format:
          extension: pdf
          mediaType: application/pdf
        id: "1093"
        type:
          name: Regular Statement
          id: "68"
        endDateTime: 2021-05-21T23:59:59Z
        addedOn: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: Source document identifier in account servicer system.
          example: "1093"
          type: string
        category:
          $ref: '#/components/schemas/DocumentCategory'
        type:
          $ref: '#/components/schemas/Document_type'
        status:
          $ref: '#/components/schemas/DocumentStatus'
        isRead:
          type: boolean
        addedOn:
          format: date-time
          type: string
        displayName:
          example: Regular Statement
          type: string
        fileName:
          example: regular-statement.pdf
          type: string
        format:
          $ref: '#/components/schemas/Document_format'
        reference:
          example: last statement
          type: string
        startDateTime:
          example: 2021-04-22T00:00:00Z
          format: date-time
          type: string
        endDateTime:
          example: 2021-05-21T23:59:59Z
          format: date-time
          type: string
      required:
      - addedOn
      - id
      type: object
    CustomerAddress:
      description: Represents a customer Address
      example:
        id: 125c2c4a-e45a-40f7-941f-e03ffb8310fd
        externalId: "1001"
        customerId: 22c68ff9-02af-4133-9166-454958ca63ab
        addressLines:
        - 221b Baker St
        - London
        postCode: NW1 6XE
        countryCode: GBR
        updatedDateTime: 2019-11-25T09:12:28Z
        lastChangeDetectedDateTime: 2019-11-20T09:12:28Z
      properties:
        id:
          description: |
            Tapico generated unique surrogate key for the Customer Address to deal with potential identifier conflicts across account servicers.

            Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
          example: ad862f97-928a-4ee2-b6fb-a8f6ebc80d3a
          format: uuid
          title: Customer Address ID
          type: string
        externalId:
          description: Primary identifier from the system this entity was imported
            from.
          maxLength: 210
          title: External Entity Identifier
          type: string
        customerId:
          description: |
            Tapico generated unique surrogate key for the Customer to deal with potential identifier conflicts across account servicers.

            Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
          example: ad862f97-928a-4ee2-b6fb-a8f6ebc80d3a
          format: uuid
          title: Customer ID
          type: string
        addressLines:
          items:
            type: string
          type: array
        postCode:
          type: string
        countryCode:
          description: Country code in ISO 3166 format.
          example: GBR
          type: string
        updatedDateTime:
          description: Timestamp of data refresh from source.
          example: 2019-11-20T09:12:28Z
          format: date-time
          type: string
        lastChangeDetectedDateTime:
          description: Timestamp of the last time a change was detected in data source.
          example: 2021-10-21T09:12:28Z
          format: date-time
          type: string
      required:
      - addressLines
      - customerId
      - externalId
      - id
      - updatedDateTime
      type: object
    Beneficiary:
      description: Contains a set of elements that describes the list of trusted beneficiaries
        linked to a specific account.
      example:
        id: b7081ff6-463a-44ff-97e0-65e4bf94be2a
        accountId: 18c68ff9-02af-4133-9166-454918ca63cc
        beneficiaryId: Ben1
        reference: Towbar Club
        updatedDateTime: 2019-11-20T09:12:28Z
        lastChangeDetectedDateTime: 2019-11-15T09:12:28Z
        beneficiaryAccount:
          identifierType: IBAN
          identifier: 80200112345678
          name: Mrs Juniper
          secondaryIdentification: 76878725
        beneficiaryAgent:
          identifierType: BIC
          identifier: 2149
          name: bank efe
          postalAddress:
            addressType: Business
            department: Technology
            subDepartment: Development
            streetName: Lombard street
            buildingNumber: 104
            postCode: B17 9EY
            townName: Birmingham
            countrySubDivision: West midlands
            country: GB
            addressLines:
            - Gordon Road flat number 2
            - Gordon Road flat number 2
      properties:
        id:
          type: string
        accountId:
          description: |
            Tapico generated unique surrogate key for the Account to deal with potential identifier conflicts across account servicers.

            Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
          example: ad862f97-928a-4ee2-b6fb-a8f6ebc80d3a
          format: uuid
          title: Account ID
          type: string
        beneficiaryId:
          description: A unique and immutable identifier used to identify the beneficiary
            resource. This identifier has no meaning to the account owner.
          maxLength: 40
          minLength: 1
          type: string
        reference:
          description: Unique reference, as assigned by the creditor, to unambiguously
            refer to the payment transaction.
          maxLength: 35
          minLength: 1
          type: string
        updatedDateTime:
          description: Timestamp of data refresh from source.
          example: 2019-11-20T09:12:28Z
          format: date-time
          type: string
        lastChangeDetectedDateTime:
          description: Timestamp of the last time a change was detected in data source.
          example: 2021-10-21T09:12:28Z
          format: date-time
          type: string
        beneficiaryAccount:
          $ref: '#/components/schemas/BeneficiaryAccount'
        beneficiaryAgent:
          $ref: '#/components/schemas/BeneficiaryAgent'
      required:
      - accountId
      - beneficiaryAccount
      - beneficiaryAgent
      - id
      - updatedDateTime
      type: object
    Instrument:
      allOf:
      - $ref: '#/components/schemas/BaseInstrument'
      - $ref: '#/components/schemas/Instrument_1'
      example:
        id: 4d200794-490e-4866-a57d-720bb26b9597
        displayName: BlackRock Cash A Acc
        isin: GB0005849467
        sedol: 584946.0
        type: ManagedFund
        currency: GBP
        price: 2.3868
    AccountServicer:
      allOf:
      - $ref: '#/components/schemas/AccountServicer_allOf'
      - $ref: '#/components/schemas/AccountServicerBase'
      - $ref: '#/components/schemas/AuditEntity'
    AccountServicerBase:
      properties:
        organisationId:
          description: Unique identifier for Organisation
          example: 0f40a7fd-0b2d-460f-aacc-6ff7483f7a44
          format: uuid
          title: Organisation ID
          type: string
        name:
          maxLength: 200
          type: string
        hasAppStore:
          description: Indicates if the account servicer has App Store enabled.
          type: boolean
        defaultExpiryDays:
          description: Indicates the default validity period for a granted consent.
          type: number
        hasPaymentsInitiation:
          description: |
            Indicates if the account servicer is supported via the Tapico Payments Initiation API.
          type: boolean
        logoUri:
          format: uri
          type: string
        avatarUri:
          format: uri
          type: string
        countryCode:
          description: Country code in ISO 3166 format.
          type: string
        region:
          $ref: '#/components/schemas/Region'
      type: object
    PaymentInstruction:
      allOf:
      - $ref: '#/components/schemas/PaymentInstruction_allOf'
      - $ref: '#/components/schemas/PaymentInstructionBase'
      - $ref: '#/components/schemas/AuditEntity'
    AccountServicerId:
      description: Unique identifier for Account Servicer.
      example: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
      format: uuid
      title: Account Servicer ID
      type: string
    PaymentInstructionBase:
      properties:
        endToEndIdentification:
          description: Unique identification assigned by the initiating party to unambiguously
            identify the transaction. This identification is passed on, unchanged,
            throughout the entire end-to-end chain.
          example: XYZ123
          maxLength: 18
          minLength: 1
          type: string
        amount:
          description: Payment amount
          example: 222.5
          type: number
        currency:
          description: Payment currency in ISO 4217 format
          example: GBP
          type: string
        executionDate:
          description: Date when payment should be executed. When omitted, defaults
            to today.
          example: 2019-11-12
          format: date
          title: Execution Date
          type: string
        externalCustomerId:
          description: Your unique customer identification.
          type: string
        debtorAccount:
          $ref: '#/components/schemas/AccountIdentification'
        creditorAccount:
          $ref: '#/components/schemas/AccountIdentification'
        paymentMethod:
          $ref: '#/components/schemas/PaymentMethod'
        remitterReference:
          description: Unique reference, as assigned by the creditor, to unambiguously
            refer to the payment transaction.
          example: REF1234
          maxLength: 18
          minLength: 1
          type: string
        remittanceInformation:
          description: Information supplied to enable the matching/reconciliation
            of an entry with the items that the payment is intended to settle, such
            as commercial invoices in an accounts' receivable system, in an unstructured
            form.
          example: System generated remittance information
          maxLength: 140
          minLength: 1
          type: string
        riskInformation:
          $ref: '#/components/schemas/RiskInformation'
      required:
      - amount
      - creditorAccount
      - currency
      - endToEndIdentification
      type: object
    AccountAccessConsentId:
      description: Unique identifier for Account Access Consent.
      example: a87bdc1b-7b5d-4246-a9f3-3b65a98bb0c9
      format: uuid
      title: Account Access Consent ID
      type: string
    AccountAccessConsentType:
      allOf:
      - $ref: '#/components/schemas/AccountAccessConsentType_allOf'
      - $ref: '#/components/schemas/AuditEntity'
    ApplicationRelation:
      description: |
        Represents the relationship to an Application resource.

        This can take the value of either the related Application ID or the related Application resource, depending on whether the property has been expanded.

        Expand with `expand=application`.
      example: 18c68ff9-02af-4133-9166-454918ca63cc
      oneOf:
      - $ref: '#/components/schemas/ApplicationId'
      - $ref: '#/components/schemas/Application'
    AccountServicerRelation:
      description: |
        Represents the relationship to an Account Servicer resource.

        This can take the value of either the related Account Servicer ID or the related Account Servicer resource, depending on whether the property has been expanded.

        Expand with `expand=accountServicer`.
      example: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
      oneOf:
      - $ref: '#/components/schemas/AccountServicerId'
      - $ref: '#/components/schemas/AccountServicer'
    AuthorisingUserRelation:
      description: |
        Represents the relationship to an Authorising User resource.

        This can take the value of either the related Authorising User ID or the related Authorising User resource depending on whether the property has been expanded.

        Expand with `expand=authorisingUser`.
      example: 18c68ff9-02af-4133-9166-454918ca63c
      oneOf:
      - $ref: '#/components/schemas/AuthorisingUserId'
      - $ref: '#/components/schemas/AuthorisingUser'
    UserId:
      description: Unique Tapico user identifier.
      example: 9fcc2393-12a4-4b74-ac70-4f695130a2cc
      format: uuid
      title: User ID
      type: string
    AuditEntity:
      properties:
        createdDateTime:
          description: Timestamp of when the record was first ingested from the source
            system.
          format: date-time
          type: string
        updatedDateTime:
          description: Timestamp of when the record was last refreshed from the source
            system.
          format: date-time
          type: string
      type: object
    AuthorisingUserId:
      example: 18c68ff9-02af-4133-9166-454918ca63cc
      format: uuid
      title: Authorising User ID
      type: string
    ServicerUserIdentity:
      description: Authorising user's identity at account servicer.
      example:
        servicerUserId: "54321"
        accountServicer: 18c68ff9-02af-4133-9166-454918ca63cc
        displayName: Irene Adler
        sourceUserType: Adviser
        servicingAgent:
          id: e4b2242a-9e85-4496-bceb-b10732af075e
          externalId: 002-0000051754
          secondaryExternalId: EI006690000001
          name: Irene Adler
          status: Active
          address:
            addressLines:
            - 221b Baker St
            - London
            postCode: NW1 6XE
            countryCode: GBR
          servicingOrganisation: 039f9547-51c5-4768-89a1-79f145ef5174
          nationalCompetentAuthority: FCA_GBR
          nationalCompetentAuthorityCode: "123456"
          accountServicer: 4b6272d0-face-413a-869a-76ff9ce036ae
      properties:
        servicerUserId:
          description: User ID in account servicer system.
          example: "54321"
          type: string
        accountServicer:
          $ref: '#/components/schemas/AccountServicerRelation'
        displayName:
          example: Irene Adler
          maxLength: 254
          type: string
        givenName:
          maxLength: 254
          type: string
        middleName:
          maxLength: 254
          type: string
        familyName:
          maxLength: 254
          type: string
        sourceUserType:
          description: User type defined in source system. This can vary between account
            servicers.
          type: string
        servicingAgent:
          $ref: '#/components/schemas/ServicingAgentRelation'
      required:
      - accountServicer
      - servicerUserId
      title: Servicer User Identity
      type: object
    ServicingAgentBase:
      description: Represents a servicing agent entity at an account service provider
        such as a Financial Adviser, Wealth Manager, or other financial intermediary.
      example:
        id: a19811e2-4dbc-40ff-9afb-279c945217ae
        externalId: 002-0000051754
        secondaryExternalId: EI006690000001
        name: Irene Adler
        status: Active
        address:
          addressLines:
          - 221b Baker St
          - London
          postCode: NW1 6XE
          countryCode: GBR
        nationalCompetentAuthority: FCA_GBR
        nationalCompetentAuthorityCode: "123456"
        lastChangeDetectedDateTime: 2019-11-25T09:12:28Z
      properties:
        id:
          description: |
            Tapico generated unique surrogate key for the Servicing Agent to deal with potential identifier conflicts across account servicers.

            Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
          example: cf4bca74-46d1-449f-b621-32be4fc315e9
          format: uuid
          title: Servicing Agent ID
          type: string
        externalId:
          description: Primary identifier from the system this entity was imported
            from.
          maxLength: 210
          title: External Entity Identifier
          type: string
        secondaryExternalId:
          description: Secondary identifier from the system this entity was imported
            from.
          maxLength: 210
          title: External Entity Secondary Identifier
          type: string
        name:
          maxLength: 254
          type: string
        status:
          $ref: '#/components/schemas/ServicingAgentStatus'
        address:
          $ref: '#/components/schemas/Address'
        nationalCompetentAuthority:
          $ref: '#/components/schemas/NationalCompetentAuthority'
        nationalCompetentAuthorityCode:
          description: National Competent Authority registration code.
          maxLength: 40
          type: string
        lastChangeDetectedDateTime:
          description: Timestamp of the last time a change was detected in data source.
          example: 2021-10-21T09:12:28Z
          format: date-time
          type: string
      required:
      - externalId
      - id
      - nationalCompetentAuthority
      - status
      title: Servicing Agent
      type: object
    ServicingOrganisationRelation:
      description: |
        Represents the relationship to an Servicing Organisation resource.

        This can take the value of either the related Servicing Organisation ID or the related Servicing Organisation resource, depending on whether the property has been expanded.

        Expand with `expand=servicingOrganisation`.
      example: 039f9547-51c5-4768-89a1-79f145ef5174
      oneOf:
      - $ref: '#/components/schemas/ServicingOrganisationId'
      - $ref: '#/components/schemas/ServicingOrganisation'
    ServicingOrganisationBase:
      description: Represents a servicing organisation entity at an account service
        provider such as a Financial Advice Firm, Wealth Management Firm, or other
        financial intermediary organisation.
      example:
        id: 039f9547-51c5-4768-89a1-79f145ef5174
        externalId: 003-0000006429
        secondaryExternalId: EI00669
        name: Adler Advisers
        type: Adviser
        lastChangeDetectedDateTime: 2019-11-25T09:12:28Z
        address:
          addressLines:
          - 221b Baker St
          - London
          postCode: NW1 6XE
          countryCode: GBR
      properties:
        id:
          description: |
            Tapico generated unique surrogate key for the Servicing Organisation to deal with potential identifier conflicts across account servicers.

            Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
          example: f6dc8217-d507-4ba6-805c-dbe6034d25f5
          format: uuid
          title: Servicing Organisation ID
          type: string
        externalId:
          description: Primary identifier from the system this entity was imported
            from.
          maxLength: 210
          title: External Entity Identifier
          type: string
        secondaryExternalId:
          description: Secondary identifier from the system this entity was imported
            from.
          maxLength: 210
          title: External Entity Secondary Identifier
          type: string
        name:
          maxLength: 254
          type: string
        type:
          $ref: '#/components/schemas/ServicingOrganisationType'
        lastChangeDetectedDateTime:
          description: Timestamp of the last time a change was detected in data source.
          example: 2021-10-21T09:12:28Z
          format: date-time
          type: string
        address:
          $ref: '#/components/schemas/Address'
      required:
      - externalId
      - id
      - type
      type: object
    IndividualCustomer:
      allOf:
      - $ref: '#/components/schemas/BaseCustomer'
      - $ref: '#/components/schemas/IndividualCustomer_allOf'
      example:
        id: 92b74392-1c5f-4660-8d0e-78963df8b9fe
        type: Individual
        title: Major
        givenName: Motoko
        middleName: Matsu
        familyName: Kusanagi
        dateOfBirth: 2004-01-20
        retirementAge: "65"
        retirementDate: 2064-03-22
        maritalStatus: Single
        countryOfBirth: JPN
        countriesOfCitizenship:
        - JPN
        - GBR
        gender: Female
        externalId: 015-0000358748
        secondaryExternalId: "358748"
        updatedDateTime: 2019-12-01T14:57:59Z
        lastChangeDetectedDateTime: 2019-11-01T09:12:28Z
        accountServicer: 4b6272d0-face-413a-869a-76ff9ce036ae
        emails:
        - email: motoko.kusanagi@tapico.io
          type: Personal
        phoneNumbers:
        - number: +447777777777
          type: Personal
          countryCode: GBR
        - number: +647777777777
          type: Home
          countryCode: NZL
        employmentDetails:
          status: Active
          occupation: Developer
          name: SCC company
          addressLines:
          - 221b Baker St
          - London
          postCode: 6jq OX$
          countryCode: GBR
        taxCountries:
        - countryCode: GBR
          isPrimary: true
          taxNumber: SP123456C
          type: NationalInsuranceNumber
        accountRoles:
        - id: 5ad6553a-1de4-40fc-af88-43e438019c6a
          updatedDateTime: 2021-1-01T01:01:01Z
          roleType: Individual
          roleTypes:
          - Individual
          customer: 92b74392-1c5f-4660-8d0e-78963df8b9fe
          account:
            id: 18c68ff9-02af-4133-9166-454918ca63cc
            accountName: Brad's Account
            baseCurrency: GBP
            businessOrPersonal: Personal
            externalId: XYZ000001-001
            sourceType: CurrentAccount
            subtype: CurrentAccount
            type: Deposit
            updatedDateTime: 2019-11-20T09:12:28Z
            lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
            accountServicer: 4b6272d0-face-413a-869a-76ff9ce036ae
            agentIdentifiers:
            - identifier: 300053
              identifierType: SortCode
            identifiers:
            - identifier: 12345678
              identifierType: AccountNumber
    CustomerAccountRole:
      description: |
        Represents the relationship to an Account resource.

        Expand with `expand=accountRoles`.
      example:
        id: 5ad6553a-1de4-40fc-af88-43e438019c6a
        updatedDateTime: 2021-1-01T01:01:01Z
        roleType: Individual
        roleTypes:
        - Individual
        customer: 92b74392-1c5f-4660-8d0e-78963df8b9fe
        account:
          id: 18c68ff9-02af-4133-9166-454918ca63cc
          externalId: 000-0000000001
          secondaryExternalId: XYZ000001-001
          accountName: John Smith - Stocks and Shares ISA
          accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          servicingAgent:
            id: a19811e2-4dbc-40ff-9afb-279c945217ae
            externalId: 002-0000051754
            secondaryExternalId: EI006690000001
            name: Irene Adler
            status: Active
            address:
              addressLines:
              - 221b Baker St
              - London
              postCode: NW1 6XE
              countryCode: GBR
            servicingOrganisation: 039f9547-51c5-4768-89a1-79f145ef5174
            nationalCompetentAuthority: FCA_GBR
            nationalCompetentAuthorityCode: "123456"
            accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            lastChangeDetectedDateTime: 2019-11-25T09:12:28Z
          baseCurrency: GBP
          businessOrPersonal: Personal
          sourceType: GIA
          subtype: InvestmentAccount
          type: Investment
          openingDate: 2010-01-01
          updatedDateTime: 2019-11-20T09:12:28Z
          lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
          agentIdentifiers:
          - identifier: 300053
            identifierType: SortCode
          identifiers:
          - identifier: 12345678
            identifierType: AccountNumber
      properties:
        id:
          type: string
        updatedDateTime:
          description: Timestamp of data refresh from source.
          example: 2019-11-20T09:12:28Z
          format: date-time
          type: string
        roleTypes:
          items:
            $ref: '#/components/schemas/CustomerRoleType'
          type: array
        customer:
          description: |
            Tapico generated unique surrogate key for the Customer to deal with potential identifier conflicts across account servicers.

            Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
          example: ad862f97-928a-4ee2-b6fb-a8f6ebc80d3a
          format: uuid
          title: Customer ID
          type: string
        account:
          $ref: '#/components/schemas/CustomerAccountRelation'
      required:
      - account
      - customer
      - id
      - roleType
      - roleTypes
      - updatedDateTime
      type: object
    CustomerAccountGroupRole:
      description: |
        Represents the relationship to an AccountGroup resource.

        Expand with `expand=accountGroupRoles`.
      example:
        id: 5ad6553a-1de4-40fc-af88-43e438019c6a
        updatedDateTime: 2021-1-01T01:01:01Z
        roleType: Individual
        roleTypes:
        - Individual
        customer: 92b74392-1c5f-4660-8d0e-78963df8b9fe
        accountGroup:
          id: 80eafac6-33db-478a-bcc6-adda00c9bf93
          externalId: 001-0000000001
          secondaryExternalId: XYZ000001
          accountName: John Smith - Invididual
          accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          servicingAgent:
            id: a19811e2-4dbc-40ff-9afb-279c945217ae
            externalId: 002-0000051754
            secondaryExternalId: EI006690000001
            name: Irene Adler
            status: Active
            address:
              addressLines:
              - 221b Baker St
              - London
              postCode: NW1 6XE
              countryCode: GBR
            servicingOrganisation: 039f9547-51c5-4768-89a1-79f145ef5174
            nationalCompetentAuthority: FCA_GBR
            nationalCompetentAuthorityCode: "123456"
            accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
            lastChangeDetectedDateTime: 2019-11-25T09:12:28Z
          type: Individual
          openingDate: 2010-01-01
          updatedDateTime: 2019-11-20T09:12:28Z
          lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
      properties:
        id:
          type: string
        updatedDateTime:
          description: Timestamp of data refresh from source.
          example: 2019-11-20T09:12:28Z
          format: date-time
          type: string
        roleType:
          $ref: '#/components/schemas/CustomerRoleType'
        roleTypes:
          items:
            $ref: '#/components/schemas/CustomerRoleType'
          type: array
        customer:
          description: |
            Tapico generated unique surrogate key for the Customer to deal with potential identifier conflicts across account servicers.

            Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
          example: ad862f97-928a-4ee2-b6fb-a8f6ebc80d3a
          format: uuid
          title: Customer ID
          type: string
        accountGroup:
          $ref: '#/components/schemas/CustomerAccountGroupRelation'
      required:
      - accountGroup
      - customer
      - id
      - roleType
      - roleTypes
      - updatedDateTime
      type: object
    OrganisationCustomer:
      allOf:
      - $ref: '#/components/schemas/BaseCustomer'
      - $ref: '#/components/schemas/OrganisationCustomer_allOf'
      example:
        id: 79a054fe-3597-491f-aa79-d3c072fe24ce
        type: Organisation
        externalId: 015-0000358748
        secondaryExternalId: "358748"
        name: Acme Co
        organisationType: Company
        registrationNumber: 25ad51
        registrationDate: 2001-01-01
        countryOfRegistration: GBR
        leiCode: 33321153OF5F3MYKUV33
        status: Active
        accountServicer: 4b6272d0-face-413a-869a-76ff9ce036ae
        updatedDateTime: 2019-12-01T14:57:59Z
        lastChangeDetectedDateTime: 2019-11-01T09:12:28Z
        emails:
        - email: motoko.kusanagi@tapico.io
          type: Personal
        phoneNumbers:
        - number: +447777777777
          type: Personal
        - number: +447777777777
          type: Home
        taxCountries:
        - countryCode: GBR
        accountRoles:
        - id: 5ad6553a-1de4-40fc-af88-43e438019c6a
          updatedDateTime: 2021-1-01T01:01:01Z
          roleType: Director
          roleTypes:
          - Director
          - Shareholder
          customer: 92b74392-1c5f-4660-8d0e-78963df8b9fe
          account:
            id: 18c68ff9-02af-4133-9166-454918ca63cc
            accountName: Trading Account
            baseCurrency: GBP
            businessOrPersonal: Business
            externalId: XYZ000001-001
            sourceType: GIA
            subtype: Investment
            type: Investment
            updatedDateTime: 2019-11-20T09:12:28Z
            lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
            accountServicer: 4b6272d0-face-413a-869a-76ff9ce036ae
            agentIdentifiers:
            - identifier: 300053
              identifierType: SortCode
            identifiers:
            - identifier: 12345678
              identifierType: AccountNumber
    AccountGroup:
      allOf:
      - $ref: '#/components/schemas/AccountGroupBase'
      - $ref: '#/components/schemas/AccountGroup_allOf'
      example:
        id: 80eafac6-33db-478a-bcc6-adda00c9bf93
        externalId: 001-0000000001
        secondaryExternalId: XYZ000001
        accountName: John Smith - Invididual
        accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
        servicingAgent: a19811e2-4dbc-40ff-9afb-279c945217ae
        type: Individual
        openingDate: 2010-01-01
        updatedDateTime: 2019-11-20T09:12:28Z
        lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
    ServicingAgentRelation:
      description: |
        Represents the relationship to an Servicing Agent resource.

        This can take the value of either the related Servicing Agent ID or the related Servicing Agent resource, depending on whether the property has been expanded.

        Expand with `expand=servicingAgent`.
      example: 9ab395e8-ec78-4826-9aae-71ab5891b123
      oneOf:
      - $ref: '#/components/schemas/ServicingAgentId'
      - $ref: '#/components/schemas/ServicingAgent'
    Account:
      allOf:
      - $ref: '#/components/schemas/AccountBase'
      - $ref: '#/components/schemas/Account_allOf'
      example:
        id: 18c68ff9-02af-4133-9166-454918ca63cc
        externalId: 000-0000000001
        secondaryExternalId: XYZ000001-001
        accountName: John Smith - Stocks and Shares ISA
        accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
        servicingAgent: a19811e2-4dbc-40ff-9afb-279c945217ae
        accountGroup: 80eafac6-33db-478a-bcc6-adda00c9bf93
        baseCurrency: GBP
        businessOrPersonal: Personal
        sourceType: GIA
        subtype: InvestmentAccount
        type: Investment
        openingDate: 2010-01-01
        updatedDateTime: 2019-11-20T09:12:28Z
        lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
        agentIdentifiers:
        - identifier: 300053
          identifierType: SortCode
        identifiers:
        - identifier: 12345678
          identifierType: AccountNumber
    ExternalAccount:
      allOf:
      - $ref: '#/components/schemas/ExternalAccountBase'
      - $ref: '#/components/schemas/Account_allOf'
      example:
        id: 12b6452c-85bd-4237-8938-1f95a1521bcb
        externalId: "157065"
        accountName: John Smith - Current Account
        accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
        servicingAgent: a19811e2-4dbc-40ff-9afb-279c945217ae
        accountGroup: 80eafac6-33db-478a-bcc6-adda00c9bf93
        baseCurrency: GBP
        type: Deposit
        subType: CurrentAccount
        sourceType: BankAccount
        status: Active
        verificationStatus: Passed
        updatedDateTime: 2019-11-20T09:12:28Z
        lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
        agentIdentifiers:
        - identifier: 200042
          identifierType: SortCode
        identifiers:
        - identifier: 87654321
          identifierType: AccountNumber
    AccountGroupCustomerRole:
      description: |
        Represents the relationship to a Customer resource.

        Expand with `expand=roles`.
      example:
        id: 5ad6553a-1de4-40fc-af88-43e438019c6a
        updatedDateTime: 2021-1-01T01:01:01Z
        roleType: Individual
        roleTypes:
        - Individual
        accountGroupId: 80eafac6-33db-478a-bcc6-adda00c9bf93
        customer:
          id: 92b74392-1c5f-4660-8d0e-78963df8b9fe
          type: Individual
          givenName: Motoko
          familyName: Kusanagi
          dateOfBirth: 2004-01-20
          externalId: 015-0000358748
          secondaryExternalId: "358748"
          updatedDateTime: 2019-12-01T14:57:59Z
          lastChangeDetectedDateTime: 2019-11-01T09:12:28Z
          accountServicer: 4b6272d0-face-413a-869a-76ff9ce036ae
          emails:
          - email: motoko.kusanagi@tapico.io
            type: Personal
          phoneNumbers:
          - number: +447777777777
            type: Personal
          - number: +447777777777
            type: Home
      properties:
        id:
          type: string
        updatedDateTime:
          description: Timestamp of data refresh from source.
          example: 2019-11-20T09:12:28Z
          format: date-time
          type: string
        roleType:
          $ref: '#/components/schemas/CustomerRoleType'
        roleTypes:
          items:
            $ref: '#/components/schemas/CustomerRoleType'
          type: array
        customer:
          $ref: '#/components/schemas/CustomerRelation'
        accountGroup:
          description: |
            Tapico generated unique surrogate key for the Account Group to deal with potential identifier conflicts across account servicers.

            Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
          example: c63901f5-f287-44c4-9079-4b960c594421
          format: uuid
          title: Account Group ID
          type: string
      required:
      - accountGroup
      - customer
      - id
      - roleType
      - roleTypes
      - updatedDateTime
      title: Account to Customer Role
      type: object
    AccountBase:
      description: |
        Represents a financial account held at an account service provider such as a bank or an investment platform.

        Accounts hold assets and liabilities e.g.; cash balance in the case of a bank account, stock holdings in a trading account, or fund holdings in a pension account.
      example:
        id: 18c68ff9-02af-4133-9166-454918ca63cc
        externalId: 000-0000000001
        secondaryExternalId: XYZ000001-001
        accountName: John Smith - Stocks and Shares ISA
        baseCurrency: GBP
        businessOrPersonal: Personal
        sourceType: GIA
        subtype: InvestmentAccount
        type: Investment
        openingDate: 2010-01-01
        updatedDateTime: 2019-11-20T09:12:28Z
        lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
        agentIdentifiers:
        - identifier: 666666
          identifierType: SortCode
        identifiers:
        - identifier: 88888888
          identifierType: AccountNumber
      properties:
        id:
          description: |
            Tapico generated unique surrogate key for the Account to deal with potential identifier conflicts across account servicers.

            Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
          example: ad862f97-928a-4ee2-b6fb-a8f6ebc80d3a
          format: uuid
          title: Account ID
          type: string
        externalId:
          description: Primary identifier from the system this entity was imported
            from.
          maxLength: 210
          title: External Entity Identifier
          type: string
        secondaryExternalId:
          description: Secondary identifier from the system this entity was imported
            from.
          maxLength: 210
          title: External Entity Secondary Identifier
          type: string
        accountName:
          description: Name of account in source system.
          maxLength: 500
          type: string
        baseCurrency:
          description: Account Base Currency - currency that assets and liabilities
            in the account are denoted in.
          type: string
        businessOrPersonal:
          $ref: '#/components/schemas/BusinessOrPersonal'
        type:
          $ref: '#/components/schemas/AccountType'
        subType:
          $ref: '#/components/schemas/AccountSubType'
        sourceType:
          description: |
            Account type as received from source system.
          type: string
        openingDate:
          description: Account opening date.
          format: date
          type: string
        updatedDateTime:
          description: Timestamp of data refresh from source.
          example: 2019-11-20T09:12:28Z
          format: date-time
          type: string
        lastChangeDetectedDateTime:
          description: Timestamp of the last time a change was detected in data source.
          example: 2021-10-21T09:12:28Z
          format: date-time
          type: string
        agentIdentifiers:
          items:
            $ref: '#/components/schemas/AgentIdentifier'
          type: array
        identifiers:
          items:
            $ref: '#/components/schemas/AccountIdentifier'
          type: array
      required:
      - accountName
      - agentIdentifiers
      - baseCurrency
      - externalId
      - id
      - identifiers
      - subType
      - type
      - updatedDateTime
      type: object
    AccountGroupRelation:
      description: |
        Represents the relationship to an Account Group resource.

        This can take the value of either the related Account Group ID or the related Account Group resource, depending on whether the property has been expanded.

        Expand with `expand=accountGroup`.
      example: 80eafac6-33db-478a-bcc6-adda00c9bf93
      oneOf:
      - $ref: '#/components/schemas/AccountGroupId'
      - $ref: '#/components/schemas/AccountGroup'
    AccountCustomerRole:
      description: |
        Represents the relationship to a Customer resource.

        Expand with `expand=roles`.
      example:
        id: 5ad6553a-1de4-40fc-af88-43e438019c6a
        updatedDateTime: 2021-1-01T01:01:01Z
        roleType: Individual
        roleTypes:
        - Individual
        account: 18c68ff9-02af-4133-9166-454918ca63cc
        customer:
          id: 92b74392-1c5f-4660-8d0e-78963df8b9fe
          type: Individual
          givenName: Motoko
          familyName: Kusanagi
          dateOfBirth: 2004-01-20
          externalId: 015-0000358748
          secondaryExternalId: "358748"
          updatedDateTime: 2019-12-01T14:57:59Z
          lastChangeDetectedDateTime: 2019-11-01T09:12:28Z
          accountServicer: 4b6272d0-face-413a-869a-76ff9ce036ae
          emails:
          - email: motoko.kusanagi@tapico.io
            type: Personal
          phoneNumbers:
          - number: +447777777777
            type: Personal
          - number: +447777777777
            type: Home
      properties:
        id:
          type: string
        updatedDateTime:
          description: Timestamp of data refresh from source.
          example: 2019-11-20T09:12:28Z
          format: date-time
          type: string
        roleType:
          $ref: '#/components/schemas/CustomerRoleType'
        roleTypes:
          items:
            $ref: '#/components/schemas/CustomerRoleType'
          type: array
        customer:
          $ref: '#/components/schemas/CustomerRelation'
        account:
          description: |
            Tapico generated unique surrogate key for the Account to deal with potential identifier conflicts across account servicers.

            Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
          example: ad862f97-928a-4ee2-b6fb-a8f6ebc80d3a
          format: uuid
          title: Account ID
          type: string
      required:
      - account
      - customer
      - id
      - roleType
      - roleTypes
      - updatedDateTime
      title: Account to Customer Role
      type: object
    ExternalAccountBase:
      description: |
        External Accounts represent a record at the account service provider referring to an account held at another provider.
        For example an investment account provider may hold references to external bank accounts that are the source or destination of funds from investment activity.
      example:
        id: 12b6452c-85bd-4237-8938-1f95a1521bcb
        externalId: "157065"
        accountName: John Smith - Current Account
        baseCurrency: GBP
        type: Deposit
        subType: CurrentAccount
        sourceType: BankAccount
        status: Active
        verificationStatus: Passed
        updatedDateTime: 2019-11-20T09:12:28Z
        lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
        agentIdentifiers:
        - identifier: 200042
          identifierType: SortCode
        identifiers:
        - identifier: 87654321
          identifierType: AccountNumber
      properties:
        id:
          description: |
            Tapico generated unique surrogate key for the External Account to deal with potential identifier conflicts across account servicers.

            Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
          example: 12b6452c-85bd-4237-8938-1f95a1521bcb
          format: uuid
          title: External Account ID
          type: string
        externalId:
          description: Primary identifier from the system this entity was imported
            from.
          maxLength: 210
          title: External Entity Identifier
          type: string
        secondaryExternalId:
          description: Secondary identifier from the system this entity was imported
            from.
          maxLength: 210
          title: External Entity Secondary Identifier
          type: string
        accountName:
          description: Name of account in source system.
          maxLength: 500
          type: string
        baseCurrency:
          description: Account Base Currency - currency that assets and liabilities
            in the account are denoted in.
          type: string
        type:
          $ref: '#/components/schemas/AccountType'
        subType:
          $ref: '#/components/schemas/AccountSubType'
        sourceType:
          description: |
            Account type as received from source system.
          type: string
        status:
          $ref: '#/components/schemas/ExternalAccountStatus'
        verificationStatus:
          $ref: '#/components/schemas/ExternalAccountVerificationStatus'
        agentName:
          description: Name of the bank where the account is held.
          type: string
        agentAddress:
          $ref: '#/components/schemas/Address'
        availableForPlatformDeposit:
          description: Defines if the account is used for depositing funds on the
            account servicer’s proposition.
          type: boolean
        availableForPlatformWithdrawal:
          description: Defines if the account can receive fund withdrawals from the
            account servicer’s proposition.
          type: boolean
        updatedDateTime:
          description: Timestamp of data refresh from source.
          example: 2019-11-20T09:12:28Z
          format: date-time
          type: string
        lastChangeDetectedDateTime:
          description: Timestamp of the last time a change was detected in data source.
          example: 2021-10-21T09:12:28Z
          format: date-time
          type: string
        agentIdentifiers:
          items:
            $ref: '#/components/schemas/AgentIdentifier'
          type: array
        identifiers:
          items:
            $ref: '#/components/schemas/AccountIdentifier'
          type: array
      required:
      - accountName
      - agentIdentifiers
      - baseCurrency
      - externalId
      - id
      - identifiers
      - status
      - subType
      - type
      - updatedDateTime
      - verificationStatus
      type: object
    Holding:
      description: |
        The holdings resource represents an asset or liability position on a financial instrument held within an account (see: Account resource) at a financial institution (see: Account servicer).
        The types of financial instruments include, amongst others; currencies, stocks, funds, deposits, loans.
      example:
        instrument:
          id: AAPL
          displayName: Apple Inc.
          isin: US0378331005
          sedol: "2046251"
          assetClass: Equity
          currency: USD
          price: 267.09
          priceType: Last
          priceAsAtDateTime: 2019-12-11
        updatedDateTime: 2019-11-20T09:12:28Z
        quantity: 18
        unsettledQuantity: 10
        availableQuantity: 8
        value:
          amount: 3591.17
          currency: GBP
        valueDate: 2019-11-20
        baseCurrencyCost:
          amount: 193.96
          currency: GBP
      properties:
        instrument:
          $ref: '#/components/schemas/InstrumentRelation'
        sourceInstrument:
          $ref: '#/components/schemas/SourceInstrumentRelation'
        updatedDateTime:
          description: Timestamp of data refresh from source.
          example: 2019-11-20T09:12:28Z
          format: date-time
          type: string
        quantity:
          description: |
            The total units of the holding.
          example: 18
          multipleOf: 0.00010
          type: number
        value:
          $ref: '#/components/schemas/Holding_value'
        valueDate:
          description: |
            The value date for the holding
          format: date-time
          type: string
        unsettledQuantity:
          description: |
            The total unsettled units for in progress transactions such as trades or transfers.
          example: 10
          multipleOf: 0.00010
          type: number
        availableQuantity:
          description: |
            The total units available for transact activity, this figure depends on the particular rules in the source system.
            Some systems may choose to make unsettled units from buy (or subscription) transactions available to sell prior to settlement.
          example: 8
          multipleOf: 0.00010
          type: number
        baseCurrencyCost:
          $ref: '#/components/schemas/Holding_baseCurrencyCost'
        lastChangeDetectedDateTime:
          description: Timestamp of the last time a change was detected in data source.
          example: 2021-10-21T09:12:28Z
          format: date-time
          type: string
      required:
      - availableQuantity
      - instrument
      - quantity
      - unsettledQuantity
      - updatedDateTime
      - value
      - valueDate
      type: object
    TransactionId:
      description: |
        Tapico generated unique surrogate key for the Transaction to deal with potential identifier conflicts across account servicers.

        Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
      example: c8361dd8-de63-4b54-823a-aa7435539068
      format: uuid
      title: Transaction ID
      type: string
    ExternalEntityIdentifier:
      description: Primary identifier from the system this entity was imported from.
      maxLength: 210
      title: External Entity Identifier
      type: string
    ExternalEntitySecondaryIdentifier:
      description: Secondary identifier from the system this entity was imported from.
      maxLength: 210
      title: External Entity Secondary Identifier
      type: string
    Timestamp:
      description: Timestamp of data refresh from source.
      example: 2019-11-20T09:12:28Z
      format: date-time
      type: string
    ChangeTimestamp:
      description: Timestamp of the last time a change was detected in data source.
      example: 2021-10-21T09:12:28Z
      format: date-time
      type: string
    TransactionStatus:
      enum:
      - Pending
      - Booked
      type: string
    InstrumentRelation:
      description: |
        Represents the relationship to an Instrument resource.

        This can take the value of either the related Instrument ID or the related Instrument resource, depending on whether the property has been expanded.

        Expand with `expand=instrument`.
      example: GBP
      oneOf:
      - $ref: '#/components/schemas/InstrumentId'
      - $ref: '#/components/schemas/Instrument'
    SourceInstrumentRelation:
      description: |
        Represents the relationship to a Source Instrument resource.

        This can take the value of either the related Source Instrument ID or the related Source Instrument resource, depending on whether the property has been expanded.

        Expand with `expand=sourceInstrument`.
      example: GBP
      oneOf:
      - $ref: '#/components/schemas/SourceInstrumentId'
      - $ref: '#/components/schemas/SourceInstrument'
    RegularPaymentId:
      description: |
        Tapico generated unique surrogate key for the Regular Payment to deal with potential identifier conflicts across account servicers.

        Refer to `externalId` for the origin system identifier.
      example: 646cb812-470c-4643-a4a3-ee1039952ff9
      format: uuid
      title: Transaction ID
      type: string
    RegularPaymentType:
      enum:
      - Deposit
      - Withdrawal
      title: Regular Payment Type
      type: string
    PaymentMethod:
      enum:
      - NotSpecified
      - BACS
      - BalanceTransfer
      - CHAPS
      - Cheque
      - DebitCard
      - DirectCredit
      - DirectDebit
      - Faster
      - MoneyTransfer
      - ProductTransfer
      - SWIFT
      - Other
      type: string
    RegularPaymentFrequency:
      enum:
      - NotSpecified
      - Daily
      - Weekly
      - Fortnightly
      - Monthly
      - Quarterly
      - HalfYearly
      - Yearly
      - Termly
      title: Regular Payment Frequency
      type: string
    ExternalAccountRelation:
      description: |-
        / Represents the relationship to an External Account resource.
        This can take the value of either the related External Account ID or the related External Account resource, depending on whether the property has been expanded.
        Expand with `expand=externalAccount`.
      example: 12b6452c-85bd-4237-8938-1f95a1521bcb
      oneOf:
      - $ref: '#/components/schemas/ExternalAccountId'
      - $ref: '#/components/schemas/ExternalAccount'
    CustomerAddressId:
      description: |
        Tapico generated unique surrogate key for the Customer Address to deal with potential identifier conflicts across account servicers.

        Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
      example: ad862f97-928a-4ee2-b6fb-a8f6ebc80d3a
      format: uuid
      title: Customer Address ID
      type: string
    CustomerId:
      description: |
        Tapico generated unique surrogate key for the Customer to deal with potential identifier conflicts across account servicers.

        Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
      example: ad862f97-928a-4ee2-b6fb-a8f6ebc80d3a
      format: uuid
      title: Customer ID
      type: string
    AccountId:
      description: |
        Tapico generated unique surrogate key for the Account to deal with potential identifier conflicts across account servicers.

        Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
      example: ad862f97-928a-4ee2-b6fb-a8f6ebc80d3a
      format: uuid
      title: Account ID
      type: string
    BeneficiaryAccount:
      properties:
        identifierType:
          $ref: '#/components/schemas/AccountIdentifierType'
        identifier:
          description: Identification assigned by an institution to identify an account.
            This identification is known by the account owner.
          maxLength: 256
          minLength: 1
          type: string
        name:
          description: 'Name of the account, as assigned by the account servicing
            institution. Usage: The account name is the name or names of the account
            owner(s) represented at an account level. The account name is not the
            product name or the nickname of the account.'
          maxLength: 70
          minLength: 1
          type: string
        secondaryIdentification:
          description: This is secondary identification of the account, as assigned
            by the account servicing institution. This can be used by building societies
            to additionally identify accounts with a roll number (in addition to a
            sort code and account number combination).
          maxLength: 34
          minLength: 1
          type: string
      type: object
    BeneficiaryAgent:
      properties:
        identifierType:
          $ref: '#/components/schemas/AgentIdentifierType'
        identifier:
          description: Unique and unambiguous identification of the servicing institution.
          maxLength: 35
          type: string
        name:
          description: Name by which an agent is known and which is usually used to
            identify that agent.
          maxLength: 140
          minLength: 1
          type: string
        postalAddress:
          $ref: '#/components/schemas/PostalAddress'
      type: object
    BaseInstrument:
      description: |
        A financial instrument for which transactions and positions can arise. Including, but not limited to; currencies, stocks, funds.
      properties:
        id:
          description: |
            Tapico generated unique identifier for the Instrument.

            Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
          example: GBP
          title: Instrument ID
          type: string
        displayName:
          description: |
            The instrument display name, this may adopt the instrument description from the source system.
            As such there can be subtle differences for the same instrument across different account providers depending on their market data sources and any customised name logic they may have.
          type: string
        isin:
          description: International Securities Identification Number.
          example: US0231351067
          type: string
        sedol:
          description: Stock Exchange Daily Official List Number.
          example: "0263494"
          type: string
        cusip:
          description: Committee on Uniform Securities Identification Procedures Number.
          example: "037833100"
          type: string
        ric:
          description: Reuters Instrument Code.
          example: AAPL.O
          type: string
        citiCode:
          description: Unique identifier for funds used by Financial Express.
          example: AU10
          type: string
        type:
          $ref: '#/components/schemas/InstrumentType'
        currency:
          description: Instrument currency in ISO 4217 format.
          example: GBP
          type: string
        price:
          description: |
            Price denominated in the instrument currency.
            For instruments whose prices are quoted not as a value per unit (for example bonds are conventionally expressed as a percentage of par value), these are normalised to be expressed as as a price per quantity unit for simplicity and consistency.

            Omitted for currencies.
          example: 222.53
          multipleOf: 0.00010
          type: number
        priceType:
          $ref: '#/components/schemas/PriceType'
        priceAsAtDate:
          format: date
          type: string
      required:
      - currency
      - displayName
      - id
      - type
      title: Base Instrument
      type: object
    ModelPortfolioTargetAllocation:
      description: Represents the mapping between a parent Model Portfolio and it's
        underlying Instruments and associated weights.
      properties:
        instrument:
          $ref: '#/components/schemas/ModelPortfolioInstrumentRelation'
        lastChangeDetectedDateTime:
          description: Timestamp of the last time a change was detected in data source.
          example: 2021-10-21T09:12:28Z
          format: date-time
          type: string
        weight:
          example: 36.52
          multipleOf: 0.01
          type: number
      required:
      - instrument
      - weight
      title: Model Portfolio Target Allocation
      type: object
    OrganisationId:
      description: Unique identifier for Organisation
      example: 0f40a7fd-0b2d-460f-aacc-6ff7483f7a44
      format: uuid
      title: Organisation ID
      type: string
    EndToEndIdentification:
      description: Unique identification assigned by the initiating party to unambiguously
        identify the transaction. This identification is passed on, unchanged, throughout
        the entire end-to-end chain.
      example: XYZ123
      maxLength: 18
      minLength: 1
      type: string
    ExecutionDate:
      description: Date when payment should be executed. When omitted, defaults to
        today.
      example: 2019-11-12
      format: date
      title: Execution Date
      type: string
    AccountIdentification:
      properties:
        name:
          type: string
        agentIdentifier:
          $ref: '#/components/schemas/AgentIdentifier'
        accountIdentifier:
          $ref: '#/components/schemas/AccountIdentifier'
      required:
      - accountIdentifier
      - agentIdentifier
      - name
      type: object
    RemitterReference:
      description: Unique reference, as assigned by the creditor, to unambiguously
        refer to the payment transaction.
      example: REF1234
      maxLength: 18
      minLength: 1
      type: string
    RemittanceInformation:
      description: Information supplied to enable the matching/reconciliation of an
        entry with the items that the payment is intended to settle, such as commercial
        invoices in an accounts' receivable system, in an unstructured form.
      example: System generated remittance information
      maxLength: 140
      minLength: 1
      type: string
    RiskInformation:
      description: |
        The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Payments.
      properties:
        paymentContextCode:
          $ref: '#/components/schemas/PaymentContextCode'
        merchantCategoryCode:
          description: |
            Category code conform to ISO 18245, related to the type of services or goods the merchant provides for the transaction.
          maxLength: 4
          minLength: 4
          type: string
        merchantCustomerIdentification:
          description: The unique customer identifier of the PSU with the merchant.
          maxLength: 70
          minLength: 1
          type: string
        deliveryAddress:
          $ref: '#/components/schemas/RiskInformation_deliveryAddress'
      type: object
    ConsentType:
      description: Granular consent definition.
      properties:
        name:
          $ref: '#/components/schemas/ConsentTypeName'
        description:
          type: string
        isMandatory:
          type: boolean
        consentCategory:
          $ref: '#/components/schemas/ConsentCategory'
        type:
          $ref: '#/components/schemas/ConsentRequestType'
      required:
      - consentCategory
      - description
      - isMandatory
      - name
      - type
      type: object
    Application:
      allOf:
      - $ref: '#/components/schemas/Application_allOf'
      - $ref: '#/components/schemas/ApplicationExtendedBase'
      - $ref: '#/components/schemas/AuditEntity'
    ServicingAgentId:
      description: |
        Tapico generated unique surrogate key for the Servicing Agent to deal with potential identifier conflicts across account servicers.

        Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
      example: cf4bca74-46d1-449f-b621-32be4fc315e9
      format: uuid
      title: Servicing Agent ID
      type: string
    ServicingAgentStatus:
      enum:
      - NotSpecified
      - Active
      - Inactive
      type: string
    Address:
      description: Represents an address.
      example:
        addressLines:
        - 221b Baker St
        - London
        postCode: NW1 6XE
        countryCode: GBR
      properties:
        addressLines:
          items:
            type: string
          type: array
        postCode:
          type: string
        countryCode:
          description: Country code in ISO 3166 format.
          example: GBR
          type: string
      required:
      - addressLines
      title: Address
      type: object
    NationalCompetentAuthority:
      description: Jurisdictional financial regulatory body.
      enum:
      - NotSpecified
      - ASIC_AUS
      - FCA_GBR
      - FMA_NZL
      - HKMA_HKG
      - MAS_SGP
      title: National Competent Authority
      type: string
    ServicingOrganisationId:
      description: |
        Tapico generated unique surrogate key for the Servicing Organisation to deal with potential identifier conflicts across account servicers.

        Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
      example: f6dc8217-d507-4ba6-805c-dbe6034d25f5
      format: uuid
      title: Servicing Organisation ID
      type: string
    ServicingOrganisation:
      allOf:
      - $ref: '#/components/schemas/ServicingOrganisationBase'
      - $ref: '#/components/schemas/ServicingOrganisation_allOf'
      example:
        id: 039f9547-51c5-4768-89a1-79f145ef5174
        externalId: 003-0000006429
        secondaryExternalId: EI00669
        name: Adler Advisers
        type: Adviser
        lastChangeDetectedDateTime: 2019-11-25T09:12:28Z
        address:
          addressLines:
          - 221b Baker St
          - London
          postCode: NW1 6XE
          countryCode: GBR
        accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
    ServicingOrganisationType:
      enum:
      - NotSpecified
      - Admin
      - Adviser
      - DiscretionaryManager
      - ModelManager
      - Other
      type: string
    BaseCustomer:
      description: Entity representing the owner of an account.
      properties:
        id:
          description: |
            Tapico generated unique surrogate key for the Customer to deal with potential identifier conflicts across account servicers.

            Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
          example: ad862f97-928a-4ee2-b6fb-a8f6ebc80d3a
          format: uuid
          title: Customer ID
          type: string
        type:
          $ref: '#/components/schemas/CustomerType'
        externalId:
          description: Primary identifier from the system this entity was imported
            from.
          maxLength: 210
          title: External Entity Identifier
          type: string
        secondaryExternalId:
          description: Secondary identifier from the system this entity was imported
            from.
          maxLength: 210
          title: External Entity Secondary Identifier
          type: string
        sourceSystemId:
          $ref: '#/components/schemas/SourceSystemEntityIdentifier'
        updatedDateTime:
          description: Timestamp of data refresh from source.
          example: 2019-11-20T09:12:28Z
          format: date-time
          type: string
        emails:
          items:
            $ref: '#/components/schemas/CustomerEmail'
          type: array
        phoneNumbers:
          items:
            $ref: '#/components/schemas/CustomerPhoneNumber'
          type: array
        taxCountries:
          items:
            $ref: '#/components/schemas/TaxIdentifier'
          type: array
      required:
      - externalId
      - id
      type: object
    CustomerMaritalStatusType:
      description: Customer Marital Status
      enum:
      - NotSpecified
      - Married
      - Separated
      - CivilPartner
      - Divorced
      - Widowed
      - Single
      - Partner
      type: string
    CustomerGenderType:
      description: Customer Gender
      enum:
      - NotSpecified
      - Male
      - Female
      type: string
    EmploymentDetails:
      example:
        status: Employed
        occupation: Developer
        employerName: SCC company
        employerAddress:
          addressLines:
          - 221b Baker St
          - London
          postCode: 6jq OX$
          countryCode: GBR
      properties:
        status:
          $ref: '#/components/schemas/CustomerEmploymentStatusType'
        occupation:
          maxLength: 254
          type: string
        employerName:
          maxLength: 254
          type: string
        employerAddress:
          $ref: '#/components/schemas/Address'
    CustomerRoleType:
      description: The type of role which a customer has to an account.
      enum:
      - NotSpecified
      - AuthorisedSignatory
      - Beneficiary
      - Dependent
      - Director
      - Disclosure
      - Employer
      - Executor
      - ExSpouse
      - Individual
      - Joint
      - LegalRepresentative
      - LetterOfAuthority
      - LifeAssured
      - Nominee
      - Organisation
      - Owner
      - PartnerOfAccountHolder
      - PowerOfAttorney
      - Protector
      - RegisteredContact
      - SeniorManager
      - Settlor
      - Shareholder
      - ShareholderGT25
      - ThirdParty
      - ThirdPartyPayer
      - TrustAppointer
      - TrustController
      - Trustee
      type: string
    CustomerAccountRelation:
      description: |
        Represents the relationship to an Account resource.

        This can take the value of either the related Account ID or the related Account resource, depending on whether the property has been expanded.

        Expand with `expand=accountRoles.account`.
      example: 18c68ff9-02af-4133-9166-454918ca63cc
      oneOf:
      - $ref: '#/components/schemas/AccountId'
      - $ref: '#/components/schemas/CustomerAccount'
    CustomerAccountGroupRelation:
      description: |
        Represents the relationship to an Account Group resource.

        This can take the value of either the related Account Group ID or the related Account Group resource, depending on whether the property has been expanded.

        Expand with `expand=accountGroupRoles.accountGroup`.
      example: 80eafac6-33db-478a-bcc6-adda00c9bf93
      oneOf:
      - $ref: '#/components/schemas/AccountGroupId'
      - $ref: '#/components/schemas/CustomerAccountGroup'
    AccountGroupBase:
      description: Represents a grouping of Accounts, for example, a logical grouping
        of products such a ISA's and GIA's jointly held my multiple account owners.
      example:
        id: 80eafac6-33db-478a-bcc6-adda00c9bf93
        externalId: 001-0000000001
        secondaryExternalId: XYZ000001
        accountName: John Smith - Invididual
        type: Individual
        openingDate: 2010-01-01
        updatedDateTime: 2019-11-20T09:12:28Z
        lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
      properties:
        id:
          description: |
            Tapico generated unique surrogate key for the Account Group to deal with potential identifier conflicts across account servicers.

            Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
          example: c63901f5-f287-44c4-9079-4b960c594421
          format: uuid
          title: Account Group ID
          type: string
        externalId:
          description: Primary identifier from the system this entity was imported
            from.
          maxLength: 210
          title: External Entity Identifier
          type: string
        secondaryExternalId:
          description: Secondary identifier from the system this entity was imported
            from.
          maxLength: 210
          title: External Entity Secondary Identifier
          type: string
        accountName:
          description: Name of Account Group in source system.
          maxLength: 500
          type: string
        type:
          $ref: '#/components/schemas/AccountGroupType'
        openingDate:
          description: Account Group opening date.
          format: date
          type: string
        updatedDateTime:
          description: Timestamp of data refresh from source.
          example: 2019-11-20T09:12:28Z
          format: date-time
          type: string
        lastChangeDetectedDateTime:
          description: Timestamp of the last time a change was detected in data source.
          example: 2021-10-21T09:12:28Z
          format: date-time
          type: string
      required:
      - accountName
      - externalId
      - id
      - type
      - updatedDateTime
      title: Account Group
      type: object
    ServicingAgent:
      allOf:
      - $ref: '#/components/schemas/ServicingAgentBase'
      - $ref: '#/components/schemas/ServicingAgent_allOf'
      example:
        id: a19811e2-4dbc-40ff-9afb-279c945217ae
        externalId: 002-0000051754
        secondaryExternalId: EI006690000001
        name: Irene Adler
        status: Active
        address:
          addressLines:
          - 221b Baker St
          - London
          postCode: NW1 6XE
          countryCode: GBR
        servicingOrganisation: 039f9547-51c5-4768-89a1-79f145ef5174
        nationalCompetentAuthority: FCA_GBR
        nationalCompetentAuthorityCode: "123456"
        accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
        lastChangeDetectedDateTime: 2019-11-25T09:12:28Z
    AccountGroupId:
      description: |
        Tapico generated unique surrogate key for the Account Group to deal with potential identifier conflicts across account servicers.

        Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
      example: c63901f5-f287-44c4-9079-4b960c594421
      format: uuid
      title: Account Group ID
      type: string
    CustomerRelation:
      description: |
        Represents the relationship to a Customer resource.

        This can take the value of either related Individual or Customer resource.

        Expand with `expand=roles.customer`.
      example: 92b74392-1c5f-4660-8d0e-78963df8b9fe
      oneOf:
      - $ref: '#/components/schemas/CustomerId'
      - $ref: '#/components/schemas/IndividualCustomer'
      - $ref: '#/components/schemas/OrganisationCustomer'
    BusinessOrPersonal:
      description: For bank and current accounts this identifies whether the account
        is a personal or business account.
      enum:
      - Personal
      - Business
      type: string
    AccountType:
      description: Top level account category.
      enum:
      - NotSpecified
      - Credit
      - Deposit
      - Investment
      - Loan
      - Other
      type: string
    AccountSubType:
      description: Account sub category
      enum:
      - NotSpecified
      - CashAccount
      - CashISA
      - ChargeCard
      - CreditCard
      - CurrentAccount
      - EMoney
      - InvestmentAccount
      - ISA
      - JuniorISA
      - JuniorSIPP
      - Loan
      - MarginLendingAccount
      - Mortgage
      - NoticeAccount
      - OffshoreBond
      - OnshoreBond
      - ORSO
      - Pension
      - PersonalEquityPlan
      - PrePaidCard
      - ProtectedRightsPension
      - RetirementAccumulation
      - RetirementDrawdown
      - SavingsAccount
      - SIPP
      - ThirdPartyOffshoreBond
      - ThirdPartyOnshoreBond
      - ThirdPartyPension
      type: string
    AgentIdentifier:
      properties:
        identifierType:
          $ref: '#/components/schemas/AgentIdentifierType'
        identifier:
          example: "223344"
          type: string
      required:
      - identifier
      - identifierType
      type: object
    AccountIdentifier:
      properties:
        identifierType:
          $ref: '#/components/schemas/AccountIdentifierType'
        identifier:
          example: "12345678"
          type: string
      required:
      - identifier
      - identifierType
      type: object
    ExternalAccountId:
      description: |
        Tapico generated unique surrogate key for the External Account to deal with potential identifier conflicts across account servicers.

        Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
      example: 12b6452c-85bd-4237-8938-1f95a1521bcb
      format: uuid
      title: External Account ID
      type: string
    ExternalAccountStatus:
      description: External Account Status.
      enum:
      - NotSpecified
      - Inactive
      - AwaitingAuthorisation
      - Active
      type: string
    ExternalAccountVerificationStatus:
      description: External Account Verification Status.
      enum:
      - NotSpecified
      - Error
      - Failed
      - Referred
      - Passed
      type: string
    InstrumentId:
      description: |
        Tapico generated unique identifier for the Instrument.

        Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
      example: GBP
      title: Instrument ID
      type: string
    SourceInstrumentId:
      example: 10296e8b-f0ec-47a3-9aff-590f692b5bd7
      format: uuid
      title: Source Instrument ID
      type: string
    SourceInstrument:
      description: Details of the instrument from account servicer. This can contain
        proprietary identifiers and descriptions from the account servicer.
      properties:
        id:
          example: 10296e8b-f0ec-47a3-9aff-590f692b5bd7
          format: uuid
          title: Source Instrument ID
          type: string
        accountServicerId:
          description: Unique identifier for Account Servicer.
          example: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          format: uuid
          title: Account Servicer ID
          type: string
        externalId:
          description: Identifier code/ticker of the instrument from the source system
            (account servicer). This will vary based on the source system's chosen
            methodology for instrument and holding identifiers. For exchange traded
            or standardised asset types such as stocks and listed funds, this may
            reflect the stock or fund ticker code. In the case of non-standard investment
            products such as model portfolios or loan and deposit products, this may
            reflect a source system generated identifier.
          type: string
        displayName:
          description: The instrument display name from the source system (account
            servicer).
          type: string
        instrumentId:
          description: |
            Tapico generated unique identifier for the Instrument.

            Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
          example: GBP
          title: Instrument ID
          type: string
        type:
          example: Fund
          type: string
        currency:
          description: Instrument currency in ISO 4217 format.
          example: GBP
          type: string
        isin:
          description: ISIN - International Securities Identification Number.
          example: US0231351067
          type: string
        sedol:
          description: SEDOL - Stock Exchange Daily Official List Number.
          example: "0263494"
          type: string
        cusip:
          description: CUSIP - Committee on Uniform Securities Identification Procedures
            Number.
          example: "037833100"
          type: string
        ric:
          description: RIC - Reuters Instrument Code.
          example: AAPL.O
          type: string
        citiCode:
          description: Citi code - Unique identifier for funds used by Financial Express.
          example: AU10
          type: string
      required:
      - accountServicerId
      - currency
      - displayName
      - externalId
      - id
      - instrumentId
      - type
      title: Source instrument
      type: object
    AccountIdentifierType:
      description: Specifies the type of account identifier.
      enum:
      - AccountNumber
      - IBAN
      - PAN
      - BBAN
      - Paym
      type: string
    AgentIdentifierType:
      description: Specifies the type of agent identifier.
      enum:
      - BIC
      - SortCode
      type: string
    PostalAddress:
      properties:
        addressType:
          $ref: '#/components/schemas/AddressType'
        department:
          description: Identification of a division of a large organisation or building.
          maxLength: 70
          minLength: 1
          type: string
        subDepartment:
          description: Identification of a sub-division of a large organisation or
            building.
          maxLength: 70
          minLength: 1
          type: string
        streetName:
          description: Name of a street or thoroughfare.
          maxLength: 70
          minLength: 1
          type: string
        buildingNumber:
          description: Number that identifies the position of a building on a street.
          maxLength: 16
          minLength: 1
          type: string
        postCode:
          description: Identifier consisting of a group of letters and/or numbers
            that is added to a postal address to assist the sorting of mail.
          maxLength: 16
          minLength: 1
          type: string
        townName:
          description: Name of a built-up area, with defined boundaries, and a local
            government.
          maxLength: 35
          minLength: 1
          type: string
        countrySubDivision:
          description: Identifies a subdivision of a country such as state, region,
            county.
          maxLength: 35
          minLength: 1
          type: string
        country:
          description: Nation with its own government.
          pattern: ^[A-Z]{2,2}$
          type: string
        addressLines:
          description: Information that locates and identifies a specific address,
            as defined by postal services, presented in free format text.
          items:
            maxLength: 70
            minLength: 1
            type: string
          maxItems: 7
          minItems: 0
          type: array
        updatedDateTime:
          description: Timestamp of data refresh from source.
          example: 2019-11-20T09:12:28Z
          format: date-time
          type: string
        lastChangeDetectedDateTime:
          description: Timestamp of the last time a change was detected in data source.
          example: 2021-10-21T09:12:28Z
          format: date-time
          type: string
      type: object
    InstrumentType:
      description: Top level instrument category
      enum:
      - NotSpecified
      - AdviserModelPortfolio
      - Bond
      - Cash
      - CashDeposit
      - CommercialProperty
      - CreditingRateFunds
      - Crypto
      - Currency
      - Deposits
      - Equity
      - ExchangeTradedFund
      - ExternalAsset
      - ForeignExchange
      - Gilt
      - InsuredFund
      - InvestmentTrust
      - Lifestyle
      - ManagedFund
      - ManagedModelPortfolio
      - ModelAccount
      - ModelPortfolio
      - NetworkModelPortfolio
      - OffPlatform
      - PerpetualBond
      - PlatformFund
      - SmoothedFund
      - StructuredDeposit
      - StructuredProduct
      - SyntheticFund
      - TermDeposit
      - WrapProviderModelPortfolio
      type: string
    PriceType:
      description: Pricing methodology which can vary based on the type of instrument
        and the context in which it is evaluated, e.g. exchange trading, pension valuation.
      enum:
      - Ask
      - Bid
      - Closing
      - Last
      - Mid
      type: string
    ModelPortfolioInstrumentRelation:
      description: |
        Represents the relationship to an Instrument resource.

        This can take the value of either the related Instrument ID or the related Instrument resource, depending on whether the property has been expanded.
      example: GBP
      oneOf:
      - $ref: '#/components/schemas/InstrumentId'
      - $ref: '#/components/schemas/BaseInstrument'
      title: Model Portfolio Instrument Relation
    PaymentContextCode:
      description: Specifies the payment context.
      enum:
      - BillPayment
      - EcommerceGoods
      - EcommerceServices
      - Other
      - PartyToParty
      type: string
    ConsentCategory:
      description: A grouping of related granular consents.
      properties:
        name:
          $ref: '#/components/schemas/ConsentCategoryName'
        description:
          description: User friendly description of the consent category.
          type: string
      required:
      - description
      - name
      type: object
    ConsentRequestType:
      enum:
      - Payment
      - AccountAccess
      type: string
    ApplicationConfiguredConsentType:
      allOf:
      - $ref: '#/components/schemas/AccountAccessConsentType_allOf'
      - $ref: '#/components/schemas/AuditEntity'
    ApplicationAccountServicerLink:
      allOf:
      - $ref: '#/components/schemas/BaseAccountServicerLink'
      - $ref: '#/components/schemas/ApplicationAccountServicerLink_allOf'
    ApplicationExtendedBase:
      allOf:
      - $ref: '#/components/schemas/ApplicationBase'
      - $ref: '#/components/schemas/ApplicationExtendedBase_allOf'
    SourceSystemEntityIdentifier:
      description: Entity identifier from the source system the entity was originally
        created at.
      properties:
        applicationName:
          description: Name of the source system where this entity was originally
            created at, if created via the Tapico API.
          example: Iress Xplan
          type: string
        applicationId:
          description: Unique identifier for Application.
          example: 9588b9e9-9f1d-4943-b547-70b809c30db8
          format: uuid
          title: Application ID
          type: string
        identifier:
          example: ABC123
          type: string
      required:
      - identifier
      title: Source System Entity Identifier
      type: object
    CustomerEmail:
      description: |
        Customer email address.
      example:
        type: Personal
        email: motoko.kusanagi@tapico.io
      properties:
        email:
          format: email
          type: string
        type:
          $ref: '#/components/schemas/CustomerEmailType'
      required:
      - email
      type: object
    CustomerPhoneNumber:
      allOf:
      - $ref: '#/components/schemas/PhoneNumber'
      - $ref: '#/components/schemas/CustomerPhoneNumber_allOf'
    TaxIdentifier:
      example:
        countryCode: GBR
        isPrimary: false
        taxNumber: 65465-adg
        type: EmployerIdentificationNumber
      properties:
        countryCode:
          description: Country code in ISO 3166 format.
          example: GBR
          type: string
        isPrimary:
          type: boolean
        taxNumber:
          type: string
        type:
          $ref: '#/components/schemas/CustomerTaxType'
      required:
      - countryCode
    CustomerEmploymentStatusType:
      enum:
      - NotSpecified
      - Employed
      - SelfEmployed
      - Retired
      - CaringForAPersonUnder16
      - CaringForAPersonOver16
      - ChildUnder16
      - FullTimeEducation
      - Unemployed
      - Partner
      - Other
      type: string
    CustomerAccount:
      allOf:
      - $ref: '#/components/schemas/AccountBase'
      - $ref: '#/components/schemas/CustomerAccount_allOf'
      example:
        id: 18c68ff9-02af-4133-9166-454918ca63cc
        externalId: 000-0000000001
        secondaryExternalId: XYZ000001-001
        accountName: John Smith - Stocks and Shares ISA
        accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
        servicingAgent:
          id: a19811e2-4dbc-40ff-9afb-279c945217ae
          externalId: 002-0000051754
          secondaryExternalId: EI006690000001
          name: Irene Adler
          status: Active
          address:
            addressLines:
            - 221b Baker St
            - London
            postCode: NW1 6XE
            countryCode: GBR
          servicingOrganisation: 039f9547-51c5-4768-89a1-79f145ef5174
          nationalCompetentAuthority: FCA_GBR
          nationalCompetentAuthorityCode: "123456"
          accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          lastChangeDetectedDateTime: 2019-11-25T09:12:28Z
        accountGroup: 80eafac6-33db-478a-bcc6-adda00c9bf93
        baseCurrency: GBP
        businessOrPersonal: Personal
        sourceType: GIA
        subtype: InvestmentAccount
        type: Investment
        openingDate: 2010-01-01
        updatedDateTime: 2019-11-20T09:12:28Z
        lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
        agentIdentifiers:
        - identifier: 300053
          identifierType: SortCode
        identifiers:
        - identifier: 12345678
          identifierType: AccountNumber
      title: Account
    CustomerAccountGroup:
      allOf:
      - $ref: '#/components/schemas/AccountGroupBase'
      - $ref: '#/components/schemas/CustomerAccountGroup_allOf'
      example:
        id: 80eafac6-33db-478a-bcc6-adda00c9bf93
        externalId: 001-0000000001
        secondaryExternalId: XYZ000001
        accountName: John Smith - Invididual
        accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
        servicingAgent:
          id: a19811e2-4dbc-40ff-9afb-279c945217ae
          externalId: 002-0000051754
          secondaryExternalId: EI006690000001
          name: Irene Adler
          status: Active
          address:
            addressLines:
            - 221b Baker St
            - London
            postCode: NW1 6XE
            countryCode: GBR
          servicingOrganisation: 039f9547-51c5-4768-89a1-79f145ef5174
          nationalCompetentAuthority: FCA_GBR
          nationalCompetentAuthorityCode: "123456"
          accountServicer: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          lastChangeDetectedDateTime: 2019-11-25T09:12:28Z
        type: Individual
        openingDate: 2010-01-01
        updatedDateTime: 2019-11-20T09:12:28Z
        lastChangeDetectedDateTime: 2019-11-10T09:12:28Z
      title: Account Group
    AccountGroupType:
      description: Account group type.
      enum:
      - NotSpecified
      - Individual
      - Joint
      - Company
      - Trust
      - Charity
      - Group
      - ThirdParty
      - Association
      - Pension
      - SMSF
      - Junior
      - Erisa
      - Member
      type: string
    AddressType:
      description: Identifies the nature of the postal address.
      enum:
      - Business
      - Correspondence
      - DeliveryTo
      - MailTo
      - POBox
      - Postal
      - Residential
      - Statement
      type: string
    ConsentCategoryName:
      enum:
      - AccountDetails
      - AccountTransactions
      - Agents
      - ContactDetails
      - Documents
      - FeaturesAndBenefits
      - Payments
      - RegularPayments
      - Statements
      type: string
    BaseAccountServicerLink:
      allOf:
      - $ref: '#/components/schemas/BaseAccountServicerLink_allOf'
      - $ref: '#/components/schemas/AuditEntity'
    ApplicationBase:
      properties:
        name:
          example: Tapico Personal Finance App
          maxLength: 100
          minLength: 1
          pattern: ^[\w\-\s'’]+$
          type: string
        category:
          $ref: '#/components/schemas/ApplicationCategoryType'
        description:
          example: Markdown formatted description
          type: string
        developerUri:
          example: https://www.app.com/
          format: uri
          type: string
        landingUri:
          example: https://www.app.com/dashboard
          format: uri
          type: string
        deepLinks:
          items:
            $ref: '#/components/schemas/ApplicationDeepLink'
          type: array
        logoUri:
          example: https://cdn.sandbox.tapico.io/images/logos/logo.png
          format: uri
          type: string
        organisationId:
          description: Unique identifier for Organisation
          example: 0f40a7fd-0b2d-460f-aacc-6ff7483f7a44
          format: uuid
          title: Organisation ID
          type: string
        privacyPolicyUri:
          example: https://demo-app.tapico.io/privacy-policy
          format: uri
          type: string
        registrationUri:
          example: https://demo-app.tapico.io/register
          format: uri
          type: string
        salesEmail:
          example: sales-email@myapp.com
          format: email
          type: string
        supportContactEmail:
          example: support-email@demo-app.tapico.io
          format: email
          type: string
        termsAndConditionsUri:
          example: https://demo-app.tapico.io/terms-conditions
          format: uri
          type: string
        summary:
          example: App to store pdf
          type: string
        media:
          items:
            $ref: '#/components/schemas/Media'
          type: array
      required:
      - name
      - organisationId
      type: object
    CustomerEmailType:
      enum:
      - NotSpecified
      - Business
      - Mobile
      - Other
      - Personal
      - Work
      type: string
    PhoneNumber:
      description: Phone number
      example:
        number: +447777777777
        countryCode: GBR
      properties:
        countryCode:
          description: Country code in ISO 3166 format.
          example: GBR
          type: string
        number:
          description: E.164 format phone number
          type: string
      required:
      - countryCode
      - number
      title: Phone Number
      type: object
    CustomerPhoneNumberType:
      enum:
      - NotSpecified
      - Business
      - Fax
      - Home
      - Mobile
      - Other
      - Work
      type: string
    CustomerTaxType:
      enum:
      - NotSpecified
      - EmployerIdentificationNumber
      - IndividualTaxpayerIdentificationNumber
      - InlandRevenueDepartmentNumber
      - NationalInsuranceNumber
      - NationalRegistrationIdentityCardNumber
      - PendingAdoptionsTaxpayerIdentificationNumber
      - SocialSecurityNumber
      - TaxFileNumber
      - TaxpayerIdentificationNumber
      - ForeignIdentificationNumber
      - TaxNumber
      - FiscalCode
      - SwedishPersonalNumber
      type: string
    CustomerAccountServicingAgentRelation:
      description: |
        Represents the relationship to an Servicing Agent resource.

        This can take the value of either the related Servicing Agent ID or the related Servicing Agent resource, depending on whether the property has been expanded.

        Requires `ReadAgents` consent.
        Expand with `expand=accountRoles.account.servicingAgent`.
      example: 9ab395e8-ec78-4826-9aae-71ab5891b123
      oneOf:
      - $ref: '#/components/schemas/ServicingAgentId'
      - $ref: '#/components/schemas/ServicingAgent'
    CustomerAccountGroupServicingAgentRelation:
      description: |
        Represents the relationship to an Servicing Agent resource.

        This can take the value of either the related Servicing Agent ID or the related Servicing Agent resource, depending on whether the property has been expanded.

        Requires `ReadAgents` consent.
        Expand with `expand=accountGroupRoles.accountGroup.servicingAgent`.
      example: 9ab395e8-ec78-4826-9aae-71ab5891b123
      oneOf:
      - $ref: '#/components/schemas/ServicingAgentId'
      - $ref: '#/components/schemas/ServicingAgent'
    AccountServicerLinkId:
      example: 9d8dde29-061c-4afd-b116-f574afc14976
      title: Application Account Servicer Link ID
      type: string
    PricingScheduleId:
      description: Unique identifier for Pricing Schedule
      example: a87bdc1b-7b5d-4246-a9f3-3b65a98bb0c9
      format: uuid
      title: Pricing Schedule Id
      type: string
    AccountServicerLinkPricingSchedule:
      allOf:
      - $ref: '#/components/schemas/AccountServicerLinkPricingSchedule_allOf'
    AccountServicerLinkStatus:
      enum:
      - Active
      - PendingAuthorisation
      - Rejected
      type: string
    ApplicationCategoryType:
      description: Specifies the type of the application category
      enum:
      - Tools
      - Services
      - CRM
      - Products
      - Tax
      type: string
    ApplicationDeepLink:
      example:
        label: Complete Risk Questionnaire
        uri: https://fire.sandbox.tapico.cloud/risk-questionnaire
        linkContexts:
        - Account
        - AccountGroup
      properties:
        id:
          example: b5e71832-58ab-4e75-be23-c679651fe074
          format: uuid
          title: Application Deep Link ID
          type: string
        label:
          description: Link label presented to the user
          type: string
        uri:
          example: https://fire.sandbox.tapico.cloud/risk-questionnaire
          format: uri
          type: string
        linkContexts:
          items:
            $ref: '#/components/schemas/DeepLinkContext'
          type: array
      required:
      - label
      - linkContexts
      - uri
      type: object
    Media:
      properties:
        title:
          example: amazing product image
          type: string
        type:
          $ref: '#/components/schemas/MediaType'
        uri:
          example: https://cdn.sandbox.tapico.io/images/logos/logo.png
          format: uri
          type: string
        dimensions:
          $ref: '#/components/schemas/Media_dimensions'
      required:
      - dimensions
      - type
      - uri
      type: object
    PricingScheduleRelation:
      description: |
        Represents the relationship to an Pricing Schedule resource.

        This can take the value of either the related Pricing Schedule ID or the related Pricing Schedule resource, depending on whether the property has been expanded.

        Expand with `expand=pricingSchedule`.
      example: a87bdc1b-7b5d-4246-a9f3-3b65a98bb0c9
      oneOf:
      - $ref: '#/components/schemas/PricingScheduleId'
      - $ref: '#/components/schemas/PricingSchedule'
    ApplicationDeepLinkId:
      example: b5e71832-58ab-4e75-be23-c679651fe074
      format: uuid
      title: Application Deep Link ID
      type: string
    DeepLinkContext:
      description: |-
        The account servicer context under which the link should be presented to the user. Not all platforms will support all contexts.
        The following contexts will also pass along context parameters:
        - Customer context: passes customerId representing the source Customer ID - Account Group context: passes accountGroupId representing the source Account Group ID - Account context: passes accountId representing the Account Servicer Account ID - External Account context: passes externalAccountId representing the source External Account ID
      enum:
      - All
      - Account
      - AccountGroup
      - Customer
      - Dashboard
      - ExternalAccount
      type: string
    MediaType:
      enum:
      - Gallery
      - Banner
      - Video
      title: Media Type
      type: string
    PricingSchedule:
      example:
        id: 18c68ff9-02af-4133-9166-454918ca63cc
        applicationId: 22c68ff9-02af-4133-9166-457918ca63cc
        currency: GBP
        name: pricing schedule default
        amount: 100.1
        default: true
        paymentFrequency: Monthly
      properties:
        id:
          description: Unique identifier for Pricing Schedule
          example: a87bdc1b-7b5d-4246-a9f3-3b65a98bb0c9
          format: uuid
          title: Pricing Schedule Id
          type: string
        applicationId:
          description: Unique identifier for Application.
          example: 9588b9e9-9f1d-4943-b547-70b809c30db8
          format: uuid
          title: Application ID
          type: string
        currency:
          description: Pricing schedule currency in ISO 4217 format
          type: string
        name:
          description: Name of the pricing schedule
          type: string
        amount:
          description: Specifies the amout that's going to be charged for usage of
            the application
          type: number
        isDefault:
          description: Whether this pricing schedule is to be the default
          type: boolean
        paymentFrequency:
          $ref: '#/components/schemas/PricingSchedulePaymentFrequency'
      required:
      - amount
      - applicationId
      - currency
      - id
      - isDefault
      - name
      - paymentFrequency
      title: Pricing Schedule
      type: object
    PricingSchedulePaymentFrequency:
      description: How frequently an Application expects payments to be made
      enum:
      - Monthly
      - Quarterly
      - Yearly
      title: Pricing Schedule Payment Frequency
      type: string
    Individual_Customers:
      properties:
        meta:
          $ref: '#/components/schemas/Metadata'
        data:
          description: List of customers
          items:
            $ref: '#/components/schemas/IndividualCustomerWithRelations'
          type: array
      title: Individual Customers
      type: object
    Organisation_Customers:
      properties:
        meta:
          $ref: '#/components/schemas/Metadata'
        data:
          description: List of customers
          items:
            $ref: '#/components/schemas/OrganisationCustomerWithRelations'
          type: array
      title: Organisation Customers
      type: object
    Advanced_Date_Filter:
      properties:
        gt:
          description: Greater than e.g. `?date[gt]=2022-03-29`
          format: date-time
          type: string
        gte:
          description: Greater than OR equal to e.g. `?date[gte]=2022-03-29`
          format: date-time
          type: string
        lt:
          description: Less than e.g. `?date[lt]=2022-03-29`
          format: date-time
          type: string
        lte:
          description: Less than OR equal to e.g. `?date[lte]=2022-03-29`
          format: date-time
          type: string
      title: Advanced Date Filter
      type: object
    PaymentInstructionPostRequest_allOf:
      properties:
        accountServicerId:
          description: Unique identifier for Account Servicer.
          example: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          format: uuid
          title: Account Servicer ID
          type: string
        applicationId:
          description: Unique identifier for Application.
          example: 9588b9e9-9f1d-4943-b547-70b809c30db8
          format: uuid
          title: Application ID
          type: string
        callbackUri:
          description: Source system URI to send the end customer to upon completing
            the process.
          example: http://www.tapico.io/callback
          type: string
      type: object
    PaymentInstructionPutRequest_allOf:
      properties:
        id:
          description: Tapico system generated unique identifier.
          example: 355fc1e9-9390-40e7-aeee-bc405362645b
          type: string
        accountServicerId:
          description: Unique identifier for Account Servicer.
          example: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          format: uuid
          title: Account Servicer ID
          type: string
        applicationId:
          description: Unique identifier for Application.
          example: 9588b9e9-9f1d-4943-b547-70b809c30db8
          format: uuid
          title: Application ID
          type: string
        callbackUri:
          description: Source system URI to send the end customer to upon completing
            the process.
          example: http://www.tapico.io/callback
          type: string
      required:
      - accountServicerId
      - id
      type: object
    AccountAccessConsent_allOf:
      description: |
        Represents the requested and/or granted consent for a third party application to access data from an account servicer on behalf of an end user.
      properties:
        id:
          description: Unique identifier for Account Access Consent.
          example: a87bdc1b-7b5d-4246-a9f3-3b65a98bb0c9
          format: uuid
          title: Account Access Consent ID
          type: string
        expiryDate:
          description: |
            When this account access consent record expires and the associated data will no longer be available.
          format: date
          type: string
        lastRefreshDateTime:
          description: |
            The last time the data associated with this consent was refreshed from the source platform.
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/ConsentStatus'
        consentTypes:
          description: "List of consents requested. \n\nExpand with `expand=consentTypes`.\n"
          items:
            $ref: '#/components/schemas/AccountAccessConsentType'
          type: array
        redirectUri:
          description: This URI takes the user to their Account Servicers web portal
            where they can securely authorise your data sharing request.
          example: https://sandbox.tapico.io/account-access-start/18c68ff9-02af-4133-9166-454918ca63cc
          format: uri
          type: string
        application:
          $ref: '#/components/schemas/ApplicationRelation'
        accountServicer:
          $ref: '#/components/schemas/AccountServicerRelation'
        authorisingUser:
          $ref: '#/components/schemas/AuthorisingUserRelation'
        userId:
          description: Unique Tapico user identifier.
          example: 9fcc2393-12a4-4b74-ac70-4f695130a2cc
          format: uuid
          title: User ID
          type: string
        daysBeforeExpirationNotification:
          description: |
            The number of days before consent expiration when your application will receive a notification reminding you to reconfirm consent before it expires.
            Only applicable for Open Banking account servicers.
          type: integer
        reconfirmedAt:
          description: |
            When this account access consent was reconfirmed to extend its validity for 90 more days.
            Field only available for Open Banking and Starling account access consents.
          format: date
          type: string
        nextReconfirmationDue:
          description: |
            Date limit for this account access consent to be reconfirmed before its expiration.
            Field only available for Open Banking and Starling account access consents.
          format: date
          type: string
      required:
      - application
      - authorisingUser
      - id
      - status
      type: object
    ServicingAgentWithRelations_allOf:
      properties:
        accountServicer:
          $ref: '#/components/schemas/AccountServicerRelation'
        servicingOrganisation:
          $ref: '#/components/schemas/ServicingOrganisationRelation'
      required:
      - accountServicer
      type: object
    ServicingOrganisationWithRelations_allOf:
      properties:
        accountServicer:
          $ref: '#/components/schemas/AccountServicerRelation'
      required:
      - accountServicer
      type: object
    IndividualCustomerWithRelations_allOf:
      description: |
        Entity representing the owner of an account.
      properties:
        accountServicer:
          $ref: '#/components/schemas/AccountServicerRelation'
        accountRoles:
          description: |
            Accounts that the customer is related to.

            Expand with `expand=accountRoles`.
          items:
            $ref: '#/components/schemas/CustomerAccountRole'
          type: array
        accountGroupRoles:
          description: |
            Account groups that the customer is related to.

            Expand with `expand=accountGroupRoles`.
          items:
            $ref: '#/components/schemas/CustomerAccountGroupRole'
          type: array
      required:
      - accountServicer
      type: object
    AccountGroupWithRelations_allOf:
      properties:
        accountServicer:
          $ref: '#/components/schemas/AccountServicerRelation'
        servicingAgent:
          $ref: '#/components/schemas/ServicingAgentRelation'
        accounts:
          description: |
            Accounts belonging to the account group.

            Expand with `expand=accounts`.
          items:
            $ref: '#/components/schemas/Account'
          type: array
        externalAccounts:
          description: |
            External Accounts associated with the account group.

            Requires `ReadExternalAccounts` consent.
            Expand with `expand=externalAccounts`.
          items:
            $ref: '#/components/schemas/ExternalAccount'
          type: array
        roles:
          description: |
            Customer relations for the account group.

            Expand with `expand=roles`.
          items:
            $ref: '#/components/schemas/AccountGroupCustomerRole'
          type: array
      required:
      - accountServicer
      type: object
    AccountWithRelations_allOf:
      properties:
        accountServicer:
          $ref: '#/components/schemas/AccountServicerRelation'
        servicingAgent:
          $ref: '#/components/schemas/ServicingAgentRelation'
        accountGroup:
          $ref: '#/components/schemas/AccountGroupRelation'
        roles:
          description: |
            Customer relations for the account.

            Expand with `expand=roles`.
          items:
            $ref: '#/components/schemas/AccountCustomerRole'
          type: array
      required:
      - accountGroup
      - accountServicer
      type: object
    ExternalAccountWithRelations_allOf:
      properties:
        accountServicer:
          $ref: '#/components/schemas/AccountServicerRelation'
        servicingAgent:
          $ref: '#/components/schemas/ServicingAgentRelation'
        accountGroup:
          $ref: '#/components/schemas/AccountGroupRelation'
      required:
      - accountGroup
      - accountServicer
      type: object
    CompositeHolding_allOf:
      properties:
        composition:
          description: The composition of underlying instruments that comprise the
            holding for composite products such as model portfolios.
          items:
            $ref: '#/components/schemas/Holding'
          type: array
      type: object
    Document_type:
      example:
        name: Regular Statement
        id: "68"
      properties:
        id:
          example: "68"
          type: string
        name:
          example: Regular Statement
          type: string
      type: object
    Document_format:
      example:
        extension: pdf
        mediaType: application/pdf
      properties:
        mediaType:
          example: application/pdf
          type: string
        extension:
          example: pdf
          type: string
      type: object
    Instrument_1:
      description: A financial instrument for which transactions and positions can
        arise. Including, but not limited to; currencies, stocks, funds.
      properties:
        targetAllocation:
          items:
            $ref: '#/components/schemas/ModelPortfolioTargetAllocation'
          type: array
      title: Instrument
      type: object
    AccountServicer_allOf:
      description: |
        An account service provider such as a bank, pension provider, or investment and savings platform.
      example:
        id: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
        organisationId: 0f40a7fd-0b2d-460f-aacc-6ff7483f7a44
        name: Financial Platform A
        isActive: true
        hasAppStore: false
        defaultExpiryDays: 90
        hasPaymentsInitiation: true
        logoUri: https://cdn.sandbox.tapico.io/images/logos/logo.png
        countryCode: GBR
        region: EU
      properties:
        id:
          description: Unique identifier for Account Servicer.
          example: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          format: uuid
          title: Account Servicer ID
          type: string
        isActive:
          type: boolean
      required:
      - id
      - isActive
      type: object
    PaymentInstruction_allOf:
      description: A payment instruction made from a third party application to an
        account servicer.  The instruction is made on behalf of (and consented by)
        the end customer who owns,  or otherwise has authority to, the source account
        at the account provider.
      properties:
        id:
          description: Tapico system generated unique identifier.
          example: 355fc1e9-9390-40e7-aeee-bc405362645b
          type: string
        accountServicerPaymentId:
          description: Identifier provided by the payment servicer.
          example: ABC123
          type: string
        accountServicer:
          description: Unique identifier for Account Servicer.
          example: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          format: uuid
          title: Account Servicer ID
          type: string
        applicationId:
          description: Unique identifier for Application.
          example: 9588b9e9-9f1d-4943-b547-70b809c30db8
          format: uuid
          title: Application ID
          type: string
        instructionStatus:
          $ref: '#/components/schemas/InstructionStatus'
        isoStatus:
          $ref: '#/components/schemas/PaymentIsoStatus'
        redirectUri:
          description: URI to redirect end customer to in order to proceed with authorisation.
          example: http://sandbox.tapico.io/payment-instructions/355fc1e9-9390-40e7-aeee-bc405362645b'
          format: uri
          type: string
        expectedExecutionDateTime:
          description: The expected payment execution date and time from the account
            provider.
          example: 2019-11-20T09:12:28Z
          format: date-time
          type: string
        expectedSettlementDateTime:
          description: The expected settlement (value) date and time from the account
            provider.
          example: 2019-11-20T09:12:28Z
          format: date-time
          type: string
      required:
      - applicationId
      - id
      - instructionStatus
    AccountAccessConsentType_allOf:
      properties:
        consentType:
          $ref: '#/components/schemas/ConsentType'
      required:
      - consentType
      type: object
    IndividualCustomer_allOf:
      description: Entity representing the owner of an account.
      properties:
        accountServicer:
          description: Unique identifier for Account Servicer.
          example: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          format: uuid
          title: Account Servicer ID
          type: string
        title:
          maxLength: 254
          type: string
        givenName:
          maxLength: 254
          type: string
        middleName:
          maxLength: 254
          type: string
        familyName:
          maxLength: 254
          type: string
        dateOfBirth:
          format: date
          type: string
        retirementAge:
          type: number
        retirementDate:
          format: date
          type: string
        maritalStatus:
          $ref: '#/components/schemas/CustomerMaritalStatusType'
        gender:
          $ref: '#/components/schemas/CustomerGenderType'
        lastChangeDetectedDateTime:
          description: Timestamp of the last time a change was detected in data source.
          example: 2021-10-21T09:12:28Z
          format: date-time
          type: string
        countryOfBirth:
          description: Country code in ISO 3166 format.
          example: GBR
          maxLength: 3
          type: string
        countriesOfCitizenship:
          items:
            description: Country code in ISO 3166 format.
            example: USA
            maxLength: 3
            type: string
          type: array
        employmentDetails:
          $ref: '#/components/schemas/EmploymentDetails'
      type: object
    OrganisationCustomer_allOf:
      description: |
        Entity representing the owner of an account.
      properties:
        accountServicer:
          description: Unique identifier for Account Servicer.
          example: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          format: uuid
          title: Account Servicer ID
          type: string
        name:
          maxLength: 254
          type: string
        organisationType:
          maxLength: 40
          type: string
        registrationNumber:
          type: string
        registrationDate:
          format: date
          type: string
        countryOfRegistration:
          description: Country code currency in ISO 3166 format.
          maxLength: 50
          type: string
        leiCode:
          type: string
        status:
          maxLength: 40
          type: string
        lastChangeDetectedDateTime:
          description: Timestamp of the last time a change was detected in data source.
          example: 2021-10-21T09:12:28Z
          format: date-time
          type: string
      type: object
    AccountGroup_allOf:
      description: |
        Represents a grouping of Accounts, for example, a logical grouping of products such a ISA's and GIA's jointly held my multiple account owners.
      properties:
        accountServicer:
          description: Unique identifier for Account Servicer.
          example: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          format: uuid
          title: Account Servicer ID
          type: string
        servicingAgent:
          description: |
            Tapico generated unique surrogate key for the Servicing Agent to deal with potential identifier conflicts across account servicers.

            Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
          example: cf4bca74-46d1-449f-b621-32be4fc315e9
          format: uuid
          title: Servicing Agent ID
          type: string
      required:
      - accountServicer
      type: object
    Account_allOf:
      properties:
        accountServicer:
          description: Unique identifier for Account Servicer.
          example: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          format: uuid
          title: Account Servicer ID
          type: string
        servicingAgent:
          description: |
            Tapico generated unique surrogate key for the Servicing Agent to deal with potential identifier conflicts across account servicers.

            Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
          example: cf4bca74-46d1-449f-b621-32be4fc315e9
          format: uuid
          title: Servicing Agent ID
          type: string
        accountGroup:
          description: |
            Tapico generated unique surrogate key for the Account Group to deal with potential identifier conflicts across account servicers.

            Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
          example: c63901f5-f287-44c4-9079-4b960c594421
          format: uuid
          title: Account Group ID
          type: string
      required:
      - accountGroup
      - accountServicer
      type: object
    Holding_value:
      description: |
        Value of the holding denominated in the account base currency.
      properties:
        amount:
          example: 4807.62
          multipleOf: 0.00010
          type: number
        currency:
          example: GBP
          type: string
      required:
      - amount
      - currency
      type: object
    Holding_baseCurrencyCost:
      description: |
        The acquisition cost of the holding in the account base currency. In the case of currency holdings this property will be omitted.
      properties:
        amount:
          example: 29.95
          multipleOf: 0.00010
          type: number
        currency:
          example: GBP
          type: string
      required:
      - amount
      - currency
      type: object
    RiskInformation_deliveryAddress:
      description: |
        Information that locates and identifies a specific address, as defined by postal services or in free format text.
      properties:
        addressLines:
          description: |
            Information that locates and identifies a specific address, as defined by postal services, that is presented in free format text.
          items:
            maxLength: 70
            minLength: 1
            type: string
          maxItems: 2
          minItems: 0
          type: array
        streetName:
          description: Name of a street or thoroughfare.
          maxLength: 70
          minLength: 1
          type: string
        buildingNumber:
          description: Number that identifies the position of a building on a street.
          maxLength: 16
          minLength: 1
          type: string
        postCode:
          description: |
            Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.
          maxLength: 16
          minLength: 1
          type: string
        townName:
          description: |
            Name of a built-up area, with defined boundaries, and a local government.
          maxLength: 35
          minLength: 1
          type: string
        countrySubDivision:
          description: |
            Identifies a subdivision of a country, for instance state, region, county.
          maxLength: 35
          minLength: 1
          type: string
        country:
          description: |
            Nation with its own government, occupying a particular territory.
          pattern: ^[A-Z]{2,2}$
          type: string
      required:
      - country
      - townName
      type: object
    Application_allOf:
      properties:
        id:
          description: Unique identifier for Application.
          example: 9588b9e9-9f1d-4943-b547-70b809c30db8
          format: uuid
          title: Application ID
          type: string
        configuredConsentTypes:
          items:
            $ref: '#/components/schemas/ApplicationConfiguredConsentType'
          type: array
        accountServicerLinks:
          items:
            $ref: '#/components/schemas/ApplicationAccountServicerLink'
          type: array
      required:
      - id
      type: object
    ServicingOrganisation_allOf:
      properties:
        accountServicer:
          description: Unique identifier for Account Servicer.
          example: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          format: uuid
          title: Account Servicer ID
          type: string
      required:
      - accountServicer
      type: object
    ServicingAgent_allOf:
      properties:
        servicingOrganisation:
          description: |
            Tapico generated unique surrogate key for the Servicing Organisation to deal with potential identifier conflicts across account servicers.

            Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
          example: f6dc8217-d507-4ba6-805c-dbe6034d25f5
          format: uuid
          title: Servicing Organisation ID
          type: string
        accountServicer:
          description: Unique identifier for Account Servicer.
          example: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          format: uuid
          title: Account Servicer ID
          type: string
      required:
      - accountServicer
      type: object
    ApplicationAccountServicerLink_allOf:
      properties:
        accountServicer:
          $ref: '#/components/schemas/AccountServicerRelation'
        application:
          description: Unique identifier for Application.
          example: 9588b9e9-9f1d-4943-b547-70b809c30db8
          format: uuid
          title: Application ID
          type: string
      required:
      - accountServicer
      - application
      type: object
    ApplicationExtendedBase_allOf:
      properties:
        callbackUri:
          example: https://www.myapp.com/callback
          format: uri
          type: string
        redirectUris:
          items:
            example: https://www.app.com/redirectUri1
            format: uri
            type: string
          type: array
        postLogoutRedirectUri:
          example: https://www.bank.com/logoutPortal
          format: uri
          type: string
      type: object
    CustomerPhoneNumber_allOf:
      description: Customer Phone Number
      example:
        type: Home
        countryCode: GBR
        number: +447777777777
      properties:
        type:
          $ref: '#/components/schemas/CustomerPhoneNumberType'
      required:
      - countryCode
      - number
      - type
      type: object
    CustomerAccount_allOf:
      properties:
        accountServicer:
          description: Unique identifier for Account Servicer.
          example: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          format: uuid
          title: Account Servicer ID
          type: string
        servicingAgent:
          $ref: '#/components/schemas/CustomerAccountServicingAgentRelation'
        accountGroup:
          description: |
            Tapico generated unique surrogate key for the Account Group to deal with potential identifier conflicts across account servicers.

            Refer to `externalId` and `secondaryExternalId` for the origin system identifiers.
          example: c63901f5-f287-44c4-9079-4b960c594421
          format: uuid
          title: Account Group ID
          type: string
      required:
      - accountGroup
      - accountServicer
      type: object
    CustomerAccountGroup_allOf:
      description: |
        Represents a grouping of Accounts, for example, a logical grouping of products such a ISA's and GIA's jointly held my multiple account owners.
      properties:
        accountServicer:
          description: Unique identifier for Account Servicer.
          example: b83b4fc3-d970-4665-aab4-8d7e0fe1d982
          format: uuid
          title: Account Servicer ID
          type: string
        servicingAgent:
          $ref: '#/components/schemas/CustomerAccountGroupServicingAgentRelation'
      required:
      - accountServicer
      type: object
    BaseAccountServicerLink_allOf:
      properties:
        id:
          example: 9d8dde29-061c-4afd-b116-f574afc14976
          title: Application Account Servicer Link ID
          type: string
        pricingScheduleId:
          description: Unique identifier for Pricing Schedule
          example: a87bdc1b-7b5d-4246-a9f3-3b65a98bb0c9
          format: uuid
          title: Pricing Schedule Id
          type: string
        accountServicerLinkPricingSchedules:
          items:
            $ref: '#/components/schemas/AccountServicerLinkPricingSchedule'
          type: array
        isAppStoreEnabled:
          type: boolean
        status:
          $ref: '#/components/schemas/AccountServicerLinkStatus'
      required:
      - id
      - isAppStoreEnabled
      - status
      type: object
    AccountServicerLinkPricingSchedule_allOf:
      properties:
        id:
          type: string
        applicationAccountServicerLinkId:
          example: 9d8dde29-061c-4afd-b116-f574afc14976
          title: Application Account Servicer Link ID
          type: string
        pricingSchedule:
          $ref: '#/components/schemas/PricingScheduleRelation'
      required:
      - applicationAccountServicerLinkId
      - id
      - pricingSchedule
      type: object
    Media_dimensions:
      properties:
        height:
          type: number
        width:
          type: number
      required:
      - height
      - width
      type: object
  securitySchemes:
    bearer:
      bearerFormat: jwt
      scheme: bearer
      type: http
    cookie:
      in: cookie
      name: jwt
      type: apiKey
