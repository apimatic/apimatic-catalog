{
	"info": {
		"_postman_id": "ff2fcf01-3dae-4986-af8a-0e8d2bc2b7bc",
		"name": "bLink - Consent as a Service for Customers - v3.0.28",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "consent-flow-as-a-service",
			"item": [
				{
					"name": "[4] Get Providers (Core SIX API GW)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const correlationId = pm.request.headers.get(\"X-Correlation-ID\");\r",
									"\r",
									"pm.test(`Directory call OK (${correlationId})`, function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (pm.environment.get(\"uses-legacy-certificate\") === \"true\") {\r",
									"    pm.request.headers.add({\r",
									"        enabled: true,\r",
									"        key: \"X-Instance-ID\",\r",
									"        value: pm.environment.get(\"cf2aas-instance-id\")\r",
									"    })\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Correlation-ID",
								"value": "manual-{{$guid}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api-gw-external-cf2aas-api-platform-v2-base-url}}/directory/providers?status=ACTIVE&embed_assets=NONE",
							"host": [
								"{{api-gw-external-cf2aas-api-platform-v2-base-url}}"
							],
							"path": [
								"directory",
								"providers"
							],
							"query": [
								{
									"key": "status",
									"value": "ACTIVE"
								},
								{
									"key": "embed_assets",
									"value": "NONE"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "[A] /permissions (CaaS)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const url = require('url');\r",
									"const correlationId = pm.request.headers.get(\"X-Correlation-ID\");\r",
									"\r",
									"pm.test(`Successful authorize request (${correlationId})`, function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"var authorizationUri = jsonData.authorizationUri;\r",
									"var permissionId = jsonData.permissionId;\r",
									"\r",
									"pm.collectionVariables.set(\"authorization-uri\", authorizationUri);\r",
									"pm.test(`authorizationUri was parsed successfully (${authorizationUri}) (${correlationId})`, function () {\r",
									"    pm.expect(authorizationUri).to.not.be.empty;\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(`permissionId was parsed successfully (${permissionId}) (${correlationId})`, function () {\r",
									"    pm.expect(permissionId).to.not.be.empty;\r",
									"});\r",
									"\r",
									"var baseIndex = pm.request.url.path.lastIndexOf(\"permissions\");\r",
									"var providerId = pm.request.url.path[baseIndex + 1];\r",
									"var userId = pm.request.url.path[baseIndex + 2];\r",
									"pm.collectionVariables.set(\"user-id\", userId);\r",
									"\r",
									"// Set permission ID in global authentication context\r",
									"pm.globals.set(\"cf2aas-permission-id\", permissionId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (pm.environment.get(\"uses-legacy-certificate\") === \"true\") {\r",
									"    pm.request.headers.add({\r",
									"        enabled: true,\r",
									"        key: \"X-Instance-ID\",\r",
									"        value: pm.environment.get(\"cf2aas-instance-id\")\r",
									"    })\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Correlation-ID",
								"type": "text",
								"value": "manual-{{$guid}}"
							},
							{
								"key": "X-PSU-IP-Address",
								"type": "text",
								"value": "12.0.0.1"
							},
							{
								"key": "X-PSU-User-Agent",
								"type": "text",
								"value": "Mozilla"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"{{username}}\",\r\n  \"scope\": \"{{scope}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-gw-external-cf2aas-api-consent-flow-v2-base-url}}/permissions/:providerId/:userId",
							"host": [
								"{{api-gw-external-cf2aas-api-consent-flow-v2-base-url}}"
							],
							"path": [
								"permissions",
								":providerId",
								":userId"
							],
							"variable": [
								{
									"key": "providerId",
									"value": "{{provider-id}}"
								},
								{
									"key": "userId",
									"value": "{{cf2aas-user-id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "[8.1 OIDC] E-Banking Login Form (Service Provider Simulator)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const url = require('url');\r",
									"\r",
									"pm.collectionVariables.set(\"originalAuthorizeUrl\", url.parse(pm.request.url.toString()).href);\r",
									"\r",
									"pm.test(\"Successful authorize request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([302]);\r",
									"});\r",
									"pm.test(\"Location is present\", function () {\r",
									"    pm.response.to.have.header(\"Location\");\r",
									"});\r",
									"\r",
									"const location = pm.response.headers.get(\"Location\");\r",
									"if(location) {\r",
									"    const redirectUrl = url.parse(pm.response.headers.get(\"Location\")).href;\r",
									"    pm.collectionVariables.set(\"wesLoginRedirectUrl\", redirectUrl);\r",
									"    pm.test(\"wesLoginRedirectUrl was parsed successfully (\" + redirectUrl + \")\", function () {\r",
									"        pm.expect(redirectUrl).to.not.be.empty;\r",
									"    });\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{authorization-uri}}&multiple_tokens_per_user={{multiple-tokens-per-user}}&token_expiration={{token-expiration-seconds}}&refresh_token_expiration={{refresh-token-expiration-seconds}}",
							"host": [
								"{{authorization-uri}}&multiple_tokens_per_user={{multiple-tokens-per-user}}&token_expiration={{token-expiration-seconds}}&refresh_token_expiration={{refresh-token-expiration-seconds}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[8.2 OIDC] E-Banking Login Form (Service Provider Simulator)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"WES-IDP login page read successfully with status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{wesLoginRedirectUrl}}",
							"host": [
								"{{wesLoginRedirectUrl}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[9.1 OIDC] E-Banking Login Submit (Service Provider Simulator)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successfully logged in to WES-IDP\", function () {\r",
									"    pm.response.to.have.status(302);\r",
									"\r",
									"    pm.test(\"Location is present\", function () {\r",
									"        pm.response.to.have.header(\"Location\");\r",
									"    });\r",
									"\r",
									"    const location = pm.response.headers.get(\"Location\");\r",
									"     const wesLoginRedirectUrl = pm.collectionVariables.get(\"wesLoginRedirectUrl\");\r",
									"    pm.test(\"location was parsed successfully (\" + location + \")\", function () {\r",
									"        pm.expect(location).to.be.eq(wesLoginRedirectUrl)\r",
									"    });\r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "isiwebuserid",
									"value": "{{wes-user}}",
									"type": "text"
								},
								{
									"key": "isiwebpasswd",
									"value": "{{wes-password}}",
									"type": "text"
								},
								{
									"key": "verifypasswordsubmit",
									"value": "Senden",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{wesLoginRedirectUrl}}",
							"host": [
								"{{wesLoginRedirectUrl}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[9.2 OIDC] E-Banking Login Redirect",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successfully logged in to WES-IDP\", function () {\r",
									"    pm.response.to.have.status(302);\r",
									"\r",
									"    pm.test(\"Location is present\", function () {\r",
									"        pm.response.to.have.header(\"Location\");\r",
									"    });\r",
									"\r",
									"    const location = pm.response.headers.get(\"Location\");\r",
									"\r",
									"    pm.collectionVariables.set(\"wes-serviceprovider-oauth2-authorize\", location);\r",
									"    pm.test(\"location was parsed successfully (\" + location + \")\", function () {\r",
									"        pm.expect(location).to.not.be.empty;\r",
									"        pm.expect(location).to.contain(\"code=\");\r",
									"        pm.expect(location).to.contain(\"state=\");\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{wesLoginRedirectUrl}}",
							"host": [
								"{{wesLoginRedirectUrl}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[9.3 OIDC] E-Banking Login OAuth Code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const url = require('url');\r",
									"\r",
									"pm.test(\"Successful authorize request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([302]);\r",
									"});\r",
									"pm.test(\"Location is present\", function () {\r",
									"    pm.response.to.have.header(\"Location\");\r",
									"});\r",
									"\r",
									"const location = pm.response.headers.get(\"Location\");\r",
									"if(location) {\r",
									"    const redirectUrl = url.parse(pm.response.headers.get(\"Location\")).href;\r",
									"    pm.collectionVariables.set(\"serviceProviderAuthorizeUrl\", redirectUrl);\r",
									"    pm.test(\"serviceProviderAuthorizeUrl was parsed successfully (\" + redirectUrl + \")\", function () {\r",
									"        pm.expect(redirectUrl).to.not.be.empty;\r",
									"    });\r",
									"    pm.test(\"serviceProviderAuthorizeUrl is equal to originalAuthorizeUrl\", function() {\r",
									"        pm.expect(redirectUrl).equals(pm.collectionVariables.get(\"originalAuthorizeUrl\"));\r",
									"    });\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var encodedUsername = encodeURIComponent(pm.variables.replaceIn('{{username}}'));\r",
									"var encodedRedirectUrl = encodeURIComponent(pm.variables.replaceIn('{{cf2-redirect-url}}'));\r",
									"pm.globals.set(\"username-encoded\", encodedUsername);\r",
									"pm.globals.set(\"cf2-redirect-url-encoded\", encodedRedirectUrl);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{wes-serviceprovider-oauth2-authorize}}",
							"host": [
								"{{wes-serviceprovider-oauth2-authorize}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[7] /oauth/authorize CaaS (Service Provider Simulator Sign & Redirect)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const url = require('url');\r",
									"const correlationId = pm.request.headers.get(\"X-Correlation-ID\");\r",
									"\r",
									"pm.test(`Successful authorize request (${correlationId})`, function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([303]);\r",
									"});\r",
									"pm.test(`Location is present (${correlationId})`, function () {\r",
									"    pm.response.to.have.header(\"Location\");\r",
									"});\r",
									"const location = pm.response.headers.get(\"Location\");\r",
									"if(location) {\r",
									"    const redirectUrl = url.parse(pm.response.headers.get(\"Location\")).href;\r",
									"    pm.collectionVariables.set(\"caasRedirectUrl\", redirectUrl);\r",
									"    pm.test(`caasRedirectUrl was parsed successfully (${redirectUrl}) (${correlationId})`, function () {\r",
									"        pm.expect(redirectUrl).to.not.be.empty;\r",
									"    });\r",
									"\r",
									"    pm.test(`redirectUrl contains code (${correlationId})`, function () {\r",
									"        pm.expect(redirectUrl).contain(\"code=\");\r",
									"        const postCode = redirectUrl.split(\"code=\")[1];\r",
									"    \tconst code = postCode.split(\"&\")[0];\r",
									"\t    pm.collectionVariables.set(\"code\", code);\r",
									"        pm.expect(code).to.not.be.empty;\r",
									"    });\r",
									"    \r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{authorization-uri}}&multiple_tokens_per_user={{multiple-tokens-per-user}}&token_expiration={{token-expiration-seconds}}&refresh_token_expiration={{refresh-token-expiration-seconds}}",
							"host": [
								"{{authorization-uri}}&multiple_tokens_per_user={{multiple-tokens-per-user}}&token_expiration={{token-expiration-seconds}}&refresh_token_expiration={{refresh-token-expiration-seconds}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[17] /redirect... (CaaS)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const url = require('url');\r",
									"const correlationId = pm.request.headers.get(\"X-Correlation-ID\");\r",
									"\r",
									"pm.test(`Expect another redirect (${correlationId})`, function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([302]);\r",
									"});\r",
									"pm.test(`Location is present and contains correct provider ID (${correlationId})`, function () {\r",
									"    pm.response.to.have.header(\"Location\");\r",
									"\r",
									"    const locationUrl = url.parse(pm.response.headers.get(\"Location\"));\r",
									"    const providerIdFromLocationUrl = locationUrl.query.split(\"provider_id=\")[1].split(\"&\")[0];\r",
									"    let storedProviderId = pm.environment.get(\"provider-id\");\r",
									"    pm.expect(providerIdFromLocationUrl).to.eql(storedProviderId);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{caasRedirectUrl}}",
							"host": [
								"{{caasRedirectUrl}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "E-Banking Logout 1 (Service Provider Simulator)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"WES-Simulator logout successful with status code 302\", function () {\r",
									"    pm.response.to.have.status(302);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{wes-serviceprovider-url}}/ui/?logout",
							"host": [
								"{{wes-serviceprovider-url}}"
							],
							"path": [
								"ui",
								""
							],
							"query": [
								{
									"key": "logout",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "E-Banking Logout 2 (Service Provider Simulator)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"WES-IDP logout successful with status code 302\", function () {\r",
									"    pm.response.to.have.status(302);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{wes-idp-url}}?logout",
							"host": [
								"{{wes-idp-url}}"
							],
							"query": [
								{
									"key": "logout",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "directory",
			"item": [
				{
					"name": "providers",
					"item": [
						{
							"name": "Retrieve a list of all registered providers (e.g., financial institutions)",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
										"key": "X-Correlation-ID",
										"value": "manual-{{$guid}}"
									},
									{
										"description": "(Required) Name and version of the of the Client software",
										"key": "User-Agent",
										"value": "cillum eu cupidatat voluptate"
									}
								],
								"url": {
									"raw": "{{api-gw-external-cf2aas-api-platform-v2-base-url}}/directory/providers?status=ACTIVE&embed_assets=NONE",
									"host": [
										"{{api-gw-external-cf2aas-api-platform-v2-base-url}}"
									],
									"path": [
										"directory",
										"providers"
									],
									"query": [
										{
											"key": "status",
											"value": "ACTIVE",
											"description": "status=ACTIVE returns only active clients"
										},
										{
											"key": "embed_assets",
											"value": "NONE",
											"description": "ALL  = Embed all assets as base64\nLOGO = Embed all logos as base64\nNONE = No emedded assets\n"
										}
									]
								},
								"description": "Returns a list of providers with information regarding software and supported use cases. (SCOPE: SIX)\n"
							},
							"response": [
								{
									"name": "List of providers",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "cillum eu cupidatat voluptate"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "cillum eu cupidatat voluptate"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/directory/providers?status=ACTIVE&embed_assets=LOGO",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"directory",
												"providers"
											],
											"query": [
												{
													"key": "status",
													"value": "ACTIVE"
												},
												{
													"key": "embed_assets",
													"value": "LOGO"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Correlation-ID",
											"value": "cillum eu cupidatat voluptate",
											"description": "Reflects the ID (set by the caller) from the request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "cillum eu cupidatat voluptate",
											"description": "The header value is always PLATFORM"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"companyLogo\": {\n   \"large\": {\n    \"assetId\": \"assetId.svg\",\n    \"mimeType\": \"image/svg+xml\",\n    \"image\": \"QUNNRQ==\"\n   },\n   \"small\": {\n    \"assetId\": \"assetId.svg\",\n    \"mimeType\": \"image/svg+xml\",\n    \"image\": \"QUNNRQ==\"\n   }\n  },\n  \"companyName\": \"ACME\",\n  \"companyUrl\": \"https://www.acme.com\",\n  \"contact\": [\n   {\n    \"type\": \"BUSINESS\",\n    \"designation\": \"Account and Payments Services\",\n    \"emailAddress\": \"business-contact@acme.com\"\n   },\n   {\n    \"type\": \"TECHNICAL\",\n    \"emailAddress\": \"technical-contact@acme.com\",\n    \"phone\": \"+41 58 999 9999\"\n   },\n   {\n    \"type\": \"SUPPORT\",\n    \"emailAddress\": \"support-contact@acme.com\",\n    \"phone\": \"+41 58 999 9997\"\n   }\n  ],\n  \"lastModified\": \"2020-12-22T14:51:16.965Z\",\n  \"marketingDescription\": {\n   \"de\": [\n    \"vol\",\n    \"\"\n   ],\n   \"en\": [\n    \"de\",\n    \"c\"\n   ],\n   \"fr\": [\n    \"eni\",\n    \"t\"\n   ],\n   \"it\": [\n    \"iru\",\n    \"ali\"\n   ]\n  },\n  \"providerId\": \"ut\",\n  \"registrationDate\": \"1977-10-25\",\n  \"shortDescription\": {\n   \"de\": \"Kurzbeschreibung\",\n   \"en\": \"Short description\",\n   \"fr\": \"Description rapide\",\n   \"it\": \"Corta descrizione\"\n  },\n  \"software\": {\n   \"category\": [\n    \"ACCOUNTING\"\n   ],\n   \"manufacturer\": \"ACME Corp.\",\n   \"marketingDescription\": {\n    \"de\": [\n     \"vo\",\n     \"c\"\n    ],\n    \"en\": [\n     \"mi\",\n     \"min\"\n    ],\n    \"fr\": [\n     \"m\",\n     \"q\"\n    ],\n    \"it\": [\n     \"c\",\n     \"\"\n    ]\n   },\n   \"productInfoUrl\": \"https://acme.com/amce_accounting\",\n   \"productLogo\": {\n    \"large\": {\n     \"assetId\": \"assetId.svg\",\n     \"mimeType\": \"image/svg+xml\",\n     \"image\": \"QUNNRQ==\"\n    },\n    \"small\": {\n     \"assetId\": \"assetId.svg\",\n     \"mimeType\": \"image/svg+xml\",\n     \"image\": \"QUNNRQ==\"\n    }\n   },\n   \"productName\": {\n    \"de\": \"ACME Buchhaltungssoftware\",\n    \"en\": \"ACME accounting software\",\n    \"fr\": \"ACME software comptable\",\n    \"it\": \"ACME software contabilità\"\n   },\n   \"shortDescription\": {\n    \"de\": \"Kurzbeschreibung\",\n    \"en\": \"Short description\",\n    \"fr\": \"Description rapide\",\n    \"it\": \"Corta descrizione\"\n   },\n   \"marketingImage\": {\n    \"assetId\": \"assetId.svg\",\n    \"mimeType\": \"image/svg+xml\",\n    \"image\": \"QUNNRQ==\"\n   }\n  },\n  \"status\": \"ACTIVE\",\n  \"marketingImage\": {\n   \"assetId\": \"assetId.svg\",\n   \"mimeType\": \"image/svg+xml\",\n   \"image\": \"QUNNRQ==\"\n  },\n  \"useCases\": [\n   {\n    \"from\": \"2007-11-03T10:01:31.558Z\",\n    \"name\": \"ais\",\n    \"status\": \"CERTIFIED\",\n    \"version\": \"v1\",\n    \"until\": \"1996-02-02T07:38:40.417Z\",\n    \"scopes\": \"id commo\",\n    \"properties\": {},\n    \"endpointInfos\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   },\n   {\n    \"from\": \"1945-09-14T06:54:56.448Z\",\n    \"name\": \"ais\",\n    \"status\": \"CERTIFIED\",\n    \"version\": \"v1\",\n    \"until\": \"1991-06-17T09:28:33.930Z\",\n    \"scopes\": \"consectet\",\n    \"properties\": {},\n    \"endpointInfos\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   }\n  ],\n  \"consentFlows\": [\n   {\n    \"type\": \"consent-flow-v2\",\n    \"version\": \"v1\",\n    \"status\": \"CERTIFIED\",\n    \"from\": \"1982-02-12T15:25:25.166Z\",\n    \"until\": \"2008-01-01T05:35:03.920Z\",\n    \"endpointInfos\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   },\n   {\n    \"type\": \"consent-flow-v2\",\n    \"version\": \"v1\",\n    \"status\": \"CERTIFIED\",\n    \"from\": \"1947-11-15T11:55:23.238Z\",\n    \"until\": \"1999-10-26T21:30:46.463Z\",\n    \"endpointInfos\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   }\n  ]\n },\n {\n  \"companyLogo\": {\n   \"large\": {\n    \"assetId\": \"assetId.svg\",\n    \"mimeType\": \"image/svg+xml\",\n    \"image\": \"QUNNRQ==\"\n   },\n   \"small\": {\n    \"assetId\": \"assetId.svg\",\n    \"mimeType\": \"image/svg+xml\",\n    \"image\": \"QUNNRQ==\"\n   }\n  },\n  \"companyName\": \"ACME\",\n  \"companyUrl\": \"https://www.acme.com\",\n  \"contact\": [\n   {\n    \"type\": \"BUSINESS\",\n    \"designation\": \"Account and Payments Services\",\n    \"emailAddress\": \"business-contact@acme.com\"\n   },\n   {\n    \"type\": \"TECHNICAL\",\n    \"emailAddress\": \"technical-contact@acme.com\",\n    \"phone\": \"+41 58 999 9999\"\n   },\n   {\n    \"type\": \"SUPPORT\",\n    \"emailAddress\": \"support-contact@acme.com\",\n    \"phone\": \"+41 58 999 9997\"\n   }\n  ],\n  \"lastModified\": \"1969-05-02T19:16:19.023Z\",\n  \"marketingDescription\": {\n   \"de\": [\n    \"\",\n    \"re\"\n   ],\n   \"en\": [\n    \"n\",\n    \"min\"\n   ],\n   \"fr\": [\n    \"pa\",\n    \"i\"\n   ],\n   \"it\": [\n    \"ad \",\n    \"d\"\n   ]\n  },\n  \"providerId\": \"in non in\",\n  \"registrationDate\": \"1988-06-27\",\n  \"shortDescription\": {\n   \"de\": \"Kurzbeschreibung\",\n   \"en\": \"Short description\",\n   \"fr\": \"Description rapide\",\n   \"it\": \"Corta descrizione\"\n  },\n  \"software\": {\n   \"category\": [\n    \"ACCOUNTING\"\n   ],\n   \"manufacturer\": \"ACME Corp.\",\n   \"marketingDescription\": {\n    \"de\": [\n     \"do\",\n     \"d\"\n    ],\n    \"en\": [\n     \"ipsu\",\n     \"c\"\n    ],\n    \"fr\": [\n     \"l\",\n     \"en\"\n    ],\n    \"it\": [\n     \"f\",\n     \"ad \"\n    ]\n   },\n   \"productInfoUrl\": \"https://acme.com/amce_accounting\",\n   \"productLogo\": {\n    \"large\": {\n     \"assetId\": \"assetId.svg\",\n     \"mimeType\": \"image/svg+xml\",\n     \"image\": \"QUNNRQ==\"\n    },\n    \"small\": {\n     \"assetId\": \"assetId.svg\",\n     \"mimeType\": \"image/svg+xml\",\n     \"image\": \"QUNNRQ==\"\n    }\n   },\n   \"productName\": {\n    \"de\": \"ACME Buchhaltungssoftware\",\n    \"en\": \"ACME accounting software\",\n    \"fr\": \"ACME software comptable\",\n    \"it\": \"ACME software contabilità\"\n   },\n   \"shortDescription\": {\n    \"de\": \"Kurzbeschreibung\",\n    \"en\": \"Short description\",\n    \"fr\": \"Description rapide\",\n    \"it\": \"Corta descrizione\"\n   },\n   \"marketingImage\": {\n    \"assetId\": \"assetId.svg\",\n    \"mimeType\": \"image/svg+xml\",\n    \"image\": \"QUNNRQ==\"\n   }\n  },\n  \"status\": \"ACTIVE\",\n  \"marketingImage\": {\n   \"assetId\": \"assetId.svg\",\n   \"mimeType\": \"image/svg+xml\",\n   \"image\": \"QUNNRQ==\"\n  },\n  \"useCases\": [\n   {\n    \"from\": \"1963-01-19T05:01:55.335Z\",\n    \"name\": \"ais\",\n    \"status\": \"CERTIFIED\",\n    \"version\": \"v1\",\n    \"until\": \"2016-09-02T22:21:39.995Z\",\n    \"scopes\": \"consequat\",\n    \"properties\": {},\n    \"endpointInfos\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   },\n   {\n    \"from\": \"2020-11-03T20:05:17.295Z\",\n    \"name\": \"ais\",\n    \"status\": \"CERTIFIED\",\n    \"version\": \"v1\",\n    \"until\": \"1951-01-30T19:34:47.915Z\",\n    \"scopes\": \"in do elit ullamco\",\n    \"properties\": {},\n    \"endpointInfos\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   }\n  ],\n  \"consentFlows\": [\n   {\n    \"type\": \"consent-flow-v2\",\n    \"version\": \"v1\",\n    \"status\": \"CERTIFIED\",\n    \"from\": \"1988-12-17T00:15:21.140Z\",\n    \"until\": \"2021-04-25T02:06:58.748Z\",\n    \"endpointInfos\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   },\n   {\n    \"type\": \"consent-flow-v2\",\n    \"version\": \"v1\",\n    \"status\": \"CERTIFIED\",\n    \"from\": \"1957-11-13T18:02:17.545Z\",\n    \"until\": \"1947-03-15T21:31:33.572Z\",\n    \"endpointInfos\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   }\n  ]\n }\n]"
								},
								{
									"name": "Bad Request - The format of the request was invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "cillum eu cupidatat voluptate"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "cillum eu cupidatat voluptate"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/directory/providers?status=ACTIVE&embed_assets=LOGO",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"directory",
												"providers"
											],
											"query": [
												{
													"key": "status",
													"value": "ACTIVE"
												},
												{
													"key": "embed_assets",
													"value": "LOGO"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "cillum eu cupidatat voluptate",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "cillum eu cupidatat voluptate",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PLATFORM",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								},
								{
									"name": "Unauthorized - Either no token or an invalid (e.g., token expired) token was received.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "cillum eu cupidatat voluptate"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "cillum eu cupidatat voluptate"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/directory/providers?status=ACTIVE&embed_assets=LOGO",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"directory",
												"providers"
											],
											"query": [
												{
													"key": "status",
													"value": "ACTIVE"
												},
												{
													"key": "embed_assets",
													"value": "LOGO"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "cillum eu cupidatat voluptate",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "cillum eu cupidatat voluptate",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PLATFORM",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								},
								{
									"name": "Forbidden - A valid OAuth Token was received, but access was denied. (Depending on the security requirements, providers can return 404 instead)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "cillum eu cupidatat voluptate"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "cillum eu cupidatat voluptate"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/directory/providers?status=ACTIVE&embed_assets=LOGO",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"directory",
												"providers"
											],
											"query": [
												{
													"key": "status",
													"value": "ACTIVE"
												},
												{
													"key": "embed_assets",
													"value": "LOGO"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "cillum eu cupidatat voluptate",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "cillum eu cupidatat voluptate",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PLATFORM",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								},
								{
									"name": "Not Found - Either the endpoint does not exist or a requested resource is not yet available (e.g., account statements)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "cillum eu cupidatat voluptate"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "cillum eu cupidatat voluptate"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/directory/providers?status=ACTIVE&embed_assets=LOGO",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"directory",
												"providers"
											],
											"query": [
												{
													"key": "status",
													"value": "ACTIVE"
												},
												{
													"key": "embed_assets",
													"value": "LOGO"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "cillum eu cupidatat voluptate",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "cillum eu cupidatat voluptate",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PLATFORM",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								},
								{
									"name": "Method Not Allowed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "cillum eu cupidatat voluptate"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "cillum eu cupidatat voluptate"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/directory/providers?status=ACTIVE&embed_assets=LOGO",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"directory",
												"providers"
											],
											"query": [
												{
													"key": "status",
													"value": "ACTIVE"
												},
												{
													"key": "embed_assets",
													"value": "LOGO"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "cillum eu cupidatat voluptate",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "cillum eu cupidatat voluptate",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PLATFORM",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "cillum eu cupidatat voluptate"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "cillum eu cupidatat voluptate"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/directory/providers?status=ACTIVE&embed_assets=LOGO",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"directory",
												"providers"
											],
											"query": [
												{
													"key": "status",
													"value": "ACTIVE"
												},
												{
													"key": "embed_assets",
													"value": "LOGO"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "cillum eu cupidatat voluptate",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "cillum eu cupidatat voluptate",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PLATFORM",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								},
								{
									"name": "Not Implemented",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "cillum eu cupidatat voluptate"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "cillum eu cupidatat voluptate"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/directory/providers?status=ACTIVE&embed_assets=LOGO",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"directory",
												"providers"
											],
											"query": [
												{
													"key": "status",
													"value": "ACTIVE"
												},
												{
													"key": "embed_assets",
													"value": "LOGO"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "cillum eu cupidatat voluptate",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "cillum eu cupidatat voluptate",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PLATFORM",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								}
							]
						},
						{
							"name": "Retrieve the information for a registered provider (e.g., financial institutions)",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
										"key": "X-Correlation-ID",
										"value": "manual-{{$guid}}"
									},
									{
										"description": "(Required) Name and version of the of the Client software",
										"key": "User-Agent",
										"value": "cillum eu cupidatat voluptate"
									}
								],
								"url": {
									"raw": "{{api-gw-external-cf2aas-api-platform-v2-base-url}}/directory/providers/:providerId?embed_assets=LOGO",
									"host": [
										"{{api-gw-external-cf2aas-api-platform-v2-base-url}}"
									],
									"path": [
										"directory",
										"providers",
										":providerId"
									],
									"query": [
										{
											"key": "embed_assets",
											"value": "LOGO",
											"description": "ALL  = Embed all assets as base64\nLOGO = Embed all logos as base64\nNONE = No emedded assets\n"
										}
									],
									"variable": [
										{
											"key": "providerId",
											"value": "CIDX9999999991",
											"description": "(Required) id of the provider"
										}
									]
								},
								"description": "Returns information regarding software and supported use cases of a provider. (SCOPE: SIX)\n"
							},
							"response": [
								{
									"name": "Information for a provider",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "cillum eu cupidatat voluptate"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "cillum eu cupidatat voluptate"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/directory/providers/:providerId?embed_assets=LOGO",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"directory",
												"providers",
												":providerId"
											],
											"query": [
												{
													"key": "embed_assets",
													"value": "LOGO"
												}
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Correlation-ID",
											"value": "cillum eu cupidatat voluptate",
											"description": "Reflects the ID (set by the caller) from the request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "cillum eu cupidatat voluptate",
											"description": "The header value is always PLATFORM"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"companyLogo\": {\n  \"large\": {\n   \"assetId\": \"assetId.svg\",\n   \"mimeType\": \"image/svg+xml\",\n   \"image\": \"QUNNRQ==\"\n  },\n  \"small\": {\n   \"assetId\": \"assetId.svg\",\n   \"mimeType\": \"image/svg+xml\",\n   \"image\": \"QUNNRQ==\"\n  }\n },\n \"companyName\": \"ACME\",\n \"companyUrl\": \"https://www.acme.com\",\n \"contact\": [\n  {\n   \"type\": \"BUSINESS\",\n   \"designation\": \"Account and Payments Services\",\n   \"emailAddress\": \"business-contact@acme.com\"\n  },\n  {\n   \"type\": \"TECHNICAL\",\n   \"emailAddress\": \"technical-contact@acme.com\",\n   \"phone\": \"+41 58 999 9999\"\n  },\n  {\n   \"type\": \"SUPPORT\",\n   \"emailAddress\": \"support-contact@acme.com\",\n   \"phone\": \"+41 58 999 9997\"\n  }\n ],\n \"lastModified\": \"1984-11-06T18:11:56.635Z\",\n \"marketingDescription\": {\n  \"de\": [\n   \"cons\",\n   \"dese\"\n  ],\n  \"en\": [\n   \"\",\n   \"mo\"\n  ],\n  \"fr\": [\n   \"ni\",\n   \"i\"\n  ],\n  \"it\": [\n   \"en\",\n   \"m\"\n  ]\n },\n \"providerId\": \"ipsum laboris\",\n \"registrationDate\": \"1999-04-06\",\n \"shortDescription\": {\n  \"de\": \"Kurzbeschreibung\",\n  \"en\": \"Short description\",\n  \"fr\": \"Description rapide\",\n  \"it\": \"Corta descrizione\"\n },\n \"software\": {\n  \"category\": [\n   \"ACCOUNTING\"\n  ],\n  \"manufacturer\": \"ACME Corp.\",\n  \"marketingDescription\": {\n   \"de\": [\n    \"o\",\n    \"n\"\n   ],\n   \"en\": [\n    \"re\",\n    \"Lor\"\n   ],\n   \"fr\": [\n    \"irur\",\n    \"volu\"\n   ],\n   \"it\": [\n    \"Ut\",\n    \"d\"\n   ]\n  },\n  \"productInfoUrl\": \"https://acme.com/amce_accounting\",\n  \"productLogo\": {\n   \"large\": {\n    \"assetId\": \"assetId.svg\",\n    \"mimeType\": \"image/svg+xml\",\n    \"image\": \"QUNNRQ==\"\n   },\n   \"small\": {\n    \"assetId\": \"assetId.svg\",\n    \"mimeType\": \"image/svg+xml\",\n    \"image\": \"QUNNRQ==\"\n   }\n  },\n  \"productName\": {\n   \"de\": \"ACME Buchhaltungssoftware\",\n   \"en\": \"ACME accounting software\",\n   \"fr\": \"ACME software comptable\",\n   \"it\": \"ACME software contabilità\"\n  },\n  \"shortDescription\": {\n   \"de\": \"Kurzbeschreibung\",\n   \"en\": \"Short description\",\n   \"fr\": \"Description rapide\",\n   \"it\": \"Corta descrizione\"\n  },\n  \"marketingImage\": {\n   \"assetId\": \"assetId.svg\",\n   \"mimeType\": \"image/svg+xml\",\n   \"image\": \"QUNNRQ==\"\n  }\n },\n \"status\": \"ACTIVE\",\n \"marketingImage\": {\n  \"assetId\": \"assetId.svg\",\n  \"mimeType\": \"image/svg+xml\",\n  \"image\": \"QUNNRQ==\"\n },\n \"useCases\": [\n  {\n   \"from\": \"2013-08-25T03:30:48.512Z\",\n   \"name\": \"ais\",\n   \"status\": \"CERTIFIED\",\n   \"version\": \"v1\",\n   \"until\": \"1998-06-24T03:15:06.779Z\",\n   \"scopes\": \"mollit Duis amet\",\n   \"properties\": {},\n   \"endpointInfos\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  },\n  {\n   \"from\": \"1971-09-21T15:21:20.218Z\",\n   \"name\": \"ais\",\n   \"status\": \"CERTIFIED\",\n   \"version\": \"v1\",\n   \"until\": \"2000-10-31T07:37:59.615Z\",\n   \"scopes\": \"Ut\",\n   \"properties\": {},\n   \"endpointInfos\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  }\n ],\n \"consentFlows\": [\n  {\n   \"type\": \"consent-flow-v2\",\n   \"version\": \"v1\",\n   \"status\": \"CERTIFIED\",\n   \"from\": \"1956-05-08T22:18:24.052Z\",\n   \"until\": \"1983-12-27T08:25:43.013Z\",\n   \"endpointInfos\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  },\n  {\n   \"type\": \"consent-flow-v2\",\n   \"version\": \"v1\",\n   \"status\": \"CERTIFIED\",\n   \"from\": \"1982-11-25T02:02:08.535Z\",\n   \"until\": \"2007-04-27T08:44:17.886Z\",\n   \"endpointInfos\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  }\n ]\n}"
								},
								{
									"name": "Bad Request - The format of the request was invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "cillum eu cupidatat voluptate"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "cillum eu cupidatat voluptate"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/directory/providers/:providerId?embed_assets=LOGO",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"directory",
												"providers",
												":providerId"
											],
											"query": [
												{
													"key": "embed_assets",
													"value": "LOGO"
												}
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "cillum eu cupidatat voluptate",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "cillum eu cupidatat voluptate",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PLATFORM",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								},
								{
									"name": "Unauthorized - Either no token or an invalid (e.g., token expired) token was received.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "cillum eu cupidatat voluptate"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "cillum eu cupidatat voluptate"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/directory/providers/:providerId?embed_assets=LOGO",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"directory",
												"providers",
												":providerId"
											],
											"query": [
												{
													"key": "embed_assets",
													"value": "LOGO"
												}
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "cillum eu cupidatat voluptate",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "cillum eu cupidatat voluptate",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PLATFORM",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								},
								{
									"name": "Forbidden - A valid OAuth Token was received, but access was denied. (Depending on the security requirements, providers can return 404 instead)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "cillum eu cupidatat voluptate"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "cillum eu cupidatat voluptate"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/directory/providers/:providerId?embed_assets=LOGO",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"directory",
												"providers",
												":providerId"
											],
											"query": [
												{
													"key": "embed_assets",
													"value": "LOGO"
												}
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "cillum eu cupidatat voluptate",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "cillum eu cupidatat voluptate",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PLATFORM",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								},
								{
									"name": "Not Found - Either the endpoint does not exist or a requested resource is not yet available (e.g., account statements)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "cillum eu cupidatat voluptate"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "cillum eu cupidatat voluptate"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/directory/providers/:providerId?embed_assets=LOGO",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"directory",
												"providers",
												":providerId"
											],
											"query": [
												{
													"key": "embed_assets",
													"value": "LOGO"
												}
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "cillum eu cupidatat voluptate",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "cillum eu cupidatat voluptate",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PLATFORM",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								},
								{
									"name": "Method Not Allowed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "cillum eu cupidatat voluptate"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "cillum eu cupidatat voluptate"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/directory/providers/:providerId?embed_assets=LOGO",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"directory",
												"providers",
												":providerId"
											],
											"query": [
												{
													"key": "embed_assets",
													"value": "LOGO"
												}
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "cillum eu cupidatat voluptate",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "cillum eu cupidatat voluptate",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PLATFORM",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "cillum eu cupidatat voluptate"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "cillum eu cupidatat voluptate"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/directory/providers/:providerId?embed_assets=LOGO",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"directory",
												"providers",
												":providerId"
											],
											"query": [
												{
													"key": "embed_assets",
													"value": "LOGO"
												}
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "cillum eu cupidatat voluptate",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "cillum eu cupidatat voluptate",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PLATFORM",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								},
								{
									"name": "Not Implemented",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "cillum eu cupidatat voluptate"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "cillum eu cupidatat voluptate"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/directory/providers/:providerId?embed_assets=LOGO",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"directory",
												"providers",
												":providerId"
											],
											"query": [
												{
													"key": "embed_assets",
													"value": "LOGO"
												}
											],
											"variable": [
												{
													"key": "providerId"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "cillum eu cupidatat voluptate",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "cillum eu cupidatat voluptate",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PLATFORM",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								}
							]
						}
					]
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"if (pm.environment.get(\"uses-legacy-certificate\") === \"true\") {",
							"    pm.request.headers.add({",
							"        enabled: true,",
							"        key: \"X-Instance-ID\",",
							"        value: pm.environment.get(\"cf2aas-instance-id\")",
							"    })",
							"}"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "account-information-service",
			"item": [
				{
					"name": "Retrieve list of authorized accounts",
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
								"key": "X-Correlation-ID",
								"value": "manual-{{$guid}}"
							},
							{
								"description": "(Required) Name and version of the of the Client software",
								"key": "User-Agent",
								"value": "officia in sunt proident"
							},
							{
								"description": "(Required) ID that identifies the provider (e.g., a financial institution). (SCOPE: SIX required)",
								"key": "X-CorAPI-Target-ID",
								"value": "{{provider-id}}"
							},
							{
								"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
								"key": "X-PSU-IP-Address",
								"value": "officia in sunt proident"
							},
							{
								"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
								"key": "X-PSU-User-Agent",
								"value": "officia in sunt proident"
							},
							{
								"key": "Permission-id",
								"value": "{{cf2aas-permission-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api-gw-external-cf2aas-api-ais-v3-base-url}}/accounts",
							"host": [
								"{{api-gw-external-cf2aas-api-ais-v3-base-url}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": [
						{
							"name": "Returns a list of authorized accounts.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Bearer followed by a base64 encoded OAuth access token",
										"key": "Authorization",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) This contains the permission Id returned by the post permission, which was performed prior to any request.",
										"key": "Permission-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
										"key": "X-Correlation-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) Name and version of the of the Client software",
										"key": "User-Agent",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) ID that identifies the provider (e.g., a financial institution). (SCOPE: SIX required)",
										"key": "X-CorAPI-Target-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-IP-Address",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-User-Agent",
										"value": "officia in sunt proident"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Correlation-ID",
									"value": "officia in sunt proident",
									"description": "Reflects the ID (set by the caller) from the request."
								},
								{
									"key": "X-CorAPI-Source",
									"value": "PROVIDER",
									"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"abc123_abcxyz.123789.abcxyz.abcxyz_abcxyz_abcxyz_abcxyz_ccccc_123abc\",\n  \"account\": {\n   \"type\": \"IBAN\",\n   \"identification\": \"CH9300762011623852957\"\n  },\n  \"currency\": \"CHF\",\n  \"designation\": \"Firmenkonto\",\n  \"_links\": {\n   \"self\": \"/accounts/550e8400-e29b-11d4-a716-446655440000\",\n   \"balance\": \"/accounts/550e8400-e29b-11d4-a716-446655440000/balance\",\n   \"transactions\": \"deserunt incididunt\"\n  }\n },\n {\n  \"id\": \"abc123_abcxyz.123789.abcxyz.abcxyz_abcxyz_abcxyz_abcxyz_ccccc_123abc\",\n  \"account\": {\n   \"type\": \"IBAN\",\n   \"identification\": \"CH9300762011623852957\"\n  },\n  \"currency\": \"CHF\",\n  \"designation\": \"Firmenkonto\",\n  \"_links\": {\n   \"self\": \"/accounts/550e8400-e29b-11d4-a716-446655440000\",\n   \"balance\": \"/accounts/550e8400-e29b-11d4-a716-446655440000/balance\",\n   \"transactions\": \"Excepteur\"\n  }\n }\n]"
						},
						{
							"name": "Bad Request - The format of the request was invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Bearer followed by a base64 encoded OAuth access token",
										"key": "Authorization",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) This contains the permission Id returned by the post permission, which was performed prior to any request.",
										"key": "Permission-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
										"key": "X-Correlation-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) Name and version of the of the Client software",
										"key": "User-Agent",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) ID that identifies the provider (e.g., a financial institution). (SCOPE: SIX required)",
										"key": "X-CorAPI-Target-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-IP-Address",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-User-Agent",
										"value": "officia in sunt proident"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Language",
									"value": "officia in sunt proident",
									"description": "always en"
								},
								{
									"key": "X-Correlation-ID",
									"value": "officia in sunt proident",
									"description": "Reflected client defined ID from request."
								},
								{
									"key": "X-CorAPI-Source",
									"value": "PROVIDER",
									"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
								},
								{
									"key": "Content-Type",
									"value": "application/problem+json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
						},
						{
							"name": "Unauthorized - Either no token or an invalid (e.g., token expired) token was received.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Bearer followed by a base64 encoded OAuth access token",
										"key": "Authorization",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) This contains the permission Id returned by the post permission, which was performed prior to any request.",
										"key": "Permission-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
										"key": "X-Correlation-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) Name and version of the of the Client software",
										"key": "User-Agent",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) ID that identifies the provider (e.g., a financial institution). (SCOPE: SIX required)",
										"key": "X-CorAPI-Target-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-IP-Address",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-User-Agent",
										"value": "officia in sunt proident"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Language",
									"value": "officia in sunt proident",
									"description": "always en"
								},
								{
									"key": "X-Correlation-ID",
									"value": "officia in sunt proident",
									"description": "Reflected client defined ID from request."
								},
								{
									"key": "X-CorAPI-Source",
									"value": "PROVIDER",
									"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
								},
								{
									"key": "Content-Type",
									"value": "application/problem+json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
						},
						{
							"name": "Forbidden - A valid OAuth Token was received, but access was denied. (Depending on the security requirements, providers can return 404 instead)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Bearer followed by a base64 encoded OAuth access token",
										"key": "Authorization",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) This contains the permission Id returned by the post permission, which was performed prior to any request.",
										"key": "Permission-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
										"key": "X-Correlation-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) Name and version of the of the Client software",
										"key": "User-Agent",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) ID that identifies the provider (e.g., a financial institution). (SCOPE: SIX required)",
										"key": "X-CorAPI-Target-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-IP-Address",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-User-Agent",
										"value": "officia in sunt proident"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Language",
									"value": "officia in sunt proident",
									"description": "always en"
								},
								{
									"key": "X-Correlation-ID",
									"value": "officia in sunt proident",
									"description": "Reflected client defined ID from request."
								},
								{
									"key": "X-CorAPI-Source",
									"value": "PROVIDER",
									"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
								},
								{
									"key": "Content-Type",
									"value": "application/problem+json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
						},
						{
							"name": "Not Found - Either the endpoint does not exist or a requested resource is not yet available (e.g., account statements)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Bearer followed by a base64 encoded OAuth access token",
										"key": "Authorization",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) This contains the permission Id returned by the post permission, which was performed prior to any request.",
										"key": "Permission-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
										"key": "X-Correlation-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) Name and version of the of the Client software",
										"key": "User-Agent",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) ID that identifies the provider (e.g., a financial institution). (SCOPE: SIX required)",
										"key": "X-CorAPI-Target-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-IP-Address",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-User-Agent",
										"value": "officia in sunt proident"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Language",
									"value": "officia in sunt proident",
									"description": "always en"
								},
								{
									"key": "X-Correlation-ID",
									"value": "officia in sunt proident",
									"description": "Reflected client defined ID from request."
								},
								{
									"key": "X-CorAPI-Source",
									"value": "PROVIDER",
									"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
								},
								{
									"key": "Content-Type",
									"value": "application/problem+json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
						},
						{
							"name": "Method Not Allowed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Bearer followed by a base64 encoded OAuth access token",
										"key": "Authorization",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) This contains the permission Id returned by the post permission, which was performed prior to any request.",
										"key": "Permission-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
										"key": "X-Correlation-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) Name and version of the of the Client software",
										"key": "User-Agent",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) ID that identifies the provider (e.g., a financial institution). (SCOPE: SIX required)",
										"key": "X-CorAPI-Target-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-IP-Address",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-User-Agent",
										"value": "officia in sunt proident"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									]
								}
							},
							"status": "Method Not Allowed",
							"code": 405,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Language",
									"value": "officia in sunt proident",
									"description": "always en"
								},
								{
									"key": "X-Correlation-ID",
									"value": "officia in sunt proident",
									"description": "Reflected client defined ID from request."
								},
								{
									"key": "X-CorAPI-Source",
									"value": "PROVIDER",
									"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
								},
								{
									"key": "Content-Type",
									"value": "application/problem+json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Bearer followed by a base64 encoded OAuth access token",
										"key": "Authorization",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) This contains the permission Id returned by the post permission, which was performed prior to any request.",
										"key": "Permission-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
										"key": "X-Correlation-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) Name and version of the of the Client software",
										"key": "User-Agent",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) ID that identifies the provider (e.g., a financial institution). (SCOPE: SIX required)",
										"key": "X-CorAPI-Target-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-IP-Address",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-User-Agent",
										"value": "officia in sunt proident"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Language",
									"value": "officia in sunt proident",
									"description": "always en"
								},
								{
									"key": "X-Correlation-ID",
									"value": "officia in sunt proident",
									"description": "Reflected client defined ID from request."
								},
								{
									"key": "X-CorAPI-Source",
									"value": "PROVIDER",
									"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
								},
								{
									"key": "Content-Type",
									"value": "application/problem+json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
						},
						{
							"name": "Not Implemented",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Bearer followed by a base64 encoded OAuth access token",
										"key": "Authorization",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) This contains the permission Id returned by the post permission, which was performed prior to any request.",
										"key": "Permission-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
										"key": "X-Correlation-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) Name and version of the of the Client software",
										"key": "User-Agent",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) ID that identifies the provider (e.g., a financial institution). (SCOPE: SIX required)",
										"key": "X-CorAPI-Target-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-IP-Address",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-User-Agent",
										"value": "officia in sunt proident"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Language",
									"value": "officia in sunt proident",
									"description": "always en"
								},
								{
									"key": "X-Correlation-ID",
									"value": "officia in sunt proident",
									"description": "Reflected client defined ID from request."
								},
								{
									"key": "X-CorAPI-Source",
									"value": "PROVIDER",
									"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
								},
								{
									"key": "Content-Type",
									"value": "application/problem+json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
						}
					]
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"if (pm.environment.get(\"uses-legacy-certificate\") === \"true\") {",
							"    pm.request.headers.add({",
							"        enabled: true,",
							"        key: \"X-Instance-ID\",",
							"        value: pm.environment.get(\"cf2aas-instance-id\")",
							"    })",
							"}"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "payments-submission-service",
			"item": [
				{
					"name": "/payments",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const messageId = pm.variables.replaceIn('{{$randomUUID}}').substring(0, 35);\r",
									"pm.variables.set(\"messageId\", messageId);\r",
									"pm.variables.set(\"currentDate\", new Date().toISOString().split('T')[0])"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) Name and version of the of the Client software",
								"key": "User-Agent",
								"value": "<string>"
							},
							{
								"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
								"key": "X-PSU-IP-Address",
								"value": "<string>"
							},
							{
								"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
								"key": "X-PSU-User-Agent",
								"value": "<string>"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-CorAPI-Target-ID",
								"value": "{{provider-id}}"
							},
							{
								"key": "Permission-ID",
								"value": "{{cf2aas-permission-id}}"
							},
							{
								"key": "X-Correlation-ID",
								"value": "manual-{{$guid}}"
							},
							{
								"key": "X-Instance-ID",
								"value": "{{cf2aas-instance-id}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"messageId\": \"{{messageId}}\",\n  \"initiatingPartyId\": \"TPP01746\",\n  \"requestedExecutionDate\": \"{{currentDate}}\",\n  \"debtorAccount\": {\n    \"type\": \"IBAN\",\n    \"identification\": \"CH0209000000100013997\"\n  },\n  \"bookingInstruction\": \"BATCHBOOKING_SALA_NOA\",\n  \"transactions\": [\n    {\n      \"instructionId\": \"INSTR-001\",\n      \"endToEndId\": \"ENDTOENDID-001\",\n      \"instructedAmount\": {\n        \"currency\": \"CHF\",\n        \"amount\": \"10.25\"\n      },\n      \"ibanDetails\": {\n        \"sepaIndicator\": true,\n        \"creditorAccount\": {\n          \"type\": \"IBAN\",\n          \"identification\": \"CH0209000000100013997\"\n        },\n        \"creditorAgent\": {\n          \"bic\": \"BDEMMXMM\",\n          \"clearingSystemMemberIdentification\": {\n            \"code\": \"CHBCC\",\n            \"memberId\": \"00230\"\n          }\n        },\n        \"creditor\": {\n          \"name\": \"Hans Muster\",\n          \"postalAddress\": {\n            \"structured\": {\n              \"streetName\": \"Rue de la gare\",\n              \"buildingNumber\": \"24\",\n              \"postCode\": \"2501\",\n              \"townName\": \"Biel\",\n              \"country\": \"CH\"\n            },\n            \"unstructured\": {\n              \"addressLines\": [\n                \"Robert Schneider SA\",\n                \"Rue de la gare 24\"\n              ],\n              \"country\": \"CH\"\n            }\n          }\n        },\n        \"chargeBearer\": \"SHAR\",\n        \"remittanceReference\": {\n          \"type\": \"SCOR\",\n          \"reference\": \"RF18000000000539007547034\"\n        },\n        \"remittanceInformation\": \"Rechnung Nr. 408\"\n      },\n      \"isrDetails\": {\n        \"creditorAccount\": {\n          \"type\": \"OTHER\",\n          \"identification\": \"01-39139-1\"\n        },\n        \"creditor\": {\n          \"name\": \"Hans Muster\",\n          \"postalAddress\": {\n            \"structured\": {\n              \"streetName\": \"Rue de la gare\",\n              \"buildingNumber\": \"24\",\n              \"postCode\": \"2501\",\n              \"townName\": \"Biel\",\n              \"country\": \"CH\"\n            },\n            \"unstructured\": {\n              \"addressLines\": [\n                \"Robert Schneider SA\",\n                \"Rue de la gare 24\"\n              ],\n              \"country\": \"CH\"\n            }\n          }\n        },\n        \"remittanceReference\": {\n          \"type\": \"ISR\",\n          \"reference\": \"RF18000000000539007547034\"\n        }\n      },\n      \"otherDetails\": {\n        \"creditorAccount\": {\n          \"type\": \"OTHER\",\n          \"identification\": \"01-39139-1\"\n        },\n        \"creditorAgent\": {\n          \"bic\": \"BDEMMXMM\",\n          \"clearingSystemMemberIdentification\": {\n            \"code\": \"CHBCC\",\n            \"memberId\": \"00230\"\n          }\n        },\n        \"creditor\": {\n          \"name\": \"Hans Muster\",\n          \"postalAddress\": {\n            \"structured\": {\n              \"streetName\": \"Rue de la gare\",\n              \"buildingNumber\": \"24\",\n              \"postCode\": \"2501\",\n              \"townName\": \"Biel\",\n              \"country\": \"CH\"\n            },\n            \"unstructured\": {\n              \"addressLines\": [\n                \"Robert Schneider SA\",\n                \"Rue de la gare 24\"\n              ],\n              \"country\": \"CH\"\n            }\n          }\n        },\n        \"chargeBearer\": \"SHAR\",\n        \"remittanceReference\": {\n          \"type\": \"SCOR\",\n          \"reference\": \"RF18000000000539007547034\"\n        },\n        \"remittanceInformation\": \"Rechnung Nr. 408\"\n      },\n      \"qrDetails\": {\n        \"creditorAccount\": {\n          \"type\": \"IBAN\",\n          \"identification\": \"CH0209000000100013997\"\n        },\n        \"creditor\": {\n          \"name\": \"Hans Muster\",\n          \"postalAddress\": {\n            \"structured\": {\n              \"streetName\": \"Rue de la gare\",\n              \"buildingNumber\": \"24\",\n              \"postCode\": \"2501\",\n              \"townName\": \"Biel\",\n              \"country\": \"CH\"\n            },\n            \"unstructured\": {\n              \"addressLines\": [\n                \"Robert Schneider SA\",\n                \"Rue de la gare 24\"\n              ],\n              \"country\": \"CH\"\n            }\n          }\n        },\n        \"ultimateCreditor\": {\n          \"name\": \"Hans Muster\",\n          \"postalAddress\": {\n            \"structured\": {\n              \"streetName\": \"Rue de la gare\",\n              \"buildingNumber\": \"24\",\n              \"postCode\": \"2501\",\n              \"townName\": \"Biel\",\n              \"country\": \"CH\"\n            },\n            \"unstructured\": {\n              \"addressLines\": [\n                \"Robert Schneider SA\",\n                \"Rue de la gare 24\"\n              ],\n              \"country\": \"CH\"\n            }\n          }\n        },\n        \"ultimateDebtor\": {\n          \"name\": \"Hans Muster\",\n          \"postalAddress\": {\n            \"structured\": {\n              \"streetName\": \"Rue de la gare\",\n              \"buildingNumber\": \"24\",\n              \"postCode\": \"2501\",\n              \"townName\": \"Biel\",\n              \"country\": \"CH\"\n            },\n            \"unstructured\": {\n              \"addressLines\": [\n                \"Robert Schneider SA\",\n                \"Rue de la gare 24\"\n              ],\n              \"country\": \"CH\"\n            }\n          }\n        },\n        \"remittanceReference\": {\n          \"type\": \"SCOR\",\n          \"reference\": \"RF18000000000539007547034\"\n        },\n        \"remittanceInformation\": \"Rechnung Nr. 408\"\n      }\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{api-gw-external-cf2aas-api-pss-v3-base-url}}/payments",
							"host": [
								"{{api-gw-external-cf2aas-api-pss-v3-base-url}}"
							],
							"path": [
								"payments"
							]
						}
					},
					"response": []
				},
				{
					"name": "/iso20022/payments",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) Name and version of the of the Client software",
								"key": "User-Agent",
								"value": "<string>"
							},
							{
								"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
								"key": "X-PSU-IP-Address",
								"value": "<string>"
							},
							{
								"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
								"key": "X-PSU-User-Agent",
								"value": "<string>"
							},
							{
								"key": "Content-Type",
								"value": "application/xml"
							},
							{
								"key": "X-CorAPI-Target-ID",
								"value": "{{provider-id}}"
							},
							{
								"key": "Permission-ID",
								"value": "{{cf2aas-permission-id}}"
							},
							{
								"key": "X-Correlation-ID",
								"value": "manual-{{$guid}}"
							},
							{
								"key": "X-Instance-ID",
								"value": "{{cf2aas-instance-id}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!-- XML example cannot be generated -->"
						},
						"url": {
							"raw": "{{api-gw-external-cf2aas-api-pss-v3-base-url}}/iso20022/payments",
							"host": [
								"{{api-gw-external-cf2aas-api-pss-v3-base-url}}"
							],
							"path": [
								"iso20022",
								"payments"
							]
						},
						"description": "Submit an ISO20022 XML PAIN.001 payment instruction.\nThe submitted payment instruction must conform to the XML Schema and Implementation Guidelines defined by Swiss Payment Standards;\nsee: https://www.six-interbank-clearing.com/en/home/standardization/iso-payments/customer-bank/implementation-guidelines.html\n"
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"if (pm.environment.get(\"uses-legacy-certificate\") === \"true\") {",
							"    pm.request.headers.add({",
							"        enabled: true,",
							"        key: \"X-Instance-ID\",",
							"        value: pm.environment.get(\"cf2aas-instance-id\")",
							"    })",
							"}"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "custody-services",
			"item": [
				{
					"name": "/customerAccounts",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) Name and version of the of the Client software",
								"key": "User-Agent",
								"value": "<string>"
							},
							{
								"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
								"key": "X-PSU-IP-Address",
								"value": "<string>"
							},
							{
								"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
								"key": "X-PSU-User-Agent",
								"value": "<string>"
							},
							{
								"key": "X-CorAPI-Target-ID",
								"value": "{{provider-id}}"
							},
							{
								"key": "Permission-ID",
								"value": "{{cf2aas-permission-id}}"
							},
							{
								"key": "X-Correlation-ID",
								"value": "manual-{{$guid}}"
							},
							{
								"key": "X-Instance-ID",
								"value": "{{cf2aas-instance-id}}",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{api-gw-external-cf2aas-api-custody-services-v1-base-url}}/customerAccounts?cursor=1&limit=1",
							"host": [
								"{{api-gw-external-cf2aas-api-custody-services-v1-base-url}}"
							],
							"path": [
								"customerAccounts"
							],
							"query": [
								{
									"key": "cursor",
									"value": "1",
									"description": "An opaque string value used for pagination"
								},
								{
									"key": "limit",
									"value": "1",
									"description": "Maximum number of items to return."
								}
							]
						},
						"description": "This endpoint returns a highlevel list of customers and the respective accounts accessible for the logged in user. Paging is done based on the customerOverview object, i.e. if limit is set to 1, then 1 customerOverview will be returned per page."
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"if (pm.environment.get(\"uses-legacy-certificate\") === \"true\") {",
							"    pm.request.headers.add({",
							"        enabled: true,",
							"        key: \"X-Instance-ID\",",
							"        value: pm.environment.get(\"cf2aas-instance-id\")",
							"    })",
							"}"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "customer-management",
			"item": [
				{
					"name": "/customers",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) Name and version of the of the Client software",
								"key": "User-Agent",
								"value": "<string>"
							},
							{
								"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
								"key": "X-PSU-IP-Address",
								"value": "<string>"
							},
							{
								"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
								"key": "X-PSU-User-Agent",
								"value": "<string>"
							},
							{
								"key": "X-CorAPI-Target-ID",
								"value": "{{provider-id}}"
							},
							{
								"key": "Permission-ID",
								"value": "{{cf2aas-permission-id}}"
							},
							{
								"key": "X-Correlation-ID",
								"value": "manual-{{$guid}}"
							},
							{
								"key": "X-Instance-ID",
								"value": "{{cf2aas-instance-id}}",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{api-gw-external-cf2aas-api-customer-management-v1-base-url}}/customers?cursor=1&limit=1",
							"host": [
								"{{api-gw-external-cf2aas-api-customer-management-v1-base-url}}"
							],
							"path": [
								"customers"
							],
							"query": [
								{
									"key": "cursor",
									"value": "1",
									"description": "An opaque string value used for pagination"
								},
								{
									"key": "limit",
									"value": "1",
									"description": "Maximum number of items to return."
								}
							]
						},
						"description": "Returns a list of all customers. A customer is an object which holds a contract with a (custody-)bank. Paging is done based on the customer object, i.e. if limit is set to 1, then 1 customer will be returned per page."
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"if (pm.environment.get(\"uses-legacy-certificate\") === \"true\") {",
							"    pm.request.headers.add({",
							"        enabled: true,",
							"        key: \"X-Instance-ID\",",
							"        value: pm.environment.get(\"cf2aas-instance-id\")",
							"    })",
							"}"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "order-placement",
			"item": [
				{
					"name": "/orders",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) Name and version of the of the Client software",
								"key": "User-Agent",
								"value": "<string>"
							},
							{
								"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
								"key": "X-PSU-IP-Address",
								"value": "<string>"
							},
							{
								"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
								"key": "X-PSU-User-Agent",
								"value": "<string>"
							},
							{
								"key": "X-CorAPI-Target-ID",
								"value": "{{provider-id}}"
							},
							{
								"key": "Permission-ID",
								"value": "{{cf2aas-permission-id}}"
							},
							{
								"key": "X-Correlation-ID",
								"value": "manual-{{$guid}}"
							},
							{
								"key": "X-Instance-ID",
								"value": "{{cf2aas-instance-id}}",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{api-gw-external-cf2aas-api-order-placement-v2-base-url}}/orders?cursor=1&limit=1",
							"host": [
								"{{api-gw-external-cf2aas-api-order-placement-v2-base-url}}"
							],
							"path": [
								"orders"
							],
							"query": [
								{
									"key": "cursor",
									"value": "1",
									"description": "An opaque string value used for pagination"
								},
								{
									"key": "limit",
									"value": "1",
									"description": "Maximum number of items to return."
								}
							]
						},
						"description": "Returns all open orders to which the user of the API has access to. Paging is done based on the completeOrder object, i.e. if limit is set to 1, then 1 completeOrder will be returned per page."
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"if (pm.environment.get(\"uses-legacy-certificate\") === \"true\") {",
							"    pm.request.headers.add({",
							"        enabled: true,",
							"        key: \"X-Instance-ID\",",
							"        value: pm.environment.get(\"cf2aas-instance-id\")",
							"    })",
							"}"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "permissions/{provider Id}/{user Id}",
			"item": [
				{
					"name": "{permission Id}",
					"item": [
						{
							"name": "Retrieve a permission for a given provider, user ID and permission ID",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
										"key": "X-Correlation-ID",
										"value": "manual-{{$guid}}"
									},
									{
										"description": "(Required) Name and version of the of the Client software",
										"key": "User-Agent",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-IP-Address",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-User-Agent",
										"value": "officia in sunt proident"
									}
								],
								"url": {
									"raw": "{{api-gw-external-cf2aas-api-consent-flow-v2-base-url}}/permissions/:providerId/:userId/:permissionId",
									"host": [
										"{{api-gw-external-cf2aas-api-consent-flow-v2-base-url}}"
									],
									"path": [
										"permissions",
										":providerId",
										":userId",
										":permissionId"
									],
									"variable": [
										{
											"key": "providerId",
											"value": "{{provider-id}}",
											"description": "(Required) id of the provider"
										},
										{
											"key": "userId",
											"value": "{{cf2aas-user-id}}",
											"description": "(Required) user ID"
										},
										{
											"key": "permissionId",
											"value": "{{cf2aas-permission-id}}",
											"description": "(Required) permission ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Retrieve a permission for a given provider, user ID and permission ID",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-IP-Address",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-User-Agent",
												"value": "officia in sunt proident"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/permissions/:providerId/:userId/:permissionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												":providerId",
												":userId",
												":permissionId"
											],
											"variable": [
												{
													"key": "providerId"
												},
												{
													"key": "userId"
												},
												{
													"key": "permissionId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Correlation-ID",
											"value": "officia in sunt proident",
											"description": "Reflects the ID (set by the caller) from the request."
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"providerId\": \"1234\",\n \"permissionId\": \"c46d7cb8-500d-48ba-a085-671173a84cd3\",\n \"status\": \"received\",\n \"username\": \"username\",\n \"externalReference\": \"'FyylcwRr 0LBtyC8WZ3h'iUvzgy89z63LA'\"\n}"
								},
								{
									"name": "Bad Request - The format of the request was invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-IP-Address",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-User-Agent",
												"value": "officia in sunt proident"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/permissions/:providerId/:userId/:permissionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												":providerId",
												":userId",
												":permissionId"
											],
											"variable": [
												{
													"key": "providerId"
												},
												{
													"key": "userId"
												},
												{
													"key": "permissionId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "officia in sunt proident",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "officia in sunt proident",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PROVIDER",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								},
								{
									"name": "Unauthorized - Either no token or an invalid (e.g., token expired) token was received.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-IP-Address",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-User-Agent",
												"value": "officia in sunt proident"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/permissions/:providerId/:userId/:permissionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												":providerId",
												":userId",
												":permissionId"
											],
											"variable": [
												{
													"key": "providerId"
												},
												{
													"key": "userId"
												},
												{
													"key": "permissionId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "officia in sunt proident",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "officia in sunt proident",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PROVIDER",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								},
								{
									"name": "Forbidden - A valid OAuth Token was received, but access was denied. (Depending on the security requirements, providers can return 404 instead)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-IP-Address",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-User-Agent",
												"value": "officia in sunt proident"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/permissions/:providerId/:userId/:permissionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												":providerId",
												":userId",
												":permissionId"
											],
											"variable": [
												{
													"key": "providerId"
												},
												{
													"key": "userId"
												},
												{
													"key": "permissionId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "officia in sunt proident",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "officia in sunt proident",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PROVIDER",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								},
								{
									"name": "Not Found - Either the endpoint does not exist or a requested resource is not yet available (e.g., account statements)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-IP-Address",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-User-Agent",
												"value": "officia in sunt proident"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/permissions/:providerId/:userId/:permissionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												":providerId",
												":userId",
												":permissionId"
											],
											"variable": [
												{
													"key": "providerId"
												},
												{
													"key": "userId"
												},
												{
													"key": "permissionId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "officia in sunt proident",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "officia in sunt proident",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PROVIDER",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								},
								{
									"name": "Method Not Allowed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-IP-Address",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-User-Agent",
												"value": "officia in sunt proident"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/permissions/:providerId/:userId/:permissionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												":providerId",
												":userId",
												":permissionId"
											],
											"variable": [
												{
													"key": "providerId"
												},
												{
													"key": "userId"
												},
												{
													"key": "permissionId"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "officia in sunt proident",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "officia in sunt proident",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PROVIDER",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-IP-Address",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-User-Agent",
												"value": "officia in sunt proident"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/permissions/:providerId/:userId/:permissionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												":providerId",
												":userId",
												":permissionId"
											],
											"variable": [
												{
													"key": "providerId"
												},
												{
													"key": "userId"
												},
												{
													"key": "permissionId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "officia in sunt proident",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "officia in sunt proident",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PROVIDER",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								},
								{
									"name": "Not Implemented",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-IP-Address",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-User-Agent",
												"value": "officia in sunt proident"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/permissions/:providerId/:userId/:permissionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												":providerId",
												":userId",
												":permissionId"
											],
											"variable": [
												{
													"key": "providerId"
												},
												{
													"key": "userId"
												},
												{
													"key": "permissionId"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "officia in sunt proident",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "officia in sunt proident",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PROVIDER",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								}
							]
						},
						{
							"name": "Revoke a permission for a given provider, user ID and permission ID",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
										"key": "X-Correlation-ID",
										"value": "manual-{{$guid}}"
									},
									{
										"description": "(Required) Name and version of the of the Client software",
										"key": "User-Agent",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-IP-Address",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-User-Agent",
										"value": "officia in sunt proident"
									}
								],
								"url": {
									"raw": "{{api-gw-external-cf2aas-api-consent-flow-v2-base-url}}/permissions/:providerId/:userId/:permissionId",
									"host": [
										"{{api-gw-external-cf2aas-api-consent-flow-v2-base-url}}"
									],
									"path": [
										"permissions",
										":providerId",
										":userId",
										":permissionId"
									],
									"variable": [
										{
											"key": "providerId",
											"value": "{{provider-id}}",
											"description": "(Required) id of the provider"
										},
										{
											"key": "userId",
											"value": "{{cf2aas-user-id}}",
											"description": "(Required) user ID"
										},
										{
											"key": "permissionId",
											"value": "{{cf2aas-permission-id}}",
											"description": "(Required) permission ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Permission ID revoked successfully",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-IP-Address",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-User-Agent",
												"value": "officia in sunt proident"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/permissions/:providerId/:userId/:permissionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												":providerId",
												":userId",
												":permissionId"
											],
											"variable": [
												{
													"key": "providerId"
												},
												{
													"key": "userId"
												},
												{
													"key": "permissionId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "X-Correlation-ID",
											"value": "officia in sunt proident",
											"description": "Reflects the ID (set by the caller) from the request."
										},
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request - The format of the request was invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-IP-Address",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-User-Agent",
												"value": "officia in sunt proident"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/permissions/:providerId/:userId/:permissionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												":providerId",
												":userId",
												":permissionId"
											],
											"variable": [
												{
													"key": "providerId"
												},
												{
													"key": "userId"
												},
												{
													"key": "permissionId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "officia in sunt proident",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "officia in sunt proident",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PROVIDER",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								},
								{
									"name": "Unauthorized - Either no token or an invalid (e.g., token expired) token was received.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-IP-Address",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-User-Agent",
												"value": "officia in sunt proident"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/permissions/:providerId/:userId/:permissionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												":providerId",
												":userId",
												":permissionId"
											],
											"variable": [
												{
													"key": "providerId"
												},
												{
													"key": "userId"
												},
												{
													"key": "permissionId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "officia in sunt proident",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "officia in sunt proident",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PROVIDER",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								},
								{
									"name": "Forbidden - A valid OAuth Token was received, but access was denied. (Depending on the security requirements, providers can return 404 instead)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-IP-Address",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-User-Agent",
												"value": "officia in sunt proident"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/permissions/:providerId/:userId/:permissionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												":providerId",
												":userId",
												":permissionId"
											],
											"variable": [
												{
													"key": "providerId"
												},
												{
													"key": "userId"
												},
												{
													"key": "permissionId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "officia in sunt proident",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "officia in sunt proident",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PROVIDER",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								},
								{
									"name": "Not Found - Either the endpoint does not exist or a requested resource is not yet available (e.g., account statements)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-IP-Address",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-User-Agent",
												"value": "officia in sunt proident"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/permissions/:providerId/:userId/:permissionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												":providerId",
												":userId",
												":permissionId"
											],
											"variable": [
												{
													"key": "providerId"
												},
												{
													"key": "userId"
												},
												{
													"key": "permissionId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "officia in sunt proident",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "officia in sunt proident",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PROVIDER",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								},
								{
									"name": "Method Not Allowed",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-IP-Address",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-User-Agent",
												"value": "officia in sunt proident"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/permissions/:providerId/:userId/:permissionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												":providerId",
												":userId",
												":permissionId"
											],
											"variable": [
												{
													"key": "providerId"
												},
												{
													"key": "userId"
												},
												{
													"key": "permissionId"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "officia in sunt proident",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "officia in sunt proident",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PROVIDER",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-IP-Address",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-User-Agent",
												"value": "officia in sunt proident"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/permissions/:providerId/:userId/:permissionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												":providerId",
												":userId",
												":permissionId"
											],
											"variable": [
												{
													"key": "providerId"
												},
												{
													"key": "userId"
												},
												{
													"key": "permissionId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "officia in sunt proident",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "officia in sunt proident",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PROVIDER",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								},
								{
									"name": "Not Implemented",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
												"key": "X-Correlation-ID",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) Name and version of the of the Client software",
												"key": "User-Agent",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-IP-Address",
												"value": "officia in sunt proident"
											},
											{
												"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
												"key": "X-PSU-User-Agent",
												"value": "officia in sunt proident"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/permissions/:providerId/:userId/:permissionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												":providerId",
												":userId",
												":permissionId"
											],
											"variable": [
												{
													"key": "providerId"
												},
												{
													"key": "userId"
												},
												{
													"key": "permissionId"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Language",
											"value": "officia in sunt proident",
											"description": "always en"
										},
										{
											"key": "X-Correlation-ID",
											"value": "officia in sunt proident",
											"description": "Reflected client defined ID from request."
										},
										{
											"key": "X-CorAPI-Source",
											"value": "PROVIDER",
											"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
								}
							]
						}
					],
					"auth": {
						"type": "noauth"
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Retrieve a list of permissions of a given provider and user ID",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
								"key": "X-Correlation-ID",
								"value": "manual-{{$guid}}"
							},
							{
								"description": "(Required) Name and version of the of the Client software",
								"key": "User-Agent",
								"value": "officia in sunt proident"
							},
							{
								"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
								"key": "X-PSU-IP-Address",
								"value": "officia in sunt proident"
							},
							{
								"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
								"key": "X-PSU-User-Agent",
								"value": "officia in sunt proident"
							}
						],
						"url": {
							"raw": "{{api-gw-external-cf2aas-api-consent-flow-v2-base-url}}/permissions/:providerId/:userId",
							"host": [
								"{{api-gw-external-cf2aas-api-consent-flow-v2-base-url}}"
							],
							"path": [
								"permissions",
								":providerId",
								":userId"
							],
							"variable": [
								{
									"key": "providerId",
									"value": "{{provider-id}}",
									"description": "(Required) id of the provider"
								},
								{
									"key": "userId",
									"value": "{{cf2aas-user-id}}",
									"description": "(Required) user ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Retrieve a permission for a given provider and user ID",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
										"key": "X-Correlation-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) Name and version of the of the Client software",
										"key": "User-Agent",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-IP-Address",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-User-Agent",
										"value": "officia in sunt proident"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/permissions/:providerId/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permissions",
										":providerId",
										":userId"
									],
									"variable": [
										{
											"key": "providerId"
										},
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Correlation-ID",
									"value": "officia in sunt proident",
									"description": "Reflects the ID (set by the caller) from the request."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"providerId\": \"1234\",\n  \"permissionId\": \"c46d7cb8-500d-48ba-a085-671173a84cd3\",\n  \"status\": \"received\",\n  \"username\": \"username\",\n  \"externalReference\": \"'B'\"\n },\n {\n  \"providerId\": \"1234\",\n  \"permissionId\": \"c46d7cb8-500d-48ba-a085-671173a84cd3\",\n  \"status\": \"received\",\n  \"username\": \"username\",\n  \"externalReference\": \"'BEo?kH6IA8'e?sIVDZOE7i(bR?Ge.'\"\n }\n]"
						},
						{
							"name": "Bad Request - The format of the request was invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
										"key": "X-Correlation-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) Name and version of the of the Client software",
										"key": "User-Agent",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-IP-Address",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-User-Agent",
										"value": "officia in sunt proident"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/permissions/:providerId/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permissions",
										":providerId",
										":userId"
									],
									"variable": [
										{
											"key": "providerId"
										},
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Language",
									"value": "officia in sunt proident",
									"description": "always en"
								},
								{
									"key": "X-Correlation-ID",
									"value": "officia in sunt proident",
									"description": "Reflected client defined ID from request."
								},
								{
									"key": "X-CorAPI-Source",
									"value": "PROVIDER",
									"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
								},
								{
									"key": "Content-Type",
									"value": "application/problem+json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
						},
						{
							"name": "Unauthorized - Either no token or an invalid (e.g., token expired) token was received.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
										"key": "X-Correlation-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) Name and version of the of the Client software",
										"key": "User-Agent",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-IP-Address",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-User-Agent",
										"value": "officia in sunt proident"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/permissions/:providerId/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permissions",
										":providerId",
										":userId"
									],
									"variable": [
										{
											"key": "providerId"
										},
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Language",
									"value": "officia in sunt proident",
									"description": "always en"
								},
								{
									"key": "X-Correlation-ID",
									"value": "officia in sunt proident",
									"description": "Reflected client defined ID from request."
								},
								{
									"key": "X-CorAPI-Source",
									"value": "PROVIDER",
									"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
								},
								{
									"key": "Content-Type",
									"value": "application/problem+json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
						},
						{
							"name": "Forbidden - A valid OAuth Token was received, but access was denied. (Depending on the security requirements, providers can return 404 instead)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
										"key": "X-Correlation-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) Name and version of the of the Client software",
										"key": "User-Agent",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-IP-Address",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-User-Agent",
										"value": "officia in sunt proident"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/permissions/:providerId/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permissions",
										":providerId",
										":userId"
									],
									"variable": [
										{
											"key": "providerId"
										},
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Language",
									"value": "officia in sunt proident",
									"description": "always en"
								},
								{
									"key": "X-Correlation-ID",
									"value": "officia in sunt proident",
									"description": "Reflected client defined ID from request."
								},
								{
									"key": "X-CorAPI-Source",
									"value": "PROVIDER",
									"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
								},
								{
									"key": "Content-Type",
									"value": "application/problem+json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
						},
						{
							"name": "Not Found - Either the endpoint does not exist or a requested resource is not yet available (e.g., account statements)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
										"key": "X-Correlation-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) Name and version of the of the Client software",
										"key": "User-Agent",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-IP-Address",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-User-Agent",
										"value": "officia in sunt proident"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/permissions/:providerId/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permissions",
										":providerId",
										":userId"
									],
									"variable": [
										{
											"key": "providerId"
										},
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Language",
									"value": "officia in sunt proident",
									"description": "always en"
								},
								{
									"key": "X-Correlation-ID",
									"value": "officia in sunt proident",
									"description": "Reflected client defined ID from request."
								},
								{
									"key": "X-CorAPI-Source",
									"value": "PROVIDER",
									"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
								},
								{
									"key": "Content-Type",
									"value": "application/problem+json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
						},
						{
							"name": "Method Not Allowed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
										"key": "X-Correlation-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) Name and version of the of the Client software",
										"key": "User-Agent",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-IP-Address",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-User-Agent",
										"value": "officia in sunt proident"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/permissions/:providerId/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permissions",
										":providerId",
										":userId"
									],
									"variable": [
										{
											"key": "providerId"
										},
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Method Not Allowed",
							"code": 405,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Language",
									"value": "officia in sunt proident",
									"description": "always en"
								},
								{
									"key": "X-Correlation-ID",
									"value": "officia in sunt proident",
									"description": "Reflected client defined ID from request."
								},
								{
									"key": "X-CorAPI-Source",
									"value": "PROVIDER",
									"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
								},
								{
									"key": "Content-Type",
									"value": "application/problem+json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
										"key": "X-Correlation-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) Name and version of the of the Client software",
										"key": "User-Agent",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-IP-Address",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-User-Agent",
										"value": "officia in sunt proident"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/permissions/:providerId/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permissions",
										":providerId",
										":userId"
									],
									"variable": [
										{
											"key": "providerId"
										},
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Language",
									"value": "officia in sunt proident",
									"description": "always en"
								},
								{
									"key": "X-Correlation-ID",
									"value": "officia in sunt proident",
									"description": "Reflected client defined ID from request."
								},
								{
									"key": "X-CorAPI-Source",
									"value": "PROVIDER",
									"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
								},
								{
									"key": "Content-Type",
									"value": "application/problem+json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
						},
						{
							"name": "Not Implemented",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Unique ID (defined by the caller) which will be reflected back in the response.",
										"key": "X-Correlation-ID",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) Name and version of the of the Client software",
										"key": "User-Agent",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) IP address of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-IP-Address",
										"value": "officia in sunt proident"
									},
									{
										"description": "(Required) User agent of the user initiating the operation or AUTO for system triggered processes (SCOPE: SIX required)",
										"key": "X-PSU-User-Agent",
										"value": "officia in sunt proident"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/permissions/:providerId/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permissions",
										":providerId",
										":userId"
									],
									"variable": [
										{
											"key": "providerId"
										},
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Language",
									"value": "officia in sunt proident",
									"description": "always en"
								},
								{
									"key": "X-Correlation-ID",
									"value": "officia in sunt proident",
									"description": "Reflected client defined ID from request."
								},
								{
									"key": "X-CorAPI-Source",
									"value": "PROVIDER",
									"description": "Indicates whether the response was created by the bLink platform or by the provider. (SCOPE: SIX)\n"
								},
								{
									"key": "Content-Type",
									"value": "application/problem+json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"/problems/TECHNICAL_ERROR\",\n \"title\": \"This is the general problem description\",\n \"detail\": \"Detailed problem description with respect to the current request, e.g., invalid account number format\",\n \"instance\": \"path/to/corresponding/resource\"\n}"
						}
					]
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"if (pm.environment.get(\"uses-legacy-certificate\") === \"true\") {",
							"    pm.request.headers.add({",
							"        enabled: true,",
							"        key: \"X-Instance-ID\",",
							"        value: pm.environment.get(\"cf2aas-instance-id\")",
							"    })",
							"}"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "api-gw-external-cf2aas-api-consent-flow-v2-base-url",
			"value": "{{api-gw-external-cf2aas-api-base-url}}/consent-flow/v2"
		},
		{
			"key": "api-gw-external-cf2aas-api-platform-v2-base-url",
			"value": "{{api-gw-external-cf2aas-api-base-url}}/platform/v2"
		},
		{
			"key": "api-gw-external-cf2aas-api-ais-v3-base-url",
			"value": "{{api-gw-external-cf2aas-api-base-url}}/account-information-service/v3"
		},
		{
			"key": "api-gw-external-cf2aas-api-pss-v3-base-url",
			"value": "{{api-gw-external-cf2aas-api-base-url}}/payments-submission-service/v3"
		},
		{
			"key": "api-gw-external-cf2aas-api-custody-services-v1-base-url",
			"value": "{{api-gw-external-cf2aas-api-base-url}}/custody-services/v1"
		},
		{
			"key": "api-gw-external-cf2aas-api-customer-management-v1-base-url",
			"value": "{{api-gw-external-cf2aas-api-base-url}}/customer-management/v1"
		},
		{
			"key": "api-gw-external-cf2aas-api-order-placement-v2-base-url",
			"value": "{{api-gw-external-cf2aas-api-base-url}}/order-placement/v2"
		},
		{
			"key": "postman-environment-version",
			"value": "3.0.28"
		},
		{
			"key": "authorization-uri",
			"value": ""
		},
		{
			"key": "user-id",
			"value": ""
		},
		{
			"key": "wesLoginRedirectUrl",
			"value": ""
		},
		{
			"key": "wes-serviceprovider-oauth2-authorize",
			"value": ""
		},
		{
			"key": "serviceProviderAuthorizeUrl",
			"value": ""
		},
		{
			"key": "state",
			"value": ""
		},
		{
			"key": "redirectUrl",
			"value": ""
		},
		{
			"key": "code",
			"value": ""
		},
		{
			"key": "caasRedirectUrl",
			"value": ""
		},
		{
			"key": "originalAuthorizeUrl",
			"value": ""
		}
	]
}
