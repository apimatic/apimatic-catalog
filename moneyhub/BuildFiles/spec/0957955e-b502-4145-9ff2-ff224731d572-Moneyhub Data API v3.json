{"openapi":"3.0.0","info":{"description":"Documentation for the Moneyhub data API. <br/>Authentication is via bearer token. <br/>","title":"Moneyhub Data API (v3)","version":"3.0.0"},"security":[{"Bearer":[]}],"paths":{"/accounts":{"get":{"summary":"Retrieve all accounts for a user","description":"Requires **accounts:read** scope. Optional scope **accounts_details:read** is needed for some extra fields such as account number and sort code. Please note: field **additionalBalances** is currently in **beta**","parameters":[{"description":"The total number of records to retrieve","in":"query","name":"limit","schema":{"type":"integer","minimum":0,"maximum":1000}},{"description":"The offset at which to start retrieving records","in":"query","name":"offset","schema":{"type":"integer","minimum":0,"maximum":1000000000}},{"description":"Return transaction data for the account when available","in":"query","name":"showTransactionData","schema":{"type":"boolean","default":false}},{"description":"Return performance score for the account when available","in":"query","name":"showPerformanceScore","schema":{"type":"boolean","default":false}},{"description":"Filter accounts by their connectionId","in":"query","name":"connectionId","example":"1ffe704d39629a929c8e293880fb449a:c1ef4ce6-c1d6-4900-9288-228fb21f5dc4","schema":{"type":"string"}}],"responses":{"200":{"description":"Successful Accounts Response","content":{"application/json":{"schema":{"properties":{"data":{"items":{"$ref":"#/components/schemas/Account"},"type":"array","example":[{"id":"d372d09b-f50a-4114-9c83-687828fa8ac2","dateAdded":"2020-07-27T14:33:44+00:00","dateModified":"2020-07-27T14:33:44+00:00","accountName":"Joint Account","accountOpeningDate":"2014-08-10T00:00:00.000Z","type":"cash:current","providerName":"Lloyds","providerId":"DEMO","providerReference":"demo","connectionId":"1ffe704d39629a929c8e293880fb449a:c1ef4ce6-c1d6-4900-9288-228fb21f5dc4","accountHolderName":"Robert Cantu","balance":{"date":"2020-07-27","amount":{"value":802323,"currency":"GBP"}},"currency":"GBP","details":{"AER":0,"overdraftLimit":0,"sortCodeAccountNumber":"30949301273345"},"transactionData":{"count":218,"earliestDate":"2019-08-02","lastDate":"2020-07-27"},"additionalBalances":[{"date":"2020-07-27","amount":{"value":1000,"currency":"GBP"},"type":"InterimAvailable"}]},{"id":"3cc555e4-d954-4eb1-a1df-90df15b132a9","dateAdded":"2020-07-27T14:33:44+00:00","dateModified":"2020-07-27T14:33:44+00:00","accountName":"Current Account","type":"cash:current","providerName":"Lloyds","providerId":"DEMO","providerReference":"demo","connectionId":"1ffe704d39629a929c8e293880fb449a:c1ef4ce6-c1d6-4900-9288-228fb21f5dc4","accountHolderName":"Robert Cantu","balance":{"date":"2020-07-11","amount":{"value":216258,"currency":"GBP"}},"currency":"GBP","details":{"AER":0,"overdraftLimit":0,"sortCodeAccountNumber":"30949301273801"},"providerAccountIdentifications":[{"identification":"ACCOUNT12345678","type":"accountNumber"}],"transactionData":{"count":133,"earliestDate":"2019-08-03","lastDate":"2020-07-11"},"additionalBalances":[{"date":"2020-07-27","amount":{"value":1000,"currency":"GBP"},"type":"ClosingBooked"}]},{"id":"7abc948a-416d-44ab-8a23-69d3ea13bcf1","dateAdded":"2020-07-27T14:33:44+00:00","dateModified":"2020-07-27T14:33:44+00:00","accountName":"Credit Card","type":"card","providerName":"Virgin","providerId":"DEMO","providerReference":"demo","connectionId":"DEMO:888","balance":{"date":"2020-07-27","amount":{"value":-196700,"currency":"GBP"}},"currency":"GBP","details":{"creditLimit":250000,"APR":0,"pan":"5498572687746087"},"transactionData":{"count":163,"earliestDate":"2019-07-28","lastDate":"2020-07-27"},"additionalBalances":[]},{"id":"344f69f8-0172-4d68-ac38-ea11be1f7373","dateAdded":"2020-07-27T14:33:44+00:00","dateModified":"2020-07-27T14:33:44+00:00","accountName":"Starling Current Account","productName":"Personal Current Account","accountOpeningDate":"2013-09-13T00:00:00.000Z","type":"cash:current","providerName":"Starling","providerId":"DEMO","providerReference":"demo","connectionId":"DEMO:999","balance":{"date":"2020-07-12","amount":{"value":124885,"currency":"GBP"}},"currency":"GBP","details":{"AER":0,"overdraftLimit":0,"sortCodeAccountNumber":"30949301273045"},"transactionData":{"count":108,"earliestDate":"2019-07-28","lastDate":"2020-07-12"},"additionalBalances":[]},{"id":"478a84cc-296f-4388-af24-cf15f81a2fd4","dateAdded":"2020-07-27T14:33:44+00:00","dateModified":"2020-07-27T14:33:44+00:00","accountName":"Natwest savings a/c","accountOpeningDate":"2014-08-10T00:00:00.000Z","type":"savings","providerName":"Natwest","providerId":"DEMO","providerReference":"demo","connectionId":"DEMO:222","balance":{"date":"2020-07-05","amount":{"value":1500000,"currency":"GBP"}},"currency":"GBP","details":{"AER":0,"iban":"GB24BKEN10000031510604"},"transactionData":{"count":12,"earliestDate":"2019-08-05","lastDate":"2020-07-05"},"additionalBalances":[]},{"id":"2e30e166-70f8-4b46-b0e3-8afe4acda964","dateAdded":"2020-07-27T14:33:44+00:00","dateModified":"2020-07-27T14:33:44+00:00","accountName":"15 Hardys Rd","type":"properties:residential","balance":{"amount":{"value":27600000,"currency":"GBP"},"date":"2016-01-01"},"currency":"GBP","details":{},"additionalBalances":[]},{"id":"54841fea-7eb6-4523-9a20-2722d19d7766","dateAdded":"2020-07-27T14:33:44+00:00","dateModified":"2020-07-27T14:33:44+00:00","accountName":"HL Sipp","type":"pension","providerName":"Hargreaves Lansdown","balance":{"amount":{"value":3525134,"currency":"GBP"},"date":"2020-07-01"},"currency":"GBP","details":{},"performanceScore":{"months":[{"date":"2020-04","openingBalance":3465134,"nonContributionGrowth":24000,"aer":8.64},{"date":"2020-05","openingBalance":3489134,"nonContributionGrowth":12000,"aer":4.21},{"date":"2020-06","openingBalance":3501134,"nonContributionGrowth":24000,"aer":8.54}],"totals":{"openingBalance":{"amount":{"value":3325134,"currency":"GBP"},"date":"2019-08-01"},"currentBalance":{"amount":{"value":3525134,"currency":"GBP"},"date":"2020-07-01"},"contributions":0,"withdrawals":0,"nonContributionGrowth":200000,"growthRate":6.01,"annualisedGrowthRate":6.57}},"additionalBalances":[]},{"id":"fa447159-13d2-4089-bbbc-28be41d5febd","dateAdded":"2020-07-27T14:33:44+00:00","dateModified":"2020-07-27T14:33:44+00:00","accountName":"Wealthify ISA (Stocks and Shares)","type":"investment","providerName":"Wealthify","balance":{"amount":{"value":253214,"currency":"GBP"},"date":"2020-07-16"},"currency":"GBP","details":{},"performanceScore":{"months":[{"date":"2020-05","openingBalance":237023,"nonContributionGrowth":5140,"aer":29.36},{"date":"2020-06","openingBalance":242163,"nonContributionGrowth":11051,"aer":70.83}],"totals":{"openingBalance":{"amount":{"value":200000,"currency":"GBP"},"date":"2020-01-16"},"currentBalance":{"amount":{"value":253214,"currency":"GBP"},"date":"2020-07-16"},"contributions":0,"withdrawals":0,"nonContributionGrowth":53214,"growthRate":26.61,"annualisedGrowthRate":60.5}},"additionalBalances":[]},{"id":"fe9e0391-960e-4251-b3b6-f7f9d144db36","dateAdded":"2020-07-27T14:33:44+00:00","dateModified":"2020-07-27T14:33:44+00:00","accountName":"Nationwide Repayment Mortgage","type":"mortgage:repayment","providerName":"Nationwide","balance":{"amount":{"value":-16900000,"currency":"GBP"},"date":"2020-07-01"},"currency":"GBP","details":{"linkedProperty":"2e30e166-70f8-4b46-b0e3-8afe4acda964","monthlyRepayment":1000,"term":300,"APR":1.94,"interestType":"fixed","fixedDate":"2023-07-27"},"additionalBalances":[]},{"id":"1e30e166-70f8-4b46-b0e3-8afe4acda478","dateAdded":"2020-07-29T15:33:44+00:00","dateModified":"2020-07-29T15:33:44+00:00","accountName":"Santander Mortgage","type":"mortgage:interestOnly","providerName":"Santander","balance":{"amount":{"value":-1500000,"currency":"GBP"},"date":"2020-06-01"},"currency":"GBP","details":{"monthlyRepayment":1200,"term":270,"APR":3.94,"interestType":"fixed","fixedDate":"2025-06-25"},"additionalBalances":[]},{"id":"5cbf59cf-c112-4864-b4e3-11b3ca794000","accountName":"Audi Finance","type":"loan","providerName":"Audi Financial Services","balance":{"amount":{"value":-1095000,"currency":"GBP"},"date":"2020-07-05"},"currency":"GBP","details":{"monthlyRepayment":35000,"endDate":"2020-07-27","APR":4.1,"interestFreePeriod":24},"additionalBalances":[]},{"id":"8e5320c9-a285-47f6-bac0-e2f78f5db9cd","dateAdded":"2020-07-27T14:33:44+00:00","dateModified":"2020-07-27T14:33:44+00:00","accountName":"Work Pension","type":"pension","providerName":"Aviva","balance":{"amount":{"value":20524578,"currency":"GBP"},"date":"2020-06-28"},"currency":"GBP","details":{},"performanceScore":{"months":[{"date":"2020-04","openingBalance":20180078,"nonContributionGrowth":160000,"aer":9.94},{"date":"2020-05","openingBalance":20340078,"nonContributionGrowth":184500,"aer":11.44}],"totals":{"openingBalance":{"amount":{"value":18456778,"currency":"GBP"},"date":"2019-07-28"},"currentBalance":{"amount":{"value":20524578,"currency":"GBP"},"date":"2020-06-28"},"contributions":0,"withdrawals":0,"nonContributionGrowth":2067800,"growthRate":11.2,"annualisedGrowthRate":12.23}},"additionalBalances":[]}]},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["accounts"]},"post":{"summary":"Create a single account for a user","description":"Requires **accounts:read** and **accounts:write:all** scopes.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountPost"}}}},"responses":{"200":{"description":"Successful Account Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/Account"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"400":{"description":"Unsuccessful Response - Bad request - Missing query parameters - Missing body properties","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["accounts"]}},"/accounts/{accountId}":{"get":{"summary":"Retrieve a single account","description":"Requires **accounts:read** scope. Optional scope **accounts_details:read** is needed for some extra fields such as account number and sort code. Please note: field **additionalBalances** is currently in **beta**","parameters":[{"description":"The Account Id","in":"path","name":"accountId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Successful Account Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/Account"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["accounts"]},"patch":{"summary":"Update a single account","description":"Requires **accounts:read** and **accounts:write:all** scopes.","parameters":[{"description":"The Account Id","in":"path","name":"accountId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountPatch"}}}},"responses":{"200":{"description":"Successful Account Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/Account"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["accounts"]},"delete":{"summary":"Delete a single account","description":"This endpoint can only be used to delete accounts created using the POST /accounts endpoint. Accounts created when connecting to a financial institution can only be deleted by removing the connection they belong to. Requires **accounts:write:all** scope.","parameters":[{"description":"The Account Id","in":"path","name":"accountId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}}],"responses":{"204":{"description":"Successful Response"},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["accounts"]}},"/accounts/{accountId}/balances":{"get":{"summary":"Retrieve the historical balances for an account","description":"Requires **accounts:read** scope.","parameters":[{"description":"The Account Id","in":"path","name":"accountId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Successful Balances Response","content":{"application/json":{"schema":{"properties":{"data":{"items":{"$ref":"#/components/schemas/Balance"},"type":"array"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["accounts"]},"post":{"summary":"Add a new balance for an account","description":"Requires **accounts:read** and either of **accounts:write** or **accounts:write:all** scopes.","parameters":[{"description":"The Account Id","in":"path","name":"accountId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BalancePost"}}}},"responses":{"200":{"description":"Successful Balance Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/Balance"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"400":{"description":"Unsuccessful Response - Bad request - Missing query parameters - Missing body properties","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unsuccessful Balance Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["accounts"]}},"/accounts/{accountId}/holdings":{"get":{"summary":"Retrieve the holdings for an account","description":"Requires **accounts:read** scope.","parameters":[{"description":"The Account Id","in":"path","name":"accountId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Successful Holdings Response","content":{"application/json":{"schema":{"properties":{"data":{"items":{"$ref":"#/components/schemas/HoldingsValuation"},"type":"array"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["holdings"]}},"/accounts/{accountId}/holdings/{holdingId}":{"get":{"summary":"Retrieve the holding for an account with matched ISIN codes","description":"Requires **accounts:read** scope.","parameters":[{"description":"The Account Id","in":"path","name":"accountId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}},{"description":"The Holding Id","in":"path","name":"holdingId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d58","schema":{"type":"string"}}],"responses":{"200":{"description":"Successful Holding Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/HoldingWithMatchesAndHistory"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["holdings"]}},"/accounts/{accountId}/holdings-with-matches":{"get":{"summary":"Retrieve the holdings for an account with matched ISIN codes","description":"Requires **accounts:read** scope.","parameters":[{"description":"The Account Id","in":"path","name":"accountId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Successful Holdings Response","content":{"application/json":{"schema":{"properties":{"data":{"items":{"$ref":"#/components/schemas/HoldingWithMatches"},"type":"array"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["holdings"]}},"/accounts/{accountId}/notification-thresholds":{"get":{"summary":"Retrieve the notification thresholds for an account","description":"Requires **accounts:read** scope.","parameters":[{"description":"The Account Id","in":"path","name":"accountId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Successful Notification Thresholds Response","content":{"application/json":{"schema":{"properties":{"data":{"items":{"$ref":"#/components/schemas/NotificationThreshold"},"type":"array"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["notification thresholds"]},"post":{"summary":"Add a notification threshold to an account","description":"Requires **accounts:read** and either of **accounts:write** or **accounts:write:all** scopes.","parameters":[{"description":"The Account Id","in":"path","name":"accountId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}}],"requestBody":{"$ref":"#/components/requestBodies/NotificationThresholdPost"},"responses":{"200":{"description":"Successful Notification Threshold Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/NotificationThreshold"},"meta":{"type":"object"}},"type":"object"}}}},"400":{"description":"Unsuccessful Response - Bad request - Missing query parameters - Missing body properties","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unsuccessful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["notification thresholds"]}},"/accounts/{accountId}/notification-thresholds/{thresholdId}":{"patch":{"summary":"Update a single notification threshold","description":"Requires **accounts:read** and either of **accounts:write** or **accounts:write:all** scopes.","parameters":[{"description":"The Account Id","in":"path","name":"accountId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}},{"description":"The Threshold Id","in":"path","name":"thresholdId","required":true,"example":"199cae84-6876-4dc6-b905-9de7593be6d0","schema":{"type":"string","format":"uuid"}}],"requestBody":{"$ref":"#/components/requestBodies/NotificationThresholdPost"},"responses":{"200":{"description":"Successful Notification Threshold Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/NotificationThreshold"},"meta":{"type":"object"}},"type":"object"}}}},"400":{"description":"Unsuccessful Response - Bad request - Missing query parameters - Missing body properties","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unsuccessful Notification Threshold Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["notification thresholds"]},"delete":{"summary":"Delete a single notification threshold","description":"Requires **accounts:read** and either of **accounts:write** or **accounts:write:all** scopes.","parameters":[{"description":"The Account Id","in":"path","name":"accountId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}},{"description":"The Threshold Id","in":"path","name":"thresholdId","required":true,"example":"199cae84-6876-4dc6-b905-9de7593be6d0","schema":{"type":"string","format":"uuid"}}],"responses":{"204":{"description":"Successful Response"},"400":{"description":"Unsuccessful Response - Bad request - Missing query parameters - Missing body properties","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unsuccessful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["notification thresholds"]}},"/accounts/{accountId}/standing-orders":{"get":{"summary":"Retrieve the standing orders for an account","description":"Requires **accounts:read** and either of **standing_orders:read** or **standing_orders_detail:read** scopes.","parameters":[{"description":"The Account Id","in":"path","name":"accountId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Successful Standing Orders Response","content":{"application/json":{"schema":{"properties":{"data":{"items":{"$ref":"#/components/schemas/StandingOrder"},"type":"array"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["standing orders"]}},"/accounts/{accountId}/statements":{"get":{"summary":"Retrieve the statements for an account","description":"Requires **accounts:read** and either **statements_basic:read** or **statements_detail:read** scopes.","parameters":[{"name":"accountId","in":"path","description":"The Account Id","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string"}}],"responses":{"200":{"description":"Successful Statements Response","content":{"application/json":{"schema":{"properties":{"data":{"items":{"$ref":"#/components/schemas/Statement"},"type":"array"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unauthorized - Missing or invalid access token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Not Found - Account not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["statements"]}},"/accounts/syncs":{"get":{"summary":"Retrieve sync information for all of a user's accounts","description":"Requires **accounts:read** scope.","responses":{"200":{"description":"Successful Accounts Syncs Response","content":{"application/json":{"schema":{"properties":{"data":{"items":{"$ref":"#/components/schemas/AccountSync"},"type":"array","example":[{"accountId":"d372d09b-f50a-4114-9c83-687828fa8ac2","lastSuccessfulSync":"2020-07-27T14:33:44+00:00"},{"accountId":"3cc555e4-d954-4eb1-a1df-90df15b132a9","lastSuccessfulSync":null}]},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["accounts"]}},"/affordability":{"get":{"summary":"List of metadata for all affordability calculations for a user","description":"Requires **affordability:read** scope.","parameters":[{"description":"The total number of records to retrieve","in":"query","name":"limit","schema":{"type":"integer","minimum":0,"maximum":1000}},{"description":"The offset at which to start retrieving records","in":"query","name":"offset","schema":{"type":"integer","minimum":0,"maximum":1000000000}}],"responses":{"200":{"description":"Successful Affordability Response","content":{"application/json":{"schema":{"properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/AffordabilityMetadata"}},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["affordability"]},"post":{"summary":"Request affordability calculation for a user","description":"Requires **affordability:write** and **affordability:read** scopes.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AffordabilityPost"}}}},"responses":{"200":{"description":"Successful Affordability Response","content":{"application/json":{"schema":{"properties":{"data":{"additionalProperties":false,"properties":{"id":{"description":"The report id","type":"string"},"status":{"description":"Whether the report is 'complete', 'pending' or 'failed'. This will always be 'pending' when using this endpoint.","type":"string","enum":["pending"]}},"required":["id","status"],"type":"object"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["affordability"]}},"/affordability/confidence":{"get":{"summary":"Get the affordability confidence calculation for a user, given the account and transaction data currently available","description":"Requires **affordability:restricted:read** scope.","responses":{"200":{"description":"Successful Affordability Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/AffordabilityConfidence"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["affordability"]}},"/affordability/{reportId}":{"get":{"summary":"Get an existing affordability calculation for a user","description":"Requires **affordability:read** scope.","parameters":[{"description":"The Report Id","in":"path","name":"reportId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Successful Affordability Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/Affordability"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["affordability"]}},"/beneficiaries":{"get":{"summary":"Retrieve all beneficiaries for a user","description":"Requires **beneficiaries:read** scope. Optional scope **beneficiaries_detail:read** is needed for some extra fields such as postal address.","parameters":[{"description":"The total number of records to retrieve","in":"query","name":"limit","schema":{"type":"integer","minimum":0,"maximum":1000}},{"description":"The offset at which to start retrieving records","in":"query","name":"offset","schema":{"type":"integer","minimum":0,"maximum":1000000000}},{"description":"Whether the beneficiaries returned include duplicates with differing references","in":"query","name":"isUnique","schema":{"type":"boolean"}}],"responses":{"200":{"description":"Successful Beneficiaries Response","content":{"application/json":{"schema":{"properties":{"data":{"items":{"$ref":"#/components/schemas/Beneficiary"},"type":"array","example":[{"id":"d372d09b-f50a-4114-9c83-687828fa8ac2","name":"Bob","reference":"Payment","accountNumber":"12345678","sortCode":"123456","providerAccountId":"provider-account-id1","providerBeneficiaryId":"provider-beneficiary-id1","connectionId":"1ffe704d39629a929c8e293880fb449a:c1ef4ce6-c1d6-4900-9288-228fb21f5dc4","accountId":"fc9bd177-d01e-449c-9f29-d3656d2edc2e"},{"id":"d372d09b-f50a-4614-9c83-687828fa8ac2","name":"Alice","reference":"Payment","accountNumber":"87654321","sortCode":"654321","providerAccountId":"provider-account-id1","providerBeneficiaryId":"provider-beneficiary-id2","connectionId":"1ffe704d39629a929c8e293880fb449a:c1ef4ce6-c1d6-4900-9288-228fb21f5dc4","accountId":"fc9bd177-d01e-449c-9f29-d3656d2edc2e"}]},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["beneficiaries"]}},"/beneficiaries/{beneficiaryId}":{"get":{"summary":"Retrieve a single beneficiary","description":"Requires **beneficiaries:read** scope. Optional scope **beneficiaries_detail:read** is needed for some extra fields such as postal address.","parameters":[{"description":"The Beneficiary Id","in":"path","name":"beneficiaryId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707557","schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Successful Beneficiary Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/Beneficiary"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["beneficiaries"]}},"/global-counterparties":{"get":{"summary":"Retrieve global counterparties","description":"Retrieves list of global counterparties.","parameters":[{"description":"The total number of records to retrieve","in":"query","name":"limit","schema":{"type":"integer","minimum":0,"maximum":1000}},{"description":"The offset at which to start retrieving records","in":"query","name":"offset","schema":{"type":"integer","minimum":0,"maximum":1000000000}}],"responses":{"200":{"description":"Successful Counterparties Response","content":{"application/json":{"schema":{"properties":{"data":{"items":{"$ref":"#/components/schemas/GlobalCounterpartyV3"},"type":"array"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}}},"tags":["counterparties"]}},"/transactions":{"get":{"summary":"Retrieve all transactions for a user","description":"Requires **transactions:read:all** scope. Transactions usually start around the account opening date however in most cases we only retrive the last 12 months before the connection was created. The Opening Date is available at the /accounts endpoint.","parameters":[{"description":"Filter on the transaction's Ids (maximum allowed 50)","in":"query","name":"ids","style":"form","explode":false,"schema":{"type":"array","items":{"type":"string","format":"uuid"},"maxItems":50}},{"description":"The total number of records to retrieve","in":"query","name":"limit","schema":{"type":"integer","minimum":0,"maximum":1000}},{"description":"The offset at which to start retrieving records","in":"query","name":"offset","schema":{"type":"integer","minimum":0,"maximum":1000000000}},{"description":"The earliest date to receive transactions from (inclusive)","in":"query","name":"startDate","example":"2018-08-15","schema":{"type":"string","format":"date"}},{"description":"The latest date to receive transactions from (inclusive)","in":"query","name":"endDate","example":"2018-08-25","schema":{"type":"string","format":"date"}},{"description":"The earliest date the transactions were modified (inclusive)","in":"query","name":"startDateModified","schema":{"type":"string","format":"date"}},{"description":"The latest date the transactions were modified (inclusive)","in":"query","name":"endDateModified","schema":{"type":"string","format":"date"}},{"description":"The text to filter transactions descriptions/notes by","in":"query","name":"text","schema":{"type":"string"}},{"description":"The category id to filter transactions by","in":"query","name":"categoryId","example":"std:39577c49-350f-45a4-8ec3-48ce205585fb","schema":{"type":"string"}},{"description":"The account id to filter transactions by","in":"query","name":"accountId","example":"39577c49-350f-45a4-8ec3-321321213213","schema":{"type":"string"}},{"description":"The account ids to filter transactions by","in":"query","name":"accountIds","style":"form","explode":false,"schema":{"type":"array","items":{"type":"string"}}},{"description":"The project id to filter transactions by","in":"query","name":"projectId","example":"39577c49-350f-45a4-8ec3-321321213213","schema":{"type":"string"}},{"description":"The project ids to filter transactions by","in":"query","name":"projectIds","style":"form","explode":false,"schema":{"type":"array","items":{"type":"string"}}},{"description":"Filter transactions depending on whether they are credit or debit transactions","in":"query","name":"creditDebitIndicator","schema":{"type":"string","pattern":"^(credit|debit)$"}},{"description":"Filter on whether transaction has an attached project","in":"query","name":"hasProject","schema":{"type":"boolean"}},{"description":"Ensures ONLY the count of transactions is returned in the meta object","in":"query","name":"onlyCount","schema":{"type":"boolean","default":false}},{"description":"Filter on the beginning of words of a transaction's clean description or beginning of transaction amount","in":"query","name":"contains","schema":{"type":"string"}},{"description":"A property to check exists within a transaction","in":"query","name":"hasEnhancedCategory","schema":{"type":"string"}},{"description":"Filter on the transaction's counterparty Id","in":"query","name":"counterpartyIds","style":"form","explode":false,"schema":{"type":"array","items":{"type":"string"}}},{"description":"An enhanced category to filter transactions by in the form of ${categoryField}:${categoryValue}","in":"query","name":"enhancedCategories","schema":{"type":"string"}}],"responses":{"200":{"description":"Successful Transactions Response","content":{"application/json":{"schema":{"properties":{"data":{"items":{"$ref":"#/components/schemas/Transaction"},"type":"array"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"400":{"description":"Unsuccessful Response - Bad request - Missing query parameters - Missing body properties","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["transactions"]},"post":{"summary":"Create a single transaction for a user","description":"Requires **transactions:read:all** and **transactions:write:all** scopes.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionPost"}}}},"responses":{"200":{"description":"Successful Transaction Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/Transaction"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"400":{"description":"Unsuccessful Response - Bad request - Missing query parameters - Missing body properties","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["transactions"]}},"/transactions/{transactionId}":{"get":{"summary":"Retrieve a single transaction","description":"Requires **transactions:read:all** scope.","parameters":[{"description":"The transaction id","in":"path","name":"transactionId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Successful Transaction Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/Transaction"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["transactions"]},"patch":{"summary":"Update a single transaction","description":"Requires **transactions:read:all** and either of **transactions:write** or **transactions:write:all** scopes.","parameters":[{"description":"The transaction id","in":"path","name":"transactionId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionPatch"}}}},"responses":{"200":{"description":"Successful Transaction Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/Transaction"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["transactions"]},"delete":{"summary":"Delete a single transaction","description":"Requires **transactions:write:all** scope.","parameters":[{"description":"The transaction id","in":"path","name":"transactionId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}}],"responses":{"204":{"description":"Successful Transaction Response"},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["transactions"]}},"/transactions-collection":{"post":{"summary":"Create multiple transactions for a user","description":"Requires **transactions:read:all** and **transactions:write:all** scopes. A maximum of 50 transactions is imposed.","parameters":[{"description":"Enable categorisation of transactions","in":"query","name":"categorise","schema":{"type":"boolean"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionCollectionPost"}}}},"responses":{"200":{"description":"Successful Transaction Response","content":{"application/json":{"schema":{"properties":{"data":{"items":{"additionalProperties":false,"properties":{"id":{"description":"The unique id of the transaction","example":"c390a94f-3824-4cdf-8d02-b0c5304d9f66","format":"uuid","type":"string"}},"type":"object","required":["id"]},"type":"array","minimum":1,"maximum":50},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"400":{"description":"Unsuccessful Response - Bad request - Missing query parameters - Missing body properties","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["transactions"]}},"/transactions/{transactionId}/files":{"get":{"summary":"Retrieve a transactions attachments","description":"Requires **transactions:read:all** scope.","parameters":[{"description":"The transaction id","in":"path","name":"transactionId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Successful Transaction File Response","content":{"application/json":{"schema":{"properties":{"data":{"items":{"$ref":"#/components/schemas/TransactionFile"},"type":"array"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["transactions"]},"post":{"summary":"Add an attachment to a transaction","description":"Requires **transactions:read:all** and either of **transactions:write** or **transactions:write:all** scopes.","parameters":[{"description":"The transaction id","in":"path","name":"transactionId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}}],"requestBody":{"content":{"multipart/form-data":{"schema":{"type":"object","properties":{"file":{"description":"File to upload, limit of 10MB and must be an image or PDF.","type":"string","format":"binary"}},"required":["file"]}}},"required":true},"responses":{"200":{"description":"Successful Transaction Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/TransactionFile"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["transactions"]}},"/transactions/{transactionId}/files/{fileId}":{"get":{"summary":"Retrieve a transactions attachment","description":"Requires **transactions:read:all** scope.","parameters":[{"description":"The transaction id","in":"path","name":"transactionId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}},{"description":"The file id","in":"path","name":"fileId","required":true,"example":"0b4e6488-6de0-420a-8f56-fee665707d57","schema":{"type":"string"}}],"responses":{"200":{"description":"Successful Transaction File Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/TransactionFile"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["transactions"]},"delete":{"summary":"Delete a single attachment on a transaction","description":"Requires **transactions:read:all** and either of **transactions:write** or **transactions:write:all** scopes.","parameters":[{"description":"The transaction id","in":"path","name":"transactionId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}},{"description":"The file id","in":"path","name":"fileId","required":true,"example":"0b4e64886de0420a8f56fee665707d57","schema":{"type":"string"}}],"responses":{"204":{"description":"Successful Transaction Response"},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["transactions"]}},"/transactions/{transactionId}/splits":{"get":{"summary":"Retrieve a transactions splits","description":"Requires **transactions:read:all** scope.","parameters":[{"description":"The transaction id","in":"path","name":"transactionId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Successful Transaction Splits Response","content":{"application/json":{"schema":{"properties":{"data":{"items":{"$ref":"#/components/schemas/TransactionSplit"},"type":"array"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["transactions"]},"post":{"summary":"Split a transaction","description":"Requires **transactions:write:all** scope.","parameters":[{"description":"The transaction id","in":"path","name":"transactionId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TransactionSplitPost"},"example":[{"categoryId":"std:5a7ff1f3-cd2c-4676-a368-caf09f2ca35a","description":"Split 1","amount":200},{"categoryId":"std:eac238ec-3899-49ff-8cce-e3b9f4b1aede","description":"Split 2","amount":400}]}}}},"responses":{"201":{"description":"Successful Transaction Splits Response","content":{"application/json":{"schema":{"properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/TransactionSplit"}},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["transactions"]},"delete":{"summary":"Merge split transactions","description":"Requires **transactions:write:all** scope.","parameters":[{"description":"The transaction id","in":"path","name":"transactionId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}}],"responses":{"204":{"description":"Successful Transaction Splits Response"},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["transactions"]}},"/transactions/{transactionId}/splits/{splitId}":{"patch":{"summary":"Patch a transaction split","description":"Requires **transactions:write:all** scope.","parameters":[{"description":"The transaction id","in":"path","name":"transactionId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}},{"description":"The split id","in":"path","name":"splitId","required":true,"example":"0b4e6488-6de0-670c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionSplitPatch"}}}},"responses":{"200":{"description":"Successful Transaction Splits Response","content":{"application/json":{"schema":{"properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/TransactionSplit"}},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["transactions"]}},"/categories":{"get":{"summary":"Retrieve all categories for a user","description":"Requires **categories:read** scope.","parameters":[{"description":"The total number of records to retrieve","in":"query","name":"limit","schema":{"type":"integer","minimum":0,"maximum":1000}},{"description":"The offset at which to start retrieving records","in":"query","name":"offset","schema":{"type":"integer","minimum":0,"maximum":1000000000}},{"description":"The types of categories to be returned","in":"query","name":"type","example":"personal","schema":{"type":"string","enum":["personal","business","all"],"default":"personal"}}],"responses":{"200":{"description":"Successful Categories Response","content":{"application/json":{"schema":{"properties":{"data":{"items":{"$ref":"#/components/schemas/Category"},"type":"array"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["categories"]},"post":{"summary":"Add a new custom category for a user","description":"Requires **categories:write** scope.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CategoryPost"}}}},"responses":{"200":{"description":"Successful Category Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/Category"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"400":{"description":"Unsuccessful Response - Bad request - Missing query parameters - Missing body properties","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["categories"]}},"/categories/{categoryId}":{"get":{"summary":"Retrieve a single category","description":"Requires **categories:read** scope.","parameters":[{"description":"The Category Id","in":"path","name":"categoryId","required":true,"example":"std:39577c49-350f-45a4-8ec3-48ce205585fb","schema":{"type":"string","pattern":"^(std|cus):(\\w|-)+$"}},{"description":"The types of categories to be returned","in":"query","name":"type","example":"personal","schema":{"type":"string","enum":["personal","business","all"],"default":"personal"}}],"responses":{"200":{"description":"Successful Category Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/Category"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["categories"]}},"/category-groups":{"get":{"summary":"Retrieve all category groups for a user","description":"Requires **categories:read** scope.","parameters":[{"description":"The types of categories to be returned","in":"query","name":"type","example":"personal","schema":{"type":"string","enum":["personal","business"],"default":"personal"}}],"responses":{"200":{"description":"Successful Category Groups Response","content":{"application/json":{"schema":{"properties":{"data":{"items":{"$ref":"#/components/schemas/CategoryGroup"},"type":"array"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["categories"]}},"/regular-transactions":{"get":{"summary":"Retrieve regular transactions","description":"Requires **regular_transactions:read**, **accounts:read** and **transactions:read:all** scopes.","parameters":[{"description":"The Account Id","in":"query","name":"accountId","example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Successful Regular Transactions Response","content":{"application/json":{"schema":{"properties":{"data":{"items":{"$ref":"#/components/schemas/RegularTransactions"},"type":"array"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["regular transactions"]}},"/regular-transactions/{accountId}/detect":{"post":{"summary":"Detect regular transactions","description":"Requires **regular_transactions:write**, **regular_transactions:read**, **accounts:read** and **transactions:read:all** scopes.","parameters":[{"description":"The Account Id","in":"path","name":"accountId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Successful Regular Transactions Response","content":{"application/json":{"schema":{"properties":{"data":{"items":{"$ref":"#/components/schemas/RegularTransactions"},"type":"array"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["regular transactions"]}},"/rental-records":{"get":{"summary":"Retrieve rental recognition record","description":"Requires **rental_records:read** scope. Please note that a user will only have one rental recognition record. The rental record returned will be for the authenticated user.","responses":{"200":{"description":"Successful Rental Record Response","content":{"application/json":{"schema":{"properties":{"data":{"items":{"$ref":"#/components/schemas/RentalRecords"},"type":"array","example":[{"id":"bf8dcceb-6550-48cc-8ba8-2779c29cdfa9","userId":"61a0b1f535c30072d101b05f","title":"Title","firstName":"firstName","lastName":"lastName","birthdate":"2000-11-19","addressLine1":"First address line","addressLine2":"Second address line","addressLine3":"Third address line","addressLine4":"Fourth address line","postalCode":"CA12345","tenancyStartDate":"2020-11-19","lastSubmittedDate":"2021-07-10","rentalAmount":{"value":10000,"currency":"GBP"},"rentalFrequency":"monthly","seriesId":"9f0cb6a3-7fc6-54de-a855-aca4f821c100","consentApprovedAt":"2020-11-20T11:39:44Z","createdAt":"2021-11-26T10:13:48.529Z","modifiedAt":"2021-11-26T10:13:48.529Z"}]},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["rental records"]},"post":{"summary":"Create a rental recognition record for user","description":"Requires **rental_records:write** scope. Please note that a user will only have one rental recognition record. The rental record created will be for the authenticated user.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RentalRecordsPost"}}}},"responses":{"200":{"description":"Successful Rental Record Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/RentalRecords"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["rental records"]}},"/rental-records/{rentalId}":{"delete":{"summary":"Delete a rental record","description":"Requires **rental_records:write** scope.","parameters":[{"description":"The rental record ID","in":"path","name":"rentalId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}}],"responses":{"204":{"description":"Successful Response"},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not Found","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["rental records"]}},"/spending-analysis":{"post":{"summary":"Retrieve spending analysis by categories, projects and accounts","description":"Defaults to all categories and accounts if none specified.\n<br />The categories field in the response has a breakdown of the total by categories for the given periods. You can expect to also receive the breakdown for income and transfer categories.\n<br />The 'total' field in the response calculates the total outgoing expenditure for the given periods. This calculation do not include income and transfers.\n<br /> Categories under the transfer group are the only ones that can appear twice showing income and expenditure separately\n<br />Requires **spending_analysis:read** scope.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SpendingAnalysisPost"}}}},"responses":{"200":{"description":"Successful Spending Analysis Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/SpendingAnalysis"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"400":{"description":"Unsuccessful Response - Bad request - Missing body properties","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["spending analysis"]}},"/spending-goals":{"get":{"summary":"Retrieve all spending goals for a user","description":"Requires **spending_goals:read** scope.","parameters":[{"description":"The total number of records to retrieve","in":"query","name":"limit","schema":{"type":"integer","minimum":0,"maximum":1000}},{"description":"The offset at which to start retrieving records","in":"query","name":"offset","schema":{"type":"integer","minimum":0,"maximum":1000000000}}],"responses":{"200":{"description":"Successful Spending Goals Response","content":{"application/json":{"schema":{"properties":{"data":{"items":{"$ref":"#/components/schemas/SpendingGoal"},"type":"array"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}}},"tags":["spending goals"]},"post":{"summary":"Create a single spending goal for a user","description":"Requires **spending_goals:read** and **spending_goals:write:all** scopes.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SpendingGoalPost"}}}},"responses":{"200":{"description":"Successful Spending Goal Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/SpendingGoal"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"400":{"description":"Unsuccessful Response - Bad request - Missing query parameters - Missing body properties","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["spending goals"]}},"/spending-goals/{goalId}":{"get":{"summary":"Retrieve a single spending goal","description":"Requires **spending_goals:read** scope.","parameters":[{"description":"The Goal Id","in":"path","name":"goalId","required":true,"example":"39577c49-350f-45a4-8ec3-48ce205585fb","schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Successful Spending Goal Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/SpendingGoal"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["spending goals"]},"patch":{"summary":"Update a single spending goal","description":"Requires **spending_goals:read spending_goals:write** scope.","parameters":[{"description":"The Goal Id","in":"path","name":"goalId","required":true,"example":"39577c49-350f-45a4-8ec3-48ce205585fb","schema":{"type":"string","format":"uuid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SpendingGoalPatch"}}}},"responses":{"200":{"description":"Successful Spending Goal Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/SpendingGoal"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["spending goals"]},"delete":{"summary":"Delete a single spending goal","description":"Requires **spending_goals:write:all** scope.","parameters":[{"description":"The Goal Id","in":"path","name":"goalId","required":true,"example":"39577c49-350f-45a4-8ec3-48ce205585fb","schema":{"type":"string","format":"uuid"}}],"responses":{"204":{"description":"Successful Spending Goal Response"},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["spending goals"]}},"/savings-goals":{"get":{"summary":"Retrieve all saving goals for a user","description":"Requires **savings_goals:read** scope.","parameters":[{"description":"The total number of records to retrieve","in":"query","name":"limit","schema":{"type":"integer","minimum":0,"maximum":1000}},{"description":"The offset at which to start retrieving records","in":"query","name":"offset","schema":{"type":"integer","minimum":0,"maximum":1000000000}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"properties":{"data":{"items":{"$ref":"#/components/schemas/SavingsGoals"},"type":"array"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["savings goals"]},"post":{"summary":"Create a single savings goal for a user","description":"Requires **savings_goals:read** and **savings_goals:write:all** scopes.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SavingsGoalsPost"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/SavingsGoals"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"400":{"description":"Unsuccessful Response - Bad request - Missing query parameters - Missing body properties","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["savings goals"]}},"/savings-goals/{goalId}":{"get":{"summary":"Retrieve a single savings goal","description":"Requires **savings_goals:read** scope.","parameters":[{"description":"The Goal Id","in":"path","name":"goalId","required":true,"example":"39577c49-350f-45a4-8ec3-48ce205585fb","schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Successful Spending Goal Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/SavingsGoals"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["savings goals"]},"patch":{"summary":"Update a single savings goal","description":"Requires **savings_goals:read** and either **savings_goals:write** or **savings_goals:write:all** scope.","parameters":[{"description":"The Goal Id","in":"path","name":"goalId","required":true,"example":"39577c49-350f-45a4-8ec3-48ce205585fb","schema":{"type":"string","format":"uuid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SavingsGoalsPatch"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/SavingsGoals"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["savings goals"]},"delete":{"summary":"Delete a single savings goal","description":"Requires **savings_goals:write:all** scope.","parameters":[{"description":"The Goal Id","in":"path","name":"goalId","required":true,"example":"39577c49-350f-45a4-8ec3-48ce205585fb","schema":{"type":"string","format":"uuid"}}],"responses":{"204":{"description":"Successful Response"},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["savings goals"]}},"/sync/{connectionId}":{"post":{"summary":"Sync an existing connection","description":"Requires **accounts:read** and either **accounts:write** or **accounts:write:all** scopes.","parameters":[{"description":"The connection id","in":"path","name":"connectionId","required":true,"example":"b74f1a79f0be8bdb857d82d0f041d7d2:a1d4e70e-bee9-4a91-84a6-23e2826023e5","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SyncPost"}}}},"responses":{"200":{"description":"Successful Sync Response","content":{"application/json":{"schema":{"properties":{"data":{"additionalProperties":false,"properties":{"syncId":{"description":"The Id the sync, which can be used to retrieve the sync status","format":"uuid","type":"string","example":"9f3678b2-9fd1-47dd-8b69-4eab49bd2d66"},"status":{"description":"Status of the connection","enum":["ok","error"],"type":"string","example":"ok"}},"example":{"syncId":"9f3678b2-9fd1-47dd-8b69-4eab49bd2d66","status":"ok"},"type":"object","required":["syncId","status"]},"meta":{"type":"object"}},"type":"object"}}}},"400":{"description":"Unsuccessful Response - Bad request - Missing query parameters - Missing body properties","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalError"}}}}},"tags":["sync"]}},"/projects":{"get":{"summary":"Retrieve all projects for a user","description":"Requires **projects:read** scope.","parameters":[{"description":"The total number of records to retrieve","in":"query","name":"limit","schema":{"type":"integer","minimum":0,"maximum":1000}},{"description":"The offset at which to start retrieving records","in":"query","name":"offset","schema":{"type":"integer","minimum":0,"maximum":1000000000}}],"responses":{"200":{"description":"Successful Projects Response","content":{"application/json":{"schema":{"properties":{"data":{"items":{"$ref":"#/components/schemas/Project"},"type":"array"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["projects"]},"post":{"summary":"Create a single project for a user","description":"Requires **projects:write** scopes.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProjectPost"}}}},"responses":{"200":{"description":"Successful Project Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/Project"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"400":{"description":"Unsuccessful Response - Bad request - Missing query parameters - Missing body properties","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["projects"]}},"/projects/{projectId}":{"get":{"summary":"Retrieve a single project","description":"Requires **projects:read** scope.","parameters":[{"description":"The Project Id","in":"path","name":"projectId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Successful Project Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/Project"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["projects"]},"patch":{"summary":"Update a single project","description":"Requires **projects:write** scopes.","parameters":[{"description":"The Project Id","in":"path","name":"projectId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProjectPatch"}}}},"responses":{"200":{"description":"Successful Project Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/Project"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["projects"]},"delete":{"summary":"Delete a single project","description":"This endpoint can only be used to delete projects created using the POST /projects endpoint. Projects created when connecting to a financial institution can only be deleted by removing the connection they belong to. Requires **projects:delete** scope.","parameters":[{"description":"The Project Id","in":"path","name":"projectId","required":true,"example":"0b4e6488-6de0-420c-8f56-fee665707d57","schema":{"type":"string","format":"uuid"}}],"responses":{"204":{"description":"Successful Response"},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Unsuccessful Response - Resource Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["projects"]}},"/tax":{"get":{"summary":"Retrieve transactions to help answer SA105 - the Self Assessment questions for properties for HMRC","description":"Requires **tax:read** scope.","parameters":[{"description":"The date to get transactions from","in":"query","name":"startDate","required":true,"example":"2018-04-06","schema":{"type":"string","format":"date"}},{"description":"The date to get transactions to","in":"query","name":"endDate","required":true,"example":"2019-04-05","schema":{"type":"string","format":"date"}},{"description":"The project ID the transactions belong to","in":"query","name":"projectId","example":"39577c49-350f-45a4-8ec3-321321213213","schema":{"type":"string"}},{"description":"The account ID the transactions belong to","in":"query","name":"accountId","example":"39577c49-350f-45a4-8ec3-321321213213","schema":{"type":"string"}}],"responses":{"200":{"description":"Successful Tax Response","content":{"application/json":{"schema":{"properties":{"data":{"$ref":"#/components/schemas/Tax"},"links":{"$ref":"#/components/schemas/Links"},"meta":{"type":"object"}},"type":"object"}}}},"401":{"description":"Unsuccessful Response - Not authorised - Missing authorization header - Invalid access Token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Unsuccessful Response - Forbidden - Invalid scopes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"tags":["tax"]}}},"servers":[{"url":"https://api.moneyhub.co.uk/v3"}],"components":{"requestBodies":{"NotificationThresholdPost":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotificationThresholdPost"}}}}},"securitySchemes":{"Bearer":{"type":"apiKey","name":"Authorization","in":"header"}},"schemas":{"QueryParams":{"additionalProperties":false,"type":"object","properties":{"categoryId":{"type":"string","pattern":"^(?:(?:std|cus):(?:\\w|-)+)|(?:(?:income|expense):[\\d]{1,2})$"},"startDate":{"format":"date","type":"string","example":"2019-05-22"},"endDate":{"format":"date","type":"string","example":"2019-05-22"},"startDateModified":{"format":"date","type":"string","example":"2019-05-22"},"endDateModified":{"format":"date","type":"string","example":"2019-05-22"},"limit":{"type":"integer","minimum":0,"maximum":1000},"offset":{"type":"integer","minimum":0,"maximum":1000000000},"text":{"type":"string","minLength":2,"maxLength":100},"accountId":{"type":"string","minLength":36,"maxLength":36},"accountIds":{"type":"string"},"type":{"type":"string","maxLength":100},"projectId":{"type":"string","example":"39577c49-350f-45a4-8ec3-321321213213"},"projectIds":{"type":"string","example":"39577c49-350f-45a4-8ec3-321321213213"},"creditDebitIndicator":{"type":"string","pattern":"^(credit|debit)$","example":"debit"},"hasProject":{"type":"boolean"},"contains":{"oneOf":[{"type":"string"},{"type":"number"}]},"hasEnhancedCategory":{"type":"string","example":"uk-tax-hmrc"},"enhancedCategories":{"type":"string","example":"uk-tax-hmrc:value"},"counterpartyIdsV2":{"type":"array","items":{"type":"string"}},"counterpartyIds":{"type":"array","items":{"type":"string"}},"ids":{"type":"array","items":{"type":"string"}},"isUnique":{"type":"boolean"},"showTransactionData":{"type":"boolean"},"showPerformanceScore":{"type":"boolean"},"connectionId":{"type":"string","example":"1ffe704d39629a929c8e293880fb449a:c1ef4ce6-c1d6-4900-9288-228fb21f5dc4"},"counterpartiesVersion":{"type":"string","example":"v3","enum":["v2","v3"]},"onlyCount":{"type":"boolean"}}},"Account":{"additionalProperties":false,"type":"object","properties":{"accountName":{"description":"The name of the account","example":"Cash ISA","type":"string"},"currency":{"description":"The currency of the account","example":"GBP","type":"string"},"balance":{"additionalProperties":false,"type":"object","properties":{"amount":{"properties":{"value":{"description":"The value of the balance in minor units of the currency, eg. pennies for GBP.","example":300023,"type":"integer"},"majorUnits":{"description":"The major units of the value, based on the values currency, eg. pounds for GBP.","example":3000,"type":"integer"},"minorUnits":{"description":"The minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the balance taken from the account","example":"GBP","type":"string"}},"required":["value","currency"],"type":"object"},"date":{"description":"The date of the balance","example":"2018-08-12","format":"date","type":"string"},"type":{"description":"The type of balance as returned by the banking provider","example":"InterimAvailable","type":"string","enum":["ClosingAvailable","ClosingBooked","ClosingCleared","Expected","ForwardAvailable","Information","InterimAvailable","InterimBooked","InterimCleared","OpeningAvailable","OpeningBooked","OpeningCleared","PreviouslyClosedBooked"]}},"example":{"date":"2018-08-12","amount":{"value":300023,"majorUnits":3000,"minorUnits":23,"currency":"GBP"},"type":"InterimAvailable"},"required":["amount","date"]},"details":{"type":"object","additionalProperties":false,"properties":{"AER":{"description":"For cash and savings accounts. Interest rate expressed as a percentage 'Annual Equivalent Rate'.","example":1.3,"type":"number","minimum":0,"maximum":100},"APR":{"description":"For credit cards, mortgages and loans. Interest rate expressed as a percentage 'Annual Percentage Rate'.","example":13.1,"type":"number","minimum":0,"maximum":100},"sortCodeAccountNumber":{"description":"For cash and saving accounts. Populated with the 6 digit Sort Code and 8 digit Account Number. It requires the `accounts_details:read` scope.","type":"string","maxLength":20,"minLength":14,"example":"60161331926819"},"iban":{"description":"For cash and savings accounts. Populated with the full IBAN number. It requires the `accounts_details:read` scope.","type":"string","maxLength":34,"minLength":18,"example":"GB2960161331926819"},"pan":{"description":"For card accounts. Populated with the full Primary Account Number of the credit card. It requires the `accounts_details:read` scope.","type":"string","maxLength":16,"minLength":16,"example":"5498572687746087"},"creditLimit":{"description":"For credit cards. The agreed overdraft limit of the account in minor units of the currency.","example":150000,"minimum":0,"type":"integer"},"endDate":{"description":"For Mortgages and loans. The date at which the loan/mortgage will finish.","format":"date","example":"2020-01-01","type":"string"},"fixedDate":{"description":"For Mortgages. The date at which the current fixed rate ends","format":"date","example":"2019-01-01","type":"string"},"interestFreePeriod":{"type":"integer","description":"For loans. The length in months of the interest free period","example":12,"minimum":0},"interestType":{"description":"For mortgages. The interest type","enum":["fixed","variable"],"example":"fixed","type":"string"},"linkedProperty":{"type":"string","description":"For Mortgages. The id of an associated property account","example":"ac9bd177-d01e-449c-9f29-d3656d2edc2e"},"monthlyRepayment":{"type":"integer","description":"For mortgages and loans. The monthly amount due to the mortgage provider in minor units of the currency.","example":60000,"minimum":0},"overdraftLimit":{"description":"For cash accounts. The agreed overdraft limit of the account in minor units of the currency.","example":150000,"type":"integer","minimum":0},"postcode":{"description":"For properties. The postcode of the property","example":"bs1 1aa","type":"string"},"runningCost":{"description":"For assets. The running cost in minor units of the currency.","example":20000,"type":"integer","minimum":0},"runningCostPeriod":{"type":"string","description":"For assets. The running cost period","enum":["month","year"],"example":"month"},"term":{"type":"integer","description":"For mortgages. The term of the mortgage in months.","example":13,"minimum":0},"yearlyAppreciation":{"type":"number","description":"For assets. The rate of appreciation as a percentage, negative values indicate that the asset will depreciate","example":-10}}},"transactionData":{"additionalProperties":false,"type":"object","required":["count","earliestDate","lastDate"],"properties":{"count":{"type":"integer","example":6},"earliestDate":{"type":"string","format":"date-time","example":"2017-11-28T00:00:00.000Z"},"lastDate":{"type":"string","format":"date-time","example":"2018-05-28T00:00:00.000Z"}}},"dateAdded":{"description":"The date at which the account was added.","example":"2018-07-10T11:39:44.000Z","format":"date-time","type":"string"},"dateModified":{"description":"The date at which the account was last modified","example":"2018-07-10T11:39:44.000Z","format":"date-time","type":"string"},"id":{"description":"The unique identity of the account.","example":"ac9bd177-d01e-449c-9f29-d3656d2edc2e","type":"string"},"providerName":{"description":"The name of the provider of the account.","example":"HSBC","type":"string"},"providerReference":{"description":"Reference that uniquely identifies a set of connections as being part of the same institution (e.g. HSBC Open banking and HSBC credit cards). It is used to group a set of connections by the banking institution they refer to. It can also be used to retrieve the bank icon.","example":"hsbc","type":"string"},"connectionId":{"description":"The id of the connection of the account. This value is not present for accounts created manually by the user.","example":"049c10ab871e8d60aa891c0ae368322d:639cf079-a585-4852-8b4d-1ebd17f4d2cb","pattern":"(API|DEMO|.{32}):(.{32}|.{36})","type":"string"},"providerId":{"description":"The id of the provider of the account. Accounts created using the api have a value of 'API'. Accounts crated for a Test user have a value of 'DEMO'. This value is not present for accounts created manually by the user.","example":"049c10ab871e8d60aa891c0ae368322d","pattern":"API|DEMO|.{32}","type":"string"},"providerAccountId":{"description":"The id of the account given by the provider. This can be used to uniquely identify accounts across different connections.","example":"3572357243","type":"string"},"providerAccountName":{"description":"The name of the account given by the provider. Allows to keep track of the provider's name if the account name has been manually updated","example":"Account Name","type":"string"},"accountReference":{"description":"A reference number for the account which consists of the last 4 digits of the account identification number (Account Number, IBAN or PAN). It requires the `accounts_details:read` scope","example":"3201","type":"string"},"accountHolderName":{"description":"Account Holder name. It requires the `accounts_details:read` scope.","example":"Mr Rob Ike","type":"string"},"accountOpeningDate":{"description":"The date the account was opened as reported by the account provider.","example":"2002-03-07T00:00:00.000Z","format":"date-time","type":"string"},"accountType":{"description":"The type of account (personal/business)","enum":["personal","business"],"type":"string","example":"personal","default":"personal"},"productName":{"description":"The name of the product sold / provided from the account provider.","example":"Personal Supercharged Savings Account","type":"string"},"providerAccountIdentifications":{"type":"array","description":"List of specific account identifications when there is no sort code/account number, iban or pan available.","items":{"type":"object","additionalProperties":false,"properties":{"identification":{"description":"The account identification","example":"SAVINGR12345678","type":"string"},"type":{"description":"The type of account identification","example":"UK.Santander.SavingsRollNumber","type":"string"}},"required":["identification","type"]}},"type":{"description":"The type of account - this will determine the data available in the details field","enum":["cash:current","savings","card","investment","loan","mortgage:repayment","mortgage:interestOnly","pension","pension:definedBenefit","pension:definedContribution","asset","properties:residential","properties:buyToLet","crypto"],"type":"string","example":"cash:current"},"performanceScore":{"type":"object","description":"Performance score of investment and pension accounts. Once that an account has at least 3 balances the score will be provided. Please note that this is an experimental feature.","additionalProperties":false,"properties":{"totals":{"type":"object","additionalProperties":false,"properties":{"openingBalance":{"type":"object","additionalProperties":false,"properties":{"date":{"example":"2018-08-12","format":"date","type":"string"},"amount":{"additionalProperties":false,"type":"object","properties":{"value":{"description":"The opening balance in minor units of the currency, eg. pennies for GBP","type":"integer","example":300023},"majorUnits":{"description":"The major units of the value, based on the values currency, eg. pounds for GBP.","example":3000,"type":"integer"},"minorUnits":{"description":"The minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"type":"string","example":"GBP"}},"required":["value","currency"]}}},"currentBalance":{"type":"object","additionalProperties":false,"properties":{"date":{"example":"2018-08-12","format":"date","type":"string"},"amount":{"additionalProperties":false,"type":"object","properties":{"value":{"description":"The current balance in minor units of the currency, eg. pennies for GBP","type":"integer","example":300023},"majorUnits":{"description":"The major units of the value, based on the values currency, eg. pounds for GBP.","example":3000,"type":"integer"},"minorUnits":{"description":"The minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"type":"string","example":"GBP"}},"required":["value","currency"]}}},"contributions":{"description":"The contributions in minor units of the currency, eg. pennies for GBP","type":"integer","example":240098},"withdrawals":{"description":"The withdrawals in minor units of the currency, eg. pennies for GBP","type":"integer","example":20067},"nonContributionGrowth":{"description":"The non contribution growth in minor units of the currency, eg. pennies for GBP","type":"integer","example":340054},"growthRate":{"description":"The growth rate expressed in percentage","type":"number","example":35.98},"annualisedGrowthRate":{"description":"The annualised growth rate expressed in percentage","type":"number","example":60.98}}},"months":{"items":{"type":"object","additionalProperties":false,"properties":{"date":{"description":"Date in the format YYYY-MM","example":"2018-08","pattern":"^(\\d{4})(-(0[1-9]|1[012]))?$","type":"string"},"openingBalance":{"description":"The opening balance in minor units of the currency, eg. pennies for GBP","type":"integer","example":300023},"nonContributionGrowth":{"description":"The non contribution growth in minor units of the currency, eg. pennies for GBP","type":"integer","example":1567},"aer":{"description":"The aer expressed in percentage","type":"number","example":35.98}}},"type":"array"}},"required":["totals","months"]},"additionalBalances":{"description":"(BETA) Additional balance types for the account. The balances will be the latest for each type retrieved from the bank. Will only appear for cash:current, card and savings account types. Please note not all banking providers will return additional balance types, and the types returned will vary. It is recommended to fall back to the main account balance in this case.","type":"array","items":{"additionalProperties":false,"type":"object","properties":{"amount":{"properties":{"value":{"description":"The value of the balance in minor units of the currency, eg. pennies for GBP.","example":300023,"type":"integer"},"majorUnits":{"description":"The major units of the value, based on the values currency, eg. pounds for GBP.","example":3000,"type":"integer"},"minorUnits":{"description":"The minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the balance taken from the account","example":"GBP","type":"string"}},"required":["value","currency"],"type":"object"},"date":{"description":"The date of the balance","example":"2018-08-12","format":"date","type":"string"},"type":{"description":"The type of balance as returned by the banking provider","example":"InterimAvailable","type":"string","enum":["ClosingAvailable","ClosingBooked","ClosingCleared","Expected","ForwardAvailable","Information","InterimAvailable","InterimBooked","InterimCleared","OpeningAvailable","OpeningBooked","OpeningCleared","PreviouslyClosedBooked"]}},"example":{"date":"2018-08-12","amount":{"value":300023,"majorUnits":3000,"minorUnits":23,"currency":"GBP"},"type":"InterimAvailable"},"required":["amount","date"]}}},"required":["id","dateAdded","dateModified","accountName","type","balance","details"]},"AccountSync":{"additionalProperties":false,"type":"object","properties":{"accountId":{"description":"The unique identity of the account.","example":"ac9bd177-d01e-449c-9f29-d3656d2edc2e","type":"string"},"lastSuccessfulSync":{"description":"The date at which the account was last synchronised successfully with the provider","example":"2018-07-10T11:39:44.000Z","format":"date-time","nullable":true,"type":"string"}},"required":["accountId","lastSuccessfulSync"]},"AccountDetails":{"type":"object","additionalProperties":false,"properties":{"AER":{"description":"For cash and savings accounts. Interest rate expressed as a percentage 'Annual Equivalent Rate'.","example":1.3,"type":"number","minimum":0,"maximum":100},"APR":{"description":"For credit cards, mortgages and loans. Interest rate expressed as a percentage 'Annual Percentage Rate'.","example":13.1,"type":"number","minimum":0,"maximum":100},"sortCodeAccountNumber":{"description":"For cash and saving accounts. Populated with the 6 digit Sort Code and 8 digit Account Number. It requires the `accounts_details:read` scope.","type":"string","maxLength":20,"minLength":14,"example":"60161331926819"},"iban":{"description":"For cash and savings accounts. Populated with the full IBAN number. It requires the `accounts_details:read` scope.","type":"string","maxLength":34,"minLength":18,"example":"GB2960161331926819"},"pan":{"description":"For card accounts. Populated with the full Primary Account Number of the credit card. It requires the `accounts_details:read` scope.","type":"string","maxLength":16,"minLength":16,"example":"5498572687746087"},"creditLimit":{"description":"For credit cards. The agreed overdraft limit of the account in minor units of the currency.","example":150000,"minimum":0,"type":"integer"},"endDate":{"description":"For Mortgages and loans. The date at which the loan/mortgage will finish.","format":"date","example":"2020-01-01","type":"string"},"fixedDate":{"description":"For Mortgages. The date at which the current fixed rate ends","format":"date","example":"2019-01-01","type":"string"},"interestFreePeriod":{"type":"integer","description":"For loans. The length in months of the interest free period","example":12,"minimum":0},"interestType":{"description":"For mortgages. The interest type","enum":["fixed","variable"],"example":"fixed","type":"string"},"linkedProperty":{"type":"string","description":"For Mortgages. The id of an associated property account","example":"ac9bd177-d01e-449c-9f29-d3656d2edc2e"},"monthlyRepayment":{"type":"integer","description":"For mortgages and loans. The monthly amount due to the mortgage provider in minor units of the currency.","example":60000,"minimum":0},"overdraftLimit":{"description":"For cash accounts. The agreed overdraft limit of the account in minor units of the currency.","example":150000,"type":"integer","minimum":0},"postcode":{"description":"For properties. The postcode of the property","example":"bs1 1aa","type":"string"},"runningCost":{"description":"For assets. The running cost in minor units of the currency.","example":20000,"type":"integer","minimum":0},"runningCostPeriod":{"type":"string","description":"For assets. The running cost period","enum":["month","year"],"example":"month"},"term":{"type":"integer","description":"For mortgages. The term of the mortgage in months.","example":13,"minimum":0},"yearlyAppreciation":{"type":"number","description":"For assets. The rate of appreciation as a percentage, negative values indicate that the asset will depreciate","example":-10}}},"Affordability":{"additionalProperties":false,"type":"object","properties":{"createdAt":{"description":"The timestamp the report was generated at","nullable":true,"type":"string"},"requestedAt":{"description":"The timestamp the report was requested at","nullable":true,"type":"string"},"id":{"description":"The report id","type":"string"},"status":{"description":"Whether the report is 'complete', 'pending' or 'failed'.","type":"string","enum":["pending","complete","failed"]},"statusDetails":{"description":"Additional information about the status of the report (if applicable)","type":"object","additionalProperties":true,"properties":{"message":{"description":"A message describing the status of the report, e.g. an error if the report status is 'failed'","type":"string"}}},"income":{"type":"object","properties":{"amountConsistency":{"description":"Consistency of monthly income, as a number between 0 and 1","type":"number"},"median":{"description":"The median monthly income","additionalProperties":false,"type":"object","properties":{"value":{"description":"The amount in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The positive major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The positive minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"]},"medianIncludingTransfers":{"description":"The median monthly income including incoming transfers when incoming transfers exceed outgoing transfers","additionalProperties":false,"type":"object","properties":{"value":{"description":"The amount in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The positive major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The positive minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"]},"primaryIncomeAccount":{"type":"object","properties":{"uid":{"description":"The account id of the detected primary income account","type":"string"}}},"longevity":{"type":"object","properties":{"consecutiveIncome":{"type":"object","properties":{"months":{"description":"The number of consecutive months of income detected","type":"number"}},"required":["months"]},"incomePeriodLength":{"type":"object","properties":{"months":{"description":"The number of months of transaction history available for the income detection process","type":"number"}},"required":["months"]}},"required":["consecutiveIncome","incomePeriodLength"]},"regularIncome":{"type":"object","properties":{"isDetected":{"description":"Whether or not regular income was detected","type":"boolean"},"predicted":{"type":"object","properties":{"monthly":{"type":"object","properties":{"amount":{"description":"The predicted monthly income amount","additionalProperties":false,"type":"object","properties":{"value":{"description":"The amount in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The positive major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The positive minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"]}},"required":["amount"]}},"required":["monthly"]}},"required":["isDetected","predicted"]},"categoriesUsed":{"description":"Income-based transaction categories that were used when detecting sources of income. This can be configured for a business, or if not a default list is used.","type":"array","items":{"type":"object","properties":{"uid":{"type":"string"},"key":{"type":"string"}},"required":["uid","key"]}}},"required":["amountConsistency","longevity","median","medianIncludingTransfers","primaryIncomeAccount","regularIncome"]},"expenditure":{"type":"object","properties":{"discretionary":{"type":"object","properties":{"median":{"description":"The median monthly discretionary spend","additionalProperties":false,"type":"object","properties":{"value":{"description":"The amount in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The positive major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The positive minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"]}},"required":["median"]},"fixed":{"type":"object","properties":{"median":{"description":"The median monthly fixed spend","additionalProperties":false,"type":"object","properties":{"value":{"description":"The amount in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The positive major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The positive minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"]}},"required":["median"]},"flexible":{"type":"object","properties":{"median":{"description":"The median monthly flexible spend","additionalProperties":false,"type":"object","properties":{"value":{"description":"The amount in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The positive major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The positive minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"]}},"required":["median"]},"nonDiscretionary":{"type":"object","properties":{"median":{"description":"The median monthly non-discretionary spend","additionalProperties":false,"type":"object","properties":{"value":{"description":"The amount in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The positive major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The positive minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"]}},"required":["median"]},"cashWithdrawals":{"type":"object","properties":{"median":{"description":"The median monthly cash withdrawal amount","additionalProperties":false,"type":"object","properties":{"value":{"description":"The amount in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The positive major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The positive minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"]}},"required":["median"]}},"required":["discretionary","fixed","flexible","nonDiscretionary","cashWithdrawals"]},"overdrafts":{"type":"object","properties":{"usage":{"type":"object","properties":{"details":{"type":"array","items":{"type":"object","properties":{"accountUid":{"description":"The account id","type":"string"},"daysInOverdraft":{"description":"The total number of days the account was overdrawn according to the account balance","type":"number"},"daysInUnarrangedOverdraft":{"description":"The total number of days the account was in unarranged overdraft according to the account balance. If we were not provided with an overdraft limit by the account provider, we assume any negative balance is unarranged overdraft","type":"number"},"earliestBalanceDate":{"description":"The earliest available balance date for the account","type":"string"},"periodsInOverdraft":{"type":"array","items":{"type":"object","properties":{"days":{"description":"The number of days the account was overdrawn during the period","type":"number"},"start":{"description":"The start date of the period","type":"string"},"end":{"description":"The end date of the period","type":"string"},"minimumBalance":{"description":"The minimum balance of the account during the period","additionalProperties":false,"type":"object","properties":{"value":{"description":"The amount in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The positive major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The positive minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"]},"unarrangedOverdraft":{"type":"object","properties":{"days":{"description":"The total number of days the account was in unarranged overdraft according to the account balance during the period","type":"number"},"periods":{"type":"array","items":{"type":"object","properties":{"days":{"description":"The number of days the account was in unarranged overdraft during the unarranged overdraft period","type":"number"},"start":{"description":"The start date of the unarranged overdraft period","type":"string"},"end":{"description":"The end date of the unarranged overdraft period","type":"string"},"minimumBalance":{"description":"The minimum balance of the account during the unarranged overdraft period","additionalProperties":false,"type":"object","properties":{"value":{"description":"The amount in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The positive major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The positive minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"]}},"required":["days","start","end","minimumBalance"]}}},"required":["days","periods"]}},"required":["days","end","minimumBalance","start"]}}},"required":["accountUid","daysInOverdraft","earliestBalanceDate","periodsInOverdraft"]}}},"required":["details"]}},"required":["usage"]},"gambling":{"type":"object","properties":{"out":{"type":"object","properties":{"median":{"description":"The median monthly gambling spend","additionalProperties":false,"type":"object","properties":{"value":{"description":"The amount in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The positive major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The positive minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"]}},"required":["median"]}},"required":["out"]},"transfers":{"type":"object","properties":{"median":{"description":"The median monthly transfer amount","additionalProperties":false,"type":"object","properties":{"value":{"description":"The amount in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The positive major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The positive minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"]},"out":{"type":"object","properties":{"median":{"description":"The median transfer amount for outgoing transfer transactions only","additionalProperties":false,"type":"object","properties":{"value":{"description":"The amount in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The positive major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The positive minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"]}},"required":["median"]}},"required":["out"]},"returnedPayments":{"type":"object","properties":{"count":{"description":"The number of transactions detected as being a returned payment","type":"number"},"details":{"type":"array","items":{"type":"object","properties":{"category":{"type":"string","description":"The category of the returned payments"},"count":{"description":"The number of returned payment transactions detected for the specified category and time period","type":"number"},"period":{"type":"object","properties":{"unit":{"type":"string","description":"The type of time unit over which the returned payments were detected","enum":["days"]},"value":{"description":"The number of time units over which the returned payments were detected","type":"number"}},"required":["unit","value"]},"total":{"type":"object","properties":{"returned":{"description":"The total sum of the returned payments for the specified category and time period","additionalProperties":false,"type":"object","properties":{"value":{"description":"The amount in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The positive major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The positive minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"]}},"required":["returned"]}},"required":["category","count","period","total"]}},"period":{"type":"object","properties":{"months":{"type":"number","description":"The number of months of regular payment history detected"}},"required":["months"]}},"required":["count","period"]},"loans":{"type":"object","properties":{"opened":{"type":"object","properties":{"details":{"type":"array","items":{"type":"object","properties":{"count":{"description":"The number of loans opened","type":"number"},"period":{"type":"object","properties":{"unit":{"type":"string","description":"The type of time unit over which the loans were opened","enum":["days"]},"value":{"description":"The number of time units over which the loans were opened","type":"number"}},"required":["unit","value"]},"total":{"type":"object","properties":{"borrowed":{"description":"The total amount borrowed","additionalProperties":false,"type":"object","properties":{"value":{"description":"The amount in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The positive major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The positive minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"]},"repaid":{"description":"The total amount repaid","additionalProperties":false,"type":"object","properties":{"value":{"description":"The amount in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The positive major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The positive minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"]}},"required":["borrowed","repaid"]},"type":{"type":"string","description":"The type of loan","enum":["bnpl","dca/dmp","hcstc","secured","unsecured","unknown"]}},"required":["count","period","type"]}}}},"repayments":{"type":"object","properties":{"median":{"description":"The median monthly loan repayment amount","additionalProperties":false,"type":"object","properties":{"value":{"description":"The amount in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The positive major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The positive minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"]}},"required":["median"]}},"required":["opened","repayments"]}},"required":["id","status"],"example":{"createdAt":"2022-01-01T00:00:00Z","requestedAt":"2021-12-31T23:00:00Z","id":"d372d09b-f50a-4114-9c83-687828fa8ac2","status":"complete","income":{"amountConsistency":1,"median":{"value":189900,"majorUnits":1899,"minorUnits":0,"currency":"GBP"},"medianIncludingTransfers":{"value":210000,"majorUnits":2100,"minorUnits":0,"currency":"GBP"},"primaryIncomeAccount":{"uid":"ac9bd177-d01e-449c-9f29-d3656d2edc2e"},"longevity":{"consecutiveIncome":{"months":12},"incomePeriodLength":{"months":12}},"regularIncome":{"isDetected":true,"predicted":{"monthly":{"amount":{"value":189900,"majorUnits":1899,"minorUnits":0,"currency":"GBP"}}}},"categoriesUsed":[{"uid":"29","key":"paychecks"}]},"expenditure":{"discretionary":{"median":{"value":-55000,"majorUnits":550,"minorUnits":0,"currency":"GBP"}},"fixed":{"median":{"value":-125000,"majorUnits":1250,"minorUnits":0,"currency":"GBP"}},"flexible":{"median":{"value":-59000,"majorUnits":590,"minorUnits":0,"currency":"GBP"}},"nonDiscretionary":{"median":{"value":-130000,"majorUnits":1300,"minorUnits":0,"currency":"GBP"}},"cashWithdrawals":{"median":{"value":-5000,"majorUnits":50,"minorUnits":0,"currency":"GBP"}}},"overdrafts":{"usage":{"details":[{"accountUid":"ac9bd177-d01e-449c-9f29-d3656d2edc2e","daysInOverdraft":4,"daysInUnarrangedOverdraft":2,"earliestBalanceDate":"2022-01-01T00:00:00Z","periodsInOverdraft":[{"days":4,"start":"2022-01-01T00:00:00Z","end":"2022-01-05T00:00:00Z","minimumBalance":{"value":-10000,"majorUnits":100,"minorUnits":0,"currency":"GBP"},"unarrangedOverdraft":{"days":2,"periods":[{"days":1,"start":"2022-01-01T00:00:00Z","end":"2022-01-02T00:00:00Z","minimumBalance":{"value":-10000,"majorUnits":100,"minorUnits":0,"currency":"GBP"}},{"days":1,"start":"2022-01-04T00:00:00Z","end":"2022-01-05T00:00:00Z","minimumBalance":{"value":-9900,"majorUnits":99,"minorUnits":0,"currency":"GBP"}}]}}]}]}},"gambling":{"out":{"median":{"value":-2000,"majorUnits":20,"minorUnits":0,"currency":"GBP"}}},"transfers":{"median":{"value":-20000,"majorUnits":200,"minorUnits":0,"currency":"GBP"},"out":{"median":{"value":-20000,"majorUnits":200,"minorUnits":0,"currency":"GBP"}}},"returnedPayments":{"count":1,"details":[{"category":"utilities","count":1,"period":{"unit":"days","value":30},"total":{"returned":{"value":10000,"majorUnits":100,"minorUnits":0,"currency":"GBP"}}}],"period":{"months":12}},"loans":{"repayments":{"median":{"value":-20000,"majorUnits":200,"minorUnits":0,"currency":"GBP"}},"opened":{"details":[{"count":1,"period":{"unit":"days","value":30},"total":{"borrowed":{"value":100000,"majorUnits":1000,"minorUnits":0,"currency":"GBP"},"repaid":{"value":-10000,"majorUnits":100,"minorUnits":0,"currency":"GBP"}},"type":"bnpl"},{"count":1,"period":{"unit":"days","value":90},"total":{"borrowed":{"value":200000,"majorUnits":2000,"minorUnits":0,"currency":"GBP"},"repaid":{"value":-20000,"majorUnits":200,"minorUnits":0,"currency":"GBP"}},"type":"bnpl"},{"count":1,"period":{"unit":"days","value":180},"total":{"borrowed":{"value":300000,"majorUnits":3000,"minorUnits":0,"currency":"GBP"},"repaid":{"value":-30000,"majorUnits":300,"minorUnits":0,"currency":"GBP"}},"type":"bnpl"},{"count":1,"period":{"unit":"days","value":365},"total":{"borrowed":{"value":300000,"majorUnits":3000,"minorUnits":0,"currency":"GBP"},"repaid":{"value":-30000,"majorUnits":300,"minorUnits":0,"currency":"GBP"}},"type":"bnpl"},{"count":1,"period":{"unit":"days","value":30},"total":{"borrowed":{"value":100000,"majorUnits":1000,"minorUnits":0,"currency":"GBP"},"repaid":{"value":-10000,"majorUnits":100,"minorUnits":0,"currency":"GBP"}},"type":"hcstc"},{"count":1,"period":{"unit":"days","value":90},"total":{"borrowed":{"value":200000,"majorUnits":2000,"minorUnits":0,"currency":"GBP"},"repaid":{"value":-20000,"majorUnits":200,"minorUnits":0,"currency":"GBP"}},"type":"hcstc"},{"count":1,"period":{"unit":"days","value":180},"total":{"borrowed":{"value":300000,"majorUnits":3000,"minorUnits":0,"currency":"GBP"},"repaid":{"value":-30000,"majorUnits":300,"minorUnits":0,"currency":"GBP"}},"type":"hcstc"},{"count":1,"period":{"unit":"days","value":365},"total":{"borrowed":{"value":300000,"majorUnits":3000,"minorUnits":0,"currency":"GBP"},"repaid":{"value":-30000,"majorUnits":300,"minorUnits":0,"currency":"GBP"}},"type":"hcstc"},{"count":1,"period":{"unit":"days","value":30},"total":{"borrowed":{"value":100000,"majorUnits":1000,"minorUnits":0,"currency":"GBP"},"repaid":{"value":-10000,"majorUnits":100,"minorUnits":0,"currency":"GBP"}},"type":"dca/dmp"},{"count":1,"period":{"unit":"days","value":90},"total":{"borrowed":{"value":200000,"majorUnits":2000,"minorUnits":0,"currency":"GBP"},"repaid":{"value":-20000,"majorUnits":200,"minorUnits":0,"currency":"GBP"}},"type":"dca/dmp"},{"count":1,"period":{"unit":"days","value":180},"total":{"borrowed":{"value":300000,"majorUnits":3000,"minorUnits":0,"currency":"GBP"},"repaid":{"value":-30000,"majorUnits":300,"minorUnits":0,"currency":"GBP"}},"type":"dca/dmp"},{"count":1,"period":{"unit":"days","value":365},"total":{"borrowed":{"value":300000,"majorUnits":3000,"minorUnits":0,"currency":"GBP"},"repaid":{"value":-30000,"majorUnits":300,"minorUnits":0,"currency":"GBP"}},"type":"dca/dmp"},{"count":1,"period":{"unit":"days","value":30},"total":{"borrowed":{"value":100000,"majorUnits":1000,"minorUnits":0,"currency":"GBP"},"repaid":{"value":-10000,"majorUnits":100,"minorUnits":0,"currency":"GBP"}},"type":"secured"},{"count":1,"period":{"unit":"days","value":90},"total":{"borrowed":{"value":200000,"majorUnits":2000,"minorUnits":0,"currency":"GBP"},"repaid":{"value":-20000,"majorUnits":200,"minorUnits":0,"currency":"GBP"}},"type":"secured"},{"count":1,"period":{"unit":"days","value":180},"total":{"borrowed":{"value":300000,"majorUnits":3000,"minorUnits":0,"currency":"GBP"},"repaid":{"value":-30000,"majorUnits":300,"minorUnits":0,"currency":"GBP"}},"type":"secured"},{"count":1,"period":{"unit":"days","value":365},"total":{"borrowed":{"value":300000,"majorUnits":3000,"minorUnits":0,"currency":"GBP"},"repaid":{"value":-30000,"majorUnits":300,"minorUnits":0,"currency":"GBP"}},"type":"secured"},{"count":1,"period":{"unit":"days","value":30},"total":{"borrowed":{"value":100000,"majorUnits":1000,"minorUnits":0,"currency":"GBP"},"repaid":{"value":-10000,"majorUnits":100,"minorUnits":0,"currency":"GBP"}},"type":"unknown"},{"count":1,"period":{"unit":"days","value":90},"total":{"borrowed":{"value":200000,"majorUnits":2000,"minorUnits":0,"currency":"GBP"},"repaid":{"value":-20000,"majorUnits":200,"minorUnits":0,"currency":"GBP"}},"type":"unknown"},{"count":1,"period":{"unit":"days","value":180},"total":{"borrowed":{"value":300000,"majorUnits":3000,"minorUnits":0,"currency":"GBP"},"repaid":{"value":-30000,"majorUnits":300,"minorUnits":0,"currency":"GBP"}},"type":"unknown"},{"count":1,"period":{"unit":"days","value":365},"total":{"borrowed":{"value":300000,"majorUnits":3000,"minorUnits":0,"currency":"GBP"},"repaid":{"value":-30000,"majorUnits":300,"minorUnits":0,"currency":"GBP"}},"type":"unknown"},{"count":1,"period":{"unit":"days","value":30},"total":{"borrowed":{"value":100000,"majorUnits":1000,"minorUnits":0,"currency":"GBP"},"repaid":{"value":-10000,"majorUnits":100,"minorUnits":0,"currency":"GBP"}},"type":"unsecured"},{"count":1,"period":{"unit":"days","value":90},"total":{"borrowed":{"value":200000,"majorUnits":2000,"minorUnits":0,"currency":"GBP"},"repaid":{"value":-20000,"majorUnits":200,"minorUnits":0,"currency":"GBP"}},"type":"unsecured"},{"count":1,"period":{"unit":"days","value":180},"total":{"borrowed":{"value":300000,"majorUnits":3000,"minorUnits":0,"currency":"GBP"},"repaid":{"value":-30000,"majorUnits":300,"minorUnits":0,"currency":"GBP"}},"type":"unsecured"},{"count":1,"period":{"unit":"days","value":365},"total":{"borrowed":{"value":300000,"majorUnits":3000,"minorUnits":0,"currency":"GBP"},"repaid":{"value":-30000,"majorUnits":300,"minorUnits":0,"currency":"GBP"}},"type":"unsecured"}]}}}},"AffordabilityMetadata":{"additionalProperties":false,"type":"object","properties":{"createdAt":{"description":"The timestamp the report was generated at","nullable":true,"type":"string"},"requestedAt":{"description":"The timestamp the report was requested at","nullable":true,"type":"string"},"id":{"description":"The report id","type":"string"},"status":{"description":"Whether the report is 'complete', 'pending' or 'failed'.","type":"string","enum":["pending","complete","failed"]},"statusDetails":{"description":"Additional information about the status of the report (if applicable)","type":"object","additionalProperties":true,"properties":{"message":{"description":"A message describing the status of the report, e.g. an error if the report status is 'failed'","type":"string"}}}},"example":{"createdAt":"2022-01-01T00:00:00Z","requestedAt":"2021-12-31T23:00:00Z","id":"d372d09b-f50a-4114-9c83-687828fa8ac2","status":"complete"},"required":["id"]},"AffordabilityConfidence":{"additionalProperties":false,"type":"object","properties":{"confidence":{"description":"The confidence level of an affordability report ","type":"string","enum":["high","low"]}},"example":{"confidence":"high"},"required":["confidence"]},"AffordabilityPost":{"additionalProperties":false,"type":"object","properties":{"externalUserId":{"description":"Your reference ID for the user or individual affordability application. The same value could be assigned to all reports created as part of the same affordability application's lifecycle, for example","type":"string"},"name":{"description":"The full name of the user to whom the affordability application applies to","type":"string"},"email":{"description":"The email address of the user to whom the affordability application applies to","type":"string"}},"example":{"externalUserId":"LENDERNAME-123","name":"Joe Bloggs","email":"joe.blogss@example.com"}},"Amount":{"additionalProperties":false,"type":"object","properties":{"value":{"description":"The amount in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The positive major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The positive minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"]},"PerformanceScore":{"type":"object","description":"Performance score of investment and pension accounts. Once that an account has at least 3 balances the score will be provided. Please note that this is an experimental feature.","additionalProperties":false,"properties":{"totals":{"type":"object","additionalProperties":false,"properties":{"openingBalance":{"type":"object","additionalProperties":false,"properties":{"date":{"example":"2018-08-12","format":"date","type":"string"},"amount":{"additionalProperties":false,"type":"object","properties":{"value":{"description":"The opening balance in minor units of the currency, eg. pennies for GBP","type":"integer","example":300023},"majorUnits":{"description":"The major units of the value, based on the values currency, eg. pounds for GBP.","example":3000,"type":"integer"},"minorUnits":{"description":"The minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"type":"string","example":"GBP"}},"required":["value","currency"]}}},"currentBalance":{"type":"object","additionalProperties":false,"properties":{"date":{"example":"2018-08-12","format":"date","type":"string"},"amount":{"additionalProperties":false,"type":"object","properties":{"value":{"description":"The current balance in minor units of the currency, eg. pennies for GBP","type":"integer","example":300023},"majorUnits":{"description":"The major units of the value, based on the values currency, eg. pounds for GBP.","example":3000,"type":"integer"},"minorUnits":{"description":"The minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"type":"string","example":"GBP"}},"required":["value","currency"]}}},"contributions":{"description":"The contributions in minor units of the currency, eg. pennies for GBP","type":"integer","example":240098},"withdrawals":{"description":"The withdrawals in minor units of the currency, eg. pennies for GBP","type":"integer","example":20067},"nonContributionGrowth":{"description":"The non contribution growth in minor units of the currency, eg. pennies for GBP","type":"integer","example":340054},"growthRate":{"description":"The growth rate expressed in percentage","type":"number","example":35.98},"annualisedGrowthRate":{"description":"The annualised growth rate expressed in percentage","type":"number","example":60.98}}},"months":{"items":{"type":"object","additionalProperties":false,"properties":{"date":{"description":"Date in the format YYYY-MM","example":"2018-08","pattern":"^(\\d{4})(-(0[1-9]|1[012]))?$","type":"string"},"openingBalance":{"description":"The opening balance in minor units of the currency, eg. pennies for GBP","type":"integer","example":300023},"nonContributionGrowth":{"description":"The non contribution growth in minor units of the currency, eg. pennies for GBP","type":"integer","example":1567},"aer":{"description":"The aer expressed in percentage","type":"number","example":35.98}}},"type":"array"}},"required":["totals","months"]},"Balance":{"additionalProperties":false,"type":"object","properties":{"amount":{"properties":{"value":{"description":"The value of the balance in minor units of the currency, eg. pennies for GBP.","example":300023,"type":"integer"},"majorUnits":{"description":"The major units of the value, based on the values currency, eg. pounds for GBP.","example":3000,"type":"integer"},"minorUnits":{"description":"The minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the balance taken from the account","example":"GBP","type":"string"}},"required":["value","currency"],"type":"object"},"date":{"description":"The date of the balance","example":"2018-08-12","format":"date","type":"string"},"type":{"description":"The type of balance as returned by the banking provider","example":"InterimAvailable","type":"string","enum":["ClosingAvailable","ClosingBooked","ClosingCleared","Expected","ForwardAvailable","Information","InterimAvailable","InterimBooked","InterimCleared","OpeningAvailable","OpeningBooked","OpeningCleared","PreviouslyClosedBooked"]}},"example":{"date":"2018-08-12","amount":{"value":300023,"majorUnits":3000,"minorUnits":23,"currency":"GBP"},"type":"InterimAvailable"},"required":["amount","date"]},"BalancePost":{"additionalProperties":false,"type":"object","properties":{"amount":{"properties":{"value":{"description":"The value of the balance in minor units of the currency, eg. pennies for GBP.","example":300023,"type":"integer"}},"required":["value"],"type":"object"},"date":{"description":"The date of the balance","example":"2018-08-12","format":"date","type":"string"}},"example":{"date":"2018-08-12","amount":{"value":300023}},"required":["amount","date"]},"Beneficiary":{"additionalProperties":false,"properties":{"id":{"description":"The unique identifier for the beneficiary","example":"ac9bd177-d01e-449c-9f29-d3656d2edc2e","type":"string"},"active":{"description":"Shows whether the payee is currently active or not","type":"boolean"},"name":{"description":"The name for the beneficiary","example":"Beneficiary","type":"string"},"reference":{"description":"The reference attached to the beneficiary","example":"Beneficiary reference","type":"string"},"accountNumber":{"description":"The beneficiary's account number","example":"12345678","type":"string","pattern":"^\\d{8}$"},"sortCode":{"description":"The beneficiary's sort code","example":"123456","type":"string","pattern":"^\\d{6}$"},"iban":{"description":"For cash accounts. Populated with the full IBAN number.","type":"string","maxLength":34,"minLength":18,"example":"GB2960161331926819"},"pan":{"description":"For card accounts. Populated with the Primary Account Number.","type":"string","example":"1234567812345678"},"providerAccountId":{"description":"The provider account ID the beneficiary belongs to","type":"string"},"providerBeneficiaryId":{"description":"The provider beneficiary ID for the beneficiary","type":"string"},"accountId":{"description":"The Moneyhub account ID that the beneficiary belongs to","example":"ac9bd177-d01e-449c-9f29-d3656d2edc2e","type":"string"},"postalAddress":{"description":"Additional postal address information for the beneficiary agent, only retrieved using **beneficiaries_detail:read** scope","type":"object"},"createdAt":{"description":"The date at which the beneficiary was added.","example":"2018-07-10T11:39:44.000Z","format":"date-time","type":"string"},"modifiedAt":{"description":"The date at which the beneficiary was added.","example":"2018-07-10T11:39:44.000Z","format":"date-time","type":"string"}},"type":"object","required":["id","active","providerAccountId","providerBeneficiaryId","accountId","createdAt","modifiedAt"]},"AccountPost":{"properties":{"accountName":{"description":"The name of the account","example":"Account name","type":"string"},"providerName":{"description":"The name of the provider of the account.","example":"Provider name","type":"string"},"currency":{"description":"The currency of the account. Defaults to GBP.","example":"GBP","type":"string"},"type":{"description":"The type of account - this will determine the data available in the details field","enum":["cash:current","savings","card","investment","loan","mortgage:repayment","mortgage:interestOnly","pension","pension:definedBenefit","pension:definedContribution","asset","properties:residential","properties:buyToLet","crypto"],"type":"string","example":"cash:current"},"accountType":{"description":"The type of account (personal/business)","enum":["personal","business"],"type":"string","example":"personal","default":"personal"},"balance":{"additionalProperties":false,"type":"object","properties":{"amount":{"properties":{"value":{"description":"The value of the balance in minor units of the currency, eg. pennies for GBP.","example":300023,"type":"integer"}},"required":["value"],"type":"object"},"date":{"description":"The date of the balance","example":"2018-08-12","format":"date","type":"string"}},"example":{"date":"2018-08-12","amount":{"value":300023}},"required":["amount","date"]},"details":{"additionalProperties":false,"type":"object","properties":{"AER":{"description":"For cash and savings accounts. Interest rate expressed as a percentage 'Annual Equivalent Rate'.","example":1.3,"type":"number","minimum":0,"maximum":100},"APR":{"description":"For credit cards, mortgages and loans. Interest rate expressed as a percentage 'Annual Percentage Rate'.","example":13.1,"type":"number","minimum":0,"maximum":100},"creditLimit":{"description":"For credit cards. The agreed overdraft limit of the account in minor units of the currency.","example":150000,"minimum":0,"type":"integer"},"endDate":{"description":"For Mortgages and loans. The date at which the loan/mortgage will finish.","format":"date","example":"2020-01-01","type":"string"},"fixedDate":{"description":"For Mortgages. The date at which the current fixed rate ends","format":"date","example":"2019-01-01","type":"string"},"interestFreePeriod":{"type":"integer","description":"For loans. The length in months of the interest free period","example":12,"minimum":0},"interestType":{"description":"For mortgages. The interest type","enum":["fixed","variable"],"example":"fixed","type":"string"},"linkedProperty":{"type":"string","description":"For Mortgages. The id of an associated property account","example":"ac9bd177-d01e-449c-9f29-d3656d2edc2e"},"monthlyRepayment":{"type":"integer","description":"For mortgages and loans. The monthly amount due to the mortgage provider in minor units of the currency.","example":60000,"minimum":0},"overdraftLimit":{"description":"For cash accounts. The agreed overdraft limit of the account in minor units of the currency.","example":150000,"type":"integer","minimum":0},"postcode":{"description":"For properties. The postcode of the property","example":"bs1 1aa","type":"string"},"runningCost":{"description":"For assets. The running cost in minor units of the currency.","example":20000,"type":"integer","minimum":0},"runningCostPeriod":{"type":"string","description":"For assets. The running cost period","enum":["month","year"],"example":"month"},"term":{"type":"integer","description":"For mortgages. The term of the mortgage in months.","example":13,"minimum":0},"yearlyAppreciation":{"type":"number","description":"For assets. The rate of appreciation as a percentage, negative values indicate that the asset will depreciate","example":-10}}},"providerAccountIdentifications":{"type":"array","description":"List of provider specific account identifications","items":{"type":"object","additionalProperties":false,"properties":{"identification":{"description":"The account identification","example":"SAVINGR12345678","type":"string"},"type":{"description":"The type of account identification","example":"savingsRollNumber","type":"string","enum":["accountNumber","savingsRollNumber","policyNumber"]}},"required":["identification","type"]}}},"required":["accountName","providerName","type","balance"],"type":"object"},"AccountPatch":{"properties":{"accountName":{"description":"The name of the account","example":"Account name","type":"string"},"providerName":{"description":"The name of the provider of the account.","example":"Provider name","type":"string"},"details":{"additionalProperties":false,"type":"object","properties":{"AER":{"description":"For cash and savings accounts. Interest rate expressed as a percentage 'Annual Equivalent Rate'.","example":1.3,"type":"number","minimum":0,"maximum":100},"APR":{"description":"For credit cards, mortgages and loans. Interest rate expressed as a percentage 'Annual Percentage Rate'.","example":13.1,"type":"number","minimum":0,"maximum":100},"creditLimit":{"description":"For credit cards. The agreed overdraft limit of the account in minor units of the currency.","example":150000,"minimum":0,"type":"integer"},"endDate":{"description":"For Mortgages and loans. The date at which the loan/mortgage will finish.","format":"date","example":"2020-01-01","type":"string"},"fixedDate":{"description":"For Mortgages. The date at which the current fixed rate ends","format":"date","example":"2019-01-01","type":"string"},"interestFreePeriod":{"type":"integer","description":"For loans. The length in months of the interest free period","example":12,"minimum":0},"interestType":{"description":"For mortgages. The interest type","enum":["fixed","variable"],"example":"fixed","type":"string"},"linkedProperty":{"type":"string","description":"For Mortgages. The id of an associated property account","example":"ac9bd177-d01e-449c-9f29-d3656d2edc2e"},"monthlyRepayment":{"type":"integer","description":"For mortgages and loans. The monthly amount due to the mortgage provider in minor units of the currency.","example":60000,"minimum":0},"overdraftLimit":{"description":"For cash accounts. The agreed overdraft limit of the account in minor units of the currency.","example":150000,"type":"integer","minimum":0},"postcode":{"description":"For properties. The postcode of the property","example":"bs1 1aa","type":"string"},"runningCost":{"description":"For assets. The running cost in minor units of the currency.","example":20000,"type":"integer","minimum":0},"runningCostPeriod":{"type":"string","description":"For assets. The running cost period","enum":["month","year"],"example":"month"},"term":{"type":"integer","description":"For mortgages. The term of the mortgage in months.","example":13,"minimum":0},"yearlyAppreciation":{"type":"number","description":"For assets. The rate of appreciation as a percentage, negative values indicate that the asset will depreciate","example":-10}}}},"required":["accountName","providerName"],"type":"object"},"HoldingsValuation":{"additionalProperties":false,"type":"object","properties":{"date":{"description":"Date of the valuation","example":"2018-07-11","format":"date","type":"string"},"items":{"items":{"additionalProperties":false,"type":"object","properties":{"codes":{"items":{"additionalProperties":false,"properties":{"code":{"example":"GB00B39TQT96","type":"string"},"type":{"enum":["ISIN","SEDOL","MEX"],"example":"ISIN","type":"string"}},"type":"object"},"type":"array"},"description":{"example":"Dynamic Bond Fund","type":"string"},"quantity":{"example":4548.09,"type":"number"},"total":{"properties":{"value":{"description":"The value of the total in minor units of the currency, eg. pennies for GBP.","example":90334.16,"type":"number"},"currency":{"description":"The currency of the total.","example":"GBP","type":"string"}},"required":["value","currency"],"type":"object"},"unitPrice":{"properties":{"value":{"description":"The value of the unit price in minor units of the currency, eg. pennies for GBP.","example":19.862,"type":"number"},"currency":{"description":"The currency of the unit price.","example":"GBP","type":"string"}},"required":["value","currency"],"type":"object"},"currency":{"description":"The currency of the holding","example":"GBP","type":"string"}},"required":["description","quantity","unitPrice","total","codes"]},"type":"array"}},"required":["date","items"]},"Holding":{"additionalProperties":false,"type":"object","properties":{"codes":{"items":{"additionalProperties":false,"properties":{"code":{"example":"GB00B39TQT96","type":"string"},"type":{"enum":["ISIN","SEDOL","MEX"],"example":"ISIN","type":"string"}},"type":"object"},"type":"array"},"description":{"example":"Dynamic Bond Fund","type":"string"},"quantity":{"example":4548.09,"type":"number"},"total":{"properties":{"value":{"description":"The value of the total in minor units of the currency, eg. pennies for GBP.","example":90334.16,"type":"number"},"currency":{"description":"The currency of the total.","example":"GBP","type":"string"}},"required":["value","currency"],"type":"object"},"unitPrice":{"properties":{"value":{"description":"The value of the unit price in minor units of the currency, eg. pennies for GBP.","example":19.862,"type":"number"},"currency":{"description":"The currency of the unit price.","example":"GBP","type":"string"}},"required":["value","currency"],"type":"object"},"currency":{"description":"The currency of the holding","example":"GBP","type":"string"}},"required":["description","quantity","unitPrice","total","codes"]},"HoldingWithMatches":{"additionalProperties":false,"type":"object","properties":{"date":{"description":"Date of the valuation","example":"2018-07-11","format":"date","type":"string"},"id":{"description":"The id of the holding","example":"6a8b01768a50b095a8c0445c1b080900f1096fd0b6e40863c6b82d63607c3bbe","type":"string"},"matched":{"items":{"additionalProperties":false,"properties":{"isin":{"description":"The ISIN code of the match","example":"GB00B39TQT96","type":"string"},"name":{"description":"The name of the match","example":"Dynamic Bond Fund Acc","type":"string"},"score":{"example":0.5,"type":"number"},"priceGBP":{"example":4548.09,"type":"number"},"price":{"properties":{"value":{"description":"The unit price in minor units of the currency (e.g. pence for GBP)","example":90334.16,"type":"number"},"currency":{"description":"The currency of the matched holding","example":"GBP","type":"string"}},"required":["value","currency"],"type":"object"},"date":{"description":"Date of the valuation","example":"2018-07-11","format":"date","type":"string"}},"type":"object"},"type":"array"},"codes":{"items":{"additionalProperties":false,"properties":{"code":{"example":"GB00B39TQT96","type":"string"},"type":{"enum":["ISIN","SEDOL","MEX"],"example":"ISIN","type":"string"}},"type":"object"},"type":"array"},"name":{"example":"Dynamic Bond Fund","type":"string"},"quantity":{"example":4548.09,"type":"number"},"total":{"properties":{"value":{"description":"The value of the total in minor units of the currency, eg. pennies for GBP.","example":90334.16,"type":"number"},"currency":{"description":"The currency of the total.","example":"GBP","type":"string"}},"required":["value","currency"],"type":"object"},"unitPrice":{"properties":{"value":{"description":"The value of the unit price in minor units of the currency, eg. pennies for GBP.","example":19.862,"type":"number"},"currency":{"description":"The currency of the unit price.","example":"GBP","type":"string"}},"required":["value","currency"],"type":"object"},"currency":{"description":"The currency of the holding","example":"GBP","type":"string"}},"required":["name","quantity","unitPrice","total","codes","id","matched"]},"HoldingWithMatchesAndHistory":{"additionalProperties":false,"type":"object","properties":{"id":{"description":"The id of the holding","example":"6a8b01768a50b095a8c0445c1b080900f1096fd0b6e40863c6b82d63607c3bbe","type":"string"},"date":{"description":"Date of the valuation","example":"2018-07-11","format":"date","type":"string"},"history":{"items":{"additionalProperties":false,"properties":{"total":{"properties":{"value":{"description":"The value of the total in minor units of the currency, eg. pennies for GBP.","example":90334.16,"type":"number"},"currency":{"description":"The currency of the total.","example":"GBP","type":"string"}},"required":["value","currency"],"type":"object"},"unitPrice":{"properties":{"value":{"description":"The value of the unit price in minor units of the currency, eg. pennies for GBP.","example":19.862,"type":"number"},"currency":{"description":"The currency of the unit price.","example":"GBP","type":"string"}},"required":["value","currency"],"type":"object"},"quantity":{"example":4548.09,"type":"number"},"date":{"description":"Date of the valuation","example":"2018-07-11","format":"date","type":"string"}},"type":"object"},"type":"array"},"matched":{"items":{"additionalProperties":false,"properties":{"isin":{"description":"The ISIN code of the match","example":"GB00B39TQT96","type":"string"},"name":{"description":"The name of the match","example":"Dynamic Bond Fund Acc","type":"string"},"score":{"example":0.5,"type":"number"},"priceGBP":{"example":4548.09,"type":"number"},"price":{"properties":{"value":{"description":"The unit price in minor units of the currency (e.g. pence for GBP)","example":90334.16,"type":"number"},"currency":{"description":"The currency of the matched holding","example":"GBP","type":"string"}},"required":["value","currency"],"type":"object"},"date":{"description":"Date of the valuation","example":"2018-07-11","format":"date","type":"string"}},"type":"object"},"type":"array"},"codes":{"items":{"additionalProperties":false,"properties":{"code":{"example":"GB00B39TQT96","type":"string"},"type":{"enum":["ISIN","SEDOL","MEX"],"example":"ISIN","type":"string"}},"type":"object"},"type":"array"},"name":{"example":"Dynamic Bond Fund","type":"string"},"quantity":{"example":4548.09,"type":"number"},"total":{"properties":{"value":{"description":"The value of the total in minor units of the currency, eg. pennies for GBP.","example":90334.16,"type":"number"},"currency":{"description":"The currency of the total.","example":"GBP","type":"string"}},"required":["value","currency"],"type":"object"},"unitPrice":{"properties":{"value":{"description":"The value of the unit price in minor units of the currency, eg. pennies for GBP.","example":19.862,"type":"number"},"currency":{"description":"The currency of the unit price.","example":"GBP","type":"string"}},"required":["value","currency"],"type":"object"},"currency":{"description":"The currency of the holding","example":"GBP","type":"string"}},"required":["name","quantity","unitPrice","total","codes","history","matched","id"]},"Counterparty":{"additionalProperties":false,"type":"object","properties":{"id":{"description":"The unique identifier for the counterparty.","example":"4bac27393bdd9777ce02453256c5577cd02275510b2227f473d03f533924f877","type":"string"},"label":{"description":"A label describing the counterparty","example":"British Gas","type":"string"},"type":{"description":"The type of counterparty (specific to an account, or globally recognised across all users)","example":"local","type":"string","enum":["global","local"]},"companyName":{"description":"The full name of the company (only for global counterparties)","example":"Itsu Limited","type":"string"},"logo":{"description":"The url to the company logo (only for global counterparties)","example":"https://s3-eu-west-1.amazonaws.com/itsu-production/wp-content/uploads/2018/07/19152431/GUIDE_LOGO_itsu.png","type":"string"},"website":{"description":"The url to the company website (only for global counterparties)","example":"https://www.itsu.com","type":"string"},"mcc":{"type":"object","properties":{"code":{"description":"The merchant category code (only for global counterparties)","example":"5812","type":"string"},"name":{"description":"The merchant category code name (only for global counterparties)","example":"Eating Places and Restaurants","type":"string"}}}},"example":{"id":"4bac27393bdd9777ce02453256c5577cd02275510b2227f473d03f533924f877","label":"British Gas"},"required":["id","label","type"]},"GlobalCounterpartyV3":{"additionalProperties":false,"type":"object","properties":{"id":{"type":"string","description":"The unique identifier for the counterparty.","format":"uuid","example":"a2c7b1e3-b9ce-5c61-9eb1-be897c04cee0"},"name":{"type":"string","description":"Name of the counterparty","example":"Tesco Mobile"},"parentId":{"type":"string","description":"The unique identifier for the counterparty parent","example":"26c417bc-248f-5e3f-9835-3cd9c2842f50","nullable":true},"parentName":{"type":"string","description":"Name of the counterparty parent","example":"Tesco","nullable":true},"fullCompanyName":{"type":"string","description":"Company name","example":"Tesco Stores Limited","nullable":true},"logoUrl":{"type":"string","description":"Logo Url of counterparty","example":"https://s3.eu-west-1.amazonaws.com/mft-counterparty-logos-prod/7e43257eac60348110bd15cc.svg","nullable":true},"website":{"type":"string","description":"Website url of counterparty","example":"https://www.tescomobile.com","nullable":true},"merchantCategoryCode":{"type":"string","description":"","example":"","nullable":true},"merchantCategoryDescription":{"type":"string","description":"","example":"","nullable":true},"registeredLocation":{"type":"string","description":"Registered address of company","example":"17-21 Wenlock Road, London N1 7G","nullable":true},"categoryId":{"type":"string","description":"Category used to group similar counterparties","example":"mobile-phone","nullable":true},"analyticalCategory":{"type":"string","description":"DEPRECATED. Category used to group similar counterparties","example":"mobile-phone","nullable":true},"transactionCategoryId":{"type":"string","description":"Most appropriate transaction category id for transactions to this counterparty","example":"std:4b0255f0-0309-4509-9e05-4b4e386f9b0d","nullable":true},"transactionCategory":{"type":"string","description":"Most appropriate transaction category name for transactions to this counterparty","example":"telephone","nullable":true}},"required":["id","name"],"example":{"id":"a7920ee2-62f4-5465-84eb-af6ef1f7074a","name":"J P Morgan Chase","parentId":null,"parentName":null,"fullCompanyName":"J P MORGAN CHASE & CO.","logoUrl":"https://s3.eu-west-1.amazonaws.com/mft-counterparty-logos-prod/55faa0f4226fe84c78e011df.svg","website":"https://www.jpmorganchase.com/","merchantCategoryCode":null,"merchantCategoryDescription":null,"registeredLocation":"25 Bank Street, London, United Kingdom","categoryId":"bank","analyticalCategory":"bank","transactionCategoryId":"std:2f3e2df7-827b-449d-a085-909c042d7f41","transactionCategory":"investment"}},"RecurringTransactionEstimate":{"additionalProperties":false,"type":"object","properties":{"counterpartyId":{"description":"The id of the counterparty that the estimate is for","example":"4bac27393bdd9777ce02453256c5577cd02275510b2227f473d03f533924f877","type":"string"},"amount":{"properties":{"value":{"description":"The average predicted amount of the recurring transaction in minor units of the currency, eg. pennies for GBP.","example":300023,"type":"integer"},"majorUnits":{"description":"The major units of the value, based on the values currency, eg. pounds for GBP.","example":3000,"type":"integer"},"minorUnits":{"description":"The minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the predicted amount taken from the account","example":"GBP","type":"string"}},"required":["value","currency"],"type":"object"},"amountRange":{"properties":{"value":{"description":"The predicted range of the recurring transaction in minor units of the currency, eg. pennies for GBP.","example":5000,"type":"integer"},"majorUnits":{"description":"The major units of the value, based on the values currency, eg. pounds for GBP.","example":50,"type":"integer"},"minorUnits":{"description":"The minor units of the value, based on the values currency, eg. pennies for GBP.","example":0,"type":"integer"},"currency":{"description":"The currency of the predicted range taken from the account","example":"GBP","type":"string"}},"required":["value","currency"],"type":"object"},"monthlyAmount":{"properties":{"value":{"description":"The predicted monthly amount for this counterparty, regardless of how many transactions in minor units of the currency, eg. pennies for GBP.","example":5000,"type":"integer"},"majorUnits":{"description":"The major units of the value, based on the values currency, eg. pounds for GBP.","example":50,"type":"integer"},"minorUnits":{"description":"The minor units of the value, based on the values currency, eg. pennies for GBP.","example":0,"type":"integer"},"currency":{"description":"The currency of the monthly amount taken from the account","example":"GBP","type":"string"}},"required":["value","currency"],"type":"object"},"predictionSource":{"description":"The source of the prediction","enum":["moneyhub"],"example":"moneyhub","type":"string"},"monthlyAverageOnly":{"description":"A flag indicating whether the predictions are based only on a monthly average or not. If the predictions are based solely on monthly averages then the dates array will be defaulted to the end of the month for the next 3 motnhs.","type":"boolean","example":false},"dates":{"type":"array","items":{"type":"string","example":"2018-07-10","format":"date"},"example":["2019-03-07","2019-04-07","2019-05-07"]}}},"Category":{"additionalProperties":false,"properties":{"categoryId":{"description":"The id of the category. Custom categories are prefixed with 'cus:'","example":"std:338d2636-7f88-491d-8129-255c98da1eb8","type":"string","pattern":"^(std|cus):(\\w|-)+$"},"name":{"description":"The name of the category - only applicable for custom categories","example":"Days Out","type":"string"},"key":{"description":"A text key for standard categories","example":"wages","type":"string"},"group":{"description":"The category group to which the category belongs","example":"group:2","type":"string"}},"type":"object","required":["categoryId","group"]},"CategoryPost":{"properties":{"group":{"description":"The id of the category group that the custom category should be part of","type":"string","pattern":"^group:\\d+"},"name":{"description":"The name of the custom category","type":"string"}},"example":{"group":"group:1","name":"Bus travel"},"required":["group","name"],"type":"object"},"CategoryGroup":{"additionalProperties":false,"properties":{"id":{"description":"The id of the category group.","example":"group-1","type":"string"},"key":{"description":"A text key for the category group","example":"bills","type":"string"}},"type":"object","required":["id","key"]},"NotificationThreshold":{"additionalProperties":false,"type":"object","properties":{"id":{"description":"The id of the threshold, used to update and delete it","example":"199cae84-6876-4dc6-b905-9de7593be6d0","type":"string"},"value":{"description":"The value of the threshold in minor units of the currency, eg. pennies for GBP.","example":10000,"type":"integer"},"type":{"description":"The type of threshold, either great than or less than","enum":["gt","lt"],"example":"lt","type":"string"}}},"NotificationThresholdPost":{"additionalProperties":false,"type":"object","properties":{"value":{"description":"The value of the threshold in minor units of the currency, eg. pennies for GBP.","example":10000,"type":"integer"},"type":{"description":"The type of threshold, either great than or less than","enum":["gt","lt"],"example":"lt","type":"string"}},"required":["value","type"]},"StandingOrder":{"additionalProperties":false,"type":"object","properties":{"id":{"description":"The unique identity of the standing order","example":"d4c69cda-cd58-4bd3-b950-b085d97cc629","type":"string"},"status":{"enum":["Active","Inactive"],"type":"string"},"reference":{"description":"The name or description given to the standing order","type":"string"},"frequency":{"additionalProperties":false,"properties":{"repeat":{"enum":["Daily","Weekly","Monthly","Quarterly","Yearly"],"example":"Daily","type":"string"},"day":{"description":"The number of the day on which to repeat the payment","type":"number","example":1},"week":{"description":"The number of the week on which to repeat the payment","type":"number","example":1},"month":{"description":"The number of the month on which to repeat the payment","type":"number","example":1},"onlyWorkDays":{"description":"Specifies whether the payment should only be made on working days","type":"boolean","example":false},"region":{"description":"The region for dates of quarterly payments","enum":["ENGLISH","SCOTTISH","RECEIVED"],"type":"string"}},"required":["repeat"],"type":"object"},"numberOfPayments":{"description":"The number of recurring payments to complete the standing order","example":5,"type":"number"},"firstPaymentDate":{"example":"2020-11-02T00:00:00.000Z","format":"date-time","type":"string"},"nextPaymentDate":{"example":"2020-12-02T00:00:00.000Z","format":"date-time","type":"string"},"finalPaymentDate":{"example":"2021-01-02T00:00:00.000Z","format":"date-time","type":"string"},"firstPaymentAmount":{"description":"The value of the first payment in minor units of the currency, eg. pennies for GBP.","properties":{"value":{"description":"The amount of the transaction in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":2000,"type":"integer"},"majorUnits":{"description":"The major units of the value, based on the values currency, eg. pounds for GBP.","example":20,"type":"integer"},"minorUnits":{"description":"The minor units of the value, based on the values currency, eg. pennies for GBP.","example":0,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}}},"nextPaymentAmount":{"description":"The value of the next payment in minor units of the currency, eg. pennies for GBP.","properties":{"value":{"description":"The amount of the transaction in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":1000,"type":"integer"},"majorUnits":{"description":"The major units of the value, based on the values currency, eg. pounds for GBP.","example":10,"type":"integer"},"minorUnits":{"description":"The minor units of the value, based on the values currency, eg. pennies for GBP.","example":0,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}}},"finalPaymentAmount":{"description":"The value of the final payment in minor units of the currency, eg. pennies for GBP.","properties":{"value":{"description":"The amount of the transaction in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":999,"type":"integer"},"majorUnits":{"description":"The major units of the value, based on the values currency, eg. pounds for GBP.","example":99,"type":"integer"},"minorUnits":{"description":"The minor units of the value, based on the values currency, eg. pennies for GBP.","example":9,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}}},"currency":{"description":"The currency of the standing order","example":"GBP","type":"string"},"payee":{"additionalProperties":false,"description":"The details to identify the beneficiary account. It requires the **standing_orders_detail:read** scope.","properties":{"name":{"description":"The name or names of the account owner(s)","type":"string","example":"Payee Name"},"sortCodeAccountNumber":{"description":"For cash accounts. Populated with the 6 digit Sort Code and 8 digit Account Number.","type":"string","maxLength":20,"minLength":14,"example":"60161331926819"},"iban":{"description":"For cash accounts. Populated with the full IBAN number.","type":"string","maxLength":34,"minLength":18,"example":"GB2960161331926819"},"pan":{"description":"For card accounts. Populated with the Primary Account Number.","type":"string","example":"1234567812345678"}},"type":"object"}},"required":["id","frequency"]},"Statement":{"type":"object","required":["id","accountId","userId","providerStatementId","providerAccountId","type","startDate","endDate","creationDate"],"additionalProperties":false,"properties":{"id":{"type":"string"},"accountId":{"type":"string"},"userId":{"type":"string"},"providerStatementId":{"type":"string"},"providerAccountId":{"type":"string"},"reference":{"type":"string"},"type":{"type":"string","enum":["AccountClosure","AccountOpening","Annual","Interim","RegularPeriodic"]},"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"creationDate":{"type":"string","format":"date-time"},"description":{"type":"string"},"benefits":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string"},"amount":{"additionalProperties":false,"type":"object","properties":{"value":{"description":"The amount in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The positive major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The positive minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"]}}}},"fees":{"type":"array","items":{"type":"object","required":["creditDebitIndicator","type","amount"],"properties":{"description":{"type":"string"},"creditDebitIndicator":{"type":"string"},"type":{"type":"string"},"rate":{"type":"string"},"rateType":{"type":"string","enum":["BOEBaseRate","FixedRate","Gross","LoanProviderBaseRate","Net"]},"frequency":{"type":"string","enum":["ChargingPeriod","PerTransactionAmount","PerTransactionPercentage","Quarterly","StatementMonthly","Weekly"]},"amount":{"additionalProperties":false,"type":"object","properties":{"value":{"description":"The amount in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The positive major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The positive minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"]}}}},"interest":{"type":"array","items":{"type":"object","required":["amount"],"properties":{"description":{"type":"string"},"creditDebitIndicator":{"type":"string"},"rate":{"type":"string"},"rateType":{"type":"string","enum":["BOEBaseRate","FixedRate","Gross","LoanProviderBaseRate","Net"]},"frequency":{"type":"string","enum":["Daily","HalfYearly","Monthly","PerStatementDate","Quarterly","Weekly","Yearly"]},"type":{"type":"string"},"amount":{"additionalProperties":false,"type":"object","properties":{"value":{"description":"The amount in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The positive major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The positive minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"]}}}},"amounts":{"type":"array","items":{"type":"object","required":["creditDebitIndicator","type","amount"],"properties":{"creditDebitIndicator":{"type":"string"},"type":{"type":"string"},"amount":{"additionalProperties":false,"type":"object","properties":{"value":{"description":"The amount in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The positive major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The positive minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"]},"amountSubType":{"type":"string","enum":["BaseCurrency","LocalCurrency"]},"localAmount":{"additionalProperties":false,"type":"object","properties":{"value":{"description":"The amount in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The positive major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The positive minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"]},"localAmountSubType":{"type":"string","enum":["BaseCurrency","LocalCurrency"]}}}},"dates":{"type":"array","items":{"type":"object","required":["date","type"],"properties":{"date":{"type":"string","format":"date-time"},"type":{"type":"string"}}}},"rates":{"type":"array","items":{"type":"object","required":["rate","type"],"properties":{"rate":{"type":"string"},"type":{"type":"string"}}}},"values":{"type":"array","items":{"type":"object","required":["value","type"],"properties":{"value":{"type":"string"},"type":{"type":"string"}}}},"totalValue":{"additionalProperties":false,"type":"object","properties":{"value":{"description":"The amount in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The positive major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The positive minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"]},"currency":{"type":"string"}}},"Project":{"additionalProperties":false,"properties":{"id":{"description":"The unique identifier for the project"},"name":{"description":"The name of the project","type":"string","example":"Home Improvement"},"accountIds":{"description":"Account IDs that are associated with the project","type":"array","items":{"type":"string"},"example":["c390a94f-2309-4cdf-8d02-b0c5304d9f66"]},"type":{"description":"The project type","type":"string","enum":["PropertyProject","RentalProject","GenericProject"],"example":"PropertyProject"},"dateCreated":{"description":"The date the project was created","format":"date-time","type":"string","example":"2018-07-11T03:51:08.000Z"},"archived":{"description":"Flag to show if project is archived or not","type":"boolean","example":false}},"example":{"name":"Home Improvement","accountIds":["c390a94f-2309-4cdf-8d02-b0c5304d9f66"],"type":"RentalProject","dateCreated":"2018-07-11T03:51:08.000Z","archived":false},"required":["id","name","accountIds","type"],"type":"object"},"ProjectPatch":{"additionalProperties":false,"properties":{"name":{"description":"The name of the project","type":"string","example":"Home Improvement"},"accountIds":{"description":"Account IDs that are associated with the project","type":"array","items":{"type":"string"},"example":["c390a94f-2309-4cdf-8d02-b0c5304d9f66"]},"type":{"description":"The project type","type":"string","enum":["PropertyProject","RentalProject","GenericProject"],"example":"PropertyProject"},"archived":{"description":"Flag to determine if project is archived or not","type":"boolean","example":true}},"example":{"name":"Home Improvement","accountIds":["c390a94f-2309-4cdf-8d02-b0c5304d9f66"],"type":"RentalProject","archived":true},"type":"object"},"ProjectPost":{"additionalProperties":false,"properties":{"name":{"description":"The name of the project","type":"string","example":"Home Improvement"},"accountIds":{"description":"Account IDs that are associated with the project","type":"array","items":{"type":"string"},"example":["c390a94f-2309-4cdf-8d02-b0c5304d9f66"]},"type":{"description":"The project type","type":"string","enum":["PropertyProject","RentalProject","GenericProject"],"example":"RentalProject"}},"example":{"name":"Home Improvement","accountIds":["c390a94f-2309-4cdf-8d02-b0c5304d9f66"],"type":"RentalProject"},"required":["name","type"],"type":"object"},"TransactionDetails":{"additionalProperties":false,"type":"object","required":["count","earliestDate","lastDate"],"properties":{"count":{"type":"integer","example":6},"earliestDate":{"type":"string","format":"date-time","example":"2017-11-28T00:00:00.000Z"},"lastDate":{"type":"string","format":"date-time","example":"2018-05-28T00:00:00.000Z"}}},"Transaction":{"additionalProperties":false,"type":"object","properties":{"accountId":{"description":"The id of the account the transaction belongs to","example":"c390a94f-2309-4cdf-8d02-b0c5304d9f66","type":"string"},"amount":{"properties":{"value":{"description":"The amount of the transaction in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"],"type":"object"},"categoryId":{"description":"The category id. Standard categories are prefixed with 'std', custom categories are prefixed with 'cus'","example":"std:4b0255f0-0309-4509-9e05-4b4e386f9b0d","type":"string","pattern":"^(std|cus):(\\w|-)+$"},"categoryIdConfirmed":{"description":"Flag indicating whether the user has confirmed the category id as correct","example":false,"type":"boolean"},"date":{"description":"The date that the transaction occurred. Where available this will contain an accurate time, where the time is not available it will default to midday.","example":"2018-07-10T12:00:00.000Z","format":"date-time","type":"string"},"dateModified":{"description":"The date the transaction was modified - this could be when it was added, or a category changed, or when notes were added","example":"2018-07-10T11:39:46.506Z","format":"date-time","type":"string"},"dateCreated":{"description":"The date the transaction was created","example":"2018-07-10T11:39:46.506Z","format":"date-time","type":"string"},"id":{"description":"The unique id of the transaction","example":"c390a94f-3824-4cdf-8d02-b0c5304d9f66","type":"string"},"longDescription":{"description":"The full text description of the transactions - often as it is represented on the users bank statement","example":"Card Purchase SAINSBURYS S/MKTS  BCC","type":"string"},"providerId":{"description":"The id of the transaction the banking provider uses","example":"139ccc24c1","type":"string"},"notes":{"default":"","description":"Arbitrary text that a user can add about a transaction","example":"Some notes about the transaction","type":"string"},"shortDescription":{"description":"A cleaned up and shorter description of the transaction, this can be edited","example":"Sainsburys S/mkts","type":"string"},"counterpartyId":{"description":"An identifier for the counterparty","example":"30be8fa43f30fc285e4c479e9dfd6a1dec2bead8ee6cc6276b8dac152c565e9e","type":"string"},"status":{"description":"Whether the transaction has been posted (booked) or is still a pending transaction. During the transition from pending to posted the description will normally change.","enum":["posted","pending"],"example":"posted","type":"string"},"projectId":{"description":"The project ID the transaction belongs to","example":"30be8fa43f30fc285e4c479e9dfd6a1dec2bead8ee6cc6276b8dac152c565e9e","type":"string"},"enhancedCategories":{"additionalProperties":false,"type":"object","description":"Categories to enrich a transaction with","properties":{"uk-tax-hmrc":{"description":"The UK HMRC Tax category to aid in tax return queries","example":"income.rent","type":"string","pattern":"^(income|expenditure)\\.([a-zA-Z-]+)$"}},"example":{"uk-tax-hmrc":"income.rent"}},"splits":{"description":"List of transaction splits","type":"array","items":{"additionalProperties":false,"properties":{"amount":{"properties":{"value":{"description":"The amount of the transaction in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}}},"categoryId":{"description":"The category id. Standard categories are prefixed with 'std', custom categories are prefixed with 'cus'","example":"std:4b0255f0-0309-4509-9e05-4b4e386f9b0d","type":"string","pattern":"^(std|cus):(\\w|-)+$"},"description":{"description":"A description of the transaction split","example":"Groceries contribution","type":"string"},"id":{"description":"The unique id of the transaction split","example":"c390a94f-3824-4cdf-8d02-b0c5304d9f66","type":"string"},"projectId":{"description":"The project ID the transaction is associated with","example":"30be8fa43f30fc285e4c479e9dfd6a1dec2bead8ee6cc6276b8dac152c565e9e","type":"string"}},"example":{"amount":{"value":-2300,"majorUnits":23,"minorUnits":0,"currency":"GBP"},"categoryId":"std:4b0255f0-0309-4509-9e05-4b4e386f9b0d","id":"c390a94f-3824-4cdf-8d02-b0c5304d9f66","projectId":"30be8fa43f30fc285e4c479e9dfd6a1dec2bead8ee6cc6276b8dac152c565e9e","description":"Split 1"},"required":["amount","categoryId","description","id"],"type":"object"}},"transactionCode":{"description":"The ISO transaction code","type":"object","properties":{"code":{"description":"Specifies the family within a domain.","example":"BAC","type":"string"},"subCode":{"description":"Specifies the sub-product family within a specific family.","type":"string"}},"required":["code","subCode"]},"proprietaryTransactionCode":{"description":"Set of elements to fully identify a proprietary bank transaction code.","type":"object","properties":{"code":{"description":"Proprietary bank transaction code to identify the underlying transaction.","example":"BAC","type":"string"},"issuer":{"description":"Identification of the issuer of the proprietary bank transaction code.","type":"string"}},"required":["code"]},"balance":{"description":"The amount of the account post transaction in minor units of the currency, eg. pennies for GBP.","properties":{"value":{"description":"The amount of the transaction in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}}},"balanceType":{"description":"Balance type, in a coded form. Options include: ClosingAvailable ClosingBooked ClosingCleared Expected ForwardAvailable Information InterimAvailable InterimBooked InterimCleared OpeningAvailable OpeningBooked OpeningCleared PreviouslyClosedBooked.","example":"Information","type":"string"},"statementReference":{"description":"Unique reference for the statement. This reference may be optionally populated if available.","example":"Merchant Name Unique Reference","type":"string"},"merchantName":{"description":"Name by which the merchant is known.","example":"Merchant Name","type":"string"},"merchantCategoryCode":{"description":"Category code conform to ISO 18245, related to the type of services or goods the merchant provides for the transaction.","example":"50C","type":"string"},"cardInstrument":{"description":"Set of elements to describe the card instrument used in the transaction.","additionalProperties":false,"type":"object","properties":{"name":{"description":"Name of the cardholder using the card instrument.","example":"Mrs J Bloggs","type":"string"},"pan":{"description":"The PAN of the card used in the transaction. This is known by the account owner, and may be masked.","example":"xxxxxxxxxxxx4321","type":"string"},"cardSchemeName":{"description":"Name of the card scheme.","example":"VISA","type":"string","pattern":"^(AmericanExpress|Diners|Discover|MasterCard|VISA|.*)$"},"authorisationType":{"description":"The card authorisation type.","example":"Contactless","type":"string","pattern":"^(ConsumerDevice|Contactless|None|PIN|.*)$"}}},"creditorAccount":{"description":"Unambiguous identification of the account of the creditor, in the case of a debit transaction.","additionalProperties":false,"type":"object","properties":{"name":{"description":"The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.","type":"string"},"sortCode":{"description":"The sort code of the creditor account","type":"string"},"accountNumber":{"description":"The account number of the creditor account","type":"string"},"iban":{"description":"The IBAN of the creditor account","type":"string"},"pan":{"description":"The PAN of the creditor account","type":"string"}}},"creditorAgent":{"description":"Financial institution servicing an account for the creditor.","additionalProperties":false,"type":"object","properties":{"name":{"description":"Name by which an agent is known and which is usually used to identify that agent.","type":"string"},"postalAddress":{"description":"The postal address for the financial institution","type":"object","additionalProperties":true}}},"debtorAccount":{"description":"Unambiguous identification of the account of the debtor, in the case of a credit transaction.","additionalProperties":false,"type":"object","properties":{"name":{"description":"The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.","type":"string"},"sortCode":{"description":"The sort code of the debtor account","type":"string"},"accountNumber":{"description":"The account number of the debtor account","type":"string"},"iban":{"description":"The IBAN of the debtor account","type":"string"},"pan":{"description":"The PAN of the debtor account","type":"string"}}},"debtorAgent":{"description":"Financial institution servicing an account for the debtor.","additionalProperties":false,"type":"object","properties":{"name":{"description":"Name by which an agent is known and which is usually used to identify that agent.","type":"string"},"postalAddress":{"description":"The postal address for the financial institution","type":"object","additionalProperties":true}}}},"required":["amount","categoryId","categoryIdConfirmed","date","dateModified","id","longDescription","notes","shortDescription","status"]},"TransactionPost":{"additionalProperties":false,"type":"object","properties":{"accountId":{"description":"The id of the account the transaction belongs to","example":"c390a94f-2309-4cdf-8d02-b0c5304d9f66","type":"string"},"amount":{"properties":{"value":{"description":"The amount of the transaction in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2300,"type":"integer"}},"required":["value"],"type":"object"},"categoryId":{"description":"The category id. Standard categories are prefixed with 'std', custom categories are prefixed with 'cus'","example":"std:4b0255f0-0309-4509-9e05-4b4e386f9b0d","type":"string","pattern":"^(std|cus):(\\w|-)+$"},"categoryIdConfirmed":{"description":"Flag indicating whether the user has confirmed the category id as correct","example":false,"type":"boolean"},"date":{"description":"The date that the transaction occurred. Where available this will contain an accurate time, where the time is not available it will default to midday.","example":"2018-07-10T12:00:00.000Z","format":"date-time","type":"string"},"longDescription":{"description":"The full text description of the transactions - often as it is represented on the users bank statement","example":"Card Purchase SAINSBURYS S/MKTS  BCC","type":"string"},"shortDescription":{"description":"A cleaned up and shorter description of the transaction, this can be edited","example":"Sainsburys S/mkts","type":"string"},"notes":{"default":"","description":"Arbitrary text that a user can add about a transaction","example":"Some notes about the transaction","type":"string","maxLength":500},"status":{"description":"Whether the transaction has been posted (booked) or is still a pending transaction. During the transition from pending to posted the description will normally change.","enum":["posted","pending"],"example":"posted","type":"string"},"projectId":{"description":"The project ID the transaction is associated with","example":"30be8fa43f30fc285e4c479e9dfd6a1dec2bead8ee6cc6276b8dac152c565e9e","type":"string"},"enhancedCategories":{"additionalProperties":false,"type":"object","description":"Categories to enrich a transaction with","properties":{"uk-tax-hmrc":{"description":"The UK HMRC Tax category to aid in tax return queries","example":"income.rent","type":"string","pattern":"^(income|expenditure)\\.([a-zA-Z-]+)$"}},"example":{"uk-tax-hmrc":"income.rent"}}},"example":{"accountId":"c390a94f-2309-4cdf-8d02-b0c5304d9f66","amount":{"value":-2300},"categoryId":"std:4b0255f0-0309-4509-9e05-4b4e386f9b0d","categoryIdConfirmed":true,"longDescription":"New transaction","shortDescription":"transaction","notes":"notes","status":"posted","date":"2018-07-10T12:00:00+00:00"},"required":["accountId","amount","categoryId","date","longDescription"]},"TransactionPatch":{"additionalProperties":false,"type":"object","properties":{"accountId":{"description":"Scope 'transactions.write.all' required. The id of the account the transaction belongs to","example":"c390a94f-2309-4cdf-8d02-b0c5304d9f66","type":"string"},"amount":{"properties":{"value":{"description":"Scope 'transactions.write.all' required. The amount of the transaction in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2300,"type":"integer"}},"required":["value"],"type":"object"},"categoryId":{"description":"The category id. Standard categories are prefixed with 'std', custom categories are prefixed with 'cus'","example":"std:09f5c144-6d90-4228-98c6-cac1331d874b","type":"string","pattern":"^(std|cus):(\\w|-)+$"},"categoryIdConfirmed":{"description":"Flag indicating whether the user has confirmed the category id as correct","example":false,"type":"boolean"},"date":{"description":"Scope 'transactions.write.all' required. The date that the transaction occurred. Where available this will contain an accurate time, where the time is not available it will default to midday.","example":"2018-07-10T12:00:00.000Z","format":"date-time","type":"string"},"longDescription":{"description":"Scope 'transactions.write.all' required. The full text description of the transactions - often as it is represented on the users bank statement","example":"Card Purchase SAINSBURYS S/MKTS  BCC","type":"string"},"shortDescription":{"description":"A cleaned up and shorter description of the transaction, this can be edited","example":"Sainsburys S/mkts","type":"string"},"notes":{"default":"","description":"Arbitrary text that a user can add about a transaction","example":"Some notes about the transaction","type":"string","maxLength":500},"status":{"description":"Scope 'transactions.write.all' required. Whether the transaction has been posted (booked) or is still a pending transaction. During the transition from pending to posted the description will normally change.","enum":["posted","pending"],"example":"posted","type":"string"},"projectId":{"description":"The project ID the transaction is associated with","example":"30be8fa43f30fc285e4c479e9dfd6a1dec2bead8ee6cc6276b8dac152c565e9e","type":"string"},"enhancedCategories":{"additionalProperties":false,"type":"object","description":"Categories to enrich a transaction with","properties":{"uk-tax-hmrc":{"description":"The UK HMRC Tax category to aid in tax return queries","example":"income.rent","type":"string","pattern":"^(income|expenditure)\\.([a-zA-Z-]+)$"}},"example":{"uk-tax-hmrc":"income.rent"}}},"example":{"accountId":"c390a94f-2309-4cdf-8d02-b0c5304d9f66","amount":{"value":-51000},"categoryId":"std:09f5c144-6d90-4228-98c6-cac1331d874b","categoryIdConfirmed":true,"longDescription":"New long description","shortDescription":"New short description","notes":"New notes","status":"posted","date":"2018-07-10T12:00:00+00:00"}},"TransactionCollectionPost":{"items":{"additionalProperties":false,"type":"object","properties":{"accountId":{"description":"The id of the account the transaction belongs to","example":"c390a94f-2309-4cdf-8d02-b0c5304d9f66","type":"string"},"amount":{"properties":{"value":{"description":"The amount of the transaction in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2300,"type":"integer"}},"required":["value"],"type":"object"},"categoryId":{"description":"The category id. Standard categories are prefixed with 'std', custom categories are prefixed with 'cus'","example":"std:4b0255f0-0309-4509-9e05-4b4e386f9b0d","type":"string","pattern":"^(std|cus):(\\w|-)+$"},"categoryIdConfirmed":{"description":"Flag indicating whether the user has confirmed the category id as correct","example":false,"type":"boolean"},"date":{"description":"The date that the transaction occurred. Where available this will contain an accurate time, where the time is not available it will default to midday.","example":"2018-07-10T12:00:00.000Z","format":"date-time","type":"string"},"longDescription":{"description":"The full text description of the transactions - often as it is represented on the users bank statement","example":"Card Purchase SAINSBURYS S/MKTS  BCC","type":"string"},"shortDescription":{"description":"A cleaned up and shorter description of the transaction, this can be edited","example":"Sainsburys S/mkts","type":"string"},"notes":{"default":"","description":"Arbitrary text that a user can add about a transaction","example":"Some notes about the transaction","type":"string","maxLength":500},"status":{"description":"Whether the transaction has been posted (booked) or is still a pending transaction. During the transition from pending to posted the description will normally change.","enum":["posted","pending"],"example":"posted","type":"string"},"projectId":{"description":"The project ID the transaction is associated with","example":"30be8fa43f30fc285e4c479e9dfd6a1dec2bead8ee6cc6276b8dac152c565e9e","type":"string"},"enhancedCategories":{"additionalProperties":false,"type":"object","description":"Categories to enrich a transaction with","properties":{"uk-tax-hmrc":{"description":"The UK HMRC Tax category to aid in tax return queries","example":"income.rent","type":"string","pattern":"^(income|expenditure)\\.([a-zA-Z-]+)$"}},"example":{"uk-tax-hmrc":"income.rent"}}},"example":{"accountId":"c390a94f-2309-4cdf-8d02-b0c5304d9f66","amount":{"value":-2300},"categoryId":"std:4b0255f0-0309-4509-9e05-4b4e386f9b0d","categoryIdConfirmed":true,"longDescription":"New transaction","shortDescription":"transaction","notes":"notes","status":"posted","date":"2018-07-10T12:00:00+00:00"},"required":["accountId","amount","categoryId","date","longDescription"]},"type":"array","description":"List of transactions to be created or updated. Minimum 1 item required. Maximum 50 items allowed.","example":[{"accountId":"c390a94f-2309-4cdf-8d02-b0c5304d9f66","amount":{"value":-4500},"categoryId":"std:4b0255f0-0309-4509-9e05-4b4e386f9b0d","categoryIdConfirmed":true,"longDescription":"Long description 1","shortDescription":"description 1","notes":"notes","status":"posted","date":"2018-07-10T12:00:00+00:00"},{"accountId":"c390a94f-2309-4cdf-8d02-b0c5304d9f66","amount":{"value":7800},"categoryId":"std:4b0255f0-0309-4509-9e05-4b4e386f9b0d","longDescription":"Long description 2","notes":"notes","status":"pending","date":"2018-07-10T12:00:00+00:00"}]},"TransactionFile":{"additionalProperties":false,"type":"object","properties":{"id":{"description":"The id of the file attached to the transaction","example":"c390a94f-2309-4cdf-8d02-b0c5304d9f66","type":"string"},"fileType":{"description":"The MIME type of the file","example":"text/html","type":"string"},"fileName":{"description":"The name of the file attachment","example":"receipt.png","type":"string"},"url":{"description":"The signed URL that is valid for 5 minutes that allows access to the attachment","example":"https://s3.amazon.com/receipt.png","type":"string"}},"required":["id","fileType","fileName","url"]},"TransactionSplit":{"additionalProperties":false,"properties":{"amount":{"properties":{"value":{"description":"The amount of the transaction in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}}},"categoryId":{"description":"The category id. Standard categories are prefixed with 'std', custom categories are prefixed with 'cus'","example":"std:4b0255f0-0309-4509-9e05-4b4e386f9b0d","type":"string","pattern":"^(std|cus):(\\w|-)+$"},"description":{"description":"A description of the transaction split","example":"Groceries contribution","type":"string"},"id":{"description":"The unique id of the transaction split","example":"c390a94f-3824-4cdf-8d02-b0c5304d9f66","type":"string"},"projectId":{"description":"The project ID the transaction is associated with","example":"30be8fa43f30fc285e4c479e9dfd6a1dec2bead8ee6cc6276b8dac152c565e9e","type":"string"}},"example":{"amount":{"value":-2300,"majorUnits":23,"minorUnits":0,"currency":"GBP"},"categoryId":"std:4b0255f0-0309-4509-9e05-4b4e386f9b0d","id":"c390a94f-3824-4cdf-8d02-b0c5304d9f66","projectId":"30be8fa43f30fc285e4c479e9dfd6a1dec2bead8ee6cc6276b8dac152c565e9e","description":"Split 1"},"required":["amount","categoryId","description","id"],"type":"object"},"TransactionSplitPatch":{"additionalProperties":false,"properties":{"categoryId":{"description":"The category id. Standard categories are prefixed with 'std', custom categories are prefixed with 'cus'","example":"std:4b0255f0-0309-4509-9e05-4b4e386f9b0d","type":"string","pattern":"^(std|cus):(\\w|-)+$"},"description":{"description":"A description of the transaction split","example":"Groceries contribution","type":"string"},"projectId":{"description":"The project ID the transaction is associated with","example":"30be8fa43f30fc285e4c479e9dfd6a1dec2bead8ee6cc6276b8dac152c565e9e","type":"string"}},"example":{"categoryId":"std:4b0255f0-0309-4509-9e05-4b4e386f9b0d"},"type":"object"},"TransactionSplitPost":{"additionalProperties":false,"properties":{"amount":{"description":"The amount of the transaction in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2300,"type":"integer"},"categoryId":{"description":"The category id. Standard categories are prefixed with 'std', custom categories are prefixed with 'cus'","example":"std:4b0255f0-0309-4509-9e05-4b4e386f9b0d","type":"string","pattern":"^(std|cus):(\\w|-)+$"},"description":{"description":"A description of the transaction split","example":"Groceries contribution","type":"string"},"projectId":{"description":"The project ID the transaction is associated with","example":"30be8fa43f30fc285e4c479e9dfd6a1dec2bead8ee6cc6276b8dac152c565e9e","type":"string"}},"example":{"amount":-2300,"categoryId":"std:4b0255f0-0309-4509-9e05-4b4e386f9b0d","projectId":"30be8fa43f30fc285e4c479e9dfd6a1dec2bead8ee6cc6276b8dac152c565e9e","description":"Split 1"},"required":["amount","categoryId","description"],"type":"object"},"RegularTransactions":{"additionalProperties":false,"type":"object","properties":{"seriesId":{"description":"The unique identity of the series.","example":"ac9bd177-d01e-449c-9f29-d3656d2edc2e","type":"string"},"accountId":{"description":"The unique identity of the account.","example":"ac9bd177-d01e-449c-9f29-d3656d2edc2e","type":"string"},"type":{"description":"Whether the transaction is income or payment","example":"payment","type":"string","enum":["payment","income"]},"description":{"description":"The full text description of the transactions - often as it is represented on the users bank statement","example":"Card Purchase SAINSBURYS S/MKTS  BCC","type":"string"},"cleanedDescription":{"description":"A cleaned up and shorter description of the transaction, this can be edited","example":"Sainsburys S/mkts","type":"string"},"counterpartyId":{"description":"A matching id of the counterparty of the series","example":"4bac27393bdd9777ce02453256c5577cd02275510b2227f473d03f533924f877","type":"string"},"frequency":{"description":"The time between payments in the series","example":"monthly","type":"string","enum":["weekly","fortnightly","monthly","quarterly","yearly"]},"numTxMatchedInSeries":{"description":"The count of the transactions in the series","example":"5","type":"integer"},"gapLengthInFreqUnits":{"description":"The count of expected dates with no corresponding transactions","example":"1","type":"integer"},"dateAnomaliesCount":{"description":"The count of transactions which occurred outside the predicted date range","example":"0","type":"integer"},"numReturnedTxs":{"description":"The count of transactions we have detected were returned (reversed/declined)","example":"3","type":"integer"},"lastDate":{"description":"Date on which the most recent transaction in the series occured","example":"2018-07-10","format":"date","type":"string"},"predictedDate":{"description":"Predicted date the next transactions is most likely to occur","example":"2018-07-10","format":"date","type":"string"},"predictedDateEarliest":{"description":"Earliest predicted date of the next transaction in the series","example":"2018-07-08","format":"date","type":"string"},"predictedDateLatest":{"description":"Lastest predicted date of the next transaction in the series","example":"2018-07-12","format":"date","type":"string"},"predictedTxLateOrNotDetected":{"description":"Is the predicted payment late or not detected?","example":"false","type":"boolean"},"predictedAmount":{"description":"Predicted amount of the next transaction","properties":{"value":{"description":"The amount of the transaction in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-2323,"type":"integer"},"majorUnits":{"description":"The major units of the value, based on the values currency, eg. pounds for GBP.","example":23,"type":"integer"},"minorUnits":{"description":"The minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"],"type":"object"},"predictedAmountLower":{"description":"The smallest amount predicted for the next transaction","properties":{"value":{"description":"The amount of the transaction in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-357,"type":"integer"},"majorUnits":{"description":"The major units of the value, based on the values currency, eg. pounds for GBP.","example":35,"type":"integer"},"minorUnits":{"description":"The minor units of the value, based on the values currency, eg. pennies for GBP.","example":7,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"],"type":"object"},"predictedAmountUpper":{"description":"The largest amount predicted for the next transaction","properties":{"value":{"description":"The amount of the transaction in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":-5357,"type":"integer"},"majorUnits":{"description":"The major units of the value, based on the values currency, eg. pounds for GBP.","example":53,"type":"integer"},"minorUnits":{"description":"The minor units of the value, based on the values currency, eg. pennies for GBP.","example":57,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"],"type":"object"},"predictedCategoryId":{"description":"The category id. Standard categories are prefixed with 'std', custom categories are prefixed with 'cus'","example":"std:4b0255f0-0309-4509-9e05-4b4e386f9b0d","type":"string","pattern":"^(std|cus):(\\w|-)+$"},"transactions":{"description":"An array of transaction IDs","type":"array","items":{"type":"string","example":["ac9bd177-d01e-449c-9f29-d3656d2edc2e","0b4e6488-6de0-420c-8f56-fee665707d57"]}}},"required":["seriesId","accountId","type","cleanedDescription","frequency","numTxMatchedInSeries","lastDate","predictedDate","predictedAmount","transactions"]},"RentalRecords":{"type":"object","additionalProperties":false,"properties":{"id":{"type":"string","example":"ac9bd177-d01e-449c-9f29-d3656d2edc2e","description":"The unique identifier for the rental recognition record."},"userId":{"type":"string","example":"ac9bd177-d01e-449c-9f29-d3656d2edc2e","description":"The unique identifier for the user."},"title":{"type":"string","example":"Ms","description":"Title of the user the rental record belongs to.","maxLength":5},"firstName":{"type":"string","description":"First name of the user the rental record belongs to.","example":"name"},"lastName":{"type":"string","description":"Last name of the user the rental record belongs to.","example":"surname"},"birthdate":{"type":"string","format":"date","description":"Date of birth of the user the rental record belongs to.","example":"2021-01-31","pattern":"^\\d{4}-\\d{1,2}-\\d{1,2}$"},"addressLine1":{"type":"string","description":"First line of the rented address.","example":"123 Example Road"},"addressLine2":{"description":"Second line of the rented address.","example":"Building","nullable":true,"type":"string"},"addressLine3":{"description":"Third line of the rented address.","example":"City","nullable":true,"type":"string"},"addressLine4":{"description":"Fourth line of the rented address.","example":"County","nullable":true,"type":"string"},"postalCode":{"type":"string","description":"Postal code of rented address.","example":"BS1 6QF","maxLength":8,"pattern":"^[a-zA-Z0-9- ]+$"},"tenancyStartDate":{"type":"string","format":"date","example":"2021-01-31","description":"Start date of the tenancy agreement.","pattern":"^\\d{4}-\\d{1,2}-\\d{1,2}$"},"rentalAmount":{"type":"object","properties":{"value":{"type":"number","description":"The amount of the regular rental transactions in minor units of the currency e.g. pennies for GBP.","example":10000},"majorUnits":{"description":"The major units of the value, based on the values currency, eg. pounds for GBP.","example":100,"type":"integer"},"minorUnits":{"description":"The minor units of the value, based on the values currency, eg. pennies for GBP.","example":0,"type":"integer"},"currency":{"type":"string","description":"The currency of the amount.","example":"GBP"}},"description":"The value of the balance in minor units of the currency, eg. pennies for GBP."},"rentalFrequency":{"type":"string","enum":["weekly","fortnightly","monthly"],"description":"Frequency of the rental payments e.g. monthly."},"seriesId":{"type":"string","description":"The unique identity of the regular transaction series.","example":"ac9bd177-d01e-449c-9f29-d3656d2edc2e"},"createdAt":{"description":"The date at which the rental record was added.","example":"2018-07-10T11:39:44.000Z","format":"date-time","type":"string"},"modifiedAt":{"description":"The date at which the rental was modified.","example":"2018-07-10T11:39:44.000Z","format":"date-time","type":"string"},"lastSubmittedDate":{"description":"The date rental record data was last sent to Experian.","example":"2018-07-10","format":"date","nullable":true,"type":"string"},"consentApprovedAt":{"description":"The date on which consent to send data to Experian was given.","example":"2018-07-10T11:39:44.000Z","format":"date-time","nullable":true,"type":"string"}},"required":["id","userId","firstName","lastName","birthdate","addressLine1","postalCode","tenancyStartDate","rentalAmount","rentalFrequency","seriesId","createdAt","modifiedAt"]},"RentalRecordsPost":{"type":"object","additionalProperties":false,"properties":{"title":{"type":"string","example":"Ms","description":"Title of the user the rental record belongs to.","maxLength":5},"firstName":{"type":"string","description":"First name of the user the rental record belongs to.","example":"name"},"lastName":{"type":"string","description":"Last name of the user the rental record belongs to.","example":"surname"},"birthdate":{"type":"string","format":"date","description":"Date of birth of the user the rental record belongs to.","example":"2021-01-31","pattern":"^\\d{4}-\\d{1,2}-\\d{1,2}$"},"addressLine1":{"type":"string","description":"First line of the rented address.","example":"123 Example Road"},"addressLine2":{"description":"Second line of the rented address.","example":"Building","nullable":true,"type":"string"},"addressLine3":{"description":"Third line of the rented address.","example":"City","nullable":true,"type":"string"},"addressLine4":{"description":"Fourth line of the rented address.","example":"County","nullable":true,"type":"string"},"postalCode":{"type":"string","description":"Postal code of rented address.","example":"BS1 6QF","maxLength":8,"pattern":"^[a-zA-Z0-9- ]+$"},"tenancyStartDate":{"type":"string","format":"date","example":"2021-01-31","description":"Start date of the tenancy agreement.","pattern":"^\\d{4}-\\d{1,2}-\\d{1,2}$"},"rentalAmount":{"type":"object","properties":{"value":{"type":"number","description":"The amount of the regular rental transactions in minor units of the currency e.g. pennies for GBP.","example":10000}},"description":"The value of the balance in minor units of the currency, eg. pennies for GBP."},"rentalFrequency":{"type":"string","enum":["weekly","fortnightly","monthly"],"description":"Frequency of the rental payments e.g. monthly."},"seriesId":{"type":"string","description":"The unique identity of the regular transaction series.","example":"ac9bd177-d01e-449c-9f29-d3656d2edc2e"}},"required":["firstName","lastName","birthdate","addressLine1","postalCode","tenancyStartDate","rentalAmount","rentalFrequency","seriesId"]},"SpendingAnalysis":{"type":"object","properties":{"categories":{"type":"array","description":"Array of categories showing the outgoing expenditure for the given period requested","items":{"type":"object","properties":{"categoryId":{"type":"string","example":"std:338d2636-7f88-491d-8129-255c98da1eb8","description":"Category Id"},"categoryGroup":{"type":"string","example":"group:2","description":"Category group where the category group belongs to"}},"additionalProperties":true},"required":["categoryId","categoryGroup"],"additionalProperties":false,"example":[{"categoryId":"std:65ebdcdb-c46b-478f-bbbc-feabeb0b4342","categoryGroup":"group:2","currentMonth":-2000,"previousMonth":-1000},{"categoryId":"std:379c7ed2-27f3-401f-b581-f6507934f0f0","categoryGroup":"group:3","currentMonth":-1500,"previousMonth":-500}]},"total":{"type":"object","description":"Total outgoing expenditure for the given periods. This calculation do not include income and transfers","properties":{},"additionalProperties":true,"example":{"currentMonth":-3500,"previousMonth":-1500}}},"required":["categories","total"],"additionalProperties":false},"SpendingAnalysisPost":{"type":"object","properties":{"dates":{"type":"array","description":"List of date ranges to calculate spending analysis for. This allows retrieving spending analysis of up to three different date ranges in one request.","items":{"type":"object","properties":{"name":{"type":"string","format":"[a-zA-Z0-9_-]{1,50}","description":"Descriptive name for the date range. The name will be used in the response payload to identify it.","example":"currentMonth"},"from":{"type":"string","format":"date","description":"Start date to perform spending analysis.","example":"2018-09-01"},"to":{"type":"string","format":"date","description":"End date to perform spending analysis.","example":"2018-09-30"}},"required":["name","from","to"],"additionalProperties":false},"minItems":1,"maxItems":3},"accountIds":{"type":"array","items":{"type":"string","description":"Account ids to be included in the spending analysis. If none are given the analysis will include all accounts.","example":"ac9bd177-d01e-449c-9f29-d3656d2edc2e"}},"categoryIds":{"type":"array","items":{"type":"string","description":"Category ids to be included in the spending analysis. If none are given the analysis will include all categories.","example":"std:338d2636-7f88-491d-8129-255c98da1eb8"}},"projectIds":{"type":"array","items":{"type":"string","description":"Project ids to be included in the spending analysis. If none are given the analysis will include all projects.","example":"338d2636-7f88-491d-8129-255c98da1eb8"}}},"example":{"dates":[{"name":"currentMonth","from":"2018-10-01","to":"2018-10-31"},{"name":"previousMonth","from":"2018-09-01","to":"2018-09-30"}],"accountIds":["ac9bd177-d01e-449c-9f29-d3656d2edc2e"],"categoryIds":["std:338d2636-7f88-491d-8129-255c98da1eb8"]},"required":["dates"],"additionalProperties":false},"SpendingGoal":{"additionalProperties":false,"type":"object","properties":{"categoryId":{"example":"std:4b0255f0-0309-4509-9e05-4b4e386f9b0d","type":"string","pattern":"^(std|cus):(\\w|-)+$"},"dateCreated":{"example":"2018-07-11T00:00:00.000Z","format":"date-time","type":"string"},"periodType":{"example":"monthly","type":"string","enum":["monthly","annual"]},"periodStart":{"example":"01","type":"string","pattern":"^(0?[1-9]|[12][0-9]|3[01])(-(0?[1-9]|1[012]))?$"},"id":{"description":"The unique id of the spending goal","type":"string","example":"0b4e6488-6de0-420c-8f56-fee665707d57"},"amount":{"properties":{"value":{"description":"The value of the amount in minor units of the currency, eg. pennies for GBP.","example":40000,"type":"integer","minimum":0},"majorUnits":{"description":"The major units of the value, based on the values currency, eg. pounds for GBP.","example":400,"type":"integer"},"minorUnits":{"description":"The minor units of the value, based on the values currency, eg. pennies for GBP.","example":0,"type":"integer"},"currency":{"description":"The currency of the amount.","example":"GBP","type":"string"}},"required":["value","currency"],"type":"object"},"spending":{"items":{"additionalProperties":false,"properties":{"date":{"example":"2018-07","type":"string"},"spent":{"description":"The spending analysis amount of the specified month expressed in minor units of the currency.","example":-35000,"type":"integer"}},"required":["date","spent"],"type":"object"},"type":"array"}},"required":["id","dateCreated","categoryId","amount","periodStart","periodType","spending"]},"SpendingGoalPost":{"properties":{"categoryId":{"description":"The id of the category for the spending goal, either from the /categories endpoint or **std:all**","type":"string","example":"std:379c7ed2-27f3-401f-b581-f6507934f0f0"},"periodType":{"description":"The period type of the goal, can be annual or monthly","example":"monthly","type":"string","enum":["monthly","annual"]},"periodStart":{"description":"You can set a goal period to start on a certain date. DD when periodType is monthly, DD-MM when periodType is annual","example":"01","type":"string","pattern":"^(0?[1-9]|[12][0-9]|3[01])(-(0?[1-9]|1[012]))?$"},"amount":{"properties":{"value":{"description":"The amount of the spending goal in minor units of the currency, eg. pennies for GBP.","example":500000,"type":"integer","minimum":0,"exclusiveMinimum":true}},"required":["value"],"type":"object"}},"example":{"categoryId":"std:379c7ed2-27f3-401f-b581-f6507934f0f0","amount":{"value":50000}},"type":"object","required":["categoryId","amount"]},"SpendingGoalPatch":{"properties":{"categoryId":{"description":"The id of the category the spending goal should be created for","type":"string","example":"std:379c7ed2-27f3-401f-b581-f6507934f0f0"},"amount":{"properties":{"value":{"description":"The amount of the spending goal in minor units of the currency, eg. pennies for GBP.","example":300,"type":"integer","minimum":0,"exclusiveMinimum":true}},"required":["value"],"type":"object"}},"example":{"categoryId":"std:379c7ed2-27f3-401f-b581-f6507934f0f0","amount":{"value":300}},"type":"object"},"SavingsGoals":{"type":"object","additionalProperties":false,"properties":{"id":{"description":"Unique id of the saving goal.","type":"string","example":"27c316ef-8dfa-4a4b-b0a2-4979b7db1543"},"name":{"description":"Name for the savings goal.","type":"string","example":"House deposit"},"amount":{"properties":{"value":{"description":"The target amount in minor unit in minor units of the currency, eg. pennies for GBP.","example":500000,"type":"integer","minimum":0,"exclusiveMinimum":true},"majorUnits":{"description":"The major units of the value, based on the values currency, eg. pounds for GBP.","example":5000,"type":"integer"},"minorUnits":{"description":"The minor units of the value, based on the values currency, eg. pennies for GBP.","example":0,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value","currency"],"additionalProperties":false,"type":"object"},"dateCreated":{"description":"The date at which the savings goal was added.","type":"string","format":"date-time","example":"2018-10-11T00:00:00.000Z"},"imageUrl":{"type":"string","example":"url"},"notes":{"description":"Arbitrary text that a user can add about a savings goal.","type":"string","example":"Notes"},"progressPercentage":{"description":"Progress achieved towards the target amount represented in percentage.","type":"number","example":33.3},"progressAmount":{"description":"Progress achieved towards the target amount by adding up the balances of the selected accounts.","properties":{"value":{"description":"The amount of the transaction in minor units of the currency, eg. pennies for GBP, negative means money going out of an account, positive means money coming into an account.","example":300000,"type":"integer"},"majorUnits":{"description":"The major units of the value, based on the values currency, eg. pounds for GBP.","example":3000,"type":"integer"},"minorUnits":{"description":"The minor units of the value, based on the values currency, eg. pennies for GBP.","example":0,"type":"integer"},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}}},"accounts":{"type":"array","description":"Accounts that will be taken into account towards the target amount.","items":{"type":"object","additionalProperties":false,"properties":{"id":{"description":"Id of the account","type":"string","example":"ac9bd177-d01e-449c-9f29-d3656d2edc2e"}},"required":["id"]},"minItems":1}},"required":["id","name","amount","dateCreated","accounts"],"example":{"id":"9bef2cc3-e62f-4dfb-9a51-e3085bfbf5c4","name":"Savings goal","amount":{"value":1000000,"majorUnits":10000,"minorUnits":0,"currency":"GBP"},"progressPercentage":30,"progressAmount":{"value":300000,"majorUnits":3000,"minorUnits":0,"currency":"GBP"},"imageUrl":"","dateCreated":"2021-12-21T15:27:02+00:00","accounts":[{"id":"a4f88d50-665c-461e-a54b-fb8da07d3b56"},{"id":"80a7f96b-ba20-43cd-82d0-e06a35f68051"}]}},"SavingsGoalsPost":{"type":"object","additionalProperties":false,"properties":{"name":{"description":"Name for the savings goal.","type":"string","example":"House deposit"},"amount":{"properties":{"value":{"description":"The target amount in minor unit in minor units of the currency, eg. pennies for GBP.","example":500000,"type":"integer","minimum":0,"exclusiveMinimum":true},"currency":{"description":"The currency of the amount","example":"GBP","type":"string"}},"required":["value"],"additionalProperties":false,"type":"object"},"imageUrl":{"type":"string","example":"Image url"},"notes":{"description":"Arbitrary text that a user can add about a savings goal.","type":"string","example":"Notes"},"accounts":{"type":"array","description":"Accounts that will be taken into account towards the target amount.","items":{"type":"object","additionalProperties":false,"properties":{"id":{"description":"Id of the account","type":"string","example":"ac9bd177-d01e-449c-9f29-d3656d2edc2e"}},"required":["id"]},"minItems":1}},"required":["name","amount","accounts"],"example":{"name":"House Deposit","amount":{"value":1800000},"imageUrl":"Image url","notes":"Notes","accounts":[{"id":"ac9bd177-d01e-449c-9f29-d3656d2edc2e"}]}},"SavingsGoalsPatch":{"type":"object","additionalProperties":false,"properties":{"name":{"description":"Name for the savings goal.","type":"string","example":"House deposit"},"amount":{"properties":{"value":{"description":"The target amount in minor unit in minor units of the currency, eg. pennies for GBP.","example":500000,"type":"integer","minimum":0,"exclusiveMinimum":true}},"required":["value"],"additionalProperties":false,"type":"object"},"imageUrl":{"type":"string","example":"Image url"},"notes":{"description":"Arbitrary text that a user can add about a savings goal.","type":"string","example":"Notes"},"accounts":{"type":"array","description":"Accounts that will be taken into account towards the target amount.","items":{"type":"object","additionalProperties":false,"properties":{"id":{"description":"Id of the account","type":"string","example":"ac9bd177-d01e-449c-9f29-d3656d2edc2e"}},"required":["id"]},"minItems":1}},"example":{"name":"New name","amount":{"value":1800000},"imageUrl":"New Image url","notes":"New Notes","accounts":[{"id":"ac9bd177-d01e-449c-9f29-d3656d2edc2e"}]}},"SyncPost":{"additionalProperties":false,"properties":{"customerIpAddress":{"type":"string","description":"The customer ip address if it is currently logged in","example":"104.25.212.99"},"customerLastLoggedTime":{"type":"string","description":"The time when the customer last logged in represented as an ISO 8601 date-time format including timezone","example":"2017-04-05T10:43:07.000Z"},"enableAsync":{"type":"boolean","description":"If set to true, the sync for data will happen in the background","example":"true","default":true}},"type":"object"},"Tax":{"additionalProperties":false,"type":"object","properties":{"dateFrom":{"description":"The date the transactions are from","format":"date","type":"string","example":"2019-05-22"},"dateTo":{"description":"The date the transactions are to","format":"date","type":"string","example":"2019-05-25"},"taxReturn":{"description":"The calculated tax return amounts.","type":"object","properties":{"sa105":{"properties":{"income":{"type":"object","properties":{"total":{"additionalProperties":false,"type":"object","properties":{"value":{"description":"The opening balance in minor units of the currency, eg. pennies for GBP","type":"integer","example":300023},"majorUnits":{"description":"The major units of the value, based on the values currency, eg. pounds for GBP.","example":3000,"type":"integer"},"minorUnits":{"description":"The minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"type":"string","example":"GBP"}},"required":["value","currency"]},"details":{"type":"array","items":{"additionalProperties":false,"properties":{"category":{"description":"The category the detail belongs to","example":"income.rent","type":"string","pattern":"^(income|expenditure)\\.([a-zA-Z-]+)$"},"amount":{"additionalProperties":false,"type":"object","properties":{"value":{"description":"The opening balance in minor units of the currency, eg. pennies for GBP","type":"integer","example":300023},"currency":{"type":"string","example":"GBP"}},"required":["value","currency"]}},"type":"object","required":["category","amount"]}}},"required":["total","details"]},"expenditure":{"type":"object","properties":{"total":{"additionalProperties":false,"type":"object","properties":{"value":{"description":"The opening balance in minor units of the currency, eg. pennies for GBP","type":"integer","example":300023},"majorUnits":{"description":"The major units of the value, based on the values currency, eg. pounds for GBP.","example":3000,"type":"integer"},"minorUnits":{"description":"The minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"type":"string","example":"GBP"}},"required":["value","currency"]},"details":{"type":"array","items":{"additionalProperties":false,"properties":{"category":{"description":"The category the detail belongs to","example":"income.rent","type":"string","pattern":"^(income|expenditure)\\.([a-zA-Z-]+)$"},"amount":{"additionalProperties":false,"type":"object","properties":{"value":{"description":"The opening balance in minor units of the currency, eg. pennies for GBP","type":"integer","example":300023},"currency":{"type":"string","example":"GBP"}},"required":["value","currency"]}},"type":"object","required":["category","amount"]}}},"required":["total","details"]},"taxableIncome":{"type":"object","properties":{"total":{"additionalProperties":false,"type":"object","properties":{"value":{"description":"The opening balance in minor units of the currency, eg. pennies for GBP","type":"integer","example":300023},"majorUnits":{"description":"The major units of the value, based on the values currency, eg. pounds for GBP.","example":3000,"type":"integer"},"minorUnits":{"description":"The minor units of the value, based on the values currency, eg. pennies for GBP.","example":23,"type":"integer"},"currency":{"type":"string","example":"GBP"}},"required":["value","currency"]}},"required":["total"]}},"required":["income","expenditure","taxableIncome"],"type":"object"}}}},"required":["dateFrom","dateTo","taxReturn"],"example":{"dateFrom":"2018-04-06","dateTo":"2019-04-05","taxReturn":{"sa105":{"income":{"total":{"value":1500000,"majorUnits":15000,"minorUnits":0,"currency":"GBP"},"details":[{"amount":{"value":1500000,"majorUnits":15000,"minorUnits":0,"currency":"GBP"},"category":"income.rent"}]},"expenditure":{"total":{"value":300000,"majorUnits":3000,"minorUnits":0,"currency":"GBP"},"details":[{"amount":{"value":200000,"majorUnits":2000,"minorUnits":0,"currency":"GBP"},"category":"expenditure.professional"},{"amount":{"value":100000,"majorUnits":1000,"minorUnits":0,"currency":"GBP"},"category":"expenditure.maintenance"}]},"taxableIncome":{"total":{"value":1200000,"majorUnits":12000,"minorUnits":0,"currency":"GBP"}}}}}},"Links":{"additionalProperties":false,"properties":{"next":{"description":"The url to retrieve the next page of results from","format":"uri","type":"string"},"prev":{"description":"The url to retrieve the previous page of results from","format":"uri","type":"string"},"self":{"description":"The url of the current resource(s)","format":"uri","type":"string"}},"required":["self"],"type":"object"},"Error":{"additionalProperties":false,"properties":{"code":{"description":"The error code","type":"string"},"message":{"description":"The error message","type":"string"},"correlationId":{"description":"Id that identifies the request and can be used to ask for more details related to the error","type":"string"},"id":{"description":"Id of the resource","type":"string"},"userId":{"description":"UserId of the resource","type":"string"}},"required":["code"],"type":"object"},"InternalError":{"additionalProperties":false,"properties":{"code":{"description":"The error code","type":"string","enum":["InternalServer","ExternalProvider"],"example":"ExternalProvider"},"message":{"description":"The error message","type":"string","example":"The server encountered an error and could not complete your request"},"correlationId":{"description":"Id that identifies the request and can be used to ask for more details related to the error","type":"string","example":"1234567890"},"statusCode":{"description":"When the error is generated on the Provider, this field will contain the HTTP status code returned by the Provider","type":"integer","example":500}},"required":["code"],"type":"object"}}},"x-readme":{"explorer-enabled":true,"proxy-enabled":true}}