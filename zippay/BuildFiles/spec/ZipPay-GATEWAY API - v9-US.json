{"openapi":"3.1.0","info":{"title":"GATEWAY API","version":"9-US"},"servers":[{"url":"https://gateway.us.zip.co/"}],"components":{"securitySchemes":{"sec0":{"type":"oauth2","flows":{}}}},"security":[{"sec0":[]}],"paths":{"/orders/authorize":{"post":{"summary":"/orders/authorize","description":"Creates a new checkout context and redirects to the checkout website using details from the request body.\n\nSent from the user's browser via a form POST, will start a checkout session within Zip. It will automatically redirect the user to our Zip checkout. You need to ensure you provide your merchant ID, merchant reference (the unique ID you use for the order in your system), confirm/cancel URLs, and the order amount. The order amount should include all shipping, tax, and discount charges. You do not need to provide the order ID as that will be generated for you. Passing as much customer information as possible will improve the user experience by pre-filling data fields and improving conversion.","operationId":"ordersauthorize","parameters":[{"name":"QP-Territory","in":"header","description":"Territory of the request (US, CA, MX)","required":true,"schema":{"type":"string"}},{"name":"X-QP-Signature","in":"header","description":"The signature for merchant validation","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","required":["merchantId","merchantReference","callbackUrl","redirectConfirmUrl","redirectCancelUrl"],"properties":{"orderId":{"type":"string","description":"Gets or sets the unique ID to use for order creation"},"merchantId":{"type":"string","description":"Gets or sets the merchant Id"},"merchantReference":{"type":"string","description":"Gets or sets the unique merchant reference for this authorization."},"order":{"type":"object","description":"Encapsulates an order to create for a merchant","required":["currency","amount"],"properties":{"firstName":{"type":"string"},"lastName":{"type":"string"},"email":{"type":"string"},"phone":{"type":"string"},"shippingAddress":{"type":"object","properties":{"line1":{"type":"string","description":"Gets or sets the first address line."},"line2":{"type":"string","description":"Gets or sets the second address line."},"city":{"type":"string","description":"Gets or sets the city."},"state":{"type":"string","description":"Gets or sets the state or province."},"postalCode":{"type":"string","description":"Gets or sets the postal code."},"country":{"type":"string","description":"Gets or sets the country."}}},"billingAddress":{"type":"object","properties":{"line1":{"type":"string","description":"Gets or sets the first address line."},"line2":{"type":"string","description":"Gets or sets the second address line."},"city":{"type":"string","description":"Gets or sets the city."},"state":{"type":"string","description":"Gets or sets the state or province."},"postalCode":{"type":"string","description":"Gets or sets the postal code."},"country":{"type":"string","description":"Gets or sets the country."}}},"currency":{"type":"string"},"amount":{"type":"string"},"taxAmount":{"type":"string"},"shippingAmount":{"type":"string","description":"lineItems"},"lineItems":{"type":"array","items":{"properties":{"description":{"type":"string","description":"Gets or sets a description about the item being purchased."},"name":{"type":"string","description":"Gets or sets the name of the item being purchased."},"quantity":{"type":"integer","description":"Gets or sets the quantity of the items being purchased.","format":"int32"},"price":{"type":"number","description":"Gets or sets the price of a single item.","format":"double"},"sku":{"type":"string","description":"Gets or sets the SKU identifier of the item being purchased."},"isPreOrder":{"type":"boolean","description":"Gets or sets the flag indicating whether or not this item will be included in a preorder"},"releaseDate":{"type":"string","description":"Gets or sets the date a preorder order will be shipped","format":"date"}},"type":"object"}},"description":{"type":"string","description":"Gets or sets a description for the order."},"orderNumber":{"type":"string","description":"Gets or sets the Zip order number."}}},"test":{"type":"boolean","description":"Gets or sets a value indicating whether this is a test order"},"capture":{"type":"boolean","description":"Gets or sets a value indicating whether this order should be immediately captured"},"callbackUrl":{"type":"string","description":"Gets or sets the status callback url"},"redirectConfirmUrl":{"type":"string","description":"Gets or sets the url that the user will be redirected to after they have completed the checkout."},"redirectCancelUrl":{"type":"string","description":"Gets or sets the url that the user will be redirected to if they cancel the checkout"},"metadata":{"type":"object","description":"Gets or sets optional metadata attached to the checkout","properties":{}},"merchantFeeForPaymentPlan":{"type":"number","description":"Gets or sets the fee added to the order for merchantFeeForPaymentPlan","format":"double"},"checkoutFlow":{"type":"string","description":"Gets or sets the type of the checkout; defaults to Standard; can only be set internally"},"brandName":{"type":"string","description":"Gets or sets the brand name of the merchant for this order"}}}}}},"responses":{"302":{"description":"302","content":{"application/json":{"examples":{"Result":{"value":"{}"}},"schema":{"type":"object","properties":{}}}}}},"deprecated":false,"security":[],"x-readme":{"code-samples":[{"language":"text","code":"curl --request POST \\\n     --url https://gateway.us.zip.co/orders/authorize \\\n     --header 'Content-Type: application/json' \\\n     --header 'QP-Territory: US' \\\n     --data '\n{\n     \"orderId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n     \"merchantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n     \"merchantReference\": \"string\",\n     \"order\": {\n          \"firstName\": \"string\",\n          \"lastName\": \"string\",\n          \"email\": \"string\",\n          \"phone\": \"string\",\n          \"shippingAddress\": {\n               \"line1\": \"string\",\n               \"line2\": \"string\",\n               \"city\": \"string\",\n               \"state\": \"string\",\n               \"postalCode\": \"string\",\n               \"country\": \"string\"\n          },\n          \"billingAddress\": {\n               \"line1\": \"string\",\n               \"line2\": \"string\",\n               \"city\": \"string\",\n               \"state\": \"string\",\n               \"postalCode\": \"string\",\n               \"country\": \"string\"\n          },\n          \"currency\": \"string\",\n          \"amount\": 0,\n          \"taxAmount\": 0,\n          \"shippingAmount\": 0,\n          \"lineItems\": [\n               {\n                    \"description\": \"string\",\n                    \"name\": \"string\",\n                    \"quantity\": 0,\n                    \"price\": 0,\n                    \"sku\": \"string\",\n                    \"isPreOrder\": true,\n                    \"releaseDate\": \"2021-12-01T16:11:29.525Z\"\n               }\n          ],\n          \"description\": \"string\",\n          \"orderNumber\": \"string\"\n     },\n     \"test\": true,\n     \"capture\": true,\n     \"callbackUrl\": \"string\",\n     \"redirectCancelUrl\": \"string\",\n     \"redirectConfirmUrl\": \"string\",\n     \"metadata\": {\n          \"additionalProp\": \"string\"\n     },\n     \"merchantFeeForPaymentPlan\": 0,\n     \"checkoutFlow\": \"standard\",\n     \"brandName\": \"string\"\n}\n\n"}],"samples-languages":["text"]}},"get":{"summary":"/orders/authorize","description":"Creates a new checkout context and redirects to the checkout website using details from the request body.\n\nThe same as the first /orders/authorize endpoint but data is passed as query string parameters with a GET request.","operationId":"ordersauthorize-1","parameters":[{"name":"orderId","in":"query","description":"Gets or sets the unique ID to use for order creation","schema":{"type":"string"}},{"name":"merchantId","in":"query","description":"Gets or sets the merchant Id","required":true,"schema":{"type":"string"}},{"name":"merchantReference","in":"query","description":"Gets or sets the unique merchant reference for this authorization.","required":true,"schema":{"type":"string"}},{"name":"Order.FirstName","in":"query","description":"Gets or sets the customer's first name","schema":{"type":"string"}},{"name":"Order.LastName","in":"query","description":"Gets or sets the customer's last name","schema":{"type":"string"}},{"name":"Order.Email","in":"query","description":"Gets or sets the customer's email address","schema":{"type":"string"}},{"name":"Order.Phone","in":"query","description":"Gets or sets the customer's phone number","schema":{"type":"string"}},{"name":"Order.ShippingAddress.Line1","in":"query","description":"Gets or sets the first address line","schema":{"type":"string"}},{"name":"Order.ShippingAddress.Line2","in":"query","description":"Gets or sets the second address line","schema":{"type":"string"}},{"name":"Order.ShippingAddress.City","in":"query","description":"Gets or sets the city","schema":{"type":"string"}},{"name":"Order.ShippingAddress.State","in":"query","description":"Gets or sets the state or province","schema":{"type":"string"}},{"name":"Order.ShippingAddress.PostalCode","in":"query","description":"Gets or sets the postal code","schema":{"type":"string"}},{"name":"Order.ShippingAddress.Country","in":"query","description":"Gets or sets the country","schema":{"type":"string"}},{"name":"Order.BillingAddress.Line1","in":"query","description":"Gets or sets the first address line","schema":{"type":"string"}},{"name":"Order.BillingAddress.Line2","in":"query","description":"Gets or sets the second address line","schema":{"type":"string"}},{"name":"Order.BillingAddress.City","in":"query","description":"Gets or sets the city","schema":{"type":"string"}},{"name":"Order.BillingAddress.State","in":"query","description":"Gets or sets the state or province","schema":{"type":"string"}},{"name":"Order.BillingAddress.PostalCode","in":"query","description":"Gets or sets the postal code","schema":{"type":"string"}},{"name":"Order.BillingAddress.Country","in":"query","description":"Gets or sets the country","schema":{"type":"string"}},{"name":"Order.Currency","in":"query","description":"Gets or sets the currency the order amount is in (defaults to TerritorySettings)","schema":{"type":"string"}},{"name":"Order.Amount","in":"query","description":"Gets or sets the order amount. This includes the tax and shipping amounts.","schema":{"type":"number","format":"double"}},{"name":"Order.TaxAmount","in":"query","description":"Gets or sets the optional tax amount","schema":{"type":"number","format":"double"}},{"name":"Order.ShippingAmount","in":"query","description":"Gets or sets the optional shipping amount","schema":{"type":"number","format":"double"}},{"name":"Order.LineItems","in":"query","description":"Gets or sets the optional line items of what the user is purchasing","schema":{"items":{"properties":{"description":{"type":"string","description":"Gets or sets a description about the item being purchased."},"name":{"type":"string","description":"Gets or sets the name of the item being purchased."},"quantity":{"type":"integer","description":"Gets or sets the quantity of the items being purchased.","format":"int32"},"price":{"type":"number","description":"Gets or sets the price of a single item.","format":"double"},"sku":{"type":"string","description":"Gets or sets the SKU identifier of the item being purchased."},"isPreOrder":{"type":"boolean","description":"Gets or sets the flag indicating whether or not this item will be included in a preorder"},"releaseDate":{"type":"string","description":"Gets or sets the date a preorder order will be shipped","format":"date"}},"type":"object"},"type":"array"},"style":"deepObject","explode":true},{"name":"Order.Description","in":"query","description":"Gets or sets a description for the order","schema":{"type":"string"}},{"name":"Order.OrderNumber","in":"query","description":"Gets or sets the Zip order number","schema":{"type":"string"}},{"name":"test","in":"query","description":"Gets or sets a value indicating whether this is a test order","schema":{"type":"boolean"}},{"name":"Capture","in":"query","description":"Gets or sets a value indicating whether this order should be immediately captured","schema":{"type":"boolean"}},{"name":"CallbackUrl","in":"query","description":"Gets or sets the status callback url","required":true,"schema":{"type":"string"}},{"name":"RedirectCancelUrl","in":"query","description":"Gets or sets the url that the user will be redirected to if they cancel the checkout","required":true,"schema":{"type":"string"}},{"name":"RedirectConfirmUrl","in":"query","description":"Gets or sets the url that the user will be redirected to after they have completed the checkout.","required":true,"schema":{"type":"string"}},{"name":"metadata","in":"query","description":"Gets or sets optional metadata attached to the checkout","schema":{"type":"string"}},{"name":"origin","in":"query","description":"Gets or sets the origin of the order. Usually the merchant's website. Can only be set internally","schema":{"type":"string"}},{"name":"GatewayHost","in":"query","description":"Gets or sets the Gateway API host; can only be set internally","schema":{"type":"string"}},{"name":"CheckoutType","in":"query","description":"Gets or sets the type of the checkout; defaults to Standard; can only be set internally","schema":{"type":"string"}},{"name":"RequiresCookie","in":"query","description":"Gets or sets a value indicating whether the checkout context should be set as a cookie","schema":{"type":"boolean"}},{"name":"DeferOrderConfirmation","in":"query","description":"Gets or sets a value indicating whether or not to confirm the order upon customer checkout completion. If true, the merchant must make a secondary API call to confirm the order and begin the payment plan. Default is false.","schema":{"type":"boolean"}},{"name":"MerchantFeeForPaymentPlan","in":"query","description":"Gets or sets the fee added to the order for merchantFeeForPaymentPlan","schema":{"type":"string"}},{"name":"CheckoutFlow","in":"query","description":"Gets or sets the checkout flow for this order. Default is standard","schema":{"type":"string"}},{"name":"BrandName","in":"query","description":"Gets or sets the brand name of the merchant for this order","schema":{"type":"string"}},{"name":"Expiration","in":"query","description":"Gets or sets a unix timestamp representing the expiration time of the checkout.","schema":{"type":"integer","format":"int32"}},{"name":"QP-Territory","in":"header","description":"Territory of the request (US, CA, MX)","required":true,"schema":{"type":"string"}},{"name":"X-QP-Signature","in":"header","description":"The signature for merchant validation","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"200","content":{"application/json":{"examples":{"Result":{"value":"{}"}},"schema":{"type":"object","properties":{}}}}},"400":{"description":"400","content":{"application/json":{"examples":{"Result":{"value":"{}"}},"schema":{"type":"object","properties":{}}}}}},"deprecated":false,"security":[]}},"/orders/{orderId}/capture":{"post":{"summary":"/orders/{orderId}/capture","description":"Captures funds for the specified order. Only applicable to pay-on-ship/deferred fund capture merchants. If sync query parameter is set to true, replies synchronously with callback payload, otherwise, replies asynchronously on callback URL. Default sync value is false for asynchronous behavior.","operationId":"ordersorderidcapture","parameters":[{"name":"orderId","in":"path","schema":{"type":"string"},"required":true},{"name":"sync","in":"query","schema":{"type":"boolean"}},{"name":"QP-Territory","in":"header","description":"Territory of the request (US, CA, MX)","required":true,"schema":{"type":"string"}},{"name":"X-QP-Signature","in":"header","description":"The signature for merchant validation","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","required":["merchantId"],"properties":{"merchantId":{"type":"string","description":"Gets or sets the MerchantId"},"currency":{"type":"string","description":"Gets or sets the Currency of the capture"},"amount":{"type":"number","description":"Gets or sets the Amount of the capture","format":"double"},"merchantReference":{"type":"string","description":"Gets or sets the Merchant Reference of the capture"},"singleCapture":{"type":"boolean","description":"Gets or sets a value indicating whether or not the order will only be captured once. In that case if the capture value is less than the order value, the remainder will be voided."},"callbackUrl":{"type":"string","description":"Gets or sets the url to callback with the capture result"},"test":{"type":"boolean","description":"Gets or sets a value indicating whether this is a test order"},"metadata":{"type":"object","description":"Gets or sets optional metadata associated with this capture","properties":{}},"isSync":{"type":"boolean","description":"Get or sets a flag indicating whether or not to invoke this operation synchronously. Set to false by default."}}}}}},"responses":{"200":{"description":"200","content":{"application/json":{"examples":{"Result":{"value":"{\n  \"timestamp\": \"2021-12-01T16:33:33.835Z\",\n  \"merchantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"orderId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"currency\": \"string\",\n  \"amount\": 0,\n  \"merchantReference\": \"string\",\n  \"test\": true,\n  \"success\": true,\n  \"message\": \"string\",\n  \"metadata\": {\n    \"additionalProp\": \"string\"\n  },\n  \"operation\": \"string\"\n}"}},"schema":{"type":"object","properties":{"timestamp":{"type":"string","example":"2021-12-01T16:33:33.835Z"},"merchantId":{"type":"string","example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"},"orderId":{"type":"string","example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"},"currency":{"type":"string","example":"string"},"amount":{"type":"integer","example":0,"default":0},"merchantReference":{"type":"string","example":"string"},"test":{"type":"boolean","example":true,"default":true},"success":{"type":"boolean","example":true,"default":true},"message":{"type":"string","example":"string"},"metadata":{"type":"object","properties":{"additionalProp":{"type":"string","example":"string"}}},"operation":{"type":"string","example":"string"}}}}}},"400":{"description":"400","content":{"application/json":{"examples":{"Result":{"value":"{}"}},"schema":{"type":"object","properties":{}}}}}},"deprecated":false,"security":[]}},"/orders/{orderId}/refund":{"post":{"summary":"/orders/{orderId}/refund","description":"Refunds funds for the specified order and allocates them to the payment plan to apply it to the customer. If sync query parameter is set to true, replies synchronously with callback payload, otherwise, replies asynchronously on callback URL.\n\nDefault sync value is false for asynchronous behavior.\n\nIf you are a pay-on-ship/DFC merchant, you can only apply up to your captured amount.","operationId":"ordersorderidrefund","parameters":[{"name":"orderId","in":"path","schema":{"type":"string"},"required":true},{"name":"sync","in":"query","schema":{"type":"string"}},{"name":"QP-Territory","in":"header","description":"Territory of the request (US, CA, GB)","required":true,"schema":{"type":"string"}},{"name":"X-QP-Signature","in":"header","description":"The signature for merchant validation","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","required":["merchantId","currency","amount","merchantReference"],"properties":{"merchantId":{"type":"string","description":"Gets or sets the MerchantId"},"currency":{"type":"string","description":"Gets or sets the Currency of the capture"},"amount":{"type":"number","description":"Gets or sets the Amount of the capture","format":"double"},"merchantReference":{"type":"string","description":"Gets or sets the Merchant Reference of the capture"},"callbackUrl":{"type":"string","description":"Gets or sets the url to callback with the refund result"},"test":{"type":"boolean","description":"Gets or sets a value indicating whether this is a test order"},"metadata":{"type":"object","description":"Gets or sets optional metadata associated with this capture","properties":{}},"isSync":{"type":"boolean","description":"Get or sets a flag indicating whether or not to invoke this operation synchronously. Set to false by default."}}}}}},"responses":{"200":{"description":"200","content":{"application/json":{"examples":{"Result":{"value":"{\n  \"timestamp\": \"2021-12-01T16:35:29.632Z\",\n  \"merchantId\": \"44444444-4444-4444-4444-444444444444\",\n  \"orderId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"currency\": \"string\",\n  \"amount\": 0,\n  \"merchantReference\": \"string\",\n  \"test\": true,\n  \"success\": true,\n  \"message\": \"string\",\n  \"metadata\": {\n    \"additionalProp\": \"string\"\n  },\n  \"operation\": \"string\"\n}"}},"schema":{"type":"object","properties":{"timestamp":{"type":"string","example":"2021-12-01T16:35:29.632Z"},"merchantId":{"type":"string","example":"44444444-4444-4444-4444-444444444444"},"orderId":{"type":"string","example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"},"currency":{"type":"string","example":"string"},"amount":{"type":"integer","example":0,"default":0},"merchantReference":{"type":"string","example":"string"},"test":{"type":"boolean","example":true,"default":true},"success":{"type":"boolean","example":true,"default":true},"message":{"type":"string","example":"string"},"metadata":{"type":"object","properties":{"additionalProp":{"type":"string","example":"string"}}},"operation":{"type":"string","example":"string"}}}}}},"400":{"description":"400","content":{"application/json":{"examples":{"Result":{"value":"{}"}},"schema":{"type":"object","properties":{}}}}}},"deprecated":false}},"/orders/{orderId}/void":{"post":{"summary":"/orders/{orderId}/void","description":"Voids uncaptured funds for the specified order and allocates them to the payment plan to apply it to the customer. Only applicable to pay-on-ship/deferred fund capture merchants. If sync query parameter is set to true, replies synchronously with callback payload, otherwise, replies asynchronously on callback URL. Default sync value is false for asynchronous behavior.","operationId":"ordersorderidvoid","parameters":[{"name":"orderId","in":"path","schema":{"type":"string"},"required":true},{"name":"sync","in":"query","schema":{"type":"boolean"}},{"name":"QP-Territory","in":"header","description":"Territory of the request (US, CA, MX)","required":true,"schema":{"type":"string"}},{"name":"X-QP-Signature","in":"header","description":"The signature for merchant validation","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","required":["merchantId","currency","amount","merchantReference"],"properties":{"merchantId":{"type":"string","description":"Gets or sets the MerchantId"},"currency":{"type":"string","description":"Gets or sets the Currency of the capture"},"amount":{"type":"number","description":"Gets or sets the Amount of the capture","format":"double"},"merchantReference":{"type":"string","description":"Gets or sets the Merchant Reference of the capture"},"callbackUrl":{"type":"string","description":"Gets or sets the url to callback with the void result"},"test":{"type":"boolean","description":"Gets or sets a value indicating whether this is a test order"},"metadata":{"type":"object","description":"Gets or sets optional metadata associated with this capture","properties":{}},"isSync":{"type":"boolean","description":"Get or sets a flag indicating whether or not to invoke this operation synchronously. Set to false by default."},"isAmountInCommand":{"type":"boolean","description":"Gets or sets a flag indicating whether or not the command amount is set and not defaulted. By default, the void amount is included in the command."}}}}}},"responses":{"200":{"description":"200","content":{"application/json":{"examples":{"Result":{"value":"{\n  \"timestamp\": \"2021-12-01T16:38:44.237Z\",\n  \"merchantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"orderId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"currency\": \"string\",\n  \"amount\": 0,\n  \"merchantReference\": \"string\",\n  \"test\": true,\n  \"success\": true,\n  \"message\": \"string\",\n  \"metadata\": {\n    \"additionalProp\": \"string\"\n  },\n  \"operation\": \"string\"\n}"}},"schema":{"type":"object","properties":{"timestamp":{"type":"string","example":"2021-12-01T16:38:44.237Z"},"merchantId":{"type":"string","example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"},"orderId":{"type":"string","example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"},"currency":{"type":"string","example":"string"},"amount":{"type":"integer","example":0,"default":0},"merchantReference":{"type":"string","example":"string"},"test":{"type":"boolean","example":true,"default":true},"success":{"type":"boolean","example":true,"default":true},"message":{"type":"string","example":"string"},"metadata":{"type":"object","properties":{"additionalProp":{"type":"string","example":"string"}}},"operation":{"type":"string","example":"string"}}}}}},"400":{"description":"400","content":{"application/json":{"examples":{"Result":{"value":"{}"}},"schema":{"type":"object","properties":{}}}}}},"deprecated":false,"security":[]}},"/orders/{orderId}/confirm":{"post":{"summary":"/orders/{orderId}/confirm","description":"Confirms the supplied authorized order and initiates the payment plan for the customer. If sync query parameter is set to true, replies synchronously with callback payload, otherwise, replies asynchronously on callback URL. Default sync value is false for asynchronous behavior.\n\nMerchants using the Standard Checkout with the mobile SDK will allow customers to use the Zip checkout without starting an order until this API call is made by the merchant. This same feature can be leveraged for standard online checkouts as well. The payment plan for the customer will not begin until a successful callback is received by the merchant for this operation. This operation does allow merchants to add shipping/taxes after the Zip checkout for the order. This will be processed with the currency of the original order. This functionality is enabled upon request. Please work with the integration team during onboarding if this is needed in your implementation.","operationId":"ordersorderidconfirm","parameters":[{"name":"orderId","in":"path","schema":{"type":"string"},"required":true},{"name":"sync","in":"query","schema":{"type":"boolean"}},{"name":"QP-Territory","in":"header","description":"Territory of the request (US, CA, MX)","required":true,"schema":{"type":"string"}},{"name":"X-QP-Signature","in":"header","description":"The signature for merchant validation","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","required":["merchantReference"],"properties":{"merchantId":{"type":"string","description":"Gets or sets the MerchantId"},"amount":{"type":"number","description":"Gets or sets the Amount of the capture","format":"double"},"shippingAmount":{"type":"number","description":"Gets or sets the optional shipping amount associated with the order.","format":"double"},"taxAmount":{"type":"number","description":"Gets or sets the optional tax amount associated with the order","format":"double"},"merchantReference":{"type":"string","description":"Gets or sets the Merchant Reference of the capture"},"callbackUrl":{"type":"string","description":"Gets or sets the url to callback with the confirm result"},"test":{"type":"boolean","description":"Gets or sets a value indicating whether this is a test order"},"metadata":{"type":"object","description":"Gets or sets optional metadata associated with this capture","properties":{}},"isSync":{"type":"boolean","description":"Get or sets a flag indicating whether or not to invoke this operation synchronously. Set to false by default."}}}}}},"responses":{"200":{"description":"200","content":{"application/json":{"examples":{"Result":{"value":"{\n  \"timestamp\": \"2021-12-01T16:45:48.160Z\",\n  \"merchantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"orderId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"currency\": \"string\",\n  \"amount\": 0,\n  \"merchantReference\": \"string\",\n  \"test\": true,\n  \"success\": true,\n  \"message\": \"string\",\n  \"metadata\": {\n    \"additionalProp\": \"string\"\n  },\n  \"operation\": \"string\"\n}"}},"schema":{"type":"object","properties":{"timestamp":{"type":"string","example":"2021-12-01T16:45:48.160Z"},"merchantId":{"type":"string","example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"},"orderId":{"type":"string","example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"},"currency":{"type":"string","example":"string"},"amount":{"type":"integer","example":0,"default":0},"merchantReference":{"type":"string","example":"string"},"test":{"type":"boolean","example":true,"default":true},"success":{"type":"boolean","example":true,"default":true},"message":{"type":"string","example":"string"},"metadata":{"type":"object","properties":{"additionalProp":{"type":"string","example":"string"}}},"operation":{"type":"string","example":"string"}}}}}},"400":{"description":"400","content":{"application/json":{"examples":{"Result":{"value":"{}"}},"schema":{"type":"object","properties":{}}}}}},"deprecated":false}},"/orders/associate":{"post":{"summary":"/orders/associate","description":"Associates a merchant's unique order ID with an order after creation.","operationId":"ordersassociate","parameters":[{"name":"QP-Territory","in":"header","description":"Territory of the request (US, CA, MX)","required":true,"schema":{"type":"string"}},{"name":"X-QP-Signature","in":"header","description":"The signature for merchant validation","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"merchantReference":{"type":"string","description":"Gets or sets the merchant's reference number of the order"},"merchantPlatformId":{"type":"string","description":"Gets or sets the ID to associate to the order"},"orderId":{"type":"string","description":"Gets or sets the OrderId of the order to look up"},"lineItems":{"type":"array","description":"Gets or sets the line items to add to the order","items":{"properties":{"description":{"type":"string","description":"Gets or sets a description about the item being purchased."},"name":{"type":"string","description":"Gets or sets the name of the item being purchased."},"quantity":{"type":"integer","description":"Gets or sets the quantity of the items being purchased.","format":"int32"},"price":{"type":"number","description":"Gets or sets the price of a single item.","format":"double"},"sku":{"type":"string","description":"Gets or sets the SKU identifier of the item being purchased."},"isPreOrder":{"type":"boolean","description":"Gets or sets the flag indicating whether or not this item will be included in a preorder"},"releaseDate":{"type":"string","description":"Gets or sets the date a preorder order will be shipped","format":"date"}},"type":"object"}}}}}}},"responses":{"200":{"description":"200","content":{"application/json":{"examples":{"Result":{"value":"{}"}},"schema":{"type":"object","properties":{}}}}},"400":{"description":"400","content":{"application/json":{"examples":{"Result":{"value":"{}"}},"schema":{"type":"object","properties":{}}}}}},"deprecated":false,"security":[]}},"/orders/calculate-merchant-fees":{"post":{"summary":"/orders/calculate-merchant-fees","description":"Merchants with a merchant fee for payment plan (i.e. MFPP) agreement can use this endpoint to determine the fee amount for a given order. The state/country for the customer should come from the customer's shipping address. When $0 is returned, then there is no fee and does not need to display within the merchant's UX.","operationId":"orderscalculate-merchant-fees","parameters":[{"name":"QP-Territory","in":"header","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","required":["currency","merchantId","customerState","customerCountry","amount"],"properties":{"currency":{"type":"string","description":"Gets or sets the currency for Merchant Fee For Payment Plan"},"merchantId":{"type":"string","description":"Gets or sets the Id of the merchant to calculate fees for"},"customerState":{"type":"string","description":"Gets or sets the customer's state for their shipping address."},"customerCountry":{"type":"string","description":"Gets or sets the customer's country for their shipping address. Defaults to \"US\""},"amount":{"type":"number","description":"Gets or sets the amount of the order to calculate fees for.","format":"double"}}}}}},"responses":{"200":{"description":"200","content":{"application/json":{"examples":{"Result":{"value":"{\n  \"merchantFeeForPaymentPlan\": 4,\n  \"adjustedOrderAmount\": 54,\n  \"currency\": \"string\"\n}"}},"schema":{"type":"object","properties":{"merchantFeeForPaymentPlan":{"type":"integer","example":4,"default":0},"adjustedOrderAmount":{"type":"integer","example":54,"default":0},"currency":{"type":"string","example":"string"}}}}}},"400":{"description":"400","content":{"application/json":{"examples":{"Result":{"value":"{}"}},"schema":{"type":"object","properties":{}}}}}},"deprecated":false}},"/configuration/{merchantId}":{"get":{"summary":"/configuration/{merchantId}","description":"","operationId":"configurationmerchantid","parameters":[{"name":"QP-Territory","in":"header","description":"Territory of the request (US, CA, MX)","required":true,"schema":{"type":"string"}},{"name":"MerchantId","in":"path","description":"The unique Zip merchant Id","schema":{"type":"string"},"required":true}],"responses":{"200":{"description":"200","content":{"application/json":{"examples":{"Result":{"value":"{\n  \"deferFundsCapture\": false,\n  \"minimumOrderAmount\": 35,\n  \"maximumOrderAmount\": 1500\n}"}},"schema":{"type":"object","properties":{"deferFundsCapture":{"type":"boolean","example":false,"default":true},"minimumOrderAmount":{"type":"integer","example":35,"default":0},"maximumOrderAmount":{"type":"integer","example":1500,"default":0}}}}}},"400":{"description":"400","content":{"application/json":{"examples":{"Result":{"value":"{}"}},"schema":{"type":"object","properties":{}}}}}},"deprecated":false}},"/payments/{merchantId}/json":{"get":{"summary":"/payments/{merchantId}/json","description":"An abbreviated list of payments in JSON format.","operationId":"merchantidjson","parameters":[{"name":"merchantId","in":"path","description":"The unique Zip merchant Id","schema":{"type":"string"},"required":true},{"name":"MinimumCreateDateTime","in":"query","description":"The begin created date of the query search","required":true,"schema":{"type":"string","format":"date"}},{"name":"MaximumCreateDateTime","in":"query","description":"The end created date of the query search","required":true,"schema":{"type":"string","format":"date"}},{"name":"OrderBy","in":"query","description":"The order sort of the result set","schema":{"type":"string"}},{"name":"X-QP-Signature","in":"query","description":"The signature for merchant validation","required":true,"schema":{"type":"string"}},{"name":"QP-Territory","in":"header","description":"Territory of the request (US, CA, MX)","required":true,"schema":{"type":"string"}},{"name":"X-QP-Signature","in":"header","description":"The signature for merchant validation","required":true,"schema":{"type":"string"}},{"name":"MerchantId","in":"query","description":"The unique Zip Merchant ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"200","content":{"application/json":{"examples":{"Result":{"value":"{\n    \"value\": [\n        {\n            \"transferId\": \"tr_1IobRYD4siJYPQuYs9O2QEZ6\",\n            \"date\": \"2021-05-07T21:42:44Z\",\n            \"amount\": 843.1000\n        }\n    ],\n    \"total\": 6\n}"}},"schema":{"type":"object","properties":{"value":{"type":"array","items":{"type":"object","properties":{"transferId":{"type":"string","example":"tr_1IobRYD4siJYPQuYs9O2QEZ6"},"date":{"type":"string","example":"2021-05-07T21:42:44Z"},"amount":{"type":"number","example":843.1,"default":0}}}},"total":{"type":"integer","example":6,"default":0}}}}}},"400":{"description":"400","content":{"application/json":{"examples":{"Result":{"value":"{}"}},"schema":{"type":"object","properties":{}}}}}},"deprecated":false,"security":[]}},"/payments/{merchantId}/csv":{"get":{"summary":"/payments/{merchantId}/csv","description":"An abbreviated list of payments in a CSV.","operationId":"merchantidcsv","parameters":[{"name":"merchantId","in":"path","description":"The unique Zip Merchant iD","schema":{"type":"string"},"required":true},{"name":"MinimumCreateDateTime","in":"query","description":"The begin created date of the query search","required":true,"schema":{"type":"string","format":"date"}},{"name":"MaximumCreateDateTime","in":"query","description":"The end created date of the query search","required":true,"schema":{"type":"string","format":"date"}},{"name":"OrderBy","in":"query","description":"The order sort of the result set","schema":{"type":"string"}},{"name":"X-QP-Signature","in":"query","description":"The signature for merchant validation","required":true,"schema":{"type":"string"}},{"name":"QP-Territory","in":"header","description":"Territory of the request (US, CA, MX)","required":true,"schema":{"type":"string"}},{"name":"X-QP-Signature","in":"header","description":"The signature for merchant validation","required":true,"schema":{"type":"string"}},{"name":"MerchantId","in":"query","description":"The unique Zip Merchant ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"200","content":{"text/plain":{"examples":{"Result":{"value":"\"TransferId\",\n\"Date\",\n\"Amount\"\n\"tr_1IobRYD4siJYPQuYs9O2QEZ6\",\n\"05/07/2021 21:42:44\",\n843.1000"}}}}},"400":{"description":"400","content":{"text/plain":{"examples":{"Result":{"value":"{}"}},"schema":{"type":"object","properties":{}}}}}},"deprecated":false,"security":[]}},"/transactions/{merchantId}/v3":{"get":{"summary":"/transactions/{merchantId}/v3","description":"An abbreviated list of statement transactions in JSON format.","operationId":"transactionsmerchantidv2json-1","parameters":[{"name":"MerchantId","in":"path","description":"The unique Zip merchant Id","schema":{"type":"string"},"required":true},{"name":"TransferId","in":"query","description":"The Transfer Id of the payment to filter transactions by","schema":{"type":"string"}},{"name":"MinimumCreateDateTime","in":"query","description":"The begin created transaction date of the query search","schema":{"type":"string","format":"date"}},{"name":"MaximumCreateDateTime","in":"query","description":"The ending created transaction date of the query search","schema":{"type":"string","format":"date"}},{"name":"OrderBy","in":"query","description":"The order sort of the result set","schema":{"type":"string"}},{"name":"X-QP-Signature","in":"query","description":"The signature for merchant validation","required":true,"schema":{"type":"string"}},{"name":"MerchantId","in":"query","description":"The unique Zip merchant Id","required":true,"schema":{"type":"string"}},{"name":"QP-Territory","in":"header","description":"Territory of the request (US, CA, MX)","required":true,"schema":{"type":"string"}},{"name":"X-QP-Signature","in":"header","description":"The signature for merchant validation","required":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"The page subset of the total results. Default is 1.","schema":{"type":"integer","format":"int32"}},{"name":"pageSize","in":"query","description":"The number of records to include in the result set. Default/maximum is 100,000.","schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"200","content":{"application/json":{"examples":{"Result":{"value":"[\n    {\n        \"merchantId\": \"788452a3-7339-409f-89bc-f1436006821e\",\n        \"transactionId\": \"14be0d14-171f-4b69-9f49-2ce7537ac1bf\",\n        \"transactionDateTime\": \"2022-08-17T23:59:28.1191459+00:00\",\n        \"statementId\": \"77df71d9-3845-42b3-b78a-ade8833db2a0\",\n        \"statementNumber\": \"77df71d9384542b3b78aade8833db2a0\",\n        \"orderCreatedDateTime\": \"2022-08-17T23:59:25.932865+00:00\",\n        \"orderNumber\": \"110817-282404\",\n        \"orderId\": \"ab3eadeb-d6b4-41b4-8bf3-05d746192662\",\n        \"merchantName\": \"TEST\",\n        \"merchantReference\": \"6fgd835-ee5x7gzz-N\",\n        \"merchantTransactionReference\": \"ea4278bf-e9f9-4bbd-8cf4-5864ab1a9c1d\",\n        \"transactionType\": \"Capture\",\n        \"debitOrCredit\": \"Credit\",\n        \"currency\": \"USD\",\n        \"amount\": 396.0900,\n        \"amountSigned\": 396.0900,\n        \"productType\": \"Virtual\",\n        \"captureAmount\": 396.0900,\n        \"merchantFeeAmount\": 0,\n        \"refundAmount\": 0,\n        \"merchantFeeReversalAmount\": 0,\n        \"transactionFeeReversalAmount\": 0,\n        \"transactionFeeAmount\": 0,\n        \"merchantFeeForPaymentPlanAmount\": 0,\n        \"merchantFeeForPaymentPlanReversalAmount\": 0,\n        \"metadata\": {\n            \"authorizationCodes\": [\n                \"S00000\"\n            ],\n            \"networkTransactionId\": \"1234567890123456\",\n            \"issuingCardType\": \"Virtual\"\n        }\n    }\n]"}}}}},"400":{"description":"400","content":{"application/json":{"examples":{"Result":{"value":"{}"}},"schema":{"type":"object","properties":{}}}}}},"deprecated":false,"security":[]}},"/transactions/{merchantId}/v3/csv":{"get":{"summary":"/transactions/{merchantId}/v3/csv","description":"An abbreviated list of statement transactions in CSV format.","operationId":"v3-transactionsmerchantidcsv","parameters":[{"name":"merchantId","in":"path","description":"The unique Zip merchant Id","schema":{"type":"string"},"required":true},{"name":"TransferId","in":"query","description":"The Transfer Id of the payment to filter transactions by","schema":{"type":"string"}},{"name":"MinimumCreateDateTime","in":"query","description":"The begin created transaction date of the query search","schema":{"type":"string","format":"date"}},{"name":"MaximumCreateDateTime","in":"query","description":"The ending created transaction date of the query search","schema":{"type":"string","format":"date"}},{"name":"OrderBy","in":"query","description":"The order sort of the result set","schema":{"type":"string"}},{"name":"X-QP-Signature","in":"query","description":"The signature for merchant validation","required":true,"schema":{"type":"string"}},{"name":"MerchantId","in":"query","description":"The unique Zip merchant Id","required":true,"schema":{"type":"string"}},{"name":"QP-Territory","in":"header","description":"Territory of the request (US, CA, MX)","required":true,"schema":{"type":"string"}},{"name":"X-QP-Signature","in":"header","description":"The signature for merchant validation","required":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"The page subset of the total results. Default is 1.","schema":{"type":"integer","format":"int32"}},{"name":"pageSize","in":"query","description":"The number of records to include in the result set. Default/maximum is 100,000.","schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"200","content":{"text/plain":{"examples":{"Result":{"value":"MerchantId,TransactionId,TransactionDateTime,StatementId,StatementNumber,OrderCreatedDateTime,OrderNumber,OrderId,MerchantName,MerchantReference,MerchantPlatformId,TransactionType,DebitOrCredit,Currency,Amount,AmountSigned ,ProductType,CaptureAmount,RefundAmount,TransactionFeeAmount,TransactionFeeReversalAmount,MerchantFeeAmount,MerchantFeeReversalAmount,MerchantFeeForPaymentPlanAmount,MerchantFeeForPaymentPlanReversalAmount,PaymentDate,TransferId,Metadata\n788452a3-7339-409f-89bc-f1436006821e,d53dd2ed-5563-4c4a-b3e4-320298c22d31,2022-08-17 23:59:28 +00:00,77df71d9-3845-42b3-b78a-ade8833db2a0,77df71d9384542b3b78aade8833db2a0,08/17/2022 23:59:25 +00:00,110817-282404,ab3eadeb-d6b4-41b4-8bf3-05d746192662,TEST,6fgd835-ee5x7gzz-N,,Capture,Credit,USD,396.09,396.09,Virtual,396.09,0.00,0.00,0.00,0.00,0.00,0.00,0.00,,,\"{\"\"AuthorizationCodes\"\":[\"\"S00000\"\"],\"\"NetworkTransactionId\"\":\"\"1234567890123456\"\",\"\"IssuingCardType\"\":\"\"Virtual\"\"}\"\n788452a3-7339-409f-89bc-f1436006821e,c2c1c0fd-79db-435d-88cc-8a079ae6e31d,2022-08-17 23:59:26 +00:00,77df71d9-3845-42b3-b78a-ade8833db2a0,77df71d9384542b3b78aade8833db2a0,08/17/2022 23:59:25 +00:00,110817-282434,8098010a-c55a-4894-94f7-49d199c5db36,TEST,6fgd835-ee5x73hz-N,,MerchantFeeForPaymentPlan,Debit,USD,2.00,-2.00,Virtual,0.00,0.00,0.00,0.00,0.00,0.00,2.00,0.00,,,\"{\"\"AuthorizationCodes\"\":[\"\"S00000\"\"],\"\"NetworkTransactionId\"\":\"\"1234567890123456\"\",\"\"IssuingCardType\"\":\"\"Virtual\"\"}\"\n788452a3-7339-409f-89bc-f1436006821e,a77abbae-802f-4448-908a-77e27b6fd687,2022-08-17 23:58:59 +00:00,77df71d9-3845-42b3-b78a-ade8833db2a0,77df71d9384542b3b78aade8833db2a0,08/17/2022 23:58:57 +00:00,110817-282499,0a2cc8d9-3bfc-4cac-b863-138f745b132f,TEST,6fgd839-ertx7gzz-N,,Capture,Credit,USD,25.03,25.03,Virtual,25.03,0.00,0.00,0.00,0.00,0.00,0.00,0.00,,,\"{\"\"AuthorizationCodes\"\":[\"\"S00000\"\"],\"\"NetworkTransactionId\"\":\"\"1234567890123456\"\",\"\"IssuingCardType\"\":\"\"Virtual\"\"}\"\n"}}}}},"400":{"description":"400","content":{"text/plain":{"examples":{"Result":{"value":"{}"}},"schema":{"type":"object","properties":{}}}}}},"deprecated":false,"security":[]}},"/orders/{orderId}/status":{"get":{"summary":"/orders/{orderId}/status","description":"Returns an orderStatus field that can be used to confirm payment via Zip.","operationId":"ordersorderidstatus","parameters":[{"name":"merchantId","in":"query","description":"Gets or sets the merchant ID","required":true,"schema":{"type":"string"}},{"name":"X-QP-Signature","in":"query","description":"The signature for merchant validation","required":true,"schema":{"type":"string"}},{"name":"QP-Territory","in":"header","description":"Territory of the request (US, CA)","required":true,"schema":{"type":"string"}},{"name":"orderId","in":"path","schema":{"type":"string"},"required":true}],"responses":{"200":{"description":"200","content":{"application/json":{"examples":{"Result":{"value":"{\n    \"orderId\": \"11111111-1111-1111-1111-111111111111\",\n    \"orderStatus\": \"created\"\n}"}},"schema":{"type":"object","properties":{"orderId":{"type":"string","example":"11111111-1111-1111-1111-111111111111"},"orderStatus":{"type":"string","example":"created"}}}}}},"400":{"description":"400","content":{"application/json":{"examples":{"Result":{"value":"{}"}},"schema":{"type":"object","properties":{}}}}}},"deprecated":false,"security":[]}}},"x-readme":{"headers":[],"explorer-enabled":true,"proxy-enabled":true},"x-readme-fauxas":true}