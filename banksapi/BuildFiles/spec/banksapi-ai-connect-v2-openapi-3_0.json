{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "email": "info@banksapi.de",
      "name": "info@banksapi.de",
      "url": "https://www.banksapi.de"
    },
    "description": "# General remarks\n## Overview\nBANKSapi AI Endpoints first categorizes individual transactions along the dimensions of spending type, spending frequency and business partner.\n\nAfter enriching individual transactions on these dimensions, the transactions of a specific user are aggregated and used as inputs to the next level of machine learning models to categorize the user along different dimensions such as monthly budget structure, spending habits across time and across spending categories, life stages.\n\n## Tagging Concept\nThe data enrichment process described above is conceptualized as **Tagging** and is used across all the endpoints. The following concepts are crucial to the understanding of *tagging* and make consumption of the endpoints easier. Following is a bottom-up description of *tagging*.\n- `Entity` is an object that is being tagged, e.g. a transaction.\n- `TagInstance` is a concrete instance of a `Tag`, which associates an `Entity` with a `TagTreeItem` and instance specific `details`. `TagTreeItem` captures the standardized part of the tagging, in other words the information that we can map to a standardized concept in a controlled vocabulary. In a `CATEGORIES` `TagInstance` this corresponds to `RECREATION_ONLINE`. `details` on the other hand captures the instance-specific information. For the same `CATEGORIES` example, it would contain the *confidence level*, which is specific only to this instance of the tagging exercise.\n- `TagTreeItem` is a standardized concept which is a member of a controlled vocabulary with others.\n- `TagTree` is a set of standardized concepts, which form a controlled vocabulary.\n\n",
    "title": "AI/Connect API Reference",
    "version": "3.0"
  },
  "paths": {
    "/affinities/": {
      "get": {
        "description": "Detects all affinities of a user.",
        "operationId": "get_affinities_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "entity": {
                        "displayName": "BENUTZER",
                        "entityClass": "USER",
                        "id": "0e3cb7d1-1ccb-4094-b382-21d3590dfe58",
                        "userId": "0e3cb7d1-1ccb-4094-b382-21d3590dfe58"
                      },
                      "id": "ddb071a9-980d-7f25-4bfe-4d8ecdc5140e",
                      "relations": [
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/",
                          "rel": "tag_trees"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/14/",
                          "rel": "tag_tree"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/14/tag-tree-items/",
                          "rel": "tag_tree_items"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/14/tag-tree-items/1/",
                          "rel": "tag_tree_item"
                        }
                      ],
                      "tagTreeItem": {
                        "description": "Sportive",
                        "displayName": "Sportenthusiast*in",
                        "systemId": 1,
                        "systemName": "SPORTIVE",
                        "tagTree": {
                          "description": "Affinity detection tag tree.",
                          "displayName": "Affinit√§ten",
                          "isTenantGenerated": false,
                          "systemId": 14,
                          "systemName": "AFFINITIES",
                          "version": 0.1
                        }
                      }
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/categorization_tag_instance_schema"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Return the affinities of a user",
        "tags": [
          "Affinities"
        ]
      }
    },
    "/affordability/": {
      "get": {
        "description": "Defines attributes to determine the affordability of a user.\n\nThe endpoint uses the results of various other endpoints and aggregates them to define\nseveral attributes, such as discretionary money or the amount a user spends on\ngambling activities, which should allow a confident decision whether a user can\nafford a certain product or service.",
        "operationId": "get_affordability_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/affordability_tag_instance_schema"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Return an affordability tag",
        "tags": [
          "Affordability"
        ]
      }
    },
    "/business-partners/": {
      "get": {
        "description": "Identifies normalized business partner and returns detailed information such as\ncontaining address, website.\n\nBusiness Partner is the financial entity that provides the good or service that\nthe transaction is related to. It differs from the payment handler or the bank.\n\nNormalization brings different names of the business partner under a single\nsystem name.\n\nTo get a full list of tag tree items, use:\nGET /tags/v1/tags/tag-trees/3/tag-tree-items/",
        "operationId": "get_business_partner_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "accessId",
            "in": "path",
            "description": "ID of the bank access",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "Demo-Bank"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the bank product",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "DE00123456789012345678"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "betrag": -39.09,
                      "buchungsdatum": "2023-07-11 17:00:00",
                      "gegenkontoBic": "",
                      "gegenkontoIban": "",
                      "gegenkontoInhaber": "",
                      "hash": "8891f1f9-511a-3ed6-8982-ef4078cecc16",
                      "id": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
                      "primanotaNummer": "12345",
                      "tags": [
                        {
                          "entity": {
                            "displayName": "Kontoumsatz",
                            "entityClass": "TRANSACTION",
                            "id": "956ca508-c0e2-52c5-3202-8de20e7ed12b"
                          },
                          "id": "9504ebeb-d54d-42fd-97a5-1b7117593dc2",
                          "relations": [
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/",
                              "rel": "tag_trees"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/3/",
                              "rel": "tag_tree"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/3/tag-tree-items/",
                              "rel": "tag_tree_items"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/3/tag-tree-items/202/",
                              "rel": "tag_tree_item"
                            }
                          ],
                          "tagTreeItem": {
                            "addressCity": "Stuttgart",
                            "addressCountry": "Deutschland",
                            "addressStreet": "Reinsburgstra√üe 19",
                            "addressZip": "70178",
                            "creditorId": "DE07ZZZ00000063475",
                            "displayName": "Allianz Lebensversicherung",
                            "group": "Allianz",
                            "systemId": 202,
                            "systemName": "Allianz Lebensversicherungs-AG",
                            "tagTree": {
                              "description": "Single level tag tree of business partners.",
                              "displayName": "Gesch√§ftspartner",
                              "isClientGenerated": false,
                              "systemId": 3,
                              "systemName": "BUSINESS_PARTNERS",
                              "version": 1.9
                            },
                            "telephone": "0711-663-0",
                            "website": "http://www.allianz.de"
                          }
                        }
                      ],
                      "verwendungszweck": "CRED DE07ZZZ00000063475 Beitrag Lebensvers 2023 07 SEPA BASISLASTSCHRIFT wiederholend",
                      "wertstellungsdatum": "2023-07-11 17:00:00"
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/v3_output_connect_schema"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Return business partners tags",
        "tags": [
          "Business Partners"
        ]
      }
    },
    "/cashflow/": {
      "get": {
        "description": "This is a utility function for Personal Finance Management applications.\n\nThe endpoint simply aggregates transactions on the dimension set by the request\nparameter `focus`:\n\nIf `focus` set to **time**, the transactions are partitioned by time and aggregated by\nthe choice of `tag`.\nIf `tag` is set to **CATEGORIES**, we deliver the distribution of net cash-flow across\nall categories, indexed over time periods. The results can be used as monthly\npie-charts depicting spending habits.\nBy setting `tag` to **BUSINESS_PARTNERS**, distribution is calculated across business\npartners.\n\nIf `focus` is set to **tag**, we limit the result to the net cash-flow in a given\n`tag`, and get the time domain changes for this specific tag. If the request parameter\n`tag` is set to `**CATEGORIES**, we answer the question: \"How did my spending change\nwithin a category over time?\".\nBy setting  `tag` to **BUSINESS_PARTNERS**, we answer \"How much did I spend to a\ncertain business partner over time?\"",
        "operationId": "get_cashflow_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "description": "Cashflow is generated with the focus on either time or tag (CATEGORIES or BUSINESS_PARTNER)",
            "in": "query",
            "name": "focus",
            "schema": {
              "type": "string",
              "enum": [
                "tag",
                "time"
              ],
              "default": "time"
            }
          },
          {
            "description": "Tag to use when summarizing the cashflow",
            "in": "query",
            "name": "tag",
            "schema": {
              "type": "string",
              "enum": [
                "CATEGORIES",
                "BUSINESS_PARTNERS"
              ],
              "default": "CATEGORIES"
            }
          },
          {
            "description": "Use the usual tags (\"sub\") or their parents (\"main\"). Only relevant if tag=CATEGORIES",
            "in": "query",
            "name": "catLevel",
            "schema": {
              "type": "string",
              "enum": [
                "sub",
                "main"
              ],
              "default": "sub"
            }
          },
          {
            "description": "Exclude savings and investments related transactions",
            "in": "query",
            "name": "excludeSavings",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "details": {
                        "predictions": [],
                        "statistics": [
                          {
                            "cashflow": -1879.46,
                            "tagTreeItem": {
                              "displayName": "Gesamt",
                              "systemId": 906,
                              "systemName": "TOTAL_TOTAL",
                              "systemNameParent": "TOTAL",
                              "tagTree": {
                                "description": "Two level tree with years as parents and its periods as children.",
                                "displayName": "Cashflow",
                                "isClientGenerated": false,
                                "systemId": 6,
                                "systemName": "CASHFLOW",
                                "version": 1
                              }
                            }
                          },
                          {
                            "cashflow": -342.91,
                            "tagTreeItem": {
                              "displayName": "Jahr 2020",
                              "systemId": 692,
                              "systemName": "2020_Y",
                              "systemNameParent": "2020",
                              "tagTree": {
                                "description": "Two level tree with years as parents and its periods as children.",
                                "displayName": "Cashflow",
                                "isClientGenerated": false,
                                "systemId": 6,
                                "systemName": "CASHFLOW",
                                "version": 1
                              }
                            }
                          },
                          {
                            "cashflow": -342.91,
                            "tagTreeItem": {
                              "displayName": "1. Quartal 2020",
                              "systemId": 634,
                              "systemName": "2020_Q1",
                              "systemNameParent": "2020",
                              "tagTree": {
                                "description": "Two level tree with years as parents and its periods as children.",
                                "displayName": "Cashflow",
                                "isClientGenerated": false,
                                "systemId": 6,
                                "systemName": "CASHFLOW",
                                "version": 1
                              }
                            }
                          },
                          {
                            "cashflow": -154.3,
                            "tagTreeItem": {
                              "displayName": "Januar 2020",
                              "systemId": 622,
                              "systemName": "2020_M01",
                              "systemNameParent": "2020",
                              "tagTree": {
                                "description": "Two level tree with years as parents and its periods as children.",
                                "displayName": "Cashflow",
                                "isClientGenerated": false,
                                "systemId": 6,
                                "systemName": "CASHFLOW",
                                "version": 1
                              }
                            }
                          },
                          {
                            "cashflow": -29.99,
                            "tagTreeItem": {
                              "displayName": "1. Kalenderwoche 2020",
                              "systemId": 639,
                              "systemName": "2020_W01",
                              "systemNameParent": "2020",
                              "tagTree": {
                                "description": "Two level tree with years as parents and its periods as children.",
                                "displayName": "Cashflow",
                                "isClientGenerated": false,
                                "systemId": 6,
                                "systemName": "CASHFLOW",
                                "version": 1
                              }
                            }
                          }
                        ]
                      },
                      "entity": {
                        "displayName": "USER",
                        "entityClass": "USER",
                        "id": "0b64d605-0483-4bae-8b12-fa26e313060b"
                      },
                      "id": "4ff21ddb-baae-47f0-8181-77b7c5a7ade0",
                      "relations": [
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/",
                          "rel": "tag_trees"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/",
                          "rel": "tag_tree"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/",
                          "rel": "tag_tree_items"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/2/",
                          "rel": "tag_tree_item"
                        }
                      ],
                      "tagTreeItem": {
                        "description": "Transactions including invoices & bills",
                        "displayName": "Vertragsrechnungen",
                        "systemId": 2,
                        "systemName": "BILLS",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isClientGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.7
                        }
                      }
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/cashflow_tag_instance_schema"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Return cashflow tags with statistics and predictions",
        "tags": [
          "Cashflow"
        ]
      }
    },
    "/categories-v1/": {
      "get": {
        "deprecated": true,
        "operationId": "get_category_v1_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "accessId",
            "in": "path",
            "description": "ID of the bank access",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "Demo-Bank"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the bank product",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "DE00123456789012345678"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "betrag": -3.94,
                      "buchungsdatum": "2020-03-01 10:00",
                      "buchungstext": "Lastschrift",
                      "gegenkontoBic": "PBNKDEFF",
                      "gegenkontoIban": "DE75512108001245126199",
                      "gegenkontoInhaber": "Erika Musterfrau",
                      "gvCode": "082",
                      "hash": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
                      "id": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
                      "primanotaNummer": "999001",
                      "product": "30cc4587-7e5f-450f-bb51-dc3829f67db4",
                      "provider": "23d67ff8-ff6a-44ff-93da-f2af835394e4",
                      "tags": [
                        {
                          "category": "LIVING_GROCERIES",
                          "confidenceLevel": 0.95,
                          "displayName": "Lebensmittel",
                          "parent": "LIVING",
                          "parentCategory": "LIVING",
                          "systemName": "LIVING_GROCERIES",
                          "tagId": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
                          "tagScope": "transaction",
                          "tagType": "CATEGORY",
                          "tagVersion": "1.5"
                        }
                      ],
                      "tenant": "1bcb487e-f409-4438-a358-d8d128581761",
                      "user": "624ca509-b0f2-42f6-b202-8de20e9ed12a",
                      "verwendungszweck": "Miete 2020 03 Wohnung 123 Bahnhofsstra√üe 1",
                      "wertstellungsdatum": "2020-03-01 10:00"
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/v1_output"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "DEPRECATED",
        "tags": [
          "Categories V1"
        ]
      }
    },
    "/categories/": {
      "get": {
        "description": "Gives transaction categories based on everyday spending types such as groceries shopping or\nrental payments.\n\nTo get a full list of such categories, use:\nGET /tags/v1/tags/tag-trees/1/tag-tree-items/\n\n### Categorization Logic\n\n    We use a hybrid model, that combines a basic model and an AI model.\n\n    The basic model runs first. If it cannot find a category, the AI model runs as well.\n    If the found category has a sufficient confidence, it is returned.\n\n    If the basic model yields multiple tags, the AI model runs as well. Majority voting in\n    combination with a confidence threshold is used to determine the best fitting category.\n\n#### Basic Model\n    The basic model searches for keywords and regular expression based substrings in note to\n    payee, counterparty name and posting text.\n\n    It includes the main categories of the insurance classifier to precisely detect\n    insurance transactions.\n\n    There are several additional steps for specific types of transactions, counterparties\n    and categories to further improve the accuracy of this model.\n\n#### Artificial Intelligence Model\n    The model architecture is a bidirectional recurrent neural network with long short-term\n    memory and an attention mechanism.\n\n    The samples used for training this model do not contain any user related identifiers.\n    The training encompasses semantically-meaningful word and sub-word embeddings,\n    pre-trained in an unsupervised setting as well as human and automatically labeled data,\n    providing a total of more than a million training samples.\n    Even before a human labeler processes a transaction, each transaction gets anonymized.\n    Amounts get slightly shifted randomly and all sensible information such as names and\n    addresses are automatically removed from all texts. With this process, data privacy is\n    fully ensured.",
        "operationId": "get_category_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "accessId",
            "in": "path",
            "description": "ID of the bank access",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "Demo-Bank"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the bank product",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "DE00123456789012345678"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success, tags read from database",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "betrag": -14.87,
                      "buchungsdatum": "2023-07-04 18:00:00",
                      "gegenkontoBic": "",
                      "gegenkontoIban": "",
                      "gegenkontoInhaber": "LV AG",
                      "hash": "8891f1f9-511a-3ed6-8982-ef4078cecc16",
                      "id": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
                      "primanotaNummer": "12345",
                      "tags": [
                        {
                          "details": {
                            "confidenceLevel": 0.9897049813270569
                          },
                          "entity": {
                            "displayName": "Kontoumsatz",
                            "entityClass": "Kontoumsatz",
                            "id": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
                            "userId": "624ca509-b0f2-42f6-b202-8de20e9ed12a"
                          },
                          "id": "7f263a51-f368-4c52-bf14-eed0c21e2db8",
                          "relations": [
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/",
                              "rel": "tag_trees"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/1/",
                              "rel": "tag_tree"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/",
                              "rel": "tag_tree_items"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/67/",
                              "rel": "tag_tree_item"
                            }
                          ],
                          "tagTreeItem": {
                            "description": "Payments related to a life insurance contract",
                            "displayName": "Lebensversicherung",
                            "systemId": 58,
                            "systemName": "INSURANCE_LIFE",
                            "systemNameParent": "INSURANCE",
                            "tagTree": {
                              "description": "Two level categorization tree.",
                              "displayName": "Kategorien",
                              "isClientGenerated": false,
                              "systemId": 1,
                              "systemName": "CATEGORIES",
                              "version": 4.03
                            }
                          }
                        }
                      ],
                      "verwendungszweck": "CRED DE07ZZZ00000063475 Beitrag Lebensvers 2020 01 SEPA BASISLASTSCHRIFT wiederholend",
                      "wertstellungsdatum": "2023-07-04 18:00:00"
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/v3_output_connect_schema"
                  },
                  "type": "array"
                }
              }
            }
          },
          "201": {
            "description": "Success, some tags newly created",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "betrag": -14.87,
                      "buchungsdatum": "2023-07-04 18:00:00",
                      "gegenkontoBic": "",
                      "gegenkontoIban": "",
                      "gegenkontoInhaber": "LV AG",
                      "hash": "8891f1f9-511a-3ed6-8982-ef4078cecc16",
                      "id": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
                      "primanotaNummer": "12345",
                      "tags": [
                        {
                          "details": {
                            "confidenceLevel": 0.9897049813270569
                          },
                          "entity": {
                            "displayName": "Kontoumsatz",
                            "entityClass": "Kontoumsatz",
                            "id": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
                            "userId": "624ca509-b0f2-42f6-b202-8de20e9ed12a"
                          },
                          "id": "7f263a51-f368-4c52-bf14-eed0c21e2db8",
                          "relations": [
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/",
                              "rel": "tag_trees"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/1/",
                              "rel": "tag_tree"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/",
                              "rel": "tag_tree_items"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/67/",
                              "rel": "tag_tree_item"
                            }
                          ],
                          "tagTreeItem": {
                            "description": "Payments related to a life insurance contract",
                            "displayName": "Lebensversicherung",
                            "systemId": 58,
                            "systemName": "INSURANCE_LIFE",
                            "systemNameParent": "INSURANCE",
                            "tagTree": {
                              "description": "Two level categorization tree.",
                              "displayName": "Kategorien",
                              "isClientGenerated": false,
                              "systemId": 1,
                              "systemName": "CATEGORIES",
                              "version": 4.03
                            }
                          }
                        }
                      ],
                      "verwendungszweck": "CRED DE07ZZZ00000063475 Beitrag Lebensvers 2020 01 SEPA BASISLASTSCHRIFT wiederholend",
                      "wertstellungsdatum": "2023-07-04 18:00:00"
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/v3_output_connect_schema"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "408": {
            "description": "RequestTimeout"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Get consumer categorization tags",
        "tags": [
          "Categories"
        ]
      },
      "put": {
        "description": "This method applies corrections to the categorization of transactions.\n\nInput contains the tag tree item(s) that should be used for re-categorization.\nAll provided tag tree items have to be valid.\nIf a single tag tree item is provided, all transaction tags receive this tag tree item.\nIf multiple tag tree items are provided, each transaction tag receives a different tag tree\nitem. Make sure to provide exactly as many tag tree items as transactions in this scenario.\n\nThe flag createRule creates a user specific rule that automatically categorizes this\ncounterparty with the provided tag tree item in all future transactions. This is a smart\nsolution to eradicate a recurring re-categorization process.\n\nThe flag changeExisting re-categorizes all existing transactions of the same counterparty.\n\nThe tagTreeItem(s) have to include a tagTree and have to be wrapped in tags: [].\n\nThe re-categorization relies on the systemName value of tagTreeItem and tagTree, all other\nfields are ignored.\n\nExample:\n```json\n{\n  \"tags\": [\n    {\n      \"tagTreeItem\": {\n        \"systemId\": 67,\n        \"systemName\": \"LIVING_GROCERIES\",\n        \"tagTree\": {\n          \"systemId\": 1,\n          \"systemName\": \"CATEGORIES\"\n        }\n      }\n    }\n  ]\n}\n```\n\nTo get a full list of tag tree items, use:\nGET /tags/v1/tags/tag-trees/1/tag-tree-items/",
        "operationId": "put_category_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "description": "This option creates a rule for this counterparty. All future transactions with this counterparty will be categorized according to the provided category. Default value is false.",
            "in": "query",
            "name": "createRule",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "This option re-categorizes all existing transactions with this counterparty according to the provided category. Default value is false.",
            "in": "query",
            "name": "changeExisting",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "accessId",
            "in": "path",
            "description": "ID of the bank access",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "Demo-Bank"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the bank product",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "DE00123456789012345678"
            }
          },
          {
            "name": "transactionId",
            "in": "path",
            "description": "ID of the transaction",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "f161f32c-8869-40e0-ab0c-bd2ebeda4963"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v3_connect_put_schema"
        },
        "responses": {
          "200": {
            "description": "Successfully modified tag(s)."
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "UnprocessableEntity"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Update consumer categorization tags",
        "tags": [
          "Categories"
        ]
      }
    },
    "/contracts/": {
      "get": {
        "description": "Detects contracts using all the transactions of a user, independent of accounts\nand banks. All the transactions are aggregated.\n\nThe transactions are categorized and periodic payments are detected first.\n\nContracts are created by grouping payments of similar size in the same category and\nmade to a certain business partners.\n\nAfter transactions are grouped, we extract further statistics and make simple\npredictions on next amount and due date.\n\n### APR Estimation\n    Best effort estimate of the Annual Percentage Rate (APR) is given for fixed payment\n    credit contracts. This feature works if:\n\n    * The note to payee includes breakdown of the principal and interest payments, and\n    we have the first 2 payments to the credit giver.\n\n    * We see the initial credit payment to the user and next two fixed payments, without\n    having the interest/principal payment ratio.",
        "operationId": "get_contract_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "description": "If True, returns insurance related contracts only",
            "in": "query",
            "name": "insuranceOnly",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "If True, returns insurance related contracts and contract with the category SAVINGS_BUILDING",
            "in": "query",
            "name": "insuranceOnlyExtended",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "details": {
                        "amountFirst": -319,
                        "amountLatest": -319,
                        "amountMaximum": -319,
                        "amountMean": -319,
                        "amountMinimum": -319,
                        "amountNext": -319,
                        "amountTotal": -4466,
                        "amountTotalNonRegular": 0,
                        "amountTotalRegular": -4466,
                        "costDevelopment": {
                          "2019-01-20": -319,
                          "2019-02-20": -319,
                          "2019-03-20": -319,
                          "2019-04-20": -319,
                          "2019-05-20": -319,
                          "2019-06-20": -319,
                          "2019-07-20": -319,
                          "2019-08-20": -319,
                          "2019-09-20": -319,
                          "2019-10-20": -319,
                          "2019-11-20": -319,
                          "2019-12-20": -319,
                          "2020-01-20": -319,
                          "2020-02-20": -319
                        },
                        "costDevelopmentRegular": {
                          "2019-01-20": -319,
                          "2019-02-20": -319,
                          "2019-03-20": -319,
                          "2019-04-20": -319,
                          "2019-05-20": -319,
                          "2019-06-20": -319,
                          "2019-07-20": -319,
                          "2019-08-20": -319,
                          "2019-09-20": -319,
                          "2019-10-20": -319,
                          "2019-11-20": -319,
                          "2019-12-20": -319,
                          "2020-01-20": -319,
                          "2020-02-20": -319
                        },
                        "counterpartyBic": "",
                        "counterpartyIban": "DE123456222",
                        "counterpartyName": "Allianz Private Krankenversicherungs AG",
                        "dateFirst": "2019-01-20",
                        "dateLatest": "2020-02-20",
                        "dateNext": "2020-03-20",
                        "daysAge": 445,
                        "growthRate": 0,
                        "numberCustomer": ".:",
                        "standardDeviation": 0,
                        "status": "ACTIVE",
                        "transactionIds": [
                          "qj64ir73-30ba-yei2-1i1q-vrg8glvkhwno",
                          "lbmk8o1n-a832-xcqi-mpcp-brv4pieipge8",
                          "qks1f8e9-59yu-rglt-yvq9-y8jnlm5huhro",
                          "2j3599se-4b53-q06f-78u6-byv3q9hltndt",
                          "hqe7417d-9ixm-6bzk-0ckm-tp3914r4k2ay",
                          "dxfav1pk-vqxv-6390-qrb3-4pigp5s614u5",
                          "a36lxcgg-3drd-f7w5-e3bb-uin03hxxni48",
                          "cs7ew6pu-mn2n-5xko-48sj-u33owtszqqub",
                          "uzi9a837-63ld-t8b2-t2s0-sle79yz1mx88",
                          "yayvsn9d-oszt-mg4k-8q86-f0du01kineis",
                          "9n4va5cc-5hx3-r14q-ehe2-9d7c2jbehstq",
                          "kbw1nxhc-uxmq-4pyi-kar7-hlii1viy9bus",
                          "g3kqczjp-5cuq-ntl6-k5vw-454vfy0bfa3d",
                          "yv8uh99n-csyj-66xn-4wkr-f3nvzzxkhas7"
                        ],
                        "transactionIdsNonRegular": [],
                        "transactionIdsRegular": [
                          "qj64ir73-30ba-yei2-1i1q-vrg8glvkhwno",
                          "lbmk8o1n-a832-xcqi-mpcp-brv4pieipge8",
                          "qks1f8e9-59yu-rglt-yvq9-y8jnlm5huhro",
                          "2j3599se-4b53-q06f-78u6-byv3q9hltndt",
                          "hqe7417d-9ixm-6bzk-0ckm-tp3914r4k2ay",
                          "dxfav1pk-vqxv-6390-qrb3-4pigp5s614u5",
                          "a36lxcgg-3drd-f7w5-e3bb-uin03hxxni48",
                          "cs7ew6pu-mn2n-5xko-48sj-u33owtszqqub",
                          "uzi9a837-63ld-t8b2-t2s0-sle79yz1mx88",
                          "yayvsn9d-oszt-mg4k-8q86-f0du01kineis",
                          "9n4va5cc-5hx3-r14q-ehe2-9d7c2jbehstq",
                          "kbw1nxhc-uxmq-4pyi-kar7-hlii1viy9bus",
                          "g3kqczjp-5cuq-ntl6-k5vw-454vfy0bfa3d",
                          "yv8uh99n-csyj-66xn-4wkr-f3nvzzxkhas7"
                        ]
                      },
                      "entity": {
                        "displayName": "USER",
                        "entityClass": "USER",
                        "id": "0b64d605-0483-4bae-8b12-fa26e313060b"
                      },
                      "id": "824aa59a-c243-744f-fcbb-a6ce1edacd02",
                      "relations": [
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/",
                          "rel": "tag_trees"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/",
                          "rel": "tag_tree_category"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/",
                          "rel": "tag_tree_items_category"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/64/",
                          "rel": "tag_tree_item_category"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/2/",
                          "rel": "tag_tree_insurance_type"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/2/tag-tree-items/",
                          "rel": "tag_tree_items_insurance_type"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/2/tag-tree-items/134/",
                          "rel": "tag_tree_item_insurance_type"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/4/",
                          "rel": "tag_tree_period"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/4/tag-tree-items/",
                          "rel": "tag_tree_items_period"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/4/tag-tree-items/235/",
                          "rel": "tag_tree_item_period"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/3/",
                          "rel": "tag_tree_business_partner"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/3/tag-tree-items/",
                          "rel": "tag_tree_items_business_partner"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/3/tag-tree-items/206/",
                          "rel": "tag_tree_item_business_partner"
                        }
                      ],
                      "tagTreeItemBusinessPartner": {
                        "addressCity": "M√ºnchen",
                        "addressCountry": "Deutschland",
                        "addressStreet": "K√∂niginstra√üe 28",
                        "addressZip": "80802",
                        "creditorId": "DE40ZZZ00000063851",
                        "displayName": "Allianz Private Krankenversicherung",
                        "group": "Allianz",
                        "systemId": 206,
                        "systemName": "Allianz Private Krankenversicherungs AG",
                        "tagTree": {
                          "description": "Single level tag tree of business partners.",
                          "displayName": "Gesch√§ftspartner",
                          "isClientGenerated": false,
                          "systemId": 3,
                          "systemName": "BUSINESS_PARTNERS",
                          "version": 1.9
                        },
                        "telephone": "089-3800-1000",
                        "website": "http://www.allianz.de"
                      },
                      "tagTreeItemCategory": {
                        "description": "Payments related to a health insurance contract",
                        "displayName": "Krankenversicherung",
                        "systemId": 64,
                        "systemName": "INSURANCE_HEALTH",
                        "systemNameParent": "INSURANCE",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isClientGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.7
                        }
                      },
                      "tagTreeItemInsuranceType": {
                        "displayName": "Private Krankenversicherung",
                        "systemId": 134,
                        "systemName": "HEALTH_PRIVATE",
                        "systemNameParent": "HEALTH",
                        "tagTree": {
                          "description": "Two level fine grained insurance categorization tag tree.",
                          "displayName": "Versicherungsarten",
                          "isClientGenerated": false,
                          "systemId": 2,
                          "systemName": "INSURANCE_TYPES",
                          "version": 2.4
                        }
                      },
                      "tagTreeItemPeriod": {
                        "description": "Period of a single month",
                        "displayName": "Ein Monat",
                        "systemId": 235,
                        "systemName": "MONTH_ONE",
                        "systemNameParent": "MONTH",
                        "tagTree": {
                          "description": "Two level periods tag tree.",
                          "displayName": "Turnus",
                          "isClientGenerated": false,
                          "systemId": 4,
                          "systemName": "PERIODS",
                          "version": 0.4
                        }
                      }
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/contract_tag_instance_schema"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Return contract tags",
        "tags": [
          "Contracts"
        ]
      }
    },
    "/credit-attributes/": {
      "get": {
        "description": "Calculates and summarizes relevant financial attributes of the user that are relevant for\ncredit risk estimation.",
        "operationId": "get_credit_attributes_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credit_attributes_schema"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Return credit attributes",
        "tags": [
          "Credit Attributes"
        ]
      }
    },
    "/credit-check/": {
      "get": {
        "deprecated": true,
        "operationId": "get_credit_check_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credit_check_tag_instance_schema"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "DEPRECATED",
        "tags": [
          "Credit Check"
        ]
      }
    },
    "/disposable-money/": {
      "get": {
        "description": "Defines the disposable money of a user when the next salary payment is expected.\n\nThe transactions are categorized, contracts created, cashflow analyzed and predicted.\n\nBy detailed analysis of statistics and predictions of a user's transactions,\nthe following values are extracted.\n\n### dateSalaryLatest\n    Date of the latest salary payment\n\n### dateSalaryNext\n    date of the next salary payment\n\n### amountSalaryLatest\n    Amount of the latest salary payment\n\n### amountSalaryNext\n    Amount of the next salary payment\n\n### daysUntilSalary\n    Days until the next salary payment is expected\n\n### amountCashflow\n    Sum of income and expenses (cashflow) since the latest salary payment\n\n### amountCurrentlyLeft\n    Amount currently left until the next salary payment\n    considering the cashflow since the latest salary payment\n\n### amountExpectedFixedCashflow\n    Sum of expected income and expenses (cashflow) from contracts\n    due until the next salary payment\n\n### amountExpectedLeft\n    Amount expectedly left until the next salary payment\n    considering the cashflow since the latest salary payment\n    and the expected cashflow until the next salary payment\n\n### amountExpectedLeftDaily\n    Daily amount expectedly left until the next salary payment\n    considering the cashflow since the latest salary payment\n    and the expected cashflow until the next salary payment\n\n### amountExpectedFlexCashflow\n    Sum of flexible income and expenses (cashflow)\n    expected until the next salary payment derived from previous\n    spending habits excluding contracts (expected fixed cashflow)\n\n### amountDisposableMoney\n    Amount estimated to be left at the next salary payment\n    considering the cashflow since the latest salary payment\n    the expected fixed cashflow until the next salary payment\n    and the expected flexible cashflow until the next salary payment",
        "operationId": "get_disposable_money_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/disposable_money_tag_instance_schema"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Return a disposable money tag",
        "tags": [
          "Disposable Money"
        ]
      }
    },
    "/freelancer-categories/": {
      "get": {
        "description": "Gives detailed freelancer transactions categories in accordance with\nthe Einnahmen√ºberschussrechnung (E√úR).",
        "operationId": "get_freelancer_categories_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "accessId",
            "in": "path",
            "description": "ID of the bank access",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "Demo-Bank"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the bank product",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "DE00123456789012345678"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success, tags read from database",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "betrag": -31.18,
                      "buchungsdatum": "2023-07-08 13:29:00",
                      "buchungstext": "",
                      "gegenkontoBic": "PBNKDEFF",
                      "gegenkontoIban": "DE08250100300000289304",
                      "gegenkontoInhaber": "Telekom Deutschland GmbH",
                      "gvCode": "56",
                      "hash": "d12e4064-aac6-1ad2-8cdc-e00345634b22",
                      "id": "1ad7cf10-000d-12e4-064b-ba73b828cdce",
                      "primanotaNummer": "485656",
                      "tags": [
                        {
                          "entity": {
                            "displayName": "Kontoumsatz",
                            "entityClass": "TRANSACTION",
                            "id": "1ad7cf10-000d-12e4-064b-ba73b828cdce",
                            "userId": "0e3cb7d1-1ccb-4094-b382-21d3590dfe58"
                          },
                          "id": "ebf1b6a6-8ccc-2135-8843-83f0daa5355e",
                          "relations": [
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/",
                              "rel": "tag_trees"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/15/",
                              "rel": "tag_tree"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/15/tag-tree-items/",
                              "rel": "tag_tree_items"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/15/tag-tree-items/41/",
                              "rel": "tag_tree_item"
                            }
                          ],
                          "tagTreeItem": {
                            "displayName": "Aufwendungen f√ºr Telekommunikation",
                            "systemId": 41,
                            "systemName": "TELECOMMUNICATIONS",
                            "tagTree": {
                              "description": "Freelancer categories tag tree.",
                              "displayName": "Freelancer-Kategorien",
                              "isTenantGenerated": false,
                              "systemId": 15,
                              "systemName": "FREELANCER_CATEGORIES",
                              "version": 0.1
                            }
                          }
                        }
                      ],
                      "verwendungszweck": "Telekom Deutschland GmbH Festnetz Vertragskonto 5574442211 End to End Ref Zahlbeleg 93112306740 Mandatsref 00001234534 CRED DE93ZZZ00000078611 SEPA BASISLASTSCHRIFT wiederholend",
                      "wertstellungsdatum": "2023-07-08 13:29:00"
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/v3_output_connect_schema"
                  },
                  "type": "array"
                }
              }
            }
          },
          "201": {
            "description": "Success, some tags newly created",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "betrag": -31.18,
                      "buchungsdatum": "2023-07-08 13:29:00",
                      "buchungstext": "",
                      "gegenkontoBic": "PBNKDEFF",
                      "gegenkontoIban": "DE08250100300000289304",
                      "gegenkontoInhaber": "Telekom Deutschland GmbH",
                      "gvCode": "56",
                      "hash": "d12e4064-aac6-1ad2-8cdc-e00345634b22",
                      "id": "1ad7cf10-000d-12e4-064b-ba73b828cdce",
                      "primanotaNummer": "485656",
                      "tags": [
                        {
                          "entity": {
                            "displayName": "Kontoumsatz",
                            "entityClass": "TRANSACTION",
                            "id": "1ad7cf10-000d-12e4-064b-ba73b828cdce",
                            "userId": "0e3cb7d1-1ccb-4094-b382-21d3590dfe58"
                          },
                          "id": "ebf1b6a6-8ccc-2135-8843-83f0daa5355e",
                          "relations": [
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/",
                              "rel": "tag_trees"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/15/",
                              "rel": "tag_tree"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/15/tag-tree-items/",
                              "rel": "tag_tree_items"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/15/tag-tree-items/41/",
                              "rel": "tag_tree_item"
                            }
                          ],
                          "tagTreeItem": {
                            "displayName": "Aufwendungen f√ºr Telekommunikation",
                            "systemId": 41,
                            "systemName": "TELECOMMUNICATIONS",
                            "tagTree": {
                              "description": "Freelancer categories tag tree.",
                              "displayName": "Freelancer-Kategorien",
                              "isTenantGenerated": false,
                              "systemId": 15,
                              "systemName": "FREELANCER_CATEGORIES",
                              "version": 0.1
                            }
                          }
                        }
                      ],
                      "verwendungszweck": "Telekom Deutschland GmbH Festnetz Vertragskonto 5574442211 End to End Ref Zahlbeleg 93112306740 Mandatsref 00001234534 CRED DE93ZZZ00000078611 SEPA BASISLASTSCHRIFT wiederholend",
                      "wertstellungsdatum": "2023-07-08 13:29:00"
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/categorization_tag_instance_schema"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Get freelancer-categories categorization tags",
        "tags": [
          "Freelancer Categories"
        ]
      },
      "put": {
        "description": "This method applies corrections to the categorization of transactions.\n\nInput contains the tag tree item that should be used for re-categorization.\nA valid tag tree item has to be provided.\n\nThe flag createRule creates a user specific rule that automatically categorizes this\ncounterparty with the provided tag tree item in all future transactions.\nThis is a smart solution to eradicate a recurring re-categorization process.\n\nThe flag changeExisting re-categorizes all existing transactions of the same\ncounterparty.\n\nThe tagTreeItem has to include a tagTree and has to be wrapped in tags: [].\n\nThe re-categorization currently relies on the systemName value of tagTreeItem and\ntagTree, but as this might change in the future, both systemName and systemId should\nbe included in the payload, all other fields are ignored.\n\nExample:\n```json\n{\n  \"tags\": [\n    {\n      \"tagTreeItem\": {\n        \"systemId\": 35,\n        \"systemName\": \"PAYROLL\",\n        \"tagTree\": {\n          \"systemId\": 15,\n          \"systemName\": \"FREELANCER_CATEGORIES\"\n        }\n      }\n    }\n  ]\n}\n```\n\nTo get a full list of tag tree items, use:\nGET /tags/v1/tags/tag-trees/15/tag-tree-items/",
        "operationId": "put_freelancer_categories_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "description": "This option creates a rule for this counterparty. All future transactions with this counterparty will be categorized according to the provided category. Default value is false.",
            "in": "query",
            "name": "createRule",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "This option re-categorizes all existing transactions with this counterparty according to the provided category. Default value is false.",
            "in": "query",
            "name": "changeExisting",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "accessId",
            "in": "path",
            "description": "ID of the bank access",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "Demo-Bank"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the bank product",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "DE00123456789012345678"
            }
          },
          {
            "name": "transactionId",
            "in": "path",
            "description": "ID of the transaction",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "f161f32c-8869-40e0-ab0c-bd2ebeda4963"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v3_connect_put_schema"
        },
        "responses": {
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "UnprocessableEntity"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Update freelancer-categories categorization tags",
        "tags": [
          "Freelancer Categories"
        ]
      }
    },
    "/insurance-types/": {
      "get": {
        "description": "Gives detailed insurance types.\n\nCategorization is based on keywords, sophisticated regular expressions and several specific\nrules. This classification is an extension of the categories endpoint and can be thought as\na third level in the classification hierarchy.",
        "operationId": "get_insurance_types_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "accessId",
            "in": "path",
            "description": "ID of the bank access",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "Demo-Bank"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the bank product",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "DE00123456789012345678"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "betrag": -13.09,
                      "buchungsdatum": "2020-03-11 18:00:00",
                      "gegenkontoBic": "",
                      "gegenkontoIban": "",
                      "gegenkontoInhaber": "",
                      "hash": "8891f1f9-511a-3ed6-8982-ef4078cecc16",
                      "id": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
                      "primanotaNummer": "12345",
                      "tags": [
                        {
                          "entity": {
                            "displayName": "Kontoumsatz",
                            "entityClass": "TRANSACTION",
                            "id": "956ca508-c0e2-52c5-3202-8de20e7ed12b"
                          },
                          "id": "eb047b64-619f-4104-805e-ee6c832bc306",
                          "relations": [
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/",
                              "rel": "tag_trees"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/2/",
                              "rel": "tag_tree"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/2/tag-tree-items/",
                              "rel": "tag_tree_items"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/2/tag-tree-items/164/",
                              "rel": "tag_tree_item"
                            }
                          ],
                          "tagTreeItem": {
                            "displayName": "Kapitallebensversicherung",
                            "systemId": 164,
                            "systemName": "LIFE_ENDOWMENT",
                            "systemNameParent": "LIFE",
                            "tagTree": {
                              "description": "Two level fine grained insurance categorization tag tree.",
                              "displayName": "Versicherungsarten",
                              "isClientGenerated": false,
                              "systemId": 2,
                              "systemName": "INSURANCE_TYPES",
                              "version": 2.4
                            }
                          }
                        }
                      ],
                      "verwendungszweck": "CRED DE07ZZZ00000063475 Beitrag Lebensvers 2020 01 SEPA BASISLASTSCHRIFT wiederholend",
                      "wertstellungsdatum": "2020-03-11 18:00:00"
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/v3_output_connect_schema"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Return insurance types categorization tags",
        "tags": [
          "Insurance Types"
        ]
      }
    },
    "/life/events/": {
      "get": {
        "description": "Detects all life events of a user.\n\nLife events are key events in a user's life that represent some significant change.\nThey are always the start or end of some activity or state. In general, although life\nevents often correspond to the start or end of a life stage, this is not necessarily\nalways the case.\n\nThis endpoint returns all life events in the past with the corresponding date. Some\nlife events are unique (e.g. first employment, first tenancy), others may recur over\ntime (e.g. new tenancy, birth of child).\n\nLife Event Tag Instance IDs are generated by hashing the User ID, event date and the\ntagTreeItem ID of the Tag Instance. This gives a best effort uniqueness to the ids.",
        "operationId": "get_life_event_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "details": {
                        "eventDate": "2019-07-01"
                      },
                      "entity": {
                        "displayName": "USER",
                        "entityClass": "USER",
                        "id": "0b64d605-0483-4bae-8b12-fa26e313060b"
                      },
                      "id": "924bbc71-2444-aa4a-4821-e92e9976ed17",
                      "relations": [
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/",
                          "rel": "tag_trees"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/10/",
                          "rel": "tag_tree"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/10/tag-tree-items/",
                          "rel": "tag_tree_items"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/10/tag-tree-items/931/",
                          "rel": "tag_tree_item"
                        }
                      ],
                      "tagTreeItem": {
                        "displayName": "Ende Mietverh√§ltnis",
                        "systemId": 931,
                        "systemName": "TENANCY_END",
                        "tagTree": {
                          "description": "Single level life event tag tree, usually with both start and end tags.",
                          "displayName": "Lebensereignisse",
                          "isClientGenerated": false,
                          "systemId": 10,
                          "systemName": "LIFE_EVENTS",
                          "version": 0.3
                        }
                      }
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/life_event_tag_instance_schema"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Return the life events of a user",
        "tags": [
          "Life"
        ]
      }
    },
    "/life/stages/": {
      "get": {
        "description": "Detects life stages using all transactions of a user.\nLife stages are detected with the help of contracts dealing with significant aspects\nof life (e.g. rentals, employment contracts).\n\nLife stages are structured in four domains, each representing information about\ndifferent aspects of life:\n    - Labour Market: Professional and academic career of the user\n    - Parenthood: Indicating whether the user has children\n    - Housing: Information about ownership / rental agreements of the user's\n               accommodation\n    - Savings: Current user activity for preparing retirement\n\nLife Stage Tag Instance Ids are generated by hashing the User ID and the\ntagTreeItem ID of the Tag Instance. This gives a best effort uniqueness to the ids.",
        "operationId": "get_life_stage_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "description": "If set to True, candidate tags are returned in case of ambiguity. Furthermore, explanations regarding tags are added.",
            "in": "query",
            "name": "verbose",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "entity": {
                        "displayName": "USER",
                        "entityClass": "USER",
                        "id": "0b64d605-0483-4bae-8b12-fa26e313060b"
                      },
                      "id": "83b507c5-0be5-e3c8-a0b7-f3339744cfa2",
                      "relations": [
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/",
                          "rel": "tag_trees"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/8/",
                          "rel": "tag_tree"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/8/tag-tree-items/",
                          "rel": "tag_tree_items"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/8/tag-tree-items/923/",
                          "rel": "tag_tree_item"
                        }
                      ],
                      "tagTreeItem": {
                        "displayName": "Mieter",
                        "systemId": 923,
                        "systemName": "TENANCY",
                        "tagTree": {
                          "description": "Single level life stage tag tree.",
                          "displayName": "Lebensphasen",
                          "isClientGenerated": false,
                          "systemId": 8,
                          "systemName": "LIFE_STAGES",
                          "version": 0.4
                        }
                      }
                    },
                    {
                      "entity": {
                        "displayName": "USER",
                        "entityClass": "USER",
                        "id": "0b64d605-0483-4bae-8b12-fa26e313060b"
                      },
                      "id": "be26f079-38de-3d1e-504c-404efad17365",
                      "relations": [
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/",
                          "rel": "tag_trees"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/8/",
                          "rel": "tag_tree"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/8/tag-tree-items/",
                          "rel": "tag_tree_items"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/8/tag-tree-items/915/",
                          "rel": "tag_tree_item"
                        }
                      ],
                      "tagTreeItem": {
                        "displayName": "Elternteil",
                        "systemId": 915,
                        "systemName": "PARENTHOOD",
                        "tagTree": {
                          "description": "Single level life stage tag tree.",
                          "displayName": "Lebensphasen",
                          "isClientGenerated": false,
                          "systemId": 8,
                          "systemName": "LIFE_STAGES",
                          "version": 0.4
                        }
                      }
                    },
                    {
                      "entity": {
                        "displayName": "USER",
                        "entityClass": "USER",
                        "id": "0b64d605-0483-4bae-8b12-fa26e313060b"
                      },
                      "id": "af7b1ceb-9eda-2db4-7e91-8097dc902d42",
                      "relations": [
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/",
                          "rel": "tag_trees"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/8/",
                          "rel": "tag_tree"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/8/tag-tree-items/",
                          "rel": "tag_tree_items"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/8/tag-tree-items/912/",
                          "rel": "tag_tree_item"
                        }
                      ],
                      "tagTreeItem": {
                        "displayName": "Angestellt",
                        "systemId": 912,
                        "systemName": "EMPLOYMENT",
                        "tagTree": {
                          "description": "Single level life stage tag tree.",
                          "displayName": "Lebensphasen",
                          "isClientGenerated": false,
                          "systemId": 8,
                          "systemName": "LIFE_STAGES",
                          "version": 0.4
                        }
                      }
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/life_stage_tag_instance_schema"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Return life stages of a user",
        "tags": [
          "Life"
        ]
      }
    },
    "/sales-triggers/": {
      "get": {
        "description": "This end-point runs contracts and life endpoints and returns sales triggers\nwhen conditions on these sales triggers are met for the specific user.\n\nSales Triggers are extendable on a tenant basis.",
        "operationId": "get_sales_triggers_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "description": "Sales trigger savings potential: Threshold amount.",
            "in": "query",
            "name": "threshold",
            "schema": {
              "type": "integer",
              "default": 250
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "entity": {
                        "displayName": "USER",
                        "entityClass": "USER",
                        "id": "0b64d605-0483-4bae-8b12-fa26e313060b"
                      },
                      "id": "85b962ac-1e50-3d2f-3e83-bc577678ad55",
                      "relations": [
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/",
                          "rel": "tag_trees"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/5/",
                          "rel": "tag_tree"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/5/tag-tree-items/",
                          "rel": "tag_tree_items"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/5/tag-tree-items/247/",
                          "rel": "tag_tree_item"
                        }
                      ],
                      "tagTreeItem": {
                        "description": "Trigger for a missing private liability insurance",
                        "displayName": "Trigger f√ºr eine fehlende Privathaftpflichtversicherung",
                        "systemId": 247,
                        "systemName": "MISSING_INSURANCE_LIABILITY_PRIVATE",
                        "systemNameParent": "MISSING",
                        "tagTree": {
                          "description": "Two level sales trigger tag tree.",
                          "displayName": "Sales Trigger",
                          "isClientGenerated": false,
                          "systemId": 5,
                          "systemName": "SALES_TRIGGERS",
                          "version": 0.1
                        }
                      }
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/sales_triggers_tag_instance_schema"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Return sales triggers tags",
        "tags": [
          "Sales Triggers"
        ]
      }
    },
    "/tags/tag-trees/": {
      "get": {
        "description": "`TagTree` is a collection of `TagTreeItem`s. Each `TagTree` represent a versioned set of\nconcepts that are relevant for a Business Domain. We call a curated group of concepts a\n**Controlled Vocabulary** as in accordance with the\n[ISO Indexing Standards](https://www.isko.org/cyclo/automatic#2), hence `TagTree` represent\na specific controlled vocabulary.\n\nFor example, we represent all the different customer spending categories in the `TagTree`\n`CATEGORIES`. The set of all supported sales triggers are grouped together in the `TagTree`\n`SalesTriggers`.\n\n`TagTrees` can be thought of the root node of a hierarchical concept tree. The leaves of\nthe `TagTree` are called `TagTreeItems`.\n\nOne way of interpreting `TagTree` is seeing it as the root node of the tree. However, we\nhave intentionally not taken this path and represented the root node as a separate concept\nin our concept model.\n\nThis gives us the flexibility of giving versions to `TagTrees`. When we add a new\n`TagTreeItem` or deprecate an old one, it affects all `TagTreeItems`, since the semantic\nvalue of each item is in relation to all other items. Such a change is captured by a simple\nincrease in the version number of the `TagTree`. We do our best to keep such updates rare\nand backward-compatible, but we do not give hard guarantees.",
        "operationId": "get_tag_trees_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "description": "Two level categorization tree.",
                      "displayName": "Kategorien",
                      "isClientGenerated": false,
                      "relations": [
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/",
                          "rel": "self"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/",
                          "rel": "tag_trees"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/",
                          "rel": "tag_tree_items"
                        }
                      ],
                      "systemId": 1,
                      "systemName": "CATEGORIES",
                      "version": 3.7
                    },
                    {
                      "description": "Two level fine grained insurance categorization tag tree.",
                      "displayName": "Versicherungsarten",
                      "isClientGenerated": false,
                      "relations": [
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/2/",
                          "rel": "self"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/",
                          "rel": "tag_trees"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/2/tag-tree-items/",
                          "rel": "tag_tree_items"
                        }
                      ],
                      "systemId": 2,
                      "systemName": "INSURANCE_TYPES",
                      "version": 2.4
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/tag_tree_schema"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "summary": "Get TagTrees",
        "tags": [
          "Tags"
        ]
      }
    },
    "/tags/tag-trees/{tagTreeId}/": {
      "get": {
        "description": "Get Information on a single `TagTree`",
        "operationId": "get_tag_tree_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tag_tree_schema"
                }
              }
            }
          }
        },
        "summary": "Get TagTree",
        "tags": [
          "Tags"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "tagTreeId",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ]
    },
    "/tags/tag-trees/{tagTreeId}/tag-tree-items/": {
      "get": {
        "description": "`TagTre<eItems` are the individual words in the **Controlled Vocabularies** or\n`TagTrees`. For example in the `TagTree` `CATEGORY`, we represent spending\ncorresponding to online entertainment by the `TagTreeItem` `RECREATION_ONLINE`.\n\nWe employ a two level hierarchy in `TagTreeItems`. The parent-child relation is can be\nobtained threefold.\nFirst, the relation is coded in the `systemName` attribute, which has the naming\nconvention `PARENT_CHILD`.\nSecondly a `parent` attribute is returned for the children, which has the `systemName`\nof the parent `TagTreeItem`. Finally, a relation having the URI of the parent is also\nreturned. We do not support a parallel `children` attribute.\n\n`TagTreeItem` represent the standardized part of tag instances. They represent the\nnormalized words in the controlled vocabulary represented by `Tag Trees`.\n\nInstead of defining a specific tag tree item for each tag tree, we have opted to\ndefine a single tag tree item tag, with attributes representing the attributes of\nall possible tag tree items from all tag trees.\n\nThis is a design choice to keep them searchable under\n`/tag-trees/<int:tagTreeId>/tag-tree-items/`.\nIn specific categorizing end-points, where tag tree items are returned, not relevant\nattributes are deleted on use.\n\n## Parameter Details\n    ### `tagTreeId`\n    Use `/tags/tag-trees/` to get a list of all tag trees with their `systemId`s to use\n    them as `tagTreeId` input in calling this endpoint.\n\n    ### `categoryTagTreeItemId`\n    This option only works with the `TagTree` `BUSINESS_PARTNERS`. Each business partner\n    in our database is associated to one or multiple `TagTreeItem` from `TagTree`\n    `CATEGORIES`. By setting this parameter to the `systemId` of the desired `TagTreeItem`,\n    e.g. set the value to 8 to receive only business partners related to `INSURANCE`.",
        "operationId": "get_tag_tree_items_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "description": "system id of a tag tree item of the tag tree with the system name 'CATEGORIES'",
            "in": "query",
            "name": "categoryTagTreeItemId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "description": "Transactions in the field of banking and finance",
                      "displayName": "Bank und Finanzen",
                      "relations": [
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/1/",
                          "rel": "self"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/",
                          "rel": "tag_trees"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/",
                          "rel": "tag_tree"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/",
                          "rel": "tag_tree_items"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/1/",
                          "rel": "tag_tree_item"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/None/",
                          "rel": "tag_tree_item_parent"
                        }
                      ],
                      "systemId": 1,
                      "systemName": "BANKFINANCE",
                      "tagTree": {
                        "description": "Two level categorization tree.",
                        "displayName": "Kategorien",
                        "isClientGenerated": false,
                        "systemId": 1,
                        "systemName": "CATEGORIES",
                        "version": 3.7
                      }
                    },
                    {
                      "description": "Transactions including invoices & bills",
                      "displayName": "Vertragsrechnungen",
                      "relations": [
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/2/",
                          "rel": "self"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/",
                          "rel": "tag_trees"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/",
                          "rel": "tag_tree"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/",
                          "rel": "tag_tree_items"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/2/",
                          "rel": "tag_tree_item"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/None/",
                          "rel": "tag_tree_item_parent"
                        }
                      ],
                      "systemId": 2,
                      "systemName": "BILLS",
                      "tagTree": {
                        "description": "Two level categorization tree.",
                        "displayName": "Kategorien",
                        "isClientGenerated": false,
                        "systemId": 1,
                        "systemName": "CATEGORIES",
                        "version": 3.7
                      }
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/extensive_tag_tree_item_schema"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "summary": "Get TagTreeItems of TagTree",
        "tags": [
          "Tags"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "tagTreeId",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ]
    },
    "/tags/tag-trees/{tagTreeId}/tag-tree-items/{tagTreeItemId}/": {
      "get": {
        "description": "`TagTreeItem` represent the standardized part of tag instances. They represent the\nnormalized words in the controlled vocabulary represented by `Tag Trees`.\n\nInstead of defining a specific tag tree item for each tag tree, we have opted to\ndefine a single tag tree item tag, with attributes representing the attributes of\nall possible tag tree items from all tag trees.\n\nThis is a design choice to keep them searchable under\n`/tag-trees/<int:tagTreeId>/tag-tree-items/`.\nIn specific categorizing end-points, where tag tree items are returned, not relevant\nattributes are deleted on use.",
        "operationId": "get_tag_tree_item_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/extensive_tag_tree_item_schema"
                }
              }
            }
          }
        },
        "summary": "Get TagTreeItem of TagTree",
        "tags": [
          "Tags"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "tagTreeId",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "in": "path",
          "name": "tagTreeItemId",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ]
    },
    "/user-rules/": {
      "delete": {
        "description": "Delete all existing categorization rules of a user without any filter.",
        "operationId": "delete_user_rules_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "description": "ID of a tag tree. If missing, all rules are selected.",
            "in": "query",
            "name": "tagTreeId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted all rules."
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Delete rules",
        "tags": [
          "User Rules"
        ]
      },
      "get": {
        "description": "Get a list of all categorization rules a specific user has.\nA rule consists of counterparty information (name and IBAN) and tag tree item\ninformation e.g. the tag tree item with the system name LIVING_GROCERIES\nof the tag tree with the system name CATEGORIES.\nAll future transactions are categorized according to the existing rules\nif possible instead of running a categorization model.",
        "operationId": "get_user_rules_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "description": "ID of a tag tree. If missing, all rules are selected.",
            "in": "query",
            "name": "tagTreeId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "counterpartyIban": "DE42500105174896827935",
                      "counterpartyName": "M√ºller Drogerie",
                      "id": "008a423d-ab1a-3785-17ff-d66e45b97f22",
                      "tagTreeItem": {
                        "description": "Payments from grocery shopping",
                        "displayName": "Lebensmittel",
                        "systemId": 67,
                        "systemName": "LIVING_GROCERIES",
                        "systemNameParent": "LIVING",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      },
                      "user": "0e3cb7d1-f17e-3924-4d78a-21d3590dfe58"
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/user_rule_schema"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Get rules",
        "tags": [
          "User Rules"
        ]
      },
      "post": {
        "description": "Create a new rule according to the transaction information (more specifically the\ncounterparty name and the counterparty iban) and a tag tree item.\n\nIt is not possible for a single user to create two rules with the same\ncounterparty (name and IBAN are decisive).\n\nIt is not possible to change the tag tree item of an existing rule. Please delete the\nexisting rule and create a new one with the new tag tree item.\n\nIt is not possible to create a rule if both counterparty name and counterparty\nIBAN do not exist.",
        "operationId": "post_user_rules_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user_rule_input_schema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_rule_schema"
                }
              }
            }
          },
          "201": {
            "description": "Successfully created a rule.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_rule_schema"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict"
          },
          "422": {
            "description": "UnprocessableEntity"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Create rule",
        "tags": [
          "User Rules"
        ]
      }
    },
    "/user-rules/{ruleId}/": {
      "delete": {
        "description": "Delete a specific categorization rule of a user by ID.\nTo find out the ids get all existing rules of the user with GET.\nTo delete all existing rules of a user use DELETE without ID.",
        "operationId": "delete_user_rule_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted rule."
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Rule does not exist."
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Delete rule",
        "tags": [
          "User Rules"
        ]
      },
      "get": {
        "description": "Get a specific categorization rule of a specific user by ID.\nTo get all existing rules of a user use the endpoint without the ID.",
        "operationId": "get_user_rule_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_rule_schema"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Rule does not exist."
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Get rule",
        "tags": [
          "User Rules"
        ]
      },
      "parameters": [
        {
          "description": "ID of an existing rule",
          "in": "path",
          "name": "ruleId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customer/v2/bankzugaenge/{accessId}/{productId}/kontoumsaetze?categorize=true": {
      "get": {
        "deprecated": true,
        "operationId": "get_category_v1_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "accessId",
            "in": "path",
            "description": "ID of the bank access",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "Demo-Bank"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the bank product",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "DE00123456789012345678"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "betrag": -3.94,
                      "buchungsdatum": "2020-03-01 10:00",
                      "buchungstext": "Lastschrift",
                      "gegenkontoBic": "PBNKDEFF",
                      "gegenkontoIban": "DE75512108001245126199",
                      "gegenkontoInhaber": "Erika Musterfrau",
                      "gvCode": "082",
                      "hash": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
                      "id": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
                      "primanotaNummer": "999001",
                      "product": "30cc4587-7e5f-450f-bb51-dc3829f67db4",
                      "provider": "23d67ff8-ff6a-44ff-93da-f2af835394e4",
                      "tags": [
                        {
                          "category": "LIVING_GROCERIES",
                          "confidenceLevel": 0.95,
                          "displayName": "Lebensmittel",
                          "parent": "LIVING",
                          "parentCategory": "LIVING",
                          "systemName": "LIVING_GROCERIES",
                          "tagId": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
                          "tagScope": "transaction",
                          "tagType": "CATEGORY",
                          "tagVersion": "1.5"
                        }
                      ],
                      "tenant": "1bcb487e-f409-4438-a358-d8d128581761",
                      "user": "624ca509-b0f2-42f6-b202-8de20e9ed12a",
                      "verwendungszweck": "Miete 2020 03 Wohnung 123 Bahnhofsstra√üe 1",
                      "wertstellungsdatum": "2020-03-01 10:00"
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/v1_output"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "DEPRECATED",
        "tags": [
          "Categories V1"
        ]
      }
    },
    "/customer/v2/bankzugaenge/{accessId}/{productId}/kontoumsaetze?tag=categories": {
      "get": {
        "description": "Gives transaction categories based on everyday spending types such as groceries shopping or\nrental payments.\n\nTo get a full list of such categories, use:\nGET /tags/v1/tags/tag-trees/1/tag-tree-items/\n\n### Categorization Logic\n\n    We use a hybrid model, that combines a basic model and an AI model.\n\n    The basic model runs first. If it cannot find a category, the AI model runs as well.\n    If the found category has a sufficient confidence, it is returned.\n\n    If the basic model yields multiple tags, the AI model runs as well. Majority voting in\n    combination with a confidence threshold is used to determine the best fitting category.\n\n#### Basic Model\n    The basic model searches for keywords and regular expression based substrings in note to\n    payee, counterparty name and posting text.\n\n    It includes the main categories of the insurance classifier to precisely detect\n    insurance transactions.\n\n    There are several additional steps for specific types of transactions, counterparties\n    and categories to further improve the accuracy of this model.\n\n#### Artificial Intelligence Model\n    The model architecture is a bidirectional recurrent neural network with long short-term\n    memory and an attention mechanism.\n\n    The samples used for training this model do not contain any user related identifiers.\n    The training encompasses semantically-meaningful word and sub-word embeddings,\n    pre-trained in an unsupervised setting as well as human and automatically labeled data,\n    providing a total of more than a million training samples.\n    Even before a human labeler processes a transaction, each transaction gets anonymized.\n    Amounts get slightly shifted randomly and all sensible information such as names and\n    addresses are automatically removed from all texts. With this process, data privacy is\n    fully ensured.",
        "operationId": "get_category_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "accessId",
            "in": "path",
            "description": "ID of the bank access",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "Demo-Bank"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the bank product",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "DE00123456789012345678"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success, tags read from database",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "betrag": -14.87,
                      "buchungsdatum": "2023-07-04 18:00:00",
                      "gegenkontoBic": "",
                      "gegenkontoIban": "",
                      "gegenkontoInhaber": "LV AG",
                      "hash": "8891f1f9-511a-3ed6-8982-ef4078cecc16",
                      "id": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
                      "primanotaNummer": "12345",
                      "tags": [
                        {
                          "details": {
                            "confidenceLevel": 0.9897049813270569
                          },
                          "entity": {
                            "displayName": "Kontoumsatz",
                            "entityClass": "Kontoumsatz",
                            "id": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
                            "userId": "624ca509-b0f2-42f6-b202-8de20e9ed12a"
                          },
                          "id": "7f263a51-f368-4c52-bf14-eed0c21e2db8",
                          "relations": [
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/",
                              "rel": "tag_trees"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/1/",
                              "rel": "tag_tree"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/",
                              "rel": "tag_tree_items"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/67/",
                              "rel": "tag_tree_item"
                            }
                          ],
                          "tagTreeItem": {
                            "description": "Payments related to a life insurance contract",
                            "displayName": "Lebensversicherung",
                            "systemId": 58,
                            "systemName": "INSURANCE_LIFE",
                            "systemNameParent": "INSURANCE",
                            "tagTree": {
                              "description": "Two level categorization tree.",
                              "displayName": "Kategorien",
                              "isClientGenerated": false,
                              "systemId": 1,
                              "systemName": "CATEGORIES",
                              "version": 4.03
                            }
                          }
                        }
                      ],
                      "verwendungszweck": "CRED DE07ZZZ00000063475 Beitrag Lebensvers 2020 01 SEPA BASISLASTSCHRIFT wiederholend",
                      "wertstellungsdatum": "2023-07-04 18:00:00"
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/v3_output_connect_schema"
                  },
                  "type": "array"
                }
              }
            }
          },
          "201": {
            "description": "Success, some tags newly created",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "betrag": -14.87,
                      "buchungsdatum": "2023-07-04 18:00:00",
                      "gegenkontoBic": "",
                      "gegenkontoIban": "",
                      "gegenkontoInhaber": "LV AG",
                      "hash": "8891f1f9-511a-3ed6-8982-ef4078cecc16",
                      "id": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
                      "primanotaNummer": "12345",
                      "tags": [
                        {
                          "details": {
                            "confidenceLevel": 0.9897049813270569
                          },
                          "entity": {
                            "displayName": "Kontoumsatz",
                            "entityClass": "Kontoumsatz",
                            "id": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
                            "userId": "624ca509-b0f2-42f6-b202-8de20e9ed12a"
                          },
                          "id": "7f263a51-f368-4c52-bf14-eed0c21e2db8",
                          "relations": [
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/",
                              "rel": "tag_trees"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/1/",
                              "rel": "tag_tree"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/",
                              "rel": "tag_tree_items"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/67/",
                              "rel": "tag_tree_item"
                            }
                          ],
                          "tagTreeItem": {
                            "description": "Payments related to a life insurance contract",
                            "displayName": "Lebensversicherung",
                            "systemId": 58,
                            "systemName": "INSURANCE_LIFE",
                            "systemNameParent": "INSURANCE",
                            "tagTree": {
                              "description": "Two level categorization tree.",
                              "displayName": "Kategorien",
                              "isClientGenerated": false,
                              "systemId": 1,
                              "systemName": "CATEGORIES",
                              "version": 4.03
                            }
                          }
                        }
                      ],
                      "verwendungszweck": "CRED DE07ZZZ00000063475 Beitrag Lebensvers 2020 01 SEPA BASISLASTSCHRIFT wiederholend",
                      "wertstellungsdatum": "2023-07-04 18:00:00"
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/v3_output_connect_schema"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "408": {
            "description": "RequestTimeout"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Get consumer categorization tags",
        "tags": [
          "Categories"
        ]
      },
      "put": {
        "description": "This method applies corrections to the categorization of transactions.\n\nInput contains the tag tree item(s) that should be used for re-categorization.\nAll provided tag tree items have to be valid.\nIf a single tag tree item is provided, all transaction tags receive this tag tree item.\nIf multiple tag tree items are provided, each transaction tag receives a different tag tree\nitem. Make sure to provide exactly as many tag tree items as transactions in this scenario.\n\nThe flag createRule creates a user specific rule that automatically categorizes this\ncounterparty with the provided tag tree item in all future transactions. This is a smart\nsolution to eradicate a recurring re-categorization process.\n\nThe flag changeExisting re-categorizes all existing transactions of the same counterparty.\n\nThe tagTreeItem(s) have to include a tagTree and have to be wrapped in tags: [].\n\nThe re-categorization relies on the systemName value of tagTreeItem and tagTree, all other\nfields are ignored.\n\nExample:\n```json\n{\n  \"tags\": [\n    {\n      \"tagTreeItem\": {\n        \"systemId\": 67,\n        \"systemName\": \"LIVING_GROCERIES\",\n        \"tagTree\": {\n          \"systemId\": 1,\n          \"systemName\": \"CATEGORIES\"\n        }\n      }\n    }\n  ]\n}\n```\n\nTo get a full list of tag tree items, use:\nGET /tags/v1/tags/tag-trees/1/tag-tree-items/",
        "operationId": "put_category_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "description": "This option creates a rule for this counterparty. All future transactions with this counterparty will be categorized according to the provided category. Default value is false.",
            "in": "query",
            "name": "createRule",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "This option re-categorizes all existing transactions with this counterparty according to the provided category. Default value is false.",
            "in": "query",
            "name": "changeExisting",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "accessId",
            "in": "path",
            "description": "ID of the bank access",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "Demo-Bank"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the bank product",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "DE00123456789012345678"
            }
          },
          {
            "name": "transactionId",
            "in": "path",
            "description": "ID of the transaction",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "f161f32c-8869-40e0-ab0c-bd2ebeda4963"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v3_connect_put_schema"
        },
        "responses": {
          "200": {
            "description": "Successfully modified tag(s)."
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "UnprocessableEntity"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Update consumer categorization tags",
        "tags": [
          "Categories"
        ]
      }
    },
    "/customer/v2/bankzugaenge/{accessId}/{productId}/kontoumsaetze?tag=insurance-types": {
      "get": {
        "description": "Gives detailed insurance types.\n\nCategorization is based on keywords, sophisticated regular expressions and several specific\nrules. This classification is an extension of the categories endpoint and can be thought as\na third level in the classification hierarchy.",
        "operationId": "get_insurance_types_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "accessId",
            "in": "path",
            "description": "ID of the bank access",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "Demo-Bank"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the bank product",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "DE00123456789012345678"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "betrag": -13.09,
                      "buchungsdatum": "2020-03-11 18:00:00",
                      "gegenkontoBic": "",
                      "gegenkontoIban": "",
                      "gegenkontoInhaber": "",
                      "hash": "8891f1f9-511a-3ed6-8982-ef4078cecc16",
                      "id": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
                      "primanotaNummer": "12345",
                      "tags": [
                        {
                          "entity": {
                            "displayName": "Kontoumsatz",
                            "entityClass": "TRANSACTION",
                            "id": "956ca508-c0e2-52c5-3202-8de20e7ed12b"
                          },
                          "id": "eb047b64-619f-4104-805e-ee6c832bc306",
                          "relations": [
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/",
                              "rel": "tag_trees"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/2/",
                              "rel": "tag_tree"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/2/tag-tree-items/",
                              "rel": "tag_tree_items"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/2/tag-tree-items/164/",
                              "rel": "tag_tree_item"
                            }
                          ],
                          "tagTreeItem": {
                            "displayName": "Kapitallebensversicherung",
                            "systemId": 164,
                            "systemName": "LIFE_ENDOWMENT",
                            "systemNameParent": "LIFE",
                            "tagTree": {
                              "description": "Two level fine grained insurance categorization tag tree.",
                              "displayName": "Versicherungsarten",
                              "isClientGenerated": false,
                              "systemId": 2,
                              "systemName": "INSURANCE_TYPES",
                              "version": 2.4
                            }
                          }
                        }
                      ],
                      "verwendungszweck": "CRED DE07ZZZ00000063475 Beitrag Lebensvers 2020 01 SEPA BASISLASTSCHRIFT wiederholend",
                      "wertstellungsdatum": "2020-03-11 18:00:00"
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/v3_output_connect_schema"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Return insurance types categorization tags",
        "tags": [
          "Insurance Types"
        ]
      }
    },
    "/customer/v2/bankzugaenge/{accessId}/{productId}/kontoumsaetze?tag=business-partners": {
      "get": {
        "description": "Identifies normalized business partner and returns detailed information such as\ncontaining address, website.\n\nBusiness Partner is the financial entity that provides the good or service that\nthe transaction is related to. It differs from the payment handler or the bank.\n\nNormalization brings different names of the business partner under a single\nsystem name.\n\nTo get a full list of tag tree items, use:\nGET /tags/v1/tags/tag-trees/3/tag-tree-items/",
        "operationId": "get_business_partner_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "accessId",
            "in": "path",
            "description": "ID of the bank access",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "Demo-Bank"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the bank product",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "DE00123456789012345678"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "betrag": -39.09,
                      "buchungsdatum": "2023-07-11 17:00:00",
                      "gegenkontoBic": "",
                      "gegenkontoIban": "",
                      "gegenkontoInhaber": "",
                      "hash": "8891f1f9-511a-3ed6-8982-ef4078cecc16",
                      "id": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
                      "primanotaNummer": "12345",
                      "tags": [
                        {
                          "entity": {
                            "displayName": "Kontoumsatz",
                            "entityClass": "TRANSACTION",
                            "id": "956ca508-c0e2-52c5-3202-8de20e7ed12b"
                          },
                          "id": "9504ebeb-d54d-42fd-97a5-1b7117593dc2",
                          "relations": [
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/",
                              "rel": "tag_trees"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/3/",
                              "rel": "tag_tree"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/3/tag-tree-items/",
                              "rel": "tag_tree_items"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/3/tag-tree-items/202/",
                              "rel": "tag_tree_item"
                            }
                          ],
                          "tagTreeItem": {
                            "addressCity": "Stuttgart",
                            "addressCountry": "Deutschland",
                            "addressStreet": "Reinsburgstra√üe 19",
                            "addressZip": "70178",
                            "creditorId": "DE07ZZZ00000063475",
                            "displayName": "Allianz Lebensversicherung",
                            "group": "Allianz",
                            "systemId": 202,
                            "systemName": "Allianz Lebensversicherungs-AG",
                            "tagTree": {
                              "description": "Single level tag tree of business partners.",
                              "displayName": "Gesch√§ftspartner",
                              "isClientGenerated": false,
                              "systemId": 3,
                              "systemName": "BUSINESS_PARTNERS",
                              "version": 1.9
                            },
                            "telephone": "0711-663-0",
                            "website": "http://www.allianz.de"
                          }
                        }
                      ],
                      "verwendungszweck": "CRED DE07ZZZ00000063475 Beitrag Lebensvers 2023 07 SEPA BASISLASTSCHRIFT wiederholend",
                      "wertstellungsdatum": "2023-07-11 17:00:00"
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/v3_output_connect_schema"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Return business partners tags",
        "tags": [
          "Business Partners"
        ]
      }
    },
    "/customer/v2/bankzugaenge/{accessId}/{productId}/kontoumsaetze?tag=freelancer-categories": {
      "get": {
        "description": "Gives detailed freelancer transactions categories in accordance with\nthe Einnahmen√ºberschussrechnung (E√úR).",
        "operationId": "get_freelancer_categories_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "accessId",
            "in": "path",
            "description": "ID of the bank access",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "Demo-Bank"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the bank product",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "DE00123456789012345678"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success, tags read from database",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "betrag": -31.18,
                      "buchungsdatum": "2023-07-08 13:29:00",
                      "buchungstext": "",
                      "gegenkontoBic": "PBNKDEFF",
                      "gegenkontoIban": "DE08250100300000289304",
                      "gegenkontoInhaber": "Telekom Deutschland GmbH",
                      "gvCode": "56",
                      "hash": "d12e4064-aac6-1ad2-8cdc-e00345634b22",
                      "id": "1ad7cf10-000d-12e4-064b-ba73b828cdce",
                      "primanotaNummer": "485656",
                      "tags": [
                        {
                          "entity": {
                            "displayName": "Kontoumsatz",
                            "entityClass": "TRANSACTION",
                            "id": "1ad7cf10-000d-12e4-064b-ba73b828cdce",
                            "userId": "0e3cb7d1-1ccb-4094-b382-21d3590dfe58"
                          },
                          "id": "ebf1b6a6-8ccc-2135-8843-83f0daa5355e",
                          "relations": [
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/",
                              "rel": "tag_trees"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/15/",
                              "rel": "tag_tree"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/15/tag-tree-items/",
                              "rel": "tag_tree_items"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/15/tag-tree-items/41/",
                              "rel": "tag_tree_item"
                            }
                          ],
                          "tagTreeItem": {
                            "displayName": "Aufwendungen f√ºr Telekommunikation",
                            "systemId": 41,
                            "systemName": "TELECOMMUNICATIONS",
                            "tagTree": {
                              "description": "Freelancer categories tag tree.",
                              "displayName": "Freelancer-Kategorien",
                              "isTenantGenerated": false,
                              "systemId": 15,
                              "systemName": "FREELANCER_CATEGORIES",
                              "version": 0.1
                            }
                          }
                        }
                      ],
                      "verwendungszweck": "Telekom Deutschland GmbH Festnetz Vertragskonto 5574442211 End to End Ref Zahlbeleg 93112306740 Mandatsref 00001234534 CRED DE93ZZZ00000078611 SEPA BASISLASTSCHRIFT wiederholend",
                      "wertstellungsdatum": "2023-07-08 13:29:00"
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/v3_output_connect_schema"
                  },
                  "type": "array"
                }
              }
            }
          },
          "201": {
            "description": "Success, some tags newly created",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "betrag": -31.18,
                      "buchungsdatum": "2023-07-08 13:29:00",
                      "buchungstext": "",
                      "gegenkontoBic": "PBNKDEFF",
                      "gegenkontoIban": "DE08250100300000289304",
                      "gegenkontoInhaber": "Telekom Deutschland GmbH",
                      "gvCode": "56",
                      "hash": "d12e4064-aac6-1ad2-8cdc-e00345634b22",
                      "id": "1ad7cf10-000d-12e4-064b-ba73b828cdce",
                      "primanotaNummer": "485656",
                      "tags": [
                        {
                          "entity": {
                            "displayName": "Kontoumsatz",
                            "entityClass": "TRANSACTION",
                            "id": "1ad7cf10-000d-12e4-064b-ba73b828cdce",
                            "userId": "0e3cb7d1-1ccb-4094-b382-21d3590dfe58"
                          },
                          "id": "ebf1b6a6-8ccc-2135-8843-83f0daa5355e",
                          "relations": [
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/",
                              "rel": "tag_trees"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/15/",
                              "rel": "tag_tree"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/15/tag-tree-items/",
                              "rel": "tag_tree_items"
                            },
                            {
                              "href": "https://banksapi.io/tags/v1/tag-trees/15/tag-tree-items/41/",
                              "rel": "tag_tree_item"
                            }
                          ],
                          "tagTreeItem": {
                            "displayName": "Aufwendungen f√ºr Telekommunikation",
                            "systemId": 41,
                            "systemName": "TELECOMMUNICATIONS",
                            "tagTree": {
                              "description": "Freelancer categories tag tree.",
                              "displayName": "Freelancer-Kategorien",
                              "isTenantGenerated": false,
                              "systemId": 15,
                              "systemName": "FREELANCER_CATEGORIES",
                              "version": 0.1
                            }
                          }
                        }
                      ],
                      "verwendungszweck": "Telekom Deutschland GmbH Festnetz Vertragskonto 5574442211 End to End Ref Zahlbeleg 93112306740 Mandatsref 00001234534 CRED DE93ZZZ00000078611 SEPA BASISLASTSCHRIFT wiederholend",
                      "wertstellungsdatum": "2023-07-08 13:29:00"
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/categorization_tag_instance_schema"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Get freelancer-categories categorization tags",
        "tags": [
          "Freelancer Categories"
        ]
      },
      "put": {
        "description": "This method applies corrections to the categorization of transactions.\n\nInput contains the tag tree item that should be used for re-categorization.\nA valid tag tree item has to be provided.\n\nThe flag createRule creates a user specific rule that automatically categorizes this\ncounterparty with the provided tag tree item in all future transactions.\nThis is a smart solution to eradicate a recurring re-categorization process.\n\nThe flag changeExisting re-categorizes all existing transactions of the same\ncounterparty.\n\nThe tagTreeItem has to include a tagTree and has to be wrapped in tags: [].\n\nThe re-categorization currently relies on the systemName value of tagTreeItem and\ntagTree, but as this might change in the future, both systemName and systemId should\nbe included in the payload, all other fields are ignored.\n\nExample:\n```json\n{\n  \"tags\": [\n    {\n      \"tagTreeItem\": {\n        \"systemId\": 35,\n        \"systemName\": \"PAYROLL\",\n        \"tagTree\": {\n          \"systemId\": 15,\n          \"systemName\": \"FREELANCER_CATEGORIES\"\n        }\n      }\n    }\n  ]\n}\n```\n\nTo get a full list of tag tree items, use:\nGET /tags/v1/tags/tag-trees/15/tag-tree-items/",
        "operationId": "put_freelancer_categories_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "description": "This option creates a rule for this counterparty. All future transactions with this counterparty will be categorized according to the provided category. Default value is false.",
            "in": "query",
            "name": "createRule",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "This option re-categorizes all existing transactions with this counterparty according to the provided category. Default value is false.",
            "in": "query",
            "name": "changeExisting",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "accessId",
            "in": "path",
            "description": "ID of the bank access",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "Demo-Bank"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the bank product",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "DE00123456789012345678"
            }
          },
          {
            "name": "transactionId",
            "in": "path",
            "description": "ID of the transaction",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "f161f32c-8869-40e0-ab0c-bd2ebeda4963"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v3_connect_put_schema"
        },
        "responses": {
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "UnprocessableEntity"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Update freelancer-categories categorization tags",
        "tags": [
          "Freelancer Categories"
        ]
      }
    },
    "/customer/v2/ai/contracts": {
      "get": {
        "description": "Detects contracts using all the transactions of a user, independent of accounts\nand banks. All the transactions are aggregated.\n\nThe transactions are categorized and periodic payments are detected first.\n\nContracts are created by grouping payments of similar size in the same category and\nmade to a certain business partners.\n\nAfter transactions are grouped, we extract further statistics and make simple\npredictions on next amount and due date.\n\n### APR Estimation\n    Best effort estimate of the Annual Percentage Rate (APR) is given for fixed payment\n    credit contracts. This feature works if:\n\n    * The note to payee includes breakdown of the principal and interest payments, and\n    we have the first 2 payments to the credit giver.\n\n    * We see the initial credit payment to the user and next two fixed payments, without\n    having the interest/principal payment ratio.",
        "operationId": "get_contract_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "description": "If True, returns insurance related contracts only",
            "in": "query",
            "name": "insuranceOnly",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "If True, returns insurance related contracts and contract with the category SAVINGS_BUILDING",
            "in": "query",
            "name": "insuranceOnlyExtended",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "details": {
                        "amountFirst": -319,
                        "amountLatest": -319,
                        "amountMaximum": -319,
                        "amountMean": -319,
                        "amountMinimum": -319,
                        "amountNext": -319,
                        "amountTotal": -4466,
                        "amountTotalNonRegular": 0,
                        "amountTotalRegular": -4466,
                        "costDevelopment": {
                          "2019-01-20": -319,
                          "2019-02-20": -319,
                          "2019-03-20": -319,
                          "2019-04-20": -319,
                          "2019-05-20": -319,
                          "2019-06-20": -319,
                          "2019-07-20": -319,
                          "2019-08-20": -319,
                          "2019-09-20": -319,
                          "2019-10-20": -319,
                          "2019-11-20": -319,
                          "2019-12-20": -319,
                          "2020-01-20": -319,
                          "2020-02-20": -319
                        },
                        "costDevelopmentRegular": {
                          "2019-01-20": -319,
                          "2019-02-20": -319,
                          "2019-03-20": -319,
                          "2019-04-20": -319,
                          "2019-05-20": -319,
                          "2019-06-20": -319,
                          "2019-07-20": -319,
                          "2019-08-20": -319,
                          "2019-09-20": -319,
                          "2019-10-20": -319,
                          "2019-11-20": -319,
                          "2019-12-20": -319,
                          "2020-01-20": -319,
                          "2020-02-20": -319
                        },
                        "counterpartyBic": "",
                        "counterpartyIban": "DE123456222",
                        "counterpartyName": "Allianz Private Krankenversicherungs AG",
                        "dateFirst": "2019-01-20",
                        "dateLatest": "2020-02-20",
                        "dateNext": "2020-03-20",
                        "daysAge": 445,
                        "growthRate": 0,
                        "numberCustomer": ".:",
                        "standardDeviation": 0,
                        "status": "ACTIVE",
                        "transactionIds": [
                          "qj64ir73-30ba-yei2-1i1q-vrg8glvkhwno",
                          "lbmk8o1n-a832-xcqi-mpcp-brv4pieipge8",
                          "qks1f8e9-59yu-rglt-yvq9-y8jnlm5huhro",
                          "2j3599se-4b53-q06f-78u6-byv3q9hltndt",
                          "hqe7417d-9ixm-6bzk-0ckm-tp3914r4k2ay",
                          "dxfav1pk-vqxv-6390-qrb3-4pigp5s614u5",
                          "a36lxcgg-3drd-f7w5-e3bb-uin03hxxni48",
                          "cs7ew6pu-mn2n-5xko-48sj-u33owtszqqub",
                          "uzi9a837-63ld-t8b2-t2s0-sle79yz1mx88",
                          "yayvsn9d-oszt-mg4k-8q86-f0du01kineis",
                          "9n4va5cc-5hx3-r14q-ehe2-9d7c2jbehstq",
                          "kbw1nxhc-uxmq-4pyi-kar7-hlii1viy9bus",
                          "g3kqczjp-5cuq-ntl6-k5vw-454vfy0bfa3d",
                          "yv8uh99n-csyj-66xn-4wkr-f3nvzzxkhas7"
                        ],
                        "transactionIdsNonRegular": [],
                        "transactionIdsRegular": [
                          "qj64ir73-30ba-yei2-1i1q-vrg8glvkhwno",
                          "lbmk8o1n-a832-xcqi-mpcp-brv4pieipge8",
                          "qks1f8e9-59yu-rglt-yvq9-y8jnlm5huhro",
                          "2j3599se-4b53-q06f-78u6-byv3q9hltndt",
                          "hqe7417d-9ixm-6bzk-0ckm-tp3914r4k2ay",
                          "dxfav1pk-vqxv-6390-qrb3-4pigp5s614u5",
                          "a36lxcgg-3drd-f7w5-e3bb-uin03hxxni48",
                          "cs7ew6pu-mn2n-5xko-48sj-u33owtszqqub",
                          "uzi9a837-63ld-t8b2-t2s0-sle79yz1mx88",
                          "yayvsn9d-oszt-mg4k-8q86-f0du01kineis",
                          "9n4va5cc-5hx3-r14q-ehe2-9d7c2jbehstq",
                          "kbw1nxhc-uxmq-4pyi-kar7-hlii1viy9bus",
                          "g3kqczjp-5cuq-ntl6-k5vw-454vfy0bfa3d",
                          "yv8uh99n-csyj-66xn-4wkr-f3nvzzxkhas7"
                        ]
                      },
                      "entity": {
                        "displayName": "USER",
                        "entityClass": "USER",
                        "id": "0b64d605-0483-4bae-8b12-fa26e313060b"
                      },
                      "id": "824aa59a-c243-744f-fcbb-a6ce1edacd02",
                      "relations": [
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/",
                          "rel": "tag_trees"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/",
                          "rel": "tag_tree_category"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/",
                          "rel": "tag_tree_items_category"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/64/",
                          "rel": "tag_tree_item_category"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/2/",
                          "rel": "tag_tree_insurance_type"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/2/tag-tree-items/",
                          "rel": "tag_tree_items_insurance_type"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/2/tag-tree-items/134/",
                          "rel": "tag_tree_item_insurance_type"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/4/",
                          "rel": "tag_tree_period"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/4/tag-tree-items/",
                          "rel": "tag_tree_items_period"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/4/tag-tree-items/235/",
                          "rel": "tag_tree_item_period"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/3/",
                          "rel": "tag_tree_business_partner"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/3/tag-tree-items/",
                          "rel": "tag_tree_items_business_partner"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/3/tag-tree-items/206/",
                          "rel": "tag_tree_item_business_partner"
                        }
                      ],
                      "tagTreeItemBusinessPartner": {
                        "addressCity": "M√ºnchen",
                        "addressCountry": "Deutschland",
                        "addressStreet": "K√∂niginstra√üe 28",
                        "addressZip": "80802",
                        "creditorId": "DE40ZZZ00000063851",
                        "displayName": "Allianz Private Krankenversicherung",
                        "group": "Allianz",
                        "systemId": 206,
                        "systemName": "Allianz Private Krankenversicherungs AG",
                        "tagTree": {
                          "description": "Single level tag tree of business partners.",
                          "displayName": "Gesch√§ftspartner",
                          "isClientGenerated": false,
                          "systemId": 3,
                          "systemName": "BUSINESS_PARTNERS",
                          "version": 1.9
                        },
                        "telephone": "089-3800-1000",
                        "website": "http://www.allianz.de"
                      },
                      "tagTreeItemCategory": {
                        "description": "Payments related to a health insurance contract",
                        "displayName": "Krankenversicherung",
                        "systemId": 64,
                        "systemName": "INSURANCE_HEALTH",
                        "systemNameParent": "INSURANCE",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isClientGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.7
                        }
                      },
                      "tagTreeItemInsuranceType": {
                        "displayName": "Private Krankenversicherung",
                        "systemId": 134,
                        "systemName": "HEALTH_PRIVATE",
                        "systemNameParent": "HEALTH",
                        "tagTree": {
                          "description": "Two level fine grained insurance categorization tag tree.",
                          "displayName": "Versicherungsarten",
                          "isClientGenerated": false,
                          "systemId": 2,
                          "systemName": "INSURANCE_TYPES",
                          "version": 2.4
                        }
                      },
                      "tagTreeItemPeriod": {
                        "description": "Period of a single month",
                        "displayName": "Ein Monat",
                        "systemId": 235,
                        "systemName": "MONTH_ONE",
                        "systemNameParent": "MONTH",
                        "tagTree": {
                          "description": "Two level periods tag tree.",
                          "displayName": "Turnus",
                          "isClientGenerated": false,
                          "systemId": 4,
                          "systemName": "PERIODS",
                          "version": 0.4
                        }
                      }
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/contract_tag_instance_schema"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Return contract tags",
        "tags": [
          "Contracts"
        ]
      }
    },
    "/customer/v2/ai/sales-triggers": {
      "get": {
        "description": "This end-point runs contracts and life endpoints and returns sales triggers\nwhen conditions on these sales triggers are met for the specific user.\n\nSales Triggers are extendable on a tenant basis.",
        "operationId": "get_sales_triggers_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "description": "Sales trigger savings potential: Threshold amount.",
            "in": "query",
            "name": "threshold",
            "schema": {
              "type": "integer",
              "default": 250
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "entity": {
                        "displayName": "USER",
                        "entityClass": "USER",
                        "id": "0b64d605-0483-4bae-8b12-fa26e313060b"
                      },
                      "id": "85b962ac-1e50-3d2f-3e83-bc577678ad55",
                      "relations": [
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/",
                          "rel": "tag_trees"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/5/",
                          "rel": "tag_tree"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/5/tag-tree-items/",
                          "rel": "tag_tree_items"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/5/tag-tree-items/247/",
                          "rel": "tag_tree_item"
                        }
                      ],
                      "tagTreeItem": {
                        "description": "Trigger for a missing private liability insurance",
                        "displayName": "Trigger f√ºr eine fehlende Privathaftpflichtversicherung",
                        "systemId": 247,
                        "systemName": "MISSING_INSURANCE_LIABILITY_PRIVATE",
                        "systemNameParent": "MISSING",
                        "tagTree": {
                          "description": "Two level sales trigger tag tree.",
                          "displayName": "Sales Trigger",
                          "isClientGenerated": false,
                          "systemId": 5,
                          "systemName": "SALES_TRIGGERS",
                          "version": 0.1
                        }
                      }
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/sales_triggers_tag_instance_schema"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Return sales triggers tags",
        "tags": [
          "Sales Triggers"
        ]
      }
    },
    "/customer/v2/ai/credit-check": {
      "get": {
        "deprecated": true,
        "operationId": "get_credit_check_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credit_check_tag_instance_schema"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "DEPRECATED",
        "tags": [
          "Credit Check"
        ]
      }
    },
    "/customer/v2/ai/affordability": {
      "get": {
        "description": "Defines attributes to determine the affordability of a user.\n\nThe endpoint uses the results of various other endpoints and aggregates them to define\nseveral attributes, such as discretionary money or the amount a user spends on\ngambling activities, which should allow a confident decision whether a user can\nafford a certain product or service.",
        "operationId": "get_affordability_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/affordability_tag_instance_schema"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Return an affordability tag",
        "tags": [
          "Affordability"
        ]
      }
    },
    "/customer/v2/ai/affinities": {
      "get": {
        "description": "Detects all affinities of a user.",
        "operationId": "get_affinities_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "entity": {
                        "displayName": "BENUTZER",
                        "entityClass": "USER",
                        "id": "0e3cb7d1-1ccb-4094-b382-21d3590dfe58",
                        "userId": "0e3cb7d1-1ccb-4094-b382-21d3590dfe58"
                      },
                      "id": "ddb071a9-980d-7f25-4bfe-4d8ecdc5140e",
                      "relations": [
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/",
                          "rel": "tag_trees"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/14/",
                          "rel": "tag_tree"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/14/tag-tree-items/",
                          "rel": "tag_tree_items"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/14/tag-tree-items/1/",
                          "rel": "tag_tree_item"
                        }
                      ],
                      "tagTreeItem": {
                        "description": "Sportive",
                        "displayName": "Sportenthusiast*in",
                        "systemId": 1,
                        "systemName": "SPORTIVE",
                        "tagTree": {
                          "description": "Affinity detection tag tree.",
                          "displayName": "Affinit√§ten",
                          "isTenantGenerated": false,
                          "systemId": 14,
                          "systemName": "AFFINITIES",
                          "version": 0.1
                        }
                      }
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/categorization_tag_instance_schema"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Return the affinities of a user",
        "tags": [
          "Affinities"
        ]
      }
    },
    "/customer/v2/ai/cashflow": {
      "get": {
        "description": "This is a utility function for Personal Finance Management applications.\n\nThe endpoint simply aggregates transactions on the dimension set by the request\nparameter `focus`:\n\nIf `focus` set to **time**, the transactions are partitioned by time and aggregated by\nthe choice of `tag`.\nIf `tag` is set to **CATEGORIES**, we deliver the distribution of net cash-flow across\nall categories, indexed over time periods. The results can be used as monthly\npie-charts depicting spending habits.\nBy setting `tag` to **BUSINESS_PARTNERS**, distribution is calculated across business\npartners.\n\nIf `focus` is set to **tag**, we limit the result to the net cash-flow in a given\n`tag`, and get the time domain changes for this specific tag. If the request parameter\n`tag` is set to `**CATEGORIES**, we answer the question: \"How did my spending change\nwithin a category over time?\".\nBy setting  `tag` to **BUSINESS_PARTNERS**, we answer \"How much did I spend to a\ncertain business partner over time?\"",
        "operationId": "get_cashflow_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "description": "Cashflow is generated with the focus on either time or tag (CATEGORIES or BUSINESS_PARTNER)",
            "in": "query",
            "name": "focus",
            "schema": {
              "type": "string",
              "enum": [
                "tag",
                "time"
              ],
              "default": "time"
            }
          },
          {
            "description": "Tag to use when summarizing the cashflow",
            "in": "query",
            "name": "tag",
            "schema": {
              "type": "string",
              "enum": [
                "CATEGORIES",
                "BUSINESS_PARTNERS"
              ],
              "default": "CATEGORIES"
            }
          },
          {
            "description": "Use the usual tags (\"sub\") or their parents (\"main\"). Only relevant if tag=CATEGORIES",
            "in": "query",
            "name": "catLevel",
            "schema": {
              "type": "string",
              "enum": [
                "sub",
                "main"
              ],
              "default": "sub"
            }
          },
          {
            "description": "Exclude savings and investments related transactions",
            "in": "query",
            "name": "excludeSavings",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "details": {
                        "predictions": [],
                        "statistics": [
                          {
                            "cashflow": -1879.46,
                            "tagTreeItem": {
                              "displayName": "Gesamt",
                              "systemId": 906,
                              "systemName": "TOTAL_TOTAL",
                              "systemNameParent": "TOTAL",
                              "tagTree": {
                                "description": "Two level tree with years as parents and its periods as children.",
                                "displayName": "Cashflow",
                                "isClientGenerated": false,
                                "systemId": 6,
                                "systemName": "CASHFLOW",
                                "version": 1
                              }
                            }
                          },
                          {
                            "cashflow": -342.91,
                            "tagTreeItem": {
                              "displayName": "Jahr 2020",
                              "systemId": 692,
                              "systemName": "2020_Y",
                              "systemNameParent": "2020",
                              "tagTree": {
                                "description": "Two level tree with years as parents and its periods as children.",
                                "displayName": "Cashflow",
                                "isClientGenerated": false,
                                "systemId": 6,
                                "systemName": "CASHFLOW",
                                "version": 1
                              }
                            }
                          },
                          {
                            "cashflow": -342.91,
                            "tagTreeItem": {
                              "displayName": "1. Quartal 2020",
                              "systemId": 634,
                              "systemName": "2020_Q1",
                              "systemNameParent": "2020",
                              "tagTree": {
                                "description": "Two level tree with years as parents and its periods as children.",
                                "displayName": "Cashflow",
                                "isClientGenerated": false,
                                "systemId": 6,
                                "systemName": "CASHFLOW",
                                "version": 1
                              }
                            }
                          },
                          {
                            "cashflow": -154.3,
                            "tagTreeItem": {
                              "displayName": "Januar 2020",
                              "systemId": 622,
                              "systemName": "2020_M01",
                              "systemNameParent": "2020",
                              "tagTree": {
                                "description": "Two level tree with years as parents and its periods as children.",
                                "displayName": "Cashflow",
                                "isClientGenerated": false,
                                "systemId": 6,
                                "systemName": "CASHFLOW",
                                "version": 1
                              }
                            }
                          },
                          {
                            "cashflow": -29.99,
                            "tagTreeItem": {
                              "displayName": "1. Kalenderwoche 2020",
                              "systemId": 639,
                              "systemName": "2020_W01",
                              "systemNameParent": "2020",
                              "tagTree": {
                                "description": "Two level tree with years as parents and its periods as children.",
                                "displayName": "Cashflow",
                                "isClientGenerated": false,
                                "systemId": 6,
                                "systemName": "CASHFLOW",
                                "version": 1
                              }
                            }
                          }
                        ]
                      },
                      "entity": {
                        "displayName": "USER",
                        "entityClass": "USER",
                        "id": "0b64d605-0483-4bae-8b12-fa26e313060b"
                      },
                      "id": "4ff21ddb-baae-47f0-8181-77b7c5a7ade0",
                      "relations": [
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/",
                          "rel": "tag_trees"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/",
                          "rel": "tag_tree"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/",
                          "rel": "tag_tree_items"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/2/",
                          "rel": "tag_tree_item"
                        }
                      ],
                      "tagTreeItem": {
                        "description": "Transactions including invoices & bills",
                        "displayName": "Vertragsrechnungen",
                        "systemId": 2,
                        "systemName": "BILLS",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isClientGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.7
                        }
                      }
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/cashflow_tag_instance_schema"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Return cashflow tags with statistics and predictions",
        "tags": [
          "Cashflow"
        ]
      }
    },
    "/customer/v2/ai/credit-attributes": {
      "get": {
        "description": "Calculates and summarizes relevant financial attributes of the user that are relevant for\ncredit risk estimation.",
        "operationId": "get_credit_attributes_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credit_attributes_schema"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Return credit attributes",
        "tags": [
          "Credit Attributes"
        ]
      }
    },
    "/customer/v2/ai/disposable-money": {
      "get": {
        "description": "Defines the disposable money of a user when the next salary payment is expected.\n\nThe transactions are categorized, contracts created, cashflow analyzed and predicted.\n\nBy detailed analysis of statistics and predictions of a user's transactions,\nthe following values are extracted.\n\n### dateSalaryLatest\n    Date of the latest salary payment\n\n### dateSalaryNext\n    date of the next salary payment\n\n### amountSalaryLatest\n    Amount of the latest salary payment\n\n### amountSalaryNext\n    Amount of the next salary payment\n\n### daysUntilSalary\n    Days until the next salary payment is expected\n\n### amountCashflow\n    Sum of income and expenses (cashflow) since the latest salary payment\n\n### amountCurrentlyLeft\n    Amount currently left until the next salary payment\n    considering the cashflow since the latest salary payment\n\n### amountExpectedFixedCashflow\n    Sum of expected income and expenses (cashflow) from contracts\n    due until the next salary payment\n\n### amountExpectedLeft\n    Amount expectedly left until the next salary payment\n    considering the cashflow since the latest salary payment\n    and the expected cashflow until the next salary payment\n\n### amountExpectedLeftDaily\n    Daily amount expectedly left until the next salary payment\n    considering the cashflow since the latest salary payment\n    and the expected cashflow until the next salary payment\n\n### amountExpectedFlexCashflow\n    Sum of flexible income and expenses (cashflow)\n    expected until the next salary payment derived from previous\n    spending habits excluding contracts (expected fixed cashflow)\n\n### amountDisposableMoney\n    Amount estimated to be left at the next salary payment\n    considering the cashflow since the latest salary payment\n    the expected fixed cashflow until the next salary payment\n    and the expected flexible cashflow until the next salary payment",
        "operationId": "get_disposable_money_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/disposable_money_tag_instance_schema"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Return a disposable money tag",
        "tags": [
          "Disposable Money"
        ]
      }
    },
    "/customer/v2/ai/life-events": {
      "get": {
        "description": "Detects all life events of a user.\n\nLife events are key events in a user's life that represent some significant change.\nThey are always the start or end of some activity or state. In general, although life\nevents often correspond to the start or end of a life stage, this is not necessarily\nalways the case.\n\nThis endpoint returns all life events in the past with the corresponding date. Some\nlife events are unique (e.g. first employment, first tenancy), others may recur over\ntime (e.g. new tenancy, birth of child).\n\nLife Event Tag Instance IDs are generated by hashing the User ID, event date and the\ntagTreeItem ID of the Tag Instance. This gives a best effort uniqueness to the ids.",
        "operationId": "get_life_event_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "details": {
                        "eventDate": "2019-07-01"
                      },
                      "entity": {
                        "displayName": "USER",
                        "entityClass": "USER",
                        "id": "0b64d605-0483-4bae-8b12-fa26e313060b"
                      },
                      "id": "924bbc71-2444-aa4a-4821-e92e9976ed17",
                      "relations": [
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/",
                          "rel": "tag_trees"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/10/",
                          "rel": "tag_tree"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/10/tag-tree-items/",
                          "rel": "tag_tree_items"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/10/tag-tree-items/931/",
                          "rel": "tag_tree_item"
                        }
                      ],
                      "tagTreeItem": {
                        "displayName": "Ende Mietverh√§ltnis",
                        "systemId": 931,
                        "systemName": "TENANCY_END",
                        "tagTree": {
                          "description": "Single level life event tag tree, usually with both start and end tags.",
                          "displayName": "Lebensereignisse",
                          "isClientGenerated": false,
                          "systemId": 10,
                          "systemName": "LIFE_EVENTS",
                          "version": 0.3
                        }
                      }
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/life_event_tag_instance_schema"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Return the life events of a user",
        "tags": [
          "Life"
        ]
      }
    },
    "/customer/v2/ai/life-stages": {
      "get": {
        "description": "Detects life stages using all transactions of a user.\nLife stages are detected with the help of contracts dealing with significant aspects\nof life (e.g. rentals, employment contracts).\n\nLife stages are structured in four domains, each representing information about\ndifferent aspects of life:\n    - Labour Market: Professional and academic career of the user\n    - Parenthood: Indicating whether the user has children\n    - Housing: Information about ownership / rental agreements of the user's\n               accommodation\n    - Savings: Current user activity for preparing retirement\n\nLife Stage Tag Instance Ids are generated by hashing the User ID and the\ntagTreeItem ID of the Tag Instance. This gives a best effort uniqueness to the ids.",
        "operationId": "get_life_stage_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "description": "If set to True, candidate tags are returned in case of ambiguity. Furthermore, explanations regarding tags are added.",
            "in": "query",
            "name": "verbose",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "entity": {
                        "displayName": "USER",
                        "entityClass": "USER",
                        "id": "0b64d605-0483-4bae-8b12-fa26e313060b"
                      },
                      "id": "83b507c5-0be5-e3c8-a0b7-f3339744cfa2",
                      "relations": [
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/",
                          "rel": "tag_trees"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/8/",
                          "rel": "tag_tree"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/8/tag-tree-items/",
                          "rel": "tag_tree_items"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/8/tag-tree-items/923/",
                          "rel": "tag_tree_item"
                        }
                      ],
                      "tagTreeItem": {
                        "displayName": "Mieter",
                        "systemId": 923,
                        "systemName": "TENANCY",
                        "tagTree": {
                          "description": "Single level life stage tag tree.",
                          "displayName": "Lebensphasen",
                          "isClientGenerated": false,
                          "systemId": 8,
                          "systemName": "LIFE_STAGES",
                          "version": 0.4
                        }
                      }
                    },
                    {
                      "entity": {
                        "displayName": "USER",
                        "entityClass": "USER",
                        "id": "0b64d605-0483-4bae-8b12-fa26e313060b"
                      },
                      "id": "be26f079-38de-3d1e-504c-404efad17365",
                      "relations": [
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/",
                          "rel": "tag_trees"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/8/",
                          "rel": "tag_tree"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/8/tag-tree-items/",
                          "rel": "tag_tree_items"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/8/tag-tree-items/915/",
                          "rel": "tag_tree_item"
                        }
                      ],
                      "tagTreeItem": {
                        "displayName": "Elternteil",
                        "systemId": 915,
                        "systemName": "PARENTHOOD",
                        "tagTree": {
                          "description": "Single level life stage tag tree.",
                          "displayName": "Lebensphasen",
                          "isClientGenerated": false,
                          "systemId": 8,
                          "systemName": "LIFE_STAGES",
                          "version": 0.4
                        }
                      }
                    },
                    {
                      "entity": {
                        "displayName": "USER",
                        "entityClass": "USER",
                        "id": "0b64d605-0483-4bae-8b12-fa26e313060b"
                      },
                      "id": "af7b1ceb-9eda-2db4-7e91-8097dc902d42",
                      "relations": [
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/",
                          "rel": "tag_trees"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/8/",
                          "rel": "tag_tree"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/8/tag-tree-items/",
                          "rel": "tag_tree_items"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/8/tag-tree-items/912/",
                          "rel": "tag_tree_item"
                        }
                      ],
                      "tagTreeItem": {
                        "displayName": "Angestellt",
                        "systemId": 912,
                        "systemName": "EMPLOYMENT",
                        "tagTree": {
                          "description": "Single level life stage tag tree.",
                          "displayName": "Lebensphasen",
                          "isClientGenerated": false,
                          "systemId": 8,
                          "systemName": "LIFE_STAGES",
                          "version": 0.4
                        }
                      }
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/life_stage_tag_instance_schema"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Return life stages of a user",
        "tags": [
          "Life"
        ]
      }
    },
    "/customer/v2/ai/tagging-rules": {
      "delete": {
        "description": "Delete all existing categorization rules of a user without any filter.",
        "operationId": "delete_user_rules_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "description": "ID of a tag tree. If missing, all rules are selected.",
            "in": "query",
            "name": "tagTreeId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted all rules."
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Delete rules",
        "tags": [
          "User Rules"
        ]
      },
      "get": {
        "description": "Get a list of all categorization rules a specific user has.\nA rule consists of counterparty information (name and IBAN) and tag tree item\ninformation e.g. the tag tree item with the system name LIVING_GROCERIES\nof the tag tree with the system name CATEGORIES.\nAll future transactions are categorized according to the existing rules\nif possible instead of running a categorization model.",
        "operationId": "get_user_rules_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "description": "ID of a tag tree. If missing, all rules are selected.",
            "in": "query",
            "name": "tagTreeId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "counterpartyIban": "DE42500105174896827935",
                      "counterpartyName": "M√ºller Drogerie",
                      "id": "008a423d-ab1a-3785-17ff-d66e45b97f22",
                      "tagTreeItem": {
                        "description": "Payments from grocery shopping",
                        "displayName": "Lebensmittel",
                        "systemId": 67,
                        "systemName": "LIVING_GROCERIES",
                        "systemNameParent": "LIVING",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      },
                      "user": "0e3cb7d1-f17e-3924-4d78a-21d3590dfe58"
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/user_rule_schema"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Get rules",
        "tags": [
          "User Rules"
        ]
      },
      "post": {
        "description": "Create a new rule according to the transaction information (more specifically the\ncounterparty name and the counterparty iban) and a tag tree item.\n\nIt is not possible for a single user to create two rules with the same\ncounterparty (name and IBAN are decisive).\n\nIt is not possible to change the tag tree item of an existing rule. Please delete the\nexisting rule and create a new one with the new tag tree item.\n\nIt is not possible to create a rule if both counterparty name and counterparty\nIBAN do not exist.",
        "operationId": "post_user_rules_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user_rule_input_schema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_rule_schema"
                }
              }
            }
          },
          "201": {
            "description": "Successfully created a rule.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_rule_schema"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict"
          },
          "422": {
            "description": "UnprocessableEntity"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Create rule",
        "tags": [
          "User Rules"
        ]
      }
    },
    "/customer/v2/ai/tagging-rules/{ruleId}": {
      "delete": {
        "description": "Delete a specific categorization rule of a user by ID.\nTo find out the ids get all existing rules of the user with GET.\nTo delete all existing rules of a user use DELETE without ID.",
        "operationId": "delete_user_rule_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted rule."
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Rule does not exist."
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Delete rule",
        "tags": [
          "User Rules"
        ]
      },
      "get": {
        "description": "Get a specific categorization rule of a specific user by ID.\nTo get all existing rules of a user use the endpoint without the ID.",
        "operationId": "get_user_rule_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_rule_schema"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Rule does not exist."
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "summary": "Get rule",
        "tags": [
          "User Rules"
        ]
      },
      "parameters": [
        {
          "description": "ID of an existing rule",
          "in": "path",
          "name": "ruleId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/tags/v1/tag-trees": {
      "get": {
        "description": "`TagTree` is a collection of `TagTreeItem`s. Each `TagTree` represent a versioned set of\nconcepts that are relevant for a Business Domain. We call a curated group of concepts a\n**Controlled Vocabulary** as in accordance with the\n[ISO Indexing Standards](https://www.isko.org/cyclo/automatic#2), hence `TagTree` represent\na specific controlled vocabulary.\n\nFor example, we represent all the different customer spending categories in the `TagTree`\n`CATEGORIES`. The set of all supported sales triggers are grouped together in the `TagTree`\n`SalesTriggers`.\n\n`TagTrees` can be thought of the root node of a hierarchical concept tree. The leaves of\nthe `TagTree` are called `TagTreeItems`.\n\nOne way of interpreting `TagTree` is seeing it as the root node of the tree. However, we\nhave intentionally not taken this path and represented the root node as a separate concept\nin our concept model.\n\nThis gives us the flexibility of giving versions to `TagTrees`. When we add a new\n`TagTreeItem` or deprecate an old one, it affects all `TagTreeItems`, since the semantic\nvalue of each item is in relation to all other items. Such a change is captured by a simple\nincrease in the version number of the `TagTree`. We do our best to keep such updates rare\nand backward-compatible, but we do not give hard guarantees.",
        "operationId": "get_tag_trees_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "description": "Two level categorization tree.",
                      "displayName": "Kategorien",
                      "isClientGenerated": false,
                      "relations": [
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/",
                          "rel": "self"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/",
                          "rel": "tag_trees"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/",
                          "rel": "tag_tree_items"
                        }
                      ],
                      "systemId": 1,
                      "systemName": "CATEGORIES",
                      "version": 3.7
                    },
                    {
                      "description": "Two level fine grained insurance categorization tag tree.",
                      "displayName": "Versicherungsarten",
                      "isClientGenerated": false,
                      "relations": [
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/2/",
                          "rel": "self"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/",
                          "rel": "tag_trees"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/2/tag-tree-items/",
                          "rel": "tag_tree_items"
                        }
                      ],
                      "systemId": 2,
                      "systemName": "INSURANCE_TYPES",
                      "version": 2.4
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/tag_tree_schema"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "summary": "Get TagTrees",
        "tags": [
          "Tags"
        ]
      }
    },
    "/tags/v1/tag-trees/{tagTreeId}": {
      "get": {
        "description": "Get Information on a single `TagTree`",
        "operationId": "get_tag_tree_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tag_tree_schema"
                }
              }
            }
          }
        },
        "summary": "Get TagTree",
        "tags": [
          "Tags"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "tagTreeId",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ]
    },
    "/tags/v1/tag-trees/{tagTreeId}/tag-tree-items": {
      "get": {
        "description": "`TagTre<eItems` are the individual words in the **Controlled Vocabularies** or\n`TagTrees`. For example in the `TagTree` `CATEGORY`, we represent spending\ncorresponding to online entertainment by the `TagTreeItem` `RECREATION_ONLINE`.\n\nWe employ a two level hierarchy in `TagTreeItems`. The parent-child relation is can be\nobtained threefold.\nFirst, the relation is coded in the `systemName` attribute, which has the naming\nconvention `PARENT_CHILD`.\nSecondly a `parent` attribute is returned for the children, which has the `systemName`\nof the parent `TagTreeItem`. Finally, a relation having the URI of the parent is also\nreturned. We do not support a parallel `children` attribute.\n\n`TagTreeItem` represent the standardized part of tag instances. They represent the\nnormalized words in the controlled vocabulary represented by `Tag Trees`.\n\nInstead of defining a specific tag tree item for each tag tree, we have opted to\ndefine a single tag tree item tag, with attributes representing the attributes of\nall possible tag tree items from all tag trees.\n\nThis is a design choice to keep them searchable under\n`/tag-trees/<int:tagTreeId>/tag-tree-items/`.\nIn specific categorizing end-points, where tag tree items are returned, not relevant\nattributes are deleted on use.\n\n## Parameter Details\n    ### `tagTreeId`\n    Use `/tags/tag-trees/` to get a list of all tag trees with their `systemId`s to use\n    them as `tagTreeId` input in calling this endpoint.\n\n    ### `categoryTagTreeItemId`\n    This option only works with the `TagTree` `BUSINESS_PARTNERS`. Each business partner\n    in our database is associated to one or multiple `TagTreeItem` from `TagTree`\n    `CATEGORIES`. By setting this parameter to the `systemId` of the desired `TagTreeItem`,\n    e.g. set the value to 8 to receive only business partners related to `INSURANCE`.",
        "operationId": "get_tag_tree_items_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "description": "system id of a tag tree item of the tag tree with the system name 'CATEGORIES'",
            "in": "query",
            "name": "categoryTagTreeItemId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "description": "Transactions in the field of banking and finance",
                      "displayName": "Bank und Finanzen",
                      "relations": [
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/1/",
                          "rel": "self"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/",
                          "rel": "tag_trees"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/",
                          "rel": "tag_tree"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/",
                          "rel": "tag_tree_items"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/1/",
                          "rel": "tag_tree_item"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/None/",
                          "rel": "tag_tree_item_parent"
                        }
                      ],
                      "systemId": 1,
                      "systemName": "BANKFINANCE",
                      "tagTree": {
                        "description": "Two level categorization tree.",
                        "displayName": "Kategorien",
                        "isClientGenerated": false,
                        "systemId": 1,
                        "systemName": "CATEGORIES",
                        "version": 3.7
                      }
                    },
                    {
                      "description": "Transactions including invoices & bills",
                      "displayName": "Vertragsrechnungen",
                      "relations": [
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/2/",
                          "rel": "self"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/",
                          "rel": "tag_trees"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/",
                          "rel": "tag_tree"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/",
                          "rel": "tag_tree_items"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/2/",
                          "rel": "tag_tree_item"
                        },
                        {
                          "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/None/",
                          "rel": "tag_tree_item_parent"
                        }
                      ],
                      "systemId": 2,
                      "systemName": "BILLS",
                      "tagTree": {
                        "description": "Two level categorization tree.",
                        "displayName": "Kategorien",
                        "isClientGenerated": false,
                        "systemId": 1,
                        "systemName": "CATEGORIES",
                        "version": 3.7
                      }
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/extensive_tag_tree_item_schema"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "summary": "Get TagTreeItems of TagTree",
        "tags": [
          "Tags"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "tagTreeId",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ]
    },
    "/tags/v1/tag-trees/{tagTreeId}/tag-tree-items/{tagTreeItemId}": {
      "get": {
        "description": "`TagTreeItem` represent the standardized part of tag instances. They represent the\nnormalized words in the controlled vocabulary represented by `Tag Trees`.\n\nInstead of defining a specific tag tree item for each tag tree, we have opted to\ndefine a single tag tree item tag, with attributes representing the attributes of\nall possible tag tree items from all tag trees.\n\nThis is a design choice to keep them searchable under\n`/tag-trees/<int:tagTreeId>/tag-tree-items/`.\nIn specific categorizing end-points, where tag tree items are returned, not relevant\nattributes are deleted on use.",
        "operationId": "get_tag_tree_item_resource",
        "parameters": [
          {
            "description": "ID used to track end-to-end processing of the request",
            "in": "header",
            "name": "x-correlation-id",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/extensive_tag_tree_item_schema"
                }
              }
            }
          }
        },
        "summary": "Get TagTreeItem of TagTree",
        "tags": [
          "Tags"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "tagTreeId",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "in": "path",
          "name": "tagTreeItemId",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ]
    }
  },
  "security": [
    {
      "httpBearer": []
    }
  ],
  "tags": [
    {
      "description": "General categorization of transactions",
      "name": "Categories"
    },
    {
      "description": "Insurance focused categorization of transactions",
      "name": "Insurance Types"
    },
    {
      "description": "Business partner detection of transactions",
      "name": "Business Partners"
    },
    {
      "description": "Freelancer focused categorization of transactions",
      "name": "Freelancer Categories"
    },
    {
      "description": "Contract detection of a user",
      "name": "Contracts"
    },
    {
      "description": "Cashflow statistics and predictions of a user",
      "name": "Cashflow"
    },
    {
      "description": "Disposable money of a user",
      "name": "Disposable Money"
    },
    {
      "description": "Determine life events and life stages of a user",
      "name": "Life"
    },
    {
      "description": "Sales trigger detection of a user",
      "name": "Sales Triggers"
    },
    {
      "description": "Affordability of a user",
      "name": "Affordability"
    },
    {
      "description": "Affinities detection of a user",
      "name": "Affinities"
    },
    {
      "description": "Credit worthiness of a user",
      "name": "Credit Attributes"
    },
    {
      "description": "Check credit worthiness",
      "name": "Credit Check"
    },
    {
      "description": "Get information about tag trees and tag tree items",
      "name": "Tags"
    },
    {
      "description": "Management of user specific rules",
      "name": "User Rules"
    },
    {
      "description": "General categorization of transactions version 1",
      "name": "Categories V1"
    }
  ],
  "servers": [
    {
      "url": "https://banksapi.io/customer/v2/ai"
    }
  ],
  "components": {
    "responses": {
      "MaskError": {
        "description": "When any error occurs on mask"
      },
      "ParseError": {
        "description": "When a mask can't be parsed"
      }
    },
    "requestBodies": {
      "v3_connect_put_schema": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v3_connect_put_schema"
            }
          }
        },
        "required": true
      }
    },
    "securitySchemes": {
      "httpBearer": {
        "description": "Bearer-Token",
        "in": "header",
        "name": "Authentication",
        "scheme": "bearer",
        "type": "http"
      }
    },
    "schemas": {
      "affordability_amount_tti_schema": {
        "properties": {
          "amount": {
            "description": "Total amount",
            "example": 34.4,
            "type": "number"
          },
          "tagTreeItem": {
            "$ref": "#/components/schemas/tag_tree_item_schema"
          }
        },
        "required": [
          "amount",
          "tagTreeItem"
        ],
        "type": "object"
      },
      "affordability_expenses_schema": {
        "properties": {
          "amount": {
            "description": "Total amount",
            "example": 34.4,
            "type": "number"
          },
          "luxuries": {
            "allOf": [
              {
                "$ref": "#/components/schemas/affordability_regular_irregular_schema"
              }
            ],
            "description": "Expected average monthly expenses for luxuries based on regularly recurring payments including contract payments (e.g. for streaming services) and irregular payments (e.g. travel costs)."
          },
          "necessities": {
            "allOf": [
              {
                "$ref": "#/components/schemas/affordability_regular_irregular_schema"
              }
            ],
            "description": "Expected average monthly expenses for necessities based on regularly recurring payments including contract payments and irregular payments for living costs such as groceries."
          }
        },
        "required": [
          "amount"
        ],
        "type": "object"
      },
      "affordability_regular_irregular_schema": {
        "properties": {
          "amount": {
            "description": "Total amount",
            "example": 34.4,
            "type": "number"
          },
          "irregular": {
            "allOf": [
              {
                "$ref": "#/components/schemas/affordability_regular_or_irregular_schema"
              }
            ],
            "description": "Expected average monthly income/expenses based on irregular transactions. Regular income/expenses not included."
          },
          "regular": {
            "allOf": [
              {
                "$ref": "#/components/schemas/affordability_regular_or_irregular_schema"
              }
            ],
            "description": "Expected average monthly income/expenses based on regularly recurring transactions including contracts. Irregular income/expenses not included."
          }
        },
        "required": [
          "amount"
        ],
        "type": "object"
      },
      "affordability_regular_or_irregular_schema": {
        "properties": {
          "amount": {
            "description": "Total amount",
            "example": 34.4,
            "type": "number"
          },
          "amountsPerTagTreeItem": {
            "description": "Expected average monthly income/expenses based on irregularl/regular transactions for each tag tree item.",
            "items": {
              "$ref": "#/components/schemas/affordability_amount_tti_schema"
            },
            "type": "array"
          }
        },
        "required": [
          "amount",
          "amountsPerTagTreeItem"
        ],
        "type": "object"
      },
      "affordability_tag_instance_details_schema": {
        "properties": {
          "creditCards": {
            "description": "Number of existing credit cards.",
            "example": 3,
            "minimum": 0,
            "type": "integer"
          },
          "debtCollectionPayments": {
            "description": "Whether reminder charges transactions exist in the recent past.",
            "example": false,
            "type": "boolean"
          },
          "discretionary": {
            "description": "Expected amount available monthly to spend on luxuries. Calculation based on expected necessity expenses and expected income.",
            "example": 459.4,
            "type": "number"
          },
          "discretionaryForIrregularLuxuries": {
            "description": "Expected amount available monthly to spend on luxuries besides existing regularly  recurring expenses including contracts. Calculation based on expected necessity expenses and income (discretionary) as well as expected regularly recurring expenses for luxury including contracts.",
            "example": 345.36,
            "type": "number"
          },
          "existingLoans": {
            "description": "Whether active loans exist or not.",
            "example": false,
            "type": "boolean"
          },
          "expenses": {
            "allOf": [
              {
                "$ref": "#/components/schemas/affordability_expenses_schema"
              }
            ],
            "description": "Expected average monthly expenses."
          },
          "financialLiteracy": {
            "description": "The user has knowledge of various financial skills. Computation takes, among other things, the number of banking products, investments and insurances into account.",
            "example": true,
            "type": "boolean"
          },
          "gambling": {
            "description": "Expected amount spend for gambling activities.",
            "example": 34.4,
            "minimum": 0,
            "type": "number"
          },
          "income": {
            "allOf": [
              {
                "$ref": "#/components/schemas/affordability_regular_irregular_schema"
              }
            ],
            "description": "Expected average monthly income."
          },
          "mortgagePayments": {
            "description": "Whether at least one transaction related to a mortgage in the recent  past exists or not.",
            "example": false,
            "type": "boolean"
          },
          "mostRecentRentalPayment": {
            "description": "Date of the most recent rental payment of an active rental contract. Returned if rentalPayments is True.",
            "example": "2022-02-27",
            "format": "date",
            "type": "string"
          },
          "ratioExpensesToIncome": {
            "description": "Ratio of expenses to income.",
            "example": 0.86,
            "minimum": 0,
            "type": "number"
          },
          "ratioGamblingToDiscretionaryForIrregularLuxuries": {
            "description": "Ratio of gambling expenses to discretionary for irregular luxuries. Regular gambling expenses are currently included in the computation of discretionary for irregular luxuries here. This might lead to a low ratio even though gambling expenses are high.",
            "example": 0.27,
            "type": "number"
          },
          "ratioLuxuriesToExpenses": {
            "description": "Ratio of expenses for luxuries to total expenses.",
            "example": 0.27,
            "maximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "ratioLuxuriesToIncome": {
            "description": "Ratio of expenses for luxuries to income.",
            "example": 0.14,
            "minimum": 0,
            "type": "number"
          },
          "ratioNecessitiesToExpenses": {
            "description": "Ratio of expenses for necessities to total expenses.",
            "example": 0.73,
            "maximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "ratioNecessitiesToIncome": {
            "description": "Ratio of expenses for necessities to income.",
            "example": 0.59,
            "minimum": 0,
            "type": "number"
          },
          "reminderCharges": {
            "description": "Whether reminder charges transactions exist in the recent past.",
            "example": false,
            "type": "boolean"
          },
          "rentalPayments": {
            "description": "Whether an active rental contract exists or not.",
            "example": false,
            "type": "boolean"
          },
          "returnDebits": {
            "description": "Whether return debit transaction exist in the recent past or not.",
            "example": false,
            "type": "boolean"
          },
          "savings": {
            "description": "Expected amount left monthly. Calculation based on total expected expenses and expected income.",
            "example": 105.4,
            "type": "number"
          },
          "seizurePayments": {
            "description": "Whether reminder charges transactions exist in the recent past.",
            "example": false,
            "type": "boolean"
          }
        },
        "required": [
          "creditCards",
          "debtCollectionPayments",
          "discretionary",
          "discretionaryForIrregularLuxuries",
          "existingLoans",
          "financialLiteracy",
          "gambling",
          "mortgagePayments",
          "ratioExpensesToIncome",
          "ratioGamblingToDiscretionaryForIrregularLuxuries",
          "ratioLuxuriesToExpenses",
          "ratioLuxuriesToIncome",
          "ratioNecessitiesToExpenses",
          "ratioNecessitiesToIncome",
          "reminderCharges",
          "rentalPayments",
          "returnDebits",
          "savings",
          "seizurePayments"
        ],
        "type": "object"
      },
      "affordability_tag_instance_schema": {
        "example": {
          "details": {
            "creditCards": 0,
            "debtCollectionPayments": false,
            "discretionary": 3788.69,
            "discretionaryForIrregularLuxuries": 3609.48,
            "existingLoans": false,
            "expenses": {
              "amount": -1722.88,
              "luxuries": {
                "amount": -435.9,
                "irregular": {
                  "amount": -216.57,
                  "amountsPerTagTreeItem": [
                    {
                      "amount": -191.67,
                      "tagTreeItem": {
                        "description": "Transactions involving cash withdrawals at an ATM or a bank facility",
                        "displayName": "Barauszahlung",
                        "systemId": 2,
                        "systemName": "BANKFINANCE_CASHWITHDRAWAL",
                        "systemNameParent": "BANKFINANCE",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      }
                    },
                    {
                      "amount": -12.22,
                      "tagTreeItem": {
                        "description": "Payments from eating out (e.g. restaurants, bars)",
                        "displayName": "Ausgehen und Essen",
                        "systemId": 83,
                        "systemName": "RECREATION_FOODANDDRINKS",
                        "systemNameParent": "RECREATION",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      }
                    },
                    {
                      "amount": -2.99,
                      "tagTreeItem": {
                        "description": "Expenses for clothing and accessories",
                        "displayName": "Kleidung und Accessoires",
                        "systemId": 101,
                        "systemName": "SHOPPING_CLOTHINGACCESSORIES",
                        "systemNameParent": "SHOPPING",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      }
                    },
                    {
                      "amount": -6,
                      "tagTreeItem": {
                        "description": "Donations to charities",
                        "displayName": "Spenden & Wohlt√§tigkeit",
                        "systemId": 65,
                        "systemName": "LIVING_CHARITY",
                        "systemNameParent": "LIVING",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      }
                    },
                    {
                      "amount": -1.58,
                      "tagTreeItem": {
                        "description": "Expenses related to child toys (e.g. buying toys at toysrus)",
                        "displayName": "Spielwaren",
                        "systemId": 25,
                        "systemName": "FAMILY_TOYS",
                        "systemNameParent": "FAMILY",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      }
                    },
                    {
                      "amount": -1.82,
                      "tagTreeItem": {
                        "description": "Other transactions related to the subject of housing",
                        "displayName": "Wohnen - Sonstiges",
                        "systemId": 35,
                        "systemName": "HOUSING_OTHER",
                        "systemNameParent": "HOUSING",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      }
                    },
                    {
                      "amount": -0.29,
                      "tagTreeItem": {
                        "description": "Other transactions including living expenses",
                        "displayName": "Lebenshaltung - Sonstiges",
                        "systemId": 68,
                        "systemName": "LIVING_OTHER",
                        "systemNameParent": "LIVING",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      }
                    }
                  ]
                },
                "regular": {
                  "amount": -179.21,
                  "amountsPerTagTreeItem": [
                    {
                      "amount": -21.98,
                      "tagTreeItem": {
                        "description": "Expenses for music and video streaming as well as pay TV",
                        "displayName": "Streaming und Pay-TV",
                        "systemId": 115,
                        "systemName": "RECREATION_STREAMING",
                        "systemNameParent": "RECREATION",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      }
                    },
                    {
                      "amount": -20,
                      "tagTreeItem": {
                        "description": "Transactions related to personal fitness and sports (e.g. monthly gym membership payments)",
                        "displayName": "Sport und Fitness",
                        "systemId": 89,
                        "systemName": "RECREATION_SPORTS",
                        "systemNameParent": "RECREATION",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      }
                    },
                    {
                      "amount": -24.1,
                      "tagTreeItem": {
                        "description": "Payments related to a car insurance",
                        "displayName": "KFZ-Versicherung",
                        "systemId": 63,
                        "systemName": "INSURANCE_VEHICLE",
                        "systemNameParent": "INSURANCE",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      }
                    },
                    {
                      "amount": -4.77,
                      "tagTreeItem": {
                        "description": "Payments related to a liability insurance contract",
                        "displayName": "Haftpflichtversicherung",
                        "systemId": 57,
                        "systemName": "INSURANCE_LIABILITY",
                        "systemNameParent": "INSURANCE",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      }
                    },
                    {
                      "amount": -79.01,
                      "tagTreeItem": {
                        "description": "Payments related to a life insurance contract",
                        "displayName": "Lebensversicherung",
                        "systemId": 58,
                        "systemName": "INSURANCE_LIFE",
                        "systemNameParent": "INSURANCE",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      }
                    },
                    {
                      "amount": -10.31,
                      "tagTreeItem": {
                        "description": "Payments from eating out (e.g. restaurants, bars)",
                        "displayName": "Ausgehen und Essen",
                        "systemId": 83,
                        "systemName": "RECREATION_FOODANDDRINKS",
                        "systemNameParent": "RECREATION",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      }
                    },
                    {
                      "amount": -19.04,
                      "tagTreeItem": {
                        "description": "Payments related to an insurance contract covering legal expenses",
                        "displayName": "Rechtsschutzversicherung",
                        "systemId": 56,
                        "systemName": "INSURANCE_LEGAL",
                        "systemNameParent": "INSURANCE",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      }
                    }
                  ]
                }
              },
              "necessities": {
                "amount": -1272.15,
                "irregular": {
                  "amount": -94.02,
                  "amountsPerTagTreeItem": [
                    {
                      "amount": -48.94,
                      "tagTreeItem": {
                        "description": "Payments from grocery shopping",
                        "displayName": "Lebensmittel",
                        "systemId": 67,
                        "systemName": "LIVING_GROCERIES",
                        "systemNameParent": "LIVING",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      }
                    },
                    {
                      "amount": -21.62,
                      "tagTreeItem": {
                        "description": "Payments from refueling at a gas station",
                        "displayName": "Kraftstoffe und Schmiermittel",
                        "systemId": 72,
                        "systemName": "MOBILITY_FUEL",
                        "systemNameParent": "MOBILITY",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      }
                    },
                    {
                      "amount": -6.28,
                      "tagTreeItem": {
                        "description": "Payments for drugstore items (e.g. buying bath products)",
                        "displayName": "Drogerie",
                        "systemId": 66,
                        "systemName": "LIVING_DRUGSTORE",
                        "systemNameParent": "LIVING",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      }
                    },
                    {
                      "amount": -4.19,
                      "tagTreeItem": {
                        "description": "Business related interest or principal payments",
                        "displayName": "Kredittilgung (gesch√§ftlich)",
                        "systemId": 144,
                        "systemName": "BUSINESS_CREDITPAYMENT",
                        "systemNameParent": "BUSINESS",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      }
                    },
                    {
                      "amount": -7.38,
                      "tagTreeItem": {
                        "description": "Transactions involving payments for public radio and television",
                        "displayName": "√ñffentlich-rechtlicher Rundfunk",
                        "systemId": 11,
                        "systemName": "BILLS_PUBLICRADIO",
                        "systemNameParent": "BILLS",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      }
                    },
                    {
                      "amount": -5.61,
                      "tagTreeItem": {
                        "description": "Other transactions related to education",
                        "displayName": "Bildungswesen - Sonstiges",
                        "systemId": 16,
                        "systemName": "EDUCATION_OTHER",
                        "systemNameParent": "EDUCATION",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      }
                    }
                  ]
                },
                "regular": {
                  "amount": -1135.31,
                  "amountsPerTagTreeItem": [
                    {
                      "amount": -17.5,
                      "tagTreeItem": {
                        "description": "Transactions involving payments for public radio and television",
                        "displayName": "√ñffentlich-rechtlicher Rundfunk",
                        "systemId": 11,
                        "systemName": "BILLS_PUBLICRADIO",
                        "systemNameParent": "BILLS",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      }
                    },
                    {
                      "amount": -2.53,
                      "tagTreeItem": {
                        "description": "Payments from refueling at a gas station",
                        "displayName": "Kraftstoffe und Schmiermittel",
                        "systemId": 72,
                        "systemName": "MOBILITY_FUEL",
                        "systemNameParent": "MOBILITY",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      }
                    },
                    {
                      "amount": -0.9,
                      "tagTreeItem": {
                        "description": "Payments for drugstore items (e.g. buying bath products)",
                        "displayName": "Drogerie",
                        "systemId": 66,
                        "systemName": "LIVING_DRUGSTORE",
                        "systemNameParent": "LIVING",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      }
                    },
                    {
                      "amount": -56.82,
                      "tagTreeItem": {
                        "description": "Transactions involving payments for electricity and heating (e.g. to a municipal utility)",
                        "displayName": "Energiekosten",
                        "systemId": 9,
                        "systemName": "BILLS_ENERGY",
                        "systemNameParent": "BILLS",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      }
                    },
                    {
                      "amount": -46.17,
                      "tagTreeItem": {
                        "description": "Payments to telecommunication providers for a mobile or fixed-line network connection",
                        "displayName": "Internet und Telekommunikation",
                        "systemId": 12,
                        "systemName": "BILLS_TELECOMMUNICATIONS",
                        "systemNameParent": "BILLS",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      }
                    },
                    {
                      "amount": -66.6,
                      "tagTreeItem": {
                        "description": "Payments from using public transports",
                        "displayName": "√ñPNV",
                        "systemId": 75,
                        "systemName": "MOBILITY_PUBLICTRANSPORT",
                        "systemNameParent": "MOBILITY",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      }
                    },
                    {
                      "amount": -944.79,
                      "tagTreeItem": {
                        "description": "Transactions involving payments to a tenant",
                        "displayName": "Miete/Wohngeld",
                        "systemId": 37,
                        "systemName": "HOUSING_RENT",
                        "systemNameParent": "HOUSING",
                        "tagTree": {
                          "description": "Two level categorization tree.",
                          "displayName": "Kategorien",
                          "isTenantGenerated": false,
                          "systemId": 1,
                          "systemName": "CATEGORIES",
                          "version": 3.71
                        }
                      }
                    }
                  ]
                }
              }
            },
            "financialLiteracy": false,
            "gambling": 0,
            "income": {
              "amount": 5060.84,
              "irregular": {
                "amount": 0,
                "amountsPerTagTreeItem": []
              },
              "regular": {
                "amount": 5060.84,
                "amountsPerTagTreeItem": [
                  {
                    "amount": 4856.84,
                    "tagTreeItem": {
                      "description": "Income from salary payments",
                      "displayName": "Gehalt",
                      "systemId": 49,
                      "systemName": "INCOME_SALARY",
                      "systemNameParent": "INCOME",
                      "tagTree": {
                        "description": "Two level categorization tree.",
                        "displayName": "Kategorien",
                        "isTenantGenerated": false,
                        "systemId": 1,
                        "systemName": "CATEGORIES",
                        "version": 3.71
                      }
                    }
                  },
                  {
                    "amount": 204,
                    "tagTreeItem": {
                      "description": "Income from gov. child benefits",
                      "displayName": "Staatliche F√∂rderung f√ºr Familie und Kinder",
                      "systemId": 52,
                      "systemName": "INCOME_STATEFAMILY",
                      "systemNameParent": "INCOME",
                      "tagTree": {
                        "description": "Two level categorization tree.",
                        "displayName": "Kategorien",
                        "isTenantGenerated": false,
                        "systemId": 1,
                        "systemName": "CATEGORIES",
                        "version": 3.71
                      }
                    }
                  }
                ]
              }
            },
            "mortgagePayments": false,
            "mostRecentRentalPayment": "2023-06-15",
            "ratioExpensesToIncome": 0.34,
            "ratioLuxuriesToExpenses": 0.25,
            "ratioLuxuriesToIncome": 0.09,
            "ratioNecessitiesToExpenses": 0.74,
            "ratioNecessitiesToIncome": 0.25,
            "reminderCharges": false,
            "rentalPayments": true,
            "returnDebits": false,
            "savings": 3337.96,
            "seizurePayments": false
          },
          "entity": {
            "displayName": "BENUTZER",
            "entityClass": "USER",
            "id": "0e3cb7d1-1ccb-4094-b382-21d3590dfe58",
            "userId": "0e3cb7d1-1ccb-4094-b382-21d3590dfe58"
          },
          "id": "1532bcd4-1b78-990f-5203-3e22a77bed2f",
          "relations": [
            {
              "href": "https://banksapi.io/tags/v1/tag-trees/",
              "rel": "tag_trees"
            },
            {
              "href": "https://banksapi.io/tags/v1/tag-trees/17/",
              "rel": "tag_tree"
            },
            {
              "href": "https://banksapi.io/tags/v1/tag-trees/17/tag-tree-items/",
              "rel": "tag_tree_items"
            },
            {
              "href": "https://banksapi.io/tags/v1/tag-trees/17/tag-tree-items/2/",
              "rel": "tag_tree_item"
            }
          ],
          "tagTreeItem": {
            "description": "Information about the affordability",
            "displayName": "Informationen √ºber die Bezahlbarkeit",
            "systemId": 2,
            "systemName": "AFFORDABILITY_CHECK",
            "systemNameParent": "AFFORDABILITY",
            "tagTree": {
              "description": "Affordability tag tree with single parent and child tag.",
              "displayName": "Bezahlbarkeit",
              "isTenantGenerated": false,
              "systemId": 17,
              "systemName": "AFFORDABILITY",
              "version": 0.1
            }
          }
        },
        "properties": {
          "details": {
            "$ref": "#/components/schemas/affordability_tag_instance_details_schema"
          },
          "entity": {
            "$ref": "#/components/schemas/entity_schema"
          },
          "id": {
            "description": "Unique Universal Identifier (UUID)",
            "example": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
            "type": "string"
          },
          "relations": {
            "description": "List of relations",
            "items": {
              "$ref": "#/components/schemas/relation_schema"
            },
            "type": "array"
          },
          "tagTreeItem": {
            "$ref": "#/components/schemas/tag_tree_item_schema"
          }
        },
        "required": [
          "entity",
          "id",
          "tagTreeItem"
        ],
        "type": "object"
      },
      "bank_product_schema": {
        "properties": {
          "balance": {
            "description": "Balance of the bank product",
            "example": 12675.48,
            "type": "number"
          },
          "bic": {
            "description": "BIC (Bank Identifier Code)",
            "example": "DEUTDEFFXXX",
            "type": "string"
          },
          "creditDrawn": {
            "description": "Amount of credit already extended for the bank product",
            "example": 1243.48,
            "type": "number"
          },
          "creditLimit": {
            "description": "Maximum amount of credit extended for the bank product",
            "example": 2000,
            "type": "number"
          },
          "currency": {
            "description": "Currency in which the bank product is valued/managed",
            "example": "EUR",
            "type": "string"
          },
          "iban": {
            "description": "IBAN (International Bank Account Number)",
            "example": "DE61500105173126617266",
            "type": "string"
          },
          "id": {
            "description": "ID of the bank product",
            "example": "57624057-11bf-4087-b16a-dc1a7525d3b5",
            "type": "string"
          },
          "lastUpdated": {
            "description": "Date of the last product update at the bank/service provider in yyyy-mm-dd HH:MM:SS format",
            "example": "2020-01-15 09:34:46",
            "type": "string"
          },
          "name": {
            "description": "Name of the bank product according to bank/service provider",
            "example": "Girokonto Premium Plus",
            "type": "string"
          },
          "overdraftLimit": {
            "description": "Maximum amount by which the bank product can be overdrawn",
            "example": 5000,
            "type": "number"
          },
          "owner": {
            "description": "Name of the owner",
            "example": "Erika Mustermann",
            "type": "string"
          },
          "providerId": {
            "description": "UUID of the bank/service provider",
            "example": "7721443a-30ab-4fb7-8919-4bee0e963019",
            "type": "string"
          },
          "providerName": {
            "description": "Name of the bank/service provider",
            "example": "Deutsche Bank",
            "type": "string"
          },
          "status": {
            "description": "Retrieval status for the bank product data",
            "example": "VOLLSTAENDIG",
            "type": "string"
          },
          "type": {
            "description": "Type of the bank product",
            "example": "GIROKONTO",
            "type": "string"
          }
        },
        "type": "object"
      },
      "business_partner_tag_instance_details_schema": {
        "properties": {
          "customName": {
            "description": "Custom business partner (not in database)",
            "example": "Tante-Emma-Laden M√ºnchen Schwabing",
            "type": "string"
          }
        },
        "type": "object"
      },
      "business_partner_tag_instance_schema": {
        "properties": {
          "details": {
            "$ref": "#/components/schemas/business_partner_tag_instance_details_schema"
          },
          "entity": {
            "$ref": "#/components/schemas/entity_schema"
          },
          "id": {
            "description": "Unique Universal Identifier (UUID)",
            "example": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
            "type": "string"
          },
          "relations": {
            "description": "List of relations",
            "items": {
              "$ref": "#/components/schemas/relation_schema"
            },
            "type": "array"
          },
          "tagTreeItem": {
            "$ref": "#/components/schemas/business_partner_tag_tree_item_schema"
          }
        },
        "required": [
          "entity",
          "id",
          "tagTreeItem"
        ],
        "type": "object"
      },
      "business_partner_tag_tree_item_schema": {
        "properties": {
          "addressCity": {
            "description": "Address city of the business partner",
            "example": "M√ºnchen",
            "type": "string"
          },
          "addressCountry": {
            "description": "Address country of the business partner",
            "example": "Deutschland",
            "type": "string"
          },
          "addressStreet": {
            "description": "Address street incl. number of the business partner",
            "example": "Lyonel-Feininger-Stra√üe 28",
            "type": "string"
          },
          "addressZip": {
            "description": "Address zip/postal code of the business partner",
            "example": " 80807",
            "type": "string"
          },
          "categories": {
            "description": "Categories the business partner belongs to.",
            "example": [
              "BANKFINANCE",
              "BANKFINANCE_INVESTMENT",
              "BANKFINANCE_OTHER",
              "SERVICES",
              "SERVICES_PROFESSIONAL",
              "SERVICES_ONLINE"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "creditorId": {
            "description": "creditor id of the business partner",
            "example": "DEZZZ00000012345",
            "type": "string"
          },
          "description": {
            "description": "Gives a description of the tagTreeItem",
            "example": "Expenses from daily grocery purchases",
            "type": "string"
          },
          "displayName": {
            "description": "User-friendly name shown to the end-users",
            "example": "BANKSapi",
            "type": "string"
          },
          "group": {
            "description": "Group the business partner belongs to.",
            "example": "Finconomy AG",
            "type": "string"
          },
          "relations": {
            "description": "List of relations",
            "items": {
              "$ref": "#/components/schemas/relation_schema"
            },
            "type": "array"
          },
          "systemId": {
            "description": "Unique internal id of the tag tree item",
            "example": 262,
            "type": "integer"
          },
          "systemName": {
            "description": "Unique name of the tag tree item",
            "example": "BANKSapi Technology GmbH",
            "type": "string"
          },
          "tagTree": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tag_tree_schema"
              }
            ],
            "description": "tagTree that the tagTreeItem belongs to"
          },
          "telephone": {
            "description": "Telephone of the business partner",
            "example": "+49 (0)89 121 408 82",
            "type": "string"
          },
          "website": {
            "description": "Website of the business partner",
            "example": "www.banksapi.de",
            "type": "string"
          }
        },
        "required": [
          "displayName",
          "systemId",
          "systemName",
          "tagTree"
        ],
        "type": "object"
      },
      "cashflow_tag_instance_details_schema": {
        "properties": {
          "predictions": {
            "description": "cashflow predictions",
            "items": {
              "$ref": "#/components/schemas/cashflow_tag_instance_details_stats_preds_schema"
            },
            "type": "array"
          },
          "statistics": {
            "description": "cashflow statistics",
            "items": {
              "$ref": "#/components/schemas/cashflow_tag_instance_details_stats_preds_schema"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "cashflow_tag_instance_details_stats_preds_schema": {
        "properties": {
          "cashflow": {
            "description": "cashflow amount in Euros",
            "example": -3420.58,
            "type": "number"
          },
          "tagTreeItem": {
            "$ref": "#/components/schemas/tag_tree_item_schema"
          },
          "total": {
            "description": "total amount",
            "example": "EXPENSES",
            "type": "string"
          }
        },
        "required": [
          "cashflow"
        ],
        "type": "object"
      },
      "cashflow_tag_instance_schema": {
        "properties": {
          "details": {
            "$ref": "#/components/schemas/cashflow_tag_instance_details_schema"
          },
          "entity": {
            "$ref": "#/components/schemas/entity_schema"
          },
          "id": {
            "description": "Unique Universal Identifier (UUID)",
            "example": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
            "type": "string"
          },
          "relations": {
            "description": "List of relations",
            "items": {
              "$ref": "#/components/schemas/relation_schema"
            },
            "type": "array"
          },
          "tagTreeItem": {
            "$ref": "#/components/schemas/tag_tree_item_schema"
          }
        },
        "required": [
          "entity",
          "id",
          "tagTreeItem"
        ],
        "type": "object"
      },
      "categorization_tag_instance_details_schema": {
        "properties": {
          "confidenceLevel": {
            "description": "Confidence level between 0 and 1",
            "example": 0.94,
            "maximum": 1,
            "minimum": 0,
            "type": "number"
          }
        },
        "type": "object"
      },
      "categorization_tag_instance_schema": {
        "properties": {
          "details": {
            "$ref": "#/components/schemas/categorization_tag_instance_details_schema"
          },
          "entity": {
            "$ref": "#/components/schemas/entity_schema"
          },
          "id": {
            "description": "Unique Universal Identifier (UUID)",
            "example": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
            "type": "string"
          },
          "relations": {
            "description": "List of relations",
            "items": {
              "$ref": "#/components/schemas/relation_schema"
            },
            "type": "array"
          },
          "tagTreeItem": {
            "$ref": "#/components/schemas/tag_tree_item_schema"
          }
        },
        "required": [
          "entity",
          "id",
          "tagTreeItem"
        ],
        "type": "object"
      },
      "contract_details_schema": {
        "properties": {
          "amountMean": {
            "description": "Mean payment among contract payments",
            "example": "21.35",
            "type": "number"
          },
          "customName": {
            "description": "If there is no listed business partner found, a custom name is tried to be extracted from the transaction.",
            "example": "Allianz",
            "type": "string"
          },
          "id": {
            "description": "Unique Universal Identifier (UUID)",
            "example": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
            "type": "string"
          },
          "status": {
            "description": "Status of contract (ACTIVE or NOT_ACTIVE)",
            "example": "NOT_ACTIVE",
            "type": "string"
          },
          "tagTreeItemBusinessPartner": {
            "$ref": "#/components/schemas/business_partner_tag_tree_item_schema"
          },
          "tagTreeItemCategory": {
            "$ref": "#/components/schemas/tag_tree_item_schema"
          },
          "tagTreeItemInsuranceType": {
            "$ref": "#/components/schemas/tag_tree_item_schema"
          },
          "tagTreeItemPeriod": {
            "$ref": "#/components/schemas/tag_tree_item_schema"
          }
        },
        "required": [
          "amountMean",
          "id",
          "status",
          "tagTreeItemBusinessPartner",
          "tagTreeItemCategory",
          "tagTreeItemPeriod"
        ],
        "type": "object"
      },
      "contract_tag_instance_details_schema": {
        "properties": {
          "amountFirst": {
            "description": "First payment among contract payments",
            "example": "12.34",
            "type": "number"
          },
          "amountLatest": {
            "description": "Most recent payment among contract payments",
            "example": "21.01",
            "type": "number"
          },
          "amountMaximum": {
            "description": "Maximum payment among contract payments",
            "example": "23.23",
            "type": "number"
          },
          "amountMean": {
            "description": "Mean payment among contract payments",
            "example": "21.35",
            "type": "number"
          },
          "amountMedian": {
            "description": "Median payment among contract payments",
            "example": "21.01",
            "type": "number"
          },
          "amountMinimum": {
            "description": "Minimum payment among contract payments",
            "example": "19.34",
            "type": "number"
          },
          "amountNext": {
            "description": "Predicted next payment based on contract payments",
            "example": "22.01",
            "type": "number"
          },
          "amountTotal": {
            "description": "Total amount of regular and non-regular payments",
            "example": "2445.23",
            "type": "number"
          },
          "amountTotalNonRegular": {
            "description": "Total amount of non-regular payments",
            "example": "100.00",
            "type": "number"
          },
          "amountTotalRegular": {
            "description": "Total amount of regular payments",
            "example": "2345.23",
            "type": "number"
          },
          "contractNumbers": {
            "description": "List of detected contract numbers",
            "example": [
              "334112312",
              "334112313"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "costDevelopment": {
            "description": "History of regular and non-regular payments",
            "example": {
              "2017-04-03": 103.93,
              "2017-04-30": 103.46,
              "2017-05-01": 500.12
            },
            "type": "object"
          },
          "costDevelopmentNonRegular": {
            "description": "History of non-regular payments",
            "example": {
              "2017-05-01": 500.12
            },
            "type": "object"
          },
          "costDevelopmentRegular": {
            "description": "History of regular payments",
            "example": {
              "2017-04-03": 103.93,
              "2017-04-30": 103.46
            },
            "type": "object"
          },
          "counterpartyBic": {
            "description": "BIC of the counterparty",
            "example": "PBNKDEFF",
            "type": "string"
          },
          "counterpartyIban": {
            "description": "IBAN of the counterparty",
            "example": "DE75512108001245126199",
            "type": "string"
          },
          "counterpartyName": {
            "description": "Name of the counterparty",
            "example": "Allianz Versicherungen",
            "type": "string"
          },
          "counterpartyNameUltimate": {
            "description": "Name of the ultimate counterparty",
            "example": "Allianz Versicherungen",
            "type": "string"
          },
          "creditAmount": {
            "description": "Net amount of the loan being paid back with the contract",
            "example": "2345.23",
            "type": "number"
          },
          "creditAmountGross": {
            "description": "Total amount of the loan being paid back with the contract including additional costs",
            "example": "2345.23",
            "type": "number"
          },
          "customName": {
            "description": "If there is no listed business partner found, a custom name is tried to be extracted from the transaction.",
            "example": "Allianz",
            "type": "string"
          },
          "customerNumbers": {
            "description": "List of detected customer numbers",
            "example": [
              "K1000452"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dateEnd": {
            "description": "Contract end date",
            "example": "2019-04-03",
            "format": "date",
            "type": "string"
          },
          "dateFirst": {
            "description": "Date of the first payment",
            "example": "2017-04-03",
            "format": "date",
            "type": "string"
          },
          "dateLatest": {
            "description": "Date of the last payment",
            "example": "2019-04-03",
            "format": "date",
            "type": "string"
          },
          "dateNext": {
            "description": "Predicted date of the next payment",
            "example": "2019-05-03",
            "format": "date",
            "type": "string"
          },
          "dateStart": {
            "description": "Contract start date",
            "example": "2017-04-03",
            "format": "date",
            "type": "string"
          },
          "daysAge": {
            "description": "Age of the contract in days",
            "example": "12",
            "type": "integer"
          },
          "growthRate": {
            "description": "Procentual growth rate per period",
            "example": "4.34",
            "type": "number"
          },
          "interestRate": {
            "description": "Effective annual interest rate estimated for this contract",
            "example": "0.04",
            "type": "number"
          },
          "interestRateNominal": {
            "description": "Nominal annual interest rate detected for this contract",
            "example": "0.04",
            "type": "number"
          },
          "numberContract": {
            "description": "Deprecated. Use field contractNumbers instead.",
            "example": "0003412312",
            "type": "string"
          },
          "numberCustomer": {
            "description": "Deprecated. Use field customerNumbers instead.",
            "example": "123412312",
            "type": "string"
          },
          "standardDeviation": {
            "description": "Standard deviation of contract payments",
            "example": "0.23",
            "type": "number"
          },
          "status": {
            "description": "Status of contract (ACTIVE or NOT_ACTIVE)",
            "example": "NOT_ACTIVE",
            "type": "string"
          },
          "transactionIds": {
            "description": "List of transaction ids, regular and non-regular payments",
            "example": [
              "956ca508-c0e2-52c5-3202-8de20e7ed12b",
              "123ab456-a1b2-98o1-4321-5mn3b2v103bl",
              "108d1dff-d920-4b40-9e78-4bd352f6e1f4"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "transactionIdsNonRegular": {
            "description": "List of transaction ids, non-regular payments only",
            "example": [
              "108d1dff-d920-4b40-9e78-4bd352f6e1f4"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "transactionIdsRegular": {
            "description": "List of transaction ids, regular payments only",
            "example": [
              "956ca508-c0e2-52c5-3202-8de20e7ed12b",
              "123ab456-a1b2-98o1-4321-5mn3b2v103bl"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "amountFirst",
          "amountLatest",
          "amountMaximum",
          "amountMean",
          "amountMedian",
          "amountMinimum",
          "amountTotal",
          "amountTotalNonRegular",
          "amountTotalRegular",
          "contractNumbers",
          "costDevelopment",
          "costDevelopmentNonRegular",
          "costDevelopmentRegular",
          "customerNumbers",
          "dateFirst",
          "dateLatest",
          "daysAge",
          "status",
          "transactionIds",
          "transactionIdsNonRegular",
          "transactionIdsRegular"
        ],
        "type": "object"
      },
      "contract_tag_instance_schema": {
        "properties": {
          "details": {
            "$ref": "#/components/schemas/contract_tag_instance_details_schema"
          },
          "entity": {
            "$ref": "#/components/schemas/entity_schema"
          },
          "id": {
            "description": "Unique Universal Identifier (UUID)",
            "example": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
            "type": "string"
          },
          "relations": {
            "description": "List of relations",
            "items": {
              "$ref": "#/components/schemas/relation_schema"
            },
            "type": "array"
          },
          "tagTreeItemBusinessPartner": {
            "$ref": "#/components/schemas/business_partner_tag_tree_item_schema"
          },
          "tagTreeItemCategory": {
            "$ref": "#/components/schemas/tag_tree_item_schema"
          },
          "tagTreeItemInsuranceType": {
            "$ref": "#/components/schemas/tag_tree_item_schema"
          },
          "tagTreeItemPeriod": {
            "$ref": "#/components/schemas/tag_tree_item_schema"
          }
        },
        "required": [
          "entity",
          "id",
          "tagTreeItemBusinessPartner",
          "tagTreeItemCategory",
          "tagTreeItemPeriod"
        ],
        "type": "object"
      },
      "credit_attributes_active_passive_contracts_schema": {
        "properties": {
          "activeContracts": {
            "description": "Contracts that are still running",
            "items": {
              "$ref": "#/components/schemas/contract_tag_instance_schema"
            },
            "type": "array"
          },
          "passiveContracts": {
            "description": "Contracts that are already paid off",
            "items": {
              "$ref": "#/components/schemas/contract_tag_instance_schema"
            },
            "type": "array"
          }
        },
        "required": [
          "activeContracts",
          "passiveContracts"
        ],
        "type": "object"
      },
      "credit_attributes_assets_schema": {
        "properties": {
          "investments": {
            "description": "Net value of a brokerage account at the time of request",
            "items": {
              "$ref": "#/components/schemas/investment_schema"
            },
            "type": "array"
          },
          "products": {
            "description": "List of all bank products such as GIROKONTO, SPARKONTO, KREDITKARTE etc..",
            "items": {
              "$ref": "#/components/schemas/bank_product_schema"
            },
            "type": "array"
          }
        },
        "required": [
          "investments",
          "products"
        ],
        "type": "object"
      },
      "credit_attributes_budget_schema": {
        "properties": {
          "expenses": {
            "allOf": [
              {
                "$ref": "#/components/schemas/credit_attributes_expenses_schema"
              }
            ],
            "description": "Breakdown of negative financial flow into fixed and variable spending, excluding transfers between connected accounts"
          },
          "income": {
            "allOf": [
              {
                "$ref": "#/components/schemas/credit_attributes_income_schema"
              }
            ],
            "description": "Breakdown of positive financial flow, excluding transfers between connected accounts"
          },
          "net": {
            "allOf": [
              {
                "$ref": "#/components/schemas/credit_attributes_net_schema"
              }
            ],
            "description": "Net financial flow that accumulates monthly after total spending and total saving is deducted from total income"
          },
          "savings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/credit_attributes_category_summary_schema"
              }
            ],
            "description": "Financial flow that is spent into savings-related targets such as depots, savings-books"
          }
        },
        "required": [
          "expenses",
          "income",
          "net",
          "savings"
        ],
        "type": "object"
      },
      "credit_attributes_category_summary_schema": {
        "properties": {
          "statistics": {
            "allOf": [
              {
                "$ref": "#/components/schemas/credit_attributes_statistics_schema"
              }
            ],
            "description": "A summary of the statistics over the last 6 months as far as available"
          }
        },
        "required": [
          "statistics"
        ],
        "type": "object"
      },
      "credit_attributes_contract_budget_type_schema": {
        "properties": {
          "contracts": {
            "description": "A list of all contracts in this category active or ended within the last 6 months",
            "items": {
              "$ref": "#/components/schemas/contract_tag_instance_schema"
            },
            "type": "array"
          },
          "statistics": {
            "allOf": [
              {
                "$ref": "#/components/schemas/credit_attributes_statistics_schema"
              }
            ],
            "description": "A summary of the statistics over the last 6 months as far as available"
          }
        },
        "required": [
          "contracts",
          "statistics"
        ],
        "type": "object"
      },
      "credit_attributes_credit_schema": {
        "properties": {
          "financialCredit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/credit_attributes_active_passive_contracts_schema"
              }
            ],
            "description": "Credit contracts with banks or near-banks"
          },
          "leasing": {
            "allOf": [
              {
                "$ref": "#/components/schemas/credit_attributes_active_passive_contracts_schema"
              }
            ],
            "description": "Contract related to the leasing of a car."
          },
          "mortgage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/credit_attributes_active_passive_contracts_schema"
              }
            ],
            "description": "Credit related to the purchase of a house"
          }
        },
        "required": [
          "financialCredit",
          "leasing",
          "mortgage"
        ],
        "type": "object"
      },
      "credit_attributes_expenses_schema": {
        "properties": {
          "fixedSpending": {
            "allOf": [
              {
                "$ref": "#/components/schemas/credit_attributes_category_summary_schema"
              }
            ],
            "description": "Negative financial flow out of all connected accounts, that can be attributed to contracts"
          },
          "totalSpending": {
            "allOf": [
              {
                "$ref": "#/components/schemas/credit_attributes_category_summary_schema"
              }
            ],
            "description": "Total negative financial flow out of all connected accounts, excluding transfers between accounts"
          },
          "variableSpending": {
            "allOf": [
              {
                "$ref": "#/components/schemas/credit_attributes_category_summary_schema"
              }
            ],
            "description": "Negative financial flow out of all connected accounts, that can not be attributed to contracts"
          }
        },
        "required": [
          "fixedSpending",
          "totalSpending",
          "variableSpending"
        ],
        "type": "object"
      },
      "credit_attributes_flags_schema": {
        "properties": {
          "creditCards": {
            "description": "Number of credit cards the user has",
            "example": 2,
            "type": "integer"
          },
          "debtCollection": {
            "description": "List of payments to debt collection agencies",
            "items": {
              "$ref": "#/components/schemas/output_transaction_schema"
            },
            "type": "array"
          },
          "reminderCharges": {
            "description": "List of reminder charges",
            "items": {
              "$ref": "#/components/schemas/output_transaction_schema"
            },
            "type": "array"
          },
          "returnedDebitNotes": {
            "description": "List of received payments due to a returned debit note (e.g. because of insufficient funds)",
            "items": {
              "$ref": "#/components/schemas/output_transaction_schema"
            },
            "type": "array"
          },
          "riskyPayment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/credit_attributes_category_summary_schema"
              }
            ],
            "description": "Aggregated payments to risky activities such as online casinos"
          }
        },
        "required": [
          "creditCards",
          "debtCollection",
          "reminderCharges",
          "returnedDebitNotes",
          "riskyPayment"
        ],
        "type": "object"
      },
      "credit_attributes_income_schema": {
        "properties": {
          "fixedIncome": {
            "allOf": [
              {
                "$ref": "#/components/schemas/credit_attributes_contract_budget_type_schema"
              }
            ],
            "description": "Information related to non-salary recurring income sources such as rental or retirement income"
          },
          "salary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/credit_attributes_salary_schema"
              }
            ],
            "description": "Information related to recurring income sources that are associated with a salary contract"
          },
          "totalIncome": {
            "allOf": [
              {
                "$ref": "#/components/schemas/credit_attributes_category_summary_schema"
              }
            ],
            "description": "Sum of all positive financial flow, excluding transfers. Includes, salary, fixed income, windfall and non-regular income."
          },
          "variableIncome": {
            "allOf": [
              {
                "$ref": "#/components/schemas/credit_attributes_category_summary_schema"
              }
            ],
            "description": "Financial flows that cannot be mapped to salary, fixed income or windfalls"
          },
          "windfalls": {
            "description": "One-time positive financial flows that are at least 3 times more than average total income",
            "items": {
              "$ref": "#/components/schemas/output_transaction_schema"
            },
            "type": "array"
          }
        },
        "required": [
          "fixedIncome",
          "salary",
          "totalIncome",
          "variableIncome",
          "windfalls"
        ],
        "type": "object"
      },
      "credit_attributes_life_stages_schema": {
        "properties": {
          "housing": {
            "allOf": [
              {
                "$ref": "#/components/schemas/life_stage_tag_instance_schema"
              }
            ],
            "description": "Type of housing"
          },
          "labourMarket": {
            "allOf": [
              {
                "$ref": "#/components/schemas/life_stage_tag_instance_schema"
              }
            ],
            "description": "Life stage in the job market"
          },
          "parenthood": {
            "allOf": [
              {
                "$ref": "#/components/schemas/life_stage_tag_instance_schema"
              }
            ],
            "description": "Whether the user has non-adult children"
          },
          "relationship": {
            "allOf": [
              {
                "$ref": "#/components/schemas/life_stage_tag_instance_schema"
              }
            ],
            "description": "Relationship status"
          }
        },
        "required": [
          "housing",
          "labourMarket",
          "parenthood",
          "relationship"
        ],
        "type": "object"
      },
      "credit_attributes_net_schema": {
        "properties": {
          "positiveCashflowRatio": {
            "description": "Ratio of months where there was a positive net cash-flow in last 6 months",
            "type": "number"
          },
          "statistics": {
            "allOf": [
              {
                "$ref": "#/components/schemas/credit_attributes_statistics_schema"
              }
            ],
            "description": "A summary of the statistics over the last 6 months as far as available"
          }
        },
        "required": [
          "positiveCashflowRatio",
          "statistics"
        ],
        "type": "object"
      },
      "credit_attributes_salary_schema": {
        "properties": {
          "contracts": {
            "description": "A list of all contracts in this category active or ended within the last 6 months",
            "items": {
              "$ref": "#/components/schemas/contract_tag_instance_schema"
            },
            "type": "array"
          },
          "lengthOfEmployment": {
            "description": "Age of oldest continuous salary contract in days",
            "type": "integer"
          },
          "statistics": {
            "allOf": [
              {
                "$ref": "#/components/schemas/credit_attributes_statistics_schema"
              }
            ],
            "description": "A summary of the statistics over the last 6 months as far as available"
          }
        },
        "required": [
          "contracts",
          "lengthOfEmployment",
          "statistics"
        ],
        "type": "object"
      },
      "credit_attributes_schema": {
        "example": {
          "assets": {
            "investments": [],
            "products": [
              {
                "balance": 2145.78,
                "bic": "XXX12345678",
                "creditDrawn": 100,
                "creditLimit": 2045.78,
                "currency": "EUR",
                "iban": "DE001234567890123456AI",
                "id": "ff165778-d633-5cc2-8aa2-331dd6c32c67",
                "lastUpdated": "2023-07-13 14:09:06",
                "name": "Girokonto",
                "overdraftLimit": 3000,
                "owner": "Li Wang",
                "providerId": "00000000-0000-0000-0000-000000000000",
                "providerName": "Demo Provider",
                "status": "VOLLSTAENDIG",
                "type": "GIROKONTO"
              }
            ]
          },
          "budget": {
            "expenses": {
              "fixedSpending": {
                "statistics": {
                  "max": 1572.24,
                  "mean": 1381.62,
                  "median": 1376,
                  "min": 1214.33
                }
              },
              "totalSpending": {
                "statistics": {
                  "max": 2351.1,
                  "mean": 1835.04,
                  "median": 1744.18,
                  "min": 1568.56
                }
              },
              "variableSpending": {
                "statistics": {
                  "max": 1133.32,
                  "mean": 453.42,
                  "median": 363.29,
                  "min": 35.19
                }
              }
            },
            "income": {
              "fixedIncome": {
                "contracts": [
                  {
                    "details": {
                      "amountFirst": 204,
                      "amountLatest": 204,
                      "amountMaximum": 204,
                      "amountMean": 204,
                      "amountMedian": 204,
                      "amountMinimum": 204,
                      "amountNext": 204,
                      "amountTotal": 2448,
                      "amountTotalNonRegular": 0,
                      "amountTotalRegular": 2448,
                      "contractNumbers": [
                        "KG237002FK188590"
                      ],
                      "costDevelopment": {
                        "2022-08-09": 204,
                        "2022-09-09": 204,
                        "2022-10-09": 204,
                        "2022-11-09": 204,
                        "2022-12-09": 204,
                        "2023-01-09": 204,
                        "2023-02-09": 204,
                        "2023-03-09": 204,
                        "2023-04-09": 204,
                        "2023-05-09": 204,
                        "2023-06-09": 204,
                        "2023-07-09": 204
                      },
                      "costDevelopmentRegular": {
                        "2022-08-09": 204,
                        "2022-09-09": 204,
                        "2022-10-09": 204,
                        "2022-11-09": 204,
                        "2022-12-09": 204,
                        "2023-01-09": 204,
                        "2023-02-09": 204,
                        "2023-03-09": 204,
                        "2023-04-09": 204,
                        "2023-05-09": 204,
                        "2023-06-09": 204,
                        "2023-07-09": 204
                      },
                      "counterpartyBic": "MARKDEF1760",
                      "counterpartyIban": "DE077600000000760016",
                      "counterpartyName": "Bundesagentur fur Arbeit - Familienkasse",
                      "counterpartyNameUltimate": "",
                      "customerNumbers": [],
                      "dateFirst": "2022-08-09",
                      "dateLatest": "2023-07-09",
                      "dateNext": "2023-08-09",
                      "dateStart": "2022-08-09",
                      "daysAge": 338,
                      "growthRate": 0,
                      "standardDeviation": 0,
                      "status": "ACTIVE",
                      "transactionIds": [
                        "1a62aff0-000b-60d0-2640-74a316284f9d",
                        "1a6d95f0-0000-641c-bf53-2db3591ab06d",
                        "1a7821f0-0001-9b0a-2660-e38301b800ae",
                        "1a830bb0-0001-c336-b0ca-83d314fb0869",
                        "1a8d97b0-0002-303c-d353-b3530898c32b",
                        "1a987db0-0008-b365-0803-46933da9f3b6",
                        "1aa363b0-0001-62d6-d412-4ed3b7c9bee7",
                        "1aad3bb0-000d-e724-3973-9d834e69d713",
                        "1ab81df0-0006-3328-0519-bcf3fe690f40",
                        "1ac2a9f0-000a-e169-66db-3103739bef1b",
                        "1acd8ff0-000f-f6b9-7e6b-0fe3927aca69",
                        "1ad81bf0-000c-c8e0-a93b-09c35b3b31a5"
                      ],
                      "transactionIdsNonRegular": [],
                      "transactionIdsRegular": [
                        "1a62aff0-000b-60d0-2640-74a316284f9d",
                        "1a6d95f0-0000-641c-bf53-2db3591ab06d",
                        "1a7821f0-0001-9b0a-2660-e38301b800ae",
                        "1a830bb0-0001-c336-b0ca-83d314fb0869",
                        "1a8d97b0-0002-303c-d353-b3530898c32b",
                        "1a987db0-0008-b365-0803-46933da9f3b6",
                        "1aa363b0-0001-62d6-d412-4ed3b7c9bee7",
                        "1aad3bb0-000d-e724-3973-9d834e69d713",
                        "1ab81df0-0006-3328-0519-bcf3fe690f40",
                        "1ac2a9f0-000a-e169-66db-3103739bef1b",
                        "1acd8ff0-000f-f6b9-7e6b-0fe3927aca69",
                        "1ad81bf0-000c-c8e0-a93b-09c35b3b31a5"
                      ]
                    },
                    "entity": {
                      "displayName": "BENUTZER",
                      "entityClass": "USER",
                      "id": "0e3cb7d1-1ccb-4094-b382-21d3590dfe58",
                      "userId": "0e3cb7d1-1ccb-4094-b382-21d3590dfe58"
                    },
                    "id": "ca60688a-2e44-e407-bad5-342adb4e5513",
                    "tagTreeItemBusinessPartner": {
                      "addressCity": "N√ºrnberg",
                      "addressCountry": "Deutschland",
                      "addressStreet": "Regensburger Stra√üe 104",
                      "addressZip": "90478",
                      "categories": [],
                      "displayName": "Bundesagentur f√ºr Arbeit (BA)",
                      "systemId": 4392,
                      "systemName": "Bundesagentur f√ºr Arbeit",
                      "tagTree": {
                        "description": "Single level tag tree of business partners.",
                        "displayName": "Gesch√§ftspartner",
                        "isTenantGenerated": false,
                        "systemId": 3,
                        "systemName": "BUSINESS_PARTNERS",
                        "version": 1.91
                      },
                      "telephone": "0911/179-0",
                      "website": "https://www.arbeitsagentur.de/"
                    },
                    "tagTreeItemCategory": {
                      "description": "Income from gov. child benefits",
                      "displayName": "Staatliche F√∂rderung f√ºr Familie und Kinder",
                      "systemId": 52,
                      "systemName": "INCOME_STATEFAMILY",
                      "systemNameParent": "INCOME",
                      "tagTree": {
                        "description": "Two level categorization tree.",
                        "displayName": "Kategorien",
                        "isTenantGenerated": false,
                        "systemId": 1,
                        "systemName": "CATEGORIES",
                        "version": 3.71
                      }
                    },
                    "tagTreeItemInsuranceType": {
                      "displayName": "Nicht versicherungsrelevant - Einnahmen",
                      "systemId": 28,
                      "systemName": "INCOME_UNRELATED",
                      "systemNameParent": "INCOME",
                      "tagTree": {
                        "description": "Two level fine grained insurance categorization tag tree.",
                        "displayName": "Versicherungsarten",
                        "isTenantGenerated": false,
                        "systemId": 2,
                        "systemName": "INSURANCE_TYPES",
                        "version": 2.41
                      }
                    },
                    "tagTreeItemPeriod": {
                      "description": "Period of a single month",
                      "displayName": "Ein Monat",
                      "systemId": 3,
                      "systemName": "MONTH_ONE",
                      "systemNameParent": "MONTH",
                      "tagTree": {
                        "description": "Two level periods tag tree.",
                        "displayName": "Turnus",
                        "isTenantGenerated": false,
                        "systemId": 4,
                        "systemName": "PERIODS",
                        "version": 0.4
                      }
                    }
                  }
                ],
                "statistics": {
                  "max": 204,
                  "mean": 204,
                  "median": 204,
                  "min": 204
                }
              },
              "salary": {
                "contracts": [
                  {
                    "details": {
                      "amountFirst": 4856.84,
                      "amountLatest": 4856.84,
                      "amountMaximum": 4856.84,
                      "amountMean": 4856.84,
                      "amountMedian": 4856.84,
                      "amountMinimum": 4856.84,
                      "amountNext": 4856.84,
                      "amountTotal": 33997.88,
                      "amountTotalNonRegular": 0,
                      "amountTotalRegular": 33997.88,
                      "contractNumbers": [],
                      "costDevelopment": {
                        "2022-12-29": 4856.84,
                        "2023-01-29": 4856.84,
                        "2023-02-28": 4856.84,
                        "2023-03-29": 4856.84,
                        "2023-04-29": 4856.84,
                        "2023-05-29": 4856.84,
                        "2023-06-29": 4856.84
                      },
                      "costDevelopmentRegular": {
                        "2022-12-29": 4856.84,
                        "2023-01-29": 4856.84,
                        "2023-02-28": 4856.84,
                        "2023-03-29": 4856.84,
                        "2023-04-29": 4856.84,
                        "2023-05-29": 4856.84,
                        "2023-06-29": 4856.84
                      },
                      "counterpartyBic": "",
                      "counterpartyIban": "DE100456789",
                      "counterpartyName": "The Company",
                      "counterpartyNameUltimate": "",
                      "customName": "The Company",
                      "customerNumbers": [],
                      "dateFirst": "2022-12-29",
                      "dateLatest": "2023-06-29",
                      "dateNext": "2023-07-31",
                      "dateStart": "2022-12-29",
                      "daysAge": 196,
                      "growthRate": 0,
                      "standardDeviation": 0,
                      "status": "ACTIVE",
                      "transactionIds": [
                        "1a94b470-0005-4d21-b5e4-fc537ee85372",
                        "1a9f9a70-000e-2df4-e7f3-3223b9baac33",
                        "1aaa2670-0006-9b4a-6b2f-05d33a0bbdd7",
                        "1ab454b0-0002-2408-739c-9213d5681020",
                        "1abf3ab0-000b-e237-2a5e-68b3c43ab447",
                        "1ac9c6b0-000d-fe59-053b-d563ba3a8ca7",
                        "1ad4acb0-000b-fa2a-b232-4603c00a9efd"
                      ],
                      "transactionIdsNonRegular": [],
                      "transactionIdsRegular": [
                        "1a94b470-0005-4d21-b5e4-fc537ee85372",
                        "1a9f9a70-000e-2df4-e7f3-3223b9baac33",
                        "1aaa2670-0006-9b4a-6b2f-05d33a0bbdd7",
                        "1ab454b0-0002-2408-739c-9213d5681020",
                        "1abf3ab0-000b-e237-2a5e-68b3c43ab447",
                        "1ac9c6b0-000d-fe59-053b-d563ba3a8ca7",
                        "1ad4acb0-000b-fa2a-b232-4603c00a9efd"
                      ]
                    },
                    "entity": {
                      "displayName": "BENUTZER",
                      "entityClass": "USER",
                      "id": "0e3cb7d1-1ccb-4094-b382-21d3590dfe58",
                      "userId": "0e3cb7d1-1ccb-4094-b382-21d3590dfe58"
                    },
                    "id": "b54f1bd6-6367-f49c-9a0f-fd10c33528da",
                    "tagTreeItemBusinessPartner": {
                      "categories": [
                        "OTHER_OTHER"
                      ],
                      "description": "Unknown business partner, for business partners with custom name",
                      "displayName": "Unbekannter Gesch√§ftspartner",
                      "systemId": 4384,
                      "systemName": "UNKNOWN",
                      "tagTree": {
                        "description": "Single level tag tree of business partners.",
                        "displayName": "Gesch√§ftspartner",
                        "isTenantGenerated": false,
                        "systemId": 3,
                        "systemName": "BUSINESS_PARTNERS",
                        "version": 1.91
                      }
                    },
                    "tagTreeItemCategory": {
                      "description": "Income from salary payments",
                      "displayName": "Gehalt",
                      "systemId": 49,
                      "systemName": "INCOME_SALARY",
                      "systemNameParent": "INCOME",
                      "tagTree": {
                        "description": "Two level categorization tree.",
                        "displayName": "Kategorien",
                        "isTenantGenerated": false,
                        "systemId": 1,
                        "systemName": "CATEGORIES",
                        "version": 3.71
                      }
                    },
                    "tagTreeItemInsuranceType": {
                      "displayName": "Nicht versicherungsrelevant - Einnahmen",
                      "systemId": 28,
                      "systemName": "INCOME_UNRELATED",
                      "systemNameParent": "INCOME",
                      "tagTree": {
                        "description": "Two level fine grained insurance categorization tag tree.",
                        "displayName": "Versicherungsarten",
                        "isTenantGenerated": false,
                        "systemId": 2,
                        "systemName": "INSURANCE_TYPES",
                        "version": 2.41
                      }
                    },
                    "tagTreeItemPeriod": {
                      "description": "Period of a single month",
                      "displayName": "Ein Monat",
                      "systemId": 3,
                      "systemName": "MONTH_ONE",
                      "systemNameParent": "MONTH",
                      "tagTree": {
                        "description": "Two level periods tag tree.",
                        "displayName": "Turnus",
                        "isTenantGenerated": false,
                        "systemId": 4,
                        "systemName": "PERIODS",
                        "version": 0.4
                      }
                    }
                  }
                ],
                "lengthOfEmployment": 196,
                "statistics": {
                  "max": 4856.84,
                  "mean": 4856.84,
                  "median": 4856.84,
                  "min": 4856.84
                }
              },
              "totalIncome": {
                "statistics": {
                  "max": 5060.84,
                  "mean": 5060.84,
                  "median": 5060.84,
                  "min": 5060.84
                }
              },
              "variableIncome": {
                "statistics": {
                  "max": 0,
                  "mean": 0,
                  "median": 0,
                  "min": 0
                }
              },
              "windfalls": []
            },
            "net": {
              "positiveCashflowRatio": 1,
              "statistics": {
                "max": 3492.28,
                "mean": 3225.8,
                "median": 3316.66,
                "min": 2709.74
              }
            },
            "savings": {
              "statistics": {
                "max": 0,
                "mean": 0,
                "median": 0,
                "min": 0
              }
            }
          },
          "credit": {
            "financialCredit": {
              "activeContracts": [],
              "passiveContracts": []
            },
            "leasing": {
              "activeContracts": [],
              "passiveContracts": []
            },
            "mortgage": {
              "activeContracts": [],
              "passiveContracts": []
            }
          },
          "flags": {
            "creditCards": 0,
            "debtCollection": [],
            "reminderCharges": [],
            "returnedDebitNotes": [
              {
                "amount": 209.99,
                "id": "1a774880-0008-9131-7b07-fe333e8818a2",
                "postingDatetime": "2022-10-07 00:00:00",
                "product": "ff165778-d633-5cc2-8aa2-331dd6c32c67",
                "provider": "00000000-0000-0000-0000-000000000000",
                "tags": {
                  "businessPartner": {
                    "entity": {
                      "displayName": "Kontoumsatz",
                      "entityClass": "TRANSACTION",
                      "id": "1a774880-0008-9131-7b07-fe333e8818a2",
                      "userId": "0e3cb7d1-1ccb-4094-b382-21d3590dfe58"
                    },
                    "id": "24658f8f-bb91-b1af-f7e0-af8fff4a3fe9",
                    "tagTreeItem": {
                      "description": "Unknown business partner, for business partners with custom name",
                      "displayName": "Unbekannter Gesch√§ftspartner",
                      "systemId": 4384,
                      "systemName": "UNKNOWN",
                      "tagTree": {
                        "description": "Single level tag tree of business partners.",
                        "displayName": "Gesch√§ftspartner",
                        "isTenantGenerated": false,
                        "systemId": 3,
                        "systemName": "BUSINESS_PARTNERS",
                        "version": 1.91
                      }
                    }
                  },
                  "category": {
                    "entity": {
                      "displayName": "Kontoumsatz",
                      "entityClass": "TRANSACTION",
                      "id": "1a774880-0008-9131-7b07-fe333e8818a2",
                      "userId": "0e3cb7d1-1ccb-4094-b382-21d3590dfe58"
                    },
                    "id": "9799df14-5082-6cef-588f-4573e7837266",
                    "tagTreeItem": {
                      "description": "Transactions involving failed debit payments that are returned.",
                      "displayName": "R√ºcklastschriften",
                      "systemId": 48,
                      "systemName": "INCOME_RETURNDEBIT",
                      "systemNameParent": "INCOME",
                      "tagTree": {
                        "description": "Two level categorization tree.",
                        "displayName": "Kategorien",
                        "isTenantGenerated": false,
                        "systemId": 1,
                        "systemName": "CATEGORIES",
                        "version": 3.71
                      }
                    }
                  },
                  "insurance": {
                    "entity": {
                      "displayName": "Kontoumsatz",
                      "entityClass": "TRANSACTION",
                      "id": "1a774880-0008-9131-7b07-fe333e8818a2",
                      "userId": "0e3cb7d1-1ccb-4094-b382-21d3590dfe58"
                    },
                    "id": "e7206a87-c43b-b9d7-c186-7bfd44019cc4",
                    "tagTreeItem": {
                      "displayName": "Nicht versicherungsrelevant - Einnahmen",
                      "systemId": 28,
                      "systemName": "INCOME_UNRELATED",
                      "systemNameParent": "INCOME",
                      "tagTree": {
                        "description": "Two level fine grained insurance categorization tag tree.",
                        "displayName": "Versicherungsarten",
                        "isTenantGenerated": false,
                        "systemId": 2,
                        "systemName": "INSURANCE_TYPES",
                        "version": 2.41
                      }
                    }
                  }
                }
              }
            ],
            "riskyPayment": {
              "statistics": {
                "max": 0,
                "mean": 0,
                "median": 0,
                "min": 0
              }
            }
          },
          "lifeStages": {
            "housing": {
              "entity": {
                "displayName": "BENUTZER",
                "entityClass": "USER",
                "id": "0e3cb7d1-1ccb-4094-b382-21d3590dfe58",
                "userId": "0e3cb7d1-1ccb-4094-b382-21d3590dfe58"
              },
              "id": "a6a99ea6-7ab8-18c1-8589-2e8a3bd0068f",
              "tagTreeItem": {
                "displayName": "Mieter",
                "domain": {
                  "description": "The user's ownership status for their current home",
                  "displayName": "Wohnsituation",
                  "systemId": 4,
                  "systemName": "HOUSING",
                  "tagTree": {
                    "description": "Tag tree for life domains",
                    "displayName": "Lebensdom√§nen",
                    "isTenantGenerated": false,
                    "systemId": 10,
                    "systemName": "LIFE_DOMAINS",
                    "version": 0.3
                  }
                },
                "systemId": 15,
                "systemName": "TENANCY",
                "tagTree": {
                  "description": "Single level life stage tag tree.",
                  "displayName": "Lebensphasen",
                  "isTenantGenerated": false,
                  "systemId": 12,
                  "systemName": "LIFE_STAGES",
                  "version": 0.6
                }
              }
            },
            "labourMarket": {
              "entity": {
                "displayName": "BENUTZER",
                "entityClass": "USER",
                "id": "0e3cb7d1-1ccb-4094-b382-21d3590dfe58",
                "userId": "0e3cb7d1-1ccb-4094-b382-21d3590dfe58"
              },
              "id": "9cbd4983-42a0-0242-ffba-5b24ac035b30",
              "tagTreeItem": {
                "displayName": "Angestellt",
                "domain": {
                  "description": "The user's state with respect to employment and education",
                  "displayName": "Arbeitsmarkt",
                  "systemId": 1,
                  "systemName": "LABOUR_MARKET",
                  "tagTree": {
                    "description": "Tag tree for life domains",
                    "displayName": "Lebensdom√§nen",
                    "isTenantGenerated": false,
                    "systemId": 10,
                    "systemName": "LIFE_DOMAINS",
                    "version": 0.3
                  }
                },
                "systemId": 4,
                "systemName": "EMPLOYMENT",
                "tagTree": {
                  "description": "Single level life stage tag tree.",
                  "displayName": "Lebensphasen",
                  "isTenantGenerated": false,
                  "systemId": 12,
                  "systemName": "LIFE_STAGES",
                  "version": 0.6
                }
              }
            },
            "parenthood": {
              "entity": {
                "displayName": "BENUTZER",
                "entityClass": "USER",
                "id": "0e3cb7d1-1ccb-4094-b382-21d3590dfe58",
                "userId": "0e3cb7d1-1ccb-4094-b382-21d3590dfe58"
              },
              "id": "3681c765-42f4-e77f-4794-39c300fe2a44",
              "tagTreeItem": {
                "displayName": "Elternteil",
                "domain": {
                  "description": "The user's parental status",
                  "displayName": "Elternschaft",
                  "systemId": 2,
                  "systemName": "PARENTHOOD",
                  "tagTree": {
                    "description": "Tag tree for life domains",
                    "displayName": "Lebensdom√§nen",
                    "isTenantGenerated": false,
                    "systemId": 10,
                    "systemName": "LIFE_DOMAINS",
                    "version": 0.3
                  }
                },
                "systemId": 7,
                "systemName": "PARENTHOOD",
                "tagTree": {
                  "description": "Single level life stage tag tree.",
                  "displayName": "Lebensphasen",
                  "isTenantGenerated": false,
                  "systemId": 12,
                  "systemName": "LIFE_STAGES",
                  "version": 0.6
                }
              }
            },
            "relationship": {}
          }
        },
        "properties": {
          "assets": {
            "allOf": [
              {
                "$ref": "#/components/schemas/credit_attributes_assets_schema"
              }
            ],
            "description": "List of all bank products and depots their credit-lines and ages"
          },
          "budget": {
            "allOf": [
              {
                "$ref": "#/components/schemas/credit_attributes_budget_schema"
              }
            ],
            "description": "A digital budget summarizing financial flows across all the connected accounts"
          },
          "credit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/credit_attributes_credit_schema"
              }
            ],
            "description": "Active and paid-off credit contracts"
          },
          "flags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/credit_attributes_flags_schema"
              }
            ],
            "description": "Payments that reflect lower probabilities for credit repayment"
          },
          "lifeStages": {
            "allOf": [
              {
                "$ref": "#/components/schemas/credit_attributes_life_stages_schema"
              }
            ],
            "description": "Life stages in different life domains that may relate to credit worthiness. Only positive detections are reported. Empty result in a domain may indicate lack of relevant transactions."
          }
        },
        "required": [
          "assets",
          "budget",
          "credit",
          "flags",
          "lifeStages"
        ],
        "type": "object"
      },
      "credit_attributes_statistics_schema": {
        "properties": {
          "max": {
            "description": "Largest sum of payments in a month",
            "type": "number"
          },
          "mean": {
            "description": "Mean sum of payments per month",
            "type": "number"
          },
          "median": {
            "description": "Median sum of payments per month",
            "type": "number"
          },
          "min": {
            "description": "Smallest sum of payments in a month",
            "type": "number"
          }
        },
        "required": [
          "max",
          "mean",
          "median",
          "min"
        ],
        "type": "object"
      },
      "credit_check_tag_instance_details_schema": {
        "properties": {
          "averageMonthlySalary": {
            "description": "The user's monthly active salary, averaged over the last three transactions.",
            "example": 1234.56,
            "type": "number"
          },
          "existingLoans": {
            "description": "Indicator whether the user has any open loans",
            "example": true,
            "type": "boolean"
          },
          "fixedIncome": {
            "description": "Indicator whether the user has a fixed income. This includes salary, pension and other regular incomes such as rental income. To avoid small amounts to trigger the flag, a threshold of 300 ‚Ç¨ is set.",
            "example": true,
            "type": "boolean"
          },
          "lengthOfEmployment": {
            "description": "The time in days the user has been employed with the current contract",
            "example": 65,
            "type": "integer"
          },
          "mortgagePayments": {
            "description": "Indicator whether the user has made at least one payment related to a mortgage",
            "example": true,
            "type": "boolean"
          },
          "ratioDeficitMonths": {
            "description": "Ratio of months the user had deficits",
            "example": 0.5,
            "type": "number"
          },
          "reminderCharges": {
            "description": "Indicator whether the user has paid charges for reminders at least once",
            "example": true,
            "type": "boolean"
          },
          "returnDebits": {
            "description": "Indicator whether the user has received at least one payment referring to a return debit",
            "example": true,
            "type": "boolean"
          },
          "riskyActivities": {
            "description": "Indicator whether the user has been involved in risky activities at least once",
            "example": true,
            "type": "boolean"
          }
        },
        "required": [
          "averageMonthlySalary",
          "existingLoans",
          "fixedIncome",
          "lengthOfEmployment",
          "mortgagePayments",
          "ratioDeficitMonths",
          "reminderCharges",
          "returnDebits",
          "riskyActivities"
        ],
        "type": "object"
      },
      "credit_check_tag_instance_schema": {
        "example": {
          "details": {
            "averageMonthlySalary": 1234.56,
            "existingLoans": true,
            "fixedIncome": true,
            "lengthOfEmployment": 65,
            "mortgagePayments": true,
            "ratioDeficitMonths": 0.5,
            "reminderCharges": true,
            "returnDebits": true,
            "riskyActivities": true
          },
          "entity": {
            "displayName": "Kontoumsatz",
            "entityClass": "TRANSACTION",
            "id": "156ca508-c0e2-52c5-3202-8de20e7ed12b",
            "userId": "156ca508-c0e2-52c5-3202-8de20e7ed12b"
          },
          "id": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
          "relations": [
            {
              "href": "https://banksapi.io/tags/tag-trees/",
              "rel": "tag_trees"
            }
          ],
          "tagTreeItem": {
            "description": "Expenses from daily grocery purchases",
            "displayName": "Groceries",
            "relations": [
              {
                "href": "https://banksapi.io/tags/tag-trees/",
                "rel": "tag_trees"
              }
            ],
            "systemId": 17,
            "systemName": "LIVING_GROCERIES",
            "systemNameParent": "LIVING",
            "tagTree": {
              "description": "Detailed inusrance categories.",
              "displayName": "Kategorien",
              "isTenantGenerated": true,
              "relations": [
                {
                  "href": "https://banksapi.io/tags/tag-trees/",
                  "rel": "tag_trees"
                }
              ],
              "systemId": 1,
              "systemName": "CATEGORIES",
              "version": 1.5
            }
          }
        },
        "properties": {
          "details": {
            "$ref": "#/components/schemas/credit_check_tag_instance_details_schema"
          },
          "entity": {
            "$ref": "#/components/schemas/entity_schema"
          },
          "id": {
            "description": "Unique Universal Identifier (UUID)",
            "example": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
            "type": "string"
          },
          "relations": {
            "description": "List of relations",
            "items": {
              "$ref": "#/components/schemas/relation_schema"
            },
            "type": "array"
          },
          "tagTreeItem": {
            "$ref": "#/components/schemas/tag_tree_item_schema"
          }
        },
        "required": [
          "entity",
          "id",
          "tagTreeItem"
        ],
        "type": "object"
      },
      "disposable_money_tag_instance_details_schema": {
        "properties": {
          "amountCashflow": {
            "description": "Sum of income and expenses (cashflow) since the latest salary payment",
            "example": -1322.78,
            "type": "number"
          },
          "amountCurrentlyLeft": {
            "description": "Amount currently left until the next salary payment considering the cashflow since the latest salary payment",
            "example": 1517.75,
            "type": "number"
          },
          "amountDisposableMoney": {
            "description": "Amount estimated to be left at the next salary payment considering the cashflow since the latest salary payment the expected fixed cashflow until the next salary payment and the expected flexible cashflow until the next salary payment",
            "example": 672.19,
            "type": "number"
          },
          "amountExpectedFixedCashflow": {
            "description": "Sum of expected income and expenses (cashflow) from contractsdue until the next salary payment",
            "example": -422.78,
            "type": "number"
          },
          "amountExpectedFlexCashflow": {
            "description": "Sum of flexible income and expenses (cashflow) expected until the next salary payment derived from previous spending habits excluding contracts (expected fixed cashflow)",
            "example": -422.78,
            "type": "number"
          },
          "amountExpectedLeft": {
            "description": "Amount expectedly left until the next salary payment considering the cashflow since the latest salary payment and the expected cashflow until the next salary payment",
            "example": 1094.97,
            "type": "number"
          },
          "amountExpectedLeftDaily": {
            "description": "Daily amount expectedly left until the next salary payment considering the cashflow since the latest salary payment and the expected cashflow until the next salary payment",
            "example": 64.41,
            "type": "number"
          },
          "amountSalaryLatest": {
            "description": "Amount of the latest salaray payment",
            "example": 2840.53,
            "minimum": 0,
            "type": "number"
          },
          "amountSalaryNext": {
            "description": "Amount of the next salaray payment",
            "example": 2840.53,
            "minimum": 0,
            "type": "number"
          },
          "dateSalaryLatest": {
            "description": "Date of the lastest salary payment",
            "example": "2017-04-03",
            "format": "date",
            "type": "string"
          },
          "dateSalaryNext": {
            "description": "Predicted date of the next salary payment",
            "example": "2017-04-03",
            "format": "date",
            "type": "string"
          },
          "daysUntilSalary": {
            "description": "Days until the next salaray payment is expected. A negative value means, the predicted salary payment is overdue or the employment ended and no new employment contract was detected or the detection did not work.",
            "example": 17,
            "maximum": 99,
            "minimum": -99,
            "type": "integer"
          }
        },
        "required": [
          "amountCashflow",
          "amountCurrentlyLeft",
          "amountDisposableMoney",
          "amountExpectedFixedCashflow",
          "amountExpectedFlexCashflow",
          "amountExpectedLeft",
          "amountExpectedLeftDaily",
          "amountSalaryLatest",
          "amountSalaryNext",
          "dateSalaryLatest",
          "dateSalaryNext",
          "daysUntilSalary"
        ],
        "type": "object"
      },
      "disposable_money_tag_instance_schema": {
        "example": {
          "details": {
            "amountCashflow": -739.29,
            "amountCurrrentlyLeft": 3117.55,
            "amountDisposableMoney": 3117.55,
            "amountExpectedFixedCashflow": 0,
            "amountExpectedFlexCashflow": 0,
            "amountExpectedLeft": 3117.55,
            "amountExpectedLeftDaily": -283.41,
            "amountSalaryLatest": 3856.84,
            "amountSalaryNext": 3856.84,
            "dateSalaryLatest": "2021-02-29",
            "dateSalaryNext": "2021-03-29",
            "daysUntilSalary": -11
          },
          "entity": {
            "displayName": "USER",
            "entityClass": "USER",
            "id": "0b64d605-0483-4bae-8b12-fa26e313060b"
          },
          "id": "e846b38e-ec53-48de-b3e5-a81f5397c38a",
          "relations": [
            {
              "href": "https://banksapi.io/tags/v1/tag-trees/",
              "rel": "tag_trees"
            },
            {
              "href": "https://banksapi.io/tags/v1/tag-trees/7/",
              "rel": "tag_tree"
            },
            {
              "href": "https://banksapi.io/tags/v1/tag-trees/7/tag-tree-items/",
              "rel": "tag_tree_items"
            },
            {
              "href": "https://banksapi.io/tags/v1/tag-trees/7/tag-tree-items/908/",
              "rel": "tag_tree_item"
            }
          ],
          "tagTreeItem": {
            "description": "Information about the disposable money",
            "displayName": "Informationen √ºber frei verf√ºgbares Geld",
            "systemId": 908,
            "systemName": "DISPOSABLEMONEY_INFORMATION",
            "systemNameParent": "DISPOSABLEMONEY",
            "tagTree": {
              "description": "Disposable money tag tree with single parent and child tag.",
              "displayName": "Einkommens√ºberschuss",
              "isClientGenerated": false,
              "systemId": 7,
              "systemName": "DISPOSABLE_MONEY",
              "version": 0.1
            }
          }
        },
        "properties": {
          "details": {
            "$ref": "#/components/schemas/disposable_money_tag_instance_details_schema"
          },
          "entity": {
            "$ref": "#/components/schemas/entity_schema"
          },
          "id": {
            "description": "Unique Universal Identifier (UUID)",
            "example": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
            "type": "string"
          },
          "relations": {
            "description": "List of relations",
            "items": {
              "$ref": "#/components/schemas/relation_schema"
            },
            "type": "array"
          },
          "tagTreeItem": {
            "$ref": "#/components/schemas/tag_tree_item_schema"
          }
        },
        "required": [
          "entity",
          "id",
          "tagTreeItem"
        ],
        "type": "object"
      },
      "entity_schema": {
        "properties": {
          "displayName": {
            "description": "Display name of the entity",
            "example": "Kontoumsatz",
            "type": "string"
          },
          "entityClass": {
            "description": "Class of the entity, such as TRANSACTION or USER",
            "example": "TRANSACTION",
            "type": "string"
          },
          "id": {
            "description": "Transaction UUID or USER UUID.",
            "example": "156ca508-c0e2-52c5-3202-8de20e7ed12b",
            "type": "string"
          },
          "userId": {
            "description": "UUID of the USER. Same as id field for USER entities.",
            "example": "156ca508-c0e2-52c5-3202-8de20e7ed12b",
            "type": "string"
          }
        },
        "required": [
          "displayName",
          "entityClass",
          "id"
        ],
        "type": "object"
      },
      "extensive_tag_tree_item_schema": {
        "example": {
          "description": "Transactions in the field of banking and finance",
          "displayName": "Bank und Finanzen",
          "relations": [
            {
              "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/1/",
              "rel": "self"
            },
            {
              "href": "https://banksapi.io/tags/v1/tag-trees/",
              "rel": "tag_trees"
            },
            {
              "href": "https://banksapi.io/tags/v1/tag-trees/1/",
              "rel": "tag_tree"
            },
            {
              "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/",
              "rel": "tag_tree_items"
            },
            {
              "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/1/",
              "rel": "tag_tree_item"
            },
            {
              "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/None/",
              "rel": "tag_tree_item_parent"
            }
          ],
          "systemId": 1,
          "systemName": "BANKFINANCE",
          "tagTree": {
            "description": "Two level categorization tree.",
            "displayName": "Kategorien",
            "isClientGenerated": false,
            "systemId": 1,
            "systemName": "CATEGORIES",
            "version": 3.7
          }
        },
        "properties": {
          "addressCity": {
            "description": "Address city of the business partner",
            "example": "M√ºnchen",
            "type": "string"
          },
          "addressCountry": {
            "description": "Address country of the business partner",
            "example": "Deutschland",
            "type": "string"
          },
          "addressStreet": {
            "description": "Address street incl. number of the business partner",
            "example": "Lyonel-Feininger-Stra√üe 28",
            "type": "string"
          },
          "addressZip": {
            "description": "Address zip/postal code of the business partner",
            "example": " 80807",
            "type": "string"
          },
          "categories": {
            "description": "Categories the business partner belongs to.",
            "example": [
              "BANKFINANCE",
              "BANKFINANCE_INVESTMENT",
              "BANKFINANCE_OTHER",
              "SERVICES",
              "SERVICES_PROFESSIONAL",
              "SERVICES_ONLINE"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "creditorId": {
            "description": "creditor id of the business partner",
            "example": "DEZZZ00000012345",
            "type": "string"
          },
          "description": {
            "description": "Gives a description of the tagTreeItem",
            "example": "Expenses from daily grocery purchases",
            "type": "string"
          },
          "displayName": {
            "description": "User-friendly name shown to the end-users",
            "example": "BANKSapi",
            "type": "string"
          },
          "group": {
            "description": "Group the business partner belongs to.",
            "example": "Finconomy AG",
            "type": "string"
          },
          "relations": {
            "description": "List of relations",
            "items": {
              "$ref": "#/components/schemas/relation_schema"
            },
            "type": "array"
          },
          "systemId": {
            "description": "Unique internal id of the tag tree item",
            "example": 262,
            "type": "integer"
          },
          "systemName": {
            "description": "Unique name of the tag tree item",
            "example": "BANKSapi Technology GmbH",
            "type": "string"
          },
          "systemNameParent": {
            "description": "Unique name of the parent of the tagTreeItem",
            "example": "LIVING",
            "type": "string"
          },
          "tagTree": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tag_tree_schema"
              }
            ],
            "description": "tagTree that the tagTreeItem belongs to"
          },
          "telephone": {
            "description": "Telephone of the business partner",
            "example": "+49 (0)89 121 408 82",
            "type": "string"
          },
          "website": {
            "description": "Website of the business partner",
            "example": "www.banksapi.de",
            "type": "string"
          }
        },
        "required": [
          "displayName",
          "systemId",
          "systemName",
          "tagTree"
        ],
        "type": "object"
      },
      "investment_schema": {
        "properties": {
          "amount": {
            "description": "Amount of the securities",
            "example": 7,
            "type": "number"
          },
          "currency": {
            "description": "Trading currency (Alphabetic Code ISO 4217)",
            "example": "EUR",
            "type": "string"
          },
          "exchangeRate": {
            "description": "Exchange rate from EUR to the trading currency",
            "example": 1,
            "type": "number"
          },
          "isin": {
            "description": "International Securities Identification Number (ISIN) of the financial instrument",
            "example": "DE000BAY0017",
            "type": "string"
          },
          "name": {
            "description": "Name of the deposit position, usually the name of the financial instrument",
            "example": "Bayer AG",
            "type": "string"
          },
          "price": {
            "description": "Trading price in trading currency",
            "example": 53.47,
            "type": "number"
          },
          "rateDate": {
            "description": "Date of the trading rate in yyyy-mm-dd HH:MM:SS format",
            "example": "2021-03-08 09:34:46",
            "format": "date-time",
            "type": "string"
          },
          "totalValue": {
            "description": "Total value of the stock in EUR as at the end of the financial statements",
            "example": 364.66,
            "type": "number"
          },
          "unit": {
            "description": "Trading unit",
            "example": "STUECK",
            "type": "string"
          },
          "venue": {
            "description": "Trading venue of the price determination",
            "example": "MUN",
            "type": "string"
          },
          "wkn": {
            "description": "Wertpapierkennnummer (WKN) of the financial instrument. Corresponds to the German National Securities Identifying Number (NSIN), but without the three leading zeros.",
            "example": "BAY001",
            "type": "string"
          }
        },
        "type": "object"
      },
      "life_event_tag_instance_details_schema": {
        "properties": {
          "eventDate": {
            "description": "Date of the event",
            "example": "2019-05-03",
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "eventDate"
        ],
        "type": "object"
      },
      "life_event_tag_instance_schema": {
        "properties": {
          "details": {
            "$ref": "#/components/schemas/life_event_tag_instance_details_schema"
          },
          "entity": {
            "$ref": "#/components/schemas/entity_schema"
          },
          "id": {
            "description": "Unique Universal Identifier (UUID)",
            "example": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
            "type": "string"
          },
          "relations": {
            "description": "List of relations",
            "items": {
              "$ref": "#/components/schemas/relation_schema"
            },
            "type": "array"
          },
          "tagTreeItem": {
            "$ref": "#/components/schemas/life_tag_tree_item_schema"
          }
        },
        "required": [
          "details",
          "entity",
          "id",
          "tagTreeItem"
        ],
        "type": "object"
      },
      "life_stage_explanation_schema": {
        "properties": {
          "conflictingEvents": {
            "description": "The life events that caused the stage to be ambiguous. If the absence of events causes the inconsistency, the list will be empty.",
            "items": {
              "$ref": "#/components/schemas/life_event_tag_instance_schema"
            },
            "type": "array"
          },
          "conflictingStages": {
            "description": "The life stages that caused the stage to be ambiguous",
            "items": {
              "$ref": "#/components/schemas/tag_tree_item_schema"
            },
            "type": "array"
          },
          "contractDetails": {
            "description": "The contracts that caused the detection of a life stage",
            "items": {
              "$ref": "#/components/schemas/contract_details_schema"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "life_stage_tag_instance_details_schema": {
        "properties": {
          "explanation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/life_stage_explanation_schema"
              }
            ],
            "description": "An explanation for how the life stage was detected."
          }
        },
        "type": "object"
      },
      "life_stage_tag_instance_schema": {
        "properties": {
          "details": {
            "$ref": "#/components/schemas/life_stage_tag_instance_details_schema"
          },
          "entity": {
            "$ref": "#/components/schemas/entity_schema"
          },
          "id": {
            "description": "Unique Universal Identifier (UUID)",
            "example": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
            "type": "string"
          },
          "relations": {
            "description": "List of relations",
            "items": {
              "$ref": "#/components/schemas/relation_schema"
            },
            "type": "array"
          },
          "tagTreeItem": {
            "$ref": "#/components/schemas/life_tag_tree_item_schema"
          }
        },
        "required": [
          "entity",
          "id",
          "tagTreeItem"
        ],
        "type": "object"
      },
      "life_tag_tree_item_schema": {
        "properties": {
          "description": {
            "description": "Gives a description of the tagTreeItem",
            "example": "Expenses from daily grocery purchases",
            "type": "string"
          },
          "displayName": {
            "description": "User-friendly name shown to the end-users",
            "example": "Groceries",
            "type": "string"
          },
          "domain": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tag_tree_item_schema"
              }
            ],
            "description": "Life domain this tag belongs to"
          },
          "relations": {
            "description": "List of relations",
            "items": {
              "$ref": "#/components/schemas/relation_schema"
            },
            "type": "array"
          },
          "systemId": {
            "description": "Unique internal id of the tag tree item",
            "example": 17,
            "type": "integer"
          },
          "systemName": {
            "description": "Unique name of the tag tree item",
            "example": "LIVING_GROCERIES",
            "type": "string"
          },
          "tagTree": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tag_tree_schema"
              }
            ],
            "description": "tagTree that the tagTreeItem belongs to"
          }
        },
        "required": [
          "displayName",
          "domain",
          "systemId",
          "systemName",
          "tagTree"
        ],
        "type": "object"
      },
      "output_transaction_schema": {
        "properties": {
          "amount": {
            "description": "Amount in Euros",
            "example": -5.67,
            "type": "number"
          },
          "id": {
            "description": "ID of the transaction",
            "example": "57624057-11bf-4087-b16a-dc1a7525d3b5",
            "type": "string"
          },
          "postingDatetime": {
            "description": "Date the transaction was initiated in yyyy-mm-dd HH:MM:SS format",
            "example": "2020-01-15 09:00:00",
            "format": "date-time",
            "type": "string"
          },
          "product": {
            "description": "ID of the banking product to which the transaction belongs",
            "example": "30cc4587-7e5f-450f-bb51-dc3829f67db4",
            "type": "string"
          },
          "provider": {
            "description": "ID of the bank/service provider to which the transaction belongs",
            "example": "23d67ff8-ff6a-44ff-93da-f2af835394e4",
            "type": "string"
          },
          "tags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/transaction_tags_schema"
              }
            ],
            "description": "Tags detected for this transaction"
          }
        },
        "required": [
          "amount",
          "postingDatetime",
          "product",
          "provider"
        ],
        "type": "object"
      },
      "relation_schema": {
        "properties": {
          "href": {
            "description": "Link of the relation",
            "example": "https://banksapi.io/tags/tag-trees/",
            "type": "string"
          },
          "rel": {
            "description": "Name of the relation",
            "example": "tag_trees",
            "type": "string"
          }
        },
        "required": [
          "href",
          "rel"
        ],
        "type": "object"
      },
      "sales_triggers_tag_instance_details_schema": {
        "properties": {
          "eventDate": {
            "description": "Date of the event",
            "example": "2019-05-03",
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "eventDate"
        ],
        "type": "object"
      },
      "sales_triggers_tag_instance_schema": {
        "properties": {
          "details": {
            "$ref": "#/components/schemas/sales_triggers_tag_instance_details_schema"
          },
          "entity": {
            "$ref": "#/components/schemas/entity_schema"
          },
          "id": {
            "description": "Unique Universal Identifier (UUID)",
            "example": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
            "type": "string"
          },
          "relations": {
            "description": "List of relations",
            "items": {
              "$ref": "#/components/schemas/relation_schema"
            },
            "type": "array"
          },
          "tagTreeItem": {
            "$ref": "#/components/schemas/tag_tree_item_schema"
          }
        },
        "required": [
          "entity",
          "id",
          "tagTreeItem"
        ],
        "type": "object"
      },
      "tag_instance_schema": {
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/entity_schema"
          },
          "id": {
            "description": "Unique Universal Identifier (UUID)",
            "example": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
            "type": "string"
          },
          "relations": {
            "description": "List of relations",
            "items": {
              "$ref": "#/components/schemas/relation_schema"
            },
            "type": "array"
          },
          "tagTreeItem": {
            "$ref": "#/components/schemas/tag_tree_item_schema"
          }
        },
        "required": [
          "entity",
          "id",
          "tagTreeItem"
        ],
        "type": "object"
      },
      "tag_tree_input_schema": {
        "properties": {
          "systemId": {
            "example": 1,
            "type": "integer"
          },
          "systemName": {
            "example": "CATEGORIES",
            "type": "string"
          }
        },
        "required": [
          "systemName"
        ],
        "type": "object"
      },
      "tag_tree_item_input_schema": {
        "properties": {
          "systemId": {
            "example": 17,
            "type": "integer"
          },
          "systemName": {
            "example": "LIVING_GROCERIES",
            "type": "string"
          },
          "tagTree": {
            "$ref": "#/components/schemas/tag_tree_input_schema"
          }
        },
        "required": [
          "systemName",
          "tagTree"
        ],
        "type": "object"
      },
      "tag_tree_item_schema": {
        "properties": {
          "description": {
            "description": "Gives a description of the tagTreeItem",
            "example": "Expenses from daily grocery purchases",
            "type": "string"
          },
          "displayName": {
            "description": "User-friendly name shown to the end-users",
            "example": "Groceries",
            "type": "string"
          },
          "relations": {
            "description": "List of relations",
            "items": {
              "$ref": "#/components/schemas/relation_schema"
            },
            "type": "array"
          },
          "systemId": {
            "description": "Unique internal id of the tag tree item",
            "example": 17,
            "type": "integer"
          },
          "systemName": {
            "description": "Unique name of the tag tree item",
            "example": "LIVING_GROCERIES",
            "type": "string"
          },
          "systemNameParent": {
            "description": "Unique name of the parent of the tagTreeItem",
            "example": "LIVING",
            "type": "string"
          },
          "tagTree": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tag_tree_schema"
              }
            ],
            "description": "tagTree that the tagTreeItem belongs to"
          }
        },
        "required": [
          "displayName",
          "systemId",
          "systemName",
          "tagTree"
        ],
        "type": "object"
      },
      "tag_tree_schema": {
        "example": {
          "description": "Two level categorization tree.",
          "displayName": "Kategorien",
          "isClientGenerated": false,
          "relations": [
            {
              "href": "https://banksapi.io/tags/v1/tag-trees/1/",
              "rel": "self"
            },
            {
              "href": "https://banksapi.io/tags/v1/tag-trees/",
              "rel": "tag_trees"
            },
            {
              "href": "https://banksapi.io/tags/v1/tag-trees/1/tag-tree-items/",
              "rel": "tag_tree_items"
            }
          ],
          "systemId": 1,
          "systemName": "CATEGORIES",
          "version": 3.7
        },
        "properties": {
          "description": {
            "description": "Gives a description of the tag tree",
            "example": "Detailed inusrance categories.",
            "type": "string"
          },
          "displayName": {
            "description": "User-friendly name shown to the end-users",
            "example": "Kategorien",
            "type": "string"
          },
          "isTenantGenerated": {
            "description": "Boolean flag, set TRUE if the tag was manually set",
            "example": true,
            "type": "boolean"
          },
          "relations": {
            "description": "List of relations",
            "items": {
              "$ref": "#/components/schemas/relation_schema"
            },
            "type": "array"
          },
          "systemId": {
            "description": "Unique internal id of the tag tree",
            "example": 1,
            "type": "integer"
          },
          "systemName": {
            "description": "Unique name of the tag tree",
            "example": "CATEGORIES",
            "type": "string"
          },
          "version": {
            "description": "Version of the tag tree",
            "example": 1.5,
            "minimum": 0,
            "type": "number"
          }
        },
        "required": [
          "displayName",
          "isTenantGenerated",
          "systemId",
          "systemName",
          "version"
        ],
        "type": "object"
      },
      "transaction_schema": {
        "properties": {
          "amount": {
            "description": "Amount in Euros",
            "example": -5.67,
            "type": "number"
          },
          "bankUniqueId": {
            "description": "Id used by the bank",
            "example": "999001",
            "type": "string"
          },
          "counterpartyBic": {
            "description": "BIC of the counterparty",
            "example": "PBNKDEFF",
            "type": "string"
          },
          "counterpartyIban": {
            "description": "IBAN of the counterparty",
            "example": "DE75512108001245126199",
            "type": "string"
          },
          "counterpartyName": {
            "description": "Name of the counterparty",
            "example": "ALLIANZ LV",
            "type": "string"
          },
          "counterpartyNameUltimate": {
            "description": "Name of the ultimate counterparty",
            "example": "REWE",
            "type": "string"
          },
          "gvCode": {
            "description": "SEPA GV Code (Gesch√§ftsvorfallcode)",
            "example": "082",
            "type": "string"
          },
          "hash": {
            "description": "Hash value for historical ordering",
            "example": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
            "type": "string"
          },
          "id": {
            "description": "ID of the transaction",
            "example": "57624057-11bf-4087-b16a-dc1a7525d3b5",
            "type": "string"
          },
          "noteToPayee": {
            "description": "Text entered during posting",
            "example": "CRED DE07ZZZ00000063475 Beitrag Lebensvers 2020 01 SEPA BASISLASTSCHRIFT wiederholend",
            "type": "string"
          },
          "postingDatetime": {
            "description": "Date the transaction was initiated in yyyy-mm-dd HH:MM:SS format",
            "example": "2020-01-15 09:00:00",
            "format": "date-time",
            "type": "string"
          },
          "postingText": {
            "description": "Posting text of the transaction",
            "example": "Lastschrift",
            "type": "string"
          },
          "product": {
            "description": "ID of the banking product to which the transaction belongs",
            "example": "30cc4587-7e5f-450f-bb51-dc3829f67db4",
            "type": "string"
          },
          "provider": {
            "description": "ID of the bank/service provider to which the transaction belongs",
            "example": "23d67ff8-ff6a-44ff-93da-f2af835394e4",
            "type": "string"
          },
          "tenant": {
            "description": "ID of the tenant to which the transaction belongs",
            "example": "1bcb487e-f409-4438-a358-d8d128581761",
            "type": "string"
          },
          "user": {
            "description": "ID of the user to whom the transaction belongs",
            "example": "624ca509-b0f2-42f6-b202-8de20e9ed12a",
            "type": "string"
          },
          "valueDatetime": {
            "description": "Date the transaction was booked in yyyy-mm-dd HH:MM:SS format.",
            "example": "2020-01-15 09:00:00",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "amount",
          "noteToPayee",
          "postingDatetime",
          "product",
          "provider",
          "tenant",
          "user"
        ],
        "type": "object"
      },
      "transaction_tags_schema": {
        "properties": {
          "businessPartner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tag_instance_schema"
              }
            ],
            "description": "The business partner tag assigned to the transaction"
          },
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tag_instance_schema"
              }
            ],
            "description": "The categorization tag assigned to the transaction"
          },
          "insurance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tag_instance_schema"
              }
            ],
            "description": "The insurance tag assigned to the transaction"
          }
        },
        "type": "object"
      },
      "transactions_and_tag_tree_items_schema": {
        "properties": {
          "tagTreeItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tag_tree_item_input_schema"
              }
            ],
            "description": "New tag tree item to use for re-categorization"
          },
          "tagTreeItems": {
            "description": "List of tag tree items",
            "items": {
              "$ref": "#/components/schemas/tag_tree_item_input_schema"
            },
            "type": "array"
          },
          "transactions": {
            "description": "List of transactions",
            "items": {
              "$ref": "#/components/schemas/transaction_schema"
            },
            "type": "array"
          }
        },
        "required": [
          "transactions"
        ],
        "type": "object"
      },
      "user_rule_input_schema": {
        "properties": {
          "counterpartyIban": {
            "description": "IBAN of the counterparty",
            "example": "DE75512108001245126199",
            "type": "string"
          },
          "counterpartyName": {
            "description": "Name of the counterparty",
            "example": "ALLIANZ LV",
            "type": "string"
          },
          "tagTreeItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tag_tree_item_input_schema"
              }
            ],
            "description": "tag tree item to use for custom categorization"
          },
          "tenant": {
            "description": "ID of the tenant",
            "example": "1bcb487e-f409-4438-a358-d8d128581761",
            "type": "string"
          },
          "user": {
            "description": "ID of the user",
            "example": "624ca509-b0f2-42f6-b202-8de20e9ed12a",
            "type": "string"
          }
        },
        "required": [
          "counterpartyIban",
          "counterpartyName",
          "tagTreeItem",
          "tenant",
          "user"
        ],
        "type": "object"
      },
      "user_rule_schema": {
        "example": {
          "counterpartyIban": "DE42500105174896827935",
          "counterpartyName": "M√ºller Drogerie",
          "id": "008a423d-ab1a-3785-17ff-d66e45b97f22",
          "tagTreeItem": {
            "description": "Payments from grocery shopping",
            "displayName": "Lebensmittel",
            "systemId": 67,
            "systemName": "LIVING_GROCERIES",
            "systemNameParent": "LIVING",
            "tagTree": {
              "description": "Two level categorization tree.",
              "displayName": "Kategorien",
              "isTenantGenerated": false,
              "systemId": 1,
              "systemName": "CATEGORIES",
              "version": 3.71
            }
          },
          "user": "0e3cb7d1-f17e-3924-4d78a-21d3590dfe58"
        },
        "properties": {
          "counterpartyIban": {
            "description": "IBAN of the counterparty",
            "example": "DE75512108001245126199",
            "type": "string"
          },
          "counterpartyName": {
            "description": "Name of the counterparty",
            "example": "ALLIANZ LV",
            "type": "string"
          },
          "id": {
            "description": "ID of the rule",
            "example": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
            "type": "string"
          },
          "tagTreeItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tag_tree_item_schema"
              }
            ],
            "description": "tag tree item to use for custom categorization"
          },
          "tenant": {
            "description": "ID of the tenant",
            "example": "1bcb487e-f409-4438-a358-d8d128581761",
            "type": "string"
          },
          "user": {
            "description": "ID of the user",
            "example": "624ca509-b0f2-42f6-b202-8de20e9ed12a",
            "type": "string"
          }
        },
        "required": [
          "counterpartyIban",
          "counterpartyName",
          "id",
          "tagTreeItem",
          "tenant",
          "user"
        ],
        "type": "object"
      },
      "user_schema": {
        "properties": {
          "bankProducts": {
            "description": "List of bank products",
            "items": {
              "$ref": "#/components/schemas/bank_product_schema"
            },
            "type": "array"
          },
          "investments": {
            "description": "List of investments",
            "items": {
              "$ref": "#/components/schemas/investment_schema"
            },
            "type": "array"
          },
          "transactions": {
            "description": "List of transactions",
            "items": {
              "$ref": "#/components/schemas/transaction_schema"
            },
            "type": "array"
          }
        },
        "required": [
          "transactions"
        ],
        "type": "object"
      },
      "v1_input": {
        "properties": {
          "transactions": {
            "description": "List of transaction",
            "items": {
              "$ref": "#/components/schemas/v1_transaction"
            },
            "type": "array"
          }
        },
        "required": [
          "transactions"
        ],
        "type": "object"
      },
      "v1_output": {
        "properties": {
          "betrag": {
            "description": "Amount in Euros",
            "example": -3.94,
            "type": "number"
          },
          "buchungsdatum": {
            "description": "Date the transaction was initiated in yyyy-mm-dd HH:MM format",
            "example": "2020-03-01 10:00",
            "type": "string"
          },
          "buchungstext": {
            "description": "Text entered during posting",
            "example": "Lastschrift",
            "type": "string"
          },
          "gegenkontoBic": {
            "description": "BIC of the counterparty",
            "example": "PBNKDEFF",
            "type": "string"
          },
          "gegenkontoIban": {
            "description": "IBAN of the counterparty",
            "example": "DE75512108001245126199",
            "type": "string"
          },
          "gegenkontoInhaber": {
            "description": "Name of the counterparty",
            "example": "Erika Musterfrau",
            "type": "string"
          },
          "gvCode": {
            "description": "SEPA GV Code (Gesch√§ftsvorfallcode)",
            "example": "082",
            "type": "string"
          },
          "hash": {
            "description": "Hash value for historical ordering",
            "example": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
            "type": "string"
          },
          "id": {
            "description": "Unique Universal Identifier (UUID)",
            "example": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
            "type": "string"
          },
          "primanotaNummer": {
            "description": "Id used by the bank",
            "example": "999001",
            "type": "string"
          },
          "product": {
            "description": "Account which the transaction is associated with",
            "example": "30cc4587-7e5f-450f-bb51-dc3829f67db4",
            "type": "string"
          },
          "provider": {
            "description": "Id of the bank",
            "example": "23d67ff8-ff6a-44ff-93da-f2af835394e4",
            "type": "string"
          },
          "tags": {
            "description": "List of tags of the transaction",
            "items": {
              "$ref": "#/components/schemas/v1_tag"
            },
            "type": "array"
          },
          "tenant": {
            "description": "Tenant ID to which the transaction belongs",
            "example": "1bcb487e-f409-4438-a358-d8d128581761",
            "type": "string"
          },
          "user": {
            "description": "Universally Unique Identifier of the user",
            "example": "624ca509-b0f2-42f6-b202-8de20e9ed12a",
            "type": "string"
          },
          "verwendungszweck": {
            "description": "Text entered during posting",
            "example": "Miete 2020 03 Wohnung 123 Bahnhofsstra√üe 1",
            "type": "string"
          },
          "wertstellungsdatum": {
            "description": "Financial booking date in in yyyy-mm-dd HH:MM format.",
            "example": "2020-03-01 10:00",
            "type": "string"
          }
        },
        "required": [
          "betrag",
          "buchungsdatum",
          "id",
          "product",
          "provider",
          "tenant",
          "user",
          "verwendungszweck"
        ],
        "type": "object"
      },
      "v1_tag": {
        "properties": {
          "category": {
            "description": "Unique name used by the API, similar to systemId.",
            "example": "LIVING_GROCERIES",
            "type": "string"
          },
          "confidenceLevel": {
            "description": "Probability that the tag is correct.",
            "example": 0.95,
            "maximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "displayName": {
            "description": "User friendly local name.",
            "example": "Lebensmittel",
            "type": "string"
          },
          "parent": {
            "description": "systemName of the tag's parent.",
            "example": "LIVING",
            "type": "string"
          },
          "parentCategory": {
            "description": "systemName of the tag's parent.",
            "example": "LIVING",
            "type": "string"
          },
          "systemName": {
            "description": "Unique name used by the API, similar to systemId.",
            "example": "LIVING_GROCERIES",
            "type": "string"
          },
          "tagId": {
            "description": "Unique Universal Identifier (UUID)",
            "example": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
            "type": "string"
          },
          "tagScope": {
            "default": "transaction",
            "description": "Object of the tag, user or transaction",
            "example": "transaction",
            "type": "string"
          },
          "tagType": {
            "default": "CATEGORY",
            "description": "Type of the tag",
            "example": "CATEGORY",
            "type": "string"
          },
          "tagVersion": {
            "description": "Version of the tag tree",
            "example": "1.5",
            "type": "string"
          }
        },
        "required": [
          "category",
          "displayName",
          "systemName",
          "tagVersion"
        ],
        "type": "object"
      },
      "v1_transaction": {
        "properties": {
          "betrag": {
            "description": "Amount in Euros",
            "example": -3.94,
            "type": "number"
          },
          "buchungsdatum": {
            "description": "Date the transaction was initiated in yyyy-mm-dd HH:MM format",
            "example": "2020-03-01 10:00",
            "type": "string"
          },
          "buchungstext": {
            "description": "Text entered during posting",
            "example": "Lastschrift",
            "type": "string"
          },
          "gegenkontoBic": {
            "description": "BIC of the counterparty",
            "example": "PBNKDEFF",
            "type": "string"
          },
          "gegenkontoIban": {
            "description": "IBAN of the counterparty",
            "example": "DE75512108001245126199",
            "type": "string"
          },
          "gegenkontoInhaber": {
            "description": "Name of the counterparty",
            "example": "Erika Musterfrau",
            "type": "string"
          },
          "gegenkontoInhaberAbweichend": {
            "description": "Name of the ultimate counterparty",
            "example": "REWE",
            "type": "string"
          },
          "gvCode": {
            "description": "SEPA GV Code (Gesch√§ftsvorfallcode)",
            "example": "082",
            "type": "string"
          },
          "hash": {
            "description": "Hash value for historical ordering",
            "example": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
            "type": "string"
          },
          "id": {
            "description": "Unique Universal Identifier (UUID)",
            "example": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
            "type": "string"
          },
          "primanotaNummer": {
            "description": "Id used by the bank",
            "example": "999001",
            "type": "string"
          },
          "product": {
            "description": "Account which the transaction is associated with",
            "example": "30cc4587-7e5f-450f-bb51-dc3829f67db4",
            "type": "string"
          },
          "provider": {
            "description": "Id of the bank",
            "example": "23d67ff8-ff6a-44ff-93da-f2af835394e4",
            "type": "string"
          },
          "tenant": {
            "description": "Tenant ID to which the transaction belongs",
            "example": "1bcb487e-f409-4438-a358-d8d128581761",
            "type": "string"
          },
          "user": {
            "description": "Universally Unique Identifier of the user",
            "example": "624ca509-b0f2-42f6-b202-8de20e9ed12a",
            "type": "string"
          },
          "verwendungszweck": {
            "description": "Text entered during posting",
            "example": "Miete 2020 03 Wohnung 123 Bahnhofsstra√üe 1",
            "type": "string"
          },
          "wertstellungsdatum": {
            "description": "Financial booking date in in yyyy-mm-dd HH:MM format.",
            "example": "2020-03-01 10:00",
            "type": "string"
          }
        },
        "required": [
          "betrag",
          "buchungsdatum",
          "id",
          "product",
          "provider",
          "tenant",
          "user",
          "verwendungszweck"
        ],
        "type": "object"
      },
      "v3_connect_put_schema": {
        "properties": {
          "tags": {
            "items": {
              "$ref": "#/components/schemas/tag_tree_item_input_schema"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "v3_output_connect_schema": {
        "properties": {
          "betrag": {
            "description": "Amount in Euros",
            "example": -3.94,
            "type": "number"
          },
          "buchungsdatum": {
            "description": "Date the transaction was initiated in yyyy-mm-dd HH:MM format",
            "example": "2020-03-01 10:00",
            "type": "string"
          },
          "buchungstext": {
            "description": "Text entered during posting",
            "example": "Lastschrift",
            "type": "string"
          },
          "gegenkontoBic": {
            "description": "BIC of the counterparty",
            "example": "PBNKDEFF",
            "type": "string"
          },
          "gegenkontoIban": {
            "description": "IBAN of the counterparty",
            "example": "DE75512108001245126199",
            "type": "string"
          },
          "gegenkontoInhaber": {
            "description": "Name of the counterparty",
            "example": "Erika Musterfrau",
            "type": "string"
          },
          "gegenkontoInhaberAbweichend": {
            "description": "Name of the ultimate counterparty",
            "example": "REWE",
            "type": "string"
          },
          "gvCode": {
            "description": "SEPA GV Code (Gesch√§ftsvorfallcode)",
            "example": "082",
            "type": "string"
          },
          "hash": {
            "description": "Hash value for historical ordering",
            "example": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
            "type": "string"
          },
          "id": {
            "description": "Unique Universal Identifier (UUID)",
            "example": "956ca508-c0e2-52c5-3202-8de20e7ed12b",
            "type": "string"
          },
          "primanotaNummer": {
            "description": "Id used by the bank",
            "example": "999001",
            "type": "string"
          },
          "product": {
            "description": "Account which the transaction is associated with",
            "example": "30cc4587-7e5f-450f-bb51-dc3829f67db4",
            "type": "string"
          },
          "provider": {
            "description": "Id of the bank",
            "example": "23d67ff8-ff6a-44ff-93da-f2af835394e4",
            "type": "string"
          },
          "tags": {
            "description": "List of tags of the transaction",
            "items": {
              "$ref": "#/components/schemas/tag_instance_schema"
            },
            "type": "array"
          },
          "tenant": {
            "description": "Tenant ID to which the transaction belongs",
            "example": "1bcb487e-f409-4438-a358-d8d128581761",
            "type": "string"
          },
          "user": {
            "description": "Universally Unique Identifier of the user",
            "example": "624ca509-b0f2-42f6-b202-8de20e9ed12a",
            "type": "string"
          },
          "verwendungszweck": {
            "description": "Text entered during posting",
            "example": "Miete 2020 03 Wohnung 123 Bahnhofsstra√üe 1",
            "type": "string"
          },
          "wertstellungsdatum": {
            "description": "Financial booking date in in yyyy-mm-dd HH:MM format.",
            "example": "2020-03-01 10:00",
            "type": "string"
          }
        },
        "required": [
          "betrag",
          "buchungsdatum",
          "id",
          "product",
          "provider",
          "tenant",
          "user",
          "verwendungszweck"
        ],
        "type": "object"
      }
    }
  }
}